Search.setIndex({docnames:["apidocs/qiskit_optimization","apidocs/qiskit_optimization.algorithms","apidocs/qiskit_optimization.applications","apidocs/qiskit_optimization.converters","apidocs/qiskit_optimization.problems","apidocs/qiskit_optimization.runtime","apidocs/qiskit_optimization.translators","getting_started","index","release_notes","stubs/qiskit_optimization.INFINITY","stubs/qiskit_optimization.QiskitOptimizationError","stubs/qiskit_optimization.QuadraticProgram","stubs/qiskit_optimization.QuadraticProgram.binary_var","stubs/qiskit_optimization.QuadraticProgram.binary_var_dict","stubs/qiskit_optimization.QuadraticProgram.binary_var_list","stubs/qiskit_optimization.QuadraticProgram.clear","stubs/qiskit_optimization.QuadraticProgram.continuous_var","stubs/qiskit_optimization.QuadraticProgram.continuous_var_dict","stubs/qiskit_optimization.QuadraticProgram.continuous_var_list","stubs/qiskit_optimization.QuadraticProgram.export_as_lp_string","stubs/qiskit_optimization.QuadraticProgram.from_docplex","stubs/qiskit_optimization.QuadraticProgram.from_ising","stubs/qiskit_optimization.QuadraticProgram.get_feasibility_info","stubs/qiskit_optimization.QuadraticProgram.get_linear_constraint","stubs/qiskit_optimization.QuadraticProgram.get_num_binary_vars","stubs/qiskit_optimization.QuadraticProgram.get_num_continuous_vars","stubs/qiskit_optimization.QuadraticProgram.get_num_integer_vars","stubs/qiskit_optimization.QuadraticProgram.get_num_linear_constraints","stubs/qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints","stubs/qiskit_optimization.QuadraticProgram.get_num_vars","stubs/qiskit_optimization.QuadraticProgram.get_quadratic_constraint","stubs/qiskit_optimization.QuadraticProgram.get_variable","stubs/qiskit_optimization.QuadraticProgram.integer_var","stubs/qiskit_optimization.QuadraticProgram.integer_var_dict","stubs/qiskit_optimization.QuadraticProgram.integer_var_list","stubs/qiskit_optimization.QuadraticProgram.is_feasible","stubs/qiskit_optimization.QuadraticProgram.linear_constraint","stubs/qiskit_optimization.QuadraticProgram.linear_constraints","stubs/qiskit_optimization.QuadraticProgram.linear_constraints_index","stubs/qiskit_optimization.QuadraticProgram.maximize","stubs/qiskit_optimization.QuadraticProgram.minimize","stubs/qiskit_optimization.QuadraticProgram.name","stubs/qiskit_optimization.QuadraticProgram.objective","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraint","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints_index","stubs/qiskit_optimization.QuadraticProgram.read_from_lp_file","stubs/qiskit_optimization.QuadraticProgram.remove_linear_constraint","stubs/qiskit_optimization.QuadraticProgram.remove_quadratic_constraint","stubs/qiskit_optimization.QuadraticProgram.status","stubs/qiskit_optimization.QuadraticProgram.substitute_variables","stubs/qiskit_optimization.QuadraticProgram.to_docplex","stubs/qiskit_optimization.QuadraticProgram.to_ising","stubs/qiskit_optimization.QuadraticProgram.variables","stubs/qiskit_optimization.QuadraticProgram.variables_index","stubs/qiskit_optimization.QuadraticProgram.write_to_lp_file","stubs/qiskit_optimization.algorithms.ADMMOptimizationResult","stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.state","stubs/qiskit_optimization.algorithms.ADMMOptimizer","stubs/qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.ADMMOptimizer.parameters","stubs/qiskit_optimization.algorithms.ADMMOptimizer.solve","stubs/qiskit_optimization.algorithms.ADMMParameters","stubs/qiskit_optimization.algorithms.ADMMState","stubs/qiskit_optimization.algorithms.BaseAggregator","stubs/qiskit_optimization.algorithms.BaseAggregator.aggregate","stubs/qiskit_optimization.algorithms.CobylaOptimizer","stubs/qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.CobylaOptimizer.solve","stubs/qiskit_optimization.algorithms.CplexOptimizer","stubs/qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters","stubs/qiskit_optimization.algorithms.CplexOptimizer.disp","stubs/qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed","stubs/qiskit_optimization.algorithms.CplexOptimizer.solve","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve","stubs/qiskit_optimization.algorithms.GroverOptimizationResult","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.threshold","stubs/qiskit_optimization.algorithms.GroverOptimizer","stubs/qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.GroverOptimizer.quantum_instance","stubs/qiskit_optimization.algorithms.GroverOptimizer.solve","stubs/qiskit_optimization.algorithms.GurobiOptimizer","stubs/qiskit_optimization.algorithms.GurobiOptimizer.disp","stubs/qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed","stubs/qiskit_optimization.algorithms.GurobiOptimizer.solve","stubs/qiskit_optimization.algorithms.IntermediateResult","stubs/qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS","stubs/qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION","stubs/qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS","stubs/qiskit_optimization.algorithms.MeanAggregator","stubs/qiskit_optimization.algorithms.MeanAggregator.aggregate","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.solve","stubs/qiskit_optimization.algorithms.MultiStartOptimizer","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.clip","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.trials","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.solve","stubs/qiskit_optimization.algorithms.OptimizationResult","stubs/qiskit_optimization.algorithms.OptimizationResult.__getitem__","stubs/qiskit_optimization.algorithms.OptimizationResult.fval","stubs/qiskit_optimization.algorithms.OptimizationResult.get_correlations","stubs/qiskit_optimization.algorithms.OptimizationResult.raw_results","stubs/qiskit_optimization.algorithms.OptimizationResult.samples","stubs/qiskit_optimization.algorithms.OptimizationResult.status","stubs/qiskit_optimization.algorithms.OptimizationResult.variable_names","stubs/qiskit_optimization.algorithms.OptimizationResult.variables","stubs/qiskit_optimization.algorithms.OptimizationResult.variables_dict","stubs/qiskit_optimization.algorithms.OptimizationResult.x","stubs/qiskit_optimization.algorithms.OptimizationResultStatus","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.fx","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.imode","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.its","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.smode","stubs/qiskit_optimization.algorithms.SlsqpOptimizer","stubs/qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg","stubs/qiskit_optimization.algorithms.SlsqpOptimizer.solve","stubs/qiskit_optimization.algorithms.SolutionSample","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer","stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer","stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve","stubs/qiskit_optimization.applications.Clique","stubs/qiskit_optimization.applications.Clique.interpret","stubs/qiskit_optimization.applications.Clique.size","stubs/qiskit_optimization.applications.Clique.to_quadratic_program","stubs/qiskit_optimization.applications.ExactCover","stubs/qiskit_optimization.applications.ExactCover.interpret","stubs/qiskit_optimization.applications.ExactCover.to_quadratic_program","stubs/qiskit_optimization.applications.GraphOptimizationApplication","stubs/qiskit_optimization.applications.GraphOptimizationApplication.draw","stubs/qiskit_optimization.applications.GraphOptimizationApplication.graph","stubs/qiskit_optimization.applications.GraphOptimizationApplication.random_graph","stubs/qiskit_optimization.applications.GraphPartition","stubs/qiskit_optimization.applications.GraphPartition.interpret","stubs/qiskit_optimization.applications.GraphPartition.to_quadratic_program","stubs/qiskit_optimization.applications.Knapsack","stubs/qiskit_optimization.applications.Knapsack.interpret","stubs/qiskit_optimization.applications.Knapsack.max_weight","stubs/qiskit_optimization.applications.Knapsack.to_quadratic_program","stubs/qiskit_optimization.applications.Maxcut","stubs/qiskit_optimization.applications.Maxcut.get_gset_result","stubs/qiskit_optimization.applications.Maxcut.interpret","stubs/qiskit_optimization.applications.Maxcut.parse_gset_format","stubs/qiskit_optimization.applications.Maxcut.to_quadratic_program","stubs/qiskit_optimization.applications.NumberPartition","stubs/qiskit_optimization.applications.NumberPartition.interpret","stubs/qiskit_optimization.applications.NumberPartition.to_quadratic_program","stubs/qiskit_optimization.applications.OptimizationApplication","stubs/qiskit_optimization.applications.OptimizationApplication.interpret","stubs/qiskit_optimization.applications.OptimizationApplication.sample_most_likely","stubs/qiskit_optimization.applications.OptimizationApplication.to_quadratic_program","stubs/qiskit_optimization.applications.SetPacking","stubs/qiskit_optimization.applications.SetPacking.interpret","stubs/qiskit_optimization.applications.SetPacking.to_quadratic_program","stubs/qiskit_optimization.applications.StableSet","stubs/qiskit_optimization.applications.StableSet.interpret","stubs/qiskit_optimization.applications.StableSet.to_quadratic_program","stubs/qiskit_optimization.applications.Tsp","stubs/qiskit_optimization.applications.Tsp.create_random_instance","stubs/qiskit_optimization.applications.Tsp.interpret","stubs/qiskit_optimization.applications.Tsp.parse_tsplib_format","stubs/qiskit_optimization.applications.Tsp.to_quadratic_program","stubs/qiskit_optimization.applications.Tsp.tsp_value","stubs/qiskit_optimization.applications.VehicleRouting","stubs/qiskit_optimization.applications.VehicleRouting.create_random_instance","stubs/qiskit_optimization.applications.VehicleRouting.depot","stubs/qiskit_optimization.applications.VehicleRouting.interpret","stubs/qiskit_optimization.applications.VehicleRouting.num_vehicles","stubs/qiskit_optimization.applications.VehicleRouting.to_quadratic_program","stubs/qiskit_optimization.applications.VertexCover","stubs/qiskit_optimization.applications.VertexCover.interpret","stubs/qiskit_optimization.applications.VertexCover.to_quadratic_program","stubs/qiskit_optimization.converters.InequalityToEquality","stubs/qiskit_optimization.converters.InequalityToEquality.convert","stubs/qiskit_optimization.converters.InequalityToEquality.interpret","stubs/qiskit_optimization.converters.InequalityToEquality.mode","stubs/qiskit_optimization.converters.IntegerToBinary","stubs/qiskit_optimization.converters.IntegerToBinary.convert","stubs/qiskit_optimization.converters.IntegerToBinary.interpret","stubs/qiskit_optimization.converters.LinearEqualityToPenalty","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.convert","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.interpret","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.penalty","stubs/qiskit_optimization.converters.LinearInequalityToPenalty","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.convert","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.interpret","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.penalty","stubs/qiskit_optimization.converters.MaximizeToMinimize","stubs/qiskit_optimization.converters.MinimizeToMaximize","stubs/qiskit_optimization.converters.QuadraticProgramConverter","stubs/qiskit_optimization.converters.QuadraticProgramConverter.convert","stubs/qiskit_optimization.converters.QuadraticProgramConverter.interpret","stubs/qiskit_optimization.converters.QuadraticProgramToQubo","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.convert","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.interpret","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.penalty","stubs/qiskit_optimization.problems.Constraint","stubs/qiskit_optimization.problems.Constraint.evaluate","stubs/qiskit_optimization.problems.Constraint.name","stubs/qiskit_optimization.problems.Constraint.rhs","stubs/qiskit_optimization.problems.Constraint.sense","stubs/qiskit_optimization.problems.LinearConstraint","stubs/qiskit_optimization.problems.LinearConstraint.evaluate","stubs/qiskit_optimization.problems.LinearConstraint.linear","stubs/qiskit_optimization.problems.LinearExpression","stubs/qiskit_optimization.problems.LinearExpression.__getitem__","stubs/qiskit_optimization.problems.LinearExpression.bounds","stubs/qiskit_optimization.problems.LinearExpression.coefficients","stubs/qiskit_optimization.problems.LinearExpression.evaluate","stubs/qiskit_optimization.problems.LinearExpression.evaluate_gradient","stubs/qiskit_optimization.problems.LinearExpression.to_array","stubs/qiskit_optimization.problems.LinearExpression.to_dict","stubs/qiskit_optimization.problems.QuadraticConstraint","stubs/qiskit_optimization.problems.QuadraticConstraint.evaluate","stubs/qiskit_optimization.problems.QuadraticConstraint.linear","stubs/qiskit_optimization.problems.QuadraticConstraint.quadratic","stubs/qiskit_optimization.problems.QuadraticExpression","stubs/qiskit_optimization.problems.QuadraticExpression.__getitem__","stubs/qiskit_optimization.problems.QuadraticExpression.bounds","stubs/qiskit_optimization.problems.QuadraticExpression.coefficients","stubs/qiskit_optimization.problems.QuadraticExpression.evaluate","stubs/qiskit_optimization.problems.QuadraticExpression.evaluate_gradient","stubs/qiskit_optimization.problems.QuadraticExpression.to_array","stubs/qiskit_optimization.problems.QuadraticExpression.to_dict","stubs/qiskit_optimization.problems.QuadraticObjective","stubs/qiskit_optimization.problems.QuadraticObjective.constant","stubs/qiskit_optimization.problems.QuadraticObjective.evaluate","stubs/qiskit_optimization.problems.QuadraticObjective.evaluate_gradient","stubs/qiskit_optimization.problems.QuadraticObjective.linear","stubs/qiskit_optimization.problems.QuadraticObjective.quadratic","stubs/qiskit_optimization.problems.QuadraticObjective.sense","stubs/qiskit_optimization.problems.QuadraticProgram","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var_dict","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var_list","stubs/qiskit_optimization.problems.QuadraticProgram.clear","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var_dict","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var_list","stubs/qiskit_optimization.problems.QuadraticProgram.export_as_lp_string","stubs/qiskit_optimization.problems.QuadraticProgram.from_docplex","stubs/qiskit_optimization.problems.QuadraticProgram.from_ising","stubs/qiskit_optimization.problems.QuadraticProgram.get_feasibility_info","stubs/qiskit_optimization.problems.QuadraticProgram.get_linear_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_binary_vars","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_continuous_vars","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_integer_vars","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_linear_constraints","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_quadratic_constraints","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_vars","stubs/qiskit_optimization.problems.QuadraticProgram.get_quadratic_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.get_variable","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var_dict","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var_list","stubs/qiskit_optimization.problems.QuadraticProgram.is_feasible","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraints","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraints_index","stubs/qiskit_optimization.problems.QuadraticProgram.maximize","stubs/qiskit_optimization.problems.QuadraticProgram.minimize","stubs/qiskit_optimization.problems.QuadraticProgram.name","stubs/qiskit_optimization.problems.QuadraticProgram.objective","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraints","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraints_index","stubs/qiskit_optimization.problems.QuadraticProgram.read_from_lp_file","stubs/qiskit_optimization.problems.QuadraticProgram.remove_linear_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.remove_quadratic_constraint","stubs/qiskit_optimization.problems.QuadraticProgram.status","stubs/qiskit_optimization.problems.QuadraticProgram.substitute_variables","stubs/qiskit_optimization.problems.QuadraticProgram.to_docplex","stubs/qiskit_optimization.problems.QuadraticProgram.to_ising","stubs/qiskit_optimization.problems.QuadraticProgram.variables","stubs/qiskit_optimization.problems.QuadraticProgram.variables_index","stubs/qiskit_optimization.problems.QuadraticProgram.write_to_lp_file","stubs/qiskit_optimization.problems.QuadraticProgramElement","stubs/qiskit_optimization.problems.QuadraticProgramElement.quadratic_program","stubs/qiskit_optimization.problems.Variable","stubs/qiskit_optimization.problems.Variable.as_tuple","stubs/qiskit_optimization.problems.Variable.lowerbound","stubs/qiskit_optimization.problems.Variable.name","stubs/qiskit_optimization.problems.Variable.upperbound","stubs/qiskit_optimization.problems.Variable.vartype","stubs/qiskit_optimization.runtime.QAOAProgram","stubs/qiskit_optimization.runtime.QAOAProgram.ansatz","stubs/qiskit_optimization.runtime.QAOAProgram.compute_minimum_eigenvalue","stubs/qiskit_optimization.runtime.QAOAProgram.initial_state","stubs/qiskit_optimization.runtime.QAOAProgram.mixer","stubs/qiskit_optimization.runtime.QAOAProgram.reps","stubs/qiskit_optimization.runtime.VQEProgram","stubs/qiskit_optimization.runtime.VQEProgram.ansatz","stubs/qiskit_optimization.runtime.VQEProgram.backend","stubs/qiskit_optimization.runtime.VQEProgram.callback","stubs/qiskit_optimization.runtime.VQEProgram.compute_minimum_eigenvalue","stubs/qiskit_optimization.runtime.VQEProgram.initial_point","stubs/qiskit_optimization.runtime.VQEProgram.measurement_error_mitigation","stubs/qiskit_optimization.runtime.VQEProgram.optimizer","stubs/qiskit_optimization.runtime.VQEProgram.program_id","stubs/qiskit_optimization.runtime.VQEProgram.provider","stubs/qiskit_optimization.runtime.VQEProgram.shots","stubs/qiskit_optimization.runtime.VQEProgram.store_intermediate","stubs/qiskit_optimization.runtime.VQEProgram.supports_aux_operators","stubs/qiskit_optimization.runtime.VQEProgramResult","stubs/qiskit_optimization.runtime.VQEProgramResult.job_id","stubs/qiskit_optimization.runtime.VQEProgramResult.optimizer_history","stubs/qiskit_optimization.translators.from_docplex_mp","stubs/qiskit_optimization.translators.from_gurobipy","stubs/qiskit_optimization.translators.from_ising","stubs/qiskit_optimization.translators.to_docplex_mp","stubs/qiskit_optimization.translators.to_gurobipy","stubs/qiskit_optimization.translators.to_ising","tutorials/01_quadratic_program","tutorials/02_converters_for_quadratic_programs","tutorials/03_minimum_eigen_optimizer","tutorials/04_grover_optimizer","tutorials/05_admm_optimizer","tutorials/06_examples_max_cut_and_tsp","tutorials/07_examples_vehicle_routing","tutorials/08_cvar_optimization","tutorials/09_application_classes","tutorials/10_warm_start_qaoa","tutorials/11_using_classical_optimization_solvers_and_models","tutorials/index"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.viewcode":1,nbsphinx:3,sphinx:56},filenames:["apidocs/qiskit_optimization.rst","apidocs/qiskit_optimization.algorithms.rst","apidocs/qiskit_optimization.applications.rst","apidocs/qiskit_optimization.converters.rst","apidocs/qiskit_optimization.problems.rst","apidocs/qiskit_optimization.runtime.rst","apidocs/qiskit_optimization.translators.rst","getting_started.rst","index.rst","release_notes.rst","stubs/qiskit_optimization.INFINITY.rst","stubs/qiskit_optimization.QiskitOptimizationError.rst","stubs/qiskit_optimization.QuadraticProgram.rst","stubs/qiskit_optimization.QuadraticProgram.binary_var.rst","stubs/qiskit_optimization.QuadraticProgram.binary_var_dict.rst","stubs/qiskit_optimization.QuadraticProgram.binary_var_list.rst","stubs/qiskit_optimization.QuadraticProgram.clear.rst","stubs/qiskit_optimization.QuadraticProgram.continuous_var.rst","stubs/qiskit_optimization.QuadraticProgram.continuous_var_dict.rst","stubs/qiskit_optimization.QuadraticProgram.continuous_var_list.rst","stubs/qiskit_optimization.QuadraticProgram.export_as_lp_string.rst","stubs/qiskit_optimization.QuadraticProgram.from_docplex.rst","stubs/qiskit_optimization.QuadraticProgram.from_ising.rst","stubs/qiskit_optimization.QuadraticProgram.get_feasibility_info.rst","stubs/qiskit_optimization.QuadraticProgram.get_linear_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_binary_vars.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_continuous_vars.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_integer_vars.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_linear_constraints.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints.rst","stubs/qiskit_optimization.QuadraticProgram.get_num_vars.rst","stubs/qiskit_optimization.QuadraticProgram.get_quadratic_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.get_variable.rst","stubs/qiskit_optimization.QuadraticProgram.integer_var.rst","stubs/qiskit_optimization.QuadraticProgram.integer_var_dict.rst","stubs/qiskit_optimization.QuadraticProgram.integer_var_list.rst","stubs/qiskit_optimization.QuadraticProgram.is_feasible.rst","stubs/qiskit_optimization.QuadraticProgram.linear_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.linear_constraints.rst","stubs/qiskit_optimization.QuadraticProgram.linear_constraints_index.rst","stubs/qiskit_optimization.QuadraticProgram.maximize.rst","stubs/qiskit_optimization.QuadraticProgram.minimize.rst","stubs/qiskit_optimization.QuadraticProgram.name.rst","stubs/qiskit_optimization.QuadraticProgram.objective.rst","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints.rst","stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints_index.rst","stubs/qiskit_optimization.QuadraticProgram.read_from_lp_file.rst","stubs/qiskit_optimization.QuadraticProgram.remove_linear_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.remove_quadratic_constraint.rst","stubs/qiskit_optimization.QuadraticProgram.status.rst","stubs/qiskit_optimization.QuadraticProgram.substitute_variables.rst","stubs/qiskit_optimization.QuadraticProgram.to_docplex.rst","stubs/qiskit_optimization.QuadraticProgram.to_ising.rst","stubs/qiskit_optimization.QuadraticProgram.variables.rst","stubs/qiskit_optimization.QuadraticProgram.variables_index.rst","stubs/qiskit_optimization.QuadraticProgram.write_to_lp_file.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.state.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizer.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizer.parameters.rst","stubs/qiskit_optimization.algorithms.ADMMOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.ADMMParameters.rst","stubs/qiskit_optimization.algorithms.ADMMState.rst","stubs/qiskit_optimization.algorithms.BaseAggregator.rst","stubs/qiskit_optimization.algorithms.BaseAggregator.aggregate.rst","stubs/qiskit_optimization.algorithms.CobylaOptimizer.rst","stubs/qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.CobylaOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.disp.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed.rst","stubs/qiskit_optimization.algorithms.CplexOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value.rst","stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples.rst","stubs/qiskit_optimization.algorithms.GroverOptimizationResult.threshold.rst","stubs/qiskit_optimization.algorithms.GroverOptimizer.rst","stubs/qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.GroverOptimizer.quantum_instance.rst","stubs/qiskit_optimization.algorithms.GroverOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.GurobiOptimizer.rst","stubs/qiskit_optimization.algorithms.GurobiOptimizer.disp.rst","stubs/qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed.rst","stubs/qiskit_optimization.algorithms.GurobiOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.IntermediateResult.rst","stubs/qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS.rst","stubs/qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION.rst","stubs/qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS.rst","stubs/qiskit_optimization.algorithms.MeanAggregator.rst","stubs/qiskit_optimization.algorithms.MeanAggregator.aggregate.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver.rst","stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.rst","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.clip.rst","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve.rst","stubs/qiskit_optimization.algorithms.MultiStartOptimizer.trials.rst","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.rst","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible.rst","stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.solve.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.__getitem__.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.fval.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.get_correlations.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.raw_results.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.samples.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.status.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.variable_names.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.variables.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.variables_dict.rst","stubs/qiskit_optimization.algorithms.OptimizationResult.x.rst","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.rst","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE.rst","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE.rst","stubs/qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.fx.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.imode.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.its.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.smode.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizer.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg.rst","stubs/qiskit_optimization.algorithms.SlsqpOptimizer.solve.rst","stubs/qiskit_optimization.algorithms.SolutionSample.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.rst","stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve.rst","stubs/qiskit_optimization.applications.Clique.rst","stubs/qiskit_optimization.applications.Clique.interpret.rst","stubs/qiskit_optimization.applications.Clique.size.rst","stubs/qiskit_optimization.applications.Clique.to_quadratic_program.rst","stubs/qiskit_optimization.applications.ExactCover.rst","stubs/qiskit_optimization.applications.ExactCover.interpret.rst","stubs/qiskit_optimization.applications.ExactCover.to_quadratic_program.rst","stubs/qiskit_optimization.applications.GraphOptimizationApplication.rst","stubs/qiskit_optimization.applications.GraphOptimizationApplication.draw.rst","stubs/qiskit_optimization.applications.GraphOptimizationApplication.graph.rst","stubs/qiskit_optimization.applications.GraphOptimizationApplication.random_graph.rst","stubs/qiskit_optimization.applications.GraphPartition.rst","stubs/qiskit_optimization.applications.GraphPartition.interpret.rst","stubs/qiskit_optimization.applications.GraphPartition.to_quadratic_program.rst","stubs/qiskit_optimization.applications.Knapsack.rst","stubs/qiskit_optimization.applications.Knapsack.interpret.rst","stubs/qiskit_optimization.applications.Knapsack.max_weight.rst","stubs/qiskit_optimization.applications.Knapsack.to_quadratic_program.rst","stubs/qiskit_optimization.applications.Maxcut.rst","stubs/qiskit_optimization.applications.Maxcut.get_gset_result.rst","stubs/qiskit_optimization.applications.Maxcut.interpret.rst","stubs/qiskit_optimization.applications.Maxcut.parse_gset_format.rst","stubs/qiskit_optimization.applications.Maxcut.to_quadratic_program.rst","stubs/qiskit_optimization.applications.NumberPartition.rst","stubs/qiskit_optimization.applications.NumberPartition.interpret.rst","stubs/qiskit_optimization.applications.NumberPartition.to_quadratic_program.rst","stubs/qiskit_optimization.applications.OptimizationApplication.rst","stubs/qiskit_optimization.applications.OptimizationApplication.interpret.rst","stubs/qiskit_optimization.applications.OptimizationApplication.sample_most_likely.rst","stubs/qiskit_optimization.applications.OptimizationApplication.to_quadratic_program.rst","stubs/qiskit_optimization.applications.SetPacking.rst","stubs/qiskit_optimization.applications.SetPacking.interpret.rst","stubs/qiskit_optimization.applications.SetPacking.to_quadratic_program.rst","stubs/qiskit_optimization.applications.StableSet.rst","stubs/qiskit_optimization.applications.StableSet.interpret.rst","stubs/qiskit_optimization.applications.StableSet.to_quadratic_program.rst","stubs/qiskit_optimization.applications.Tsp.rst","stubs/qiskit_optimization.applications.Tsp.create_random_instance.rst","stubs/qiskit_optimization.applications.Tsp.interpret.rst","stubs/qiskit_optimization.applications.Tsp.parse_tsplib_format.rst","stubs/qiskit_optimization.applications.Tsp.to_quadratic_program.rst","stubs/qiskit_optimization.applications.Tsp.tsp_value.rst","stubs/qiskit_optimization.applications.VehicleRouting.rst","stubs/qiskit_optimization.applications.VehicleRouting.create_random_instance.rst","stubs/qiskit_optimization.applications.VehicleRouting.depot.rst","stubs/qiskit_optimization.applications.VehicleRouting.interpret.rst","stubs/qiskit_optimization.applications.VehicleRouting.num_vehicles.rst","stubs/qiskit_optimization.applications.VehicleRouting.to_quadratic_program.rst","stubs/qiskit_optimization.applications.VertexCover.rst","stubs/qiskit_optimization.applications.VertexCover.interpret.rst","stubs/qiskit_optimization.applications.VertexCover.to_quadratic_program.rst","stubs/qiskit_optimization.converters.InequalityToEquality.rst","stubs/qiskit_optimization.converters.InequalityToEquality.convert.rst","stubs/qiskit_optimization.converters.InequalityToEquality.interpret.rst","stubs/qiskit_optimization.converters.InequalityToEquality.mode.rst","stubs/qiskit_optimization.converters.IntegerToBinary.rst","stubs/qiskit_optimization.converters.IntegerToBinary.convert.rst","stubs/qiskit_optimization.converters.IntegerToBinary.interpret.rst","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.rst","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.convert.rst","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.interpret.rst","stubs/qiskit_optimization.converters.LinearEqualityToPenalty.penalty.rst","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.rst","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.convert.rst","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.interpret.rst","stubs/qiskit_optimization.converters.LinearInequalityToPenalty.penalty.rst","stubs/qiskit_optimization.converters.MaximizeToMinimize.rst","stubs/qiskit_optimization.converters.MinimizeToMaximize.rst","stubs/qiskit_optimization.converters.QuadraticProgramConverter.rst","stubs/qiskit_optimization.converters.QuadraticProgramConverter.convert.rst","stubs/qiskit_optimization.converters.QuadraticProgramConverter.interpret.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.convert.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.interpret.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible.rst","stubs/qiskit_optimization.converters.QuadraticProgramToQubo.penalty.rst","stubs/qiskit_optimization.problems.Constraint.rst","stubs/qiskit_optimization.problems.Constraint.evaluate.rst","stubs/qiskit_optimization.problems.Constraint.name.rst","stubs/qiskit_optimization.problems.Constraint.rhs.rst","stubs/qiskit_optimization.problems.Constraint.sense.rst","stubs/qiskit_optimization.problems.LinearConstraint.rst","stubs/qiskit_optimization.problems.LinearConstraint.evaluate.rst","stubs/qiskit_optimization.problems.LinearConstraint.linear.rst","stubs/qiskit_optimization.problems.LinearExpression.rst","stubs/qiskit_optimization.problems.LinearExpression.__getitem__.rst","stubs/qiskit_optimization.problems.LinearExpression.bounds.rst","stubs/qiskit_optimization.problems.LinearExpression.coefficients.rst","stubs/qiskit_optimization.problems.LinearExpression.evaluate.rst","stubs/qiskit_optimization.problems.LinearExpression.evaluate_gradient.rst","stubs/qiskit_optimization.problems.LinearExpression.to_array.rst","stubs/qiskit_optimization.problems.LinearExpression.to_dict.rst","stubs/qiskit_optimization.problems.QuadraticConstraint.rst","stubs/qiskit_optimization.problems.QuadraticConstraint.evaluate.rst","stubs/qiskit_optimization.problems.QuadraticConstraint.linear.rst","stubs/qiskit_optimization.problems.QuadraticConstraint.quadratic.rst","stubs/qiskit_optimization.problems.QuadraticExpression.rst","stubs/qiskit_optimization.problems.QuadraticExpression.__getitem__.rst","stubs/qiskit_optimization.problems.QuadraticExpression.bounds.rst","stubs/qiskit_optimization.problems.QuadraticExpression.coefficients.rst","stubs/qiskit_optimization.problems.QuadraticExpression.evaluate.rst","stubs/qiskit_optimization.problems.QuadraticExpression.evaluate_gradient.rst","stubs/qiskit_optimization.problems.QuadraticExpression.to_array.rst","stubs/qiskit_optimization.problems.QuadraticExpression.to_dict.rst","stubs/qiskit_optimization.problems.QuadraticObjective.rst","stubs/qiskit_optimization.problems.QuadraticObjective.constant.rst","stubs/qiskit_optimization.problems.QuadraticObjective.evaluate.rst","stubs/qiskit_optimization.problems.QuadraticObjective.evaluate_gradient.rst","stubs/qiskit_optimization.problems.QuadraticObjective.linear.rst","stubs/qiskit_optimization.problems.QuadraticObjective.quadratic.rst","stubs/qiskit_optimization.problems.QuadraticObjective.sense.rst","stubs/qiskit_optimization.problems.QuadraticProgram.rst","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var.rst","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var_dict.rst","stubs/qiskit_optimization.problems.QuadraticProgram.binary_var_list.rst","stubs/qiskit_optimization.problems.QuadraticProgram.clear.rst","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var.rst","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var_dict.rst","stubs/qiskit_optimization.problems.QuadraticProgram.continuous_var_list.rst","stubs/qiskit_optimization.problems.QuadraticProgram.export_as_lp_string.rst","stubs/qiskit_optimization.problems.QuadraticProgram.from_docplex.rst","stubs/qiskit_optimization.problems.QuadraticProgram.from_ising.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_feasibility_info.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_linear_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_binary_vars.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_continuous_vars.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_integer_vars.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_linear_constraints.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_quadratic_constraints.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_num_vars.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_quadratic_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.get_variable.rst","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var.rst","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var_dict.rst","stubs/qiskit_optimization.problems.QuadraticProgram.integer_var_list.rst","stubs/qiskit_optimization.problems.QuadraticProgram.is_feasible.rst","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraints.rst","stubs/qiskit_optimization.problems.QuadraticProgram.linear_constraints_index.rst","stubs/qiskit_optimization.problems.QuadraticProgram.maximize.rst","stubs/qiskit_optimization.problems.QuadraticProgram.minimize.rst","stubs/qiskit_optimization.problems.QuadraticProgram.name.rst","stubs/qiskit_optimization.problems.QuadraticProgram.objective.rst","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraints.rst","stubs/qiskit_optimization.problems.QuadraticProgram.quadratic_constraints_index.rst","stubs/qiskit_optimization.problems.QuadraticProgram.read_from_lp_file.rst","stubs/qiskit_optimization.problems.QuadraticProgram.remove_linear_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.remove_quadratic_constraint.rst","stubs/qiskit_optimization.problems.QuadraticProgram.status.rst","stubs/qiskit_optimization.problems.QuadraticProgram.substitute_variables.rst","stubs/qiskit_optimization.problems.QuadraticProgram.to_docplex.rst","stubs/qiskit_optimization.problems.QuadraticProgram.to_ising.rst","stubs/qiskit_optimization.problems.QuadraticProgram.variables.rst","stubs/qiskit_optimization.problems.QuadraticProgram.variables_index.rst","stubs/qiskit_optimization.problems.QuadraticProgram.write_to_lp_file.rst","stubs/qiskit_optimization.problems.QuadraticProgramElement.rst","stubs/qiskit_optimization.problems.QuadraticProgramElement.quadratic_program.rst","stubs/qiskit_optimization.problems.Variable.rst","stubs/qiskit_optimization.problems.Variable.as_tuple.rst","stubs/qiskit_optimization.problems.Variable.lowerbound.rst","stubs/qiskit_optimization.problems.Variable.name.rst","stubs/qiskit_optimization.problems.Variable.upperbound.rst","stubs/qiskit_optimization.problems.Variable.vartype.rst","stubs/qiskit_optimization.runtime.QAOAProgram.rst","stubs/qiskit_optimization.runtime.QAOAProgram.ansatz.rst","stubs/qiskit_optimization.runtime.QAOAProgram.compute_minimum_eigenvalue.rst","stubs/qiskit_optimization.runtime.QAOAProgram.initial_state.rst","stubs/qiskit_optimization.runtime.QAOAProgram.mixer.rst","stubs/qiskit_optimization.runtime.QAOAProgram.reps.rst","stubs/qiskit_optimization.runtime.VQEProgram.rst","stubs/qiskit_optimization.runtime.VQEProgram.ansatz.rst","stubs/qiskit_optimization.runtime.VQEProgram.backend.rst","stubs/qiskit_optimization.runtime.VQEProgram.callback.rst","stubs/qiskit_optimization.runtime.VQEProgram.compute_minimum_eigenvalue.rst","stubs/qiskit_optimization.runtime.VQEProgram.initial_point.rst","stubs/qiskit_optimization.runtime.VQEProgram.measurement_error_mitigation.rst","stubs/qiskit_optimization.runtime.VQEProgram.optimizer.rst","stubs/qiskit_optimization.runtime.VQEProgram.program_id.rst","stubs/qiskit_optimization.runtime.VQEProgram.provider.rst","stubs/qiskit_optimization.runtime.VQEProgram.shots.rst","stubs/qiskit_optimization.runtime.VQEProgram.store_intermediate.rst","stubs/qiskit_optimization.runtime.VQEProgram.supports_aux_operators.rst","stubs/qiskit_optimization.runtime.VQEProgramResult.rst","stubs/qiskit_optimization.runtime.VQEProgramResult.job_id.rst","stubs/qiskit_optimization.runtime.VQEProgramResult.optimizer_history.rst","stubs/qiskit_optimization.translators.from_docplex_mp.rst","stubs/qiskit_optimization.translators.from_gurobipy.rst","stubs/qiskit_optimization.translators.from_ising.rst","stubs/qiskit_optimization.translators.to_docplex_mp.rst","stubs/qiskit_optimization.translators.to_gurobipy.rst","stubs/qiskit_optimization.translators.to_ising.rst","tutorials/01_quadratic_program.ipynb","tutorials/02_converters_for_quadratic_programs.ipynb","tutorials/03_minimum_eigen_optimizer.ipynb","tutorials/04_grover_optimizer.ipynb","tutorials/05_admm_optimizer.ipynb","tutorials/06_examples_max_cut_and_tsp.ipynb","tutorials/07_examples_vehicle_routing.ipynb","tutorials/08_cvar_optimization.ipynb","tutorials/09_application_classes.ipynb","tutorials/10_warm_start_qaoa.ipynb","tutorials/11_using_classical_optimization_solvers_and_models.ipynb","tutorials/index.rst"],objects:{"":{qiskit_optimization:[0,0,0,"-"]},"qiskit_optimization.QiskitOptimizationError":{with_traceback:[11,3,1,""]},"qiskit_optimization.QuadraticProgram":{binary_var:[13,3,1,""],binary_var_dict:[14,3,1,""],binary_var_list:[15,3,1,""],clear:[16,3,1,""],continuous_var:[17,3,1,""],continuous_var_dict:[18,3,1,""],continuous_var_list:[19,3,1,""],export_as_lp_string:[20,3,1,""],from_docplex:[21,3,1,""],from_ising:[22,3,1,""],get_feasibility_info:[23,3,1,""],get_linear_constraint:[24,3,1,""],get_num_binary_vars:[25,3,1,""],get_num_continuous_vars:[26,3,1,""],get_num_integer_vars:[27,3,1,""],get_num_linear_constraints:[28,3,1,""],get_num_quadratic_constraints:[29,3,1,""],get_num_vars:[30,3,1,""],get_quadratic_constraint:[31,3,1,""],get_variable:[32,3,1,""],integer_var:[33,3,1,""],integer_var_dict:[34,3,1,""],integer_var_list:[35,3,1,""],is_feasible:[36,3,1,""],linear_constraint:[37,3,1,""],linear_constraints:[38,3,1,""],linear_constraints_index:[39,3,1,""],maximize:[40,3,1,""],minimize:[41,3,1,""],name:[42,3,1,""],objective:[43,3,1,""],quadratic_constraint:[44,3,1,""],quadratic_constraints:[45,3,1,""],quadratic_constraints_index:[46,3,1,""],read_from_lp_file:[47,3,1,""],remove_linear_constraint:[48,3,1,""],remove_quadratic_constraint:[49,3,1,""],status:[50,3,1,""],substitute_variables:[51,3,1,""],to_docplex:[52,3,1,""],to_ising:[53,3,1,""],variables:[54,3,1,""],variables_index:[55,3,1,""],write_to_lp_file:[56,3,1,""]},"qiskit_optimization.algorithms":{ADMMOptimizationResult:[57,4,1,""],ADMMOptimizer:[59,4,1,""],ADMMParameters:[63,4,1,""],ADMMState:[64,4,1,""],BaseAggregator:[65,4,1,""],CobylaOptimizer:[67,4,1,""],CplexOptimizer:[70,4,1,""],GoemansWilliamsonOptimizationResult:[76,4,1,""],GoemansWilliamsonOptimizer:[78,4,1,""],GroverOptimizationResult:[82,4,1,""],GroverOptimizer:[89,4,1,""],GurobiOptimizer:[93,4,1,""],IntermediateResult:[98,4,1,""],MeanAggregator:[102,4,1,""],MinimumEigenOptimizationResult:[104,4,1,""],MinimumEigenOptimizer:[107,4,1,""],MultiStartOptimizer:[111,4,1,""],OptimizationAlgorithm:[115,4,1,""],OptimizationResult:[119,4,1,""],OptimizationResultStatus:[130,4,1,""],RecursiveMinimumEigenOptimizationResult:[134,4,1,""],RecursiveMinimumEigenOptimizer:[137,4,1,""],SlsqpOptimizationResult:[140,4,1,""],SlsqpOptimizer:[145,4,1,""],SolutionSample:[148,4,1,""],WarmStartQAOAFactory:[149,4,1,""],WarmStartQAOAOptimizer:[153,4,1,""]},"qiskit_optimization.algorithms.ADMMOptimizationResult":{state:[58,3,1,""]},"qiskit_optimization.algorithms.ADMMOptimizer":{get_compatibility_msg:[60,3,1,""],parameters:[61,3,1,""],solve:[62,3,1,""]},"qiskit_optimization.algorithms.BaseAggregator":{aggregate:[66,3,1,""]},"qiskit_optimization.algorithms.CobylaOptimizer":{get_compatibility_msg:[68,3,1,""],solve:[69,3,1,""]},"qiskit_optimization.algorithms.CplexOptimizer":{cplex_parameters:[71,3,1,""],disp:[72,3,1,""],get_compatibility_msg:[73,3,1,""],is_cplex_installed:[74,3,1,""],solve:[75,3,1,""]},"qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult":{sdp_solution:[77,3,1,""]},"qiskit_optimization.algorithms.GoemansWilliamsonOptimizer":{get_compatibility_msg:[79,3,1,""],max_cut_value:[80,3,1,""],solve:[81,3,1,""]},"qiskit_optimization.algorithms.GroverOptimizationResult":{intermediate_fval:[83,3,1,""],n_input_qubits:[84,3,1,""],n_output_qubits:[85,3,1,""],operation_counts:[86,3,1,""],raw_samples:[87,3,1,""],threshold:[88,3,1,""]},"qiskit_optimization.algorithms.GroverOptimizer":{get_compatibility_msg:[90,3,1,""],quantum_instance:[91,3,1,""],solve:[92,3,1,""]},"qiskit_optimization.algorithms.GurobiOptimizer":{disp:[94,3,1,""],get_compatibility_msg:[95,3,1,""],is_gurobi_installed:[96,3,1,""],solve:[97,3,1,""]},"qiskit_optimization.algorithms.IntermediateResult":{ALL_ITERATIONS:[99,5,1,""],LAST_ITERATION:[100,5,1,""],NO_ITERATIONS:[101,5,1,""]},"qiskit_optimization.algorithms.MeanAggregator":{aggregate:[103,3,1,""]},"qiskit_optimization.algorithms.MinimumEigenOptimizationResult":{min_eigen_solver_result:[105,3,1,""],raw_samples:[106,3,1,""]},"qiskit_optimization.algorithms.MinimumEigenOptimizer":{get_compatibility_msg:[108,3,1,""],min_eigen_solver:[109,3,1,""],solve:[110,3,1,""]},"qiskit_optimization.algorithms.MultiStartOptimizer":{clip:[112,3,1,""],multi_start_solve:[113,3,1,""],trials:[114,3,1,""]},"qiskit_optimization.algorithms.OptimizationAlgorithm":{get_compatibility_msg:[116,3,1,""],is_compatible:[117,3,1,""],solve:[118,3,1,""]},"qiskit_optimization.algorithms.OptimizationResult":{__getitem__:[120,3,1,""],fval:[121,3,1,""],get_correlations:[122,3,1,""],raw_results:[123,3,1,""],samples:[124,3,1,""],status:[125,3,1,""],variable_names:[126,3,1,""],variables:[127,3,1,""],variables_dict:[128,3,1,""],x:[129,3,1,""]},"qiskit_optimization.algorithms.OptimizationResultStatus":{FAILURE:[131,5,1,""],INFEASIBLE:[132,5,1,""],SUCCESS:[133,5,1,""]},"qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult":{history:[135,3,1,""],replacements:[136,3,1,""]},"qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer":{get_compatibility_msg:[138,3,1,""],solve:[139,3,1,""]},"qiskit_optimization.algorithms.SlsqpOptimizationResult":{fx:[141,3,1,""],imode:[142,3,1,""],its:[143,3,1,""],smode:[144,3,1,""]},"qiskit_optimization.algorithms.SlsqpOptimizer":{get_compatibility_msg:[146,3,1,""],solve:[147,3,1,""]},"qiskit_optimization.algorithms.SolutionSample":{fval:[148,5,1,""],probability:[148,5,1,""],status:[148,5,1,""],x:[148,5,1,""]},"qiskit_optimization.algorithms.WarmStartQAOAFactory":{create_initial_state:[150,3,1,""],create_initial_variables:[151,3,1,""],create_mixer:[152,3,1,""]},"qiskit_optimization.algorithms.WarmStartQAOAOptimizer":{solve:[154,3,1,""]},"qiskit_optimization.applications":{Clique:[155,4,1,""],ExactCover:[159,4,1,""],GraphOptimizationApplication:[162,4,1,""],GraphPartition:[166,4,1,""],Knapsack:[169,4,1,""],Maxcut:[173,4,1,""],NumberPartition:[178,4,1,""],OptimizationApplication:[181,4,1,""],SetPacking:[185,4,1,""],StableSet:[188,4,1,""],Tsp:[191,4,1,""],VehicleRouting:[197,4,1,""],VertexCover:[203,4,1,""]},"qiskit_optimization.applications.Clique":{interpret:[156,3,1,""],size:[157,3,1,""],to_quadratic_program:[158,3,1,""]},"qiskit_optimization.applications.ExactCover":{interpret:[160,3,1,""],to_quadratic_program:[161,3,1,""]},"qiskit_optimization.applications.GraphOptimizationApplication":{draw:[163,3,1,""],graph:[164,3,1,""],random_graph:[165,3,1,""]},"qiskit_optimization.applications.GraphPartition":{interpret:[167,3,1,""],to_quadratic_program:[168,3,1,""]},"qiskit_optimization.applications.Knapsack":{interpret:[170,3,1,""],max_weight:[171,3,1,""],to_quadratic_program:[172,3,1,""]},"qiskit_optimization.applications.Maxcut":{get_gset_result:[174,3,1,""],interpret:[175,3,1,""],parse_gset_format:[176,3,1,""],to_quadratic_program:[177,3,1,""]},"qiskit_optimization.applications.NumberPartition":{interpret:[179,3,1,""],to_quadratic_program:[180,3,1,""]},"qiskit_optimization.applications.OptimizationApplication":{interpret:[182,3,1,""],sample_most_likely:[183,3,1,""],to_quadratic_program:[184,3,1,""]},"qiskit_optimization.applications.SetPacking":{interpret:[186,3,1,""],to_quadratic_program:[187,3,1,""]},"qiskit_optimization.applications.StableSet":{interpret:[189,3,1,""],to_quadratic_program:[190,3,1,""]},"qiskit_optimization.applications.Tsp":{create_random_instance:[192,3,1,""],interpret:[193,3,1,""],parse_tsplib_format:[194,3,1,""],to_quadratic_program:[195,3,1,""],tsp_value:[196,3,1,""]},"qiskit_optimization.applications.VehicleRouting":{create_random_instance:[198,3,1,""],depot:[199,3,1,""],interpret:[200,3,1,""],num_vehicles:[201,3,1,""],to_quadratic_program:[202,3,1,""]},"qiskit_optimization.applications.VertexCover":{interpret:[204,3,1,""],to_quadratic_program:[205,3,1,""]},"qiskit_optimization.converters":{InequalityToEquality:[206,4,1,""],IntegerToBinary:[210,4,1,""],LinearEqualityToPenalty:[213,4,1,""],LinearInequalityToPenalty:[217,4,1,""],MaximizeToMinimize:[221,4,1,""],MinimizeToMaximize:[222,4,1,""],QuadraticProgramConverter:[223,4,1,""],QuadraticProgramToQubo:[226,4,1,""]},"qiskit_optimization.converters.InequalityToEquality":{convert:[207,3,1,""],interpret:[208,3,1,""],mode:[209,3,1,""]},"qiskit_optimization.converters.IntegerToBinary":{convert:[211,3,1,""],interpret:[212,3,1,""]},"qiskit_optimization.converters.LinearEqualityToPenalty":{convert:[214,3,1,""],interpret:[215,3,1,""],penalty:[216,3,1,""]},"qiskit_optimization.converters.LinearInequalityToPenalty":{convert:[218,3,1,""],interpret:[219,3,1,""],penalty:[220,3,1,""]},"qiskit_optimization.converters.QuadraticProgramConverter":{convert:[224,3,1,""],interpret:[225,3,1,""]},"qiskit_optimization.converters.QuadraticProgramToQubo":{convert:[227,3,1,""],get_compatibility_msg:[228,3,1,""],interpret:[229,3,1,""],is_compatible:[230,3,1,""],penalty:[231,3,1,""]},"qiskit_optimization.problems":{Constraint:[232,4,1,""],LinearConstraint:[237,4,1,""],LinearExpression:[240,4,1,""],QuadraticConstraint:[248,4,1,""],QuadraticExpression:[252,4,1,""],QuadraticObjective:[260,4,1,""],QuadraticProgram:[267,4,1,""],QuadraticProgramElement:[312,4,1,""],Variable:[314,4,1,""]},"qiskit_optimization.problems.Constraint":{evaluate:[233,3,1,""],name:[234,3,1,""],rhs:[235,3,1,""],sense:[236,3,1,""]},"qiskit_optimization.problems.LinearConstraint":{evaluate:[238,3,1,""],linear:[239,3,1,""]},"qiskit_optimization.problems.LinearExpression":{__getitem__:[241,3,1,""],bounds:[242,3,1,""],coefficients:[243,3,1,""],evaluate:[244,3,1,""],evaluate_gradient:[245,3,1,""],to_array:[246,3,1,""],to_dict:[247,3,1,""]},"qiskit_optimization.problems.QuadraticConstraint":{evaluate:[249,3,1,""],linear:[250,3,1,""],quadratic:[251,3,1,""]},"qiskit_optimization.problems.QuadraticExpression":{__getitem__:[253,3,1,""],bounds:[254,3,1,""],coefficients:[255,3,1,""],evaluate:[256,3,1,""],evaluate_gradient:[257,3,1,""],to_array:[258,3,1,""],to_dict:[259,3,1,""]},"qiskit_optimization.problems.QuadraticObjective":{constant:[261,3,1,""],evaluate:[262,3,1,""],evaluate_gradient:[263,3,1,""],linear:[264,3,1,""],quadratic:[265,3,1,""],sense:[266,3,1,""]},"qiskit_optimization.problems.QuadraticProgram":{binary_var:[268,3,1,""],binary_var_dict:[269,3,1,""],binary_var_list:[270,3,1,""],clear:[271,3,1,""],continuous_var:[272,3,1,""],continuous_var_dict:[273,3,1,""],continuous_var_list:[274,3,1,""],export_as_lp_string:[275,3,1,""],from_docplex:[276,3,1,""],from_ising:[277,3,1,""],get_feasibility_info:[278,3,1,""],get_linear_constraint:[279,3,1,""],get_num_binary_vars:[280,3,1,""],get_num_continuous_vars:[281,3,1,""],get_num_integer_vars:[282,3,1,""],get_num_linear_constraints:[283,3,1,""],get_num_quadratic_constraints:[284,3,1,""],get_num_vars:[285,3,1,""],get_quadratic_constraint:[286,3,1,""],get_variable:[287,3,1,""],integer_var:[288,3,1,""],integer_var_dict:[289,3,1,""],integer_var_list:[290,3,1,""],is_feasible:[291,3,1,""],linear_constraint:[292,3,1,""],linear_constraints:[293,3,1,""],linear_constraints_index:[294,3,1,""],maximize:[295,3,1,""],minimize:[296,3,1,""],name:[297,3,1,""],objective:[298,3,1,""],quadratic_constraint:[299,3,1,""],quadratic_constraints:[300,3,1,""],quadratic_constraints_index:[301,3,1,""],read_from_lp_file:[302,3,1,""],remove_linear_constraint:[303,3,1,""],remove_quadratic_constraint:[304,3,1,""],status:[305,3,1,""],substitute_variables:[306,3,1,""],to_docplex:[307,3,1,""],to_ising:[308,3,1,""],variables:[309,3,1,""],variables_index:[310,3,1,""],write_to_lp_file:[311,3,1,""]},"qiskit_optimization.problems.QuadraticProgramElement":{quadratic_program:[313,3,1,""]},"qiskit_optimization.problems.Variable":{as_tuple:[315,3,1,""],lowerbound:[316,3,1,""],name:[317,3,1,""],upperbound:[318,3,1,""],vartype:[319,3,1,""]},"qiskit_optimization.runtime":{QAOAProgram:[320,4,1,""],VQEProgram:[326,4,1,""],VQEProgramResult:[339,4,1,""]},"qiskit_optimization.runtime.QAOAProgram":{ansatz:[321,3,1,""],compute_minimum_eigenvalue:[322,3,1,""],initial_state:[323,3,1,""],mixer:[324,3,1,""],reps:[325,3,1,""]},"qiskit_optimization.runtime.VQEProgram":{ansatz:[327,3,1,""],backend:[328,3,1,""],callback:[329,3,1,""],compute_minimum_eigenvalue:[330,3,1,""],initial_point:[331,3,1,""],measurement_error_mitigation:[332,3,1,""],optimizer:[333,3,1,""],program_id:[334,3,1,""],provider:[335,3,1,""],shots:[336,3,1,""],store_intermediate:[337,3,1,""],supports_aux_operators:[338,3,1,""]},"qiskit_optimization.runtime.VQEProgramResult":{job_id:[340,3,1,""],optimizer_history:[341,3,1,""]},"qiskit_optimization.translators":{from_docplex_mp:[342,6,1,""],from_gurobipy:[343,6,1,""],from_ising:[344,6,1,""],to_docplex_mp:[345,6,1,""],to_gurobipy:[346,6,1,""],to_ising:[347,6,1,""]},qiskit_optimization:{INFINITY:[10,1,1,""],QiskitOptimizationError:[11,2,1,""],QuadraticProgram:[12,4,1,""],algorithms:[1,0,0,"-"],applications:[2,0,0,"-"],converters:[3,0,0,"-"],problems:[4,0,0,"-"],runtime:[5,0,0,"-"],translators:[6,0,0,"-"]}},objnames:{"0":["py","module","Python \u043c\u043e\u0434\u0443\u043b\u044c"],"1":["py","data","Python \u0434\u0430\u043d\u043d\u044b\u0435"],"2":["py","exception","Python \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"],"3":["py","method","Python \u043c\u0435\u0442\u043e\u0434"],"4":["py","class","Python \u043a\u043b\u0430\u0441\u0441"],"5":["py","attribute","Python \u0430\u0442\u0440\u0438\u0431\u0443\u0442"],"6":["py","function","Python \u0444\u0443\u043d\u043a\u0446\u0438\u044f"]},objtypes:{"0":"py:module","1":"py:data","2":"py:exception","3":"py:method","4":"py:class","5":"py:attribute","6":"py:function"},terms:{"0000":355,"000000":358,"0001":[63,67],"000111":357,"0002":67,"0007":355,"001011":357,"001110":357,"0020045":357,"005":350,"0058183ibm":[348,349,351,352,354,355],"00670929":357,"00768914":357,"0082":355,"00839765":357,"00904119":357,"0094":355,"00945322":357,"010011":357,"010110":357,"01016793":357,"011010":357,"01205502568274":357,"013":357,"0147937":357,"016036000000":357,"01945":[210,349],"01_quadratic_program":348,"02069":[59,352],"0216140747070312":356,"022309":353,"02307313":357,"024999999999999994":358,"027391640000":357,"02_converters_for_quadratic_programs":349,"03043424":357,"03489":320,"03740115":357,"03_minimum_eigen_optimizer":350,"04088":351,"04_grover_optimizer":351,"05249785":357,"053674320000":357,"056136960000":357,"05_admm_optimizer":352,"061513120000":357,"06199":353,"067181200000":357,"06842969":357,"06_examples_max_cut_and_tsp":353,"071509e":353,"072329520000":357,"0733":355,"075625760000":357,"07616951":357,"07978412":357,"07999999999999999":358,"07_examples_vehicle_routing":354,"081343440000":357,"08464544":357,"08980":[137,350],"08_cvar_optimization":355,"0913":357,"091300000000":357,"0922":355,"09_application_classes":356,"0aer0":353,"0aqua0":350,"0e869b4aqua0":357,"0fri":[348,349,351,352,354,355],"0ignis0":[348,349,351,352,354,355],"0qiskit":358,"0system":358,"0terra0":350,"0wed":356,"100":[67,111,145,192,198,320,326,352,354,355,358],"1000":[63,67,352,353,356,358],"10000":63,"100000":63,"10000000000000001":358,"100011":357,"1001":352,"100110":357,"10095":[153,320,357],"101":351,"101010":357,"1024":[320,326],"104":356,"1040":356,"1043":356,"10598":[350,353,354],"10922887":357,"10_warm_start_qaoa":357,"110":349,"110010":357,"11148115684045":354,"11227606":357,"1145":354,"1148":[22,53,277,308,344,347],"11538":217,"117":356,"118349600000":357,"11_using_classical_optimization_solvers_and_models":358,"1200":356,"122":[63,352],"123":[353,355,356],"12345":357,"123456":355,"1248":356,"12499999999999994":350,"126":353,"1268":353,"1282":353,"1290":353,"12993":354,"130":356,"1300":356,"132":[349,354],"137":358,"1373":355,"1411":[320,353,354],"1416":355,"1417":356,"14438904470168346":357,"1509":355,"1543":[354,355],"156":356,"1560":356,"1564":356,"15900000000000003":358,"1664":356,"170":357,"1703":353,"1706":[210,349],"1709":320,"171":357,"17524995761801201":357,"176":349,"177":349,"178":349,"1811":217,"182":353,"184585040000":357,"1872":356,"1910":[137,350],"1912":351,"193585360000":357,"195":356,"1960":354,"198":349,"19th":353,"1e10":353,"1e2":357,"1e5":349,"1ibm":350,"1system":[350,353],"1x_1":351,"200":354,"2001":[59,352],"2006":354,"2009":[153,320,357],"2011":[63,352],"2012":355,"2014":[350,353,354],"2015":354,"2016":353,"2017":[210,348,349,350,351,352,353,354,355,356,357,358],"2019":[137,217,350,351],"202":353,"2020":[59,348,349,351,352,354,355,357,358],"2021":[348,349,350,351,352,353,354,355,356,357,358],"2022":358,"203087460000":357,"208":356,"2080":356,"2085":356,"209490240000":357,"220":349,"226691640000":357,"234":[356,357],"2415":357,"241500000000":357,"243473920000":357,"2496":356,"256":355,"258":[356,357],"259":357,"260":[356,357],"2600":356,"2606":356,"262":357,"264":349,"267":357,"2725":355,"272944851356":353,"27835":355,"2783500000000174":355,"299209200000":357,"2ak":354,"2an":354,"2aqua0":356,"2beta":152,"2c_i":357,"2ignis0":350,"2ignisnoneaquanoneibm":353,"2qiskit":358,"2system":356,"2x_1x_3":351,"2x_2":351,"300":353,"312":356,"3120":356,"3127":356,"319136480000":357,"319875880000":357,"321043":354,"321046":354,"326":354,"329":354,"336944960000":357,"338581760000":357,"349":357,"352":349,"354":349,"3622":355,"366283840000":357,"370492458343506":353,"374":349,"376891640000":357,"3809":355,"384":357,"38416868e":357,"388":356,"390":356,"3a600d8ibm":357,"3aer0":350,"3c103aeaer0":[348,349,351,352,354,355],"3x_3":351,"4028":[320,353,354],"4051":357,"405100000000":357,"4095":355,"410":357,"416":356,"417526800000":357,"418":357,"418000000000":357,"419982800000":357,"428546905517578mon":350,"4301":355,"436915480000":357,"4436":357,"443600000000":357,"44389045e":357,"4659":355,"468":356,"4689":355,"4732":355,"4803888163984595e":357,"48038882e":357,"4997993934173706":353,"4ignis0":357,"500000000000":349,"5067":355,"513453840000":357,"517":356,"520":356,"528":349,"540491640000":357,"5452":355,"547437520000":357,"552055358886719fri":357,"553391640000":357,"559":357,"572049240000":357,"578991640000":357,"600":353,"6043817":357,"60510d7ibm":356,"606":353,"609356080000":357,"6103f99aqua0":[348,349,351,352,354,355],"6231":355,"6233":355,"624":356,"626":357,"647":356,"650375366210938mon":358,"650382995605469sun":353,"655136240000":357,"671":357,"675584320000":357,"681302000000":357,"689746560000":357,"691":354,"697600360000":357,"6d2ef86aer0":357,"6e20670aer0":356,"6ignis0":356,"704":349,"708":349,"70905326e":357,"7132740020751953":356,"717045640000":357,"7296000000000049":355,"7312":355,"7313":355,"7341":353,"7379":353,"7384168677494151":357,"740891760000":357,"744":357,"75249958e":357,"7538":355,"7581":353,"7667":355,"7689322":357,"768932200000002":357,"769":357,"776":356,"795990680000":357,"79839634":357,"810602080000":357,"815379360000":357,"8183":354,"818440880000":357,"829257280000":357,"832":356,"8750":355,"875277360000":357,"881815195083618":353,"8859":[348,349,350,351,352,353,356,357,358],"892":357,"892000000000":357,"8945":355,"898208480000":357,"8992":355,"8f3168bsystem":[348,349,351,352,354,355],"900":352,"936":356,"9364916731037085":350,"941412000000":357,"941512800000":357,"953":357,"9709053264087679":357,"9716499999999968":355,"978":354,"985353":357,"9893":355,"99889016":352,"9997993934173706":353,"99999992e":357,"9999999916475085":357,"9bedb6d68":358,"\u03b2":357,"\u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c":7,"\u0431\u0430\u0437\u043e\u0432":[12,57,59,63,64,65,67,70,76,78,82,89,93,98,102,104,107,111,115,119,130,134,137,140,145,148,149,153,155,159,162,166,169,173,178,181,185,188,191,197,203,206,210,213,217,221,222,223,226,232,237,240,248,252,260,267,312,314,320,326,339],"\u0431\u043e\u043b":7,"\u0431\u044b\u043b":7,"\u0431\u044b\u0442":7,"\u0432":7,"\u0432\u0430\u043c":7,"\u0432\u0430\u0448":7,"\u0432\u0435\u0440\u0441":7,"\u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d":7,"\u0432\u043a\u043b\u0430\u0434":7,"\u0432\u043a\u043b\u044e\u0447\u0435\u043d":7,"\u0432\u043c\u0435\u0441\u0442":7,"\u0432\u043d\u0435\u0441\u0442":7,"\u0432\u043d\u0438\u043c\u0430\u043d":7,"\u0432\u043e\u0437\u043c\u043e\u0436\u043d":7,"\u0432\u0440\u0435\u043c":7,"\u0432\u044b":7,"\u0433\u0434\u0435":7,"\u0433\u043e\u0442\u043e\u0432":8,"\u0433\u0440\u0430\u0444":7,"\u0434\u0430\u043b":7,"\u0434\u0430\u043b\u044c\u0448":8,"\u0434\u0430\u0441\u0442":7,"\u0434\u043b\u044f":8,"\u0434\u043e\u0431\u0430\u0432\u044c\u0442":7,"\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d":7,"\u0434\u043e\u0441\u0442\u0443\u043f":7,"\u0435\u0433":7,"\u0435\u0441\u043b":7,"\u0435\u0441\u0442":7,"\u0436\u0435":7,"\u0437\u0430\u0432\u0438\u0441":7,"\u0437\u0430\u0432\u0438\u0441\u0438\u043c":7,"\u0437\u0430\u043f\u0443\u0441\u043a":7,"\u0437\u0430\u043f\u0443\u0441\u0442":7,"\u0437\u0434\u0435":7,"\u0438":7,"\u0438\u0434\u0442":8,"\u0438\u0437":7,"\u0438\u0437\u043c\u0435\u043d\u0435\u043d":[7,8],"\u0438\u0437\u0443\u0447":7,"\u0438\u043b":7,"\u0438\u043c\u0435\u0435\u0442":7,"\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446":8,"\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442":7,"\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446":7,"\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d":[13,14,15,17,18,19,21,22,23,24,31,33,34,35,37,44,47,48,49,51,52,53,56,60,62,69,70,75,78,89,92,93,97,107,110,111,118,119,120,137,139,147,149,153,154,163,194,207,211,214,215,218,219,227,242,254,262,263,268,269,270,272,273,274,276,277,278,279,286,288,289,290,292,299,302,303,304,306,307,308,311,312,314,322,330,342,343,344,345,346,347],"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430":7,"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d":7,"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443":7,"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442":7,"\u0438\u0441\u0445\u043e\u0434\u043d":[7,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,44,47,48,49,51,52,53,56,57,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,78,79,80,81,82,89,90,92,93,95,96,97,98,102,103,104,107,108,110,111,113,115,116,117,118,119,120,122,130,134,137,138,139,140,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,208,210,211,212,213,214,215,217,218,219,221,222,223,224,225,226,227,228,229,230,232,233,237,238,240,241,244,245,246,247,248,249,252,253,256,257,258,259,260,262,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,295,296,299,302,303,304,306,307,308,311,312,314,315,320,322,326,330,338,339,342,343,344,345,346,347],"\u043a":7,"\u043a\u0430\u0432\u044b\u0447\u043a":7,"\u043a\u0430\u043a":7,"\u043a\u0430\u0447\u0435\u0441\u0442\u0432":7,"\u043a\u043b\u0430\u0441\u0441":[12,57,59,63,64,65,67,70,76,78,82,89,93,98,102,104,107,111,115,119,130,134,137,140,145,148,149,153,155,159,162,166,169,173,178,181,185,188,191,197,203,206,210,213,217,221,222,223,226,232,237,240,248,252,260,267,312,314,320,326,339],"\u043a\u043b\u043e\u043d\u0438\u0440":7,"\u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d":7,"\u043a\u043e\u0434":[7,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,44,47,48,49,51,52,53,56,57,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,78,79,80,81,82,89,90,92,93,95,96,97,98,102,103,104,107,108,110,111,113,115,116,117,118,119,120,122,130,134,137,138,139,140,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,208,210,211,212,213,214,215,217,218,219,221,222,223,224,225,226,227,228,229,230,232,233,237,238,240,241,244,245,246,247,248,249,252,253,256,257,258,259,260,262,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,295,296,299,302,303,304,306,307,308,311,312,314,315,320,322,326,330,338,339,342,343,344,345,346,347],"\u043a\u043e\u043c\u0430\u043d\u0434":7,"\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442":8,"\u043a\u043e\u0442\u043e\u0440":7,"\u043b\u043e\u043a\u0430\u043b\u044c\u043d":7,"\u043c\u0435\u0442\u043e\u0434":7,"\u043c\u043e\u0433\u0443\u0442":7,"\u043c\u043e\u0436\u0435\u0442":7,"\u043c\u043e\u0436\u043d":7,"\u043d\u0430":7,"\u043d\u0430\u0437\u0432\u0430\u043d":7,"\u043d\u0430\u0439\u0442":7,"\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440":7,"\u043d\u0430\u0441\u0442\u043e\u044f":7,"\u043d\u0430\u0447\u0430":8,"\u043d\u0435":7,"\u043d\u0435\u043a\u043e\u0442\u043e\u0440":7,"\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c":7,"\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d":8,"\u043d\u0435\u0442":7,"\u043d\u043e\u0432":7,"\u043d\u0443\u0436\u043d":7,"\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d":7,"\u043e\u0431\u043e\u043b\u043e\u0447\u043a":7,"\u043e\u0431\u0440\u0430\u0442":7,"\u043e\u043f\u0438\u0441\u0430\u043d":7,"\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0442\u043e\u0440":7,"\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446":7,"\u043e\u043f\u0446":7,"\u043e\u0441\u043d\u043e\u0432\u043d":7,"\u043e\u0442":7,"\u043e\u0442\u043c\u0435\u0442":7,"\u043e\u0447\u0435\u0440\u0435\u0434":7,"\u043f\u0430\u043a\u0435\u0442":7,"\u043f\u0430\u043f\u043a":7,"\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440":[12,13,14,15,17,18,19,21,22,24,30,31,32,33,34,35,36,37,40,41,44,47,48,49,51,56,57,59,60,62,63,64,66,67,68,69,70,73,75,76,78,79,80,81,82,89,90,92,93,95,97,103,104,107,108,110,111,113,116,117,118,119,120,134,137,138,139,140,145,146,147,149,150,151,152,153,154,155,156,159,160,162,163,165,166,167,169,170,173,174,175,176,178,179,182,183,185,186,188,189,191,192,193,194,197,198,200,203,204,206,207,208,211,212,213,214,215,217,218,219,226,227,228,229,230,232,233,237,238,240,241,244,245,247,248,249,252,253,256,257,258,259,260,262,263,267,268,269,270,272,273,274,276,277,279,285,286,287,288,289,290,291,292,295,296,299,302,303,304,306,311,312,314,320,322,326,330,342,343,344,345,346],"\u043f\u0435\u0440\u0432":7,"\u043f\u0435\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430":7,"\u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c":7,"\u043f\u043e\u0434":7,"\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430":7,"\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a":7,"\u043f\u043e\u0434\u043e\u0431\u043d":7,"\u043f\u043e\u0434\u0440\u043e\u0431\u043d":7,"\u043f\u043e\u0437\u0432\u043e\u043b":7,"\u043f\u043e\u0437\u0432\u043e\u043b\u044f":7,"\u043f\u043e\u043b\u0443\u0447":7,"\u043f\u043e\u043c\u043e\u0449":7,"\u043f\u043e\u0441\u043b\u0435\u0434\u043d":7,"\u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430":7,"\u043f\u0440\u0438\u0432\u0435\u0434":7,"\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d":7,"\u043f\u0440\u0438\u043c\u0435\u0440":[67,70,93,107,119,137,145,206,210,226],"\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c":7,"\u043f\u0440\u043e\u0435\u043a\u0442":7,"\u043f\u0440\u043e\u0441\u0442":7,"\u0440\u0430\u0431\u043e\u0442":8,"\u0440\u0430\u0437\u0434\u0435\u043b":7,"\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a":7,"\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a":7,"\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c":7,"\u0440\u0435\u0436\u0438\u043c":7,"\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,62,66,68,69,71,72,73,75,77,79,80,81,83,84,85,86,87,88,90,91,92,94,95,97,103,105,106,108,109,110,112,113,114,116,117,118,120,121,122,123,124,125,126,127,128,129,135,136,138,139,141,142,143,144,146,147,150,151,152,154,156,157,158,160,161,163,164,165,167,168,170,171,172,174,175,176,177,179,180,183,184,186,187,189,190,192,193,194,195,196,198,199,200,201,202,204,205,207,208,209,211,212,214,215,216,218,219,220,224,225,227,228,229,230,231,233,234,235,236,238,239,241,242,243,244,245,246,247,249,250,251,253,254,255,256,257,258,259,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,315,316,317,318,319,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347],"\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440":7,"\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432":8,"\u0441":7,"\u0441\u0430\u043c":7,"\u0441\u0432\u043e":7,"\u0441\u0434\u0435\u043b\u0430":7,"\u0441\u043b\u0435\u0434":7,"\u0441\u043b\u0443\u0447\u0430":7,"\u0441\u043d\u0430\u0447\u0430":7,"\u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d":7,"\u0441\u043e\u0437\u0434\u0430":7,"\u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d":7,"\u0441\u043f\u0438\u0441\u043e\u043a":[7,8],"\u0441\u043f\u043e\u0441\u043e\u0431":7,"\u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a":8,"\u0441\u0440\u0430\u0431\u043e\u0442\u0430":7,"\u0441\u0440\u0435\u0434":7,"\u0441\u0442\u043e":7,"\u0441\u0442\u0440\u0430\u043d\u0438\u0446":7,"\u0441\u0444\u043e\u043a\u0443\u0441\u0438\u0440":7,"\u0442\u0430\u043a":7,"\u0442\u0435\u0441\u0442":7,"\u0442\u0438\u043f":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,60,61,62,66,68,69,71,72,73,75,77,79,80,81,83,84,85,86,87,88,90,91,92,94,95,97,103,105,106,108,109,110,112,113,114,116,117,118,120,121,122,123,124,125,126,127,128,129,135,136,138,139,141,142,143,144,146,147,150,151,152,154,156,157,158,160,161,163,164,165,167,168,170,171,172,174,175,176,177,179,180,183,184,186,187,189,190,192,193,194,195,196,198,199,200,201,202,204,205,207,208,209,211,212,214,215,216,218,219,220,224,225,227,228,229,230,231,233,234,235,236,238,239,241,242,243,244,245,246,247,249,250,251,253,254,255,256,257,258,259,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,315,316,317,318,319,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347],"\u0442\u043e\u043c":7,"\u0442\u0443":7,"\u0443\u043a\u0430\u0437\u0430":7,"\u0443\u043b\u0443\u0447\u0448\u0435\u043d":7,"\u0443\u043c\u043e\u043b\u0447\u0430\u043d":7,"\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430":7,"\u0443\u0441\u0442\u0430\u043d\u043e\u0432":7,"\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a":8,"\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b":7,"\u0443\u0447\u0435\u0431\u043d":8,"\u0444\u0430\u0439\u043b":7,"\u0444\u0443\u043d\u043a\u0446":7,"\u0445\u043e\u0442":7,"\u0447\u0442\u0435\u043d":7,"\u0447\u0442\u043e":7,"\u044d\u043b\u0435\u043c\u0435\u043d\u0442":7,"\u044d\u0442":7,"\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d":7,"abstract":[65,66,111,115,116,118,162,181,182,184,223,224,225,232,233],"boolean":63,"case":[73,119,129,137,153,208,212,215,219,227,348,349,351,352,353,354,355],"chv\u00e1tal":354,"class":[0,11,12,57,59,63,64,65,67,70,76,78,82,89,93,98,102,104,107,111,115,119,130,134,137,140,145,148,149,153,155,159,162,166,169,173,178,181,185,188,191,197,203,206,210,213,217,221,222,223,226,232,237,240,248,252,260,267,312,314,320,326,339,348,349,350,352,354,356,357],"const":353,"continue":[353,354],"default":[22,63,89,107,137,145,153,155,277,320,326,344,348,349,350,351,352,353,354,355,356,357,358],"else":[22,70,93,277,353,354,355],"enum":[98,130],"false":[22,36,63,70,93,117,145,230,247,258,259,277,291,320,326,338,344,352],"final":[67,141,145,353,354,355],"finally":[350,352],"float":[17,18,19,22,23,33,34,35,36,37,40,41,44,51,57,63,64,67,76,80,82,83,88,89,104,107,111,112,119,120,121,128,134,137,140,145,148,149,150,151,152,153,196,208,212,213,215,216,217,219,220,226,229,231,232,233,235,237,238,240,241,244,245,247,248,249,252,253,256,257,259,260,261,262,263,272,273,274,277,278,288,289,290,291,292,295,296,299,306,314,315,316,318,320,326,342,344,350],"for":[0,4,8,9,11,22,24,31,32,53,59,63,64,65,67,70,71,76,78,82,89,93,107,111,112,114,115,119,123,137,145,149,151,153,155,158,159,162,163,164,165,166,169,171,173,175,178,181,185,188,191,192,197,198,200,203,206,209,210,223,233,244,245,252,256,257,262,263,277,279,286,287,308,312,320,322,326,330,338,342,344,347,348,350,351,352,354,355,357,358],"function":[16,21,57,67,76,82,89,104,107,119,121,134,140,141,145,148,217,218,260,261,262,263,264,265,266,271,276,326,339,342,343,348,349,350,351,352,353,354,355,356,357,358],"implements":111,"import":[67,70,93,107,119,137,145,206,210,226,348,349,350,351,352,353,354,355,356,357,358],"int":[14,15,17,18,19,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,44,46,48,49,51,55,63,67,78,82,84,85,86,89,111,114,120,134,136,137,140,142,143,145,153,155,156,157,159,160,163,165,167,169,170,171,174,175,178,179,185,186,189,192,193,196,197,198,199,200,201,204,233,237,238,240,241,244,245,247,248,249,252,253,256,257,259,260,262,263,269,270,272,273,274,279,280,281,282,283,284,285,286,287,288,289,290,292,294,295,296,299,301,303,304,306,310,314,315,316,318,320,325,326,336,349,350,353,354,355,357,358],"interface":[0,312],"long":352,"new":[0,119,210,211,226,227,240,252,314,352,353,354],"package":7,"return":[3,11,53,107,119,120,123,145,194,308,321,327,333,334,335,336,347,350,352,353,354,357],"static":[74,80,96,165,174,176,183,192,194,196,198,228],"this":[0,3,12,21,47,52,53,56,59,60,63,67,68,70,73,75,79,90,92,93,95,97,107,108,111,112,114,116,117,120,137,138,145,146,148,149,153,155,158,210,217,218,228,230,267,276,302,307,308,311,314,315,326,339,342,343,347,348,349,350,351,352,353,354,355,356,357,358],"throw":73,"true":[22,36,60,63,74,78,96,117,153,230,277,291,338,344,348,350,352,353,354,357,358],"try":[69,75,92,97,110,118,139,147,154,206,348,350,353,354,356],"var":[119,210,350],"while":[0,349,351,354,355,357],"with":[0,8,9,23,51,56,59,60,62,63,67,68,69,73,75,79,82,89,90,92,95,97,108,111,116,117,118,119,137,138,140,145,146,147,163,207,210,211,213,214,217,227,228,230,246,247,258,259,262,263,278,306,311,312,320,322,330,332,340,348,349,351,352,353,354,355,356,357],__init__:354,__traceback__:11,_flipproblemsense:[221,222],_geq:349,_leg:349,_leq:349,_slack:349,a_i:[348,349],a_y:351,abc:[65,111,115,181,223],able:[349,354],about:[7,119,349,350,351,353],above:[349,351,352,354,357],abs:[137,320,354,355],absolute:67,abstracted:353,acc:145,acceptable:349,accepts:[73,95],access:[320,326,348],accessed:352,according:[63,81,149,153,350],accordingly:[51,306,355],account:350,accuracy:[67,145],acm:354,activates:354,active:352,actual:[351,354,356],actually:[141,351,354],adapt:351,adaptive:[0,89],adaptively:[353,354],add:[348,349,350,354],add_constraint:[348,352,355,357,358],add_edge:353,add_indicator:358,add_nodes_from:353,add_weighted_edges_from:353,addconstr:358,added:[13,17,33,37,44,213,217,226,268,272,288,292,299,349,357],adding:[107,353,354],addition:[0,348,353,354],additional:[123,140,209,320,326,349,353],additionally:339,addressed:[241,253,350],adds:[13,17,33,37,44,268,272,288,292,299],addvar:358,adiabatic:353,adj_matrix:[80,196,353],adjacency:[78,80,176,196],admm:[8,57,59,60,62,63,64],admm_optimizer:352,admm_params:352,admm_q:352,admmoptimization:57,admmoptimizationresult:62,admmoptimizer:352,admmparameters:[59,61,352],admmstate:[57,58],advantage:353,aer0:358,aer:[89,353,355,356,358],aer_simulator:358,aer_simulator_statevector:[353,355],after:[137,349,351,353,358],again:[348,349,353,354],aggregated:[66,103],aggregates:[65,66,102,153],aggregator:153,ahead:354,algebra:354,algorithm:[0,57,59,62,76,78,81,82,88,89,91,104,107,113,119,123,125,130,131,132,133,134,137,140,153,351,353,354,355,357],algorithm_globals:[350,353,354,355,356,357],algorithmic:[5,67,145],algorithms:[0,5,57,59,67,70,76,78,82,89,93,102,104,107,111,115,119,134,137,140,145,148,153,326,339,349,350,351,352,353,354,355,356,357,358],align:[348,357],aligns:353,all:[16,30,63,73,76,95,99,197,198,199,206,271,285,312,349,350,351,352,353,354,355,356,357],allow:9,allowed:[353,354],allowed_status:350,allowing:353,allows:[0,119,320,350,353],along:[23,278],alongside:351,alpha:[353,355],alphas:355,already:[13,14,15,17,18,19,33,34,35,37,44,150,152,268,269,270,272,273,274,288,289,290,292,299],also:[0,95,326,348,349,350,351,352,353,354,356,358],altered:[348,349,350,351,352,353,354,355,356,357,358],alternating:[63,352],alternative:354,alternatives:352,always:[352,356],amount:[0,351,353],amounts:353,amp:358,amplitude:351,amplitudes:351,analysis:[353,355],and:[0,3,5,6,8,9,11,12,14,15,18,19,22,34,35,37,44,47,51,59,63,67,68,76,80,82,90,98,104,107,108,111,119,120,128,134,136,137,138,145,146,149,153,194,217,218,224,228,240,242,248,252,254,267,269,270,273,274,277,289,290,292,299,302,306,315,320,322,326,330,332,339,344,349,350,351,352,354,355,356,357],angle:357,annealers:210,annealing:353,annotate:354,another:[224,225,348,350],ansatz:[320,326,355],answer:[182,353,354],any:[9,22,70,71,113,119,123,217,232,237,240,242,248,252,254,260,277,314,320,326,333,341,344,348,349,350,351,352,353,354,355,356,357,358],apache:[348,349,350,351,352,353,354,355,356,357,358],api:8,apis:358,appear:[352,353,357],append:[350,354,357],appended:[56,311],applegate:354,application:[8,155,159,166,169,173,178,185,188,191,197,203],applications:[0,155,159,162,166,169,173,178,181,185,188,191,197,203,353,356],applied:[62,67,69,75,92,97,110,113,118,137,139,145,147,154,351],applies:[113,137,350,351,357],apply:[137,349,350,356,358],applying:[107,153,355,357,358],approach:[349,350,354],approaches:[353,354],appropriate:[3,353],approximate:[0,78,107,322,330,351,354,357],approximated:349,approximately:351,aqua:[349,350],arange:353,arches:354,arcsin:357,are:[0,4,14,15,18,19,22,23,30,34,35,51,53,63,64,67,99,100,101,111,137,145,206,213,217,218,226,252,269,270,273,274,277,278,285,289,290,306,308,320,326,344,347,348,349,350,351,352,353,354,356,357,358],args:93,argsort:355,arguments:[67,145,352],arise:353,around:[351,353,354],array:[80,155,162,166,173,174,176,182,188,191,197,203,217,218,240,246,252,258,348,350,354,355,357,358],arrays:348,arrow:354,arrows:354,arxiv:[59,137,153,210,217,320,349,350,351,352,353,354,357],ask:353,asks:[353,356],assets:355,assigned:353,assigning:353,assignment:353,associated:[340,354],assumed:353,assumes:107,assumptions:352,attempted:[14,15,18,19,34,35,269,270,273,274,289,290,350],attention:353,attribute:352,attributeerror:92,attributes:[12,57,59,67,70,76,82,89,93,98,104,107,111,119,130,134,140,145,153,155,162,166,169,173,188,191,197,203,206,213,217,226,232,237,240,248,252,260,267,312,314,320,326,339],aug:[348,349,351,352,354,355],augmented:354,auto:206,automatic:[0,350],automatically:[213,217,226,342,350,355,358],aux_operator:338,aux_operators:[322,330,338],auxiliary:[322,330,338],available:[4,352,353,354,356,357,358],average:355,averaging:[102,103,355],axes:353,axis:[351,354],back:[212,215,219,349,350,354],backend:[89,320,322,326,330,351,352,353,355,356,358],backend_name:355,barkoutsos:355,base:[65,119,153],baseaggregator:[102,153],basebackend:89,based:[3,59,155,166,173,188,191,197,203,350,352,353,354,355],basic:[21,276,342,343],basicaer:[350,351,352,354,357],basically:[349,354],basics:350,basis:[326,353,354],bearings:353,because:352,becomes:[353,357],been:[92,322,330,348,349,350,351,352,353,354,355,356,357,358],before:[3,83,153,349,350,354,358],beforehand:356,begin:[217,218,348,351,357],behavior:[149,357],being:[0,64,134,136,140,141,348,351,353,354],belief:353,below:[348,350,351,354,357],benchmark:[350,352],benchmarking:[0,352],best:[350,351,353,354,355,358],best_cost_brute:353,best_distance:353,best_order:353,beta:[63,352,357],better:[350,355],between:[0,3,6,149,153,349,352,353,354,355,356],big:[342,354,358],bigotimes_:357,billion:354,bin:353,binaries:[348,349,350,351,352,353,356,357,358],binary:[0,12,13,14,15,21,25,53,59,63,80,107,174,182,183,210,211,212,217,218,267,268,269,270,276,280,308,342,343,348,349,350,351,352,354,357,358],binary_cost:354,binary_representation:354,binary_var:[119,348,349,350,351,352,354,357,358],binary_var_list:355,bixby:354,block:[59,63,352],blocks:352,boldsymbol:[353,354],bool:[22,36,63,70,72,78,93,94,117,145,153,230,247,258,259,277,291,320,326,332,337,338,344,358],both:[349,350,352,353,357,358],bound:[9,18,19,34,35,67,111,145,242,254,273,274,289,290,316,348,349,354,357],boundary:353,bounded:[210,349],bounds:[51,306,348,349,350,351,352,353,354,356,357,358],boyd:[63,352],branch:[354,358],bravyi:[137,350],briefly:348,bright:351,brute_force_tsp:353,budget:355,build:[155,162,166,173,188,191,197,203,348,357],built:[353,354,357],but:[206,326,348,350,351,352,353,355,357],buy:353,buying:353,c_i:357,c_star:357,c_stars:357,calculated:[156,160,163,167,170,175,179,182,186,189,193,200,204,213,217,226,349],calculation:182,calibrations:332,call:[326,348,349,350],callable:[113,320,326,329],callback:[320,326,355],called:[137,350,353],calling:348,calls:[322,330],can:[0,50,59,60,63,67,68,73,79,90,95,108,116,117,120,137,138,145,146,149,154,155,162,166,173,188,191,197,203,228,230,240,241,252,253,305,320,322,326,330,338,348,349,351,352,353,354,356,357,358],cannot:[0,56,92,311,348],capacity:[169,353,356],carry:[348,349,350,351,352,353,354,355,356,357,358],cases:[348,350,354],cast:353,category:353,catol:67,cell:348,cells:354,centuries:353,century:353,certain:[349,351,352],cest:350,cet:357,challenge:354,change:[351,357],changes:[67,149,153],character:348,check:[60,68,73,79,90,95,108,116,117,138,146,228,230,354],checks:[60,68,73,79,90,95,108,116,117,138,146,228,230],chemistry:[322,330,350],choice:[353,354],choices:354,choose:[352,353,354],chose:[206,357],chosen:[353,354],chu:[63,352],circuit:[150,152,320,326,350,353,354,355,357],circuit_factory:153,circuits:[91,149,153,320,326,354],circumstances:0,cities:[196,353],city:[353,356],clang:[348,349,351,352,354,355,356],clarity:351,classed:111,classes:[0,4,8,9,352,354],classical:[0,8,59,320,326,350,353,355],classical_cost:354,classical_optimizer:354,classically:[0,352,354,355],classicaloptimizer:354,classmethod:338,clears:[16,271],clf:352,client:354,clients:354,clip:[67,111,145],clipping:[67,111,145],clique:356,clique_:155,clone:7,close:[93,353,354],closed:353,cloud:5,clustering:353,cobyla:[67,352,355,358],cobylaoptimizer:352,code:[348,349,350,351,352,353,354,355,356,357,358],coef:354,coefficient:[51,210,241,253,306,344,349],coefficients:[37,40,41,44,237,240,246,247,248,252,258,259,260,292,295,296,299,348,349,353],coincide:354,col:354,collection:[353,354,356],colloquially:353,color:[351,354],colors:[163,353],com:[7,22,53,70,277,308,344,347],combination:356,combinations:353,combinatorial:[351,353,354],combined:[66,103],combines:354,come:353,common:2,commonly:349,compare:[357,358],compared:353,comparison:354,compatibility:[60,68,73,79,90,95,108,116,117,138,146,228,230],compatible:[0,60,62,68,90,108,110,117,138,146,154,228,230,349,354],complete:[0,332,353,354,356],completion:[0,145],complex:353,component:351,components:[353,354,356],comprehensive:352,compressed:[252,348],comprises:354,computation:[57,64],computationally:354,computations:[153,354],compute:[63,80,183,196,338,354],compute_allowed_combinations:354,compute_minimum_eigenvalue:353,compute_variance:355,computed:107,computer:354,computers:[59,352,353,356],computes:[338,354,357],computing:[338,350,354],concept:350,concrete:351,condition:353,conditional:355,conditions:352,confidence:355,connected:[353,354],connecting:353,connections:353,connectivity:353,connects:356,cons1:352,cons2:352,cons3:352,consider:[353,354],considerable:353,considered:[63,350,355],considering:354,consistent:[82,357],consisting:[67,107,145,248,315],constant:[0,22,40,41,51,53,260,277,295,296,306,308,344,347,348,350,354],constants:[51,306,348],constrained:[0,12,267,320,348,351,352],constraint:[23,24,31,37,39,44,46,48,49,63,67,211,214,217,218,237,238,239,248,249,250,251,278,279,286,292,294,299,301,303,304,349,352,354,357,358],constraints:[0,12,16,21,23,28,29,38,45,53,63,107,137,206,207,213,214,217,218,226,227,267,271,276,278,283,284,293,300,308,342,343,347,349,350,352,353,354,357],constraintsense:[37,44,232,236,237,248,292,299,348],construct:[14,15,18,19,34,35,217,269,270,273,274,289,290,350,351,352,353],construct_problem:354,constructed:[151,354],constructor:[67,145,314,352],constructs:[82,111,134,140,248,260,351,354],consumption:353,contain:[76,207,211,214,320,326,350],container:354,containing:[134,339],contains:[21,68,76,146,211,242,254,276,339,342,343,345,349,351,352],context:[351,353],continuous:[0,12,17,18,19,21,26,59,63,67,68,145,146,153,206,267,272,273,274,276,281,314,342,343,347,348,352,354,357],continuous_optimizer:[59,352],continuous_var:[145,348,352],contribution:354,control:[353,354],controlled:357,controls:[67,353,354],conv:[206,210,226,356],convenience:349,convenient:353,convention:354,converge:[352,353],convergence:[63,352],converges:352,conversion:[0,3,213,216,217,220,225,226,231,348,349,350],convert:[3,9,10,158,161,168,172,177,180,182,184,187,190,195,202,205,206,208,210,212,213,215,217,219,221,222,226,229,342,349,350,351,353,355,356,357,358],converted:[14,15,18,19,34,35,90,92,108,138,207,208,210,211,212,214,215,217,218,219,227,228,229,269,270,273,274,289,290,349],converter:[89,209,349,350,356,357],converters:[8,9,89,107,119,137,153,206,210,213,217,221,222,223,226,353,355,356,357],converting:[89,107,137,153,349],converts:[107,218,349,358],convex:[0,73,75,95,97,352,357],convex_optimizer:352,convexity:352,cook:354,coordinate:[192,198],coordinates:[192,198],copy:[51,306,348,349,350,351,352,353,354,355,356,357,358],copyright:[348,349,350,351,352,353,354,355,356,357,358],core:[351,353],correct:[153,349,354],correctly:[9,51,306,349,351],correctness:354,correlation:122,correspond:[107,175,193,348],corresponding:[24,31,32,52,107,121,128,137,156,160,170,186,189,204,239,241,246,247,250,251,253,258,259,279,286,287,307,315,342,343,344,345,346,348,349,350,351,352,353,355,356],correspondingly:[67,111,145],corresponds:[149,153,348,353,355],cost:[352,354,357],could:[353,354,357],count:[320,322,326,330,354],countably:353,counted:[30,285],counter:351,counts:[82,86,183,355],covariance:355,cover:[0,159,161,203,205],covered:356,covers:0,cplex:[7,47,70,71,72,73,74,302,349,350,352,358],cplex_parameters:[70,358],cplex_solution:354,cplexerror:354,cplexoptimizer:[7,119,352,357,358],cpxparam_read_datacheck:358,cpxparam_threads:358,cpxparam_timelimit:358,create:[22,153,192,198,277,344,350,351,353,355,357],create_problem:357,create_random_instance:353,created:[40,41,89,107,137,150,152,153,158,161,168,172,177,180,187,190,192,195,198,202,205,295,296,351,352],creates:[150,151,152,240,252,314],criterion:353,crossing:353,crow:354,crunching:350,current:[61,320,326,351],currently:[123,349],custom:[320,351],customized:352,cut:[8,78,80,81,173,175,177,349,354,356,358],cuts:[78,81],cvar:8,cvar_alpha:355,cvar_exp:355,cvarexpectation:355,cvx:7,cvxpy:[7,78],cycle:[193,353],cycles:353,daniel:153,data:[194,320,326,354],database:354,day:354,de9e1efsystem:357,deal:[348,353,357],dealing:357,deals:[348,353],decimal:349,decision:[63,352,353,354],decisions:353,declare:348,declared:348,decomposition:352,decreases:351,decreasing:351,deepcopy:357,def:[93,350,353,354,355,357],default_axes:353,defaults:89,define:[206,226,352,354,355,358],defined:[82,140,240,252,348,349,352,353,355,357],defines:[63,98,140,351,354],defining:[4,354],definite:357,definition:353,deletes:[16,271],deliveries:354,delta:354,demonstrate:[353,354],demonstrated:352,denote:[37,44,292,299,354],denoted:[350,354],denotes:348,dense:348,depart:[197,198,199],depend:349,dependent:358,depending:[75,97,353,354],depends:[349,357],depot:[197,198,354,356],depots:354,deprecated:[21,52,276,307],depth:[350,353,354],derivative:[348,349,350,351,352,353,354,355,356,357,358],derive:354,derived:342,derives:353,described:[351,353],describing:[68,90,108,138,140,144,146,228,333],design:[0,354],designed:352,despite:350,detail:349,details:[22,53,70,277,308,344,347,350,353,358],determine:354,determined:[73,217],determines:[247,258,259],dev0:[348,349,351,352,354,355,356,357],dev:7,development:0,deviation:[320,326,350],device:[352,353],devices:[0,350],devise:352,devnull:93,diagonal:357,dict:[14,18,34,37,39,40,41,44,46,51,55,70,71,82,86,128,134,136,163,174,183,233,237,238,240,244,245,247,248,249,252,256,257,259,260,262,263,269,273,289,292,294,295,296,299,301,306,310,320,326,333,341,348],dictionaries:[9,348,355],dictionary:[14,18,34,39,46,55,128,134,136,240,247,252,259,269,273,289,294,301,310,320,326,333,348],difference:349,different:[0,3,89,107,137,140,153,350,352,353,354,355,357],differently:349,differs:[215,219],difficulty:353,diffusion:351,digraph:353,dimension:354,dimensional:348,dipole:[322,330],direction:[63,352],directly:[4,155,162,166,173,188,191,197,203,350,353,358],directory:[56,311,348,349,350,351,352,353,354,355,356,357,358],discuss:354,discussed:351,discussion:352,disjoint:356,disp:[67,70,93,358],display:[72,94,348,352,358],displays:351,distance:[353,354,356],distances:[353,354],distinct:354,distributed:[63,352],distribution:[351,353,354,357],dive:7,divided:[167,348],dmod:358,doc:[67,145,348],docpblex:358,docplex:[0,21,52,276,307,342,345,349,350,351,352,353,355,356,357],docplex_model1:[351,357],docplex_model:358,docplexexception:[56,311],docs:[67,70,145,348,349,350,351,352,353,354,355,356,357,358],documentation:[7,140,348],does:[24,31,47,48,49,56,63,107,214,262,263,279,286,302,303,304,311,351,353],doi:354,doing:[353,354],dok_matrix:[240,243,252,255],done:[332,353],dot:354,dots:[348,354],down:[351,353],draw:[7,356,357],draw_graph:353,draw_networkx:353,draw_networkx_edge_labels:353,draw_tsp_solution:353,drawn:[67,111,145,353],dual:[63,352],due:[50,75,92,97,139,305,348,353,354],dump:123,during:[64,107,320,326,354],dvar:358,each:[63,64,82,86,98,102,137,145,200,320,326,351,352,353,354,355,356],earlier:351,early:[350,353],easier:357,easily:[0,348,356],easy:[0,182,353,357],eckstein:[63,352],edge:[194,353,356],edge_color:353,edge_labels:353,edges:[165,353,354,356],effectively:59,efficiency:353,efficient:0,efficiently:[0,352,353],egger:[153,357],eigen:[8,104,107,134,137,349,352,353,356],eigensolver:[107,109,338,351,352,353,354,355,356],eigenstate:[107,322,330,338,353,355],eigenvalue:[322,330,353],eigenvalues:353,eigenvector:353,either:[134,136,153,247,259,348],element:[134,135,351],elements:[14,15,18,19,21,34,35,52,269,270,273,274,276,289,290,307,342,343,345,346],eliminate:354,elimination:354,elist:353,ell:352,embed:5,employed:354,empty:[56,73,79,95,116,311,348],enable:353,enables:0,encode:[351,354],encodes:[78,81,354],encoding:[210,348,349,350,351,352,353,356,357,358],end:[56,98,217,218,311,348,349,350,351,352,353,356,357,358],ended:131,endpoint:356,energy:353,enforce:354,enforces:352,engineering:353,enough:[353,354,357],ensure:[353,357],entanglement:353,entangler:[353,354],entangling:[353,354],enumerate:[350,357],epsilon:[149,153,357],eqnarray:351,equal:[9,37,44,119,120,292,299,351,356],equality:[0,12,37,44,63,107,137,206,207,213,214,217,226,267,292,299,349,350,352,354],equiv:353,equivalence:353,equivalent:[326,350,351,353],error:[0,9,11,60,320,326,332,348,354],errors:[0,11],essentially:349,est:[348,349,351,352,354,355],establish:354,estimated:[353,354],estimates:354,euc_2d:194,euclidean:354,evaluate:[245,257,263,353,354,355],evaluated:[238,244,245,249,256,257,262,263,320,322,326,330,338,355],evaluates:354,evaluation:[320,326],evaluations:67,even:[63,349,352,353,354],every:[137,213,217,226,332,351,353,354],everything:[51,306],evolve:320,evolved:152,ex6:352,exact:[159,161,350,352,353,354,356],exact_cover:159,exact_mes:[350,357],exact_result:[350,351],exact_solver:351,exactly:[354,356],example:[252,349,350,351,353,354,356,357],examples:356,exc:354,except:[348,354,356],exception:[11,73,75,92,97,354],exceptions:354,execute:355,execution:[322,330],exist:[24,31,47,48,49,53,279,286,302,303,304,308,347,349,353],exists:[37,44,214,218,292,299,347,357],exit:[140,142,144],expanding:107,expectation:[322,330,338,353,354,355],expectations:338,expected:[82,312,353,355],expires:358,explain:[348,349,354],explained:348,explaining:[68,90,108,138,146,228],explicit:153,exploiting:353,explore:[76,351],explored:351,exponential:353,exponentiated:357,export_as_lp_string:[348,349,350,351,352,353,358],exposed:314,expression:[239,240,242,243,244,245,246,247,250,251,252,254,255,256,257,258,259,348],expressionbounds:[242,254],extended:0,extending:354,extension:353,extent:353,externally:314,eye:354,facilitate:5,facilitates:0,factor:[63,89,107,137,153,213,216,217,218,220,226,231,348,349,355],factor_c:[63,352],factorial:354,factory:[149,153],failed:[322,330],failure:[119,129,208,212,215,219,350],farhi:[353,354],fashion:354,faster:353,feasibility:352,feasible:[23,36,63,67,278,291,352,353,354],features:357,feb:[356,357],feedback:353,fewer:351,field:352,fields:353,figsize:355,figure:[354,355],file:[47,56,176,194,302,311,349,350,351,352,353,354,355,356,357,358],filename:[47,56,176,194,302,311],filenotfounderror:[47,302],files:[348,349,350,351,352,353,354,355,356,357,358],filter:350,filtered:[30,285],filtered_samples:350,filterwarnings:353,finance:[352,353],find:[7,67,89,107,133,145,348,353,354,356],finding:[350,351,353,354],finds:[353,356],finite:353,first:[63,67,111,134,135,145,348,349,350,352,353,354,356,357,358],fitter:332,fix:9,fixed:355,flag:63,flagged:351,flies:354,flip_problem_sense:[221,222],floating:10,flush:93,fmin_cobyla:67,fmin_slsqp:[140,145],focusing:355,following:[4,217,218,348,349,350,351,352,353,354,355,356,357,358],follows:[21,51,119,276,306,320,326,342,343,348,349,351,352,353,354,356,358],font_color:353,fontsize:355,forall:[352,353,354],form:[37,44,89,107,137,153,224,225,227,258,259,260,292,299,349,350,353,356],formal:353,formalize:354,formally:351,format:[14,15,18,19,20,34,35,155,162,166,173,174,176,182,188,191,194,197,203,227,269,270,273,274,275,289,290,348,349,350,351,352,355],format_qaoa_samples:357,forms:354,formulated:354,formulating:217,formulation:[342,348,349,353,358],formulations:[350,354],found:[57,63,76,79,104,116,119,121,129,134,351,352,353,354,358],foundations:[63,352],four:[320,326],frac:353,frame:353,frameon:353,framework:351,fred:217,free:[353,358],frequency:67,from:[0,7,21,22,47,67,70,80,93,100,104,105,107,111,119,122,123,137,140,142,144,145,151,153,158,161,168,172,174,176,177,180,183,187,190,192,194,195,198,202,205,206,210,215,219,226,276,277,302,342,344,349,350,351,352,353,355,356,357,358],from_docplex_mp:[348,351,352,355,357,358],from_gurobipy:358,from_ising:350,front:350,frontiers:353,full:352,full_output:145,fully:[353,354],fun:354,func:145,functional:352,functionality:[3,349,353,356],functions:[21,276,342,343,353,354,355],fundamental:0,further:355,furthermore:[0,353],future:353,fval:[57,76,82,83,104,119,134,140,148,350,351,352,355,357,358],fvals:350,gambella:[59,352],gas:[89,351],gates:[353,354],gcc:[350,353,357,358],general:[349,351,353,354,358],generalizes:350,generally:353,generals:[348,349,358],generate:[78,353,354,356,358],generate_instance:354,generated:[67,81,145,348,349,350,351,352,353,354,355,356,357,358],generates:[149,356],generating:[119,353,354],generator:78,generic:349,geq:[217,218,348,349],get:[86,119,122,174,322,330,348,350,353,354,358],get_backend:[350,351,352,353,354,355,356,357,358],get_edge_attributes:353,get_edge_data:353,get_filtered_samples:350,get_linear_constraint:348,get_objective_value:354,get_quadratic_constraint:348,get_values:354,gets:[51,306,348,353],getter:[83,84,85,88,157,164,171,199,201],getting:[7,353],getting_started:7,gilliam:351,git:7,github:[7,22,53,277,308,344,347,348],give:357,given:[3,24,31,32,60,62,68,69,73,75,78,79,90,92,95,97,108,110,113,116,117,118,138,139,146,147,154,208,212,215,219,226,228,230,233,238,244,245,249,256,257,262,263,279,286,287,322,330,348,349,350,352,353,354,355,356,357],gives:349,global:353,globally:354,glover:217,gmod:358,goanesswilliamsonoptimizer:7,goemans:[7,76,78,81],goes:353,goldstone:[353,354],gonciulea:351,good:[107,353],gradient:[245,257,263],granted:353,graph:[78,155,162,163,165,166,168,173,174,176,188,191,194,197,203,351,353,354,356],graph_optimization_application:[155,166,173,188,191,197,203],graph_partition:166,graph_theory:[155,188],graphoptimizationapplication:[155,166,173,188,191,197,203,356],graphs:[353,356],grasp:353,grb:358,greater:[37,44,292,299,314,353,354],grid:354,ground:[107,322,330,349,350,357],groups:167,grover:[0,8,82,88,89,92],grover_optimizer:351,groveroptimizer:[0,87,349,350,352],gset:[174,176],guarantee:63,guaranteed:[67,352,353],guarantees:354,guess:[67,111,145],guesses:[67,111,145],gurobi:[7,93,94,95,96,358],gurobioptimizer:[7,358],gurobipy:[7,93,343,346],gurobipy_model:358,gutmann:[353,354],half:179,hamilton:353,hamiltonian:[22,53,107,277,308,320,344,347,350,357],hamiltonians:349,hand:[37,44,232,233,235,237,238,239,248,249,250,251,292,299,348],handle:[349,352],happen:[52,307,345,346],happens:354,hard:[354,357],harder:354,hardness:353,hardware:353,has:[0,14,15,18,19,34,35,92,107,111,120,269,270,273,274,289,290,320,322,330,344,348,349,350,351,352,353,354,356,357,358],hastings:353,have:[312,348,349,350,351,352,353,354,355,356,357,358],having:3,head_width:354,help:63,helpful:350,here:[67,70,93,107,137,145,326,350,352,353,354,357],hereafter:352,heuristic:[59,353,354],heuristics:[59,352],high:[0,192,198],higher:[353,357],highest:351,hint:63,history:[134,137,339,341,352,355],holding:352,hometown:353,hours:354,how:[107,137,348,349,350,353,354,355,357],however:[349,353,357],html:[7,67,145,348],http:[137,320,348,349,350,351,352,353,354,355,356,357,358],https:[7,22,53,67,70,145,155,159,166,169,173,178,185,188,191,197,203,277,308,320,344,347,348,358],hybrid:354,ibm:[7,70,348,349,350,351,352,353,355,356,357,358],ibmdecisionoptimization:348,ibmq:358,icos:70,id_n:354,idealized:354,identical:358,identifier:358,idx:357,ignis0:358,ignore:353,ignored:[153,338],iiiiiiiiz:[353,356],iiiiiiizi:[353,356],iiiiiiizz:[353,356],iiiiiizii:[353,356],iiiiiiziz:[353,356],iiiiiizzi:[353,356],iiiiiziii:[353,356],iiiiiziiz:[353,356],iiiiizizi:[353,356],iiiiizzii:[353,356],iiiiziiii:[353,356],iiiiziiiz:[353,356],iiiiziizi:[353,356],iiiizizii:[353,356],iiiizziii:[353,356],iiiziiiii:[353,356],iiiziiiiz:[353,356],iiiziiizi:[353,356],iiiziizii:[353,356],iiiziziii:[353,356],iiizziiii:[353,356],iiz:350,iiziiiiii:[353,356],iiziiiiiz:[353,356],iiziiiizi:[353,356],iiziiizii:[353,356],iiziiziii:[353,356],iiziziiii:[353,356],iizz:353,iizziiiii:[353,356],illustrate:[350,357],illustrated:357,ilp:354,im_n_1:354,imaginary:344,imode:140,implement:153,implementation:[59,63,64,149,153,351,352],implementations:351,implemented:353,implementing:[60,79,116,117,230],implies:67,importance:[353,354],important:[350,353],imports:357,impractical:353,improvement:89,improving:8,include:353,included:348,incompatibility:[68,75,79,90,92,97,108,116,138,146,228],incompatible:[69,75,92,97,118,139,147,227],increased:350,increases:63,incumbent:358,ind:355,ind_mod:358,indeed:353,independent:[188,351],independent_set_:188,index:[7,14,15,18,19,24,31,32,34,35,39,46,48,49,55,119,120,197,198,199,241,247,259,269,270,273,274,279,286,287,289,290,294,301,303,304,310,348,354],indexed:354,indexerror:[24,31,48,49,120,279,286,303,304],indicates:351,indicatingthat:[348,349,350,351,352,353,354,355,356,357,358],indicator:342,indicator_big_m:342,indices:[51,156,167,170,175,189,193,204,240,247,252,253,259,306,348,353],individual:[353,354],individuals:353,induced:356,industry:354,ineq2eq:349,inequality:[0,12,206,207,214,217,218,267,349,352],inequalitytoequalityconverter:349,inf:63,infeasible:[50,51,139,305,306,348,350],infinite:353,infinity:[0,348],influence:353,info:93,information:[72,94,119,123,145,192,198,224,225,337,339,350,351,353],informationpython3:[348,349,350,351,352,353,354,355,356,357,358],informationqiskit:[348,349,350,351,352,353,354,355,356,357,358],ingredients:351,inheriting:153,init_qc:357,initial:[63,64,67,111,145,149,150,151,152,153,320,323,326,331,351,353,357],initial_point:[320,326,350,357],initial_state:[320,357],initial_variables:[150,152],initialization:153,initialize:[312,352,354,355],initialized:[59,63,352],initializer:[67,107,137,145,354],initializes:[67,70,93,137,145,153,232],initializing:350,input:[9,22,23,82,84,192,198,277,278,344,349,350,351],inside:354,install:[7,356,358],installation:354,installed:[47,70,74,78,93,96,163,302,343,346,352,358],installing:7,instance:[59,89,91,92,105,107,111,134,135,137,153,158,161,168,172,177,180,184,187,190,192,194,195,198,202,205,312,322,330,349,350,352,354,355,356,357],instance_vec:354,instances:[14,15,18,19,34,35,269,270,273,274,289,290,353,354],instantiate:354,instantiated:4,instantiation:[14,15,18,19,34,35,269,270,273,274,289,290],instead:[9,155,158,352],int2bin:349,int_slack:[349,356],integer:[0,12,21,27,33,34,35,107,120,206,210,211,212,267,276,282,288,289,290,320,342,343,347,348,349,350,351,354,357,358],integer_var:[210,348,349,358],integers:[178,356,358],integertobinary:9,intended:4,intensity:351,interact:353,interactions:[353,354],intercal:352,interest:[351,353],interesting:[0,350],interfaces:5,intermediate:[82,83,98,99,101,134,135,137,320,326,337,350,355,356],intermediate_fval:82,intermediateresult:137,internal:[57,64,355],internally:[89,107,137,153,240,252,357],interpret:[3,83,224,349,353,356],interpreted:[14,15,18,19,34,35,269,270,273,274,289,290],into:[7,14,15,18,19,34,35,89,107,137,153,158,161,167,168,172,177,180,184,187,190,195,202,205,206,207,208,210,211,214,217,218,224,225,227,229,269,270,273,274,289,290,342,343,349,350,352,353,354,356,357,358],intractable:0,introduce:[348,356],introduced:[59,137,320,349,350,352,355],introduces:348,introducing:206,ints:183,invalid:[51,89,107,137,306],investigating:[353,354],invoke:352,invoked:[67,145,352],invoking:[134,135,348],iprint:145,ipynb:[348,349,350,351,352,353,354,355,356,357,358],is_cplex_installed:70,is_feasible:353,is_gurobi_installed:93,isbn:354,ising:[22,53,107,277,308,344,347,349,350,355],iso:[348,349,350,351,352,353,356,357,358],issues:[22,53,79,116,277,308,344,347],item:[170,356],items:[169,170,355,356],iter:145,iterate:145,iteration:[63,82,86,98,100,137,351],iterations:[63,89,140,143,145,351,352,355],iterative:[63,137],iteratively:[134,135,351],itertools:353,its:[39,46,55,63,140,193,240,252,294,301,310,320,326,353,354],itself:348,iv_n:354,iv_n_1:354,izi:350,iziiiiiii:[353,356],iziiiiiiz:[353,356],iziiiiizi:[353,356],iziiiizii:[353,356],iziiiziii:[353,356],iziiziiii:[353,356],iziz:353,iziziiiii:[353,356],izz:350,izzi:353,izziiiiii:[353,356],job:[322,330,340],join:[350,354,357],jointly:352,jst:[353,356,358],jul:358,july:358,jun:[350,353,358],jupyter:[348,349,350,351,352,353,354,355,356,357,358],just:[0,76],karimi:210,keep:[224,354],keeps:64,kept:217,key:[120,134,136,253,320,326,354,355,357],key_format:[14,15,18,19,34,35,269,270,273,274,289,290],keyerror:[24,31,48,49,120,279,286,303,304],keys:[14,15,18,19,34,35,240,247,252,259,269,270,273,274,289,290,320,326,348],kliesch:350,knapsack_problem:169,knowledge:353,known:[349,351,352,354],koenig:350,kron:354,kwargs:93,l_i:348,label:355,lagrangian:354,lambda:[354,355,357],landscape:355,langle:[353,354],large:[0,349,353],last:[100,134,135,350,353,354],last_best_distance:353,last_iteration:137,later:[67,145,352],latest:[354,358],lc1:358,ldots:[349,352,354],learning:[7,63,352],least:[353,356],left:[37,233,238,239,249,250,251,292,349,353],leftarrow:348,leftovers:123,legend:355,len:[23,278,353,354,355,357],length:[196,353],length_includes_head:354,leq:[217,218,348,349,352,354],less:[14,15,18,19,34,35,37,44,78,269,270,273,274,289,290,292,299],let:[348,349,354,358],level:[0,314,354,355],levels:355,leverage:350,leveraged:357,leverages:352,leveraging:[0,357],library:[353,354,355],license:[348,349,350,351,352,353,354,355,356,357,358],licensed:[348,349,350,351,352,353,354,355,356,357,358],licenses:[348,349,350,351,352,353,354,355,356,357,358],lie:353,like:349,likelihood:353,likely:183,limitations:358,limited:[353,354],lin_eq:348,lin_expr:354,lin_geq:348,lin_leq:348,line:352,linear2penalty:355,linear:[21,22,24,28,37,38,39,40,41,44,48,107,119,137,145,217,227,237,240,242,243,244,245,246,247,248,260,276,277,279,283,292,293,294,295,296,299,303,342,343,344,349,350,353,354,357,358],linear_constraint:[348,349,358],linear_constraints:354,linearconstraint:[24,37,38,279,292,293],linearequalitytopenalty:355,linearexpression:[239,250,264],lineq2penalty:349,linewidth:355,linexpr:358,link:354,links:354,list:[15,19,23,24,31,35,36,37,38,40,41,44,45,54,57,66,76,80,81,82,87,89,103,104,106,107,119,124,126,127,134,135,137,140,150,151,152,153,155,156,159,160,162,166,167,169,170,173,175,178,179,185,186,188,189,191,193,196,197,200,203,204,208,212,215,219,229,233,237,238,240,244,245,248,249,252,256,257,260,262,263,270,274,278,279,286,290,291,292,293,295,296,299,300,309,322,330,348,350,352,353,354],listop:[22,277,344],lists:[175,348],load:[348,352,354,358],loaded:[21,47,276,302,342,343],loading:354,loads:[21,47,276,302],loc:355,local:[67,113,145,354],locations:354,logging:354,logic:[107,153],logistic:352,logistics:354,longer:357,look:357,looking:348,looks:349,loop:[353,355],loosely:351,low:[192,198],lower:[9,18,19,34,35,51,67,111,145,242,254,273,274,289,290,306,316,348,349,355],lowerbound:[17,18,19,33,34,35,67,111,145,210,272,273,274,288,289,290,314,315,348,349,358],lowest:353,lucas:[350,353],machine:[7,63,352],macos:7,made:[353,354],main:[322,330,338],maintain:119,major:354,make:[51,306,348,353,354],makes:[155,158],making:353,manually:353,many:[0,349,350,353,354,357],map:[349,353,354],mapped:[22,53,277,308,344,347,349,353],mapping:[14,18,34,63,210,269,273,289,350],maps:[39,46,55,294,301,310],mar:[348,349,351,352,354,355,356],marecek:357,marketing:353,match:[119,217,262,263],matched:[51,306],material:353,math:354,mathbb:[352,354],mathcal:352,mathematical:[348,353],mathematically:[353,354],mathematicians:353,mathrm:[352,353,354],matplotlib:[7,163,352,353,354,355,356],matrices:[0,348,350],matrix:[78,80,122,176,196,240,252,348,352,353,355,357],max:[8,78,81,173,175,177,351,354,356],max_cut:353,max_len:357,max_time:63,max_weight:[169,356],maxcut:353,maxfun:67,maximal:[155,157,158,171],maximization:[221,222,349,353],maximize:[145,348,349,353,355,356,357,358],maximized:[40,295,353,356],maximizing:353,maximum:[63,67,145,169,173,192,198,351,356],maximum_cut:173,maxiter:[63,320,326,352,353,355,358],may:[73,75,78,97,140,207,211,320,326,350,353,354],mayobtain:[348,349,350,351,352,353,354,355,356,357,358],mbco:352,mbo:352,mbos:352,mdl:[348,352,355,357],mean:[320,326,349,350],meaning:351,means:[51,306,353],meant:314,measurement:[320,326,332],measurement_error_mitigation:[320,326],measuring:351,mentioned:350,meo:[356,358],merchandise:353,merit:63,message:[11,68,79,90,108,116,138,140,144,146,228,358],meta:[137,153],method:[47,60,63,67,78,79,111,113,116,117,145,230,302,348,349,350,352,353,354],methods:[12,57,59,63,64,65,67,70,76,78,82,89,93,102,104,107,111,115,119,120,134,137,140,145,148,149,153,155,159,162,166,169,173,178,181,185,188,191,197,203,206,210,213,217,218,221,222,223,226,232,237,240,248,252,260,267,312,314,320,326,339,348,354],might:350,miles:354,miller:354,milp:354,min:351,min_:[351,352,354,357],min_eigen_solver:[107,354,356],min_eigen_solver_result:[104,355,356],min_num_vars:[137,350],min_num_vars_optimizer:[134,135,137,350],mind:[353,354],minimal:107,minimization:[82,221,222,227,349,351,353],minimize:[113,119,260,348,350,351,352,353,354,356],minimized:[41,296,353,356],minimizer:145,minimizes:113,minimizing:[351,353],minimum:[8,89,104,107,109,137,192,198,320,322,326,330,338,349,352,353,354,356],minimum_eigen_optimizer:153,minimum_eigen_solver:326,minimum_eigen_solvers:[326,339],minimumeigenoptimizationresult:[66,103,110,134,135,154],minimumeigenoptimizer:[59,134,135,137,153,351,352,353,354,355,356,357,358],minimumeigenoptimizerresult:[134,135],minimumeigensolver:[104,105,106,107,109,326,350,352,355],minimumeigensolverresult:[104,105,322,330],minimuneigenoptimizer:354,minus:349,minutes:332,missing:354,missingoptionallibraryerror:[47,70,78,93,163,302,343,346],mitigation:[320,326,332],mixed:[59,352,354],mixer:[149,152,153,320,357],mod:348,mode:[140,142,144,206,207],model:[21,52,56,155,158,276,307,311,342,343,345,346,349,351,352,353,355,357,358],modeled:[73,95,353],modeling:0,modelling:357,models:[6,8,217],modifications:[348,349,350,351,352,353,354,355,356,357,358],modified:[63,348,349,350,351,352,353,354,355,356,357,358],modify:149,modular:0,module:[8,11,67,70,93,107,115,145,223,348,349,353,357],more:[14,15,18,19,22,34,35,67,111,145,269,270,273,274,277,289,290,344,348,349,350,353,354],most:[183,351,354],motivation:353,mpl:357,mtz:354,mu_merit:63,mu_res:63,much:357,multi:[59,67,111,113,145,352],multiple:[51,306,348],multiplied:[348,357],multipliers:[63,352],multiplies:351,multiset:356,multistart_optimizer:[67,145],multistartoptimizer:[67,145],must:[153,320,326,348,349,350,351,352,353,354,355,356,357,358],my_ctype:354,my_lb:354,my_obj:354,my_prob:354,my_problem:[56,311],my_rhs:354,my_sense:354,my_ub:354,n_input_qubits:82,n_output_qubits:82,name:[12,13,14,15,16,17,18,19,24,31,32,33,34,35,37,39,44,46,48,49,51,55,56,119,120,128,145,176,194,210,232,237,241,248,267,268,269,270,271,272,273,274,279,286,287,288,289,290,292,294,299,301,303,304,306,310,311,314,315,320,326,348,349,350,351,352,353,356,357,358],named:357,nameerror:354,namely:352,names:[14,18,34,126,240,247,252,253,259,269,273,289,348],natively:358,nature:[326,353,354],nbest:353,nconvert:358,ncplex:358,ndarray:[23,36,37,40,41,44,57,76,77,80,82,104,113,119,122,129,134,140,141,148,151,155,156,160,162,163,166,167,170,173,174,175,176,179,182,183,186,188,189,191,193,196,197,200,203,204,208,212,215,219,225,229,233,237,238,240,244,245,246,248,249,252,256,257,258,260,262,263,278,291,292,295,296,299,320,326,331],ndisplay:358,near:350,necessary:[354,355,356],need:[51,66,103,306,348,349,350,351,352,353,354,355,356,357,358],needed:354,needs:[351,352,353],neg_iv_n_1:354,negative:[78,351,353],neither:120,neq:354,nested:[14,15,18,19,34,35,269,270,273,274,289,290],network:353,networkx:[155,162,165,166,173,188,191,197,203,353,356],neven:353,never:[52,307,345,346],next:[154,350,351,357],node:[156,167,175,189,192,193,197,198,199,204,353,354,356,358],node_color:353,node_size:353,nodes:[163,165,192,193,198,353,354,356],non:[52,73,95,307,345,346,358],none:[13,14,15,16,17,18,19,21,22,30,33,34,35,37,40,41,44,47,48,49,51,56,59,67,70,76,82,89,93,104,107,119,120,129,137,140,153,155,157,158,163,165,192,198,213,217,226,260,268,269,270,271,272,273,274,276,277,285,288,289,290,292,295,296,299,302,303,304,306,311,320,322,326,330,342,354],noop:93,nor:120,normally:354,not:[4,23,24,31,36,37,47,48,49,53,56,59,60,62,63,67,70,72,75,78,92,93,94,97,107,110,119,149,153,154,163,194,206,207,211,214,217,258,259,262,263,278,279,286,291,292,302,303,304,308,311,314,320,322,326,330,332,337,343,346,348,350,351,352,353,354,355,356],notably:354,notation:354,note:[21,217,276,342,343,348,349,351,353,354,356,357,358],notebook:[351,354,355],notice:[348,349,350,351,352,353,354,355,356,357,358],notimplementederror:[22,277,344],notin:353,notorious:353,now:[349,352,357],nsolution:356,ntime:356,num:356,num_cuts:78,num_edges:165,num_initial_solutions:153,num_iterations:[89,351],num_min_vars:137,num_nodes:165,num_parameters:355,num_qubits:[353,356],num_value_qubits:89,num_vehicle:198,num_vehicles:197,number:[10,14,15,18,19,25,26,27,28,29,30,34,35,63,67,78,82,84,85,89,111,114,137,140,143,145,153,165,178,180,192,197,198,201,215,219,262,263,269,270,273,274,280,281,282,283,284,285,289,290,320,326,332,336,349,350,353,354,355,356,358],number_set:178,numbers:349,numpy:[80,148,174,176,183,350,352,353,354,355,356,357],numpyminimumeigensolver:[59,137,350,351,352,353,354,355,356,357],o_y:351,obj:[348,349,350,351,352,353,354,355,356,357,358],object:[12,63,64,82,105,113,119,123,140,148,149,267,312,339,348,349,351,358],objective:[16,21,40,41,82,104,107,140,141,145,148,213,217,218,226,260,261,262,263,264,265,266,271,276,295,296,342,343,348,349,350,351,352,353,354,355,357,358],objective_values:355,objectives:355,objects:[4,66,103,312,339,353,358],objsense:[260,266],observable:[322,330],observe:357,obstacles:[137,350],obtain:[350,353,354,357],obtained:[104,105,119,132,134,135,151,352,354,358],obtaining:350,occupied:[13,17,33,268,272,288],occur:353,occurs:353,off:349,offered:353,offers:349,offset:[22,40,41,53,260,277,295,296,308,344,347,348,350,351,353,354,355,356],often:[352,357],once:[137,350,353,356,357],one:[14,15,18,19,34,35,67,76,89,107,111,137,145,153,207,210,227,269,270,273,274,289,290,350,351,352,353,354,356],ones:[348,354],only:[9,21,67,68,78,100,107,145,146,153,207,213,221,222,276,320,326,342,343,349,350,351,353,354,358],open:[56,311],operate:354,operation:[82,86,145,352],operation_counts:82,operator:[22,53,277,308,322,330,338,344,347,351,352,353,354,357],operatorbase:[22,277,320,322,324,330,344],operators:[322,330,338,349],opflow:355,opt_alg:355,opt_result:355,optima:354,optimal:[57,63,76,104,107,119,121,128,129,133,134,350,351,352,353,354,355,356,357,358],optimality:[352,353],optimization0:358,optimization:[6,7,8,11,51,57,59,60,63,64,67,68,69,70,73,75,76,79,82,90,92,93,95,97,104,107,108,110,111,115,116,117,118,119,121,123,125,126,127,129,130,131,132,133,134,137,138,139,140,145,146,147,148,153,154,155,158,159,162,166,169,173,178,181,185,188,191,197,203,223,226,228,230,260,306,320,326,337,348,349,350,351,352,354],optimization_algorithm:[57,59,70,76,78,82,89,93,104,107,111,134,137,140,148],optimization_application:[159,162,169,178,185],optimizationalgorithm:[59,67,70,78,89,93,107,111,137,145,153],optimizationapplication:[159,162,169,178,185],optimizationresult:[3,57,69,75,76,82,92,97,104,113,118,134,135,139,140,147,156,160,163,167,170,175,179,182,186,189,193,200,204,350,352],optimizationresultstatus:[57,76,82,104,119,125,134,140,148,350,358],optimizations:320,optimize:[67,140,145,350],optimized:[140,141,353],optimizer:[8,9,23,36,60,61,62,63,67,68,69,70,73,75,79,90,92,93,95,97,104,107,108,110,111,112,113,114,116,117,118,119,134,137,138,139,140,142,144,145,146,147,153,154,228,230,278,291,320,326,339,341,349,353,354,357],optimizer_time:[353,356],optimizers:[0,111,352,353,354,355,358],optimum:[67,145,351,353,355],option:63,optional:[13,14,15,17,18,19,30,33,34,35,37,44,51,59,60,67,70,71,76,77,82,87,89,104,106,107,119,121,129,137,140,141,142,143,144,153,155,157,163,165,192,198,213,216,217,220,226,231,268,269,270,272,273,274,285,288,289,290,292,299,306,320,321,322,323,326,328,330,331,335,341,342,352],options:[63,206],oracle:351,order:[22,53,119,193,277,308,344,347,348,350,352,353],ordering:[348,353],org:[7,67,70,137,145,155,159,166,169,173,178,185,188,191,197,203,210,320,348,349,350,351,352,353,354,355,356,357,358],original:[3,82,104,107,119,123,163,208,212,215,219,229,349,353,355],originally:348,originals:[348,349,350,351,352,353,354,355,356,357,358],osdarwincpus2memory:[348,349,351,352,354,355],osdarwincpus4memory:356,oserror:[56,311],oslinuxcpus4memory:[350,353,357,358],other:[6,51,63,111,306,348,349,350,352,353],otherwise:[14,15,18,19,34,35,36,51,60,68,90,108,117,138,145,146,217,221,222,228,230,269,270,273,274,289,290,291,306,338,344,355],otimes:354,our:[349,351,353,354,357],out:[7,24,31,48,49,120,155,162,166,173,188,191,197,203,279,286,303,304,348],outcome:[353,354],outline:[107,137],output:[67,70,82,85,93,145,258,259,349,353,357],over:[353,355],overall:354,overnight:354,overridden:149,overview:349,own:153,pack:354,packages:[352,353,354,356],packing:[185,187,356],page:[348,349,350,351,352,353,354,355,356,357,358],pages:358,pair:354,pairs:348,pairwise:[353,356],paper:349,param:[23,196,278],parameter:[63,64,67,111,145,149,153,320,326,339,352,353,354,357,358],parameterized:[326,353,354],parameters:[63,67,70,71,137,145,320,326,354,358],params:[59,352,355],parent:[232,237,240,248,252,260,312,313,314],parikh:[63,352],part:[40,41,248,260,261,264,265,295,296,348,349,350,351,352,353,354,355,356,357,358],particle:[322,330],particular:[352,354],particularly:355,partition:[166,168,178,353,356],partition_problem:178,partitioning:180,partly:354,pass:93,passed:[67,145,153,213,217,226,320,326,357],passing:153,path:[353,354],patterns:[217,218],pauli:[22,277,344,350,353,354],pauliexpectation:355,paulisumop:[22,277,344],peleato:[63,352],penalization:[63,352],penalizing:63,penalty:[89,107,137,153,213,217,218,226,349,350,353,354,355,357],people:353,per:[82,86,320,326,339],performed:[82,86],perhaps:354,permutations:353,person:353,perspective:350,phase:[351,352,353,354],phi:357,phys:[350,353],physics:[350,353],pieces:348,pip:[7,358],places:354,plan:352,plane:354,please:[349,354],plot:[352,353,354,355],plot_histogram:[350,353],plots:354,plt:[352,353,354,355],pmatrix:357,point:[10,320,326,331,349],points:[353,354],polynomial:[351,353,354],pooya:210,populatebyrow:354,populated:352,portfolio_optimization:355,pos:[163,353,356],positions:[163,252],positive:[354,356,357],possible:[10,76,206,350,351,353,354],possibly:119,potential:[67,111,145,353],potentially:[350,353],powerful:349,powers:353,practical:[210,353],practically:352,practice:353,pre:[63,153,154,354],pre_j:353,pre_solver:[153,357],precisely:[67,348],predict:353,preparation:[137,350,351,354],prepare:355,prepares:351,prepend:320,preprint:[59,350,351,352],present:[47,302,352,354],presolver:154,press:354,prettyprint:358,previous:[351,354,356],primal:[63,352],princeton:354,principle:353,print:[70,72,93,94,119,145,348,349,350,351,352,353,354,355,356,357,358],printed:352,printing:348,prob:[354,356],probabilities:[350,355],probabilitiy:355,probability:[82,102,104,148,350,351,353,355,357,358],problem2:[206,210,226],problem:[0,3,4,8,22,51,53,57,60,62,63,64,67,68,69,70,73,75,76,77,78,79,81,82,89,90,92,93,95,97,104,107,108,110,113,116,117,118,119,126,127,134,137,138,139,140,145,146,147,151,153,154,155,156,158,159,160,162,163,164,166,167,169,170,171,172,173,175,177,178,179,180,182,184,185,186,188,189,191,192,193,195,197,198,200,202,203,204,206,207,208,210,211,212,213,214,215,218,219,221,222,224,226,227,228,229,230,277,306,308,344,347,348,349,350,352,354,355,357,358],problems:[0,1,2,8,59,67,70,73,93,95,107,137,145,206,210,226,232,237,240,248,252,260,314,348,349,350,351,352,354,357,358],procedure:352,proceed:[0,354],process:63,processing:[353,358],prod_:[353,354],produces:[149,357],product:353,production:358,products:353,profit:353,program:[0,12,13,16,17,20,21,22,33,37,38,42,44,45,47,50,52,54,56,78,237,248,260,267,268,271,272,275,276,277,288,292,293,297,299,300,302,305,307,309,311,320,326,334,342,343,344,345,346,349,350,352,353,354,357],programming:354,programs:[0,5,8,223],progress:[351,355],prohibitive:350,project:[70,358],properly:352,properties:[76,82,140,352],property:[38,39,42,43,45,46,50,54,55,58,61,71,72,77,83,84,85,86,87,88,91,94,105,106,109,112,114,121,123,124,125,126,127,128,129,135,136,141,142,143,144,157,164,171,199,201,209,216,220,231,234,235,236,239,242,243,250,251,254,255,261,264,265,266,293,294,297,298,300,301,305,309,310,313,316,317,318,319,321,323,324,325,327,328,329,331,332,333,334,335,336,337,340,341],proposed:[210,349,352,353],prospective:[193,353],protection:[137,350],provide:[354,356],provided:[0,23,36,107,278,291,352,355],provider0:[348,349,350,351,352,353,354,355,356,357,358],provider:[320,322,326,330],providers:354,provides:[67,70,93,107,145,349,350,353],providing:349,psi:[353,354],put:[351,354],putting:353,pypi:[7,70,358],pyplot:[352,353,354,355],python:[0,7,354,358],pythonpath:[47,302],q_0:348,q_i:[348,354],q_j:354,qaoa:[0,107,137,149,150,151,152,153,320,349,350,351,352,353,356,358],qaoa_mes:[350,357],qaoa_res:357,qaoa_result:[350,357],qaoaprogram:[9,326],qasm:355,qasm_simulator:[354,355,356],qc1:348,qins:[356,358],qiskit:[7,9,11,22,53,67,70,93,107,115,137,145,223,277,308,320,326,339,344,347,348,349,350,351,352,353,354,355,356,357],qiskit_copyright:[348,349,350,351,352,353,354,355,356,357,358],qiskit_optimization:[8,9,57,59,67,70,76,78,82,89,93,102,104,107,111,119,134,137,140,145,148,153,155,159,162,166,169,173,178,185,188,191,197,203,206,210,213,217,221,222,226,232,237,240,248,252,260,314,320,348,349,350,351,352,353,354,355,356,357,358],qiskit_version_table:[348,349,350,351,352,353,354,355,356,357,358],qiskitoptimizationerror:[13,14,15,17,18,19,21,22,23,33,34,35,37,44,51,52,53,60,62,69,75,92,97,107,110,118,119,137,139,147,149,153,154,194,207,211,214,215,218,219,227,242,254,262,263,268,269,270,272,273,274,276,277,278,288,289,290,292,299,306,307,308,314,342,343,344,345,346,347,348,350],qp2:358,qp2qubo:353,qp_eq:349,qp_eq_bin:349,quad:[348,352,354],quad_eq:348,quad_geq:348,quad_leq:348,quad_prog:347,quadexpr:358,quadratic:[0,8,9,12,13,16,17,20,21,22,29,31,33,37,38,40,41,42,43,44,45,46,47,49,50,52,54,56,78,81,107,145,223,237,248,252,254,255,256,257,258,259,260,262,263,267,268,271,272,275,276,277,284,286,288,292,293,295,296,297,298,299,300,301,302,304,305,307,309,311,342,343,344,345,346,350,351,352,353,354,357,358],quadratic_constraint:348,quadratic_program:[232,237,240,248,252,260,312,314,345,346],quadratic_program_converter:[206,210,213,217,226],quadratic_program_element:[232,240,252,260,314],quadratic_program_to_qubo:357,quadratically:[0,12,267,348,354],quadraticconstraint:[31,44,45,286,299,300],quadraticexpression:[251,265],quadraticobjective:[43,298],quadraticprogram:[3,4,6,60,62,64,67,68,69,70,73,75,79,81,90,92,93,95,97,107,108,110,113,116,117,118,119,137,138,139,145,146,147,154,158,161,168,172,177,180,184,187,190,195,202,205,206,207,210,211,214,218,224,226,227,228,230,232,240,252,312,313,314,342,343,344,345,346,349,350,351,352,353,354,355,356,357],quadraticprogramconverter:[89,107,137,153,206,210,213,217,226],quadraticprogramelement:[232,240,252,260,314],quadraticprogramstatus:[50,305,348],quadraticprogramtonegativevalueoracle:351,quadraticprogramtoqubo:[89,107,137,153,349,353,356,357],quantitative:353,quantum:[0,8,59,91,92,149,150,152,153,210,320,326,349,350,351,356],quantum_cost:354,quantum_info:354,quantum_instance:[89,350,351,352,353,354,355,356,357,358],quantum_optimizer:354,quantum_solution:354,quantumcircuit:[150,152,320,321,323,324,326,327,357],quantuminstance:[89,91,350,353,354,356,357,358],quantumoptimizer:354,qubit:[22,53,277,308,322,330,344,347,351,353,354,356,357],qubit_op:[22,53,277,308,344,347],qubitop:353,qubits:[22,53,82,84,85,89,277,308,344,347,351,353,354,356],qubo:[0,59,63,82,89,90,92,104,107,108,138,217,226,227,228,349,352,353,354,356,357],qubo_optimizer:[59,352],qubos:352,r_i:348,r_y:357,raise:[0,75,97,354],raises:[60,92,348],raising:9,rand:354,random:[78,165,192,198,320,326,353,354,355,356],random_model:355,random_regular_graph:356,random_seed:[350,353,354,355,356,357],randomized:351,randomly:354,range:[0,9,48,49,120,149,153,303,304,348,353,354,355,357],rangle:[351,353,354,357],rangle_m:351,rangle_n:[351,357],rapid:0,raw:[87,106],raw_results:119,raw_samples:[82,104],reached:137,reaches:[353,354],read:[176,194],readout:332,ready:[0,354],real:[0,353,358],realamplitudes:355,reasonable:67,recent:353,recognizes:351,recreated:64,recursive:[134,137,139,350],recursiveminimumeigenoptimizer:98,reduce:350,reduces:350,refactoring:354,refer:[0,247,259,350,351],reference:[51,67,145,306,349,352,354,355],references:[59,137,153,155,159,166,169,173,178,185,188,191,197,203,210,217,353],referred:352,regarded:353,region:67,register:351,regularization:[149,153],relax:357,relax_for_pre_solver:[153,357],relax_problem:357,relaxation:357,relaxations:357,relaxed:[63,151,153,357],relaxed_problem:357,relevant:[0,64,353],remain:357,remaining:137,remains:351,remove:[48,49,303,304,348,349],remove_linear_constraint:348,remove_quadratic_constraint:348,replace:[51,306,348,350],replaced:[67,111,145,349,350],replacements:134,reported:352,represent:[82,84,85,349,351],representable:0,representation:[0,12,237,240,248,252,260,267,314,349,350,353,354,355],representations:[0,3],represented:[349,353],representing:[20,107,155,162,166,173,188,191,197,203,275],represents:[150,353,357],reps:[320,353,355,356],requested:145,require:[217,353],required:[0,224,354],requirement:351,requirements:7,requires:[47,302],requisites:354,res:[350,357],research:352,reshape:354,residual:[63,352],residuals:[63,352],respect:[350,353],respected:353,respective:350,respectively:[348,349,351,352,358],respects:349,restricted:358,result:[3,23,36,57,62,66,67,69,70,75,82,92,93,97,103,104,105,107,110,113,118,119,123,134,137,139,140,145,147,154,156,160,163,167,170,175,179,182,186,189,193,200,204,208,212,215,219,224,225,229,278,291,322,330,339,349,350,351,353,354,356,357,358],result_q:352,resulting:[107,348,349,350,354,355,357],results:[65,66,76,98,99,100,101,102,103,119,123,134,135,137,153,350,351,353,354,355,357],retain:[348,349,350,351,352,353,354,355,356,357,358],returned:[11,23,36,64,98,140,278,291,322,330,352],returns:[20,23,24,25,26,27,28,29,30,31,32,36,38,39,42,43,45,46,52,54,55,58,60,61,68,71,72,73,74,77,78,79,81,87,90,94,95,96,105,106,108,109,112,114,116,117,120,121,124,125,126,127,128,129,135,136,138,141,142,143,144,146,153,209,216,220,228,230,231,234,235,236,239,241,242,243,246,247,250,251,253,254,255,258,259,261,264,265,266,275,278,279,280,281,282,283,284,285,286,287,291,293,294,297,298,300,301,307,309,310,313,315,316,317,318,319,323,324,325,328,329,331,332,337,345,346,348,351,355],rev:353,revenues:353,reversed:[353,355],rho:[63,64,352],rho_initial:[63,64,352],rhobeg:67,rhoend:67,rhs:[37,44,232,237,248,292,299,348,349,354],right:[37,44,232,235,237,248,292,299,348,349,355],rightarrow:[217,218,351,353],risk:355,ronagh:210,root:[348,349,350,351,352,353,354,355,356,357,358],rotations:[353,354,357],route:356,routes:[200,354,356],routine:[349,353],routing:[8,197,198,202,356],rows:354,rqaoa:350,rqaoa_result:350,rule:63,run:[0,91,154,320,326,351,352,353,354,355],running:[63,352],runs:[69,75,92,97,110,118,139,147,354],runtime:[320,322,326,330,340],runtimeerror:[322,330],sahar:210,sake:354,sales:353,salesman:[8,191,192,195,354,356],same:[22,23,51,53,277,278,306,308,339,344,347,348,349,350,352,354,356,357,358],sample:[102,148,353,358],sample_most_likely:353,sampled:353,samples:[66,76,82,87,103,104,106,119,122,353,354,357,358],samples_for_plot:350,sampling:[82,104,353,354,357],sanity:354,satisfy:349,save:358,say:353,scale:[107,137,213,217,226],scaled:348,scales:354,scaling:355,scatter:354,scheme:[137,350],science:353,scientists:353,scipy:[67,140,145],scripts:5,sdp:[76,77],sdp_solution:76,search:[0,89,353],searching:353,sec:358,second:[134,135,349,354],seconds:63,section:[348,351,356,358],see:[22,53,70,140,277,308,344,347,349,351,353,354,358],seed:[78,165,192,198,353,354,355,356],seed_simulator:[350,353,354,356,357],seed_transpiler:[350,353,354,356,357],seen:353,segment:354,select:[63,352],selected:[89,207,354,356],self:[11,332,354],sell:353,semi:357,sense:[37,44,207,221,222,232,237,248,260,292,299,348,349,354],senses:[348,354],sep:357,separately:352,sequence:[14,15,18,19,34,35,269,270,273,274,289,290],sequential:358,serve:354,serves:326,service:354,set:[0,3,11,63,92,185,187,188,190,320,322,326,330,348,352,353,354,355,356,358],set_error_stream:354,set_log_stream:354,set_packing:185,set_results_stream:354,set_sense:354,set_warning_stream:354,setobjective:358,sets:[40,41,175,295,296],setting:[72,94,348,352,357,358],settings:[75,97,320,326],setup:[348,355],several:[153,349],shape:[262,263],shift:[22,277,344,350,351],shifted:351,ships:354,shortest:353,shots:[320,326,332,355,356,358],should:[52,63,98,111,119,149,153,307,345,346,350,351,353],show:[350,352,353,354,355,357],showcase:354,shown:[351,355,357],shows:[348,351,354,355],side:[37,44,232,233,235,237,238,239,248,249,250,251,292,299,348,349],sides:349,sigma:[355,357],sign:349,signs:349,silent:145,sim:354,similar:354,similarly:354,simlator:355,simonetto:[59,352],simple:[352,353],simplest:354,simplicity:0,simplistic:354,simply:353,simulated:352,simulation:[352,354],simulator:[89,355],simulators:0,since:[22,73,95,277,344,349,351,353],single:[351,353,354,357,358],size:[24,31,67,155,158,279,286,350,351,354,356],sizes:[119,356],slack:[206,209,217,349],slsqp:[140,145],slsqpoptimizer:59,small:[350,354,357],smaller:111,smode:140,smoothen:355,softwareversionqiskit0:350,softwareversionqiskit:358,softwareversionqiskitnoneterra0:[348,349,351,352,353,354,355,356,357],sol:357,solution:[23,36,63,76,77,82,87,106,107,119,124,132,133,140,148,151,174,196,278,291,350,351,353,356,357,358],solutions:[76,153,351,353,354,358],solutionsample:[66,76,82,87,103,104,106,119,124,350,358],solve:[0,59,67,70,78,93,95,107,113,119,137,145,153,350,351,352,353,354,355,356,357,358],solve_problem:354,solved:[0,60,62,64,67,68,69,73,75,79,90,92,95,97,108,110,111,116,117,118,119,138,139,145,146,147,154,207,211,214,218,227,228,230,352,357],solver:[107,137,153,154,350,354,357,358],solvers:[8,107,153,352],solves:[62,69,75,92,97,110,118,147,154,354],solving:[63,64,353],some:[0,217,348,353,354,355,358],sometimes:350,sort:[78,355],sort_cuts:78,sorted:357,sought:354,source:[7,348,349,350,351,352,353,354,355,356,357,358],space:[351,353],sparse:[240,252,348],speaking:[353,354],specific:[82,140,351,352,354],specification:[348,353],specified:[30,59,67,89,107,111,113,137,145,153,155,158,162,166,173,188,191,197,203,207,285,320,348,353,356],specify:[67,70,93,107,137,145,348],specifying:[119,237,248,320,326,348],speed:[353,354],speedup:353,spent:354,spin:350,splitting:352,spmatrix:[37,40,41,44,237,240,248,252,260,292,295,296,299],spring_layout:[353,356],spsa:[320,326,353,354],sqrt:357,squared:352,stable:[188,190,356],stack:354,standard:[0,149,153,320,326,350,355],stands:352,star:354,start:[63,67,111,113,145,149,150,151,153,154,348,350],started:[7,353],starting:[8,153,320,349],state:[57,64,107,137,149,150,153,183,320,322,323,330,338,349,350,351,352,354,357],state_vector:183,states:[153,351,353],statevector:[89,355],statevector_simulator:[350,351,352,357],statistical:[63,352,353],statistics:[350,352],status:[51,57,76,82,104,119,130,134,140,145,148,306,348,350,353,355,356,357,358],std:350,stddev:355,stdout:93,step:[134,135,339],steps:[320,326,351,353,354,357],still:[0,51,306,351,353,355,357],store:[320,326,337,355],store_intermediate:[320,326],stored:[64,98,99,100,101,137,348],stores:[67,145,240,252],str:[12,13,14,15,17,18,19,20,24,31,32,33,34,35,37,39,40,41,42,44,46,47,48,49,51,55,56,60,68,70,71,73,79,82,86,90,95,108,116,120,126,128,134,136,138,140,144,146,176,194,206,209,228,232,233,234,237,238,240,241,244,245,247,248,249,252,253,256,257,259,260,262,263,267,268,269,270,272,273,274,275,279,286,287,288,289,290,292,294,295,296,297,299,301,302,303,304,306,310,311,314,315,317,320,326,333,334,340,341,353,354,357],strategies:353,strategy:353,stress:354,string:[10,20,56,68,73,95,120,146,174,183,275,311],strings:[14,15,18,19,34,35,269,270,273,274,289,290],strong:353,stronger:354,structures:4,sub:[0,111,348,354],subcollection:356,subgraph:356,subject:[348,349,350,351,352,353,354,356,357,358],subproblem:352,subset:[349,353,356],subseteq:352,subsets:[159,160,179,185,186,353,356],subspaces:320,substitute:348,substitute_variables:348,substituted:[14,15,18,19,34,35,51,134,136,269,270,273,274,289,290,306,348],substitutes:[51,306],substituting:[51,134,136,306],substitution:[14,15,18,19,34,35,50,51,139,269,270,273,274,289,290,305,306,348],succeeded:133,success:[350,353,355,356,357,358],such:[0,23,36,107,278,291,339,348,349,350,351,352,353,356,357,358],suffix:[56,311],suggests:353,suitable:[155,162,166,173,188,191,197,203,350,352,354],suite:0,sum:[179,349,353,354,355,357],sum_:[78,217,218,353,354],sum_i:[349,353],sum_p:353,summands:353,summarized:354,summary:145,summations:353,summed:252,sums:356,superposition:351,supplied:217,support:320,supported:[52,207,211,307,320,326,338,345,346,350],supporting:0,supports:[0,12,21,217,267,276,342,343,348,352,353,358],suppose:353,suppress:93,sure:[51,306,354],symbol:349,symbols:349,symmetric:[252,258,259,348,352],symmetry:[137,350],sys:[93,354],system:353,tackle:352,take:354,taken:[14,15,18,19,34,35,269,270,273,274,289,290,353],takes:[67,107,137,145,350,351,352,353,354,356],taking:350,tang:350,target:[353,354],tau_decr:63,tau_incr:63,techniques:351,temp:353,term:[22,78,217,218,248,277,344,348,349,350,353,354,355,357],terminate:351,termination:[57,76,82,104,119,125,130,134,140,352],terms:[9,107,137,213,217,218,348,349,352,353,354],terra0:358,terra:[0,22,53,277,308,344,347],test:352,tested:355,testing:[0,352],text:[217,218,348,349],textbf:353,than:[14,15,18,19,22,34,35,37,44,67,78,111,145,269,270,273,274,277,289,290,292,299,314,344,353,354],that:[0,5,21,39,46,51,55,59,64,66,73,81,82,95,103,111,113,119,137,140,149,150,153,207,208,211,213,214,215,217,219,226,229,240,252,276,294,301,306,310,312,320,326,338,342,343,348,349,350,352,354,356,357,358],the:[0,3,4,5,7,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,100,102,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,218,219,220,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,352,355,357,358],their:[63,78,153,322,330,349,350,351,353],them:[0,67,103,145,354,357],themselves:353,then:[59,63,67,107,111,145,149,153,338,348,349,350,351,352,353,354,357],theorem:352,theory:[155,188],there:[22,78,89,137,206,217,277,344,348,351,353,354,357],therefore:[78,357],thereof:107,these:[4,320,322,326,330,349,353,354,358],theta:[152,353,354,357],theta_:[353,354],theta_i:357,thetas:357,they:[217,338,348,349,350,351,352,353,354,355,356,357,358],third:[64,354],thiscopyright:[348,349,350,351,352,353,354,355,356,357,358],those:349,though:354,threads:358,three:[348,349,351],three_block:[63,352],threshold:[82,137,350,351],through:[350,353],throughout:354,thus:[78,348,349,350,355],ticks:358,tilde:353,time:[63,350,351,352,353,354,356,358],timelimit:358,times:[51,306,348,352,353,354,357],title:[351,354],title_str:354,to_array:348,to_dict:348,to_docplex_mp:358,to_gurobipy:358,to_ising:[350,353,355,356],to_numpy_matrix:353,to_quadratic_program:[353,356],todo:107,together:[353,354],tol:[63,352],tolerance:[63,67,352],too:358,tools:[348,349,350,351,352,353,354,355,356,357,358],top:[137,314,348],topic:70,total:[23,25,26,27,30,179,196,278,280,281,282,285,322,330,353,356,357,358],tour:354,tours:354,towards:[320,326],toy:351,track:64,tradeoff:355,transform:354,translate:[342,343,349,350,355],translated:[107,345,346],translating:358,translation:[350,355],translators:[348,351,352,355,357],travel:354,traveled:354,traveling:[8,191,192,195,354,356],travelling:[191,354],travelling_salesman_problem:191,traversal:353,treat:344,treated:[22,277,344],tree:[348,349,350,351,352,353,354,355,356,357,358],trends:[63,352],trial:[67,111,145,353,354],trials:[67,111,145],triangle:252,tries:[62,69,75,92,97,110,118,139,147,154,353],troyer:353,trucks:354,trust:67,tsp:353,tsp_value:353,tsplib:194,tucker:354,tuning:63,tuple:[40,41,44,51,113,134,135,136,248,252,253,259,260,295,296,299,306,315,350,353],tuples:259,turn:354,tutorial:[217,348,349,350,352,353],tutorials:[7,348,349,350,351,352,353,354,355,356,357,358],twice:354,two:[167,175,348,349,350,353,354,356,358],twolocal:[353,354],txt:[7,348,349,350,351,352,353,354,355,356,357,358],type:[23,30,53,89,107,119,137,148,194,196,206,207,211,218,278,285,308,314,315,319,349],typeerror:[89,107,120,137,312],types:[4,348,354],typical:353,typically:[353,354],typing:[350,352],u_i:[348,354],u_j:354,ubiquitous:353,unavailable:354,unbounded:[67,111,145,242,254],unchanged:[221,222],uncomment:352,unconstrained:[0,107,213,214,349,350,351,355,357],under:[348,349,350,351,352,353,354,355,356,357,358],underlying:[104,349,357],understand:182,understanding:350,undirected:[353,356],uniform:0,uniformly:[67,111,145],union:[14,15,17,18,19,22,23,24,31,32,33,34,35,36,37,40,41,44,48,49,51,76,82,89,104,107,119,120,134,137,140,153,155,156,160,162,163,166,167,170,173,175,179,182,183,186,188,189,191,193,197,200,203,204,208,212,215,219,229,233,237,238,240,241,244,245,247,248,249,252,253,256,257,259,260,262,263,269,270,272,273,274,277,278,279,286,287,288,289,290,291,292,295,296,299,303,304,306,314,315,316,318,320,324,326,333,344],unique:78,unique_cuts:78,university:354,unknown:353,unsupported:[21,207,218,276,342,343],until:[137,351,352,353,354],update:[63,352,358],update_rho_by_residuals:63,updated:[51,64,306,351],upon:145,upper:[9,18,19,34,35,51,67,111,145,242,252,254,273,274,289,290,306,348,349],upperbound:[17,18,19,33,34,35,67,111,145,210,272,273,274,288,289,290,314,315,348,349,358],usage:5,usd:354,use:[0,67,89,107,137,145,153,206,247,259,320,326,332,348,349,350,351,352,353,354,355,357,358],use_name:[247,259,348],used:[14,15,18,19,34,35,59,63,67,70,82,84,85,89,91,93,107,137,145,152,153,209,210,216,220,231,233,269,270,273,274,289,290,314,320,326,342,349,351,352,357],useful:[350,353,354],user:98,users:[0,119,153,217,356],userwarning:353,uses:[14,15,18,19,34,35,89,153,240,252,269,270,273,274,289,290,349,350,351,353,354],using:[0,8,51,62,69,73,75,92,95,97,110,118,139,147,153,154,182,217,225,247,259,306,332,348,350,352,353,357],usually:350,utility:353,utilize:356,utilizes:351,utils:[350,353,354,355,356,357,358],val:355,valid:[37,51,292,306,320],validation:[0,352],value:[22,23,36,53,57,63,64,76,78,80,82,83,89,98,104,111,112,119,120,121,128,129,130,134,136,137,140,141,148,153,192,196,198,217,244,245,256,257,262,263,277,278,291,308,320,338,342,344,347,348,350,352,353,354,355,356,357,358],valueerror:[111,322,330],values:[63,64,67,76,78,80,82,104,111,145,148,151,169,233,238,240,244,245,249,252,256,257,262,263,320,322,326,330,339,348,349,350,351,352,353,354,355,356],valuing:354,var_dict:[14,18,34,269,273,289],var_list:[15,19,35,270,274,290],variable:[13,14,15,17,18,19,22,23,32,33,34,35,50,51,53,54,55,57,67,76,82,104,111,119,120,126,127,128,134,136,139,140,145,151,156,160,170,186,189,204,207,211,218,238,240,241,242,244,245,247,249,252,253,254,256,257,259,262,263,268,269,270,272,273,274,277,278,287,288,289,290,305,306,308,309,310,344,347,348,349,350,352,353,354,357,358],variable_names:119,variables:[0,9,12,14,15,16,18,19,21,22,23,25,26,27,30,34,35,51,53,57,63,64,67,68,76,82,104,107,119,120,134,136,137,140,145,146,148,149,150,151,152,153,206,209,210,211,212,215,217,218,219,233,238,244,245,247,249,253,256,257,259,262,263,267,269,270,271,273,274,276,277,278,280,281,282,285,289,290,306,308,314,342,343,344,347,349,350,351,352,353,354,357,358],variables_dict:119,variant:352,variational:[0,8,137,350,351,352,354],variety:349,various:[64,356],varphi:352,vars:[23,278,358],vartype:[30,285,314,315,357],vary:351,vary_rho:63,vast:0,vector:[107,183,320,326,348,352,354,356,357],vectors:[0,348],vehicle:[8,197,198,200,202,356],vehicle_routing_problem:197,vehicles:[197,198,199,201,354,356],verbosity:145,verify:[351,354],version:[153,348,349,350,351,352,353,354,355,356,357,358],version_info:354,versions:358,vertex:[203,205,353],vertex_cover:[203,356],vertexcover:356,vertices:353,very:[0,350],via:[0,14,15,18,19,34,35,63,67,134,135,145,240,252,269,270,273,274,289,290,352,354,358],violated:[23,278],violations:[23,67,278],visit:353,visiting:354,visits:356,visualization:[7,350,351,353,354],visualize:354,visualize_solution:354,visualized:352,vqe:[322,326,330,339,340,349,350,351,352,353,354],vqe_optimizer:353,vqe_program:320,vqeprogram:[9,320,339],vqeresult:339,vrp:354,vtype:358,w_i:353,w_list:354,want:[350,356,358],warm:[8,149,150,151,153,154,320],warm_start:63,warm_start_factory:153,warm_start_qaoa_optimizer:102,warmstartqaoacircuitfactory:153,warmstartqaoafactory:153,warmstartqaoaoptimizer:357,warning:354,warnings:353,was:[348,349,350,351,352,353,354,355,356,357,358],wave:[326,354],wavefunction:[353,354],way:[252,348,353,354],ways:357,wecker:353,weighs:354,weight:[134,136,169,171,194,353,354,356],weighted:[51,107,306],weights:[169,353,354,356],well:[0,12,16,107,267,271,320,348,350,353],were:[79,116,348,349],what:354,wheel:351,when:[63,67,89,107,119,137,145,149,153,155,157,158,163,348,351,357,358],whenever:353,where:[63,197,198,199,217,218,241,253,348,349,351,353,354],whereas:353,wherein:354,whether:[23,36,60,68,70,72,73,79,90,93,94,95,98,108,116,117,137,138,146,228,230,247,258,259,278,291,320,326,332,337,338,348,349],which:[0,23,217,278,348,349,350,351,352,353,354,357,358],whole:0,whose:[107,120,156,160,170,179,186,189,193,204,348,353,356],wiki:[155,159,166,169,173,178,185,188,191,197,203],wikipedia:[155,159,166,169,173,178,185,188,191,197,203],will:[0,59,63,89,95,107,137,153,206,213,217,226,338,349,350,351,353,354,357],williamson:[7,76,78,81],wise:354,with_traceback:11,within:[4,67,70,93,107,145,354,355,356],without:[9,163,351,358],woerner:[351,357],work:349,workaround:350,workflow:354,working:[351,354],works:[320,326,348,349,350,351,352,353,354,355,356,357,358],worth:[353,354],worthwhile:354,would:[353,354,355],wrapped:[67,70,93,145,352],wrapper:[67,70,93,107,145,349],wraps:350,write:[93,354],writelines:93,writes:[56,311],written:[56,311,349,354],ws_mixer:357,ws_qaoa:357,ws_qaoa_mes:357,ws_qaoa_result:357,ws_result:357,www:[70,348,349,350,351,352,353,354,355,356,357,358],x_0:[350,351,353,356],x_0_0:353,x_0_1:353,x_0_2:353,x_1:[350,351,353,356],x_1_0:353,x_1_1:353,x_1_2:353,x_2:[350,351,353,356],x_2_0:353,x_2_1:353,x_2_2:353,x_2x_3:351,x_3:[353,356],x_4:356,x_5:356,x_bin:355,x_i:[217,218,348,349,353,357],x_j:[217,218,353],x_quantum:354,x_sol:354,xbest_brute:353,xlabel:[352,355],xlim:355,xticks:355,xyz:349,xyz_geq:349,xyz_leq:349,yet:[322,330],yield:353,yields:354,ylabel:[352,355],you:[348,349,350,351,352,353,354,355,356,357,358],your:[348,356],yticks:355,z_i:[353,354],z_iz_j:353,z_iz_jz_k:353,z_j:353,zemlin:354,zero:[9,51,67,111,145,306],zeros:[353,354,355],zfill:353,zii:350,ziiiiiiii:[353,356],ziiiiiiiz:[353,356],ziiiiiizi:[353,356],ziiiiizii:[353,356],ziiiiziii:[353,356],ziiiziiii:[353,356],ziiz:353,ziiziiiii:[353,356],ziz:350,ziziiiiii:[353,356],zsh:7,zzi:350,zzii:353,zziiiiiii:[353,356]},titles:["Qiskit Optimization API Reference","Optimization algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms</span></code>)","Optimization applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.applications</span></code>)","Optimization converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.converters</span></code>)","Optimization problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.problems</span></code>)","Qiskit Optimization Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.runtime</span></code>)","Quadratic program translators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.translators</span></code>)","\u041d\u0430\u0447\u0430\u043b\u043e \u0440\u0430\u0431\u043e\u0442\u044b","\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 Qiskit","Release Notes","INFINITY","QiskitOptimizationError","QuadraticProgram","QuadraticProgram.binary_var","QuadraticProgram.binary_var_dict","QuadraticProgram.binary_var_list","QuadraticProgram.clear","QuadraticProgram.continuous_var","QuadraticProgram.continuous_var_dict","QuadraticProgram.continuous_var_list","QuadraticProgram.export_as_lp_string","QuadraticProgram.from_docplex","QuadraticProgram.from_ising","QuadraticProgram.get_feasibility_info","QuadraticProgram.get_linear_constraint","QuadraticProgram.get_num_binary_vars","QuadraticProgram.get_num_continuous_vars","QuadraticProgram.get_num_integer_vars","QuadraticProgram.get_num_linear_constraints","QuadraticProgram.get_num_quadratic_constraints","QuadraticProgram.get_num_vars","QuadraticProgram.get_quadratic_constraint","QuadraticProgram.get_variable","QuadraticProgram.integer_var","QuadraticProgram.integer_var_dict","QuadraticProgram.integer_var_list","QuadraticProgram.is_feasible","QuadraticProgram.linear_constraint","QuadraticProgram.linear_constraints","QuadraticProgram.linear_constraints_index","QuadraticProgram.maximize","QuadraticProgram.minimize","QuadraticProgram.name","QuadraticProgram.objective","QuadraticProgram.quadratic_constraint","QuadraticProgram.quadratic_constraints","QuadraticProgram.quadratic_constraints_index","QuadraticProgram.read_from_lp_file","QuadraticProgram.remove_linear_constraint","QuadraticProgram.remove_quadratic_constraint","QuadraticProgram.status","QuadraticProgram.substitute_variables","QuadraticProgram.to_docplex","QuadraticProgram.to_ising","QuadraticProgram.variables","QuadraticProgram.variables_index","QuadraticProgram.write_to_lp_file","ADMMOptimizationResult","ADMMOptimizationResult.state","ADMMOptimizer","ADMMOptimizer.get_compatibility_msg","ADMMOptimizer.parameters","ADMMOptimizer.solve","ADMMParameters","ADMMState","BaseAggregator","BaseAggregator.aggregate","CobylaOptimizer","CobylaOptimizer.get_compatibility_msg","CobylaOptimizer.solve","CplexOptimizer","CplexOptimizer.cplex_parameters","CplexOptimizer.disp","CplexOptimizer.get_compatibility_msg","CplexOptimizer.is_cplex_installed","CplexOptimizer.solve","GoemansWilliamsonOptimizationResult","GoemansWilliamsonOptimizationResult.sdp_solution","GoemansWilliamsonOptimizer","GoemansWilliamsonOptimizer.get_compatibility_msg","GoemansWilliamsonOptimizer.max_cut_value","GoemansWilliamsonOptimizer.solve","GroverOptimizationResult","GroverOptimizationResult.intermediate_fval","GroverOptimizationResult.n_input_qubits","GroverOptimizationResult.n_output_qubits","GroverOptimizationResult.operation_counts","GroverOptimizationResult.raw_samples","GroverOptimizationResult.threshold","GroverOptimizer","GroverOptimizer.get_compatibility_msg","GroverOptimizer.quantum_instance","GroverOptimizer.solve","GurobiOptimizer","GurobiOptimizer.disp","GurobiOptimizer.get_compatibility_msg","GurobiOptimizer.is_gurobi_installed","GurobiOptimizer.solve","IntermediateResult","IntermediateResult.ALL_ITERATIONS","IntermediateResult.LAST_ITERATION","IntermediateResult.NO_ITERATIONS","MeanAggregator","MeanAggregator.aggregate","MinimumEigenOptimizationResult","MinimumEigenOptimizationResult.min_eigen_solver_result","MinimumEigenOptimizationResult.raw_samples","MinimumEigenOptimizer","MinimumEigenOptimizer.get_compatibility_msg","MinimumEigenOptimizer.min_eigen_solver","MinimumEigenOptimizer.solve","MultiStartOptimizer","MultiStartOptimizer.clip","MultiStartOptimizer.multi_start_solve","MultiStartOptimizer.trials","OptimizationAlgorithm","OptimizationAlgorithm.get_compatibility_msg","OptimizationAlgorithm.is_compatible","OptimizationAlgorithm.solve","OptimizationResult","OptimizationResult.__getitem__","OptimizationResult.fval","OptimizationResult.get_correlations","OptimizationResult.raw_results","OptimizationResult.samples","OptimizationResult.status","OptimizationResult.variable_names","OptimizationResult.variables","OptimizationResult.variables_dict","OptimizationResult.x","OptimizationResultStatus","OptimizationResultStatus.FAILURE","OptimizationResultStatus.INFEASIBLE","OptimizationResultStatus.SUCCESS","RecursiveMinimumEigenOptimizationResult","RecursiveMinimumEigenOptimizationResult.history","RecursiveMinimumEigenOptimizationResult.replacements","RecursiveMinimumEigenOptimizer","RecursiveMinimumEigenOptimizer.get_compatibility_msg","RecursiveMinimumEigenOptimizer.solve","SlsqpOptimizationResult","SlsqpOptimizationResult.fx","SlsqpOptimizationResult.imode","SlsqpOptimizationResult.its","SlsqpOptimizationResult.smode","SlsqpOptimizer","SlsqpOptimizer.get_compatibility_msg","SlsqpOptimizer.solve","SolutionSample","WarmStartQAOAFactory","WarmStartQAOAFactory.create_initial_state","WarmStartQAOAFactory.create_initial_variables","WarmStartQAOAFactory.create_mixer","WarmStartQAOAOptimizer","WarmStartQAOAOptimizer.solve","Clique","Clique.interpret","Clique.size","Clique.to_quadratic_program","ExactCover","ExactCover.interpret","ExactCover.to_quadratic_program","GraphOptimizationApplication","GraphOptimizationApplication.draw","GraphOptimizationApplication.graph","GraphOptimizationApplication.random_graph","GraphPartition","GraphPartition.interpret","GraphPartition.to_quadratic_program","Knapsack","Knapsack.interpret","Knapsack.max_weight","Knapsack.to_quadratic_program","Maxcut","Maxcut.get_gset_result","Maxcut.interpret","Maxcut.parse_gset_format","Maxcut.to_quadratic_program","NumberPartition","NumberPartition.interpret","NumberPartition.to_quadratic_program","OptimizationApplication","OptimizationApplication.interpret","OptimizationApplication.sample_most_likely","OptimizationApplication.to_quadratic_program","SetPacking","SetPacking.interpret","SetPacking.to_quadratic_program","StableSet","StableSet.interpret","StableSet.to_quadratic_program","Tsp","Tsp.create_random_instance","Tsp.interpret","Tsp.parse_tsplib_format","Tsp.to_quadratic_program","Tsp.tsp_value","VehicleRouting","VehicleRouting.create_random_instance","VehicleRouting.depot","VehicleRouting.interpret","VehicleRouting.num_vehicles","VehicleRouting.to_quadratic_program","VertexCover","VertexCover.interpret","VertexCover.to_quadratic_program","InequalityToEquality","InequalityToEquality.convert","InequalityToEquality.interpret","InequalityToEquality.mode","IntegerToBinary","IntegerToBinary.convert","IntegerToBinary.interpret","LinearEqualityToPenalty","LinearEqualityToPenalty.convert","LinearEqualityToPenalty.interpret","LinearEqualityToPenalty.penalty","LinearInequalityToPenalty","LinearInequalityToPenalty.convert","LinearInequalityToPenalty.interpret","LinearInequalityToPenalty.penalty","MaximizeToMinimize","MinimizeToMaximize","QuadraticProgramConverter","QuadraticProgramConverter.convert","QuadraticProgramConverter.interpret","QuadraticProgramToQubo","QuadraticProgramToQubo.convert","QuadraticProgramToQubo.get_compatibility_msg","QuadraticProgramToQubo.interpret","QuadraticProgramToQubo.is_compatible","QuadraticProgramToQubo.penalty","Constraint","Constraint.evaluate","Constraint.name","Constraint.rhs","Constraint.sense","LinearConstraint","LinearConstraint.evaluate","LinearConstraint.linear","LinearExpression","LinearExpression.__getitem__","LinearExpression.bounds","LinearExpression.coefficients","LinearExpression.evaluate","LinearExpression.evaluate_gradient","LinearExpression.to_array","LinearExpression.to_dict","QuadraticConstraint","QuadraticConstraint.evaluate","QuadraticConstraint.linear","QuadraticConstraint.quadratic","QuadraticExpression","QuadraticExpression.__getitem__","QuadraticExpression.bounds","QuadraticExpression.coefficients","QuadraticExpression.evaluate","QuadraticExpression.evaluate_gradient","QuadraticExpression.to_array","QuadraticExpression.to_dict","QuadraticObjective","QuadraticObjective.constant","QuadraticObjective.evaluate","QuadraticObjective.evaluate_gradient","QuadraticObjective.linear","QuadraticObjective.quadratic","QuadraticObjective.sense","QuadraticProgram","QuadraticProgram.binary_var","QuadraticProgram.binary_var_dict","QuadraticProgram.binary_var_list","QuadraticProgram.clear","QuadraticProgram.continuous_var","QuadraticProgram.continuous_var_dict","QuadraticProgram.continuous_var_list","QuadraticProgram.export_as_lp_string","QuadraticProgram.from_docplex","QuadraticProgram.from_ising","QuadraticProgram.get_feasibility_info","QuadraticProgram.get_linear_constraint","QuadraticProgram.get_num_binary_vars","QuadraticProgram.get_num_continuous_vars","QuadraticProgram.get_num_integer_vars","QuadraticProgram.get_num_linear_constraints","QuadraticProgram.get_num_quadratic_constraints","QuadraticProgram.get_num_vars","QuadraticProgram.get_quadratic_constraint","QuadraticProgram.get_variable","QuadraticProgram.integer_var","QuadraticProgram.integer_var_dict","QuadraticProgram.integer_var_list","QuadraticProgram.is_feasible","QuadraticProgram.linear_constraint","QuadraticProgram.linear_constraints","QuadraticProgram.linear_constraints_index","QuadraticProgram.maximize","QuadraticProgram.minimize","QuadraticProgram.name","QuadraticProgram.objective","QuadraticProgram.quadratic_constraint","QuadraticProgram.quadratic_constraints","QuadraticProgram.quadratic_constraints_index","QuadraticProgram.read_from_lp_file","QuadraticProgram.remove_linear_constraint","QuadraticProgram.remove_quadratic_constraint","QuadraticProgram.status","QuadraticProgram.substitute_variables","QuadraticProgram.to_docplex","QuadraticProgram.to_ising","QuadraticProgram.variables","QuadraticProgram.variables_index","QuadraticProgram.write_to_lp_file","QuadraticProgramElement","QuadraticProgramElement.quadratic_program","Variable","Variable.as_tuple","Variable.lowerbound","Variable.name","Variable.upperbound","Variable.vartype","QAOAProgram","QAOAProgram.ansatz","QAOAProgram.compute_minimum_eigenvalue","QAOAProgram.initial_state","QAOAProgram.mixer","QAOAProgram.reps","VQEProgram","VQEProgram.ansatz","VQEProgram.backend","VQEProgram.callback","VQEProgram.compute_minimum_eigenvalue","VQEProgram.initial_point","VQEProgram.measurement_error_mitigation","VQEProgram.optimizer","VQEProgram.program_id","VQEProgram.provider","VQEProgram.shots","VQEProgram.store_intermediate","VQEProgram.supports_aux_operators","VQEProgramResult","VQEProgramResult.job_id","VQEProgramResult.optimizer_history","from_docplex_mp","from_gurobipy","from_ising","to_docplex_mp","to_gurobipy","to_ising","Quadratic Programs","Converters for Quadratic Programs","Minimum Eigen Optimizer","Grover Optimizer","ADMM Optimizer","Max-Cut and Traveling Salesman Problem","Vehicle Routing","Improving Variational Quantum Optimization using CVaR","Application Classes for Optimization Problems","Warm-starting quantum optimization","Using Classical Optimization Solvers and Models with Qiskit Optimization","\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438"],titleterms:{"\u0433\u043e\u0442\u043e\u0432":7,"\u0434\u0430\u043b\u044c\u0448":7,"\u0434\u043b\u044f":7,"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446":8,"\u0438\u0434\u0442":7,"\u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446":7,"\u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442":7,"\u043d\u0430\u0447\u0430":7,"\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d":7,"\u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446":[8,359],"\u043f\u043e":[7,8,359],"\u0440\u0430\u0431\u043e\u0442":7,"\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432":359,"\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a":7,"class":3,"for":[1,2,3,349,353,356],"with":[350,358],__getitem__:[120,241,253],adaptive:351,adding:348,admm:352,admmoptimizationresult:[57,58],admmoptimizer:[59,60,61,62],admmparameters:63,admmstate:64,aggregate:[66,103],algorithm:352,algorithms:1,all_iterations:99,analysis:[350,357],and:[1,348,353,358],ansatz:[321,327],api:0,application:[353,356],applications:2,approach:353,approximate:353,as_tuple:315,backend:328,base:[1,2,3],baseaggregator:[65,66],between:358,binary_var:[13,268],binary_var_dict:[14,269],binary_var_list:[15,270],bounds:[242,254],brute:353,bug:9,callback:329,calling:352,check:[351,356],checking:353,classes:[1,2,353,356],classical:[352,354,358],clear:[16,271],clip:112,clique:[155,156,157,158],cobylaoptimizer:[67,68,69],coefficients:[243,255],compute_minimum_eigenvalue:[322,330],computer:353,computing:353,constant:261,constraint:[232,233,234,235,236],constraints:[348,358],construct:354,constructing:348,continuous_var:[17,272],continuous_var_dict:[18,273],continuous_var_list:[19,274],convert:[207,211,214,218,224,227],converters:[3,349],converting:350,correct:351,cost:353,cover:356,cplex:354,cplex_parameters:71,cplexoptimizer:[70,71,72,73,74,75],cplexsolver:358,create_initial_state:150,create_initial_variables:151,create_mixer:152,create_random_instance:[192,198],cut:353,cvar:355,depot:199,directly:348,disp:[72,94],docplex:[348,358],draw:163,eigen:[350,355],evaluate:[233,238,244,249,256,262],evaluate_gradient:[245,257,263],exactcover:[159,160,161],example:352,export_as_lp_string:[20,275],failure:131,file:348,find:351,finds:351,fixes:9,force:353,formulation:354,from:[348,354],from_docplex:[21,276],from_docplex_mp:342,from_gurobipy:343,from_ising:[22,277,344],full:353,fval:121,get_compatibility_msg:[60,68,73,79,90,95,108,116,138,146,228],get_correlations:122,get_feasibility_info:[23,278],get_gset_result:174,get_linear_constraint:[24,279],get_num_binary_vars:[25,280],get_num_continuous_vars:[26,281],get_num_integer_vars:[27,282],get_num_linear_constraints:[28,283],get_num_quadratic_constraints:[29,284],get_num_vars:[30,285],get_quadratic_constraint:[31,286],get_variable:[32,287],gives:353,goemanswilliamsonoptimizationresult:[76,77],goemanswilliamsonoptimizer:[78,79,80,81],graph:164,graphoptimizationapplication:[162,163,164,165],graphpartition:[166,167,168],ground:354,grover:351,groveroptimizationresult:[82,83,84,85,86,87,88],groveroptimizer:[89,90,91,92,351],gurobioptimizer:[93,94,95,96,97],gurobipy:358,gurobisolver:358,hamiltonian:[353,354,356],history:135,how:356,ibm:354,ilog:354,imode:142,improving:355,indicator:358,inequalitytoequality:[206,207,208,209,349],infeasible:132,infinity:10,initial_point:331,initial_state:323,initialization:[352,354],integer_var:[33,288],integer_var_dict:[34,289],integer_var_list:[35,290],integertobinary:[210,211,212,349],intermediate_fval:83,intermediateresult:[98,99,100,101],interpret:[156,160,167,170,175,179,182,186,189,193,200,204,208,212,215,219,225,229],introduction:[348,350,351,352,353,354,355,356,357],is_compatible:[117,230],is_cplex_installed:74,is_feasible:[36,291],is_gurobi_installed:96,ising:[353,354],its:143,job_id:340,knapsack:[169,170,171,172,356],last_iteration:100,linear:[239,250,264,348],linear_constraint:[37,292],linear_constraints:[38,293],linear_constraints_index:[39,294],linearconstraint:[237,238,239],linearequalitytopenalty:[213,214,215,216,349],linearexpression:[240,241,242,243,244,245,246,247],linearinequalitytopenalty:[217,218,219,220],loading:348,lowerbound:316,mapping:353,max:353,max_cut_value:80,max_weight:171,maxcut:[173,174,175,176,177],maximize:[40,295],maximizetominimize:221,meanaggregator:[102,103],measurement_error_mitigation:332,min_eigen_solver:109,min_eigen_solver_result:105,minimize:[41,296],minimizetomaximize:222,minimum:[350,351,355],minimumeigenoptimizationresult:[104,105,106],minimumeigenoptimizer:[107,108,109,110,350],mixer:324,mode:209,model:[348,354],models:358,module:0,multi_start_solve:113,multistartoptimizer:[111,112,113,114],n_input_qubits:84,n_output_qubits:85,name:[42,234,297,317],no_iterations:101,notes:9,num_vehicles:201,numberpartition:[178,179,180],objective:[43,298],operation_counts:86,operator:350,optimization:[0,1,2,3,4,5,353,355,356,357,358],optimizationalgorithm:[115,116,117,118],optimizationapplication:[181,182,183,184],optimizationresult:[119,120,121,122,123,124,125,126,127,128,129],optimizationresultstatus:[130,131,132,133],optimizer:[333,350,351,352,355],optimizer_history:341,parameters:[61,352],parse_gset_format:176,parse_tsplib_format:194,penalty:[216,220,231],portfolio:355,preliminaries:357,problem:[351,353,356],problems:[4,353,356],program:[4,6,348],program_id:334,programs:[348,349],provider:335,qaoa:357,qaoaprogram:[320,321,322,323,324,325],qiskit:[0,5,8,358],qiskit_optimization:[0,1,2,3,4,5,6],qiskitoptimizationerror:11,quadratic:[4,6,251,265,348,349],quadratic_constraint:[44,299],quadratic_constraints:[45,300],quadratic_constraints_index:[46,301],quadratic_program:313,quadraticconstraint:[248,249,250,251],quadraticexpression:[252,253,254,255,256,257,258,259],quadraticobjective:[260,261,262,263,264,265,266],quadraticprogram:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,348,358],quadraticprogramconverter:[223,224,225],quadraticprogramelement:[312,313],quadraticprogramtoqubo:[226,227,228,229,230,231],quantum:[352,353,354,355,357],quantum_instance:91,qubo:[350,351],qubos:357,random_graph:165,raw_results:123,raw_samples:[87,106],read_from_lp_file:[47,302],recursiveminimumeigenoptimizationresult:[134,135,136],recursiveminimumeigenoptimizer:[137,138,139,350],reference:0,references:[350,351,352,354,355,357],relaxing:357,release:9,remove_linear_constraint:[48,303],remove_quadratic_constraint:[49,304],removing:348,replacements:136,reps:325,result:352,results:[1,352],rhs:235,right:353,routing:354,running:353,runtime:5,salesman:353,sample_most_likely:183,samples:[124,350],sdp_solution:77,search:351,sense:[236,266],setpacking:[185,186,187],shots:336,size:157,slsqpoptimizationresult:[140,141,142,143,144],slsqpoptimizer:[145,146,147],smode:144,solution:[352,354],solutionsample:148,solve:[62,69,75,81,92,97,110,118,139,147,154],solver:352,solvers:358,solving:350,stableset:[188,189,190],standard:357,start:357,starting:357,state:58,status:[50,125,305],step:354,store_intermediate:337,submodules:0,substitute_variables:[51,306],substituting:348,success:133,supports_aux_operators:338,that:[351,353],the:[350,351,353,354,356],threshold:88,to_array:[246,258],to_dict:[247,259],to_docplex:[52,307],to_docplex_mp:345,to_gurobipy:346,to_ising:[53,308,347],to_quadratic_program:[158,161,168,172,177,180,184,187,190,195,202,205],translators:[6,358],traveling:353,trials:114,tsp:[191,192,193,194,195,196],tsp_value:196,universal:353,upperbound:318,using:[351,354,355,358],value:351,variable:[314,315,316,317,318,319],variable_names:126,variables:[54,127,309,348],variables_dict:128,variables_index:[55,310],variational:355,vartype:319,vehicle:354,vehiclerouting:[197,198,199,200,201,202],vertex:356,vertexcover:[203,204,205],vqe:355,vqeprogram:[326,327,328,329,330,331,332,333,334,335,336,337,338],vqeprogramresult:[339,340,341],warm:357,warmstartqaoafactory:[149,150,151,152],warmstartqaoaoptimizer:[153,154],weighted:353,write_to_lp_file:[56,311]}})