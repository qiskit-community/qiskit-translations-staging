Search.setIndex({"docnames": ["apidoc/aer", "apidoc/aer_extensions", "apidoc/aer_jobs", "apidoc/aer_library", "apidoc/aer_noise", "apidoc/aer_provider", "apidoc/aer_pulse", "apidoc/aer_utils", "apidoc/algorithms", "apidoc/assembler", "apidoc/circuit", "apidoc/circuit_library", "apidoc/classicalfunction", "apidoc/compiler", "apidoc/converters", "apidoc/dagcircuit", "apidoc/execute", "apidoc/extensions", "apidoc/ibmq-provider", "apidoc/ibmq_credentials", "apidoc/ibmq_experiment", "apidoc/ibmq_job", "apidoc/ibmq_jupyter", "apidoc/ibmq_managed", "apidoc/ibmq_provider", "apidoc/ibmq_runtime", "apidoc/ibmq_utils", "apidoc/ibmq_visualization", "apidoc/opflow", "apidoc/parallel", "apidoc/primitives", "apidoc/providers", "apidoc/providers_basicaer", "apidoc/providers_fake_provider", "apidoc/providers_models", "apidoc/pulse", "apidoc/qasm", "apidoc/qasm3", "apidoc/qobj", "apidoc/qpy", "apidoc/quantum_info", "apidoc/result", "apidoc/scheduler", "apidoc/synthesis", "apidoc/synthesis_aqc", "apidoc/terra", "apidoc/tools", "apidoc/tools_jupyter", "apidoc/transpiler", "apidoc/transpiler_builtin_plugins", "apidoc/transpiler_passes", "apidoc/transpiler_plugins", "apidoc/transpiler_preset", "apidoc/utils", "apidoc/utils_mitigation", "apidoc/visualization", "configuration", "contributing_to_qiskit", "faq", "getting_started", "index", "install", "intro_tutorial1", "qc_intro", "release_notes", "stubs/qiskit.algorithms.AlgorithmError", "stubs/qiskit.algorithms.AmplificationProblem", "stubs/qiskit.algorithms.AmplitudeAmplifier", "stubs/qiskit.algorithms.AmplitudeAmplifier.amplify", "stubs/qiskit.algorithms.AmplitudeEstimation", "stubs/qiskit.algorithms.AmplitudeEstimation.compute_confidence_interval", "stubs/qiskit.algorithms.AmplitudeEstimation.compute_mle", "stubs/qiskit.algorithms.AmplitudeEstimation.construct_circuit", "stubs/qiskit.algorithms.AmplitudeEstimation.estimate", "stubs/qiskit.algorithms.AmplitudeEstimation.evaluate_measurements", "stubs/qiskit.algorithms.AmplitudeEstimationResult", "stubs/qiskit.algorithms.AmplitudeEstimationResult.combine", "stubs/qiskit.algorithms.AmplitudeEstimator", "stubs/qiskit.algorithms.AmplitudeEstimator.estimate", "stubs/qiskit.algorithms.AmplitudeEstimatorResult", "stubs/qiskit.algorithms.AmplitudeEstimatorResult.combine", "stubs/qiskit.algorithms.Eigensolver", "stubs/qiskit.algorithms.Eigensolver.compute_eigenvalues", "stubs/qiskit.algorithms.Eigensolver.supports_aux_operators", "stubs/qiskit.algorithms.EigensolverResult", "stubs/qiskit.algorithms.EigensolverResult.combine", "stubs/qiskit.algorithms.EstimationProblem", "stubs/qiskit.algorithms.EstimationProblem.rescale", "stubs/qiskit.algorithms.EvolutionProblem", "stubs/qiskit.algorithms.EvolutionProblem.validate_params", "stubs/qiskit.algorithms.EvolutionResult", "stubs/qiskit.algorithms.EvolutionResult.combine", "stubs/qiskit.algorithms.FasterAmplitudeEstimation", "stubs/qiskit.algorithms.FasterAmplitudeEstimation.construct_circuit", "stubs/qiskit.algorithms.FasterAmplitudeEstimation.estimate", "stubs/qiskit.algorithms.FasterAmplitudeEstimationResult", "stubs/qiskit.algorithms.FasterAmplitudeEstimationResult.combine", "stubs/qiskit.algorithms.Grover", "stubs/qiskit.algorithms.Grover.amplify", "stubs/qiskit.algorithms.Grover.construct_circuit", "stubs/qiskit.algorithms.Grover.optimal_num_iterations", "stubs/qiskit.algorithms.GroverResult", "stubs/qiskit.algorithms.GroverResult.combine", "stubs/qiskit.algorithms.HamiltonianPhaseEstimation", "stubs/qiskit.algorithms.HamiltonianPhaseEstimation.estimate", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult.combine", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult.filter_phases", "stubs/qiskit.algorithms.ImaginaryEvolver", "stubs/qiskit.algorithms.ImaginaryEvolver.evolve", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation.construct_circuit", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation.estimate", "stubs/qiskit.algorithms.IterativeAmplitudeEstimationResult", "stubs/qiskit.algorithms.IterativeAmplitudeEstimationResult.combine", "stubs/qiskit.algorithms.IterativePhaseEstimation", "stubs/qiskit.algorithms.IterativePhaseEstimation.construct_circuit", "stubs/qiskit.algorithms.IterativePhaseEstimation.estimate", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_confidence_interval", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_mle", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.construct_circuits", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.estimate", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult.combine", "stubs/qiskit.algorithms.MinimumEigensolver", "stubs/qiskit.algorithms.MinimumEigensolver.compute_minimum_eigenvalue", "stubs/qiskit.algorithms.MinimumEigensolver.supports_aux_operators", "stubs/qiskit.algorithms.MinimumEigensolverResult", "stubs/qiskit.algorithms.MinimumEigensolverResult.combine", "stubs/qiskit.algorithms.NumPyEigensolver", "stubs/qiskit.algorithms.NumPyEigensolver.compute_eigenvalues", "stubs/qiskit.algorithms.NumPyEigensolver.supports_aux_operators", "stubs/qiskit.algorithms.NumPyMinimumEigensolver", "stubs/qiskit.algorithms.NumPyMinimumEigensolver.compute_minimum_eigenvalue", "stubs/qiskit.algorithms.NumPyMinimumEigensolver.supports_aux_operators", "stubs/qiskit.algorithms.PhaseEstimation", "stubs/qiskit.algorithms.PhaseEstimation.construct_circuit", "stubs/qiskit.algorithms.PhaseEstimation.estimate", "stubs/qiskit.algorithms.PhaseEstimation.estimate_from_pe_circuit", "stubs/qiskit.algorithms.PhaseEstimationResult", "stubs/qiskit.algorithms.PhaseEstimationResult.combine", "stubs/qiskit.algorithms.PhaseEstimationResult.filter_phases", "stubs/qiskit.algorithms.PhaseEstimationScale", "stubs/qiskit.algorithms.PhaseEstimationScale.from_pauli_sum", "stubs/qiskit.algorithms.PhaseEstimationScale.scale_phase", "stubs/qiskit.algorithms.PhaseEstimationScale.scale_phases", "stubs/qiskit.algorithms.QAOA", "stubs/qiskit.algorithms.QAOA.compute_minimum_eigenvalue", "stubs/qiskit.algorithms.QAOA.construct_circuit", "stubs/qiskit.algorithms.QAOA.construct_expectation", "stubs/qiskit.algorithms.QAOA.get_energy_evaluation", "stubs/qiskit.algorithms.QAOA.print_settings", "stubs/qiskit.algorithms.QAOA.supports_aux_operators", "stubs/qiskit.algorithms.RealEvolver", "stubs/qiskit.algorithms.RealEvolver.evolve", "stubs/qiskit.algorithms.Shor", "stubs/qiskit.algorithms.Shor.construct_circuit", "stubs/qiskit.algorithms.Shor.factor", "stubs/qiskit.algorithms.Shor.modinv", "stubs/qiskit.algorithms.ShorResult", "stubs/qiskit.algorithms.ShorResult.combine", "stubs/qiskit.algorithms.TrotterQRTE", "stubs/qiskit.algorithms.TrotterQRTE.evolve", "stubs/qiskit.algorithms.TrotterQRTE.supports_aux_operators", "stubs/qiskit.algorithms.VQD", "stubs/qiskit.algorithms.VQD.compute_eigenvalues", "stubs/qiskit.algorithms.VQD.construct_circuit", "stubs/qiskit.algorithms.VQD.construct_expectation", "stubs/qiskit.algorithms.VQD.get_energy_evaluation", "stubs/qiskit.algorithms.VQD.print_settings", "stubs/qiskit.algorithms.VQD.supports_aux_operators", "stubs/qiskit.algorithms.VQE", "stubs/qiskit.algorithms.VQE.compute_minimum_eigenvalue", "stubs/qiskit.algorithms.VQE.construct_circuit", "stubs/qiskit.algorithms.VQE.construct_expectation", "stubs/qiskit.algorithms.VQE.get_energy_evaluation", "stubs/qiskit.algorithms.VQE.print_settings", "stubs/qiskit.algorithms.VQE.supports_aux_operators", "stubs/qiskit.algorithms.eval_observables", "stubs/qiskit.algorithms.linear_solvers", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.evaluate_classically", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.observable", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.observable_circuit", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.post_processing", "stubs/qiskit.algorithms.linear_solvers.HHL", "stubs/qiskit.algorithms.linear_solvers.HHL.construct_circuit", "stubs/qiskit.algorithms.linear_solvers.HHL.solve", "stubs/qiskit.algorithms.linear_solvers.LinearSolver", "stubs/qiskit.algorithms.linear_solvers.LinearSolver.solve", "stubs/qiskit.algorithms.linear_solvers.LinearSolverResult", "stubs/qiskit.algorithms.linear_solvers.LinearSolverResult.combine", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_bits", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_calibration", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_register", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.append", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.assign_parameters", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.barrier", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.bind_parameters", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.break_loop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cast", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ccx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ch", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.clear", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_instances", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_prefix", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cnot", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.combine", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.compose", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.condition_bounds", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.continue_loop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.control", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy_empty_like", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.count_ops", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cp", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.crx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cry", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.crz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cswap", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.csx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu1", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu3", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cy", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.dcx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.decompose", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.delay", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.depth", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.diagonal", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.draw", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ecr", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.eigs_bounds", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.extend", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.find_bit", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.for_loop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.fredkin", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_file", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_str", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.get_instructions", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.h", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.hamiltonian", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_calibration_for", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_register", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.i", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.id", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_else", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_test", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.initialize", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.inverse", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.iso", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.isometry", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.iswap", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcp", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcry", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mct", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcu1", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_active", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_all", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ms", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_connected_components", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_nonlocal_gates", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_tensor_factors", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_unitary_factors", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.p", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.pauli", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.power", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.prepare_state", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qasm", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_duration", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_start_time", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_stop_time", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.r", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rcccx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rccx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.remove_final_measurements", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.repeat", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reset", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_bits", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_ops", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rv", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rxx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ry", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ryy", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.s", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes_squared", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_clifford", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_density_matrix", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value_variance", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities_dict", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_stabilizer", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_state", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector_dict", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_superop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_unitary", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sdg", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_density_matrix", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_stabilizer", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_statevector", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_superop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_unitary", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.size", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_density_matrix", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_expectation_value", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_probabilities", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_stabilizer", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_statevector", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.squ", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.swap", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sxdg", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.t", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.tdg", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.tensor", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_gate", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_instruction", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.toffoli", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u1", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u2", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u3", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.uc", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrx", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucry", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrz", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.unitary", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.while_loop", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.width", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.x", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.y", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.z", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.evaluate_classically", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.observable", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.observable_circuit", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.post_processing", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.evaluate_classically", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.observable", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.observable_circuit", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.post_processing", "stubs/qiskit.algorithms.linear_solvers.NumPyLinearSolver", "stubs/qiskit.algorithms.linear_solvers.NumPyLinearSolver.solve", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_bits", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_calibration", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_register", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.append", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.assign_parameters", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.barrier", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.bind_parameters", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.break_loop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cast", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ccx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ch", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.clear", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cls_instances", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cls_prefix", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cnot", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.combine", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.compose", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.condition_bounds", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.continue_loop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.control", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.copy", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.copy_empty_like", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.count_ops", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cp", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.crx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cry", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.crz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cswap", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.csx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu1", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu3", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cy", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.dcx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.decompose", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.delay", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.depth", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.diagonal", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.draw", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ecr", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.eigs_bounds", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.extend", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.find_bit", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.for_loop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.fredkin", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_file", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_str", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.get_instructions", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.h", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.hamiltonian", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.has_calibration_for", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.has_register", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.i", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.id", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.if_else", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.if_test", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.initialize", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.inverse", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.iso", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.isometry", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.iswap", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcp", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcrx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcry", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcrz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mct", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcu1", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure_active", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure_all", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ms", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_connected_components", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_nonlocal_gates", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_tensor_factors", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_unitary_factors", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.p", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.pauli", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.power", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.prepare_state", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qasm", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_duration", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_start_time", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_stop_time", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.r", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rcccx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rccx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.remove_final_measurements", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.repeat", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reset", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_bits", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_ops", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rv", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rxx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ry", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ryy", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rzx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rzz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.s", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes_squared", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_clifford", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_density_matrix", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value_variance", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities_dict", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_stabilizer", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_state", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector_dict", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_superop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_unitary", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sdg", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_density_matrix", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_stabilizer", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_statevector", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_superop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_unitary", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.size", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_density_matrix", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_expectation_value", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_probabilities", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_stabilizer", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_statevector", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.squ", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.swap", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sxdg", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.t", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.tdg", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.tensor", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.to_gate", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.to_instruction", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.toffoli", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u1", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u2", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u3", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.uc", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucrx", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucry", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucrz", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.unitary", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.while_loop", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.width", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.x", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.y", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.z", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_bits", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_calibration", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_register", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.append", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.assign_parameters", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.barrier", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.bind_parameters", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.break_loop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cast", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ccx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ch", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.clear", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_instances", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_prefix", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cnot", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.combine", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.compose", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.condition_bounds", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.continue_loop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.control", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy_empty_like", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.count_ops", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cp", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cry", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cswap", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.csx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu1", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu3", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cy", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.dcx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.decompose", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.delay", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.depth", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.diagonal", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.draw", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ecr", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.eigs_bounds", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.extend", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.find_bit", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.for_loop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.fredkin", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_file", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_str", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.get_instructions", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.h", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.hamiltonian", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_calibration_for", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_register", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.i", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.id", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_else", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_test", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.initialize", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.inverse", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iso", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.isometry", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iswap", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcp", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcry", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mct", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcu1", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_active", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_all", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ms", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_connected_components", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_nonlocal_gates", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_tensor_factors", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_unitary_factors", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.p", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.pauli", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.power", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.prepare_state", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qasm", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qbit_argument_conversion", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_duration", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_start_time", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_stop_time", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.r", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rcccx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rccx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.remove_final_measurements", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.repeat", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reset", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_bits", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_ops", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rv", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rxx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ry", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ryy", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.s", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes_squared", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_clifford", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_density_matrix", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value_variance", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities_dict", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_stabilizer", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_state", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector_dict", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_superop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_unitary", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sdg", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_density_matrix", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_matrix_product_state", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_stabilizer", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_statevector", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_superop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_unitary", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.size", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_density_matrix", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_expectation_value", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_probabilities", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_stabilizer", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_statevector", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.squ", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.swap", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sxdg", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.t", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tdg", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tensor", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_gate", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_instruction", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.toffoli", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u1", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u2", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u3", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.uc", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrx", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucry", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrz", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.unitary", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.while_loop", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.width", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.x", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.y", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.z", "stubs/qiskit.algorithms.optimizers", "stubs/qiskit.algorithms.optimizers.ADAM", "stubs/qiskit.algorithms.optimizers.ADAM.get_support_level", "stubs/qiskit.algorithms.optimizers.ADAM.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.ADAM.load_params", "stubs/qiskit.algorithms.optimizers.ADAM.minimize", "stubs/qiskit.algorithms.optimizers.ADAM.print_options", "stubs/qiskit.algorithms.optimizers.ADAM.save_params", "stubs/qiskit.algorithms.optimizers.ADAM.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.ADAM.set_options", "stubs/qiskit.algorithms.optimizers.ADAM.wrap_function", "stubs/qiskit.algorithms.optimizers.AQGD", "stubs/qiskit.algorithms.optimizers.AQGD.get_support_level", "stubs/qiskit.algorithms.optimizers.AQGD.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.AQGD.minimize", "stubs/qiskit.algorithms.optimizers.AQGD.print_options", "stubs/qiskit.algorithms.optimizers.AQGD.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.AQGD.set_options", "stubs/qiskit.algorithms.optimizers.AQGD.wrap_function", "stubs/qiskit.algorithms.optimizers.BOBYQA", "stubs/qiskit.algorithms.optimizers.BOBYQA.get_support_level", "stubs/qiskit.algorithms.optimizers.BOBYQA.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.BOBYQA.minimize", "stubs/qiskit.algorithms.optimizers.BOBYQA.print_options", "stubs/qiskit.algorithms.optimizers.BOBYQA.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.BOBYQA.set_options", "stubs/qiskit.algorithms.optimizers.BOBYQA.wrap_function", "stubs/qiskit.algorithms.optimizers.CG", "stubs/qiskit.algorithms.optimizers.CG.get_support_level", "stubs/qiskit.algorithms.optimizers.CG.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.CG.minimize", "stubs/qiskit.algorithms.optimizers.CG.print_options", "stubs/qiskit.algorithms.optimizers.CG.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.CG.set_options", "stubs/qiskit.algorithms.optimizers.CG.wrap_function", "stubs/qiskit.algorithms.optimizers.COBYLA", "stubs/qiskit.algorithms.optimizers.COBYLA.get_support_level", "stubs/qiskit.algorithms.optimizers.COBYLA.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.COBYLA.minimize", "stubs/qiskit.algorithms.optimizers.COBYLA.print_options", "stubs/qiskit.algorithms.optimizers.COBYLA.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.COBYLA.set_options", "stubs/qiskit.algorithms.optimizers.COBYLA.wrap_function", "stubs/qiskit.algorithms.optimizers.CRS", "stubs/qiskit.algorithms.optimizers.CRS.get_nlopt_optimizer", "stubs/qiskit.algorithms.optimizers.CRS.get_support_level", "stubs/qiskit.algorithms.optimizers.CRS.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.CRS.minimize", "stubs/qiskit.algorithms.optimizers.CRS.print_options", "stubs/qiskit.algorithms.optimizers.CRS.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.CRS.set_options", "stubs/qiskit.algorithms.optimizers.CRS.wrap_function", "stubs/qiskit.algorithms.optimizers.DIRECT_L", "stubs/qiskit.algorithms.optimizers.DIRECT_L.get_nlopt_optimizer", "stubs/qiskit.algorithms.optimizers.DIRECT_L.get_support_level", "stubs/qiskit.algorithms.optimizers.DIRECT_L.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.DIRECT_L.minimize", "stubs/qiskit.algorithms.optimizers.DIRECT_L.print_options", "stubs/qiskit.algorithms.optimizers.DIRECT_L.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.DIRECT_L.set_options", "stubs/qiskit.algorithms.optimizers.DIRECT_L.wrap_function", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.get_nlopt_optimizer", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.get_support_level", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.minimize", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.print_options", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.set_options", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.wrap_function", "stubs/qiskit.algorithms.optimizers.ESCH", "stubs/qiskit.algorithms.optimizers.ESCH.get_nlopt_optimizer", "stubs/qiskit.algorithms.optimizers.ESCH.get_support_level", "stubs/qiskit.algorithms.optimizers.ESCH.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.ESCH.minimize", "stubs/qiskit.algorithms.optimizers.ESCH.print_options", "stubs/qiskit.algorithms.optimizers.ESCH.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.ESCH.set_options", "stubs/qiskit.algorithms.optimizers.ESCH.wrap_function", "stubs/qiskit.algorithms.optimizers.GSLS", "stubs/qiskit.algorithms.optimizers.GSLS.get_support_level", "stubs/qiskit.algorithms.optimizers.GSLS.gradient_approximation", "stubs/qiskit.algorithms.optimizers.GSLS.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.GSLS.ls_optimize", "stubs/qiskit.algorithms.optimizers.GSLS.minimize", "stubs/qiskit.algorithms.optimizers.GSLS.print_options", "stubs/qiskit.algorithms.optimizers.GSLS.sample_points", "stubs/qiskit.algorithms.optimizers.GSLS.sample_set", "stubs/qiskit.algorithms.optimizers.GSLS.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.GSLS.set_options", "stubs/qiskit.algorithms.optimizers.GSLS.wrap_function", "stubs/qiskit.algorithms.optimizers.GradientDescent", "stubs/qiskit.algorithms.optimizers.GradientDescent.get_support_level", "stubs/qiskit.algorithms.optimizers.GradientDescent.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.GradientDescent.minimize", "stubs/qiskit.algorithms.optimizers.GradientDescent.print_options", "stubs/qiskit.algorithms.optimizers.GradientDescent.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.GradientDescent.set_options", "stubs/qiskit.algorithms.optimizers.GradientDescent.wrap_function", "stubs/qiskit.algorithms.optimizers.IMFIL", "stubs/qiskit.algorithms.optimizers.IMFIL.get_support_level", "stubs/qiskit.algorithms.optimizers.IMFIL.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.IMFIL.minimize", "stubs/qiskit.algorithms.optimizers.IMFIL.print_options", "stubs/qiskit.algorithms.optimizers.IMFIL.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.IMFIL.set_options", "stubs/qiskit.algorithms.optimizers.IMFIL.wrap_function", "stubs/qiskit.algorithms.optimizers.ISRES", "stubs/qiskit.algorithms.optimizers.ISRES.get_nlopt_optimizer", "stubs/qiskit.algorithms.optimizers.ISRES.get_support_level", "stubs/qiskit.algorithms.optimizers.ISRES.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.ISRES.minimize", "stubs/qiskit.algorithms.optimizers.ISRES.print_options", "stubs/qiskit.algorithms.optimizers.ISRES.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.ISRES.set_options", "stubs/qiskit.algorithms.optimizers.ISRES.wrap_function", "stubs/qiskit.algorithms.optimizers.L_BFGS_B", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.get_support_level", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.minimize", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.print_options", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.set_options", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.wrap_function", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.get_support_level", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.minimize", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.print_options", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.set_options", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.wrap_function", "stubs/qiskit.algorithms.optimizers.NFT", "stubs/qiskit.algorithms.optimizers.NFT.get_support_level", "stubs/qiskit.algorithms.optimizers.NFT.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.NFT.minimize", "stubs/qiskit.algorithms.optimizers.NFT.print_options", "stubs/qiskit.algorithms.optimizers.NFT.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.NFT.set_options", "stubs/qiskit.algorithms.optimizers.NFT.wrap_function", "stubs/qiskit.algorithms.optimizers.Optimizer", "stubs/qiskit.algorithms.optimizers.Optimizer.get_support_level", "stubs/qiskit.algorithms.optimizers.Optimizer.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.Optimizer.minimize", "stubs/qiskit.algorithms.optimizers.Optimizer.print_options", "stubs/qiskit.algorithms.optimizers.Optimizer.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.Optimizer.set_options", "stubs/qiskit.algorithms.optimizers.Optimizer.wrap_function", "stubs/qiskit.algorithms.optimizers.OptimizerResult", "stubs/qiskit.algorithms.optimizers.OptimizerResult.combine", "stubs/qiskit.algorithms.optimizers.OptimizerSupportLevel", "stubs/qiskit.algorithms.optimizers.POWELL", "stubs/qiskit.algorithms.optimizers.POWELL.get_support_level", "stubs/qiskit.algorithms.optimizers.POWELL.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.POWELL.minimize", "stubs/qiskit.algorithms.optimizers.POWELL.print_options", "stubs/qiskit.algorithms.optimizers.POWELL.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.POWELL.set_options", "stubs/qiskit.algorithms.optimizers.POWELL.wrap_function", "stubs/qiskit.algorithms.optimizers.P_BFGS", "stubs/qiskit.algorithms.optimizers.P_BFGS.get_support_level", "stubs/qiskit.algorithms.optimizers.P_BFGS.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.P_BFGS.minimize", "stubs/qiskit.algorithms.optimizers.P_BFGS.print_options", "stubs/qiskit.algorithms.optimizers.P_BFGS.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.P_BFGS.set_options", "stubs/qiskit.algorithms.optimizers.P_BFGS.wrap_function", "stubs/qiskit.algorithms.optimizers.QNSPSA", "stubs/qiskit.algorithms.optimizers.QNSPSA.calibrate", "stubs/qiskit.algorithms.optimizers.QNSPSA.estimate_stddev", "stubs/qiskit.algorithms.optimizers.QNSPSA.get_fidelity", "stubs/qiskit.algorithms.optimizers.QNSPSA.get_support_level", "stubs/qiskit.algorithms.optimizers.QNSPSA.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.QNSPSA.minimize", "stubs/qiskit.algorithms.optimizers.QNSPSA.optimize", "stubs/qiskit.algorithms.optimizers.QNSPSA.print_options", "stubs/qiskit.algorithms.optimizers.QNSPSA.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.QNSPSA.set_options", "stubs/qiskit.algorithms.optimizers.QNSPSA.wrap_function", "stubs/qiskit.algorithms.optimizers.SLSQP", "stubs/qiskit.algorithms.optimizers.SLSQP.get_support_level", "stubs/qiskit.algorithms.optimizers.SLSQP.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.SLSQP.minimize", "stubs/qiskit.algorithms.optimizers.SLSQP.print_options", "stubs/qiskit.algorithms.optimizers.SLSQP.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.SLSQP.set_options", "stubs/qiskit.algorithms.optimizers.SLSQP.wrap_function", "stubs/qiskit.algorithms.optimizers.SNOBFIT", "stubs/qiskit.algorithms.optimizers.SNOBFIT.get_support_level", "stubs/qiskit.algorithms.optimizers.SNOBFIT.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.SNOBFIT.minimize", "stubs/qiskit.algorithms.optimizers.SNOBFIT.print_options", "stubs/qiskit.algorithms.optimizers.SNOBFIT.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.SNOBFIT.set_options", "stubs/qiskit.algorithms.optimizers.SNOBFIT.wrap_function", "stubs/qiskit.algorithms.optimizers.SPSA", "stubs/qiskit.algorithms.optimizers.SPSA.calibrate", "stubs/qiskit.algorithms.optimizers.SPSA.estimate_stddev", "stubs/qiskit.algorithms.optimizers.SPSA.get_support_level", "stubs/qiskit.algorithms.optimizers.SPSA.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.SPSA.minimize", "stubs/qiskit.algorithms.optimizers.SPSA.optimize", "stubs/qiskit.algorithms.optimizers.SPSA.print_options", "stubs/qiskit.algorithms.optimizers.SPSA.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.SPSA.set_options", "stubs/qiskit.algorithms.optimizers.SPSA.wrap_function", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.get_support_level", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.minimize", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.print_options", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.set_options", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.wrap_function", "stubs/qiskit.algorithms.optimizers.TNC", "stubs/qiskit.algorithms.optimizers.TNC.get_support_level", "stubs/qiskit.algorithms.optimizers.TNC.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.TNC.minimize", "stubs/qiskit.algorithms.optimizers.TNC.print_options", "stubs/qiskit.algorithms.optimizers.TNC.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.TNC.set_options", "stubs/qiskit.algorithms.optimizers.TNC.wrap_function", "stubs/qiskit.algorithms.optimizers.UMDA", "stubs/qiskit.algorithms.optimizers.UMDA.get_support_level", "stubs/qiskit.algorithms.optimizers.UMDA.gradient_num_diff", "stubs/qiskit.algorithms.optimizers.UMDA.minimize", "stubs/qiskit.algorithms.optimizers.UMDA.print_options", "stubs/qiskit.algorithms.optimizers.UMDA.set_max_evals_grouped", "stubs/qiskit.algorithms.optimizers.UMDA.set_options", "stubs/qiskit.algorithms.optimizers.UMDA.wrap_function", "stubs/qiskit.algorithms.optimizers.nlopts", "stubs/qiskit.assembler.RunConfig", "stubs/qiskit.assembler.RunConfig.from_dict", "stubs/qiskit.assembler.RunConfig.to_dict", "stubs/qiskit.assembler.assemble_circuits", "stubs/qiskit.assembler.assemble_schedules", "stubs/qiskit.assembler.disassemble", "stubs/qiskit.circuit.AncillaQubit", "stubs/qiskit.circuit.AncillaRegister", "stubs/qiskit.circuit.AncillaRegister.index", "stubs/qiskit.circuit.AncillaRegister.qasm", "stubs/qiskit.circuit.BreakLoopOp", "stubs/qiskit.circuit.BreakLoopOp.add_decomposition", "stubs/qiskit.circuit.BreakLoopOp.assemble", "stubs/qiskit.circuit.BreakLoopOp.broadcast_arguments", "stubs/qiskit.circuit.BreakLoopOp.c_if", "stubs/qiskit.circuit.BreakLoopOp.copy", "stubs/qiskit.circuit.BreakLoopOp.inverse", "stubs/qiskit.circuit.BreakLoopOp.is_parameterized", "stubs/qiskit.circuit.BreakLoopOp.qasm", "stubs/qiskit.circuit.BreakLoopOp.repeat", "stubs/qiskit.circuit.BreakLoopOp.reverse_ops", "stubs/qiskit.circuit.BreakLoopOp.soft_compare", "stubs/qiskit.circuit.BreakLoopOp.validate_parameter", "stubs/qiskit.circuit.CircuitInstruction", "stubs/qiskit.circuit.CircuitInstruction.copy", "stubs/qiskit.circuit.CircuitInstruction.replace", "stubs/qiskit.circuit.ClassicalRegister", "stubs/qiskit.circuit.ClassicalRegister.index", "stubs/qiskit.circuit.ClassicalRegister.qasm", "stubs/qiskit.circuit.Clbit", "stubs/qiskit.circuit.ContinueLoopOp", "stubs/qiskit.circuit.ContinueLoopOp.add_decomposition", "stubs/qiskit.circuit.ContinueLoopOp.assemble", "stubs/qiskit.circuit.ContinueLoopOp.broadcast_arguments", "stubs/qiskit.circuit.ContinueLoopOp.c_if", "stubs/qiskit.circuit.ContinueLoopOp.copy", "stubs/qiskit.circuit.ContinueLoopOp.inverse", "stubs/qiskit.circuit.ContinueLoopOp.is_parameterized", "stubs/qiskit.circuit.ContinueLoopOp.qasm", "stubs/qiskit.circuit.ContinueLoopOp.repeat", "stubs/qiskit.circuit.ContinueLoopOp.reverse_ops", "stubs/qiskit.circuit.ContinueLoopOp.soft_compare", "stubs/qiskit.circuit.ContinueLoopOp.validate_parameter", "stubs/qiskit.circuit.ControlFlowOp", "stubs/qiskit.circuit.ControlFlowOp.add_decomposition", "stubs/qiskit.circuit.ControlFlowOp.assemble", "stubs/qiskit.circuit.ControlFlowOp.broadcast_arguments", "stubs/qiskit.circuit.ControlFlowOp.c_if", "stubs/qiskit.circuit.ControlFlowOp.copy", "stubs/qiskit.circuit.ControlFlowOp.inverse", "stubs/qiskit.circuit.ControlFlowOp.is_parameterized", "stubs/qiskit.circuit.ControlFlowOp.qasm", "stubs/qiskit.circuit.ControlFlowOp.repeat", "stubs/qiskit.circuit.ControlFlowOp.replace_blocks", "stubs/qiskit.circuit.ControlFlowOp.reverse_ops", "stubs/qiskit.circuit.ControlFlowOp.soft_compare", "stubs/qiskit.circuit.ControlFlowOp.validate_parameter", "stubs/qiskit.circuit.ControlledGate", "stubs/qiskit.circuit.ControlledGate.add_decomposition", "stubs/qiskit.circuit.ControlledGate.assemble", "stubs/qiskit.circuit.ControlledGate.broadcast_arguments", "stubs/qiskit.circuit.ControlledGate.c_if", "stubs/qiskit.circuit.ControlledGate.control", "stubs/qiskit.circuit.ControlledGate.copy", "stubs/qiskit.circuit.ControlledGate.inverse", "stubs/qiskit.circuit.ControlledGate.is_parameterized", "stubs/qiskit.circuit.ControlledGate.power", "stubs/qiskit.circuit.ControlledGate.qasm", "stubs/qiskit.circuit.ControlledGate.repeat", "stubs/qiskit.circuit.ControlledGate.reverse_ops", "stubs/qiskit.circuit.ControlledGate.soft_compare", "stubs/qiskit.circuit.ControlledGate.to_matrix", "stubs/qiskit.circuit.ControlledGate.validate_parameter", "stubs/qiskit.circuit.Delay", "stubs/qiskit.circuit.Delay.add_decomposition", "stubs/qiskit.circuit.Delay.assemble", "stubs/qiskit.circuit.Delay.broadcast_arguments", "stubs/qiskit.circuit.Delay.c_if", "stubs/qiskit.circuit.Delay.copy", "stubs/qiskit.circuit.Delay.inverse", "stubs/qiskit.circuit.Delay.is_parameterized", "stubs/qiskit.circuit.Delay.qasm", "stubs/qiskit.circuit.Delay.repeat", "stubs/qiskit.circuit.Delay.reverse_ops", "stubs/qiskit.circuit.Delay.soft_compare", "stubs/qiskit.circuit.Delay.to_matrix", "stubs/qiskit.circuit.Delay.validate_parameter", "stubs/qiskit.circuit.EquivalenceLibrary", "stubs/qiskit.circuit.EquivalenceLibrary.add_equivalence", "stubs/qiskit.circuit.EquivalenceLibrary.draw", "stubs/qiskit.circuit.EquivalenceLibrary.get_entry", "stubs/qiskit.circuit.EquivalenceLibrary.has_entry", "stubs/qiskit.circuit.EquivalenceLibrary.set_entry", "stubs/qiskit.circuit.ForLoopOp", "stubs/qiskit.circuit.ForLoopOp.add_decomposition", "stubs/qiskit.circuit.ForLoopOp.assemble", "stubs/qiskit.circuit.ForLoopOp.broadcast_arguments", "stubs/qiskit.circuit.ForLoopOp.c_if", "stubs/qiskit.circuit.ForLoopOp.copy", "stubs/qiskit.circuit.ForLoopOp.inverse", "stubs/qiskit.circuit.ForLoopOp.is_parameterized", "stubs/qiskit.circuit.ForLoopOp.qasm", "stubs/qiskit.circuit.ForLoopOp.repeat", "stubs/qiskit.circuit.ForLoopOp.replace_blocks", "stubs/qiskit.circuit.ForLoopOp.reverse_ops", "stubs/qiskit.circuit.ForLoopOp.soft_compare", "stubs/qiskit.circuit.ForLoopOp.validate_parameter", "stubs/qiskit.circuit.Gate", "stubs/qiskit.circuit.Gate.add_decomposition", "stubs/qiskit.circuit.Gate.assemble", "stubs/qiskit.circuit.Gate.broadcast_arguments", "stubs/qiskit.circuit.Gate.c_if", "stubs/qiskit.circuit.Gate.control", "stubs/qiskit.circuit.Gate.copy", "stubs/qiskit.circuit.Gate.inverse", "stubs/qiskit.circuit.Gate.is_parameterized", "stubs/qiskit.circuit.Gate.power", "stubs/qiskit.circuit.Gate.qasm", "stubs/qiskit.circuit.Gate.repeat", "stubs/qiskit.circuit.Gate.reverse_ops", "stubs/qiskit.circuit.Gate.soft_compare", "stubs/qiskit.circuit.Gate.to_matrix", "stubs/qiskit.circuit.Gate.validate_parameter", "stubs/qiskit.circuit.IfElseOp", "stubs/qiskit.circuit.IfElseOp.add_decomposition", "stubs/qiskit.circuit.IfElseOp.assemble", "stubs/qiskit.circuit.IfElseOp.broadcast_arguments", "stubs/qiskit.circuit.IfElseOp.c_if", "stubs/qiskit.circuit.IfElseOp.copy", "stubs/qiskit.circuit.IfElseOp.inverse", "stubs/qiskit.circuit.IfElseOp.is_parameterized", "stubs/qiskit.circuit.IfElseOp.qasm", "stubs/qiskit.circuit.IfElseOp.repeat", "stubs/qiskit.circuit.IfElseOp.replace_blocks", "stubs/qiskit.circuit.IfElseOp.reverse_ops", "stubs/qiskit.circuit.IfElseOp.soft_compare", "stubs/qiskit.circuit.IfElseOp.validate_parameter", "stubs/qiskit.circuit.Instruction", "stubs/qiskit.circuit.Instruction.add_decomposition", "stubs/qiskit.circuit.Instruction.assemble", "stubs/qiskit.circuit.Instruction.broadcast_arguments", "stubs/qiskit.circuit.Instruction.c_if", "stubs/qiskit.circuit.Instruction.copy", "stubs/qiskit.circuit.Instruction.inverse", "stubs/qiskit.circuit.Instruction.is_parameterized", "stubs/qiskit.circuit.Instruction.qasm", "stubs/qiskit.circuit.Instruction.repeat", "stubs/qiskit.circuit.Instruction.reverse_ops", "stubs/qiskit.circuit.Instruction.soft_compare", "stubs/qiskit.circuit.Instruction.validate_parameter", "stubs/qiskit.circuit.InstructionSet", "stubs/qiskit.circuit.InstructionSet.add", "stubs/qiskit.circuit.InstructionSet.c_if", "stubs/qiskit.circuit.InstructionSet.inverse", "stubs/qiskit.circuit.Parameter", "stubs/qiskit.circuit.Parameter.arccos", "stubs/qiskit.circuit.Parameter.arcsin", "stubs/qiskit.circuit.Parameter.arctan", "stubs/qiskit.circuit.Parameter.assign", "stubs/qiskit.circuit.Parameter.bind", "stubs/qiskit.circuit.Parameter.conjugate", "stubs/qiskit.circuit.Parameter.cos", "stubs/qiskit.circuit.Parameter.exp", "stubs/qiskit.circuit.Parameter.gradient", "stubs/qiskit.circuit.Parameter.is_real", "stubs/qiskit.circuit.Parameter.log", "stubs/qiskit.circuit.Parameter.sin", "stubs/qiskit.circuit.Parameter.subs", "stubs/qiskit.circuit.Parameter.sympify", "stubs/qiskit.circuit.Parameter.tan", "stubs/qiskit.circuit.ParameterExpression", "stubs/qiskit.circuit.ParameterExpression.arccos", "stubs/qiskit.circuit.ParameterExpression.arcsin", "stubs/qiskit.circuit.ParameterExpression.arctan", "stubs/qiskit.circuit.ParameterExpression.assign", "stubs/qiskit.circuit.ParameterExpression.bind", "stubs/qiskit.circuit.ParameterExpression.conjugate", "stubs/qiskit.circuit.ParameterExpression.cos", "stubs/qiskit.circuit.ParameterExpression.exp", "stubs/qiskit.circuit.ParameterExpression.gradient", "stubs/qiskit.circuit.ParameterExpression.is_real", "stubs/qiskit.circuit.ParameterExpression.log", "stubs/qiskit.circuit.ParameterExpression.sin", "stubs/qiskit.circuit.ParameterExpression.subs", "stubs/qiskit.circuit.ParameterExpression.sympify", "stubs/qiskit.circuit.ParameterExpression.tan", "stubs/qiskit.circuit.ParameterVector", "stubs/qiskit.circuit.ParameterVector.index", "stubs/qiskit.circuit.ParameterVector.resize", "stubs/qiskit.circuit.QuantumCircuit", "stubs/qiskit.circuit.QuantumCircuit.add_bits", "stubs/qiskit.circuit.QuantumCircuit.add_calibration", "stubs/qiskit.circuit.QuantumCircuit.add_register", "stubs/qiskit.circuit.QuantumCircuit.append", "stubs/qiskit.circuit.QuantumCircuit.assign_parameters", "stubs/qiskit.circuit.QuantumCircuit.barrier", "stubs/qiskit.circuit.QuantumCircuit.bind_parameters", "stubs/qiskit.circuit.QuantumCircuit.break_loop", "stubs/qiskit.circuit.QuantumCircuit.cast", "stubs/qiskit.circuit.QuantumCircuit.cbit_argument_conversion", "stubs/qiskit.circuit.QuantumCircuit.ccx", "stubs/qiskit.circuit.QuantumCircuit.ch", "stubs/qiskit.circuit.QuantumCircuit.clear", "stubs/qiskit.circuit.QuantumCircuit.cls_instances", "stubs/qiskit.circuit.QuantumCircuit.cls_prefix", "stubs/qiskit.circuit.QuantumCircuit.cnot", "stubs/qiskit.circuit.QuantumCircuit.combine", "stubs/qiskit.circuit.QuantumCircuit.compose", "stubs/qiskit.circuit.QuantumCircuit.continue_loop", "stubs/qiskit.circuit.QuantumCircuit.control", "stubs/qiskit.circuit.QuantumCircuit.copy", "stubs/qiskit.circuit.QuantumCircuit.copy_empty_like", "stubs/qiskit.circuit.QuantumCircuit.count_ops", "stubs/qiskit.circuit.QuantumCircuit.cp", "stubs/qiskit.circuit.QuantumCircuit.crx", "stubs/qiskit.circuit.QuantumCircuit.cry", "stubs/qiskit.circuit.QuantumCircuit.crz", "stubs/qiskit.circuit.QuantumCircuit.cswap", "stubs/qiskit.circuit.QuantumCircuit.csx", "stubs/qiskit.circuit.QuantumCircuit.cu", "stubs/qiskit.circuit.QuantumCircuit.cu1", "stubs/qiskit.circuit.QuantumCircuit.cu3", "stubs/qiskit.circuit.QuantumCircuit.cx", "stubs/qiskit.circuit.QuantumCircuit.cy", "stubs/qiskit.circuit.QuantumCircuit.cz", "stubs/qiskit.circuit.QuantumCircuit.dcx", "stubs/qiskit.circuit.QuantumCircuit.decompose", "stubs/qiskit.circuit.QuantumCircuit.delay", "stubs/qiskit.circuit.QuantumCircuit.depth", "stubs/qiskit.circuit.QuantumCircuit.diagonal", "stubs/qiskit.circuit.QuantumCircuit.draw", "stubs/qiskit.circuit.QuantumCircuit.ecr", "stubs/qiskit.circuit.QuantumCircuit.extend", "stubs/qiskit.circuit.QuantumCircuit.find_bit", "stubs/qiskit.circuit.QuantumCircuit.for_loop", "stubs/qiskit.circuit.QuantumCircuit.fredkin", "stubs/qiskit.circuit.QuantumCircuit.from_qasm_file", "stubs/qiskit.circuit.QuantumCircuit.from_qasm_str", "stubs/qiskit.circuit.QuantumCircuit.get_instructions", "stubs/qiskit.circuit.QuantumCircuit.h", "stubs/qiskit.circuit.QuantumCircuit.hamiltonian", "stubs/qiskit.circuit.QuantumCircuit.has_calibration_for", "stubs/qiskit.circuit.QuantumCircuit.has_register", "stubs/qiskit.circuit.QuantumCircuit.i", "stubs/qiskit.circuit.QuantumCircuit.id", "stubs/qiskit.circuit.QuantumCircuit.if_else", "stubs/qiskit.circuit.QuantumCircuit.if_test", "stubs/qiskit.circuit.QuantumCircuit.initialize", "stubs/qiskit.circuit.QuantumCircuit.inverse", "stubs/qiskit.circuit.QuantumCircuit.iso", "stubs/qiskit.circuit.QuantumCircuit.isometry", "stubs/qiskit.circuit.QuantumCircuit.iswap", "stubs/qiskit.circuit.QuantumCircuit.mcp", "stubs/qiskit.circuit.QuantumCircuit.mcrx", "stubs/qiskit.circuit.QuantumCircuit.mcry", "stubs/qiskit.circuit.QuantumCircuit.mcrz", "stubs/qiskit.circuit.QuantumCircuit.mct", "stubs/qiskit.circuit.QuantumCircuit.mcu1", "stubs/qiskit.circuit.QuantumCircuit.mcx", "stubs/qiskit.circuit.QuantumCircuit.measure", "stubs/qiskit.circuit.QuantumCircuit.measure_active", "stubs/qiskit.circuit.QuantumCircuit.measure_all", "stubs/qiskit.circuit.QuantumCircuit.ms", "stubs/qiskit.circuit.QuantumCircuit.num_connected_components", "stubs/qiskit.circuit.QuantumCircuit.num_nonlocal_gates", "stubs/qiskit.circuit.QuantumCircuit.num_tensor_factors", "stubs/qiskit.circuit.QuantumCircuit.num_unitary_factors", "stubs/qiskit.circuit.QuantumCircuit.p", "stubs/qiskit.circuit.QuantumCircuit.pauli", "stubs/qiskit.circuit.QuantumCircuit.power", "stubs/qiskit.circuit.QuantumCircuit.prepare_state", "stubs/qiskit.circuit.QuantumCircuit.qasm", "stubs/qiskit.circuit.QuantumCircuit.qbit_argument_conversion", "stubs/qiskit.circuit.QuantumCircuit.qubit_duration", "stubs/qiskit.circuit.QuantumCircuit.qubit_start_time", "stubs/qiskit.circuit.QuantumCircuit.qubit_stop_time", "stubs/qiskit.circuit.QuantumCircuit.r", "stubs/qiskit.circuit.QuantumCircuit.rcccx", "stubs/qiskit.circuit.QuantumCircuit.rccx", "stubs/qiskit.circuit.QuantumCircuit.remove_final_measurements", "stubs/qiskit.circuit.QuantumCircuit.repeat", "stubs/qiskit.circuit.QuantumCircuit.reset", "stubs/qiskit.circuit.QuantumCircuit.reverse_bits", "stubs/qiskit.circuit.QuantumCircuit.reverse_ops", "stubs/qiskit.circuit.QuantumCircuit.rv", "stubs/qiskit.circuit.QuantumCircuit.rx", "stubs/qiskit.circuit.QuantumCircuit.rxx", "stubs/qiskit.circuit.QuantumCircuit.ry", "stubs/qiskit.circuit.QuantumCircuit.ryy", "stubs/qiskit.circuit.QuantumCircuit.rz", "stubs/qiskit.circuit.QuantumCircuit.rzx", "stubs/qiskit.circuit.QuantumCircuit.rzz", "stubs/qiskit.circuit.QuantumCircuit.s", "stubs/qiskit.circuit.QuantumCircuit.save_amplitudes", "stubs/qiskit.circuit.QuantumCircuit.save_amplitudes_squared", "stubs/qiskit.circuit.QuantumCircuit.save_clifford", "stubs/qiskit.circuit.QuantumCircuit.save_density_matrix", "stubs/qiskit.circuit.QuantumCircuit.save_expectation_value", "stubs/qiskit.circuit.QuantumCircuit.save_expectation_value_variance", "stubs/qiskit.circuit.QuantumCircuit.save_matrix_product_state", "stubs/qiskit.circuit.QuantumCircuit.save_probabilities", "stubs/qiskit.circuit.QuantumCircuit.save_probabilities_dict", "stubs/qiskit.circuit.QuantumCircuit.save_stabilizer", "stubs/qiskit.circuit.QuantumCircuit.save_state", "stubs/qiskit.circuit.QuantumCircuit.save_statevector", "stubs/qiskit.circuit.QuantumCircuit.save_statevector_dict", "stubs/qiskit.circuit.QuantumCircuit.save_superop", "stubs/qiskit.circuit.QuantumCircuit.save_unitary", "stubs/qiskit.circuit.QuantumCircuit.sdg", "stubs/qiskit.circuit.QuantumCircuit.set_density_matrix", "stubs/qiskit.circuit.QuantumCircuit.set_matrix_product_state", "stubs/qiskit.circuit.QuantumCircuit.set_stabilizer", "stubs/qiskit.circuit.QuantumCircuit.set_statevector", "stubs/qiskit.circuit.QuantumCircuit.set_superop", "stubs/qiskit.circuit.QuantumCircuit.set_unitary", "stubs/qiskit.circuit.QuantumCircuit.size", "stubs/qiskit.circuit.QuantumCircuit.snapshot", "stubs/qiskit.circuit.QuantumCircuit.snapshot_density_matrix", "stubs/qiskit.circuit.QuantumCircuit.snapshot_expectation_value", "stubs/qiskit.circuit.QuantumCircuit.snapshot_probabilities", "stubs/qiskit.circuit.QuantumCircuit.snapshot_stabilizer", "stubs/qiskit.circuit.QuantumCircuit.snapshot_statevector", "stubs/qiskit.circuit.QuantumCircuit.squ", "stubs/qiskit.circuit.QuantumCircuit.swap", "stubs/qiskit.circuit.QuantumCircuit.sx", "stubs/qiskit.circuit.QuantumCircuit.sxdg", "stubs/qiskit.circuit.QuantumCircuit.t", "stubs/qiskit.circuit.QuantumCircuit.tdg", "stubs/qiskit.circuit.QuantumCircuit.tensor", "stubs/qiskit.circuit.QuantumCircuit.to_gate", "stubs/qiskit.circuit.QuantumCircuit.to_instruction", "stubs/qiskit.circuit.QuantumCircuit.toffoli", "stubs/qiskit.circuit.QuantumCircuit.u", "stubs/qiskit.circuit.QuantumCircuit.u1", "stubs/qiskit.circuit.QuantumCircuit.u2", "stubs/qiskit.circuit.QuantumCircuit.u3", "stubs/qiskit.circuit.QuantumCircuit.uc", "stubs/qiskit.circuit.QuantumCircuit.ucrx", "stubs/qiskit.circuit.QuantumCircuit.ucry", "stubs/qiskit.circuit.QuantumCircuit.ucrz", "stubs/qiskit.circuit.QuantumCircuit.unitary", "stubs/qiskit.circuit.QuantumCircuit.while_loop", "stubs/qiskit.circuit.QuantumCircuit.width", "stubs/qiskit.circuit.QuantumCircuit.x", "stubs/qiskit.circuit.QuantumCircuit.y", "stubs/qiskit.circuit.QuantumCircuit.z", "stubs/qiskit.circuit.QuantumRegister", "stubs/qiskit.circuit.QuantumRegister.index", "stubs/qiskit.circuit.QuantumRegister.qasm", "stubs/qiskit.circuit.Qubit", "stubs/qiskit.circuit.WhileLoopOp", "stubs/qiskit.circuit.WhileLoopOp.add_decomposition", "stubs/qiskit.circuit.WhileLoopOp.assemble", "stubs/qiskit.circuit.WhileLoopOp.broadcast_arguments", "stubs/qiskit.circuit.WhileLoopOp.c_if", "stubs/qiskit.circuit.WhileLoopOp.copy", "stubs/qiskit.circuit.WhileLoopOp.inverse", "stubs/qiskit.circuit.WhileLoopOp.is_parameterized", "stubs/qiskit.circuit.WhileLoopOp.qasm", "stubs/qiskit.circuit.WhileLoopOp.repeat", "stubs/qiskit.circuit.WhileLoopOp.replace_blocks", "stubs/qiskit.circuit.WhileLoopOp.reverse_ops", "stubs/qiskit.circuit.WhileLoopOp.soft_compare", "stubs/qiskit.circuit.WhileLoopOp.validate_parameter", "stubs/qiskit.circuit.classicalfunction.BooleanExpression", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.add_decomposition", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.assemble", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.broadcast_arguments", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.c_if", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.control", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.copy", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.from_dimacs_file", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.inverse", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.is_parameterized", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.power", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.qasm", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.repeat", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.reverse_ops", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.simulate", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.soft_compare", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.synth", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.to_matrix", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.validate_parameter", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.add_decomposition", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.assemble", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.broadcast_arguments", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.c_if", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.compile", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.control", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.copy", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.inverse", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.is_parameterized", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.power", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.qasm", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.repeat", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.reverse_ops", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.simulate", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.simulate_all", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.soft_compare", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.synth", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.to_matrix", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.validate_parameter", "stubs/qiskit.circuit.classicalfunction.ClassicalFunctionCompilerTypeError", "stubs/qiskit.circuit.classicalfunction.ClassicalFunctionParseError", "stubs/qiskit.circuit.library.AND", "stubs/qiskit.circuit.library.Barrier", "stubs/qiskit.circuit.library.Barrier.add_decomposition", "stubs/qiskit.circuit.library.Barrier.assemble", "stubs/qiskit.circuit.library.Barrier.broadcast_arguments", "stubs/qiskit.circuit.library.Barrier.c_if", "stubs/qiskit.circuit.library.Barrier.copy", "stubs/qiskit.circuit.library.Barrier.inverse", "stubs/qiskit.circuit.library.Barrier.is_parameterized", "stubs/qiskit.circuit.library.Barrier.qasm", "stubs/qiskit.circuit.library.Barrier.repeat", "stubs/qiskit.circuit.library.Barrier.reverse_ops", "stubs/qiskit.circuit.library.Barrier.soft_compare", "stubs/qiskit.circuit.library.Barrier.validate_parameter", "stubs/qiskit.circuit.library.C3SXGate", "stubs/qiskit.circuit.library.C3XGate", "stubs/qiskit.circuit.library.C3XGate.control", "stubs/qiskit.circuit.library.C3XGate.inverse", "stubs/qiskit.circuit.library.C4XGate", "stubs/qiskit.circuit.library.C4XGate.control", "stubs/qiskit.circuit.library.C4XGate.inverse", "stubs/qiskit.circuit.library.CCXGate", "stubs/qiskit.circuit.library.CCXGate.control", "stubs/qiskit.circuit.library.CCXGate.inverse", "stubs/qiskit.circuit.library.CDKMRippleCarryAdder", "stubs/qiskit.circuit.library.CHGate", "stubs/qiskit.circuit.library.CHGate.inverse", "stubs/qiskit.circuit.library.CPhaseGate", "stubs/qiskit.circuit.library.CPhaseGate.control", "stubs/qiskit.circuit.library.CPhaseGate.inverse", "stubs/qiskit.circuit.library.CRXGate", "stubs/qiskit.circuit.library.CRXGate.inverse", "stubs/qiskit.circuit.library.CRYGate", "stubs/qiskit.circuit.library.CRYGate.inverse", "stubs/qiskit.circuit.library.CRZGate", "stubs/qiskit.circuit.library.CRZGate.inverse", "stubs/qiskit.circuit.library.CSXGate", "stubs/qiskit.circuit.library.CSwapGate", "stubs/qiskit.circuit.library.CSwapGate.inverse", "stubs/qiskit.circuit.library.CU1Gate", "stubs/qiskit.circuit.library.CU1Gate.control", "stubs/qiskit.circuit.library.CU1Gate.inverse", "stubs/qiskit.circuit.library.CU3Gate", "stubs/qiskit.circuit.library.CU3Gate.inverse", "stubs/qiskit.circuit.library.CUGate", "stubs/qiskit.circuit.library.CUGate.inverse", "stubs/qiskit.circuit.library.CXGate", "stubs/qiskit.circuit.library.CXGate.control", "stubs/qiskit.circuit.library.CXGate.inverse", "stubs/qiskit.circuit.library.CYGate", "stubs/qiskit.circuit.library.CYGate.inverse", "stubs/qiskit.circuit.library.CZGate", "stubs/qiskit.circuit.library.CZGate.inverse", "stubs/qiskit.circuit.library.DCXGate", "stubs/qiskit.circuit.library.Diagonal", "stubs/qiskit.circuit.library.DraperQFTAdder", "stubs/qiskit.circuit.library.ECRGate", "stubs/qiskit.circuit.library.ECRGate.to_matrix", "stubs/qiskit.circuit.library.EfficientSU2", "stubs/qiskit.circuit.library.EvolvedOperatorAnsatz", "stubs/qiskit.circuit.library.ExactReciprocal", "stubs/qiskit.circuit.library.ExcitationPreserving", "stubs/qiskit.circuit.library.FourierChecking", "stubs/qiskit.circuit.library.FunctionalPauliRotations", "stubs/qiskit.circuit.library.GMS", "stubs/qiskit.circuit.library.GR", "stubs/qiskit.circuit.library.GRX", "stubs/qiskit.circuit.library.GRY", "stubs/qiskit.circuit.library.GRZ", "stubs/qiskit.circuit.library.GraphState", "stubs/qiskit.circuit.library.GroverOperator", "stubs/qiskit.circuit.library.HGate", "stubs/qiskit.circuit.library.HGate.control", "stubs/qiskit.circuit.library.HGate.inverse", "stubs/qiskit.circuit.library.HRSCumulativeMultiplier", "stubs/qiskit.circuit.library.HiddenLinearFunction", "stubs/qiskit.circuit.library.IGate", "stubs/qiskit.circuit.library.IGate.inverse", "stubs/qiskit.circuit.library.IQP", "stubs/qiskit.circuit.library.InnerProduct", "stubs/qiskit.circuit.library.IntegerComparator", "stubs/qiskit.circuit.library.LinearAmplitudeFunction", "stubs/qiskit.circuit.library.LinearAmplitudeFunction.post_processing", "stubs/qiskit.circuit.library.LinearFunction", "stubs/qiskit.circuit.library.LinearFunction.is_permutation", "stubs/qiskit.circuit.library.LinearFunction.permutation_pattern", "stubs/qiskit.circuit.library.LinearFunction.synthesize", "stubs/qiskit.circuit.library.LinearFunction.validate_parameter", "stubs/qiskit.circuit.library.LinearPauliRotations", "stubs/qiskit.circuit.library.MCMT", "stubs/qiskit.circuit.library.MCMT.control", "stubs/qiskit.circuit.library.MCMT.inverse", "stubs/qiskit.circuit.library.MCMTVChain", "stubs/qiskit.circuit.library.MCMTVChain.inverse", "stubs/qiskit.circuit.library.MCPhaseGate", "stubs/qiskit.circuit.library.MCPhaseGate.control", "stubs/qiskit.circuit.library.MCPhaseGate.inverse", "stubs/qiskit.circuit.library.MCXGate", "stubs/qiskit.circuit.library.MCXGate.control", "stubs/qiskit.circuit.library.MCXGate.get_num_ancilla_qubits", "stubs/qiskit.circuit.library.MCXGate.inverse", "stubs/qiskit.circuit.library.MCXGrayCode", "stubs/qiskit.circuit.library.MCXGrayCode.inverse", "stubs/qiskit.circuit.library.MCXRecursive", "stubs/qiskit.circuit.library.MCXRecursive.get_num_ancilla_qubits", "stubs/qiskit.circuit.library.MCXRecursive.inverse", "stubs/qiskit.circuit.library.MCXVChain", "stubs/qiskit.circuit.library.MCXVChain.get_num_ancilla_qubits", "stubs/qiskit.circuit.library.MCXVChain.inverse", "stubs/qiskit.circuit.library.MSGate", "stubs/qiskit.circuit.library.Measure", "stubs/qiskit.circuit.library.Measure.add_decomposition", "stubs/qiskit.circuit.library.Measure.assemble", "stubs/qiskit.circuit.library.Measure.broadcast_arguments", "stubs/qiskit.circuit.library.Measure.c_if", "stubs/qiskit.circuit.library.Measure.copy", "stubs/qiskit.circuit.library.Measure.inverse", "stubs/qiskit.circuit.library.Measure.is_parameterized", "stubs/qiskit.circuit.library.Measure.qasm", "stubs/qiskit.circuit.library.Measure.repeat", "stubs/qiskit.circuit.library.Measure.reverse_ops", "stubs/qiskit.circuit.library.Measure.soft_compare", "stubs/qiskit.circuit.library.Measure.validate_parameter", "stubs/qiskit.circuit.library.NLocal", "stubs/qiskit.circuit.library.NLocal.add_layer", "stubs/qiskit.circuit.library.NLocal.assign_parameters", "stubs/qiskit.circuit.library.NLocal.get_entangler_map", "stubs/qiskit.circuit.library.NLocal.get_unentangled_qubits", "stubs/qiskit.circuit.library.NLocal.print_settings", "stubs/qiskit.circuit.library.OR", "stubs/qiskit.circuit.library.PauliEvolutionGate", "stubs/qiskit.circuit.library.PauliEvolutionGate.validate_parameter", "stubs/qiskit.circuit.library.PauliFeatureMap", "stubs/qiskit.circuit.library.PauliFeatureMap.pauli_block", "stubs/qiskit.circuit.library.PauliFeatureMap.pauli_evolution", "stubs/qiskit.circuit.library.PauliGate", "stubs/qiskit.circuit.library.PauliGate.inverse", "stubs/qiskit.circuit.library.PauliGate.validate_parameter", "stubs/qiskit.circuit.library.PauliTwoDesign", "stubs/qiskit.circuit.library.Permutation", "stubs/qiskit.circuit.library.PhaseEstimation", "stubs/qiskit.circuit.library.PhaseGate", "stubs/qiskit.circuit.library.PhaseGate.control", "stubs/qiskit.circuit.library.PhaseGate.inverse", "stubs/qiskit.circuit.library.PhaseOracle", "stubs/qiskit.circuit.library.PhaseOracle.evaluate_bitstring", "stubs/qiskit.circuit.library.PhaseOracle.from_dimacs_file", "stubs/qiskit.circuit.library.PiecewiseChebyshev", "stubs/qiskit.circuit.library.PiecewiseLinearPauliRotations", "stubs/qiskit.circuit.library.PiecewiseLinearPauliRotations.evaluate", "stubs/qiskit.circuit.library.PiecewisePolynomialPauliRotations", "stubs/qiskit.circuit.library.PiecewisePolynomialPauliRotations.evaluate", "stubs/qiskit.circuit.library.PolynomialPauliRotations", "stubs/qiskit.circuit.library.QAOAAnsatz", "stubs/qiskit.circuit.library.QFT", "stubs/qiskit.circuit.library.QFT.inverse", "stubs/qiskit.circuit.library.QFT.is_inverse", "stubs/qiskit.circuit.library.QuadraticForm", "stubs/qiskit.circuit.library.QuadraticForm.required_result_qubits", "stubs/qiskit.circuit.library.QuantumVolume", "stubs/qiskit.circuit.library.RC3XGate", "stubs/qiskit.circuit.library.RCCXGate", "stubs/qiskit.circuit.library.RGQFTMultiplier", "stubs/qiskit.circuit.library.RGate", "stubs/qiskit.circuit.library.RGate.inverse", "stubs/qiskit.circuit.library.RVGate", "stubs/qiskit.circuit.library.RVGate.inverse", "stubs/qiskit.circuit.library.RVGate.to_matrix", "stubs/qiskit.circuit.library.RXGate", "stubs/qiskit.circuit.library.RXGate.control", "stubs/qiskit.circuit.library.RXGate.inverse", "stubs/qiskit.circuit.library.RXXGate", "stubs/qiskit.circuit.library.RXXGate.inverse", "stubs/qiskit.circuit.library.RYGate", "stubs/qiskit.circuit.library.RYGate.control", "stubs/qiskit.circuit.library.RYGate.inverse", "stubs/qiskit.circuit.library.RYYGate", "stubs/qiskit.circuit.library.RYYGate.inverse", "stubs/qiskit.circuit.library.RZGate", "stubs/qiskit.circuit.library.RZGate.control", "stubs/qiskit.circuit.library.RZGate.inverse", "stubs/qiskit.circuit.library.RZXGate", "stubs/qiskit.circuit.library.RZXGate.inverse", "stubs/qiskit.circuit.library.RZZGate", "stubs/qiskit.circuit.library.RZZGate.inverse", "stubs/qiskit.circuit.library.RealAmplitudes", "stubs/qiskit.circuit.library.Reset", "stubs/qiskit.circuit.library.Reset.add_decomposition", "stubs/qiskit.circuit.library.Reset.assemble", "stubs/qiskit.circuit.library.Reset.broadcast_arguments", "stubs/qiskit.circuit.library.Reset.c_if", "stubs/qiskit.circuit.library.Reset.copy", "stubs/qiskit.circuit.library.Reset.inverse", "stubs/qiskit.circuit.library.Reset.is_parameterized", "stubs/qiskit.circuit.library.Reset.qasm", "stubs/qiskit.circuit.library.Reset.repeat", "stubs/qiskit.circuit.library.Reset.reverse_ops", "stubs/qiskit.circuit.library.Reset.soft_compare", "stubs/qiskit.circuit.library.Reset.validate_parameter", "stubs/qiskit.circuit.library.SGate", "stubs/qiskit.circuit.library.SGate.inverse", "stubs/qiskit.circuit.library.SXGate", "stubs/qiskit.circuit.library.SXGate.control", "stubs/qiskit.circuit.library.SXGate.inverse", "stubs/qiskit.circuit.library.SXdgGate", "stubs/qiskit.circuit.library.SXdgGate.inverse", "stubs/qiskit.circuit.library.SdgGate", "stubs/qiskit.circuit.library.SdgGate.inverse", "stubs/qiskit.circuit.library.StatePreparation", "stubs/qiskit.circuit.library.StatePreparation.broadcast_arguments", "stubs/qiskit.circuit.library.StatePreparation.inverse", "stubs/qiskit.circuit.library.StatePreparation.validate_parameter", "stubs/qiskit.circuit.library.SwapGate", "stubs/qiskit.circuit.library.SwapGate.control", "stubs/qiskit.circuit.library.SwapGate.inverse", "stubs/qiskit.circuit.library.TGate", "stubs/qiskit.circuit.library.TGate.inverse", "stubs/qiskit.circuit.library.TdgGate", "stubs/qiskit.circuit.library.TdgGate.inverse", "stubs/qiskit.circuit.library.TwoLocal", "stubs/qiskit.circuit.library.TwoLocal.get_entangler_map", "stubs/qiskit.circuit.library.U1Gate", "stubs/qiskit.circuit.library.U1Gate.control", "stubs/qiskit.circuit.library.U1Gate.inverse", "stubs/qiskit.circuit.library.U2Gate", "stubs/qiskit.circuit.library.U2Gate.inverse", "stubs/qiskit.circuit.library.U3Gate", "stubs/qiskit.circuit.library.U3Gate.control", "stubs/qiskit.circuit.library.U3Gate.inverse", "stubs/qiskit.circuit.library.UGate", "stubs/qiskit.circuit.library.UGate.control", "stubs/qiskit.circuit.library.UGate.inverse", "stubs/qiskit.circuit.library.VBERippleCarryAdder", "stubs/qiskit.circuit.library.WeightedAdder", "stubs/qiskit.circuit.library.XGate", "stubs/qiskit.circuit.library.XGate.control", "stubs/qiskit.circuit.library.XGate.inverse", "stubs/qiskit.circuit.library.XOR", "stubs/qiskit.circuit.library.XXMinusYYGate", "stubs/qiskit.circuit.library.XXMinusYYGate.inverse", "stubs/qiskit.circuit.library.XXPlusYYGate", "stubs/qiskit.circuit.library.XXPlusYYGate.inverse", "stubs/qiskit.circuit.library.YGate", "stubs/qiskit.circuit.library.YGate.control", "stubs/qiskit.circuit.library.YGate.inverse", "stubs/qiskit.circuit.library.ZFeatureMap", "stubs/qiskit.circuit.library.ZGate", "stubs/qiskit.circuit.library.ZGate.control", "stubs/qiskit.circuit.library.ZGate.inverse", "stubs/qiskit.circuit.library.ZZFeatureMap", "stubs/qiskit.circuit.library.clifford_2_1", "stubs/qiskit.circuit.library.clifford_2_2", "stubs/qiskit.circuit.library.clifford_2_3", "stubs/qiskit.circuit.library.clifford_2_4", "stubs/qiskit.circuit.library.clifford_3_1", "stubs/qiskit.circuit.library.clifford_4_1", "stubs/qiskit.circuit.library.clifford_4_2", "stubs/qiskit.circuit.library.clifford_4_3", "stubs/qiskit.circuit.library.clifford_4_4", "stubs/qiskit.circuit.library.clifford_5_1", "stubs/qiskit.circuit.library.clifford_6_1", "stubs/qiskit.circuit.library.clifford_6_2", "stubs/qiskit.circuit.library.clifford_6_3", "stubs/qiskit.circuit.library.clifford_6_4", "stubs/qiskit.circuit.library.clifford_6_5", "stubs/qiskit.circuit.library.clifford_8_1", "stubs/qiskit.circuit.library.clifford_8_2", "stubs/qiskit.circuit.library.clifford_8_3", "stubs/qiskit.circuit.library.iSwapGate", "stubs/qiskit.circuit.library.rzx_cy", "stubs/qiskit.circuit.library.rzx_xz", "stubs/qiskit.circuit.library.rzx_yz", "stubs/qiskit.circuit.library.rzx_zz1", "stubs/qiskit.circuit.library.rzx_zz2", "stubs/qiskit.circuit.library.rzx_zz3", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_4b_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_4b_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_4", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_4", "stubs/qiskit.circuit.library.templates.nct.template_nct_6b_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_6b_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_6c_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_7a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_7b_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_7c_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_7d_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_7e_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_9a_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_10", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_11", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_12", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_4", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_5", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_6", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_7", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_8", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_9", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_1", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_10", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_2", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_3", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_4", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_5", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_6", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_7", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_8", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_9", "stubs/qiskit.circuit.random.random_circuit", "stubs/qiskit.compiler.assemble", "stubs/qiskit.compiler.schedule", "stubs/qiskit.compiler.sequence", "stubs/qiskit.compiler.transpile", "stubs/qiskit.converters.ast_to_dag", "stubs/qiskit.converters.circuit_to_dag", "stubs/qiskit.converters.circuit_to_dagdependency", "stubs/qiskit.converters.circuit_to_gate", "stubs/qiskit.converters.circuit_to_instruction", "stubs/qiskit.converters.dag_to_circuit", "stubs/qiskit.converters.dag_to_dagdependency", "stubs/qiskit.converters.dagdependency_to_circuit", "stubs/qiskit.converters.dagdependency_to_dag", "stubs/qiskit.dagcircuit.DAGCircuit", "stubs/qiskit.dagcircuit.DAGCircuit.add_calibration", "stubs/qiskit.dagcircuit.DAGCircuit.add_clbits", "stubs/qiskit.dagcircuit.DAGCircuit.add_creg", "stubs/qiskit.dagcircuit.DAGCircuit.add_qreg", "stubs/qiskit.dagcircuit.DAGCircuit.add_qubits", "stubs/qiskit.dagcircuit.DAGCircuit.ancestors", "stubs/qiskit.dagcircuit.DAGCircuit.apply_operation_back", "stubs/qiskit.dagcircuit.DAGCircuit.apply_operation_front", "stubs/qiskit.dagcircuit.DAGCircuit.bfs_successors", "stubs/qiskit.dagcircuit.DAGCircuit.collect_1q_runs", "stubs/qiskit.dagcircuit.DAGCircuit.collect_2q_runs", "stubs/qiskit.dagcircuit.DAGCircuit.collect_runs", "stubs/qiskit.dagcircuit.DAGCircuit.compose", "stubs/qiskit.dagcircuit.DAGCircuit.copy_empty_like", "stubs/qiskit.dagcircuit.DAGCircuit.count_ops", "stubs/qiskit.dagcircuit.DAGCircuit.count_ops_longest_path", "stubs/qiskit.dagcircuit.DAGCircuit.depth", "stubs/qiskit.dagcircuit.DAGCircuit.descendants", "stubs/qiskit.dagcircuit.DAGCircuit.draw", "stubs/qiskit.dagcircuit.DAGCircuit.edges", "stubs/qiskit.dagcircuit.DAGCircuit.from_networkx", "stubs/qiskit.dagcircuit.DAGCircuit.front_layer", "stubs/qiskit.dagcircuit.DAGCircuit.gate_nodes", "stubs/qiskit.dagcircuit.DAGCircuit.has_calibration_for", "stubs/qiskit.dagcircuit.DAGCircuit.idle_wires", "stubs/qiskit.dagcircuit.DAGCircuit.is_predecessor", "stubs/qiskit.dagcircuit.DAGCircuit.is_successor", "stubs/qiskit.dagcircuit.DAGCircuit.layers", "stubs/qiskit.dagcircuit.DAGCircuit.longest_path", "stubs/qiskit.dagcircuit.DAGCircuit.multi_qubit_ops", "stubs/qiskit.dagcircuit.DAGCircuit.multigraph_layers", "stubs/qiskit.dagcircuit.DAGCircuit.named_nodes", "stubs/qiskit.dagcircuit.DAGCircuit.node", "stubs/qiskit.dagcircuit.DAGCircuit.nodes", "stubs/qiskit.dagcircuit.DAGCircuit.nodes_on_wire", "stubs/qiskit.dagcircuit.DAGCircuit.num_clbits", "stubs/qiskit.dagcircuit.DAGCircuit.num_qubits", "stubs/qiskit.dagcircuit.DAGCircuit.num_tensor_factors", "stubs/qiskit.dagcircuit.DAGCircuit.op_nodes", "stubs/qiskit.dagcircuit.DAGCircuit.predecessors", "stubs/qiskit.dagcircuit.DAGCircuit.properties", "stubs/qiskit.dagcircuit.DAGCircuit.quantum_predecessors", "stubs/qiskit.dagcircuit.DAGCircuit.quantum_successors", "stubs/qiskit.dagcircuit.DAGCircuit.remove_all_ops_named", "stubs/qiskit.dagcircuit.DAGCircuit.remove_ancestors_of", "stubs/qiskit.dagcircuit.DAGCircuit.remove_clbits", "stubs/qiskit.dagcircuit.DAGCircuit.remove_cregs", "stubs/qiskit.dagcircuit.DAGCircuit.remove_descendants_of", "stubs/qiskit.dagcircuit.DAGCircuit.remove_nonancestors_of", "stubs/qiskit.dagcircuit.DAGCircuit.remove_nondescendants_of", "stubs/qiskit.dagcircuit.DAGCircuit.remove_op_node", "stubs/qiskit.dagcircuit.DAGCircuit.replace_block_with_op", "stubs/qiskit.dagcircuit.DAGCircuit.reverse_ops", "stubs/qiskit.dagcircuit.DAGCircuit.serial_layers", "stubs/qiskit.dagcircuit.DAGCircuit.size", "stubs/qiskit.dagcircuit.DAGCircuit.substitute_node", "stubs/qiskit.dagcircuit.DAGCircuit.substitute_node_with_dag", "stubs/qiskit.dagcircuit.DAGCircuit.successors", "stubs/qiskit.dagcircuit.DAGCircuit.to_networkx", "stubs/qiskit.dagcircuit.DAGCircuit.topological_nodes", "stubs/qiskit.dagcircuit.DAGCircuit.topological_op_nodes", "stubs/qiskit.dagcircuit.DAGCircuit.two_qubit_ops", "stubs/qiskit.dagcircuit.DAGCircuit.width", "stubs/qiskit.dagcircuit.DAGCircuitError", "stubs/qiskit.dagcircuit.DAGDepNode", "stubs/qiskit.dagcircuit.DAGDepNode.copy", "stubs/qiskit.dagcircuit.DAGDepNode.semantic_eq", "stubs/qiskit.dagcircuit.DAGDependency", "stubs/qiskit.dagcircuit.DAGDependency.add_clbits", "stubs/qiskit.dagcircuit.DAGDependency.add_creg", "stubs/qiskit.dagcircuit.DAGDependency.add_op_node", "stubs/qiskit.dagcircuit.DAGDependency.add_qreg", "stubs/qiskit.dagcircuit.DAGDependency.add_qubits", "stubs/qiskit.dagcircuit.DAGDependency.copy", "stubs/qiskit.dagcircuit.DAGDependency.depth", "stubs/qiskit.dagcircuit.DAGDependency.direct_predecessors", "stubs/qiskit.dagcircuit.DAGDependency.direct_successors", "stubs/qiskit.dagcircuit.DAGDependency.draw", "stubs/qiskit.dagcircuit.DAGDependency.get_all_edges", "stubs/qiskit.dagcircuit.DAGDependency.get_edges", "stubs/qiskit.dagcircuit.DAGDependency.get_in_edges", "stubs/qiskit.dagcircuit.DAGDependency.get_node", "stubs/qiskit.dagcircuit.DAGDependency.get_nodes", "stubs/qiskit.dagcircuit.DAGDependency.get_out_edges", "stubs/qiskit.dagcircuit.DAGDependency.predecessors", "stubs/qiskit.dagcircuit.DAGDependency.size", "stubs/qiskit.dagcircuit.DAGDependency.successors", "stubs/qiskit.dagcircuit.DAGDependency.to_networkx", "stubs/qiskit.dagcircuit.DAGDependency.to_retworkx", "stubs/qiskit.dagcircuit.DAGDependency.topological_nodes", "stubs/qiskit.dagcircuit.DAGInNode", "stubs/qiskit.dagcircuit.DAGInNode.semantic_eq", "stubs/qiskit.dagcircuit.DAGNode", "stubs/qiskit.dagcircuit.DAGNode.semantic_eq", "stubs/qiskit.dagcircuit.DAGOpNode", "stubs/qiskit.dagcircuit.DAGOpNode.semantic_eq", "stubs/qiskit.dagcircuit.DAGOutNode", "stubs/qiskit.dagcircuit.DAGOutNode.semantic_eq", "stubs/qiskit.extensions.HamiltonianGate", "stubs/qiskit.extensions.HamiltonianGate.add_decomposition", "stubs/qiskit.extensions.HamiltonianGate.adjoint", "stubs/qiskit.extensions.HamiltonianGate.assemble", "stubs/qiskit.extensions.HamiltonianGate.broadcast_arguments", "stubs/qiskit.extensions.HamiltonianGate.c_if", "stubs/qiskit.extensions.HamiltonianGate.conjugate", "stubs/qiskit.extensions.HamiltonianGate.control", "stubs/qiskit.extensions.HamiltonianGate.copy", "stubs/qiskit.extensions.HamiltonianGate.inverse", "stubs/qiskit.extensions.HamiltonianGate.is_parameterized", "stubs/qiskit.extensions.HamiltonianGate.power", "stubs/qiskit.extensions.HamiltonianGate.qasm", "stubs/qiskit.extensions.HamiltonianGate.repeat", "stubs/qiskit.extensions.HamiltonianGate.reverse_ops", "stubs/qiskit.extensions.HamiltonianGate.soft_compare", "stubs/qiskit.extensions.HamiltonianGate.to_matrix", "stubs/qiskit.extensions.HamiltonianGate.transpose", "stubs/qiskit.extensions.HamiltonianGate.validate_parameter", "stubs/qiskit.extensions.Initialize", "stubs/qiskit.extensions.Initialize.add_decomposition", "stubs/qiskit.extensions.Initialize.assemble", "stubs/qiskit.extensions.Initialize.broadcast_arguments", "stubs/qiskit.extensions.Initialize.c_if", "stubs/qiskit.extensions.Initialize.copy", "stubs/qiskit.extensions.Initialize.gates_to_uncompute", "stubs/qiskit.extensions.Initialize.inverse", "stubs/qiskit.extensions.Initialize.is_parameterized", "stubs/qiskit.extensions.Initialize.qasm", "stubs/qiskit.extensions.Initialize.repeat", "stubs/qiskit.extensions.Initialize.reverse_ops", "stubs/qiskit.extensions.Initialize.soft_compare", "stubs/qiskit.extensions.Initialize.validate_parameter", "stubs/qiskit.extensions.SingleQubitUnitary", "stubs/qiskit.extensions.SingleQubitUnitary.add_decomposition", "stubs/qiskit.extensions.SingleQubitUnitary.assemble", "stubs/qiskit.extensions.SingleQubitUnitary.broadcast_arguments", "stubs/qiskit.extensions.SingleQubitUnitary.c_if", "stubs/qiskit.extensions.SingleQubitUnitary.control", "stubs/qiskit.extensions.SingleQubitUnitary.copy", "stubs/qiskit.extensions.SingleQubitUnitary.inverse", "stubs/qiskit.extensions.SingleQubitUnitary.is_parameterized", "stubs/qiskit.extensions.SingleQubitUnitary.power", "stubs/qiskit.extensions.SingleQubitUnitary.qasm", "stubs/qiskit.extensions.SingleQubitUnitary.repeat", "stubs/qiskit.extensions.SingleQubitUnitary.reverse_ops", "stubs/qiskit.extensions.SingleQubitUnitary.soft_compare", "stubs/qiskit.extensions.SingleQubitUnitary.to_matrix", "stubs/qiskit.extensions.SingleQubitUnitary.validate_parameter", "stubs/qiskit.extensions.Snapshot", "stubs/qiskit.extensions.Snapshot.add_decomposition", "stubs/qiskit.extensions.Snapshot.assemble", "stubs/qiskit.extensions.Snapshot.broadcast_arguments", "stubs/qiskit.extensions.Snapshot.c_if", "stubs/qiskit.extensions.Snapshot.copy", "stubs/qiskit.extensions.Snapshot.inverse", "stubs/qiskit.extensions.Snapshot.is_parameterized", "stubs/qiskit.extensions.Snapshot.qasm", "stubs/qiskit.extensions.Snapshot.repeat", "stubs/qiskit.extensions.Snapshot.reverse_ops", "stubs/qiskit.extensions.Snapshot.soft_compare", "stubs/qiskit.extensions.Snapshot.validate_parameter", "stubs/qiskit.extensions.UCPauliRotGate", "stubs/qiskit.extensions.UCPauliRotGate.add_decomposition", "stubs/qiskit.extensions.UCPauliRotGate.assemble", "stubs/qiskit.extensions.UCPauliRotGate.broadcast_arguments", "stubs/qiskit.extensions.UCPauliRotGate.c_if", "stubs/qiskit.extensions.UCPauliRotGate.control", "stubs/qiskit.extensions.UCPauliRotGate.copy", "stubs/qiskit.extensions.UCPauliRotGate.inverse", "stubs/qiskit.extensions.UCPauliRotGate.is_parameterized", "stubs/qiskit.extensions.UCPauliRotGate.power", "stubs/qiskit.extensions.UCPauliRotGate.qasm", "stubs/qiskit.extensions.UCPauliRotGate.repeat", "stubs/qiskit.extensions.UCPauliRotGate.reverse_ops", "stubs/qiskit.extensions.UCPauliRotGate.soft_compare", "stubs/qiskit.extensions.UCPauliRotGate.to_matrix", "stubs/qiskit.extensions.UCPauliRotGate.validate_parameter", "stubs/qiskit.extensions.UCRXGate", "stubs/qiskit.extensions.UCRXGate.add_decomposition", "stubs/qiskit.extensions.UCRXGate.assemble", "stubs/qiskit.extensions.UCRXGate.broadcast_arguments", "stubs/qiskit.extensions.UCRXGate.c_if", "stubs/qiskit.extensions.UCRXGate.control", "stubs/qiskit.extensions.UCRXGate.copy", "stubs/qiskit.extensions.UCRXGate.inverse", "stubs/qiskit.extensions.UCRXGate.is_parameterized", "stubs/qiskit.extensions.UCRXGate.power", "stubs/qiskit.extensions.UCRXGate.qasm", "stubs/qiskit.extensions.UCRXGate.repeat", "stubs/qiskit.extensions.UCRXGate.reverse_ops", "stubs/qiskit.extensions.UCRXGate.soft_compare", "stubs/qiskit.extensions.UCRXGate.to_matrix", "stubs/qiskit.extensions.UCRXGate.validate_parameter", "stubs/qiskit.extensions.UCRYGate", "stubs/qiskit.extensions.UCRYGate.add_decomposition", "stubs/qiskit.extensions.UCRYGate.assemble", "stubs/qiskit.extensions.UCRYGate.broadcast_arguments", "stubs/qiskit.extensions.UCRYGate.c_if", "stubs/qiskit.extensions.UCRYGate.control", "stubs/qiskit.extensions.UCRYGate.copy", "stubs/qiskit.extensions.UCRYGate.inverse", "stubs/qiskit.extensions.UCRYGate.is_parameterized", "stubs/qiskit.extensions.UCRYGate.power", "stubs/qiskit.extensions.UCRYGate.qasm", "stubs/qiskit.extensions.UCRYGate.repeat", "stubs/qiskit.extensions.UCRYGate.reverse_ops", "stubs/qiskit.extensions.UCRYGate.soft_compare", "stubs/qiskit.extensions.UCRYGate.to_matrix", "stubs/qiskit.extensions.UCRYGate.validate_parameter", "stubs/qiskit.extensions.UCRZGate", "stubs/qiskit.extensions.UCRZGate.add_decomposition", "stubs/qiskit.extensions.UCRZGate.assemble", "stubs/qiskit.extensions.UCRZGate.broadcast_arguments", "stubs/qiskit.extensions.UCRZGate.c_if", "stubs/qiskit.extensions.UCRZGate.control", "stubs/qiskit.extensions.UCRZGate.copy", "stubs/qiskit.extensions.UCRZGate.inverse", "stubs/qiskit.extensions.UCRZGate.is_parameterized", "stubs/qiskit.extensions.UCRZGate.power", "stubs/qiskit.extensions.UCRZGate.qasm", "stubs/qiskit.extensions.UCRZGate.repeat", "stubs/qiskit.extensions.UCRZGate.reverse_ops", "stubs/qiskit.extensions.UCRZGate.soft_compare", "stubs/qiskit.extensions.UCRZGate.to_matrix", "stubs/qiskit.extensions.UCRZGate.validate_parameter", "stubs/qiskit.extensions.UnitaryGate", "stubs/qiskit.extensions.UnitaryGate.add_decomposition", "stubs/qiskit.extensions.UnitaryGate.adjoint", "stubs/qiskit.extensions.UnitaryGate.assemble", "stubs/qiskit.extensions.UnitaryGate.broadcast_arguments", "stubs/qiskit.extensions.UnitaryGate.c_if", "stubs/qiskit.extensions.UnitaryGate.conjugate", "stubs/qiskit.extensions.UnitaryGate.control", "stubs/qiskit.extensions.UnitaryGate.copy", "stubs/qiskit.extensions.UnitaryGate.inverse", "stubs/qiskit.extensions.UnitaryGate.is_parameterized", "stubs/qiskit.extensions.UnitaryGate.power", "stubs/qiskit.extensions.UnitaryGate.qasm", "stubs/qiskit.extensions.UnitaryGate.repeat", "stubs/qiskit.extensions.UnitaryGate.reverse_ops", "stubs/qiskit.extensions.UnitaryGate.soft_compare", "stubs/qiskit.extensions.UnitaryGate.to_matrix", "stubs/qiskit.extensions.UnitaryGate.transpose", "stubs/qiskit.extensions.UnitaryGate.validate_parameter", "stubs/qiskit.opflow.OperatorBase", "stubs/qiskit.opflow.OperatorBase.add", "stubs/qiskit.opflow.OperatorBase.adjoint", "stubs/qiskit.opflow.OperatorBase.assign_parameters", "stubs/qiskit.opflow.OperatorBase.bind_parameters", "stubs/qiskit.opflow.OperatorBase.compose", "stubs/qiskit.opflow.OperatorBase.copy", "stubs/qiskit.opflow.OperatorBase.equals", "stubs/qiskit.opflow.OperatorBase.eval", "stubs/qiskit.opflow.OperatorBase.is_hermitian", "stubs/qiskit.opflow.OperatorBase.mul", "stubs/qiskit.opflow.OperatorBase.neg", "stubs/qiskit.opflow.OperatorBase.permute", "stubs/qiskit.opflow.OperatorBase.primitive_strings", "stubs/qiskit.opflow.OperatorBase.reduce", "stubs/qiskit.opflow.OperatorBase.tensor", "stubs/qiskit.opflow.OperatorBase.tensorpower", "stubs/qiskit.opflow.OperatorBase.to_circuit_op", "stubs/qiskit.opflow.OperatorBase.to_matrix", "stubs/qiskit.opflow.OperatorBase.to_matrix_op", "stubs/qiskit.opflow.OperatorBase.to_spmatrix", "stubs/qiskit.opflow.OpflowError", "stubs/qiskit.opflow.anti_commutator", "stubs/qiskit.opflow.commutator", "stubs/qiskit.opflow.converters", "stubs/qiskit.opflow.converters.AbelianGrouper", "stubs/qiskit.opflow.converters.AbelianGrouper.convert", "stubs/qiskit.opflow.converters.AbelianGrouper.group_subops", "stubs/qiskit.opflow.converters.CircuitSampler", "stubs/qiskit.opflow.converters.CircuitSampler.clear_cache", "stubs/qiskit.opflow.converters.CircuitSampler.convert", "stubs/qiskit.opflow.converters.CircuitSampler.sample_circuits", "stubs/qiskit.opflow.converters.ConverterBase", "stubs/qiskit.opflow.converters.ConverterBase.convert", "stubs/qiskit.opflow.converters.DictToCircuitSum", "stubs/qiskit.opflow.converters.DictToCircuitSum.convert", "stubs/qiskit.opflow.converters.PauliBasisChange", "stubs/qiskit.opflow.converters.PauliBasisChange.construct_cnot_chain", "stubs/qiskit.opflow.converters.PauliBasisChange.convert", "stubs/qiskit.opflow.converters.PauliBasisChange.get_cob_circuit", "stubs/qiskit.opflow.converters.PauliBasisChange.get_diagonal_pauli_op", "stubs/qiskit.opflow.converters.PauliBasisChange.get_diagonalizing_clifford", "stubs/qiskit.opflow.converters.PauliBasisChange.get_tpb_pauli", "stubs/qiskit.opflow.converters.PauliBasisChange.measurement_replacement_fn", "stubs/qiskit.opflow.converters.PauliBasisChange.operator_replacement_fn", "stubs/qiskit.opflow.converters.PauliBasisChange.pad_paulis_to_equal_length", "stubs/qiskit.opflow.converters.PauliBasisChange.statefn_replacement_fn", "stubs/qiskit.opflow.converters.TwoQubitReduction", "stubs/qiskit.opflow.converters.TwoQubitReduction.convert", "stubs/qiskit.opflow.double_commutator", "stubs/qiskit.opflow.evolutions", "stubs/qiskit.opflow.evolutions.EvolutionBase", "stubs/qiskit.opflow.evolutions.EvolutionBase.convert", "stubs/qiskit.opflow.evolutions.EvolutionFactory", "stubs/qiskit.opflow.evolutions.EvolutionFactory.build", "stubs/qiskit.opflow.evolutions.EvolvedOp", "stubs/qiskit.opflow.evolutions.EvolvedOp.add", "stubs/qiskit.opflow.evolutions.EvolvedOp.adjoint", "stubs/qiskit.opflow.evolutions.EvolvedOp.assign_parameters", "stubs/qiskit.opflow.evolutions.EvolvedOp.compose", "stubs/qiskit.opflow.evolutions.EvolvedOp.equals", "stubs/qiskit.opflow.evolutions.EvolvedOp.eval", "stubs/qiskit.opflow.evolutions.EvolvedOp.log_i", "stubs/qiskit.opflow.evolutions.EvolvedOp.permute", "stubs/qiskit.opflow.evolutions.EvolvedOp.primitive_strings", "stubs/qiskit.opflow.evolutions.EvolvedOp.reduce", "stubs/qiskit.opflow.evolutions.EvolvedOp.tensor", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_instruction", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_matrix", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_matrix_op", "stubs/qiskit.opflow.evolutions.MatrixEvolution", "stubs/qiskit.opflow.evolutions.MatrixEvolution.convert", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.convert", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_abelian_paulisum", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_pauli", "stubs/qiskit.opflow.evolutions.QDrift", "stubs/qiskit.opflow.evolutions.QDrift.convert", "stubs/qiskit.opflow.evolutions.Suzuki", "stubs/qiskit.opflow.evolutions.Suzuki.convert", "stubs/qiskit.opflow.evolutions.Trotter", "stubs/qiskit.opflow.evolutions.TrotterizationBase", "stubs/qiskit.opflow.evolutions.TrotterizationBase.convert", "stubs/qiskit.opflow.evolutions.TrotterizationFactory", "stubs/qiskit.opflow.evolutions.TrotterizationFactory.build", "stubs/qiskit.opflow.expectations", "stubs/qiskit.opflow.expectations.AerPauliExpectation", "stubs/qiskit.opflow.expectations.AerPauliExpectation.compute_variance", "stubs/qiskit.opflow.expectations.AerPauliExpectation.convert", "stubs/qiskit.opflow.expectations.CVaRExpectation", "stubs/qiskit.opflow.expectations.CVaRExpectation.compute_variance", "stubs/qiskit.opflow.expectations.CVaRExpectation.convert", "stubs/qiskit.opflow.expectations.ExpectationBase", "stubs/qiskit.opflow.expectations.ExpectationBase.compute_variance", "stubs/qiskit.opflow.expectations.ExpectationBase.convert", "stubs/qiskit.opflow.expectations.ExpectationFactory", "stubs/qiskit.opflow.expectations.ExpectationFactory.build", "stubs/qiskit.opflow.expectations.MatrixExpectation", "stubs/qiskit.opflow.expectations.MatrixExpectation.compute_variance", "stubs/qiskit.opflow.expectations.MatrixExpectation.convert", "stubs/qiskit.opflow.expectations.PauliExpectation", "stubs/qiskit.opflow.expectations.PauliExpectation.compute_variance", "stubs/qiskit.opflow.expectations.PauliExpectation.convert", "stubs/qiskit.opflow.gradients", "stubs/qiskit.opflow.gradients.CircuitGradient", "stubs/qiskit.opflow.gradients.CircuitGradient.convert", "stubs/qiskit.opflow.gradients.CircuitQFI", "stubs/qiskit.opflow.gradients.CircuitQFI.convert", "stubs/qiskit.opflow.gradients.DerivativeBase", "stubs/qiskit.opflow.gradients.DerivativeBase.convert", "stubs/qiskit.opflow.gradients.DerivativeBase.gradient_wrapper", "stubs/qiskit.opflow.gradients.DerivativeBase.parameter_expression_grad", "stubs/qiskit.opflow.gradients.Gradient", "stubs/qiskit.opflow.gradients.Gradient.convert", "stubs/qiskit.opflow.gradients.Gradient.get_gradient", "stubs/qiskit.opflow.gradients.GradientBase", "stubs/qiskit.opflow.gradients.Hessian", "stubs/qiskit.opflow.gradients.Hessian.convert", "stubs/qiskit.opflow.gradients.Hessian.get_hessian", "stubs/qiskit.opflow.gradients.HessianBase", "stubs/qiskit.opflow.gradients.NaturalGradient", "stubs/qiskit.opflow.gradients.NaturalGradient.convert", "stubs/qiskit.opflow.gradients.NaturalGradient.nat_grad_combo_fn", "stubs/qiskit.opflow.gradients.QFI", "stubs/qiskit.opflow.gradients.QFI.convert", "stubs/qiskit.opflow.gradients.QFIBase", "stubs/qiskit.opflow.list_ops", "stubs/qiskit.opflow.list_ops.ComposedOp", "stubs/qiskit.opflow.list_ops.ComposedOp.adjoint", "stubs/qiskit.opflow.list_ops.ComposedOp.compose", "stubs/qiskit.opflow.list_ops.ComposedOp.eval", "stubs/qiskit.opflow.list_ops.ComposedOp.non_distributive_reduce", "stubs/qiskit.opflow.list_ops.ComposedOp.reduce", "stubs/qiskit.opflow.list_ops.ComposedOp.to_circuit", "stubs/qiskit.opflow.list_ops.ListOp", "stubs/qiskit.opflow.list_ops.ListOp.add", "stubs/qiskit.opflow.list_ops.ListOp.adjoint", "stubs/qiskit.opflow.list_ops.ListOp.assign_parameters", "stubs/qiskit.opflow.list_ops.ListOp.compose", "stubs/qiskit.opflow.list_ops.ListOp.default_combo_fn", "stubs/qiskit.opflow.list_ops.ListOp.equals", "stubs/qiskit.opflow.list_ops.ListOp.eval", "stubs/qiskit.opflow.list_ops.ListOp.exp_i", "stubs/qiskit.opflow.list_ops.ListOp.log_i", "stubs/qiskit.opflow.list_ops.ListOp.mul", "stubs/qiskit.opflow.list_ops.ListOp.permute", "stubs/qiskit.opflow.list_ops.ListOp.power", "stubs/qiskit.opflow.list_ops.ListOp.primitive_strings", "stubs/qiskit.opflow.list_ops.ListOp.reduce", "stubs/qiskit.opflow.list_ops.ListOp.tensor", "stubs/qiskit.opflow.list_ops.ListOp.tensorpower", "stubs/qiskit.opflow.list_ops.ListOp.to_circuit_op", "stubs/qiskit.opflow.list_ops.ListOp.to_matrix", "stubs/qiskit.opflow.list_ops.ListOp.to_matrix_op", "stubs/qiskit.opflow.list_ops.ListOp.to_pauli_op", "stubs/qiskit.opflow.list_ops.ListOp.to_spmatrix", "stubs/qiskit.opflow.list_ops.ListOp.traverse", "stubs/qiskit.opflow.list_ops.SummedOp", "stubs/qiskit.opflow.list_ops.SummedOp.add", "stubs/qiskit.opflow.list_ops.SummedOp.collapse_summands", "stubs/qiskit.opflow.list_ops.SummedOp.equals", "stubs/qiskit.opflow.list_ops.SummedOp.reduce", "stubs/qiskit.opflow.list_ops.SummedOp.to_circuit", "stubs/qiskit.opflow.list_ops.SummedOp.to_matrix_op", "stubs/qiskit.opflow.list_ops.SummedOp.to_pauli_op", "stubs/qiskit.opflow.list_ops.TensoredOp", "stubs/qiskit.opflow.list_ops.TensoredOp.eval", "stubs/qiskit.opflow.list_ops.TensoredOp.reduce", "stubs/qiskit.opflow.list_ops.TensoredOp.tensor", "stubs/qiskit.opflow.list_ops.TensoredOp.to_circuit", "stubs/qiskit.opflow.primitive_ops", "stubs/qiskit.opflow.primitive_ops.CircuitOp", "stubs/qiskit.opflow.primitive_ops.CircuitOp.add", "stubs/qiskit.opflow.primitive_ops.CircuitOp.adjoint", "stubs/qiskit.opflow.primitive_ops.CircuitOp.assign_parameters", "stubs/qiskit.opflow.primitive_ops.CircuitOp.compose", "stubs/qiskit.opflow.primitive_ops.CircuitOp.equals", "stubs/qiskit.opflow.primitive_ops.CircuitOp.eval", "stubs/qiskit.opflow.primitive_ops.CircuitOp.permute", "stubs/qiskit.opflow.primitive_ops.CircuitOp.primitive_strings", "stubs/qiskit.opflow.primitive_ops.CircuitOp.reduce", "stubs/qiskit.opflow.primitive_ops.CircuitOp.tensor", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_circuit", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_circuit_op", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_instruction", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_matrix", "stubs/qiskit.opflow.primitive_ops.MatrixOp", "stubs/qiskit.opflow.primitive_ops.MatrixOp.add", "stubs/qiskit.opflow.primitive_ops.MatrixOp.adjoint", "stubs/qiskit.opflow.primitive_ops.MatrixOp.compose", "stubs/qiskit.opflow.primitive_ops.MatrixOp.equals", "stubs/qiskit.opflow.primitive_ops.MatrixOp.eval", "stubs/qiskit.opflow.primitive_ops.MatrixOp.exp_i", "stubs/qiskit.opflow.primitive_ops.MatrixOp.permute", "stubs/qiskit.opflow.primitive_ops.MatrixOp.primitive_strings", "stubs/qiskit.opflow.primitive_ops.MatrixOp.tensor", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_instruction", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_matrix", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_matrix_op", "stubs/qiskit.opflow.primitive_ops.PauliOp", "stubs/qiskit.opflow.primitive_ops.PauliOp.add", "stubs/qiskit.opflow.primitive_ops.PauliOp.adjoint", "stubs/qiskit.opflow.primitive_ops.PauliOp.compose", "stubs/qiskit.opflow.primitive_ops.PauliOp.equals", "stubs/qiskit.opflow.primitive_ops.PauliOp.eval", "stubs/qiskit.opflow.primitive_ops.PauliOp.exp_i", "stubs/qiskit.opflow.primitive_ops.PauliOp.permute", "stubs/qiskit.opflow.primitive_ops.PauliOp.primitive_strings", "stubs/qiskit.opflow.primitive_ops.PauliOp.tensor", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_circuit", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_instruction", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_matrix", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_pauli_op", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_spmatrix", "stubs/qiskit.opflow.primitive_ops.PauliSumOp", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.add", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.adjoint", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.compose", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.equals", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.eval", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.exp_i", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.from_list", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.is_hermitian", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.is_zero", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.matrix_iter", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.mul", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.permute", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.primitive_strings", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.reduce", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.tensor", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_instruction", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_matrix", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_pauli_op", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_spmatrix", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.add", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.adjoint", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.assign_parameters", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.compose", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.equals", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.eval", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.exp_i", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.log_i", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.mul", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.permute", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.primitive_strings", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.reduce", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.tensor", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.tensorpower", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit_op", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_instruction", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix_op", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_pauli_op", "stubs/qiskit.opflow.primitive_ops.TaperedPauliSumOp", "stubs/qiskit.opflow.primitive_ops.TaperedPauliSumOp.assign_parameters", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.consistent_tapering", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.copy", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.find_Z2_symmetries", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.is_empty", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.taper", "stubs/qiskit.opflow.state_fns", "stubs/qiskit.opflow.state_fns.CVaRMeasurement", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.add", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.adjoint", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.compute_cvar", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.eval", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.eval_variance", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.get_outcome_energies_probabilities", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.mul", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.sample", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.tensor", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_circuit_op", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_density_matrix", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_matrix", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_matrix_op", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.traverse", "stubs/qiskit.opflow.state_fns.CircuitStateFn", "stubs/qiskit.opflow.state_fns.CircuitStateFn.add", "stubs/qiskit.opflow.state_fns.CircuitStateFn.adjoint", "stubs/qiskit.opflow.state_fns.CircuitStateFn.assign_parameters", "stubs/qiskit.opflow.state_fns.CircuitStateFn.compose", "stubs/qiskit.opflow.state_fns.CircuitStateFn.eval", "stubs/qiskit.opflow.state_fns.CircuitStateFn.from_dict", "stubs/qiskit.opflow.state_fns.CircuitStateFn.from_vector", "stubs/qiskit.opflow.state_fns.CircuitStateFn.permute", "stubs/qiskit.opflow.state_fns.CircuitStateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.CircuitStateFn.reduce", "stubs/qiskit.opflow.state_fns.CircuitStateFn.sample", "stubs/qiskit.opflow.state_fns.CircuitStateFn.tensor", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_circuit", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_density_matrix", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_instruction", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_matrix", "stubs/qiskit.opflow.state_fns.DictStateFn", "stubs/qiskit.opflow.state_fns.DictStateFn.add", "stubs/qiskit.opflow.state_fns.DictStateFn.adjoint", "stubs/qiskit.opflow.state_fns.DictStateFn.eval", "stubs/qiskit.opflow.state_fns.DictStateFn.permute", "stubs/qiskit.opflow.state_fns.DictStateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.DictStateFn.sample", "stubs/qiskit.opflow.state_fns.DictStateFn.tensor", "stubs/qiskit.opflow.state_fns.DictStateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.DictStateFn.to_density_matrix", "stubs/qiskit.opflow.state_fns.DictStateFn.to_matrix", "stubs/qiskit.opflow.state_fns.DictStateFn.to_spmatrix", "stubs/qiskit.opflow.state_fns.DictStateFn.to_spmatrix_op", "stubs/qiskit.opflow.state_fns.OperatorStateFn", "stubs/qiskit.opflow.state_fns.OperatorStateFn.add", "stubs/qiskit.opflow.state_fns.OperatorStateFn.adjoint", "stubs/qiskit.opflow.state_fns.OperatorStateFn.eval", "stubs/qiskit.opflow.state_fns.OperatorStateFn.permute", "stubs/qiskit.opflow.state_fns.OperatorStateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.OperatorStateFn.sample", "stubs/qiskit.opflow.state_fns.OperatorStateFn.tensor", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_density_matrix", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_matrix", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_matrix_op", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.add", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.adjoint", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.equals", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.eval", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.sample", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_dict_fn", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix_op", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_spmatrix", "stubs/qiskit.opflow.state_fns.StateFn", "stubs/qiskit.opflow.state_fns.StateFn.add", "stubs/qiskit.opflow.state_fns.StateFn.adjoint", "stubs/qiskit.opflow.state_fns.StateFn.assign_parameters", "stubs/qiskit.opflow.state_fns.StateFn.compose", "stubs/qiskit.opflow.state_fns.StateFn.equals", "stubs/qiskit.opflow.state_fns.StateFn.eval", "stubs/qiskit.opflow.state_fns.StateFn.mul", "stubs/qiskit.opflow.state_fns.StateFn.permute", "stubs/qiskit.opflow.state_fns.StateFn.power", "stubs/qiskit.opflow.state_fns.StateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.StateFn.reduce", "stubs/qiskit.opflow.state_fns.StateFn.sample", "stubs/qiskit.opflow.state_fns.StateFn.tensor", "stubs/qiskit.opflow.state_fns.StateFn.tensorpower", "stubs/qiskit.opflow.state_fns.StateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.StateFn.to_density_matrix", "stubs/qiskit.opflow.state_fns.StateFn.to_matrix", "stubs/qiskit.opflow.state_fns.StateFn.to_matrix_op", "stubs/qiskit.opflow.state_fns.StateFn.traverse", "stubs/qiskit.opflow.state_fns.VectorStateFn", "stubs/qiskit.opflow.state_fns.VectorStateFn.add", "stubs/qiskit.opflow.state_fns.VectorStateFn.adjoint", "stubs/qiskit.opflow.state_fns.VectorStateFn.eval", "stubs/qiskit.opflow.state_fns.VectorStateFn.permute", "stubs/qiskit.opflow.state_fns.VectorStateFn.primitive_strings", "stubs/qiskit.opflow.state_fns.VectorStateFn.sample", "stubs/qiskit.opflow.state_fns.VectorStateFn.tensor", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_circuit_op", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_density_matrix", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_dict_fn", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_matrix", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_matrix_op", "stubs/qiskit.primitives.BaseEstimator", "stubs/qiskit.primitives.BaseEstimator.close", "stubs/qiskit.primitives.BaseSampler", "stubs/qiskit.primitives.BaseSampler.close", "stubs/qiskit.primitives.Estimator", "stubs/qiskit.primitives.Estimator.close", "stubs/qiskit.primitives.EstimatorResult", "stubs/qiskit.primitives.Sampler", "stubs/qiskit.primitives.Sampler.close", "stubs/qiskit.primitives.SamplerResult", "stubs/qiskit.providers.Backend", "stubs/qiskit.providers.BackendPropertyError", "stubs/qiskit.providers.BackendV1", "stubs/qiskit.providers.BackendV1.configuration", "stubs/qiskit.providers.BackendV1.name", "stubs/qiskit.providers.BackendV1.properties", "stubs/qiskit.providers.BackendV1.provider", "stubs/qiskit.providers.BackendV1.run", "stubs/qiskit.providers.BackendV1.set_options", "stubs/qiskit.providers.BackendV1.status", "stubs/qiskit.providers.BackendV2", "stubs/qiskit.providers.BackendV2.acquire_channel", "stubs/qiskit.providers.BackendV2.control_channel", "stubs/qiskit.providers.BackendV2.drive_channel", "stubs/qiskit.providers.BackendV2.measure_channel", "stubs/qiskit.providers.BackendV2.qubit_properties", "stubs/qiskit.providers.BackendV2.run", "stubs/qiskit.providers.BackendV2.set_options", "stubs/qiskit.providers.Job", "stubs/qiskit.providers.JobError", "stubs/qiskit.providers.JobStatus", "stubs/qiskit.providers.JobTimeoutError", "stubs/qiskit.providers.JobV1", "stubs/qiskit.providers.JobV1.backend", "stubs/qiskit.providers.JobV1.cancel", "stubs/qiskit.providers.JobV1.cancelled", "stubs/qiskit.providers.JobV1.done", "stubs/qiskit.providers.JobV1.in_final_state", "stubs/qiskit.providers.JobV1.job_id", "stubs/qiskit.providers.JobV1.result", "stubs/qiskit.providers.JobV1.running", "stubs/qiskit.providers.JobV1.status", "stubs/qiskit.providers.JobV1.submit", "stubs/qiskit.providers.JobV1.wait_for_final_state", "stubs/qiskit.providers.Options", "stubs/qiskit.providers.Options.get", "stubs/qiskit.providers.Options.set_validator", "stubs/qiskit.providers.Options.update_options", "stubs/qiskit.providers.Provider", "stubs/qiskit.providers.ProviderV1", "stubs/qiskit.providers.ProviderV1.backends", "stubs/qiskit.providers.ProviderV1.get_backend", "stubs/qiskit.providers.QiskitBackendNotFoundError", "stubs/qiskit.providers.QubitProperties", "stubs/qiskit.providers.aer.AerError", "stubs/qiskit.providers.aer.AerProvider", "stubs/qiskit.providers.aer.AerProvider.backends", "stubs/qiskit.providers.aer.AerProvider.get_backend", "stubs/qiskit.providers.aer.AerSimulator", "stubs/qiskit.providers.aer.AerSimulator.available_devices", "stubs/qiskit.providers.aer.AerSimulator.available_methods", "stubs/qiskit.providers.aer.AerSimulator.clear_options", "stubs/qiskit.providers.aer.AerSimulator.configuration", "stubs/qiskit.providers.aer.AerSimulator.defaults", "stubs/qiskit.providers.aer.AerSimulator.from_backend", "stubs/qiskit.providers.aer.AerSimulator.name", "stubs/qiskit.providers.aer.AerSimulator.properties", "stubs/qiskit.providers.aer.AerSimulator.provider", "stubs/qiskit.providers.aer.AerSimulator.run", "stubs/qiskit.providers.aer.AerSimulator.set_option", "stubs/qiskit.providers.aer.AerSimulator.set_options", "stubs/qiskit.providers.aer.AerSimulator.status", "stubs/qiskit.providers.aer.PulseSimulator", "stubs/qiskit.providers.aer.PulseSimulator.clear_options", "stubs/qiskit.providers.aer.PulseSimulator.configuration", "stubs/qiskit.providers.aer.PulseSimulator.defaults", "stubs/qiskit.providers.aer.PulseSimulator.from_backend", "stubs/qiskit.providers.aer.PulseSimulator.name", "stubs/qiskit.providers.aer.PulseSimulator.properties", "stubs/qiskit.providers.aer.PulseSimulator.provider", "stubs/qiskit.providers.aer.PulseSimulator.run", "stubs/qiskit.providers.aer.PulseSimulator.set_option", "stubs/qiskit.providers.aer.PulseSimulator.set_options", "stubs/qiskit.providers.aer.PulseSimulator.status", "stubs/qiskit.providers.aer.QasmSimulator", "stubs/qiskit.providers.aer.QasmSimulator.available_devices", "stubs/qiskit.providers.aer.QasmSimulator.available_methods", "stubs/qiskit.providers.aer.QasmSimulator.clear_options", "stubs/qiskit.providers.aer.QasmSimulator.configuration", "stubs/qiskit.providers.aer.QasmSimulator.defaults", "stubs/qiskit.providers.aer.QasmSimulator.from_backend", "stubs/qiskit.providers.aer.QasmSimulator.name", "stubs/qiskit.providers.aer.QasmSimulator.properties", "stubs/qiskit.providers.aer.QasmSimulator.provider", "stubs/qiskit.providers.aer.QasmSimulator.run", "stubs/qiskit.providers.aer.QasmSimulator.set_option", "stubs/qiskit.providers.aer.QasmSimulator.set_options", "stubs/qiskit.providers.aer.QasmSimulator.status", "stubs/qiskit.providers.aer.StatevectorSimulator", "stubs/qiskit.providers.aer.StatevectorSimulator.available_devices", "stubs/qiskit.providers.aer.StatevectorSimulator.available_methods", "stubs/qiskit.providers.aer.StatevectorSimulator.clear_options", "stubs/qiskit.providers.aer.StatevectorSimulator.configuration", "stubs/qiskit.providers.aer.StatevectorSimulator.defaults", "stubs/qiskit.providers.aer.StatevectorSimulator.name", "stubs/qiskit.providers.aer.StatevectorSimulator.properties", "stubs/qiskit.providers.aer.StatevectorSimulator.provider", "stubs/qiskit.providers.aer.StatevectorSimulator.run", "stubs/qiskit.providers.aer.StatevectorSimulator.set_option", "stubs/qiskit.providers.aer.StatevectorSimulator.set_options", "stubs/qiskit.providers.aer.StatevectorSimulator.status", "stubs/qiskit.providers.aer.UnitarySimulator", "stubs/qiskit.providers.aer.UnitarySimulator.available_devices", "stubs/qiskit.providers.aer.UnitarySimulator.available_methods", "stubs/qiskit.providers.aer.UnitarySimulator.clear_options", "stubs/qiskit.providers.aer.UnitarySimulator.configuration", "stubs/qiskit.providers.aer.UnitarySimulator.defaults", "stubs/qiskit.providers.aer.UnitarySimulator.name", "stubs/qiskit.providers.aer.UnitarySimulator.properties", "stubs/qiskit.providers.aer.UnitarySimulator.provider", "stubs/qiskit.providers.aer.UnitarySimulator.run", "stubs/qiskit.providers.aer.UnitarySimulator.set_option", "stubs/qiskit.providers.aer.UnitarySimulator.set_options", "stubs/qiskit.providers.aer.UnitarySimulator.status", "stubs/qiskit.providers.aer.extensions.Snapshot", "stubs/qiskit.providers.aer.extensions.Snapshot.add_decomposition", "stubs/qiskit.providers.aer.extensions.Snapshot.assemble", "stubs/qiskit.providers.aer.extensions.Snapshot.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.Snapshot.c_if", "stubs/qiskit.providers.aer.extensions.Snapshot.copy", "stubs/qiskit.providers.aer.extensions.Snapshot.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.Snapshot.inverse", "stubs/qiskit.providers.aer.extensions.Snapshot.is_parameterized", "stubs/qiskit.providers.aer.extensions.Snapshot.qasm", "stubs/qiskit.providers.aer.extensions.Snapshot.repeat", "stubs/qiskit.providers.aer.extensions.Snapshot.reverse_ops", "stubs/qiskit.providers.aer.extensions.Snapshot.soft_compare", "stubs/qiskit.providers.aer.extensions.Snapshot.validate_parameter", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.add_decomposition", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.assemble", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.c_if", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.copy", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.inverse", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.is_parameterized", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.qasm", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.repeat", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.reverse_ops", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.soft_compare", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.validate_parameter", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.add_decomposition", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.assemble", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.c_if", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.copy", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.inverse", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.is_parameterized", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.qasm", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.repeat", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.reverse_ops", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.soft_compare", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.validate_parameter", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.add_decomposition", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.assemble", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.c_if", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.copy", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.inverse", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.is_parameterized", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.qasm", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.repeat", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.reverse_ops", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.soft_compare", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.validate_parameter", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.add_decomposition", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.assemble", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.c_if", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.copy", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.inverse", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.is_parameterized", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.qasm", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.repeat", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.reverse_ops", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.soft_compare", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.validate_parameter", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.add_decomposition", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.assemble", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.broadcast_arguments", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.c_if", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.copy", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.define_snapshot_register", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.inverse", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.is_parameterized", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.qasm", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.repeat", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.reverse_ops", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.soft_compare", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.validate_parameter", "stubs/qiskit.providers.aer.jobs.AerJob", "stubs/qiskit.providers.aer.jobs.AerJob.backend", "stubs/qiskit.providers.aer.jobs.AerJob.cancel", "stubs/qiskit.providers.aer.jobs.AerJob.cancelled", "stubs/qiskit.providers.aer.jobs.AerJob.done", "stubs/qiskit.providers.aer.jobs.AerJob.executor", "stubs/qiskit.providers.aer.jobs.AerJob.in_final_state", "stubs/qiskit.providers.aer.jobs.AerJob.job_id", "stubs/qiskit.providers.aer.jobs.AerJob.qobj", "stubs/qiskit.providers.aer.jobs.AerJob.result", "stubs/qiskit.providers.aer.jobs.AerJob.running", "stubs/qiskit.providers.aer.jobs.AerJob.status", "stubs/qiskit.providers.aer.jobs.AerJob.submit", "stubs/qiskit.providers.aer.jobs.AerJob.wait_for_final_state", "stubs/qiskit.providers.aer.jobs.AerJobSet", "stubs/qiskit.providers.aer.jobs.AerJobSet.backend", "stubs/qiskit.providers.aer.jobs.AerJobSet.cancel", "stubs/qiskit.providers.aer.jobs.AerJobSet.cancelled", "stubs/qiskit.providers.aer.jobs.AerJobSet.done", "stubs/qiskit.providers.aer.jobs.AerJobSet.executor", "stubs/qiskit.providers.aer.jobs.AerJobSet.in_final_state", "stubs/qiskit.providers.aer.jobs.AerJobSet.job", "stubs/qiskit.providers.aer.jobs.AerJobSet.job_id", "stubs/qiskit.providers.aer.jobs.AerJobSet.result", "stubs/qiskit.providers.aer.jobs.AerJobSet.running", "stubs/qiskit.providers.aer.jobs.AerJobSet.status", "stubs/qiskit.providers.aer.jobs.AerJobSet.submit", "stubs/qiskit.providers.aer.jobs.AerJobSet.wait_for_final_state", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker_job", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker_results", "stubs/qiskit.providers.aer.library.SaveAmplitudes", "stubs/qiskit.providers.aer.library.SaveAmplitudes.add_decomposition", "stubs/qiskit.providers.aer.library.SaveAmplitudes.assemble", "stubs/qiskit.providers.aer.library.SaveAmplitudes.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveAmplitudes.c_if", "stubs/qiskit.providers.aer.library.SaveAmplitudes.copy", "stubs/qiskit.providers.aer.library.SaveAmplitudes.inverse", "stubs/qiskit.providers.aer.library.SaveAmplitudes.is_parameterized", "stubs/qiskit.providers.aer.library.SaveAmplitudes.qasm", "stubs/qiskit.providers.aer.library.SaveAmplitudes.repeat", "stubs/qiskit.providers.aer.library.SaveAmplitudes.reverse_ops", "stubs/qiskit.providers.aer.library.SaveAmplitudes.soft_compare", "stubs/qiskit.providers.aer.library.SaveAmplitudes.validate_parameter", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.add_decomposition", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.assemble", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.c_if", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.copy", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.inverse", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.is_parameterized", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.qasm", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.repeat", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.reverse_ops", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.soft_compare", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.validate_parameter", "stubs/qiskit.providers.aer.library.SaveClifford", "stubs/qiskit.providers.aer.library.SaveClifford.add_decomposition", "stubs/qiskit.providers.aer.library.SaveClifford.assemble", "stubs/qiskit.providers.aer.library.SaveClifford.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveClifford.c_if", "stubs/qiskit.providers.aer.library.SaveClifford.copy", "stubs/qiskit.providers.aer.library.SaveClifford.inverse", "stubs/qiskit.providers.aer.library.SaveClifford.is_parameterized", "stubs/qiskit.providers.aer.library.SaveClifford.qasm", "stubs/qiskit.providers.aer.library.SaveClifford.repeat", "stubs/qiskit.providers.aer.library.SaveClifford.reverse_ops", "stubs/qiskit.providers.aer.library.SaveClifford.soft_compare", "stubs/qiskit.providers.aer.library.SaveClifford.validate_parameter", "stubs/qiskit.providers.aer.library.SaveDensityMatrix", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.add_decomposition", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.assemble", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.c_if", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.copy", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.inverse", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.is_parameterized", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.qasm", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.repeat", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.reverse_ops", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.soft_compare", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.validate_parameter", "stubs/qiskit.providers.aer.library.SaveExpectationValue", "stubs/qiskit.providers.aer.library.SaveExpectationValue.add_decomposition", "stubs/qiskit.providers.aer.library.SaveExpectationValue.assemble", "stubs/qiskit.providers.aer.library.SaveExpectationValue.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveExpectationValue.c_if", "stubs/qiskit.providers.aer.library.SaveExpectationValue.copy", "stubs/qiskit.providers.aer.library.SaveExpectationValue.inverse", "stubs/qiskit.providers.aer.library.SaveExpectationValue.is_parameterized", "stubs/qiskit.providers.aer.library.SaveExpectationValue.qasm", "stubs/qiskit.providers.aer.library.SaveExpectationValue.repeat", "stubs/qiskit.providers.aer.library.SaveExpectationValue.reverse_ops", "stubs/qiskit.providers.aer.library.SaveExpectationValue.soft_compare", "stubs/qiskit.providers.aer.library.SaveExpectationValue.validate_parameter", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.add_decomposition", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.assemble", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.c_if", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.copy", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.inverse", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.is_parameterized", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.qasm", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.repeat", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.reverse_ops", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.soft_compare", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.validate_parameter", "stubs/qiskit.providers.aer.library.SaveMatrixProductState", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.add_decomposition", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.assemble", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.c_if", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.copy", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.inverse", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.is_parameterized", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.qasm", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.repeat", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.reverse_ops", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.soft_compare", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.validate_parameter", "stubs/qiskit.providers.aer.library.SaveProbabilities", "stubs/qiskit.providers.aer.library.SaveProbabilities.add_decomposition", "stubs/qiskit.providers.aer.library.SaveProbabilities.assemble", "stubs/qiskit.providers.aer.library.SaveProbabilities.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveProbabilities.c_if", "stubs/qiskit.providers.aer.library.SaveProbabilities.copy", "stubs/qiskit.providers.aer.library.SaveProbabilities.inverse", "stubs/qiskit.providers.aer.library.SaveProbabilities.is_parameterized", "stubs/qiskit.providers.aer.library.SaveProbabilities.qasm", "stubs/qiskit.providers.aer.library.SaveProbabilities.repeat", "stubs/qiskit.providers.aer.library.SaveProbabilities.reverse_ops", "stubs/qiskit.providers.aer.library.SaveProbabilities.soft_compare", "stubs/qiskit.providers.aer.library.SaveProbabilities.validate_parameter", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.add_decomposition", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.assemble", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.c_if", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.copy", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.inverse", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.is_parameterized", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.qasm", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.repeat", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.reverse_ops", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.soft_compare", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.validate_parameter", "stubs/qiskit.providers.aer.library.SaveStabilizer", "stubs/qiskit.providers.aer.library.SaveStabilizer.add_decomposition", "stubs/qiskit.providers.aer.library.SaveStabilizer.assemble", "stubs/qiskit.providers.aer.library.SaveStabilizer.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveStabilizer.c_if", "stubs/qiskit.providers.aer.library.SaveStabilizer.copy", "stubs/qiskit.providers.aer.library.SaveStabilizer.inverse", "stubs/qiskit.providers.aer.library.SaveStabilizer.is_parameterized", "stubs/qiskit.providers.aer.library.SaveStabilizer.qasm", "stubs/qiskit.providers.aer.library.SaveStabilizer.repeat", "stubs/qiskit.providers.aer.library.SaveStabilizer.reverse_ops", "stubs/qiskit.providers.aer.library.SaveStabilizer.soft_compare", "stubs/qiskit.providers.aer.library.SaveStabilizer.validate_parameter", "stubs/qiskit.providers.aer.library.SaveState", "stubs/qiskit.providers.aer.library.SaveState.add_decomposition", "stubs/qiskit.providers.aer.library.SaveState.assemble", "stubs/qiskit.providers.aer.library.SaveState.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveState.c_if", "stubs/qiskit.providers.aer.library.SaveState.copy", "stubs/qiskit.providers.aer.library.SaveState.inverse", "stubs/qiskit.providers.aer.library.SaveState.is_parameterized", "stubs/qiskit.providers.aer.library.SaveState.qasm", "stubs/qiskit.providers.aer.library.SaveState.repeat", "stubs/qiskit.providers.aer.library.SaveState.reverse_ops", "stubs/qiskit.providers.aer.library.SaveState.soft_compare", "stubs/qiskit.providers.aer.library.SaveState.validate_parameter", "stubs/qiskit.providers.aer.library.SaveStatevector", "stubs/qiskit.providers.aer.library.SaveStatevector.add_decomposition", "stubs/qiskit.providers.aer.library.SaveStatevector.assemble", "stubs/qiskit.providers.aer.library.SaveStatevector.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveStatevector.c_if", "stubs/qiskit.providers.aer.library.SaveStatevector.copy", "stubs/qiskit.providers.aer.library.SaveStatevector.inverse", "stubs/qiskit.providers.aer.library.SaveStatevector.is_parameterized", "stubs/qiskit.providers.aer.library.SaveStatevector.qasm", "stubs/qiskit.providers.aer.library.SaveStatevector.repeat", "stubs/qiskit.providers.aer.library.SaveStatevector.reverse_ops", "stubs/qiskit.providers.aer.library.SaveStatevector.soft_compare", "stubs/qiskit.providers.aer.library.SaveStatevector.validate_parameter", "stubs/qiskit.providers.aer.library.SaveStatevectorDict", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.add_decomposition", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.assemble", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.c_if", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.copy", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.inverse", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.is_parameterized", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.qasm", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.repeat", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.reverse_ops", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.soft_compare", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.validate_parameter", "stubs/qiskit.providers.aer.library.SaveSuperOp", "stubs/qiskit.providers.aer.library.SaveSuperOp.add_decomposition", "stubs/qiskit.providers.aer.library.SaveSuperOp.assemble", "stubs/qiskit.providers.aer.library.SaveSuperOp.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveSuperOp.c_if", "stubs/qiskit.providers.aer.library.SaveSuperOp.copy", "stubs/qiskit.providers.aer.library.SaveSuperOp.inverse", "stubs/qiskit.providers.aer.library.SaveSuperOp.is_parameterized", "stubs/qiskit.providers.aer.library.SaveSuperOp.qasm", "stubs/qiskit.providers.aer.library.SaveSuperOp.repeat", "stubs/qiskit.providers.aer.library.SaveSuperOp.reverse_ops", "stubs/qiskit.providers.aer.library.SaveSuperOp.soft_compare", "stubs/qiskit.providers.aer.library.SaveSuperOp.validate_parameter", "stubs/qiskit.providers.aer.library.SaveUnitary", "stubs/qiskit.providers.aer.library.SaveUnitary.add_decomposition", "stubs/qiskit.providers.aer.library.SaveUnitary.assemble", "stubs/qiskit.providers.aer.library.SaveUnitary.broadcast_arguments", "stubs/qiskit.providers.aer.library.SaveUnitary.c_if", "stubs/qiskit.providers.aer.library.SaveUnitary.copy", "stubs/qiskit.providers.aer.library.SaveUnitary.inverse", "stubs/qiskit.providers.aer.library.SaveUnitary.is_parameterized", "stubs/qiskit.providers.aer.library.SaveUnitary.qasm", "stubs/qiskit.providers.aer.library.SaveUnitary.repeat", "stubs/qiskit.providers.aer.library.SaveUnitary.reverse_ops", "stubs/qiskit.providers.aer.library.SaveUnitary.soft_compare", "stubs/qiskit.providers.aer.library.SaveUnitary.validate_parameter", "stubs/qiskit.providers.aer.library.SetDensityMatrix", "stubs/qiskit.providers.aer.library.SetDensityMatrix.add_decomposition", "stubs/qiskit.providers.aer.library.SetDensityMatrix.assemble", "stubs/qiskit.providers.aer.library.SetDensityMatrix.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetDensityMatrix.c_if", "stubs/qiskit.providers.aer.library.SetDensityMatrix.copy", "stubs/qiskit.providers.aer.library.SetDensityMatrix.inverse", "stubs/qiskit.providers.aer.library.SetDensityMatrix.is_parameterized", "stubs/qiskit.providers.aer.library.SetDensityMatrix.qasm", "stubs/qiskit.providers.aer.library.SetDensityMatrix.repeat", "stubs/qiskit.providers.aer.library.SetDensityMatrix.reverse_ops", "stubs/qiskit.providers.aer.library.SetDensityMatrix.soft_compare", "stubs/qiskit.providers.aer.library.SetDensityMatrix.validate_parameter", "stubs/qiskit.providers.aer.library.SetMatrixProductState", "stubs/qiskit.providers.aer.library.SetMatrixProductState.add_decomposition", "stubs/qiskit.providers.aer.library.SetMatrixProductState.assemble", "stubs/qiskit.providers.aer.library.SetMatrixProductState.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetMatrixProductState.c_if", "stubs/qiskit.providers.aer.library.SetMatrixProductState.copy", "stubs/qiskit.providers.aer.library.SetMatrixProductState.inverse", "stubs/qiskit.providers.aer.library.SetMatrixProductState.is_parameterized", "stubs/qiskit.providers.aer.library.SetMatrixProductState.qasm", "stubs/qiskit.providers.aer.library.SetMatrixProductState.repeat", "stubs/qiskit.providers.aer.library.SetMatrixProductState.reverse_ops", "stubs/qiskit.providers.aer.library.SetMatrixProductState.soft_compare", "stubs/qiskit.providers.aer.library.SetMatrixProductState.validate_parameter", "stubs/qiskit.providers.aer.library.SetStabilizer", "stubs/qiskit.providers.aer.library.SetStabilizer.add_decomposition", "stubs/qiskit.providers.aer.library.SetStabilizer.assemble", "stubs/qiskit.providers.aer.library.SetStabilizer.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetStabilizer.c_if", "stubs/qiskit.providers.aer.library.SetStabilizer.copy", "stubs/qiskit.providers.aer.library.SetStabilizer.inverse", "stubs/qiskit.providers.aer.library.SetStabilizer.is_parameterized", "stubs/qiskit.providers.aer.library.SetStabilizer.qasm", "stubs/qiskit.providers.aer.library.SetStabilizer.repeat", "stubs/qiskit.providers.aer.library.SetStabilizer.reverse_ops", "stubs/qiskit.providers.aer.library.SetStabilizer.soft_compare", "stubs/qiskit.providers.aer.library.SetStabilizer.validate_parameter", "stubs/qiskit.providers.aer.library.SetStatevector", "stubs/qiskit.providers.aer.library.SetStatevector.add_decomposition", "stubs/qiskit.providers.aer.library.SetStatevector.assemble", "stubs/qiskit.providers.aer.library.SetStatevector.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetStatevector.c_if", "stubs/qiskit.providers.aer.library.SetStatevector.copy", "stubs/qiskit.providers.aer.library.SetStatevector.inverse", "stubs/qiskit.providers.aer.library.SetStatevector.is_parameterized", "stubs/qiskit.providers.aer.library.SetStatevector.qasm", "stubs/qiskit.providers.aer.library.SetStatevector.repeat", "stubs/qiskit.providers.aer.library.SetStatevector.reverse_ops", "stubs/qiskit.providers.aer.library.SetStatevector.soft_compare", "stubs/qiskit.providers.aer.library.SetStatevector.validate_parameter", "stubs/qiskit.providers.aer.library.SetSuperOp", "stubs/qiskit.providers.aer.library.SetSuperOp.add_decomposition", "stubs/qiskit.providers.aer.library.SetSuperOp.assemble", "stubs/qiskit.providers.aer.library.SetSuperOp.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetSuperOp.c_if", "stubs/qiskit.providers.aer.library.SetSuperOp.copy", "stubs/qiskit.providers.aer.library.SetSuperOp.inverse", "stubs/qiskit.providers.aer.library.SetSuperOp.is_parameterized", "stubs/qiskit.providers.aer.library.SetSuperOp.qasm", "stubs/qiskit.providers.aer.library.SetSuperOp.repeat", "stubs/qiskit.providers.aer.library.SetSuperOp.reverse_ops", "stubs/qiskit.providers.aer.library.SetSuperOp.soft_compare", "stubs/qiskit.providers.aer.library.SetSuperOp.validate_parameter", "stubs/qiskit.providers.aer.library.SetUnitary", "stubs/qiskit.providers.aer.library.SetUnitary.add_decomposition", "stubs/qiskit.providers.aer.library.SetUnitary.assemble", "stubs/qiskit.providers.aer.library.SetUnitary.broadcast_arguments", "stubs/qiskit.providers.aer.library.SetUnitary.c_if", "stubs/qiskit.providers.aer.library.SetUnitary.copy", "stubs/qiskit.providers.aer.library.SetUnitary.inverse", "stubs/qiskit.providers.aer.library.SetUnitary.is_parameterized", "stubs/qiskit.providers.aer.library.SetUnitary.qasm", "stubs/qiskit.providers.aer.library.SetUnitary.repeat", "stubs/qiskit.providers.aer.library.SetUnitary.reverse_ops", "stubs/qiskit.providers.aer.library.SetUnitary.soft_compare", "stubs/qiskit.providers.aer.library.SetUnitary.validate_parameter", "stubs/qiskit.providers.aer.library.save_amplitudes", "stubs/qiskit.providers.aer.library.save_amplitudes_squared", "stubs/qiskit.providers.aer.library.save_clifford", "stubs/qiskit.providers.aer.library.save_density_matrix", "stubs/qiskit.providers.aer.library.save_expectation_value", "stubs/qiskit.providers.aer.library.save_expectation_value_variance", "stubs/qiskit.providers.aer.library.save_matrix_product_state", "stubs/qiskit.providers.aer.library.save_probabilities", "stubs/qiskit.providers.aer.library.save_probabilities_dict", "stubs/qiskit.providers.aer.library.save_stabilizer", "stubs/qiskit.providers.aer.library.save_state", "stubs/qiskit.providers.aer.library.save_statevector", "stubs/qiskit.providers.aer.library.save_statevector_dict", "stubs/qiskit.providers.aer.library.save_superop", "stubs/qiskit.providers.aer.library.save_unitary", "stubs/qiskit.providers.aer.library.set_density_matrix", "stubs/qiskit.providers.aer.library.set_matrix_product_state", "stubs/qiskit.providers.aer.library.set_stabilizer", "stubs/qiskit.providers.aer.library.set_statevector", "stubs/qiskit.providers.aer.library.set_superop", "stubs/qiskit.providers.aer.library.set_unitary", "stubs/qiskit.providers.aer.noise.LocalNoisePass", "stubs/qiskit.providers.aer.noise.LocalNoisePass.name", "stubs/qiskit.providers.aer.noise.LocalNoisePass.run", "stubs/qiskit.providers.aer.noise.NoiseModel", "stubs/qiskit.providers.aer.noise.NoiseModel.add_all_qubit_quantum_error", "stubs/qiskit.providers.aer.noise.NoiseModel.add_all_qubit_readout_error", "stubs/qiskit.providers.aer.noise.NoiseModel.add_basis_gates", "stubs/qiskit.providers.aer.noise.NoiseModel.add_nonlocal_quantum_error", "stubs/qiskit.providers.aer.noise.NoiseModel.add_quantum_error", "stubs/qiskit.providers.aer.noise.NoiseModel.add_readout_error", "stubs/qiskit.providers.aer.noise.NoiseModel.from_backend", "stubs/qiskit.providers.aer.noise.NoiseModel.from_dict", "stubs/qiskit.providers.aer.noise.NoiseModel.is_ideal", "stubs/qiskit.providers.aer.noise.NoiseModel.reset", "stubs/qiskit.providers.aer.noise.NoiseModel.to_dict", "stubs/qiskit.providers.aer.noise.QuantumError", "stubs/qiskit.providers.aer.noise.QuantumError.compose", "stubs/qiskit.providers.aer.noise.QuantumError.copy", "stubs/qiskit.providers.aer.noise.QuantumError.dot", "stubs/qiskit.providers.aer.noise.QuantumError.error_term", "stubs/qiskit.providers.aer.noise.QuantumError.expand", "stubs/qiskit.providers.aer.noise.QuantumError.ideal", "stubs/qiskit.providers.aer.noise.QuantumError.input_dims", "stubs/qiskit.providers.aer.noise.QuantumError.output_dims", "stubs/qiskit.providers.aer.noise.QuantumError.power", "stubs/qiskit.providers.aer.noise.QuantumError.reshape", "stubs/qiskit.providers.aer.noise.QuantumError.set_atol", "stubs/qiskit.providers.aer.noise.QuantumError.set_rtol", "stubs/qiskit.providers.aer.noise.QuantumError.tensor", "stubs/qiskit.providers.aer.noise.QuantumError.to_dict", "stubs/qiskit.providers.aer.noise.QuantumError.to_instruction", "stubs/qiskit.providers.aer.noise.QuantumError.to_quantumchannel", "stubs/qiskit.providers.aer.noise.ReadoutError", "stubs/qiskit.providers.aer.noise.ReadoutError.compose", "stubs/qiskit.providers.aer.noise.ReadoutError.copy", "stubs/qiskit.providers.aer.noise.ReadoutError.dot", "stubs/qiskit.providers.aer.noise.ReadoutError.expand", "stubs/qiskit.providers.aer.noise.ReadoutError.ideal", "stubs/qiskit.providers.aer.noise.ReadoutError.power", "stubs/qiskit.providers.aer.noise.ReadoutError.set_atol", "stubs/qiskit.providers.aer.noise.ReadoutError.set_rtol", "stubs/qiskit.providers.aer.noise.ReadoutError.tensor", "stubs/qiskit.providers.aer.noise.ReadoutError.to_dict", "stubs/qiskit.providers.aer.noise.ReadoutError.to_instruction", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass.name", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass.run", "stubs/qiskit.providers.aer.noise.amplitude_damping_error", "stubs/qiskit.providers.aer.noise.coherent_unitary_error", "stubs/qiskit.providers.aer.noise.depolarizing_error", "stubs/qiskit.providers.aer.noise.device.basic_device_gate_errors", "stubs/qiskit.providers.aer.noise.device.basic_device_readout_errors", "stubs/qiskit.providers.aer.noise.device.gate_error_values", "stubs/qiskit.providers.aer.noise.device.gate_length_values", "stubs/qiskit.providers.aer.noise.device.gate_param_values", "stubs/qiskit.providers.aer.noise.device.readout_error_values", "stubs/qiskit.providers.aer.noise.device.thermal_relaxation_values", "stubs/qiskit.providers.aer.noise.kraus_error", "stubs/qiskit.providers.aer.noise.mixed_unitary_error", "stubs/qiskit.providers.aer.noise.pauli_error", "stubs/qiskit.providers.aer.noise.phase_amplitude_damping_error", "stubs/qiskit.providers.aer.noise.phase_damping_error", "stubs/qiskit.providers.aer.noise.reset_error", "stubs/qiskit.providers.aer.noise.thermal_relaxation_error", "stubs/qiskit.providers.aer.pulse.PulseSystemModel", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.calculate_channel_frequencies", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.control_channel_index", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.from_backend", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.from_config", "stubs/qiskit.providers.aer.pulse.duffing_system_model", "stubs/qiskit.providers.aer.utils.NoiseTransformer", "stubs/qiskit.providers.aer.utils.NoiseTransformer.channel_matrix_representation", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_P", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_channel_operation", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_q", "stubs/qiskit.providers.aer.utils.NoiseTransformer.fidelity", "stubs/qiskit.providers.aer.utils.NoiseTransformer.flatten_matrix", "stubs/qiskit.providers.aer.utils.NoiseTransformer.generate_channel_matrices", "stubs/qiskit.providers.aer.utils.NoiseTransformer.generate_channel_quadratic_programming_matrices", "stubs/qiskit.providers.aer.utils.NoiseTransformer.get_const_matrix_from_channel", "stubs/qiskit.providers.aer.utils.NoiseTransformer.get_matrix_from_channel", "stubs/qiskit.providers.aer.utils.NoiseTransformer.operator_circuit", "stubs/qiskit.providers.aer.utils.NoiseTransformer.operator_matrix", "stubs/qiskit.providers.aer.utils.NoiseTransformer.prepare_channel_operator_list", "stubs/qiskit.providers.aer.utils.NoiseTransformer.prepare_honesty_constraint", "stubs/qiskit.providers.aer.utils.NoiseTransformer.solve_quadratic_program", "stubs/qiskit.providers.aer.utils.NoiseTransformer.transform_by_given_channel", "stubs/qiskit.providers.aer.utils.NoiseTransformer.transform_by_operator_list", "stubs/qiskit.providers.aer.utils.approximate_noise_model", "stubs/qiskit.providers.aer.utils.approximate_quantum_error", "stubs/qiskit.providers.aer.utils.insert_noise", "stubs/qiskit.providers.aer.utils.remap_noise_model", "stubs/qiskit.providers.aer.utils.transform_noise_model", "stubs/qiskit.providers.aer.utils.transpile_noise_model", "stubs/qiskit.providers.aer.utils.transpile_quantum_error", "stubs/qiskit.providers.basicaer.BasicAerError", "stubs/qiskit.providers.basicaer.BasicAerJob", "stubs/qiskit.providers.basicaer.BasicAerJob.backend", "stubs/qiskit.providers.basicaer.BasicAerJob.cancel", "stubs/qiskit.providers.basicaer.BasicAerJob.cancelled", "stubs/qiskit.providers.basicaer.BasicAerJob.done", "stubs/qiskit.providers.basicaer.BasicAerJob.in_final_state", "stubs/qiskit.providers.basicaer.BasicAerJob.job_id", "stubs/qiskit.providers.basicaer.BasicAerJob.result", "stubs/qiskit.providers.basicaer.BasicAerJob.running", "stubs/qiskit.providers.basicaer.BasicAerJob.status", "stubs/qiskit.providers.basicaer.BasicAerJob.submit", "stubs/qiskit.providers.basicaer.BasicAerJob.wait_for_final_state", "stubs/qiskit.providers.basicaer.BasicAerProvider", "stubs/qiskit.providers.basicaer.BasicAerProvider.backends", "stubs/qiskit.providers.basicaer.BasicAerProvider.get_backend", "stubs/qiskit.providers.basicaer.QasmSimulatorPy", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.configuration", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.name", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.properties", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.provider", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.run", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.run_experiment", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.set_options", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.status", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.configuration", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.name", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.properties", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.provider", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.run", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.run_experiment", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.set_options", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.status", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.configuration", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.name", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.properties", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.provider", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.run", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.run_experiment", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.set_options", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.status", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.configuration", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.defaults", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.name", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.properties", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.provider", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.run", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.set_options", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.status", "stubs/qiskit.providers.fake_provider.Fake1Q", "stubs/qiskit.providers.fake_provider.Fake1Q.configuration", "stubs/qiskit.providers.fake_provider.Fake1Q.defaults", "stubs/qiskit.providers.fake_provider.Fake1Q.name", "stubs/qiskit.providers.fake_provider.Fake1Q.properties", "stubs/qiskit.providers.fake_provider.Fake1Q.provider", "stubs/qiskit.providers.fake_provider.Fake1Q.run", "stubs/qiskit.providers.fake_provider.Fake1Q.set_options", "stubs/qiskit.providers.fake_provider.Fake1Q.status", "stubs/qiskit.providers.fake_provider.FakeAlmaden", "stubs/qiskit.providers.fake_provider.FakeAlmaden.configuration", "stubs/qiskit.providers.fake_provider.FakeAlmaden.defaults", "stubs/qiskit.providers.fake_provider.FakeAlmaden.name", "stubs/qiskit.providers.fake_provider.FakeAlmaden.properties", "stubs/qiskit.providers.fake_provider.FakeAlmaden.provider", "stubs/qiskit.providers.fake_provider.FakeAlmaden.run", "stubs/qiskit.providers.fake_provider.FakeAlmaden.set_options", "stubs/qiskit.providers.fake_provider.FakeAlmaden.status", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.run", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.set_options", "stubs/qiskit.providers.fake_provider.FakeArmonk", "stubs/qiskit.providers.fake_provider.FakeArmonk.configuration", "stubs/qiskit.providers.fake_provider.FakeArmonk.defaults", "stubs/qiskit.providers.fake_provider.FakeArmonk.name", "stubs/qiskit.providers.fake_provider.FakeArmonk.properties", "stubs/qiskit.providers.fake_provider.FakeArmonk.provider", "stubs/qiskit.providers.fake_provider.FakeArmonk.run", "stubs/qiskit.providers.fake_provider.FakeArmonk.set_options", "stubs/qiskit.providers.fake_provider.FakeArmonk.status", "stubs/qiskit.providers.fake_provider.FakeArmonkV2", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.run", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.set_options", "stubs/qiskit.providers.fake_provider.FakeAthens", "stubs/qiskit.providers.fake_provider.FakeAthens.configuration", "stubs/qiskit.providers.fake_provider.FakeAthens.defaults", "stubs/qiskit.providers.fake_provider.FakeAthens.name", "stubs/qiskit.providers.fake_provider.FakeAthens.properties", "stubs/qiskit.providers.fake_provider.FakeAthens.provider", "stubs/qiskit.providers.fake_provider.FakeAthens.run", "stubs/qiskit.providers.fake_provider.FakeAthens.set_options", "stubs/qiskit.providers.fake_provider.FakeAthens.status", "stubs/qiskit.providers.fake_provider.FakeAthensV2", "stubs/qiskit.providers.fake_provider.FakeAthensV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeAthensV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeAthensV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeAthensV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeAthensV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeAthensV2.run", "stubs/qiskit.providers.fake_provider.FakeAthensV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.run", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBackendV2", "stubs/qiskit.providers.fake_provider.FakeBackendV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBackendV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBackendV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBackendV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBackendV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBackendV2.run", "stubs/qiskit.providers.fake_provider.FakeBackendV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBelem", "stubs/qiskit.providers.fake_provider.FakeBelem.configuration", "stubs/qiskit.providers.fake_provider.FakeBelem.defaults", "stubs/qiskit.providers.fake_provider.FakeBelem.name", "stubs/qiskit.providers.fake_provider.FakeBelem.properties", "stubs/qiskit.providers.fake_provider.FakeBelem.provider", "stubs/qiskit.providers.fake_provider.FakeBelem.run", "stubs/qiskit.providers.fake_provider.FakeBelem.set_options", "stubs/qiskit.providers.fake_provider.FakeBelem.status", "stubs/qiskit.providers.fake_provider.FakeBelemV2", "stubs/qiskit.providers.fake_provider.FakeBelemV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBelemV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBelemV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBelemV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBelemV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBelemV2.run", "stubs/qiskit.providers.fake_provider.FakeBelemV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBoeblingen", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.configuration", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.defaults", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.name", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.properties", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.provider", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.run", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.set_options", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.status", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.run", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBogota", "stubs/qiskit.providers.fake_provider.FakeBogota.configuration", "stubs/qiskit.providers.fake_provider.FakeBogota.defaults", "stubs/qiskit.providers.fake_provider.FakeBogota.name", "stubs/qiskit.providers.fake_provider.FakeBogota.properties", "stubs/qiskit.providers.fake_provider.FakeBogota.provider", "stubs/qiskit.providers.fake_provider.FakeBogota.run", "stubs/qiskit.providers.fake_provider.FakeBogota.set_options", "stubs/qiskit.providers.fake_provider.FakeBogota.status", "stubs/qiskit.providers.fake_provider.FakeBogotaV2", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.run", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBrooklyn", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.configuration", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.defaults", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.name", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.properties", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.provider", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.run", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.set_options", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.status", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.run", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.set_options", "stubs/qiskit.providers.fake_provider.FakeBurlington", "stubs/qiskit.providers.fake_provider.FakeBurlington.configuration", "stubs/qiskit.providers.fake_provider.FakeBurlington.name", "stubs/qiskit.providers.fake_provider.FakeBurlington.properties", "stubs/qiskit.providers.fake_provider.FakeBurlington.provider", "stubs/qiskit.providers.fake_provider.FakeBurlington.run", "stubs/qiskit.providers.fake_provider.FakeBurlington.set_options", "stubs/qiskit.providers.fake_provider.FakeBurlington.status", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.run", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.set_options", "stubs/qiskit.providers.fake_provider.FakeCairo", "stubs/qiskit.providers.fake_provider.FakeCairo.configuration", "stubs/qiskit.providers.fake_provider.FakeCairo.defaults", "stubs/qiskit.providers.fake_provider.FakeCairo.name", "stubs/qiskit.providers.fake_provider.FakeCairo.properties", "stubs/qiskit.providers.fake_provider.FakeCairo.provider", "stubs/qiskit.providers.fake_provider.FakeCairo.run", "stubs/qiskit.providers.fake_provider.FakeCairo.set_options", "stubs/qiskit.providers.fake_provider.FakeCairo.status", "stubs/qiskit.providers.fake_provider.FakeCairoV2", "stubs/qiskit.providers.fake_provider.FakeCairoV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeCairoV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeCairoV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeCairoV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeCairoV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeCairoV2.run", "stubs/qiskit.providers.fake_provider.FakeCairoV2.set_options", "stubs/qiskit.providers.fake_provider.FakeCambridge", "stubs/qiskit.providers.fake_provider.FakeCambridge.configuration", "stubs/qiskit.providers.fake_provider.FakeCambridge.name", "stubs/qiskit.providers.fake_provider.FakeCambridge.properties", "stubs/qiskit.providers.fake_provider.FakeCambridge.provider", "stubs/qiskit.providers.fake_provider.FakeCambridge.run", "stubs/qiskit.providers.fake_provider.FakeCambridge.set_options", "stubs/qiskit.providers.fake_provider.FakeCambridge.status", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.run", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.set_options", "stubs/qiskit.providers.fake_provider.FakeCasablanca", "stubs/qiskit.providers.fake_provider.FakeCasablanca.configuration", "stubs/qiskit.providers.fake_provider.FakeCasablanca.defaults", "stubs/qiskit.providers.fake_provider.FakeCasablanca.name", "stubs/qiskit.providers.fake_provider.FakeCasablanca.properties", "stubs/qiskit.providers.fake_provider.FakeCasablanca.provider", "stubs/qiskit.providers.fake_provider.FakeCasablanca.run", "stubs/qiskit.providers.fake_provider.FakeCasablanca.set_options", "stubs/qiskit.providers.fake_provider.FakeCasablanca.status", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.run", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeEssex", "stubs/qiskit.providers.fake_provider.FakeEssex.configuration", "stubs/qiskit.providers.fake_provider.FakeEssex.name", "stubs/qiskit.providers.fake_provider.FakeEssex.properties", "stubs/qiskit.providers.fake_provider.FakeEssex.provider", "stubs/qiskit.providers.fake_provider.FakeEssex.run", "stubs/qiskit.providers.fake_provider.FakeEssex.set_options", "stubs/qiskit.providers.fake_provider.FakeEssex.status", "stubs/qiskit.providers.fake_provider.FakeEssexV2", "stubs/qiskit.providers.fake_provider.FakeEssexV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeEssexV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeEssexV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeEssexV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeEssexV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeEssexV2.run", "stubs/qiskit.providers.fake_provider.FakeEssexV2.set_options", "stubs/qiskit.providers.fake_provider.FakeGuadalupe", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.configuration", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.defaults", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.name", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.properties", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.provider", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.run", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.set_options", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.status", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.run", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.set_options", "stubs/qiskit.providers.fake_provider.FakeHanoi", "stubs/qiskit.providers.fake_provider.FakeHanoi.configuration", "stubs/qiskit.providers.fake_provider.FakeHanoi.defaults", "stubs/qiskit.providers.fake_provider.FakeHanoi.name", "stubs/qiskit.providers.fake_provider.FakeHanoi.properties", "stubs/qiskit.providers.fake_provider.FakeHanoi.provider", "stubs/qiskit.providers.fake_provider.FakeHanoi.run", "stubs/qiskit.providers.fake_provider.FakeHanoi.set_options", "stubs/qiskit.providers.fake_provider.FakeHanoi.status", "stubs/qiskit.providers.fake_provider.FakeHanoiV2", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.run", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.set_options", "stubs/qiskit.providers.fake_provider.FakeJakarta", "stubs/qiskit.providers.fake_provider.FakeJakarta.configuration", "stubs/qiskit.providers.fake_provider.FakeJakarta.defaults", "stubs/qiskit.providers.fake_provider.FakeJakarta.name", "stubs/qiskit.providers.fake_provider.FakeJakarta.properties", "stubs/qiskit.providers.fake_provider.FakeJakarta.provider", "stubs/qiskit.providers.fake_provider.FakeJakarta.run", "stubs/qiskit.providers.fake_provider.FakeJakarta.set_options", "stubs/qiskit.providers.fake_provider.FakeJakarta.status", "stubs/qiskit.providers.fake_provider.FakeJakartaV2", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.run", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeJohannesburg", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.configuration", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.defaults", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.name", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.properties", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.provider", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.run", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.set_options", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.status", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.run", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.set_options", "stubs/qiskit.providers.fake_provider.FakeKolkata", "stubs/qiskit.providers.fake_provider.FakeKolkata.configuration", "stubs/qiskit.providers.fake_provider.FakeKolkata.defaults", "stubs/qiskit.providers.fake_provider.FakeKolkata.name", "stubs/qiskit.providers.fake_provider.FakeKolkata.properties", "stubs/qiskit.providers.fake_provider.FakeKolkata.provider", "stubs/qiskit.providers.fake_provider.FakeKolkata.run", "stubs/qiskit.providers.fake_provider.FakeKolkata.set_options", "stubs/qiskit.providers.fake_provider.FakeKolkata.status", "stubs/qiskit.providers.fake_provider.FakeKolkataV2", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.run", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.set_options", "stubs/qiskit.providers.fake_provider.FakeLagos", "stubs/qiskit.providers.fake_provider.FakeLagos.configuration", "stubs/qiskit.providers.fake_provider.FakeLagos.defaults", "stubs/qiskit.providers.fake_provider.FakeLagos.name", "stubs/qiskit.providers.fake_provider.FakeLagos.properties", "stubs/qiskit.providers.fake_provider.FakeLagos.provider", "stubs/qiskit.providers.fake_provider.FakeLagos.run", "stubs/qiskit.providers.fake_provider.FakeLagos.set_options", "stubs/qiskit.providers.fake_provider.FakeLagos.status", "stubs/qiskit.providers.fake_provider.FakeLagosV2", "stubs/qiskit.providers.fake_provider.FakeLagosV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeLagosV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeLagosV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeLagosV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeLagosV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeLagosV2.run", "stubs/qiskit.providers.fake_provider.FakeLagosV2.set_options", "stubs/qiskit.providers.fake_provider.FakeLima", "stubs/qiskit.providers.fake_provider.FakeLima.configuration", "stubs/qiskit.providers.fake_provider.FakeLima.defaults", "stubs/qiskit.providers.fake_provider.FakeLima.name", "stubs/qiskit.providers.fake_provider.FakeLima.properties", "stubs/qiskit.providers.fake_provider.FakeLima.provider", "stubs/qiskit.providers.fake_provider.FakeLima.run", "stubs/qiskit.providers.fake_provider.FakeLima.set_options", "stubs/qiskit.providers.fake_provider.FakeLima.status", "stubs/qiskit.providers.fake_provider.FakeLimaV2", "stubs/qiskit.providers.fake_provider.FakeLimaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeLimaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeLimaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeLimaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeLimaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeLimaV2.run", "stubs/qiskit.providers.fake_provider.FakeLimaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeLondon", "stubs/qiskit.providers.fake_provider.FakeLondon.configuration", "stubs/qiskit.providers.fake_provider.FakeLondon.name", "stubs/qiskit.providers.fake_provider.FakeLondon.properties", "stubs/qiskit.providers.fake_provider.FakeLondon.provider", "stubs/qiskit.providers.fake_provider.FakeLondon.run", "stubs/qiskit.providers.fake_provider.FakeLondon.set_options", "stubs/qiskit.providers.fake_provider.FakeLondon.status", "stubs/qiskit.providers.fake_provider.FakeLondonV2", "stubs/qiskit.providers.fake_provider.FakeLondonV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeLondonV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeLondonV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeLondonV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeLondonV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeLondonV2.run", "stubs/qiskit.providers.fake_provider.FakeLondonV2.set_options", "stubs/qiskit.providers.fake_provider.FakeManhattan", "stubs/qiskit.providers.fake_provider.FakeManhattan.configuration", "stubs/qiskit.providers.fake_provider.FakeManhattan.defaults", "stubs/qiskit.providers.fake_provider.FakeManhattan.name", "stubs/qiskit.providers.fake_provider.FakeManhattan.properties", "stubs/qiskit.providers.fake_provider.FakeManhattan.provider", "stubs/qiskit.providers.fake_provider.FakeManhattan.run", "stubs/qiskit.providers.fake_provider.FakeManhattan.set_options", "stubs/qiskit.providers.fake_provider.FakeManhattan.status", "stubs/qiskit.providers.fake_provider.FakeManhattanV2", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.run", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.set_options", "stubs/qiskit.providers.fake_provider.FakeManila", "stubs/qiskit.providers.fake_provider.FakeManila.configuration", "stubs/qiskit.providers.fake_provider.FakeManila.defaults", "stubs/qiskit.providers.fake_provider.FakeManila.name", "stubs/qiskit.providers.fake_provider.FakeManila.properties", "stubs/qiskit.providers.fake_provider.FakeManila.provider", "stubs/qiskit.providers.fake_provider.FakeManila.run", "stubs/qiskit.providers.fake_provider.FakeManila.set_options", "stubs/qiskit.providers.fake_provider.FakeManila.status", "stubs/qiskit.providers.fake_provider.FakeManilaV2", "stubs/qiskit.providers.fake_provider.FakeManilaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeManilaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeManilaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeManilaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeManilaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeManilaV2.run", "stubs/qiskit.providers.fake_provider.FakeManilaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeMelbourne", "stubs/qiskit.providers.fake_provider.FakeMelbourne.configuration", "stubs/qiskit.providers.fake_provider.FakeMelbourne.name", "stubs/qiskit.providers.fake_provider.FakeMelbourne.properties", "stubs/qiskit.providers.fake_provider.FakeMelbourne.provider", "stubs/qiskit.providers.fake_provider.FakeMelbourne.run", "stubs/qiskit.providers.fake_provider.FakeMelbourne.set_options", "stubs/qiskit.providers.fake_provider.FakeMelbourne.status", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.run", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.set_options", "stubs/qiskit.providers.fake_provider.FakeMontreal", "stubs/qiskit.providers.fake_provider.FakeMontreal.configuration", "stubs/qiskit.providers.fake_provider.FakeMontreal.defaults", "stubs/qiskit.providers.fake_provider.FakeMontreal.name", "stubs/qiskit.providers.fake_provider.FakeMontreal.properties", "stubs/qiskit.providers.fake_provider.FakeMontreal.provider", "stubs/qiskit.providers.fake_provider.FakeMontreal.run", "stubs/qiskit.providers.fake_provider.FakeMontreal.set_options", "stubs/qiskit.providers.fake_provider.FakeMontreal.status", "stubs/qiskit.providers.fake_provider.FakeMontrealV2", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.run", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.set_options", "stubs/qiskit.providers.fake_provider.FakeMumbai", "stubs/qiskit.providers.fake_provider.FakeMumbai.configuration", "stubs/qiskit.providers.fake_provider.FakeMumbai.defaults", "stubs/qiskit.providers.fake_provider.FakeMumbai.name", "stubs/qiskit.providers.fake_provider.FakeMumbai.properties", "stubs/qiskit.providers.fake_provider.FakeMumbai.provider", "stubs/qiskit.providers.fake_provider.FakeMumbai.run", "stubs/qiskit.providers.fake_provider.FakeMumbai.set_options", "stubs/qiskit.providers.fake_provider.FakeMumbai.status", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.control_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.drive_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.measure_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.run", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.set_options", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.run", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.set_options", "stubs/qiskit.providers.fake_provider.FakeNairobi", "stubs/qiskit.providers.fake_provider.FakeNairobi.configuration", "stubs/qiskit.providers.fake_provider.FakeNairobi.defaults", "stubs/qiskit.providers.fake_provider.FakeNairobi.name", "stubs/qiskit.providers.fake_provider.FakeNairobi.properties", "stubs/qiskit.providers.fake_provider.FakeNairobi.provider", "stubs/qiskit.providers.fake_provider.FakeNairobi.run", "stubs/qiskit.providers.fake_provider.FakeNairobi.set_options", "stubs/qiskit.providers.fake_provider.FakeNairobi.status", "stubs/qiskit.providers.fake_provider.FakeNairobiV2", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.run", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.set_options", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.configuration", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.defaults", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.name", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.properties", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.provider", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.run", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.set_options", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.status", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.configuration", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.defaults", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.name", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.properties", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.provider", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.run", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.set_options", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.status", "stubs/qiskit.providers.fake_provider.FakeOurense", "stubs/qiskit.providers.fake_provider.FakeOurense.configuration", "stubs/qiskit.providers.fake_provider.FakeOurense.name", "stubs/qiskit.providers.fake_provider.FakeOurense.properties", "stubs/qiskit.providers.fake_provider.FakeOurense.provider", "stubs/qiskit.providers.fake_provider.FakeOurense.run", "stubs/qiskit.providers.fake_provider.FakeOurense.set_options", "stubs/qiskit.providers.fake_provider.FakeOurense.status", "stubs/qiskit.providers.fake_provider.FakeOurenseV2", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.run", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.set_options", "stubs/qiskit.providers.fake_provider.FakeParis", "stubs/qiskit.providers.fake_provider.FakeParis.configuration", "stubs/qiskit.providers.fake_provider.FakeParis.defaults", "stubs/qiskit.providers.fake_provider.FakeParis.name", "stubs/qiskit.providers.fake_provider.FakeParis.properties", "stubs/qiskit.providers.fake_provider.FakeParis.provider", "stubs/qiskit.providers.fake_provider.FakeParis.run", "stubs/qiskit.providers.fake_provider.FakeParis.set_options", "stubs/qiskit.providers.fake_provider.FakeParis.status", "stubs/qiskit.providers.fake_provider.FakeParisV2", "stubs/qiskit.providers.fake_provider.FakeParisV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeParisV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeParisV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeParisV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeParisV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeParisV2.run", "stubs/qiskit.providers.fake_provider.FakeParisV2.set_options", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.configuration", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.name", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.properties", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.provider", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.run", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.set_options", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.status", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.control_channel", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.run", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.set_options", "stubs/qiskit.providers.fake_provider.FakeProvider", "stubs/qiskit.providers.fake_provider.FakeProvider.backends", "stubs/qiskit.providers.fake_provider.FakeProvider.get_backend", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2.backends", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2.get_backend", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.configuration", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.name", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.properties", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.provider", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.run", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.set_options", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.status", "stubs/qiskit.providers.fake_provider.FakeQuito", "stubs/qiskit.providers.fake_provider.FakeQuito.configuration", "stubs/qiskit.providers.fake_provider.FakeQuito.defaults", "stubs/qiskit.providers.fake_provider.FakeQuito.name", "stubs/qiskit.providers.fake_provider.FakeQuito.properties", "stubs/qiskit.providers.fake_provider.FakeQuito.provider", "stubs/qiskit.providers.fake_provider.FakeQuito.run", "stubs/qiskit.providers.fake_provider.FakeQuito.set_options", "stubs/qiskit.providers.fake_provider.FakeQuito.status", "stubs/qiskit.providers.fake_provider.FakeQuitoV2", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.run", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.set_options", "stubs/qiskit.providers.fake_provider.FakeRochester", "stubs/qiskit.providers.fake_provider.FakeRochester.configuration", "stubs/qiskit.providers.fake_provider.FakeRochester.name", "stubs/qiskit.providers.fake_provider.FakeRochester.properties", "stubs/qiskit.providers.fake_provider.FakeRochester.provider", "stubs/qiskit.providers.fake_provider.FakeRochester.run", "stubs/qiskit.providers.fake_provider.FakeRochester.set_options", "stubs/qiskit.providers.fake_provider.FakeRochester.status", "stubs/qiskit.providers.fake_provider.FakeRochesterV2", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.run", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.set_options", "stubs/qiskit.providers.fake_provider.FakeRome", "stubs/qiskit.providers.fake_provider.FakeRome.configuration", "stubs/qiskit.providers.fake_provider.FakeRome.defaults", "stubs/qiskit.providers.fake_provider.FakeRome.name", "stubs/qiskit.providers.fake_provider.FakeRome.properties", "stubs/qiskit.providers.fake_provider.FakeRome.provider", "stubs/qiskit.providers.fake_provider.FakeRome.run", "stubs/qiskit.providers.fake_provider.FakeRome.set_options", "stubs/qiskit.providers.fake_provider.FakeRome.status", "stubs/qiskit.providers.fake_provider.FakeRomeV2", "stubs/qiskit.providers.fake_provider.FakeRomeV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeRomeV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeRomeV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeRomeV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeRomeV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeRomeV2.run", "stubs/qiskit.providers.fake_provider.FakeRomeV2.set_options", "stubs/qiskit.providers.fake_provider.FakeRueschlikon", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.configuration", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.name", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.properties", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.provider", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.run", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.set_options", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.status", "stubs/qiskit.providers.fake_provider.FakeSantiago", "stubs/qiskit.providers.fake_provider.FakeSantiago.configuration", "stubs/qiskit.providers.fake_provider.FakeSantiago.defaults", "stubs/qiskit.providers.fake_provider.FakeSantiago.name", "stubs/qiskit.providers.fake_provider.FakeSantiago.properties", "stubs/qiskit.providers.fake_provider.FakeSantiago.provider", "stubs/qiskit.providers.fake_provider.FakeSantiago.run", "stubs/qiskit.providers.fake_provider.FakeSantiago.set_options", "stubs/qiskit.providers.fake_provider.FakeSantiago.status", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.run", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.set_options", "stubs/qiskit.providers.fake_provider.FakeSingapore", "stubs/qiskit.providers.fake_provider.FakeSingapore.configuration", "stubs/qiskit.providers.fake_provider.FakeSingapore.defaults", "stubs/qiskit.providers.fake_provider.FakeSingapore.name", "stubs/qiskit.providers.fake_provider.FakeSingapore.properties", "stubs/qiskit.providers.fake_provider.FakeSingapore.provider", "stubs/qiskit.providers.fake_provider.FakeSingapore.run", "stubs/qiskit.providers.fake_provider.FakeSingapore.set_options", "stubs/qiskit.providers.fake_provider.FakeSingapore.status", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.run", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.set_options", "stubs/qiskit.providers.fake_provider.FakeSydney", "stubs/qiskit.providers.fake_provider.FakeSydney.configuration", "stubs/qiskit.providers.fake_provider.FakeSydney.defaults", "stubs/qiskit.providers.fake_provider.FakeSydney.name", "stubs/qiskit.providers.fake_provider.FakeSydney.properties", "stubs/qiskit.providers.fake_provider.FakeSydney.provider", "stubs/qiskit.providers.fake_provider.FakeSydney.run", "stubs/qiskit.providers.fake_provider.FakeSydney.set_options", "stubs/qiskit.providers.fake_provider.FakeSydney.status", "stubs/qiskit.providers.fake_provider.FakeSydneyV2", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.run", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.set_options", "stubs/qiskit.providers.fake_provider.FakeTenerife", "stubs/qiskit.providers.fake_provider.FakeTenerife.configuration", "stubs/qiskit.providers.fake_provider.FakeTenerife.name", "stubs/qiskit.providers.fake_provider.FakeTenerife.properties", "stubs/qiskit.providers.fake_provider.FakeTenerife.provider", "stubs/qiskit.providers.fake_provider.FakeTenerife.run", "stubs/qiskit.providers.fake_provider.FakeTenerife.set_options", "stubs/qiskit.providers.fake_provider.FakeTenerife.status", "stubs/qiskit.providers.fake_provider.FakeTokyo", "stubs/qiskit.providers.fake_provider.FakeTokyo.configuration", "stubs/qiskit.providers.fake_provider.FakeTokyo.name", "stubs/qiskit.providers.fake_provider.FakeTokyo.properties", "stubs/qiskit.providers.fake_provider.FakeTokyo.provider", "stubs/qiskit.providers.fake_provider.FakeTokyo.run", "stubs/qiskit.providers.fake_provider.FakeTokyo.set_options", "stubs/qiskit.providers.fake_provider.FakeTokyo.status", "stubs/qiskit.providers.fake_provider.FakeToronto", "stubs/qiskit.providers.fake_provider.FakeToronto.configuration", "stubs/qiskit.providers.fake_provider.FakeToronto.defaults", "stubs/qiskit.providers.fake_provider.FakeToronto.name", "stubs/qiskit.providers.fake_provider.FakeToronto.properties", "stubs/qiskit.providers.fake_provider.FakeToronto.provider", "stubs/qiskit.providers.fake_provider.FakeToronto.run", "stubs/qiskit.providers.fake_provider.FakeToronto.set_options", "stubs/qiskit.providers.fake_provider.FakeToronto.status", "stubs/qiskit.providers.fake_provider.FakeTorontoV2", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.run", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.set_options", "stubs/qiskit.providers.fake_provider.FakeValencia", "stubs/qiskit.providers.fake_provider.FakeValencia.configuration", "stubs/qiskit.providers.fake_provider.FakeValencia.defaults", "stubs/qiskit.providers.fake_provider.FakeValencia.name", "stubs/qiskit.providers.fake_provider.FakeValencia.properties", "stubs/qiskit.providers.fake_provider.FakeValencia.provider", "stubs/qiskit.providers.fake_provider.FakeValencia.run", "stubs/qiskit.providers.fake_provider.FakeValencia.set_options", "stubs/qiskit.providers.fake_provider.FakeValencia.status", "stubs/qiskit.providers.fake_provider.FakeValenciaV2", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.run", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.set_options", "stubs/qiskit.providers.fake_provider.FakeVigo", "stubs/qiskit.providers.fake_provider.FakeVigo.configuration", "stubs/qiskit.providers.fake_provider.FakeVigo.name", "stubs/qiskit.providers.fake_provider.FakeVigo.properties", "stubs/qiskit.providers.fake_provider.FakeVigo.provider", "stubs/qiskit.providers.fake_provider.FakeVigo.run", "stubs/qiskit.providers.fake_provider.FakeVigo.set_options", "stubs/qiskit.providers.fake_provider.FakeVigo.status", "stubs/qiskit.providers.fake_provider.FakeVigoV2", "stubs/qiskit.providers.fake_provider.FakeVigoV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeVigoV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeVigoV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeVigoV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeVigoV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeVigoV2.run", "stubs/qiskit.providers.fake_provider.FakeVigoV2.set_options", "stubs/qiskit.providers.fake_provider.FakeWashington", "stubs/qiskit.providers.fake_provider.FakeWashington.configuration", "stubs/qiskit.providers.fake_provider.FakeWashington.defaults", "stubs/qiskit.providers.fake_provider.FakeWashington.name", "stubs/qiskit.providers.fake_provider.FakeWashington.properties", "stubs/qiskit.providers.fake_provider.FakeWashington.provider", "stubs/qiskit.providers.fake_provider.FakeWashington.run", "stubs/qiskit.providers.fake_provider.FakeWashington.set_options", "stubs/qiskit.providers.fake_provider.FakeWashington.status", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.run", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.set_options", "stubs/qiskit.providers.fake_provider.FakeYorktown", "stubs/qiskit.providers.fake_provider.FakeYorktown.configuration", "stubs/qiskit.providers.fake_provider.FakeYorktown.name", "stubs/qiskit.providers.fake_provider.FakeYorktown.properties", "stubs/qiskit.providers.fake_provider.FakeYorktown.provider", "stubs/qiskit.providers.fake_provider.FakeYorktown.run", "stubs/qiskit.providers.fake_provider.FakeYorktown.set_options", "stubs/qiskit.providers.fake_provider.FakeYorktown.status", "stubs/qiskit.providers.fake_provider.FakeYorktownV2", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.acquire_channel", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.control_channel", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.drive_channel", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.measure_channel", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.qubit_properties", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.run", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.set_options", "stubs/qiskit.providers.ibmq.AccountProvider", "stubs/qiskit.providers.ibmq.AccountProvider.backends", "stubs/qiskit.providers.ibmq.AccountProvider.get_backend", "stubs/qiskit.providers.ibmq.AccountProvider.has_service", "stubs/qiskit.providers.ibmq.AccountProvider.run_circuits", "stubs/qiskit.providers.ibmq.AccountProvider.service", "stubs/qiskit.providers.ibmq.AccountProvider.services", "stubs/qiskit.providers.ibmq.BackendJobLimit", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidFormat", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidToken", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidUrl", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsNotFound", "stubs/qiskit.providers.ibmq.IBMQAccountError", "stubs/qiskit.providers.ibmq.IBMQAccountMultipleCredentialsFound", "stubs/qiskit.providers.ibmq.IBMQBackend", "stubs/qiskit.providers.ibmq.IBMQBackend.active_jobs", "stubs/qiskit.providers.ibmq.IBMQBackend.configuration", "stubs/qiskit.providers.ibmq.IBMQBackend.defaults", "stubs/qiskit.providers.ibmq.IBMQBackend.job_limit", "stubs/qiskit.providers.ibmq.IBMQBackend.jobs", "stubs/qiskit.providers.ibmq.IBMQBackend.name", "stubs/qiskit.providers.ibmq.IBMQBackend.properties", "stubs/qiskit.providers.ibmq.IBMQBackend.provider", "stubs/qiskit.providers.ibmq.IBMQBackend.remaining_jobs_count", "stubs/qiskit.providers.ibmq.IBMQBackend.reservations", "stubs/qiskit.providers.ibmq.IBMQBackend.retrieve_job", "stubs/qiskit.providers.ibmq.IBMQBackend.run", "stubs/qiskit.providers.ibmq.IBMQBackend.set_options", "stubs/qiskit.providers.ibmq.IBMQBackend.status", "stubs/qiskit.providers.ibmq.IBMQBackendApiError", "stubs/qiskit.providers.ibmq.IBMQBackendApiProtocolError", "stubs/qiskit.providers.ibmq.IBMQBackendError", "stubs/qiskit.providers.ibmq.IBMQBackendService", "stubs/qiskit.providers.ibmq.IBMQBackendService.backends", "stubs/qiskit.providers.ibmq.IBMQBackendService.job_ids", "stubs/qiskit.providers.ibmq.IBMQBackendService.jobs", "stubs/qiskit.providers.ibmq.IBMQBackendService.my_reservations", "stubs/qiskit.providers.ibmq.IBMQBackendService.retrieve_job", "stubs/qiskit.providers.ibmq.IBMQBackendValueError", "stubs/qiskit.providers.ibmq.IBMQError", "stubs/qiskit.providers.ibmq.IBMQFactory", "stubs/qiskit.providers.ibmq.IBMQFactory.active_account", "stubs/qiskit.providers.ibmq.IBMQFactory.delete_account", "stubs/qiskit.providers.ibmq.IBMQFactory.disable_account", "stubs/qiskit.providers.ibmq.IBMQFactory.enable_account", "stubs/qiskit.providers.ibmq.IBMQFactory.get_provider", "stubs/qiskit.providers.ibmq.IBMQFactory.load_account", "stubs/qiskit.providers.ibmq.IBMQFactory.providers", "stubs/qiskit.providers.ibmq.IBMQFactory.save_account", "stubs/qiskit.providers.ibmq.IBMQFactory.stored_account", "stubs/qiskit.providers.ibmq.IBMQFactory.update_account", "stubs/qiskit.providers.ibmq.IBMQProviderError", "stubs/qiskit.providers.ibmq.RunnerResult", "stubs/qiskit.providers.ibmq.RunnerResult.data", "stubs/qiskit.providers.ibmq.RunnerResult.decode", "stubs/qiskit.providers.ibmq.RunnerResult.from_dict", "stubs/qiskit.providers.ibmq.RunnerResult.get_counts", "stubs/qiskit.providers.ibmq.RunnerResult.get_memory", "stubs/qiskit.providers.ibmq.RunnerResult.get_quasiprobabilities", "stubs/qiskit.providers.ibmq.RunnerResult.get_statevector", "stubs/qiskit.providers.ibmq.RunnerResult.get_unitary", "stubs/qiskit.providers.ibmq.RunnerResult.to_dict", "stubs/qiskit.providers.ibmq.credentials.Credentials", "stubs/qiskit.providers.ibmq.credentials.Credentials.connection_parameters", "stubs/qiskit.providers.ibmq.credentials.Credentials.is_ibmq", "stubs/qiskit.providers.ibmq.credentials.Credentials.unique_id", "stubs/qiskit.providers.ibmq.credentials.CredentialsError", "stubs/qiskit.providers.ibmq.credentials.CredentialsNotFoundError", "stubs/qiskit.providers.ibmq.credentials.InvalidCredentialsFormatError", "stubs/qiskit.providers.ibmq.experiment.DeviceComponent", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentEntryExists", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentEntryNotFound", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentError", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_result", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_results", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.backends", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_analysis_result", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_experiment", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_figure", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_analysis_result", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_experiment", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_figure", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.device_components", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.experiment", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.experiments", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.figure", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.save_preferences", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_analysis_result", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_experiment", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_figure", "stubs/qiskit.providers.ibmq.experiment.ResultQuality", "stubs/qiskit.providers.ibmq.job.IBMQJob", "stubs/qiskit.providers.ibmq.job.IBMQJob.backend", "stubs/qiskit.providers.ibmq.job.IBMQJob.backend_options", "stubs/qiskit.providers.ibmq.job.IBMQJob.cancel", "stubs/qiskit.providers.ibmq.job.IBMQJob.cancelled", "stubs/qiskit.providers.ibmq.job.IBMQJob.circuits", "stubs/qiskit.providers.ibmq.job.IBMQJob.creation_date", "stubs/qiskit.providers.ibmq.job.IBMQJob.done", "stubs/qiskit.providers.ibmq.job.IBMQJob.error_message", "stubs/qiskit.providers.ibmq.job.IBMQJob.header", "stubs/qiskit.providers.ibmq.job.IBMQJob.in_final_state", "stubs/qiskit.providers.ibmq.job.IBMQJob.job_id", "stubs/qiskit.providers.ibmq.job.IBMQJob.name", "stubs/qiskit.providers.ibmq.job.IBMQJob.properties", "stubs/qiskit.providers.ibmq.job.IBMQJob.qobj", "stubs/qiskit.providers.ibmq.job.IBMQJob.queue_info", "stubs/qiskit.providers.ibmq.job.IBMQJob.queue_position", "stubs/qiskit.providers.ibmq.job.IBMQJob.refresh", "stubs/qiskit.providers.ibmq.job.IBMQJob.result", "stubs/qiskit.providers.ibmq.job.IBMQJob.running", "stubs/qiskit.providers.ibmq.job.IBMQJob.scheduling_mode", "stubs/qiskit.providers.ibmq.job.IBMQJob.share_level", "stubs/qiskit.providers.ibmq.job.IBMQJob.status", "stubs/qiskit.providers.ibmq.job.IBMQJob.submit", "stubs/qiskit.providers.ibmq.job.IBMQJob.tags", "stubs/qiskit.providers.ibmq.job.IBMQJob.time_per_step", "stubs/qiskit.providers.ibmq.job.IBMQJob.update_name", "stubs/qiskit.providers.ibmq.job.IBMQJob.update_tags", "stubs/qiskit.providers.ibmq.job.IBMQJob.wait_for_final_state", "stubs/qiskit.providers.ibmq.job.IBMQJobApiError", "stubs/qiskit.providers.ibmq.job.IBMQJobError", "stubs/qiskit.providers.ibmq.job.IBMQJobFailureError", "stubs/qiskit.providers.ibmq.job.IBMQJobInvalidStateError", "stubs/qiskit.providers.ibmq.job.IBMQJobTimeoutError", "stubs/qiskit.providers.ibmq.job.QueueInfo", "stubs/qiskit.providers.ibmq.job.QueueInfo.format", "stubs/qiskit.providers.ibmq.job.job_monitor", "stubs/qiskit.providers.ibmq.least_busy", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.job_sets", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.report", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.retrieve_job_set", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.run", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerError", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerInvalidStateError", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerJobNotFound", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerTimeoutError", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerUnknownJobSet", "stubs/qiskit.providers.ibmq.managed.IBMQManagedResultDataNotAvailable", "stubs/qiskit.providers.ibmq.managed.ManagedJob", "stubs/qiskit.providers.ibmq.managed.ManagedJob.cancel", "stubs/qiskit.providers.ibmq.managed.ManagedJob.error_message", "stubs/qiskit.providers.ibmq.managed.ManagedJob.qobj", "stubs/qiskit.providers.ibmq.managed.ManagedJob.result", "stubs/qiskit.providers.ibmq.managed.ManagedJob.status", "stubs/qiskit.providers.ibmq.managed.ManagedJob.submit", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.cancel", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.error_messages", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.job", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.job_set_id", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.jobs", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.managed_jobs", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.name", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.qobjs", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.report", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.results", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.retrieve_jobs", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.run", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.statuses", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.tags", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.update_name", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.update_tags", "stubs/qiskit.providers.ibmq.managed.ManagedResults", "stubs/qiskit.providers.ibmq.managed.ManagedResults.combine_results", "stubs/qiskit.providers.ibmq.managed.ManagedResults.data", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_counts", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_memory", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_statevector", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_unitary", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_job", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_program", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.job", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.jobs", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.logout", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.pprint_programs", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.program", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.programs", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.run", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.set_program_visibility", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.update_program", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.upload_program", "stubs/qiskit.providers.ibmq.runtime.ParameterNamespace", "stubs/qiskit.providers.ibmq.runtime.ParameterNamespace.validate", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.configuration", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.name", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.properties", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.provider", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.run", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.set_options", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.status", "stubs/qiskit.providers.ibmq.runtime.ResultDecoder", "stubs/qiskit.providers.ibmq.runtime.ResultDecoder.decode", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.decode", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.object_hook", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.raw_decode", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.default", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.encode", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.iterencode", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.backend", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.cancel", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.cancel_result_streaming", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.error_message", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.job_id", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.logs", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.result", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.status", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.stream_results", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.wait_for_final_state", "stubs/qiskit.providers.ibmq.runtime.RuntimeOptions", "stubs/qiskit.providers.ibmq.runtime.RuntimeOptions.validate", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram.parameters", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram.to_dict", "stubs/qiskit.providers.ibmq.runtime.UserMessenger", "stubs/qiskit.providers.ibmq.runtime.UserMessenger.publish", "stubs/qiskit.providers.ibmq.utils.seconds_to_duration", "stubs/qiskit.providers.ibmq.utils.to_python_identifier", "stubs/qiskit.providers.ibmq.utils.update_qobj_config", "stubs/qiskit.providers.ibmq.utils.utc_to_local", "stubs/qiskit.providers.ibmq.utils.validate_job_tags", "stubs/qiskit.providers.models.BackendConfiguration", "stubs/qiskit.providers.models.BackendConfiguration.from_dict", "stubs/qiskit.providers.models.BackendConfiguration.to_dict", "stubs/qiskit.providers.models.BackendProperties", "stubs/qiskit.providers.models.BackendProperties.faulty_gates", "stubs/qiskit.providers.models.BackendProperties.faulty_qubits", "stubs/qiskit.providers.models.BackendProperties.frequency", "stubs/qiskit.providers.models.BackendProperties.from_dict", "stubs/qiskit.providers.models.BackendProperties.gate_error", "stubs/qiskit.providers.models.BackendProperties.gate_length", "stubs/qiskit.providers.models.BackendProperties.gate_property", "stubs/qiskit.providers.models.BackendProperties.is_gate_operational", "stubs/qiskit.providers.models.BackendProperties.is_qubit_operational", "stubs/qiskit.providers.models.BackendProperties.qubit_property", "stubs/qiskit.providers.models.BackendProperties.readout_error", "stubs/qiskit.providers.models.BackendProperties.readout_length", "stubs/qiskit.providers.models.BackendProperties.t1", "stubs/qiskit.providers.models.BackendProperties.t2", "stubs/qiskit.providers.models.BackendProperties.to_dict", "stubs/qiskit.providers.models.BackendStatus", "stubs/qiskit.providers.models.BackendStatus.from_dict", "stubs/qiskit.providers.models.BackendStatus.to_dict", "stubs/qiskit.providers.models.Command", "stubs/qiskit.providers.models.Command.from_dict", "stubs/qiskit.providers.models.Command.to_dict", "stubs/qiskit.providers.models.GateConfig", "stubs/qiskit.providers.models.GateConfig.from_dict", "stubs/qiskit.providers.models.GateConfig.to_dict", "stubs/qiskit.providers.models.JobStatus", "stubs/qiskit.providers.models.JobStatus.from_dict", "stubs/qiskit.providers.models.JobStatus.to_dict", "stubs/qiskit.providers.models.PulseBackendConfiguration", "stubs/qiskit.providers.models.PulseBackendConfiguration.acquire", "stubs/qiskit.providers.models.PulseBackendConfiguration.control", "stubs/qiskit.providers.models.PulseBackendConfiguration.describe", "stubs/qiskit.providers.models.PulseBackendConfiguration.drive", "stubs/qiskit.providers.models.PulseBackendConfiguration.from_dict", "stubs/qiskit.providers.models.PulseBackendConfiguration.get_channel_qubits", "stubs/qiskit.providers.models.PulseBackendConfiguration.get_qubit_channels", "stubs/qiskit.providers.models.PulseBackendConfiguration.measure", "stubs/qiskit.providers.models.PulseBackendConfiguration.to_dict", "stubs/qiskit.providers.models.PulseDefaults", "stubs/qiskit.providers.models.PulseDefaults.from_dict", "stubs/qiskit.providers.models.PulseDefaults.to_dict", "stubs/qiskit.providers.models.QasmBackendConfiguration", "stubs/qiskit.providers.models.QasmBackendConfiguration.from_dict", "stubs/qiskit.providers.models.QasmBackendConfiguration.to_dict", "stubs/qiskit.providers.models.UchannelLO", "stubs/qiskit.providers.models.UchannelLO.from_dict", "stubs/qiskit.providers.models.UchannelLO.to_dict", "stubs/qiskit.pulse.InstructionScheduleMap", "stubs/qiskit.pulse.InstructionScheduleMap.add", "stubs/qiskit.pulse.InstructionScheduleMap.assert_has", "stubs/qiskit.pulse.InstructionScheduleMap.get", "stubs/qiskit.pulse.InstructionScheduleMap.get_parameters", "stubs/qiskit.pulse.InstructionScheduleMap.has", "stubs/qiskit.pulse.InstructionScheduleMap.has_custom_gate", "stubs/qiskit.pulse.InstructionScheduleMap.pop", "stubs/qiskit.pulse.InstructionScheduleMap.qubit_instructions", "stubs/qiskit.pulse.InstructionScheduleMap.qubits_with_instruction", "stubs/qiskit.pulse.InstructionScheduleMap.remove", "stubs/qiskit.pulse.Schedule", "stubs/qiskit.pulse.Schedule.append", "stubs/qiskit.pulse.Schedule.assign_parameters", "stubs/qiskit.pulse.Schedule.ch_duration", "stubs/qiskit.pulse.Schedule.ch_start_time", "stubs/qiskit.pulse.Schedule.ch_stop_time", "stubs/qiskit.pulse.Schedule.draw", "stubs/qiskit.pulse.Schedule.exclude", "stubs/qiskit.pulse.Schedule.filter", "stubs/qiskit.pulse.Schedule.get_parameters", "stubs/qiskit.pulse.Schedule.initialize_from", "stubs/qiskit.pulse.Schedule.insert", "stubs/qiskit.pulse.Schedule.is_parameterized", "stubs/qiskit.pulse.Schedule.replace", "stubs/qiskit.pulse.Schedule.shift", "stubs/qiskit.pulse.ScheduleBlock", "stubs/qiskit.pulse.ScheduleBlock.append", "stubs/qiskit.pulse.ScheduleBlock.assign_parameters", "stubs/qiskit.pulse.ScheduleBlock.ch_duration", "stubs/qiskit.pulse.ScheduleBlock.draw", "stubs/qiskit.pulse.ScheduleBlock.exclude", "stubs/qiskit.pulse.ScheduleBlock.filter", "stubs/qiskit.pulse.ScheduleBlock.get_parameters", "stubs/qiskit.pulse.ScheduleBlock.initialize_from", "stubs/qiskit.pulse.ScheduleBlock.is_parameterized", "stubs/qiskit.pulse.ScheduleBlock.is_schedulable", "stubs/qiskit.pulse.ScheduleBlock.replace", "stubs/qiskit.pulse.builder.acquire", "stubs/qiskit.pulse.builder.acquire_channel", "stubs/qiskit.pulse.builder.active_backend", "stubs/qiskit.pulse.builder.active_circuit_scheduler_settings", "stubs/qiskit.pulse.builder.active_transpiler_settings", "stubs/qiskit.pulse.builder.align_equispaced", "stubs/qiskit.pulse.builder.align_func", "stubs/qiskit.pulse.builder.align_left", "stubs/qiskit.pulse.builder.align_right", "stubs/qiskit.pulse.builder.align_sequential", "stubs/qiskit.pulse.builder.barrier", "stubs/qiskit.pulse.builder.build", "stubs/qiskit.pulse.builder.call", "stubs/qiskit.pulse.builder.circuit_scheduler_settings", "stubs/qiskit.pulse.builder.control_channels", "stubs/qiskit.pulse.builder.cx", "stubs/qiskit.pulse.builder.delay", "stubs/qiskit.pulse.builder.delay_qubits", "stubs/qiskit.pulse.builder.drive_channel", "stubs/qiskit.pulse.builder.frequency_offset", "stubs/qiskit.pulse.builder.inline", "stubs/qiskit.pulse.builder.measure", "stubs/qiskit.pulse.builder.measure_all", "stubs/qiskit.pulse.builder.measure_channel", "stubs/qiskit.pulse.builder.num_qubits", "stubs/qiskit.pulse.builder.pad", "stubs/qiskit.pulse.builder.phase_offset", "stubs/qiskit.pulse.builder.play", "stubs/qiskit.pulse.builder.qubit_channels", "stubs/qiskit.pulse.builder.samples_to_seconds", "stubs/qiskit.pulse.builder.seconds_to_samples", "stubs/qiskit.pulse.builder.set_frequency", "stubs/qiskit.pulse.builder.set_phase", "stubs/qiskit.pulse.builder.shift_frequency", "stubs/qiskit.pulse.builder.shift_phase", "stubs/qiskit.pulse.builder.snapshot", "stubs/qiskit.pulse.builder.transpiler_settings", "stubs/qiskit.pulse.builder.u1", "stubs/qiskit.pulse.builder.u2", "stubs/qiskit.pulse.builder.u3", "stubs/qiskit.pulse.builder.x", "stubs/qiskit.pulse.channels.AcquireChannel", "stubs/qiskit.pulse.channels.AcquireChannel.is_parameterized", "stubs/qiskit.pulse.channels.ControlChannel", "stubs/qiskit.pulse.channels.ControlChannel.is_parameterized", "stubs/qiskit.pulse.channels.DriveChannel", "stubs/qiskit.pulse.channels.DriveChannel.is_parameterized", "stubs/qiskit.pulse.channels.MeasureChannel", "stubs/qiskit.pulse.channels.MeasureChannel.is_parameterized", "stubs/qiskit.pulse.channels.MemorySlot", "stubs/qiskit.pulse.channels.MemorySlot.is_parameterized", "stubs/qiskit.pulse.channels.RegisterSlot", "stubs/qiskit.pulse.channels.RegisterSlot.is_parameterized", "stubs/qiskit.pulse.channels.SnapshotChannel", "stubs/qiskit.pulse.channels.SnapshotChannel.is_parameterized", "stubs/qiskit.pulse.instructions.Acquire", "stubs/qiskit.pulse.instructions.Acquire.append", "stubs/qiskit.pulse.instructions.Acquire.ch_duration", "stubs/qiskit.pulse.instructions.Acquire.ch_start_time", "stubs/qiskit.pulse.instructions.Acquire.ch_stop_time", "stubs/qiskit.pulse.instructions.Acquire.draw", "stubs/qiskit.pulse.instructions.Acquire.insert", "stubs/qiskit.pulse.instructions.Acquire.is_parameterized", "stubs/qiskit.pulse.instructions.Acquire.shift", "stubs/qiskit.pulse.instructions.Call", "stubs/qiskit.pulse.instructions.Call.append", "stubs/qiskit.pulse.instructions.Call.assigned_subroutine", "stubs/qiskit.pulse.instructions.Call.ch_duration", "stubs/qiskit.pulse.instructions.Call.ch_start_time", "stubs/qiskit.pulse.instructions.Call.ch_stop_time", "stubs/qiskit.pulse.instructions.Call.draw", "stubs/qiskit.pulse.instructions.Call.insert", "stubs/qiskit.pulse.instructions.Call.is_parameterized", "stubs/qiskit.pulse.instructions.Call.shift", "stubs/qiskit.pulse.instructions.Delay", "stubs/qiskit.pulse.instructions.Delay.append", "stubs/qiskit.pulse.instructions.Delay.ch_duration", "stubs/qiskit.pulse.instructions.Delay.ch_start_time", "stubs/qiskit.pulse.instructions.Delay.ch_stop_time", "stubs/qiskit.pulse.instructions.Delay.draw", "stubs/qiskit.pulse.instructions.Delay.insert", "stubs/qiskit.pulse.instructions.Delay.is_parameterized", "stubs/qiskit.pulse.instructions.Delay.shift", "stubs/qiskit.pulse.instructions.Play", "stubs/qiskit.pulse.instructions.Play.append", "stubs/qiskit.pulse.instructions.Play.ch_duration", "stubs/qiskit.pulse.instructions.Play.ch_start_time", "stubs/qiskit.pulse.instructions.Play.ch_stop_time", "stubs/qiskit.pulse.instructions.Play.draw", "stubs/qiskit.pulse.instructions.Play.insert", "stubs/qiskit.pulse.instructions.Play.is_parameterized", "stubs/qiskit.pulse.instructions.Play.shift", "stubs/qiskit.pulse.instructions.SetFrequency", "stubs/qiskit.pulse.instructions.SetFrequency.append", "stubs/qiskit.pulse.instructions.SetFrequency.ch_duration", "stubs/qiskit.pulse.instructions.SetFrequency.ch_start_time", "stubs/qiskit.pulse.instructions.SetFrequency.ch_stop_time", "stubs/qiskit.pulse.instructions.SetFrequency.draw", "stubs/qiskit.pulse.instructions.SetFrequency.insert", "stubs/qiskit.pulse.instructions.SetFrequency.is_parameterized", "stubs/qiskit.pulse.instructions.SetFrequency.shift", "stubs/qiskit.pulse.instructions.SetPhase", "stubs/qiskit.pulse.instructions.SetPhase.append", "stubs/qiskit.pulse.instructions.SetPhase.ch_duration", "stubs/qiskit.pulse.instructions.SetPhase.ch_start_time", "stubs/qiskit.pulse.instructions.SetPhase.ch_stop_time", "stubs/qiskit.pulse.instructions.SetPhase.draw", "stubs/qiskit.pulse.instructions.SetPhase.insert", "stubs/qiskit.pulse.instructions.SetPhase.is_parameterized", "stubs/qiskit.pulse.instructions.SetPhase.shift", "stubs/qiskit.pulse.instructions.ShiftFrequency", "stubs/qiskit.pulse.instructions.ShiftFrequency.append", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_duration", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_start_time", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_stop_time", "stubs/qiskit.pulse.instructions.ShiftFrequency.draw", "stubs/qiskit.pulse.instructions.ShiftFrequency.insert", "stubs/qiskit.pulse.instructions.ShiftFrequency.is_parameterized", "stubs/qiskit.pulse.instructions.ShiftFrequency.shift", "stubs/qiskit.pulse.instructions.ShiftPhase", "stubs/qiskit.pulse.instructions.ShiftPhase.append", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_duration", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_start_time", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_stop_time", "stubs/qiskit.pulse.instructions.ShiftPhase.draw", "stubs/qiskit.pulse.instructions.ShiftPhase.insert", "stubs/qiskit.pulse.instructions.ShiftPhase.is_parameterized", "stubs/qiskit.pulse.instructions.ShiftPhase.shift", "stubs/qiskit.pulse.instructions.Snapshot", "stubs/qiskit.pulse.instructions.Snapshot.append", "stubs/qiskit.pulse.instructions.Snapshot.ch_duration", "stubs/qiskit.pulse.instructions.Snapshot.ch_start_time", "stubs/qiskit.pulse.instructions.Snapshot.ch_stop_time", "stubs/qiskit.pulse.instructions.Snapshot.draw", "stubs/qiskit.pulse.instructions.Snapshot.insert", "stubs/qiskit.pulse.instructions.Snapshot.is_parameterized", "stubs/qiskit.pulse.instructions.Snapshot.shift", "stubs/qiskit.pulse.library.Constant", "stubs/qiskit.pulse.library.Constant.draw", "stubs/qiskit.pulse.library.Constant.get_waveform", "stubs/qiskit.pulse.library.Constant.is_parameterized", "stubs/qiskit.pulse.library.Constant.validate_parameters", "stubs/qiskit.pulse.library.Drag", "stubs/qiskit.pulse.library.Drag.draw", "stubs/qiskit.pulse.library.Drag.get_waveform", "stubs/qiskit.pulse.library.Drag.is_parameterized", "stubs/qiskit.pulse.library.Drag.validate_parameters", "stubs/qiskit.pulse.library.Gaussian", "stubs/qiskit.pulse.library.Gaussian.draw", "stubs/qiskit.pulse.library.Gaussian.get_waveform", "stubs/qiskit.pulse.library.Gaussian.is_parameterized", "stubs/qiskit.pulse.library.Gaussian.validate_parameters", "stubs/qiskit.pulse.library.GaussianSquare", "stubs/qiskit.pulse.library.GaussianSquare.draw", "stubs/qiskit.pulse.library.GaussianSquare.get_waveform", "stubs/qiskit.pulse.library.GaussianSquare.is_parameterized", "stubs/qiskit.pulse.library.GaussianSquare.validate_parameters", "stubs/qiskit.pulse.library.ParametricPulse", "stubs/qiskit.pulse.library.ParametricPulse.draw", "stubs/qiskit.pulse.library.ParametricPulse.get_waveform", "stubs/qiskit.pulse.library.ParametricPulse.is_parameterized", "stubs/qiskit.pulse.library.ParametricPulse.validate_parameters", "stubs/qiskit.pulse.library.SymbolicPulse", "stubs/qiskit.pulse.library.SymbolicPulse.draw", "stubs/qiskit.pulse.library.SymbolicPulse.get_waveform", "stubs/qiskit.pulse.library.SymbolicPulse.is_parameterized", "stubs/qiskit.pulse.library.SymbolicPulse.validate_parameters", "stubs/qiskit.pulse.library.Waveform", "stubs/qiskit.pulse.library.Waveform.draw", "stubs/qiskit.pulse.library.Waveform.is_parameterized", "stubs/qiskit.pulse.library.constant", "stubs/qiskit.pulse.library.cos", "stubs/qiskit.pulse.library.drag", "stubs/qiskit.pulse.library.gaussian", "stubs/qiskit.pulse.library.gaussian_deriv", "stubs/qiskit.pulse.library.gaussian_square", "stubs/qiskit.pulse.library.sawtooth", "stubs/qiskit.pulse.library.sech", "stubs/qiskit.pulse.library.sech_deriv", "stubs/qiskit.pulse.library.sin", "stubs/qiskit.pulse.library.square", "stubs/qiskit.pulse.library.triangle", "stubs/qiskit.pulse.library.zero", "stubs/qiskit.pulse.transforms.AlignEquispaced", "stubs/qiskit.pulse.transforms.AlignEquispaced.align", "stubs/qiskit.pulse.transforms.AlignEquispaced.to_dict", "stubs/qiskit.pulse.transforms.AlignFunc", "stubs/qiskit.pulse.transforms.AlignFunc.align", "stubs/qiskit.pulse.transforms.AlignFunc.to_dict", "stubs/qiskit.pulse.transforms.AlignLeft", "stubs/qiskit.pulse.transforms.AlignLeft.align", "stubs/qiskit.pulse.transforms.AlignLeft.to_dict", "stubs/qiskit.pulse.transforms.AlignRight", "stubs/qiskit.pulse.transforms.AlignRight.align", "stubs/qiskit.pulse.transforms.AlignRight.to_dict", "stubs/qiskit.pulse.transforms.AlignSequential", "stubs/qiskit.pulse.transforms.AlignSequential.align", "stubs/qiskit.pulse.transforms.AlignSequential.to_dict", "stubs/qiskit.pulse.transforms.add_implicit_acquires", "stubs/qiskit.pulse.transforms.align_measures", "stubs/qiskit.pulse.transforms.block_to_dag", "stubs/qiskit.pulse.transforms.block_to_schedule", "stubs/qiskit.pulse.transforms.compress_pulses", "stubs/qiskit.pulse.transforms.flatten", "stubs/qiskit.pulse.transforms.inline_subroutines", "stubs/qiskit.pulse.transforms.pad", "stubs/qiskit.pulse.transforms.remove_directives", "stubs/qiskit.pulse.transforms.remove_trivial_barriers", "stubs/qiskit.pulse.transforms.target_qobj_transform", "stubs/qiskit.qasm.OpenQASMLexer", "stubs/qiskit.qasm.OpenQASMLexer.add_filter", "stubs/qiskit.qasm.OpenQASMLexer.analyse_text", "stubs/qiskit.qasm.OpenQASMLexer.get_tokens", "stubs/qiskit.qasm.OpenQASMLexer.get_tokens_unprocessed", "stubs/qiskit.qasm.Qasm", "stubs/qiskit.qasm.Qasm.generate_tokens", "stubs/qiskit.qasm.Qasm.parse", "stubs/qiskit.qasm.Qasm.return_filename", "stubs/qiskit.qasm.QasmError", "stubs/qiskit.qasm.QasmHTMLStyle", "stubs/qiskit.qasm.QasmTerminalStyle", "stubs/qiskit.qasm3.Exporter", "stubs/qiskit.qasm3.Exporter.dump", "stubs/qiskit.qasm3.Exporter.dumps", "stubs/qiskit.qasm3.dump", "stubs/qiskit.qasm3.dumps", "stubs/qiskit.qobj.GateCalibration", "stubs/qiskit.qobj.GateCalibration.from_dict", "stubs/qiskit.qobj.GateCalibration.to_dict", "stubs/qiskit.qobj.PulseLibraryItem", "stubs/qiskit.qobj.PulseLibraryItem.from_dict", "stubs/qiskit.qobj.PulseLibraryItem.to_dict", "stubs/qiskit.qobj.PulseQobj", "stubs/qiskit.qobj.PulseQobj.from_dict", "stubs/qiskit.qobj.PulseQobj.to_dict", "stubs/qiskit.qobj.PulseQobjConfig", "stubs/qiskit.qobj.PulseQobjConfig.from_dict", "stubs/qiskit.qobj.PulseQobjConfig.to_dict", "stubs/qiskit.qobj.PulseQobjExperiment", "stubs/qiskit.qobj.PulseQobjExperiment.from_dict", "stubs/qiskit.qobj.PulseQobjExperiment.to_dict", "stubs/qiskit.qobj.PulseQobjExperimentConfig", "stubs/qiskit.qobj.PulseQobjExperimentConfig.from_dict", "stubs/qiskit.qobj.PulseQobjExperimentConfig.to_dict", "stubs/qiskit.qobj.PulseQobjInstruction", "stubs/qiskit.qobj.PulseQobjInstruction.from_dict", "stubs/qiskit.qobj.PulseQobjInstruction.to_dict", "stubs/qiskit.qobj.QasmExperimentCalibrations", "stubs/qiskit.qobj.QasmExperimentCalibrations.from_dict", "stubs/qiskit.qobj.QasmExperimentCalibrations.to_dict", "stubs/qiskit.qobj.QasmQobj", "stubs/qiskit.qobj.QasmQobj.from_dict", "stubs/qiskit.qobj.QasmQobj.to_dict", "stubs/qiskit.qobj.QasmQobjConfig", "stubs/qiskit.qobj.QasmQobjConfig.from_dict", "stubs/qiskit.qobj.QasmQobjConfig.to_dict", "stubs/qiskit.qobj.QasmQobjExperiment", "stubs/qiskit.qobj.QasmQobjExperiment.from_dict", "stubs/qiskit.qobj.QasmQobjExperiment.to_dict", "stubs/qiskit.qobj.QasmQobjExperimentConfig", "stubs/qiskit.qobj.QasmQobjExperimentConfig.from_dict", "stubs/qiskit.qobj.QasmQobjExperimentConfig.to_dict", "stubs/qiskit.qobj.QasmQobjInstruction", "stubs/qiskit.qobj.QasmQobjInstruction.from_dict", "stubs/qiskit.qobj.QasmQobjInstruction.to_dict", "stubs/qiskit.qobj.Qobj", "stubs/qiskit.qobj.Qobj.from_dict", "stubs/qiskit.qobj.Qobj.to_dict", "stubs/qiskit.qobj.QobjExperimentHeader", "stubs/qiskit.qobj.QobjExperimentHeader.from_dict", "stubs/qiskit.qobj.QobjExperimentHeader.to_dict", "stubs/qiskit.qobj.QobjHeader", "stubs/qiskit.qobj.QobjHeader.from_dict", "stubs/qiskit.qobj.QobjHeader.to_dict", "stubs/qiskit.qobj.QobjMeasurementOption", "stubs/qiskit.qobj.QobjMeasurementOption.from_dict", "stubs/qiskit.qobj.QobjMeasurementOption.to_dict", "stubs/qiskit.qpy.dump", "stubs/qiskit.qpy.load", "stubs/qiskit.quantum_info.CNOTDihedral", "stubs/qiskit.quantum_info.CNOTDihedral.adjoint", "stubs/qiskit.quantum_info.CNOTDihedral.compose", "stubs/qiskit.quantum_info.CNOTDihedral.conjugate", "stubs/qiskit.quantum_info.CNOTDihedral.copy", "stubs/qiskit.quantum_info.CNOTDihedral.dot", "stubs/qiskit.quantum_info.CNOTDihedral.expand", "stubs/qiskit.quantum_info.CNOTDihedral.input_dims", "stubs/qiskit.quantum_info.CNOTDihedral.output_dims", "stubs/qiskit.quantum_info.CNOTDihedral.power", "stubs/qiskit.quantum_info.CNOTDihedral.reshape", "stubs/qiskit.quantum_info.CNOTDihedral.tensor", "stubs/qiskit.quantum_info.CNOTDihedral.to_circuit", "stubs/qiskit.quantum_info.CNOTDihedral.to_instruction", "stubs/qiskit.quantum_info.CNOTDihedral.to_matrix", "stubs/qiskit.quantum_info.CNOTDihedral.to_operator", "stubs/qiskit.quantum_info.CNOTDihedral.transpose", "stubs/qiskit.quantum_info.Chi", "stubs/qiskit.quantum_info.Chi.adjoint", "stubs/qiskit.quantum_info.Chi.compose", "stubs/qiskit.quantum_info.Chi.conjugate", "stubs/qiskit.quantum_info.Chi.copy", "stubs/qiskit.quantum_info.Chi.dot", "stubs/qiskit.quantum_info.Chi.expand", "stubs/qiskit.quantum_info.Chi.input_dims", "stubs/qiskit.quantum_info.Chi.is_cp", "stubs/qiskit.quantum_info.Chi.is_cptp", "stubs/qiskit.quantum_info.Chi.is_tp", "stubs/qiskit.quantum_info.Chi.is_unitary", "stubs/qiskit.quantum_info.Chi.output_dims", "stubs/qiskit.quantum_info.Chi.power", "stubs/qiskit.quantum_info.Chi.reshape", "stubs/qiskit.quantum_info.Chi.tensor", "stubs/qiskit.quantum_info.Chi.to_instruction", "stubs/qiskit.quantum_info.Chi.to_operator", "stubs/qiskit.quantum_info.Chi.transpose", "stubs/qiskit.quantum_info.Choi", "stubs/qiskit.quantum_info.Choi.adjoint", "stubs/qiskit.quantum_info.Choi.compose", "stubs/qiskit.quantum_info.Choi.conjugate", "stubs/qiskit.quantum_info.Choi.copy", "stubs/qiskit.quantum_info.Choi.dot", "stubs/qiskit.quantum_info.Choi.expand", "stubs/qiskit.quantum_info.Choi.input_dims", "stubs/qiskit.quantum_info.Choi.is_cp", "stubs/qiskit.quantum_info.Choi.is_cptp", "stubs/qiskit.quantum_info.Choi.is_tp", "stubs/qiskit.quantum_info.Choi.is_unitary", "stubs/qiskit.quantum_info.Choi.output_dims", "stubs/qiskit.quantum_info.Choi.power", "stubs/qiskit.quantum_info.Choi.reshape", "stubs/qiskit.quantum_info.Choi.tensor", "stubs/qiskit.quantum_info.Choi.to_instruction", "stubs/qiskit.quantum_info.Choi.to_operator", "stubs/qiskit.quantum_info.Choi.transpose", "stubs/qiskit.quantum_info.Clifford", "stubs/qiskit.quantum_info.Clifford.adjoint", "stubs/qiskit.quantum_info.Clifford.compose", "stubs/qiskit.quantum_info.Clifford.conjugate", "stubs/qiskit.quantum_info.Clifford.copy", "stubs/qiskit.quantum_info.Clifford.dot", "stubs/qiskit.quantum_info.Clifford.expand", "stubs/qiskit.quantum_info.Clifford.from_circuit", "stubs/qiskit.quantum_info.Clifford.from_dict", "stubs/qiskit.quantum_info.Clifford.from_label", "stubs/qiskit.quantum_info.Clifford.input_dims", "stubs/qiskit.quantum_info.Clifford.is_unitary", "stubs/qiskit.quantum_info.Clifford.output_dims", "stubs/qiskit.quantum_info.Clifford.power", "stubs/qiskit.quantum_info.Clifford.reshape", "stubs/qiskit.quantum_info.Clifford.tensor", "stubs/qiskit.quantum_info.Clifford.to_circuit", "stubs/qiskit.quantum_info.Clifford.to_dict", "stubs/qiskit.quantum_info.Clifford.to_instruction", "stubs/qiskit.quantum_info.Clifford.to_matrix", "stubs/qiskit.quantum_info.Clifford.to_operator", "stubs/qiskit.quantum_info.Clifford.transpose", "stubs/qiskit.quantum_info.DensityMatrix", "stubs/qiskit.quantum_info.DensityMatrix.conjugate", "stubs/qiskit.quantum_info.DensityMatrix.copy", "stubs/qiskit.quantum_info.DensityMatrix.dims", "stubs/qiskit.quantum_info.DensityMatrix.draw", "stubs/qiskit.quantum_info.DensityMatrix.evolve", "stubs/qiskit.quantum_info.DensityMatrix.expand", "stubs/qiskit.quantum_info.DensityMatrix.expectation_value", "stubs/qiskit.quantum_info.DensityMatrix.from_instruction", "stubs/qiskit.quantum_info.DensityMatrix.from_int", "stubs/qiskit.quantum_info.DensityMatrix.from_label", "stubs/qiskit.quantum_info.DensityMatrix.is_valid", "stubs/qiskit.quantum_info.DensityMatrix.measure", "stubs/qiskit.quantum_info.DensityMatrix.probabilities", "stubs/qiskit.quantum_info.DensityMatrix.probabilities_dict", "stubs/qiskit.quantum_info.DensityMatrix.purity", "stubs/qiskit.quantum_info.DensityMatrix.reset", "stubs/qiskit.quantum_info.DensityMatrix.reverse_qargs", "stubs/qiskit.quantum_info.DensityMatrix.sample_counts", "stubs/qiskit.quantum_info.DensityMatrix.sample_memory", "stubs/qiskit.quantum_info.DensityMatrix.seed", "stubs/qiskit.quantum_info.DensityMatrix.tensor", "stubs/qiskit.quantum_info.DensityMatrix.to_dict", "stubs/qiskit.quantum_info.DensityMatrix.to_operator", "stubs/qiskit.quantum_info.DensityMatrix.to_statevector", "stubs/qiskit.quantum_info.DensityMatrix.trace", "stubs/qiskit.quantum_info.Kraus", "stubs/qiskit.quantum_info.Kraus.adjoint", "stubs/qiskit.quantum_info.Kraus.compose", "stubs/qiskit.quantum_info.Kraus.conjugate", "stubs/qiskit.quantum_info.Kraus.copy", "stubs/qiskit.quantum_info.Kraus.dot", "stubs/qiskit.quantum_info.Kraus.expand", "stubs/qiskit.quantum_info.Kraus.input_dims", "stubs/qiskit.quantum_info.Kraus.is_cp", "stubs/qiskit.quantum_info.Kraus.is_cptp", "stubs/qiskit.quantum_info.Kraus.is_tp", "stubs/qiskit.quantum_info.Kraus.is_unitary", "stubs/qiskit.quantum_info.Kraus.output_dims", "stubs/qiskit.quantum_info.Kraus.power", "stubs/qiskit.quantum_info.Kraus.reshape", "stubs/qiskit.quantum_info.Kraus.tensor", "stubs/qiskit.quantum_info.Kraus.to_instruction", "stubs/qiskit.quantum_info.Kraus.to_operator", "stubs/qiskit.quantum_info.Kraus.transpose", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer.angles", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer.angles_and_phase", "stubs/qiskit.quantum_info.Operator", "stubs/qiskit.quantum_info.Operator.adjoint", "stubs/qiskit.quantum_info.Operator.compose", "stubs/qiskit.quantum_info.Operator.conjugate", "stubs/qiskit.quantum_info.Operator.copy", "stubs/qiskit.quantum_info.Operator.dot", "stubs/qiskit.quantum_info.Operator.equiv", "stubs/qiskit.quantum_info.Operator.expand", "stubs/qiskit.quantum_info.Operator.from_circuit", "stubs/qiskit.quantum_info.Operator.from_label", "stubs/qiskit.quantum_info.Operator.input_dims", "stubs/qiskit.quantum_info.Operator.is_unitary", "stubs/qiskit.quantum_info.Operator.output_dims", "stubs/qiskit.quantum_info.Operator.power", "stubs/qiskit.quantum_info.Operator.reshape", "stubs/qiskit.quantum_info.Operator.reverse_qargs", "stubs/qiskit.quantum_info.Operator.tensor", "stubs/qiskit.quantum_info.Operator.to_instruction", "stubs/qiskit.quantum_info.Operator.to_operator", "stubs/qiskit.quantum_info.Operator.transpose", "stubs/qiskit.quantum_info.PTM", "stubs/qiskit.quantum_info.PTM.adjoint", "stubs/qiskit.quantum_info.PTM.compose", "stubs/qiskit.quantum_info.PTM.conjugate", "stubs/qiskit.quantum_info.PTM.copy", "stubs/qiskit.quantum_info.PTM.dot", "stubs/qiskit.quantum_info.PTM.expand", "stubs/qiskit.quantum_info.PTM.input_dims", "stubs/qiskit.quantum_info.PTM.is_cp", "stubs/qiskit.quantum_info.PTM.is_cptp", "stubs/qiskit.quantum_info.PTM.is_tp", "stubs/qiskit.quantum_info.PTM.is_unitary", "stubs/qiskit.quantum_info.PTM.output_dims", "stubs/qiskit.quantum_info.PTM.power", "stubs/qiskit.quantum_info.PTM.reshape", "stubs/qiskit.quantum_info.PTM.tensor", "stubs/qiskit.quantum_info.PTM.to_instruction", "stubs/qiskit.quantum_info.PTM.to_operator", "stubs/qiskit.quantum_info.PTM.transpose", "stubs/qiskit.quantum_info.Pauli", "stubs/qiskit.quantum_info.Pauli.adjoint", "stubs/qiskit.quantum_info.Pauli.anticommutes", "stubs/qiskit.quantum_info.Pauli.commutes", "stubs/qiskit.quantum_info.Pauli.compose", "stubs/qiskit.quantum_info.Pauli.conjugate", "stubs/qiskit.quantum_info.Pauli.copy", "stubs/qiskit.quantum_info.Pauli.delete", "stubs/qiskit.quantum_info.Pauli.dot", "stubs/qiskit.quantum_info.Pauli.equiv", "stubs/qiskit.quantum_info.Pauli.evolve", "stubs/qiskit.quantum_info.Pauli.expand", "stubs/qiskit.quantum_info.Pauli.input_dims", "stubs/qiskit.quantum_info.Pauli.insert", "stubs/qiskit.quantum_info.Pauli.inverse", "stubs/qiskit.quantum_info.Pauli.output_dims", "stubs/qiskit.quantum_info.Pauli.power", "stubs/qiskit.quantum_info.Pauli.reshape", "stubs/qiskit.quantum_info.Pauli.set_truncation", "stubs/qiskit.quantum_info.Pauli.tensor", "stubs/qiskit.quantum_info.Pauli.to_instruction", "stubs/qiskit.quantum_info.Pauli.to_label", "stubs/qiskit.quantum_info.Pauli.to_matrix", "stubs/qiskit.quantum_info.Pauli.transpose", "stubs/qiskit.quantum_info.PauliList", "stubs/qiskit.quantum_info.PauliList.adjoint", "stubs/qiskit.quantum_info.PauliList.anticommutes", "stubs/qiskit.quantum_info.PauliList.anticommutes_with_all", "stubs/qiskit.quantum_info.PauliList.argsort", "stubs/qiskit.quantum_info.PauliList.commutes", "stubs/qiskit.quantum_info.PauliList.commutes_with_all", "stubs/qiskit.quantum_info.PauliList.compose", "stubs/qiskit.quantum_info.PauliList.conjugate", "stubs/qiskit.quantum_info.PauliList.copy", "stubs/qiskit.quantum_info.PauliList.delete", "stubs/qiskit.quantum_info.PauliList.dot", "stubs/qiskit.quantum_info.PauliList.equiv", "stubs/qiskit.quantum_info.PauliList.evolve", "stubs/qiskit.quantum_info.PauliList.expand", "stubs/qiskit.quantum_info.PauliList.from_symplectic", "stubs/qiskit.quantum_info.PauliList.group_commuting", "stubs/qiskit.quantum_info.PauliList.group_qubit_wise_commuting", "stubs/qiskit.quantum_info.PauliList.input_dims", "stubs/qiskit.quantum_info.PauliList.insert", "stubs/qiskit.quantum_info.PauliList.inverse", "stubs/qiskit.quantum_info.PauliList.label_iter", "stubs/qiskit.quantum_info.PauliList.matrix_iter", "stubs/qiskit.quantum_info.PauliList.output_dims", "stubs/qiskit.quantum_info.PauliList.power", "stubs/qiskit.quantum_info.PauliList.reshape", "stubs/qiskit.quantum_info.PauliList.sort", "stubs/qiskit.quantum_info.PauliList.tensor", "stubs/qiskit.quantum_info.PauliList.to_labels", "stubs/qiskit.quantum_info.PauliList.to_matrix", "stubs/qiskit.quantum_info.PauliList.transpose", "stubs/qiskit.quantum_info.PauliList.unique", "stubs/qiskit.quantum_info.PauliTable", "stubs/qiskit.quantum_info.PauliTable.adjoint", "stubs/qiskit.quantum_info.PauliTable.anticommutes_with_all", "stubs/qiskit.quantum_info.PauliTable.argsort", "stubs/qiskit.quantum_info.PauliTable.commutes", "stubs/qiskit.quantum_info.PauliTable.commutes_with_all", "stubs/qiskit.quantum_info.PauliTable.compose", "stubs/qiskit.quantum_info.PauliTable.conjugate", "stubs/qiskit.quantum_info.PauliTable.copy", "stubs/qiskit.quantum_info.PauliTable.delete", "stubs/qiskit.quantum_info.PauliTable.dot", "stubs/qiskit.quantum_info.PauliTable.expand", "stubs/qiskit.quantum_info.PauliTable.from_labels", "stubs/qiskit.quantum_info.PauliTable.input_dims", "stubs/qiskit.quantum_info.PauliTable.insert", "stubs/qiskit.quantum_info.PauliTable.label_iter", "stubs/qiskit.quantum_info.PauliTable.matrix_iter", "stubs/qiskit.quantum_info.PauliTable.output_dims", "stubs/qiskit.quantum_info.PauliTable.power", "stubs/qiskit.quantum_info.PauliTable.reshape", "stubs/qiskit.quantum_info.PauliTable.sort", "stubs/qiskit.quantum_info.PauliTable.tensor", "stubs/qiskit.quantum_info.PauliTable.to_labels", "stubs/qiskit.quantum_info.PauliTable.to_matrix", "stubs/qiskit.quantum_info.PauliTable.transpose", "stubs/qiskit.quantum_info.PauliTable.unique", "stubs/qiskit.quantum_info.Quaternion", "stubs/qiskit.quantum_info.Quaternion.from_axis_rotation", "stubs/qiskit.quantum_info.Quaternion.from_euler", "stubs/qiskit.quantum_info.Quaternion.norm", "stubs/qiskit.quantum_info.Quaternion.normalize", "stubs/qiskit.quantum_info.Quaternion.to_matrix", "stubs/qiskit.quantum_info.Quaternion.to_zyz", "stubs/qiskit.quantum_info.ScalarOp", "stubs/qiskit.quantum_info.ScalarOp.adjoint", "stubs/qiskit.quantum_info.ScalarOp.compose", "stubs/qiskit.quantum_info.ScalarOp.conjugate", "stubs/qiskit.quantum_info.ScalarOp.copy", "stubs/qiskit.quantum_info.ScalarOp.dot", "stubs/qiskit.quantum_info.ScalarOp.expand", "stubs/qiskit.quantum_info.ScalarOp.input_dims", "stubs/qiskit.quantum_info.ScalarOp.is_unitary", "stubs/qiskit.quantum_info.ScalarOp.output_dims", "stubs/qiskit.quantum_info.ScalarOp.power", "stubs/qiskit.quantum_info.ScalarOp.reshape", "stubs/qiskit.quantum_info.ScalarOp.tensor", "stubs/qiskit.quantum_info.ScalarOp.to_matrix", "stubs/qiskit.quantum_info.ScalarOp.to_operator", "stubs/qiskit.quantum_info.ScalarOp.transpose", "stubs/qiskit.quantum_info.SparsePauliOp", "stubs/qiskit.quantum_info.SparsePauliOp.adjoint", "stubs/qiskit.quantum_info.SparsePauliOp.chop", "stubs/qiskit.quantum_info.SparsePauliOp.compose", "stubs/qiskit.quantum_info.SparsePauliOp.conjugate", "stubs/qiskit.quantum_info.SparsePauliOp.copy", "stubs/qiskit.quantum_info.SparsePauliOp.dot", "stubs/qiskit.quantum_info.SparsePauliOp.equiv", "stubs/qiskit.quantum_info.SparsePauliOp.expand", "stubs/qiskit.quantum_info.SparsePauliOp.from_list", "stubs/qiskit.quantum_info.SparsePauliOp.from_operator", "stubs/qiskit.quantum_info.SparsePauliOp.from_sparse_list", "stubs/qiskit.quantum_info.SparsePauliOp.group_commuting", "stubs/qiskit.quantum_info.SparsePauliOp.input_dims", "stubs/qiskit.quantum_info.SparsePauliOp.is_unitary", "stubs/qiskit.quantum_info.SparsePauliOp.label_iter", "stubs/qiskit.quantum_info.SparsePauliOp.matrix_iter", "stubs/qiskit.quantum_info.SparsePauliOp.output_dims", "stubs/qiskit.quantum_info.SparsePauliOp.power", "stubs/qiskit.quantum_info.SparsePauliOp.reshape", "stubs/qiskit.quantum_info.SparsePauliOp.simplify", "stubs/qiskit.quantum_info.SparsePauliOp.sum", "stubs/qiskit.quantum_info.SparsePauliOp.tensor", "stubs/qiskit.quantum_info.SparsePauliOp.to_list", "stubs/qiskit.quantum_info.SparsePauliOp.to_matrix", "stubs/qiskit.quantum_info.SparsePauliOp.to_operator", "stubs/qiskit.quantum_info.SparsePauliOp.transpose", "stubs/qiskit.quantum_info.StabilizerState", "stubs/qiskit.quantum_info.StabilizerState.conjugate", "stubs/qiskit.quantum_info.StabilizerState.copy", "stubs/qiskit.quantum_info.StabilizerState.dims", "stubs/qiskit.quantum_info.StabilizerState.evolve", "stubs/qiskit.quantum_info.StabilizerState.expand", "stubs/qiskit.quantum_info.StabilizerState.expectation_value", "stubs/qiskit.quantum_info.StabilizerState.is_valid", "stubs/qiskit.quantum_info.StabilizerState.measure", "stubs/qiskit.quantum_info.StabilizerState.probabilities", "stubs/qiskit.quantum_info.StabilizerState.probabilities_dict", "stubs/qiskit.quantum_info.StabilizerState.purity", "stubs/qiskit.quantum_info.StabilizerState.reset", "stubs/qiskit.quantum_info.StabilizerState.sample_counts", "stubs/qiskit.quantum_info.StabilizerState.sample_memory", "stubs/qiskit.quantum_info.StabilizerState.seed", "stubs/qiskit.quantum_info.StabilizerState.tensor", "stubs/qiskit.quantum_info.StabilizerState.to_operator", "stubs/qiskit.quantum_info.StabilizerState.trace", "stubs/qiskit.quantum_info.StabilizerTable", "stubs/qiskit.quantum_info.StabilizerTable.adjoint", "stubs/qiskit.quantum_info.StabilizerTable.anticommutes_with_all", "stubs/qiskit.quantum_info.StabilizerTable.argsort", "stubs/qiskit.quantum_info.StabilizerTable.commutes", "stubs/qiskit.quantum_info.StabilizerTable.commutes_with_all", "stubs/qiskit.quantum_info.StabilizerTable.compose", "stubs/qiskit.quantum_info.StabilizerTable.conjugate", "stubs/qiskit.quantum_info.StabilizerTable.copy", "stubs/qiskit.quantum_info.StabilizerTable.delete", "stubs/qiskit.quantum_info.StabilizerTable.dot", "stubs/qiskit.quantum_info.StabilizerTable.expand", "stubs/qiskit.quantum_info.StabilizerTable.from_labels", "stubs/qiskit.quantum_info.StabilizerTable.input_dims", "stubs/qiskit.quantum_info.StabilizerTable.insert", "stubs/qiskit.quantum_info.StabilizerTable.label_iter", "stubs/qiskit.quantum_info.StabilizerTable.matrix_iter", "stubs/qiskit.quantum_info.StabilizerTable.output_dims", "stubs/qiskit.quantum_info.StabilizerTable.power", "stubs/qiskit.quantum_info.StabilizerTable.reshape", "stubs/qiskit.quantum_info.StabilizerTable.sort", "stubs/qiskit.quantum_info.StabilizerTable.tensor", "stubs/qiskit.quantum_info.StabilizerTable.to_labels", "stubs/qiskit.quantum_info.StabilizerTable.to_matrix", "stubs/qiskit.quantum_info.StabilizerTable.transpose", "stubs/qiskit.quantum_info.StabilizerTable.unique", "stubs/qiskit.quantum_info.Statevector", "stubs/qiskit.quantum_info.Statevector.conjugate", "stubs/qiskit.quantum_info.Statevector.copy", "stubs/qiskit.quantum_info.Statevector.dims", "stubs/qiskit.quantum_info.Statevector.draw", "stubs/qiskit.quantum_info.Statevector.equiv", "stubs/qiskit.quantum_info.Statevector.evolve", "stubs/qiskit.quantum_info.Statevector.expand", "stubs/qiskit.quantum_info.Statevector.expectation_value", "stubs/qiskit.quantum_info.Statevector.from_instruction", "stubs/qiskit.quantum_info.Statevector.from_int", "stubs/qiskit.quantum_info.Statevector.from_label", "stubs/qiskit.quantum_info.Statevector.inner", "stubs/qiskit.quantum_info.Statevector.is_valid", "stubs/qiskit.quantum_info.Statevector.measure", "stubs/qiskit.quantum_info.Statevector.probabilities", "stubs/qiskit.quantum_info.Statevector.probabilities_dict", "stubs/qiskit.quantum_info.Statevector.purity", "stubs/qiskit.quantum_info.Statevector.reset", "stubs/qiskit.quantum_info.Statevector.reverse_qargs", "stubs/qiskit.quantum_info.Statevector.sample_counts", "stubs/qiskit.quantum_info.Statevector.sample_memory", "stubs/qiskit.quantum_info.Statevector.seed", "stubs/qiskit.quantum_info.Statevector.tensor", "stubs/qiskit.quantum_info.Statevector.to_dict", "stubs/qiskit.quantum_info.Statevector.to_operator", "stubs/qiskit.quantum_info.Statevector.trace", "stubs/qiskit.quantum_info.Stinespring", "stubs/qiskit.quantum_info.Stinespring.adjoint", "stubs/qiskit.quantum_info.Stinespring.compose", "stubs/qiskit.quantum_info.Stinespring.conjugate", "stubs/qiskit.quantum_info.Stinespring.copy", "stubs/qiskit.quantum_info.Stinespring.dot", "stubs/qiskit.quantum_info.Stinespring.expand", "stubs/qiskit.quantum_info.Stinespring.input_dims", "stubs/qiskit.quantum_info.Stinespring.is_cp", "stubs/qiskit.quantum_info.Stinespring.is_cptp", "stubs/qiskit.quantum_info.Stinespring.is_tp", "stubs/qiskit.quantum_info.Stinespring.is_unitary", "stubs/qiskit.quantum_info.Stinespring.output_dims", "stubs/qiskit.quantum_info.Stinespring.power", "stubs/qiskit.quantum_info.Stinespring.reshape", "stubs/qiskit.quantum_info.Stinespring.tensor", "stubs/qiskit.quantum_info.Stinespring.to_instruction", "stubs/qiskit.quantum_info.Stinespring.to_operator", "stubs/qiskit.quantum_info.Stinespring.transpose", "stubs/qiskit.quantum_info.SuperOp", "stubs/qiskit.quantum_info.SuperOp.adjoint", "stubs/qiskit.quantum_info.SuperOp.compose", "stubs/qiskit.quantum_info.SuperOp.conjugate", "stubs/qiskit.quantum_info.SuperOp.copy", "stubs/qiskit.quantum_info.SuperOp.dot", "stubs/qiskit.quantum_info.SuperOp.expand", "stubs/qiskit.quantum_info.SuperOp.input_dims", "stubs/qiskit.quantum_info.SuperOp.is_cp", "stubs/qiskit.quantum_info.SuperOp.is_cptp", "stubs/qiskit.quantum_info.SuperOp.is_tp", "stubs/qiskit.quantum_info.SuperOp.is_unitary", "stubs/qiskit.quantum_info.SuperOp.output_dims", "stubs/qiskit.quantum_info.SuperOp.power", "stubs/qiskit.quantum_info.SuperOp.reshape", "stubs/qiskit.quantum_info.SuperOp.tensor", "stubs/qiskit.quantum_info.SuperOp.to_instruction", "stubs/qiskit.quantum_info.SuperOp.to_operator", "stubs/qiskit.quantum_info.SuperOp.transpose", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp0", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp1", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp2_supercontrolled", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp3_supercontrolled", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.num_basis_gates", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.traces", "stubs/qiskit.quantum_info.XXDecomposer", "stubs/qiskit.quantum_info.XXDecomposer.num_basis_gates", "stubs/qiskit.quantum_info.average_gate_fidelity", "stubs/qiskit.quantum_info.concurrence", "stubs/qiskit.quantum_info.decompose_clifford", "stubs/qiskit.quantum_info.diamond_norm", "stubs/qiskit.quantum_info.entanglement_of_formation", "stubs/qiskit.quantum_info.entropy", "stubs/qiskit.quantum_info.gate_error", "stubs/qiskit.quantum_info.hellinger_distance", "stubs/qiskit.quantum_info.hellinger_fidelity", "stubs/qiskit.quantum_info.mutual_information", "stubs/qiskit.quantum_info.partial_trace", "stubs/qiskit.quantum_info.pauli_basis", "stubs/qiskit.quantum_info.process_fidelity", "stubs/qiskit.quantum_info.purity", "stubs/qiskit.quantum_info.random_clifford", "stubs/qiskit.quantum_info.random_cnotdihedral", "stubs/qiskit.quantum_info.random_density_matrix", "stubs/qiskit.quantum_info.random_hermitian", "stubs/qiskit.quantum_info.random_pauli", "stubs/qiskit.quantum_info.random_pauli_list", "stubs/qiskit.quantum_info.random_pauli_table", "stubs/qiskit.quantum_info.random_quantum_channel", "stubs/qiskit.quantum_info.random_stabilizer_table", "stubs/qiskit.quantum_info.random_statevector", "stubs/qiskit.quantum_info.random_unitary", "stubs/qiskit.quantum_info.shannon_entropy", "stubs/qiskit.quantum_info.state_fidelity", "stubs/qiskit.quantum_info.two_qubit_cnot_decompose", "stubs/qiskit.result.BaseReadoutMitigator", "stubs/qiskit.result.BaseReadoutMitigator.expectation_value", "stubs/qiskit.result.BaseReadoutMitigator.quasi_probabilities", "stubs/qiskit.result.CorrelatedReadoutMitigator", "stubs/qiskit.result.CorrelatedReadoutMitigator.assignment_matrix", "stubs/qiskit.result.CorrelatedReadoutMitigator.expectation_value", "stubs/qiskit.result.CorrelatedReadoutMitigator.mitigation_matrix", "stubs/qiskit.result.CorrelatedReadoutMitigator.quasi_probabilities", "stubs/qiskit.result.CorrelatedReadoutMitigator.stddev_upper_bound", "stubs/qiskit.result.Counts", "stubs/qiskit.result.Counts.clear", "stubs/qiskit.result.Counts.copy", "stubs/qiskit.result.Counts.fromkeys", "stubs/qiskit.result.Counts.get", "stubs/qiskit.result.Counts.hex_outcomes", "stubs/qiskit.result.Counts.int_outcomes", "stubs/qiskit.result.Counts.items", "stubs/qiskit.result.Counts.keys", "stubs/qiskit.result.Counts.most_frequent", "stubs/qiskit.result.Counts.pop", "stubs/qiskit.result.Counts.popitem", "stubs/qiskit.result.Counts.setdefault", "stubs/qiskit.result.Counts.shots", "stubs/qiskit.result.Counts.update", "stubs/qiskit.result.Counts.values", "stubs/qiskit.result.LocalReadoutMitigator", "stubs/qiskit.result.LocalReadoutMitigator.assignment_matrix", "stubs/qiskit.result.LocalReadoutMitigator.expectation_value", "stubs/qiskit.result.LocalReadoutMitigator.mitigation_matrix", "stubs/qiskit.result.LocalReadoutMitigator.quasi_probabilities", "stubs/qiskit.result.LocalReadoutMitigator.stddev_upper_bound", "stubs/qiskit.result.ProbDistribution", "stubs/qiskit.result.ProbDistribution.binary_probabilities", "stubs/qiskit.result.ProbDistribution.clear", "stubs/qiskit.result.ProbDistribution.copy", "stubs/qiskit.result.ProbDistribution.fromkeys", "stubs/qiskit.result.ProbDistribution.get", "stubs/qiskit.result.ProbDistribution.hex_probabilities", "stubs/qiskit.result.ProbDistribution.items", "stubs/qiskit.result.ProbDistribution.keys", "stubs/qiskit.result.ProbDistribution.pop", "stubs/qiskit.result.ProbDistribution.popitem", "stubs/qiskit.result.ProbDistribution.setdefault", "stubs/qiskit.result.ProbDistribution.update", "stubs/qiskit.result.ProbDistribution.values", "stubs/qiskit.result.QuasiDistribution", "stubs/qiskit.result.QuasiDistribution.binary_probabilities", "stubs/qiskit.result.QuasiDistribution.clear", "stubs/qiskit.result.QuasiDistribution.copy", "stubs/qiskit.result.QuasiDistribution.fromkeys", "stubs/qiskit.result.QuasiDistribution.get", "stubs/qiskit.result.QuasiDistribution.hex_probabilities", "stubs/qiskit.result.QuasiDistribution.items", "stubs/qiskit.result.QuasiDistribution.keys", "stubs/qiskit.result.QuasiDistribution.nearest_probability_distribution", "stubs/qiskit.result.QuasiDistribution.pop", "stubs/qiskit.result.QuasiDistribution.popitem", "stubs/qiskit.result.QuasiDistribution.setdefault", "stubs/qiskit.result.QuasiDistribution.update", "stubs/qiskit.result.QuasiDistribution.values", "stubs/qiskit.result.Result", "stubs/qiskit.result.Result.data", "stubs/qiskit.result.Result.from_dict", "stubs/qiskit.result.Result.get_counts", "stubs/qiskit.result.Result.get_memory", "stubs/qiskit.result.Result.get_statevector", "stubs/qiskit.result.Result.get_unitary", "stubs/qiskit.result.Result.to_dict", "stubs/qiskit.result.ResultError", "stubs/qiskit.result.marginal_counts", "stubs/qiskit.result.marginal_distribution", "stubs/qiskit.result.marginal_memory", "stubs/qiskit.scheduler.ScheduleConfig", "stubs/qiskit.scheduler.methods.basic", "stubs/qiskit.scheduler.schedule_circuit", "stubs/qiskit.synthesis.EvolutionSynthesis", "stubs/qiskit.synthesis.EvolutionSynthesis.synthesize", "stubs/qiskit.synthesis.LieTrotter", "stubs/qiskit.synthesis.LieTrotter.synthesize", "stubs/qiskit.synthesis.MatrixExponential", "stubs/qiskit.synthesis.MatrixExponential.synthesize", "stubs/qiskit.synthesis.ProductFormula", "stubs/qiskit.synthesis.ProductFormula.synthesize", "stubs/qiskit.synthesis.SuzukiTrotter", "stubs/qiskit.synthesis.SuzukiTrotter.synthesize", "stubs/qiskit.tools.backend_monitor", "stubs/qiskit.tools.backend_overview", "stubs/qiskit.tools.job_monitor", "stubs/qiskit.tools.parallel_map", "stubs/qiskit.transpiler.AnalysisPass", "stubs/qiskit.transpiler.AnalysisPass.name", "stubs/qiskit.transpiler.AnalysisPass.run", "stubs/qiskit.transpiler.ConditionalController", "stubs/qiskit.transpiler.ConditionalController.add_flow_controller", "stubs/qiskit.transpiler.ConditionalController.controller_factory", "stubs/qiskit.transpiler.ConditionalController.dump_passes", "stubs/qiskit.transpiler.ConditionalController.remove_flow_controller", "stubs/qiskit.transpiler.CouplingMap", "stubs/qiskit.transpiler.CouplingMap.add_edge", "stubs/qiskit.transpiler.CouplingMap.add_physical_qubit", "stubs/qiskit.transpiler.CouplingMap.compute_distance_matrix", "stubs/qiskit.transpiler.CouplingMap.distance", "stubs/qiskit.transpiler.CouplingMap.draw", "stubs/qiskit.transpiler.CouplingMap.from_full", "stubs/qiskit.transpiler.CouplingMap.from_grid", "stubs/qiskit.transpiler.CouplingMap.from_heavy_hex", "stubs/qiskit.transpiler.CouplingMap.from_heavy_square", "stubs/qiskit.transpiler.CouplingMap.from_hexagonal_lattice", "stubs/qiskit.transpiler.CouplingMap.from_line", "stubs/qiskit.transpiler.CouplingMap.from_ring", "stubs/qiskit.transpiler.CouplingMap.get_edges", "stubs/qiskit.transpiler.CouplingMap.is_connected", "stubs/qiskit.transpiler.CouplingMap.largest_connected_component", "stubs/qiskit.transpiler.CouplingMap.make_symmetric", "stubs/qiskit.transpiler.CouplingMap.neighbors", "stubs/qiskit.transpiler.CouplingMap.reduce", "stubs/qiskit.transpiler.CouplingMap.shortest_undirected_path", "stubs/qiskit.transpiler.CouplingMap.size", "stubs/qiskit.transpiler.CouplingMap.subgraph", "stubs/qiskit.transpiler.DoWhileController", "stubs/qiskit.transpiler.DoWhileController.add_flow_controller", "stubs/qiskit.transpiler.DoWhileController.controller_factory", "stubs/qiskit.transpiler.DoWhileController.dump_passes", "stubs/qiskit.transpiler.DoWhileController.remove_flow_controller", "stubs/qiskit.transpiler.FencedDAGCircuit", "stubs/qiskit.transpiler.FencedPropertySet", "stubs/qiskit.transpiler.FlowController", "stubs/qiskit.transpiler.FlowController.add_flow_controller", "stubs/qiskit.transpiler.FlowController.controller_factory", "stubs/qiskit.transpiler.FlowController.dump_passes", "stubs/qiskit.transpiler.FlowController.remove_flow_controller", "stubs/qiskit.transpiler.InstructionDurations", "stubs/qiskit.transpiler.InstructionDurations.from_backend", "stubs/qiskit.transpiler.InstructionDurations.get", "stubs/qiskit.transpiler.InstructionDurations.units_used", "stubs/qiskit.transpiler.InstructionDurations.update", "stubs/qiskit.transpiler.InstructionProperties", "stubs/qiskit.transpiler.Layout", "stubs/qiskit.transpiler.Layout.add", "stubs/qiskit.transpiler.Layout.add_register", "stubs/qiskit.transpiler.Layout.combine_into_edge_map", "stubs/qiskit.transpiler.Layout.copy", "stubs/qiskit.transpiler.Layout.from_dict", "stubs/qiskit.transpiler.Layout.from_intlist", "stubs/qiskit.transpiler.Layout.from_qubit_list", "stubs/qiskit.transpiler.Layout.generate_trivial_layout", "stubs/qiskit.transpiler.Layout.get_physical_bits", "stubs/qiskit.transpiler.Layout.get_registers", "stubs/qiskit.transpiler.Layout.get_virtual_bits", "stubs/qiskit.transpiler.Layout.order_based_on_type", "stubs/qiskit.transpiler.Layout.reorder_bits", "stubs/qiskit.transpiler.Layout.swap", "stubs/qiskit.transpiler.PassManager", "stubs/qiskit.transpiler.PassManager.append", "stubs/qiskit.transpiler.PassManager.draw", "stubs/qiskit.transpiler.PassManager.passes", "stubs/qiskit.transpiler.PassManager.remove", "stubs/qiskit.transpiler.PassManager.replace", "stubs/qiskit.transpiler.PassManager.run", "stubs/qiskit.transpiler.PassManagerConfig", "stubs/qiskit.transpiler.PassManagerConfig.from_backend", "stubs/qiskit.transpiler.PropertySet", "stubs/qiskit.transpiler.PropertySet.clear", "stubs/qiskit.transpiler.PropertySet.copy", "stubs/qiskit.transpiler.PropertySet.fromkeys", "stubs/qiskit.transpiler.PropertySet.get", "stubs/qiskit.transpiler.PropertySet.items", "stubs/qiskit.transpiler.PropertySet.keys", "stubs/qiskit.transpiler.PropertySet.pop", "stubs/qiskit.transpiler.PropertySet.popitem", "stubs/qiskit.transpiler.PropertySet.setdefault", "stubs/qiskit.transpiler.PropertySet.update", "stubs/qiskit.transpiler.PropertySet.values", "stubs/qiskit.transpiler.StagedPassManager", "stubs/qiskit.transpiler.StagedPassManager.append", "stubs/qiskit.transpiler.StagedPassManager.draw", "stubs/qiskit.transpiler.StagedPassManager.passes", "stubs/qiskit.transpiler.StagedPassManager.remove", "stubs/qiskit.transpiler.StagedPassManager.replace", "stubs/qiskit.transpiler.StagedPassManager.run", "stubs/qiskit.transpiler.Target", "stubs/qiskit.transpiler.Target.add_instruction", "stubs/qiskit.transpiler.Target.build_coupling_map", "stubs/qiskit.transpiler.Target.durations", "stubs/qiskit.transpiler.Target.get", "stubs/qiskit.transpiler.Target.get_non_global_operation_names", "stubs/qiskit.transpiler.Target.instruction_properties", "stubs/qiskit.transpiler.Target.instruction_schedule_map", "stubs/qiskit.transpiler.Target.instruction_supported", "stubs/qiskit.transpiler.Target.items", "stubs/qiskit.transpiler.Target.keys", "stubs/qiskit.transpiler.Target.operation_from_name", "stubs/qiskit.transpiler.Target.operation_names_for_qargs", "stubs/qiskit.transpiler.Target.operations_for_qargs", "stubs/qiskit.transpiler.Target.qargs_for_operation_name", "stubs/qiskit.transpiler.Target.timing_constraints", "stubs/qiskit.transpiler.Target.update_from_instruction_schedule_map", "stubs/qiskit.transpiler.Target.update_instruction_properties", "stubs/qiskit.transpiler.Target.values", "stubs/qiskit.transpiler.TransformationPass", "stubs/qiskit.transpiler.TransformationPass.name", "stubs/qiskit.transpiler.TransformationPass.run", "stubs/qiskit.transpiler.TranspilerAccessError", "stubs/qiskit.transpiler.TranspilerError", "stubs/qiskit.transpiler.passes.ALAPSchedule", "stubs/qiskit.transpiler.passes.ALAPSchedule.name", "stubs/qiskit.transpiler.passes.ALAPSchedule.run", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis.name", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis.run", "stubs/qiskit.transpiler.passes.ASAPSchedule", "stubs/qiskit.transpiler.passes.ASAPSchedule.name", "stubs/qiskit.transpiler.passes.ASAPSchedule.run", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis.name", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis.run", "stubs/qiskit.transpiler.passes.AlignMeasures", "stubs/qiskit.transpiler.passes.AlignMeasures.name", "stubs/qiskit.transpiler.passes.AlignMeasures.run", "stubs/qiskit.transpiler.passes.ApplyLayout", "stubs/qiskit.transpiler.passes.ApplyLayout.name", "stubs/qiskit.transpiler.passes.ApplyLayout.run", "stubs/qiskit.transpiler.passes.BIPMapping", "stubs/qiskit.transpiler.passes.BIPMapping.name", "stubs/qiskit.transpiler.passes.BIPMapping.run", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.name", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.run", "stubs/qiskit.transpiler.passes.BasicSwap", "stubs/qiskit.transpiler.passes.BasicSwap.name", "stubs/qiskit.transpiler.passes.BasicSwap.run", "stubs/qiskit.transpiler.passes.BasisTranslator", "stubs/qiskit.transpiler.passes.BasisTranslator.name", "stubs/qiskit.transpiler.passes.BasisTranslator.run", "stubs/qiskit.transpiler.passes.CSPLayout", "stubs/qiskit.transpiler.passes.CSPLayout.name", "stubs/qiskit.transpiler.passes.CSPLayout.run", "stubs/qiskit.transpiler.passes.CXCancellation", "stubs/qiskit.transpiler.passes.CXCancellation.name", "stubs/qiskit.transpiler.passes.CXCancellation.run", "stubs/qiskit.transpiler.passes.CXDirection", "stubs/qiskit.transpiler.passes.CXDirection.name", "stubs/qiskit.transpiler.passes.CXDirection.run", "stubs/qiskit.transpiler.passes.CheckCXDirection", "stubs/qiskit.transpiler.passes.CheckCXDirection.name", "stubs/qiskit.transpiler.passes.CheckCXDirection.run", "stubs/qiskit.transpiler.passes.CheckGateDirection", "stubs/qiskit.transpiler.passes.CheckGateDirection.name", "stubs/qiskit.transpiler.passes.CheckGateDirection.run", "stubs/qiskit.transpiler.passes.CheckMap", "stubs/qiskit.transpiler.passes.CheckMap.name", "stubs/qiskit.transpiler.passes.CheckMap.run", "stubs/qiskit.transpiler.passes.Collect1qRuns", "stubs/qiskit.transpiler.passes.Collect1qRuns.name", "stubs/qiskit.transpiler.passes.Collect1qRuns.run", "stubs/qiskit.transpiler.passes.Collect2qBlocks", "stubs/qiskit.transpiler.passes.Collect2qBlocks.name", "stubs/qiskit.transpiler.passes.Collect2qBlocks.run", "stubs/qiskit.transpiler.passes.CollectLinearFunctions", "stubs/qiskit.transpiler.passes.CollectLinearFunctions.name", "stubs/qiskit.transpiler.passes.CollectLinearFunctions.run", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.find_set", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.name", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.run", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.union_set", "stubs/qiskit.transpiler.passes.CommutationAnalysis", "stubs/qiskit.transpiler.passes.CommutationAnalysis.name", "stubs/qiskit.transpiler.passes.CommutationAnalysis.run", "stubs/qiskit.transpiler.passes.CommutativeCancellation", "stubs/qiskit.transpiler.passes.CommutativeCancellation.name", "stubs/qiskit.transpiler.passes.CommutativeCancellation.run", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.name", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.run", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.swap_decompose", "stubs/qiskit.transpiler.passes.ConsolidateBlocks", "stubs/qiskit.transpiler.passes.ConsolidateBlocks.name", "stubs/qiskit.transpiler.passes.ConsolidateBlocks.run", "stubs/qiskit.transpiler.passes.ConstrainedReschedule", "stubs/qiskit.transpiler.passes.ConstrainedReschedule.name", "stubs/qiskit.transpiler.passes.ConstrainedReschedule.run", "stubs/qiskit.transpiler.passes.ContainsInstruction", "stubs/qiskit.transpiler.passes.ContainsInstruction.name", "stubs/qiskit.transpiler.passes.ContainsInstruction.run", "stubs/qiskit.transpiler.passes.CountOps", "stubs/qiskit.transpiler.passes.CountOps.name", "stubs/qiskit.transpiler.passes.CountOps.run", "stubs/qiskit.transpiler.passes.CountOpsLongestPath", "stubs/qiskit.transpiler.passes.CountOpsLongestPath.name", "stubs/qiskit.transpiler.passes.CountOpsLongestPath.run", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.assign_gate_id", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.basic_bounds", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_dag_dependency", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_xtalk_dependency", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.coherence_constraints", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_updated_dag", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_z3_vars", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.cx_tuple", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.enforce_schedule_on_dag", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_crosstalk_relevant_sets", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_dag_overlap_sets", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_solution", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.fidelity_constraints", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.filter_candidates", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.find_layer", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.gate_tuple", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.generate_barriers", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.is_significant_xtalk", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.name", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.objective_function", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.parse_backend_properties", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.powerset", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.r2f", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.reset", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.run", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.scheduling_constraints", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.singleq_tuple", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.solve_optimization", "stubs/qiskit.transpiler.passes.DAGFixedPoint", "stubs/qiskit.transpiler.passes.DAGFixedPoint.name", "stubs/qiskit.transpiler.passes.DAGFixedPoint.run", "stubs/qiskit.transpiler.passes.DAGLongestPath", "stubs/qiskit.transpiler.passes.DAGLongestPath.name", "stubs/qiskit.transpiler.passes.DAGLongestPath.run", "stubs/qiskit.transpiler.passes.Decompose", "stubs/qiskit.transpiler.passes.Decompose.name", "stubs/qiskit.transpiler.passes.Decompose.run", "stubs/qiskit.transpiler.passes.DenseLayout", "stubs/qiskit.transpiler.passes.DenseLayout.name", "stubs/qiskit.transpiler.passes.DenseLayout.run", "stubs/qiskit.transpiler.passes.Depth", "stubs/qiskit.transpiler.passes.Depth.name", "stubs/qiskit.transpiler.passes.Depth.run", "stubs/qiskit.transpiler.passes.DynamicalDecoupling", "stubs/qiskit.transpiler.passes.DynamicalDecoupling.name", "stubs/qiskit.transpiler.passes.DynamicalDecoupling.run", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition.name", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition.run", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla.name", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla.run", "stubs/qiskit.transpiler.passes.FixedPoint", "stubs/qiskit.transpiler.passes.FixedPoint.name", "stubs/qiskit.transpiler.passes.FixedPoint.run", "stubs/qiskit.transpiler.passes.FullAncillaAllocation", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.name", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.run", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.validate_layout", "stubs/qiskit.transpiler.passes.GateDirection", "stubs/qiskit.transpiler.passes.GateDirection.name", "stubs/qiskit.transpiler.passes.GateDirection.run", "stubs/qiskit.transpiler.passes.GatesInBasis", "stubs/qiskit.transpiler.passes.GatesInBasis.name", "stubs/qiskit.transpiler.passes.GatesInBasis.run", "stubs/qiskit.transpiler.passes.HoareOptimizer", "stubs/qiskit.transpiler.passes.HoareOptimizer.name", "stubs/qiskit.transpiler.passes.HoareOptimizer.run", "stubs/qiskit.transpiler.passes.InstructionDurationCheck", "stubs/qiskit.transpiler.passes.InstructionDurationCheck.name", "stubs/qiskit.transpiler.passes.InstructionDurationCheck.run", "stubs/qiskit.transpiler.passes.InverseCancellation", "stubs/qiskit.transpiler.passes.InverseCancellation.name", "stubs/qiskit.transpiler.passes.InverseCancellation.run", "stubs/qiskit.transpiler.passes.Layout2qDistance", "stubs/qiskit.transpiler.passes.Layout2qDistance.name", "stubs/qiskit.transpiler.passes.Layout2qDistance.run", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis.name", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis.run", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations.name", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations.run", "stubs/qiskit.transpiler.passes.LookaheadSwap", "stubs/qiskit.transpiler.passes.LookaheadSwap.name", "stubs/qiskit.transpiler.passes.LookaheadSwap.run", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers.name", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers.run", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout.name", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout.run", "stubs/qiskit.transpiler.passes.NumTensorFactors", "stubs/qiskit.transpiler.passes.NumTensorFactors.name", "stubs/qiskit.transpiler.passes.NumTensorFactors.run", "stubs/qiskit.transpiler.passes.Optimize1qGates", "stubs/qiskit.transpiler.passes.Optimize1qGates.compose_u3", "stubs/qiskit.transpiler.passes.Optimize1qGates.name", "stubs/qiskit.transpiler.passes.Optimize1qGates.run", "stubs/qiskit.transpiler.passes.Optimize1qGates.yzy_to_zyz", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition.name", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition.run", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.name", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.run", "stubs/qiskit.transpiler.passes.PadDelay", "stubs/qiskit.transpiler.passes.PadDelay.name", "stubs/qiskit.transpiler.passes.PadDelay.run", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling.name", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling.run", "stubs/qiskit.transpiler.passes.PulseGates", "stubs/qiskit.transpiler.passes.PulseGates.get_calibration", "stubs/qiskit.transpiler.passes.PulseGates.name", "stubs/qiskit.transpiler.passes.PulseGates.run", "stubs/qiskit.transpiler.passes.PulseGates.supported", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.get_calibration", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.name", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.rescale_cr_inst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.run", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.supported", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.get_calibration", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.name", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.rescale_cr_inst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.run", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.supported", "stubs/qiskit.transpiler.passes.RemoveBarriers", "stubs/qiskit.transpiler.passes.RemoveBarriers.name", "stubs/qiskit.transpiler.passes.RemoveBarriers.run", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.name", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.run", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements.name", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements.run", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState.name", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState.run", "stubs/qiskit.transpiler.passes.SabreLayout", "stubs/qiskit.transpiler.passes.SabreLayout.name", "stubs/qiskit.transpiler.passes.SabreLayout.run", "stubs/qiskit.transpiler.passes.SabreSwap", "stubs/qiskit.transpiler.passes.SabreSwap.name", "stubs/qiskit.transpiler.passes.SabreSwap.run", "stubs/qiskit.transpiler.passes.SetIOLatency", "stubs/qiskit.transpiler.passes.SetIOLatency.name", "stubs/qiskit.transpiler.passes.SetIOLatency.run", "stubs/qiskit.transpiler.passes.SetLayout", "stubs/qiskit.transpiler.passes.SetLayout.name", "stubs/qiskit.transpiler.passes.SetLayout.run", "stubs/qiskit.transpiler.passes.Size", "stubs/qiskit.transpiler.passes.Size.name", "stubs/qiskit.transpiler.passes.Size.run", "stubs/qiskit.transpiler.passes.StochasticSwap", "stubs/qiskit.transpiler.passes.StochasticSwap.name", "stubs/qiskit.transpiler.passes.StochasticSwap.run", "stubs/qiskit.transpiler.passes.TemplateOptimization", "stubs/qiskit.transpiler.passes.TemplateOptimization.name", "stubs/qiskit.transpiler.passes.TemplateOptimization.run", "stubs/qiskit.transpiler.passes.TimeUnitConversion", "stubs/qiskit.transpiler.passes.TimeUnitConversion.name", "stubs/qiskit.transpiler.passes.TimeUnitConversion.run", "stubs/qiskit.transpiler.passes.TrivialLayout", "stubs/qiskit.transpiler.passes.TrivialLayout.name", "stubs/qiskit.transpiler.passes.TrivialLayout.run", "stubs/qiskit.transpiler.passes.UnitarySynthesis", "stubs/qiskit.transpiler.passes.UnitarySynthesis.name", "stubs/qiskit.transpiler.passes.UnitarySynthesis.run", "stubs/qiskit.transpiler.passes.Unroll3qOrMore", "stubs/qiskit.transpiler.passes.Unroll3qOrMore.name", "stubs/qiskit.transpiler.passes.Unroll3qOrMore.run", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions.name", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions.run", "stubs/qiskit.transpiler.passes.Unroller", "stubs/qiskit.transpiler.passes.Unroller.name", "stubs/qiskit.transpiler.passes.Unroller.run", "stubs/qiskit.transpiler.passes.VF2Layout", "stubs/qiskit.transpiler.passes.VF2Layout.name", "stubs/qiskit.transpiler.passes.VF2Layout.run", "stubs/qiskit.transpiler.passes.VF2PostLayout", "stubs/qiskit.transpiler.passes.VF2PostLayout.name", "stubs/qiskit.transpiler.passes.VF2PostLayout.run", "stubs/qiskit.transpiler.passes.ValidatePulseGates", "stubs/qiskit.transpiler.passes.ValidatePulseGates.name", "stubs/qiskit.transpiler.passes.ValidatePulseGates.run", "stubs/qiskit.transpiler.passes.Width", "stubs/qiskit.transpiler.passes.Width.name", "stubs/qiskit.transpiler.passes.Width.run", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin.run", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPluginManager", "stubs/qiskit.transpiler.passes.synthesis.plugin.unitary_synthesis_plugin_names", "stubs/qiskit.transpiler.preset_passmanagers.generate_preset_pass_manager", "stubs/qiskit.transpiler.preset_passmanagers.level_0_pass_manager", "stubs/qiskit.transpiler.preset_passmanagers.level_1_pass_manager", "stubs/qiskit.transpiler.preset_passmanagers.level_2_pass_manager", "stubs/qiskit.transpiler.preset_passmanagers.level_3_pass_manager", "stubs/qiskit.transpiler.synthesis.aqc.AQC", "stubs/qiskit.transpiler.synthesis.aqc.AQC.compile_unitary", "stubs/qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin", "stubs/qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin.run", "stubs/qiskit.transpiler.synthesis.aqc.ApproximateCircuit", "stubs/qiskit.transpiler.synthesis.aqc.ApproximateCircuit.build", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective.gradient", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective.objective", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit.build", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitObjective", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.gradient", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.objective", "stubs/qiskit.utils.QuantumInstance", "stubs/qiskit.utils.QuantumInstance.assemble", "stubs/qiskit.utils.QuantumInstance.cals_matrix", "stubs/qiskit.utils.QuantumInstance.execute", "stubs/qiskit.utils.QuantumInstance.maybe_refresh_cals_matrix", "stubs/qiskit.utils.QuantumInstance.reset_execution_results", "stubs/qiskit.utils.QuantumInstance.set_config", "stubs/qiskit.utils.QuantumInstance.transpile", "stubs/qiskit.utils.algorithm_globals", "stubs/qiskit.utils.apply_prefix", "stubs/qiskit.utils.deprecate_arguments", "stubs/qiskit.utils.deprecate_function", "stubs/qiskit.utils.detach_prefix", "stubs/qiskit.utils.get_entangler_map", "stubs/qiskit.utils.has_aer", "stubs/qiskit.utils.has_ibmq", "stubs/qiskit.utils.is_main_process", "stubs/qiskit.utils.local_hardware_info", "stubs/qiskit.utils.mitigation.CompleteMeasFitter", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.add_data", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.readout_fidelity", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.subset_fitter", "stubs/qiskit.utils.mitigation.TensoredMeasFitter", "stubs/qiskit.utils.mitigation.TensoredMeasFitter.add_data", "stubs/qiskit.utils.mitigation.TensoredMeasFitter.readout_fidelity", "stubs/qiskit.utils.name_args", "stubs/qiskit.utils.summarize_circuits", "stubs/qiskit.utils.validate_entangler_map", "stubs/qiskit.utils.wrap_method", "stubs/qiskit.visualization.VisualizationError", "stubs/qiskit.visualization.array_to_latex", "stubs/qiskit.visualization.circuit_drawer", "stubs/qiskit.visualization.dag_drawer", "stubs/qiskit.visualization.pass_manager_drawer", "stubs/qiskit.visualization.plot_bloch_multivector", "stubs/qiskit.visualization.plot_bloch_vector", "stubs/qiskit.visualization.plot_circuit_layout", "stubs/qiskit.visualization.plot_coupling_map", "stubs/qiskit.visualization.plot_error_map", "stubs/qiskit.visualization.plot_gate_map", "stubs/qiskit.visualization.plot_histogram", "stubs/qiskit.visualization.plot_state_city", "stubs/qiskit.visualization.plot_state_hinton", "stubs/qiskit.visualization.plot_state_paulivec", "stubs/qiskit.visualization.plot_state_qsphere", "stubs/qiskit.visualization.pulse_v2.IQXDebugging", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.clear", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.copy", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.fromkeys", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.get", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.items", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.keys", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.pop", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.popitem", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.setdefault", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.update", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.values", "stubs/qiskit.visualization.pulse_v2.IQXSimple", "stubs/qiskit.visualization.pulse_v2.IQXSimple.clear", "stubs/qiskit.visualization.pulse_v2.IQXSimple.copy", "stubs/qiskit.visualization.pulse_v2.IQXSimple.fromkeys", "stubs/qiskit.visualization.pulse_v2.IQXSimple.get", "stubs/qiskit.visualization.pulse_v2.IQXSimple.items", "stubs/qiskit.visualization.pulse_v2.IQXSimple.keys", "stubs/qiskit.visualization.pulse_v2.IQXSimple.pop", "stubs/qiskit.visualization.pulse_v2.IQXSimple.popitem", "stubs/qiskit.visualization.pulse_v2.IQXSimple.setdefault", "stubs/qiskit.visualization.pulse_v2.IQXSimple.update", "stubs/qiskit.visualization.pulse_v2.IQXSimple.values", "stubs/qiskit.visualization.pulse_v2.IQXStandard", "stubs/qiskit.visualization.pulse_v2.IQXStandard.clear", "stubs/qiskit.visualization.pulse_v2.IQXStandard.copy", "stubs/qiskit.visualization.pulse_v2.IQXStandard.fromkeys", "stubs/qiskit.visualization.pulse_v2.IQXStandard.get", "stubs/qiskit.visualization.pulse_v2.IQXStandard.items", "stubs/qiskit.visualization.pulse_v2.IQXStandard.keys", "stubs/qiskit.visualization.pulse_v2.IQXStandard.pop", "stubs/qiskit.visualization.pulse_v2.IQXStandard.popitem", "stubs/qiskit.visualization.pulse_v2.IQXStandard.setdefault", "stubs/qiskit.visualization.pulse_v2.IQXStandard.update", "stubs/qiskit.visualization.pulse_v2.IQXStandard.values", "stubs/qiskit.visualization.pulse_v2.draw", "stubs/qiskit.visualization.qcstyle.DefaultStyle", "stubs/qiskit.visualization.timeline.draw", "stubs/qiskit.visualization.timeline_drawer", "stubs/qiskit.visualization.visualize_transition", "tutorials", "tutorials/algorithms/01_algorithms_introduction", "tutorials/algorithms/02_vqe_convergence", "tutorials/algorithms/03_vqe_simulation_with_noise", "tutorials/algorithms/04_vqe_advanced", "tutorials/algorithms/05_qaoa", "tutorials/algorithms/06_grover", "tutorials/algorithms/07_grover_examples", "tutorials/algorithms/08_factorizers", "tutorials/algorithms/09_IQPE", "tutorials/algorithms/index", "tutorials/circuits/01_circuit_basics", "tutorials/circuits/1_getting_started_with_qiskit", "tutorials/circuits/2_plotting_data_in_qiskit", "tutorials/circuits/3_summary_of_quantum_operations", "tutorials/circuits/index", "tutorials/circuits_advanced/01_advanced_circuits", "tutorials/circuits_advanced/02_operators_overview", "tutorials/circuits_advanced/03_advanced_circuit_visualization", "tutorials/circuits_advanced/04_transpiler_passes_and_passmanager", "tutorials/circuits_advanced/05_pulse_gates", "tutorials/circuits_advanced/06_building_pulse_schedules", "tutorials/circuits_advanced/07_pulse_scheduler", "tutorials/circuits_advanced/08_gathering_system_information", "tutorials/circuits_advanced/index", "tutorials/operators/01_operator_flow", "tutorials/operators/02_gradients_framework", "tutorials/operators/index", "tutorials/simulators/1_aer_provider", "tutorials/simulators/2_device_noise_simulation", "tutorials/simulators/3_building_noise_models", "tutorials/simulators/4_custom_gate_noise", "tutorials/simulators/5_noise_transformation", "tutorials/simulators/6_extended_stabilizer_tutorial", "tutorials/simulators/7_matrix_product_state_method", "tutorials/simulators/index", "tutorials/textbook/01_IQPE", "tutorials/textbook/index"], "filenames": ["apidoc/aer.rst", "apidoc/aer_extensions.rst", "apidoc/aer_jobs.rst", "apidoc/aer_library.rst", "apidoc/aer_noise.rst", "apidoc/aer_provider.rst", "apidoc/aer_pulse.rst", "apidoc/aer_utils.rst", "apidoc/algorithms.rst", "apidoc/assembler.rst", "apidoc/circuit.rst", "apidoc/circuit_library.rst", "apidoc/classicalfunction.rst", "apidoc/compiler.rst", "apidoc/converters.rst", "apidoc/dagcircuit.rst", "apidoc/execute.rst", "apidoc/extensions.rst", "apidoc/ibmq-provider.rst", "apidoc/ibmq_credentials.rst", "apidoc/ibmq_experiment.rst", "apidoc/ibmq_job.rst", "apidoc/ibmq_jupyter.rst", "apidoc/ibmq_managed.rst", "apidoc/ibmq_provider.rst", "apidoc/ibmq_runtime.rst", "apidoc/ibmq_utils.rst", "apidoc/ibmq_visualization.rst", "apidoc/opflow.rst", "apidoc/parallel.rst", "apidoc/primitives.rst", "apidoc/providers.rst", "apidoc/providers_basicaer.rst", "apidoc/providers_fake_provider.rst", "apidoc/providers_models.rst", "apidoc/pulse.rst", "apidoc/qasm.rst", "apidoc/qasm3.rst", "apidoc/qobj.rst", "apidoc/qpy.rst", "apidoc/quantum_info.rst", "apidoc/result.rst", "apidoc/scheduler.rst", "apidoc/synthesis.rst", "apidoc/synthesis_aqc.rst", "apidoc/terra.rst", "apidoc/tools.rst", "apidoc/tools_jupyter.rst", "apidoc/transpiler.rst", "apidoc/transpiler_builtin_plugins.rst", "apidoc/transpiler_passes.rst", "apidoc/transpiler_plugins.rst", "apidoc/transpiler_preset.rst", "apidoc/utils.rst", "apidoc/utils_mitigation.rst", "apidoc/visualization.rst", "configuration.rst", "contributing_to_qiskit.rst", "faq.rst", "getting_started.rst", "index.rst", "install.rst", "intro_tutorial1.rst", "qc_intro.rst", "release_notes.rst", "stubs/qiskit.algorithms.AlgorithmError.rst", "stubs/qiskit.algorithms.AmplificationProblem.rst", "stubs/qiskit.algorithms.AmplitudeAmplifier.rst", "stubs/qiskit.algorithms.AmplitudeAmplifier.amplify.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.compute_confidence_interval.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.compute_mle.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.construct_circuit.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.estimate.rst", "stubs/qiskit.algorithms.AmplitudeEstimation.evaluate_measurements.rst", "stubs/qiskit.algorithms.AmplitudeEstimationResult.rst", "stubs/qiskit.algorithms.AmplitudeEstimationResult.combine.rst", "stubs/qiskit.algorithms.AmplitudeEstimator.rst", "stubs/qiskit.algorithms.AmplitudeEstimator.estimate.rst", "stubs/qiskit.algorithms.AmplitudeEstimatorResult.rst", "stubs/qiskit.algorithms.AmplitudeEstimatorResult.combine.rst", "stubs/qiskit.algorithms.Eigensolver.rst", "stubs/qiskit.algorithms.Eigensolver.compute_eigenvalues.rst", "stubs/qiskit.algorithms.Eigensolver.supports_aux_operators.rst", "stubs/qiskit.algorithms.EigensolverResult.rst", "stubs/qiskit.algorithms.EigensolverResult.combine.rst", "stubs/qiskit.algorithms.EstimationProblem.rst", "stubs/qiskit.algorithms.EstimationProblem.rescale.rst", "stubs/qiskit.algorithms.EvolutionProblem.rst", "stubs/qiskit.algorithms.EvolutionProblem.validate_params.rst", "stubs/qiskit.algorithms.EvolutionResult.rst", "stubs/qiskit.algorithms.EvolutionResult.combine.rst", "stubs/qiskit.algorithms.FasterAmplitudeEstimation.rst", "stubs/qiskit.algorithms.FasterAmplitudeEstimation.construct_circuit.rst", "stubs/qiskit.algorithms.FasterAmplitudeEstimation.estimate.rst", "stubs/qiskit.algorithms.FasterAmplitudeEstimationResult.rst", "stubs/qiskit.algorithms.FasterAmplitudeEstimationResult.combine.rst", "stubs/qiskit.algorithms.Grover.rst", "stubs/qiskit.algorithms.Grover.amplify.rst", "stubs/qiskit.algorithms.Grover.construct_circuit.rst", "stubs/qiskit.algorithms.Grover.optimal_num_iterations.rst", "stubs/qiskit.algorithms.GroverResult.rst", "stubs/qiskit.algorithms.GroverResult.combine.rst", "stubs/qiskit.algorithms.HamiltonianPhaseEstimation.rst", "stubs/qiskit.algorithms.HamiltonianPhaseEstimation.estimate.rst", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult.rst", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult.combine.rst", "stubs/qiskit.algorithms.HamiltonianPhaseEstimationResult.filter_phases.rst", "stubs/qiskit.algorithms.ImaginaryEvolver.rst", "stubs/qiskit.algorithms.ImaginaryEvolver.evolve.rst", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation.rst", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation.construct_circuit.rst", "stubs/qiskit.algorithms.IterativeAmplitudeEstimation.estimate.rst", "stubs/qiskit.algorithms.IterativeAmplitudeEstimationResult.rst", "stubs/qiskit.algorithms.IterativeAmplitudeEstimationResult.combine.rst", "stubs/qiskit.algorithms.IterativePhaseEstimation.rst", "stubs/qiskit.algorithms.IterativePhaseEstimation.construct_circuit.rst", "stubs/qiskit.algorithms.IterativePhaseEstimation.estimate.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_confidence_interval.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_mle.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.construct_circuits.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.estimate.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult.rst", "stubs/qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult.combine.rst", "stubs/qiskit.algorithms.MinimumEigensolver.rst", "stubs/qiskit.algorithms.MinimumEigensolver.compute_minimum_eigenvalue.rst", "stubs/qiskit.algorithms.MinimumEigensolver.supports_aux_operators.rst", "stubs/qiskit.algorithms.MinimumEigensolverResult.rst", "stubs/qiskit.algorithms.MinimumEigensolverResult.combine.rst", "stubs/qiskit.algorithms.NumPyEigensolver.rst", "stubs/qiskit.algorithms.NumPyEigensolver.compute_eigenvalues.rst", "stubs/qiskit.algorithms.NumPyEigensolver.supports_aux_operators.rst", "stubs/qiskit.algorithms.NumPyMinimumEigensolver.rst", "stubs/qiskit.algorithms.NumPyMinimumEigensolver.compute_minimum_eigenvalue.rst", "stubs/qiskit.algorithms.NumPyMinimumEigensolver.supports_aux_operators.rst", "stubs/qiskit.algorithms.PhaseEstimation.rst", "stubs/qiskit.algorithms.PhaseEstimation.construct_circuit.rst", "stubs/qiskit.algorithms.PhaseEstimation.estimate.rst", "stubs/qiskit.algorithms.PhaseEstimation.estimate_from_pe_circuit.rst", "stubs/qiskit.algorithms.PhaseEstimationResult.rst", "stubs/qiskit.algorithms.PhaseEstimationResult.combine.rst", "stubs/qiskit.algorithms.PhaseEstimationResult.filter_phases.rst", "stubs/qiskit.algorithms.PhaseEstimationScale.rst", "stubs/qiskit.algorithms.PhaseEstimationScale.from_pauli_sum.rst", "stubs/qiskit.algorithms.PhaseEstimationScale.scale_phase.rst", "stubs/qiskit.algorithms.PhaseEstimationScale.scale_phases.rst", "stubs/qiskit.algorithms.QAOA.rst", "stubs/qiskit.algorithms.QAOA.compute_minimum_eigenvalue.rst", "stubs/qiskit.algorithms.QAOA.construct_circuit.rst", "stubs/qiskit.algorithms.QAOA.construct_expectation.rst", "stubs/qiskit.algorithms.QAOA.get_energy_evaluation.rst", "stubs/qiskit.algorithms.QAOA.print_settings.rst", "stubs/qiskit.algorithms.QAOA.supports_aux_operators.rst", "stubs/qiskit.algorithms.RealEvolver.rst", "stubs/qiskit.algorithms.RealEvolver.evolve.rst", "stubs/qiskit.algorithms.Shor.rst", "stubs/qiskit.algorithms.Shor.construct_circuit.rst", "stubs/qiskit.algorithms.Shor.factor.rst", "stubs/qiskit.algorithms.Shor.modinv.rst", "stubs/qiskit.algorithms.ShorResult.rst", "stubs/qiskit.algorithms.ShorResult.combine.rst", "stubs/qiskit.algorithms.TrotterQRTE.rst", "stubs/qiskit.algorithms.TrotterQRTE.evolve.rst", "stubs/qiskit.algorithms.TrotterQRTE.supports_aux_operators.rst", "stubs/qiskit.algorithms.VQD.rst", "stubs/qiskit.algorithms.VQD.compute_eigenvalues.rst", "stubs/qiskit.algorithms.VQD.construct_circuit.rst", "stubs/qiskit.algorithms.VQD.construct_expectation.rst", "stubs/qiskit.algorithms.VQD.get_energy_evaluation.rst", "stubs/qiskit.algorithms.VQD.print_settings.rst", "stubs/qiskit.algorithms.VQD.supports_aux_operators.rst", "stubs/qiskit.algorithms.VQE.rst", "stubs/qiskit.algorithms.VQE.compute_minimum_eigenvalue.rst", "stubs/qiskit.algorithms.VQE.construct_circuit.rst", "stubs/qiskit.algorithms.VQE.construct_expectation.rst", "stubs/qiskit.algorithms.VQE.get_energy_evaluation.rst", "stubs/qiskit.algorithms.VQE.print_settings.rst", "stubs/qiskit.algorithms.VQE.supports_aux_operators.rst", "stubs/qiskit.algorithms.eval_observables.rst", "stubs/qiskit.algorithms.linear_solvers.rst", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.rst", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.evaluate_classically.rst", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.observable.rst", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.observable_circuit.rst", "stubs/qiskit.algorithms.linear_solvers.AbsoluteAverage.post_processing.rst", "stubs/qiskit.algorithms.linear_solvers.HHL.rst", "stubs/qiskit.algorithms.linear_solvers.HHL.construct_circuit.rst", "stubs/qiskit.algorithms.linear_solvers.HHL.solve.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSolver.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSolver.solve.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSolverResult.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSolverResult.combine.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_bits.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_calibration.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_register.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.append.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.assign_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.barrier.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.bind_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.break_loop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cast.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ccx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ch.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.clear.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_instances.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_prefix.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cnot.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.combine.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.compose.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.condition_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.continue_loop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.control.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy_empty_like.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.count_ops.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cp.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.crx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cry.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.crz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cswap.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.csx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu1.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu3.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cy.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.cz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.dcx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.decompose.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.delay.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.depth.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.diagonal.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.draw.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ecr.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.eigs_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.extend.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.find_bit.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.for_loop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.fredkin.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_file.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_str.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.get_instructions.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.h.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.hamiltonian.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_calibration_for.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_register.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.i.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.id.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_else.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_test.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.initialize.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.inverse.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.iso.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.isometry.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.iswap.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcp.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcry.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mct.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcu1.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_active.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_all.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ms.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_connected_components.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_nonlocal_gates.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_tensor_factors.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_unitary_factors.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.p.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.pauli.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.power.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.prepare_state.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qasm.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_duration.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_start_time.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_stop_time.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.r.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rcccx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rccx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.remove_final_measurements.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.repeat.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reset.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_bits.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_ops.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rv.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rxx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ry.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ryy.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.s.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes_squared.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_clifford.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value_variance.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities_dict.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_state.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector_dict.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_superop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sdg.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_superop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.size.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.squ.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.swap.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.sxdg.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.t.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.tdg.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.tensor.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_gate.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_instruction.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.toffoli.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u1.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u2.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.u3.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.uc.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrx.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucry.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrz.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.unitary.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.while_loop.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.width.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.x.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.y.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemMatrix.z.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.evaluate_classically.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.observable.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.observable_circuit.rst", "stubs/qiskit.algorithms.linear_solvers.LinearSystemObservable.post_processing.rst", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.rst", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.evaluate_classically.rst", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.observable.rst", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.observable_circuit.rst", "stubs/qiskit.algorithms.linear_solvers.MatrixFunctional.post_processing.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyLinearSolver.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyLinearSolver.solve.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_bits.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_calibration.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.add_register.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.append.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.assign_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.barrier.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.bind_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.break_loop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cast.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ccx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ch.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.clear.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cls_instances.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cls_prefix.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cnot.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.combine.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.compose.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.condition_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.continue_loop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.control.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.copy.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.copy_empty_like.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.count_ops.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cp.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.crx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cry.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.crz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cswap.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.csx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu1.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cu3.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cy.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.cz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.dcx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.decompose.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.delay.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.depth.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.diagonal.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.draw.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ecr.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.eigs_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.extend.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.find_bit.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.for_loop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.fredkin.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_file.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_str.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.get_instructions.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.h.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.hamiltonian.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.has_calibration_for.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.has_register.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.i.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.id.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.if_else.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.if_test.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.initialize.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.inverse.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.iso.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.isometry.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.iswap.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcp.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcrx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcry.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcrz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mct.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcu1.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.mcx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure_active.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.measure_all.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ms.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_connected_components.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_nonlocal_gates.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_tensor_factors.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.num_unitary_factors.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.p.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.pauli.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.power.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.prepare_state.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qasm.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_duration.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_start_time.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_stop_time.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.r.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rcccx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rccx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.remove_final_measurements.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.repeat.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reset.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_bits.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_ops.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rv.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rxx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ry.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ryy.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rzx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.rzz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.s.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes_squared.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_clifford.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value_variance.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities_dict.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_state.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector_dict.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_superop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.save_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sdg.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_superop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.set_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.size.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.squ.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.swap.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.sxdg.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.t.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.tdg.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.tensor.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.to_gate.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.to_instruction.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.toffoli.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u1.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u2.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.u3.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.uc.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucrx.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucry.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.ucrz.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.unitary.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.while_loop.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.width.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.x.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.y.rst", "stubs/qiskit.algorithms.linear_solvers.NumPyMatrix.z.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_bits.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_calibration.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_register.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.append.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.assign_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.barrier.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.bind_parameters.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.break_loop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cast.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ccx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ch.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.clear.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_instances.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_prefix.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cnot.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.combine.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.compose.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.condition_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.continue_loop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.control.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy_empty_like.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.count_ops.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cp.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cry.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cswap.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.csx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu1.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu3.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cy.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.dcx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.decompose.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.delay.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.depth.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.diagonal.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.draw.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ecr.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.eigs_bounds.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.extend.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.find_bit.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.for_loop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.fredkin.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_file.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_str.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.get_instructions.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.h.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.hamiltonian.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_calibration_for.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_register.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.i.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.id.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_else.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_test.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.initialize.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.inverse.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iso.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.isometry.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iswap.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcp.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcry.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mct.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcu1.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_active.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_all.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ms.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_connected_components.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_nonlocal_gates.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_tensor_factors.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_unitary_factors.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.p.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.pauli.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.power.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.prepare_state.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qasm.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qbit_argument_conversion.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_duration.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_start_time.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_stop_time.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.r.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rcccx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rccx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.remove_final_measurements.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.repeat.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reset.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_bits.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_ops.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rv.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rxx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ry.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ryy.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.s.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes_squared.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_clifford.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value_variance.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities_dict.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_state.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector_dict.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_superop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sdg.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_matrix_product_state.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_superop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_unitary.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.size.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_density_matrix.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_expectation_value.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_probabilities.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_stabilizer.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_statevector.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.squ.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.swap.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sxdg.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.t.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tdg.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tensor.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_gate.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_instruction.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.toffoli.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u1.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u2.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u3.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.uc.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrx.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucry.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrz.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.unitary.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.while_loop.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.width.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.x.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.y.rst", "stubs/qiskit.algorithms.linear_solvers.TridiagonalToeplitz.z.rst", "stubs/qiskit.algorithms.optimizers.rst", "stubs/qiskit.algorithms.optimizers.ADAM.rst", "stubs/qiskit.algorithms.optimizers.ADAM.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.ADAM.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.ADAM.load_params.rst", "stubs/qiskit.algorithms.optimizers.ADAM.minimize.rst", "stubs/qiskit.algorithms.optimizers.ADAM.print_options.rst", "stubs/qiskit.algorithms.optimizers.ADAM.save_params.rst", "stubs/qiskit.algorithms.optimizers.ADAM.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.ADAM.set_options.rst", "stubs/qiskit.algorithms.optimizers.ADAM.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.AQGD.rst", "stubs/qiskit.algorithms.optimizers.AQGD.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.AQGD.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.AQGD.minimize.rst", "stubs/qiskit.algorithms.optimizers.AQGD.print_options.rst", "stubs/qiskit.algorithms.optimizers.AQGD.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.AQGD.set_options.rst", "stubs/qiskit.algorithms.optimizers.AQGD.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.minimize.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.print_options.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.set_options.rst", "stubs/qiskit.algorithms.optimizers.BOBYQA.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.CG.rst", "stubs/qiskit.algorithms.optimizers.CG.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.CG.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.CG.minimize.rst", "stubs/qiskit.algorithms.optimizers.CG.print_options.rst", "stubs/qiskit.algorithms.optimizers.CG.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.CG.set_options.rst", "stubs/qiskit.algorithms.optimizers.CG.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.minimize.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.print_options.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.set_options.rst", "stubs/qiskit.algorithms.optimizers.COBYLA.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.CRS.rst", "stubs/qiskit.algorithms.optimizers.CRS.get_nlopt_optimizer.rst", "stubs/qiskit.algorithms.optimizers.CRS.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.CRS.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.CRS.minimize.rst", "stubs/qiskit.algorithms.optimizers.CRS.print_options.rst", "stubs/qiskit.algorithms.optimizers.CRS.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.CRS.set_options.rst", "stubs/qiskit.algorithms.optimizers.CRS.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.get_nlopt_optimizer.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.minimize.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.print_options.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.set_options.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.get_nlopt_optimizer.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.minimize.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.print_options.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.set_options.rst", "stubs/qiskit.algorithms.optimizers.DIRECT_L_RAND.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.ESCH.rst", "stubs/qiskit.algorithms.optimizers.ESCH.get_nlopt_optimizer.rst", "stubs/qiskit.algorithms.optimizers.ESCH.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.ESCH.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.ESCH.minimize.rst", "stubs/qiskit.algorithms.optimizers.ESCH.print_options.rst", "stubs/qiskit.algorithms.optimizers.ESCH.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.ESCH.set_options.rst", "stubs/qiskit.algorithms.optimizers.ESCH.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.GSLS.rst", "stubs/qiskit.algorithms.optimizers.GSLS.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.GSLS.gradient_approximation.rst", "stubs/qiskit.algorithms.optimizers.GSLS.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.GSLS.ls_optimize.rst", "stubs/qiskit.algorithms.optimizers.GSLS.minimize.rst", "stubs/qiskit.algorithms.optimizers.GSLS.print_options.rst", "stubs/qiskit.algorithms.optimizers.GSLS.sample_points.rst", "stubs/qiskit.algorithms.optimizers.GSLS.sample_set.rst", "stubs/qiskit.algorithms.optimizers.GSLS.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.GSLS.set_options.rst", "stubs/qiskit.algorithms.optimizers.GSLS.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.minimize.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.print_options.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.set_options.rst", "stubs/qiskit.algorithms.optimizers.GradientDescent.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.minimize.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.print_options.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.set_options.rst", "stubs/qiskit.algorithms.optimizers.IMFIL.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.ISRES.rst", "stubs/qiskit.algorithms.optimizers.ISRES.get_nlopt_optimizer.rst", "stubs/qiskit.algorithms.optimizers.ISRES.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.ISRES.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.ISRES.minimize.rst", "stubs/qiskit.algorithms.optimizers.ISRES.print_options.rst", "stubs/qiskit.algorithms.optimizers.ISRES.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.ISRES.set_options.rst", "stubs/qiskit.algorithms.optimizers.ISRES.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.minimize.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.print_options.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.set_options.rst", "stubs/qiskit.algorithms.optimizers.L_BFGS_B.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.minimize.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.print_options.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.set_options.rst", "stubs/qiskit.algorithms.optimizers.NELDER_MEAD.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.NFT.rst", "stubs/qiskit.algorithms.optimizers.NFT.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.NFT.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.NFT.minimize.rst", "stubs/qiskit.algorithms.optimizers.NFT.print_options.rst", "stubs/qiskit.algorithms.optimizers.NFT.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.NFT.set_options.rst", "stubs/qiskit.algorithms.optimizers.NFT.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.minimize.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.print_options.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.set_options.rst", "stubs/qiskit.algorithms.optimizers.Optimizer.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.OptimizerResult.rst", "stubs/qiskit.algorithms.optimizers.OptimizerResult.combine.rst", "stubs/qiskit.algorithms.optimizers.OptimizerSupportLevel.rst", "stubs/qiskit.algorithms.optimizers.POWELL.rst", "stubs/qiskit.algorithms.optimizers.POWELL.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.POWELL.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.POWELL.minimize.rst", "stubs/qiskit.algorithms.optimizers.POWELL.print_options.rst", "stubs/qiskit.algorithms.optimizers.POWELL.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.POWELL.set_options.rst", "stubs/qiskit.algorithms.optimizers.POWELL.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.minimize.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.print_options.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.set_options.rst", "stubs/qiskit.algorithms.optimizers.P_BFGS.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.calibrate.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.estimate_stddev.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.get_fidelity.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.minimize.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.optimize.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.print_options.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.set_options.rst", "stubs/qiskit.algorithms.optimizers.QNSPSA.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.minimize.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.print_options.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.set_options.rst", "stubs/qiskit.algorithms.optimizers.SLSQP.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.minimize.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.print_options.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.set_options.rst", "stubs/qiskit.algorithms.optimizers.SNOBFIT.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.SPSA.rst", "stubs/qiskit.algorithms.optimizers.SPSA.calibrate.rst", "stubs/qiskit.algorithms.optimizers.SPSA.estimate_stddev.rst", "stubs/qiskit.algorithms.optimizers.SPSA.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.SPSA.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.SPSA.minimize.rst", "stubs/qiskit.algorithms.optimizers.SPSA.optimize.rst", "stubs/qiskit.algorithms.optimizers.SPSA.print_options.rst", "stubs/qiskit.algorithms.optimizers.SPSA.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.SPSA.set_options.rst", "stubs/qiskit.algorithms.optimizers.SPSA.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.minimize.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.print_options.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.set_options.rst", "stubs/qiskit.algorithms.optimizers.SciPyOptimizer.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.TNC.rst", "stubs/qiskit.algorithms.optimizers.TNC.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.TNC.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.TNC.minimize.rst", "stubs/qiskit.algorithms.optimizers.TNC.print_options.rst", "stubs/qiskit.algorithms.optimizers.TNC.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.TNC.set_options.rst", "stubs/qiskit.algorithms.optimizers.TNC.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.UMDA.rst", "stubs/qiskit.algorithms.optimizers.UMDA.get_support_level.rst", "stubs/qiskit.algorithms.optimizers.UMDA.gradient_num_diff.rst", "stubs/qiskit.algorithms.optimizers.UMDA.minimize.rst", "stubs/qiskit.algorithms.optimizers.UMDA.print_options.rst", "stubs/qiskit.algorithms.optimizers.UMDA.set_max_evals_grouped.rst", "stubs/qiskit.algorithms.optimizers.UMDA.set_options.rst", "stubs/qiskit.algorithms.optimizers.UMDA.wrap_function.rst", "stubs/qiskit.algorithms.optimizers.nlopts.rst", "stubs/qiskit.assembler.RunConfig.rst", "stubs/qiskit.assembler.RunConfig.from_dict.rst", "stubs/qiskit.assembler.RunConfig.to_dict.rst", "stubs/qiskit.assembler.assemble_circuits.rst", "stubs/qiskit.assembler.assemble_schedules.rst", "stubs/qiskit.assembler.disassemble.rst", "stubs/qiskit.circuit.AncillaQubit.rst", "stubs/qiskit.circuit.AncillaRegister.rst", "stubs/qiskit.circuit.AncillaRegister.index.rst", "stubs/qiskit.circuit.AncillaRegister.qasm.rst", "stubs/qiskit.circuit.BreakLoopOp.rst", "stubs/qiskit.circuit.BreakLoopOp.add_decomposition.rst", "stubs/qiskit.circuit.BreakLoopOp.assemble.rst", "stubs/qiskit.circuit.BreakLoopOp.broadcast_arguments.rst", "stubs/qiskit.circuit.BreakLoopOp.c_if.rst", "stubs/qiskit.circuit.BreakLoopOp.copy.rst", "stubs/qiskit.circuit.BreakLoopOp.inverse.rst", "stubs/qiskit.circuit.BreakLoopOp.is_parameterized.rst", "stubs/qiskit.circuit.BreakLoopOp.qasm.rst", "stubs/qiskit.circuit.BreakLoopOp.repeat.rst", "stubs/qiskit.circuit.BreakLoopOp.reverse_ops.rst", "stubs/qiskit.circuit.BreakLoopOp.soft_compare.rst", "stubs/qiskit.circuit.BreakLoopOp.validate_parameter.rst", "stubs/qiskit.circuit.CircuitInstruction.rst", "stubs/qiskit.circuit.CircuitInstruction.copy.rst", "stubs/qiskit.circuit.CircuitInstruction.replace.rst", "stubs/qiskit.circuit.ClassicalRegister.rst", "stubs/qiskit.circuit.ClassicalRegister.index.rst", "stubs/qiskit.circuit.ClassicalRegister.qasm.rst", "stubs/qiskit.circuit.Clbit.rst", "stubs/qiskit.circuit.ContinueLoopOp.rst", "stubs/qiskit.circuit.ContinueLoopOp.add_decomposition.rst", "stubs/qiskit.circuit.ContinueLoopOp.assemble.rst", "stubs/qiskit.circuit.ContinueLoopOp.broadcast_arguments.rst", "stubs/qiskit.circuit.ContinueLoopOp.c_if.rst", "stubs/qiskit.circuit.ContinueLoopOp.copy.rst", "stubs/qiskit.circuit.ContinueLoopOp.inverse.rst", "stubs/qiskit.circuit.ContinueLoopOp.is_parameterized.rst", "stubs/qiskit.circuit.ContinueLoopOp.qasm.rst", "stubs/qiskit.circuit.ContinueLoopOp.repeat.rst", "stubs/qiskit.circuit.ContinueLoopOp.reverse_ops.rst", "stubs/qiskit.circuit.ContinueLoopOp.soft_compare.rst", "stubs/qiskit.circuit.ContinueLoopOp.validate_parameter.rst", "stubs/qiskit.circuit.ControlFlowOp.rst", "stubs/qiskit.circuit.ControlFlowOp.add_decomposition.rst", "stubs/qiskit.circuit.ControlFlowOp.assemble.rst", "stubs/qiskit.circuit.ControlFlowOp.broadcast_arguments.rst", "stubs/qiskit.circuit.ControlFlowOp.c_if.rst", "stubs/qiskit.circuit.ControlFlowOp.copy.rst", "stubs/qiskit.circuit.ControlFlowOp.inverse.rst", "stubs/qiskit.circuit.ControlFlowOp.is_parameterized.rst", "stubs/qiskit.circuit.ControlFlowOp.qasm.rst", "stubs/qiskit.circuit.ControlFlowOp.repeat.rst", "stubs/qiskit.circuit.ControlFlowOp.replace_blocks.rst", "stubs/qiskit.circuit.ControlFlowOp.reverse_ops.rst", "stubs/qiskit.circuit.ControlFlowOp.soft_compare.rst", "stubs/qiskit.circuit.ControlFlowOp.validate_parameter.rst", "stubs/qiskit.circuit.ControlledGate.rst", "stubs/qiskit.circuit.ControlledGate.add_decomposition.rst", "stubs/qiskit.circuit.ControlledGate.assemble.rst", "stubs/qiskit.circuit.ControlledGate.broadcast_arguments.rst", "stubs/qiskit.circuit.ControlledGate.c_if.rst", "stubs/qiskit.circuit.ControlledGate.control.rst", "stubs/qiskit.circuit.ControlledGate.copy.rst", "stubs/qiskit.circuit.ControlledGate.inverse.rst", "stubs/qiskit.circuit.ControlledGate.is_parameterized.rst", "stubs/qiskit.circuit.ControlledGate.power.rst", "stubs/qiskit.circuit.ControlledGate.qasm.rst", "stubs/qiskit.circuit.ControlledGate.repeat.rst", "stubs/qiskit.circuit.ControlledGate.reverse_ops.rst", "stubs/qiskit.circuit.ControlledGate.soft_compare.rst", "stubs/qiskit.circuit.ControlledGate.to_matrix.rst", "stubs/qiskit.circuit.ControlledGate.validate_parameter.rst", "stubs/qiskit.circuit.Delay.rst", "stubs/qiskit.circuit.Delay.add_decomposition.rst", "stubs/qiskit.circuit.Delay.assemble.rst", "stubs/qiskit.circuit.Delay.broadcast_arguments.rst", "stubs/qiskit.circuit.Delay.c_if.rst", "stubs/qiskit.circuit.Delay.copy.rst", "stubs/qiskit.circuit.Delay.inverse.rst", "stubs/qiskit.circuit.Delay.is_parameterized.rst", "stubs/qiskit.circuit.Delay.qasm.rst", "stubs/qiskit.circuit.Delay.repeat.rst", "stubs/qiskit.circuit.Delay.reverse_ops.rst", "stubs/qiskit.circuit.Delay.soft_compare.rst", "stubs/qiskit.circuit.Delay.to_matrix.rst", "stubs/qiskit.circuit.Delay.validate_parameter.rst", "stubs/qiskit.circuit.EquivalenceLibrary.rst", "stubs/qiskit.circuit.EquivalenceLibrary.add_equivalence.rst", "stubs/qiskit.circuit.EquivalenceLibrary.draw.rst", "stubs/qiskit.circuit.EquivalenceLibrary.get_entry.rst", "stubs/qiskit.circuit.EquivalenceLibrary.has_entry.rst", "stubs/qiskit.circuit.EquivalenceLibrary.set_entry.rst", "stubs/qiskit.circuit.ForLoopOp.rst", "stubs/qiskit.circuit.ForLoopOp.add_decomposition.rst", "stubs/qiskit.circuit.ForLoopOp.assemble.rst", "stubs/qiskit.circuit.ForLoopOp.broadcast_arguments.rst", "stubs/qiskit.circuit.ForLoopOp.c_if.rst", "stubs/qiskit.circuit.ForLoopOp.copy.rst", "stubs/qiskit.circuit.ForLoopOp.inverse.rst", "stubs/qiskit.circuit.ForLoopOp.is_parameterized.rst", "stubs/qiskit.circuit.ForLoopOp.qasm.rst", "stubs/qiskit.circuit.ForLoopOp.repeat.rst", "stubs/qiskit.circuit.ForLoopOp.replace_blocks.rst", "stubs/qiskit.circuit.ForLoopOp.reverse_ops.rst", "stubs/qiskit.circuit.ForLoopOp.soft_compare.rst", "stubs/qiskit.circuit.ForLoopOp.validate_parameter.rst", "stubs/qiskit.circuit.Gate.rst", "stubs/qiskit.circuit.Gate.add_decomposition.rst", "stubs/qiskit.circuit.Gate.assemble.rst", "stubs/qiskit.circuit.Gate.broadcast_arguments.rst", "stubs/qiskit.circuit.Gate.c_if.rst", "stubs/qiskit.circuit.Gate.control.rst", "stubs/qiskit.circuit.Gate.copy.rst", "stubs/qiskit.circuit.Gate.inverse.rst", "stubs/qiskit.circuit.Gate.is_parameterized.rst", "stubs/qiskit.circuit.Gate.power.rst", "stubs/qiskit.circuit.Gate.qasm.rst", "stubs/qiskit.circuit.Gate.repeat.rst", "stubs/qiskit.circuit.Gate.reverse_ops.rst", "stubs/qiskit.circuit.Gate.soft_compare.rst", "stubs/qiskit.circuit.Gate.to_matrix.rst", "stubs/qiskit.circuit.Gate.validate_parameter.rst", "stubs/qiskit.circuit.IfElseOp.rst", "stubs/qiskit.circuit.IfElseOp.add_decomposition.rst", "stubs/qiskit.circuit.IfElseOp.assemble.rst", "stubs/qiskit.circuit.IfElseOp.broadcast_arguments.rst", "stubs/qiskit.circuit.IfElseOp.c_if.rst", "stubs/qiskit.circuit.IfElseOp.copy.rst", "stubs/qiskit.circuit.IfElseOp.inverse.rst", "stubs/qiskit.circuit.IfElseOp.is_parameterized.rst", "stubs/qiskit.circuit.IfElseOp.qasm.rst", "stubs/qiskit.circuit.IfElseOp.repeat.rst", "stubs/qiskit.circuit.IfElseOp.replace_blocks.rst", "stubs/qiskit.circuit.IfElseOp.reverse_ops.rst", "stubs/qiskit.circuit.IfElseOp.soft_compare.rst", "stubs/qiskit.circuit.IfElseOp.validate_parameter.rst", "stubs/qiskit.circuit.Instruction.rst", "stubs/qiskit.circuit.Instruction.add_decomposition.rst", "stubs/qiskit.circuit.Instruction.assemble.rst", "stubs/qiskit.circuit.Instruction.broadcast_arguments.rst", "stubs/qiskit.circuit.Instruction.c_if.rst", "stubs/qiskit.circuit.Instruction.copy.rst", "stubs/qiskit.circuit.Instruction.inverse.rst", "stubs/qiskit.circuit.Instruction.is_parameterized.rst", "stubs/qiskit.circuit.Instruction.qasm.rst", "stubs/qiskit.circuit.Instruction.repeat.rst", "stubs/qiskit.circuit.Instruction.reverse_ops.rst", "stubs/qiskit.circuit.Instruction.soft_compare.rst", "stubs/qiskit.circuit.Instruction.validate_parameter.rst", "stubs/qiskit.circuit.InstructionSet.rst", "stubs/qiskit.circuit.InstructionSet.add.rst", "stubs/qiskit.circuit.InstructionSet.c_if.rst", "stubs/qiskit.circuit.InstructionSet.inverse.rst", "stubs/qiskit.circuit.Parameter.rst", "stubs/qiskit.circuit.Parameter.arccos.rst", "stubs/qiskit.circuit.Parameter.arcsin.rst", "stubs/qiskit.circuit.Parameter.arctan.rst", "stubs/qiskit.circuit.Parameter.assign.rst", "stubs/qiskit.circuit.Parameter.bind.rst", "stubs/qiskit.circuit.Parameter.conjugate.rst", "stubs/qiskit.circuit.Parameter.cos.rst", "stubs/qiskit.circuit.Parameter.exp.rst", "stubs/qiskit.circuit.Parameter.gradient.rst", "stubs/qiskit.circuit.Parameter.is_real.rst", "stubs/qiskit.circuit.Parameter.log.rst", "stubs/qiskit.circuit.Parameter.sin.rst", "stubs/qiskit.circuit.Parameter.subs.rst", "stubs/qiskit.circuit.Parameter.sympify.rst", "stubs/qiskit.circuit.Parameter.tan.rst", "stubs/qiskit.circuit.ParameterExpression.rst", "stubs/qiskit.circuit.ParameterExpression.arccos.rst", "stubs/qiskit.circuit.ParameterExpression.arcsin.rst", "stubs/qiskit.circuit.ParameterExpression.arctan.rst", "stubs/qiskit.circuit.ParameterExpression.assign.rst", "stubs/qiskit.circuit.ParameterExpression.bind.rst", "stubs/qiskit.circuit.ParameterExpression.conjugate.rst", "stubs/qiskit.circuit.ParameterExpression.cos.rst", "stubs/qiskit.circuit.ParameterExpression.exp.rst", "stubs/qiskit.circuit.ParameterExpression.gradient.rst", "stubs/qiskit.circuit.ParameterExpression.is_real.rst", "stubs/qiskit.circuit.ParameterExpression.log.rst", "stubs/qiskit.circuit.ParameterExpression.sin.rst", "stubs/qiskit.circuit.ParameterExpression.subs.rst", "stubs/qiskit.circuit.ParameterExpression.sympify.rst", "stubs/qiskit.circuit.ParameterExpression.tan.rst", "stubs/qiskit.circuit.ParameterVector.rst", "stubs/qiskit.circuit.ParameterVector.index.rst", "stubs/qiskit.circuit.ParameterVector.resize.rst", "stubs/qiskit.circuit.QuantumCircuit.rst", "stubs/qiskit.circuit.QuantumCircuit.add_bits.rst", "stubs/qiskit.circuit.QuantumCircuit.add_calibration.rst", "stubs/qiskit.circuit.QuantumCircuit.add_register.rst", "stubs/qiskit.circuit.QuantumCircuit.append.rst", "stubs/qiskit.circuit.QuantumCircuit.assign_parameters.rst", "stubs/qiskit.circuit.QuantumCircuit.barrier.rst", "stubs/qiskit.circuit.QuantumCircuit.bind_parameters.rst", "stubs/qiskit.circuit.QuantumCircuit.break_loop.rst", "stubs/qiskit.circuit.QuantumCircuit.cast.rst", "stubs/qiskit.circuit.QuantumCircuit.cbit_argument_conversion.rst", "stubs/qiskit.circuit.QuantumCircuit.ccx.rst", "stubs/qiskit.circuit.QuantumCircuit.ch.rst", "stubs/qiskit.circuit.QuantumCircuit.clear.rst", "stubs/qiskit.circuit.QuantumCircuit.cls_instances.rst", "stubs/qiskit.circuit.QuantumCircuit.cls_prefix.rst", "stubs/qiskit.circuit.QuantumCircuit.cnot.rst", "stubs/qiskit.circuit.QuantumCircuit.combine.rst", "stubs/qiskit.circuit.QuantumCircuit.compose.rst", "stubs/qiskit.circuit.QuantumCircuit.continue_loop.rst", "stubs/qiskit.circuit.QuantumCircuit.control.rst", "stubs/qiskit.circuit.QuantumCircuit.copy.rst", "stubs/qiskit.circuit.QuantumCircuit.copy_empty_like.rst", "stubs/qiskit.circuit.QuantumCircuit.count_ops.rst", "stubs/qiskit.circuit.QuantumCircuit.cp.rst", "stubs/qiskit.circuit.QuantumCircuit.crx.rst", "stubs/qiskit.circuit.QuantumCircuit.cry.rst", "stubs/qiskit.circuit.QuantumCircuit.crz.rst", "stubs/qiskit.circuit.QuantumCircuit.cswap.rst", "stubs/qiskit.circuit.QuantumCircuit.csx.rst", "stubs/qiskit.circuit.QuantumCircuit.cu.rst", "stubs/qiskit.circuit.QuantumCircuit.cu1.rst", "stubs/qiskit.circuit.QuantumCircuit.cu3.rst", "stubs/qiskit.circuit.QuantumCircuit.cx.rst", "stubs/qiskit.circuit.QuantumCircuit.cy.rst", "stubs/qiskit.circuit.QuantumCircuit.cz.rst", "stubs/qiskit.circuit.QuantumCircuit.dcx.rst", "stubs/qiskit.circuit.QuantumCircuit.decompose.rst", "stubs/qiskit.circuit.QuantumCircuit.delay.rst", "stubs/qiskit.circuit.QuantumCircuit.depth.rst", "stubs/qiskit.circuit.QuantumCircuit.diagonal.rst", "stubs/qiskit.circuit.QuantumCircuit.draw.rst", "stubs/qiskit.circuit.QuantumCircuit.ecr.rst", "stubs/qiskit.circuit.QuantumCircuit.extend.rst", "stubs/qiskit.circuit.QuantumCircuit.find_bit.rst", "stubs/qiskit.circuit.QuantumCircuit.for_loop.rst", "stubs/qiskit.circuit.QuantumCircuit.fredkin.rst", "stubs/qiskit.circuit.QuantumCircuit.from_qasm_file.rst", "stubs/qiskit.circuit.QuantumCircuit.from_qasm_str.rst", "stubs/qiskit.circuit.QuantumCircuit.get_instructions.rst", "stubs/qiskit.circuit.QuantumCircuit.h.rst", "stubs/qiskit.circuit.QuantumCircuit.hamiltonian.rst", "stubs/qiskit.circuit.QuantumCircuit.has_calibration_for.rst", "stubs/qiskit.circuit.QuantumCircuit.has_register.rst", "stubs/qiskit.circuit.QuantumCircuit.i.rst", "stubs/qiskit.circuit.QuantumCircuit.id.rst", "stubs/qiskit.circuit.QuantumCircuit.if_else.rst", "stubs/qiskit.circuit.QuantumCircuit.if_test.rst", "stubs/qiskit.circuit.QuantumCircuit.initialize.rst", "stubs/qiskit.circuit.QuantumCircuit.inverse.rst", "stubs/qiskit.circuit.QuantumCircuit.iso.rst", "stubs/qiskit.circuit.QuantumCircuit.isometry.rst", "stubs/qiskit.circuit.QuantumCircuit.iswap.rst", "stubs/qiskit.circuit.QuantumCircuit.mcp.rst", "stubs/qiskit.circuit.QuantumCircuit.mcrx.rst", "stubs/qiskit.circuit.QuantumCircuit.mcry.rst", "stubs/qiskit.circuit.QuantumCircuit.mcrz.rst", "stubs/qiskit.circuit.QuantumCircuit.mct.rst", "stubs/qiskit.circuit.QuantumCircuit.mcu1.rst", "stubs/qiskit.circuit.QuantumCircuit.mcx.rst", "stubs/qiskit.circuit.QuantumCircuit.measure.rst", "stubs/qiskit.circuit.QuantumCircuit.measure_active.rst", "stubs/qiskit.circuit.QuantumCircuit.measure_all.rst", "stubs/qiskit.circuit.QuantumCircuit.ms.rst", "stubs/qiskit.circuit.QuantumCircuit.num_connected_components.rst", "stubs/qiskit.circuit.QuantumCircuit.num_nonlocal_gates.rst", "stubs/qiskit.circuit.QuantumCircuit.num_tensor_factors.rst", "stubs/qiskit.circuit.QuantumCircuit.num_unitary_factors.rst", "stubs/qiskit.circuit.QuantumCircuit.p.rst", "stubs/qiskit.circuit.QuantumCircuit.pauli.rst", "stubs/qiskit.circuit.QuantumCircuit.power.rst", "stubs/qiskit.circuit.QuantumCircuit.prepare_state.rst", "stubs/qiskit.circuit.QuantumCircuit.qasm.rst", "stubs/qiskit.circuit.QuantumCircuit.qbit_argument_conversion.rst", "stubs/qiskit.circuit.QuantumCircuit.qubit_duration.rst", "stubs/qiskit.circuit.QuantumCircuit.qubit_start_time.rst", "stubs/qiskit.circuit.QuantumCircuit.qubit_stop_time.rst", "stubs/qiskit.circuit.QuantumCircuit.r.rst", "stubs/qiskit.circuit.QuantumCircuit.rcccx.rst", "stubs/qiskit.circuit.QuantumCircuit.rccx.rst", "stubs/qiskit.circuit.QuantumCircuit.remove_final_measurements.rst", "stubs/qiskit.circuit.QuantumCircuit.repeat.rst", "stubs/qiskit.circuit.QuantumCircuit.reset.rst", "stubs/qiskit.circuit.QuantumCircuit.reverse_bits.rst", "stubs/qiskit.circuit.QuantumCircuit.reverse_ops.rst", "stubs/qiskit.circuit.QuantumCircuit.rv.rst", "stubs/qiskit.circuit.QuantumCircuit.rx.rst", "stubs/qiskit.circuit.QuantumCircuit.rxx.rst", "stubs/qiskit.circuit.QuantumCircuit.ry.rst", "stubs/qiskit.circuit.QuantumCircuit.ryy.rst", "stubs/qiskit.circuit.QuantumCircuit.rz.rst", "stubs/qiskit.circuit.QuantumCircuit.rzx.rst", "stubs/qiskit.circuit.QuantumCircuit.rzz.rst", "stubs/qiskit.circuit.QuantumCircuit.s.rst", "stubs/qiskit.circuit.QuantumCircuit.save_amplitudes.rst", "stubs/qiskit.circuit.QuantumCircuit.save_amplitudes_squared.rst", "stubs/qiskit.circuit.QuantumCircuit.save_clifford.rst", "stubs/qiskit.circuit.QuantumCircuit.save_density_matrix.rst", "stubs/qiskit.circuit.QuantumCircuit.save_expectation_value.rst", "stubs/qiskit.circuit.QuantumCircuit.save_expectation_value_variance.rst", "stubs/qiskit.circuit.QuantumCircuit.save_matrix_product_state.rst", "stubs/qiskit.circuit.QuantumCircuit.save_probabilities.rst", "stubs/qiskit.circuit.QuantumCircuit.save_probabilities_dict.rst", "stubs/qiskit.circuit.QuantumCircuit.save_stabilizer.rst", "stubs/qiskit.circuit.QuantumCircuit.save_state.rst", "stubs/qiskit.circuit.QuantumCircuit.save_statevector.rst", "stubs/qiskit.circuit.QuantumCircuit.save_statevector_dict.rst", "stubs/qiskit.circuit.QuantumCircuit.save_superop.rst", "stubs/qiskit.circuit.QuantumCircuit.save_unitary.rst", "stubs/qiskit.circuit.QuantumCircuit.sdg.rst", "stubs/qiskit.circuit.QuantumCircuit.set_density_matrix.rst", "stubs/qiskit.circuit.QuantumCircuit.set_matrix_product_state.rst", "stubs/qiskit.circuit.QuantumCircuit.set_stabilizer.rst", "stubs/qiskit.circuit.QuantumCircuit.set_statevector.rst", "stubs/qiskit.circuit.QuantumCircuit.set_superop.rst", "stubs/qiskit.circuit.QuantumCircuit.set_unitary.rst", "stubs/qiskit.circuit.QuantumCircuit.size.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot_density_matrix.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot_expectation_value.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot_probabilities.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot_stabilizer.rst", "stubs/qiskit.circuit.QuantumCircuit.snapshot_statevector.rst", "stubs/qiskit.circuit.QuantumCircuit.squ.rst", "stubs/qiskit.circuit.QuantumCircuit.swap.rst", "stubs/qiskit.circuit.QuantumCircuit.sx.rst", "stubs/qiskit.circuit.QuantumCircuit.sxdg.rst", "stubs/qiskit.circuit.QuantumCircuit.t.rst", "stubs/qiskit.circuit.QuantumCircuit.tdg.rst", "stubs/qiskit.circuit.QuantumCircuit.tensor.rst", "stubs/qiskit.circuit.QuantumCircuit.to_gate.rst", "stubs/qiskit.circuit.QuantumCircuit.to_instruction.rst", "stubs/qiskit.circuit.QuantumCircuit.toffoli.rst", "stubs/qiskit.circuit.QuantumCircuit.u.rst", "stubs/qiskit.circuit.QuantumCircuit.u1.rst", "stubs/qiskit.circuit.QuantumCircuit.u2.rst", "stubs/qiskit.circuit.QuantumCircuit.u3.rst", "stubs/qiskit.circuit.QuantumCircuit.uc.rst", "stubs/qiskit.circuit.QuantumCircuit.ucrx.rst", "stubs/qiskit.circuit.QuantumCircuit.ucry.rst", "stubs/qiskit.circuit.QuantumCircuit.ucrz.rst", "stubs/qiskit.circuit.QuantumCircuit.unitary.rst", "stubs/qiskit.circuit.QuantumCircuit.while_loop.rst", "stubs/qiskit.circuit.QuantumCircuit.width.rst", "stubs/qiskit.circuit.QuantumCircuit.x.rst", "stubs/qiskit.circuit.QuantumCircuit.y.rst", "stubs/qiskit.circuit.QuantumCircuit.z.rst", "stubs/qiskit.circuit.QuantumRegister.rst", "stubs/qiskit.circuit.QuantumRegister.index.rst", "stubs/qiskit.circuit.QuantumRegister.qasm.rst", "stubs/qiskit.circuit.Qubit.rst", "stubs/qiskit.circuit.WhileLoopOp.rst", "stubs/qiskit.circuit.WhileLoopOp.add_decomposition.rst", "stubs/qiskit.circuit.WhileLoopOp.assemble.rst", "stubs/qiskit.circuit.WhileLoopOp.broadcast_arguments.rst", "stubs/qiskit.circuit.WhileLoopOp.c_if.rst", "stubs/qiskit.circuit.WhileLoopOp.copy.rst", "stubs/qiskit.circuit.WhileLoopOp.inverse.rst", "stubs/qiskit.circuit.WhileLoopOp.is_parameterized.rst", "stubs/qiskit.circuit.WhileLoopOp.qasm.rst", "stubs/qiskit.circuit.WhileLoopOp.repeat.rst", "stubs/qiskit.circuit.WhileLoopOp.replace_blocks.rst", "stubs/qiskit.circuit.WhileLoopOp.reverse_ops.rst", "stubs/qiskit.circuit.WhileLoopOp.soft_compare.rst", "stubs/qiskit.circuit.WhileLoopOp.validate_parameter.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.add_decomposition.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.assemble.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.broadcast_arguments.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.c_if.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.control.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.copy.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.from_dimacs_file.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.inverse.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.is_parameterized.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.power.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.qasm.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.repeat.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.reverse_ops.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.simulate.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.soft_compare.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.synth.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.to_matrix.rst", "stubs/qiskit.circuit.classicalfunction.BooleanExpression.validate_parameter.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.add_decomposition.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.assemble.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.broadcast_arguments.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.c_if.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.compile.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.control.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.copy.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.inverse.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.is_parameterized.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.power.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.qasm.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.repeat.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.reverse_ops.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.simulate.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.simulate_all.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.soft_compare.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.synth.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.to_matrix.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunction.validate_parameter.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunctionCompilerTypeError.rst", "stubs/qiskit.circuit.classicalfunction.ClassicalFunctionParseError.rst", "stubs/qiskit.circuit.library.AND.rst", "stubs/qiskit.circuit.library.Barrier.rst", "stubs/qiskit.circuit.library.Barrier.add_decomposition.rst", "stubs/qiskit.circuit.library.Barrier.assemble.rst", "stubs/qiskit.circuit.library.Barrier.broadcast_arguments.rst", "stubs/qiskit.circuit.library.Barrier.c_if.rst", "stubs/qiskit.circuit.library.Barrier.copy.rst", "stubs/qiskit.circuit.library.Barrier.inverse.rst", "stubs/qiskit.circuit.library.Barrier.is_parameterized.rst", "stubs/qiskit.circuit.library.Barrier.qasm.rst", "stubs/qiskit.circuit.library.Barrier.repeat.rst", "stubs/qiskit.circuit.library.Barrier.reverse_ops.rst", "stubs/qiskit.circuit.library.Barrier.soft_compare.rst", "stubs/qiskit.circuit.library.Barrier.validate_parameter.rst", "stubs/qiskit.circuit.library.C3SXGate.rst", "stubs/qiskit.circuit.library.C3XGate.rst", "stubs/qiskit.circuit.library.C3XGate.control.rst", "stubs/qiskit.circuit.library.C3XGate.inverse.rst", "stubs/qiskit.circuit.library.C4XGate.rst", "stubs/qiskit.circuit.library.C4XGate.control.rst", "stubs/qiskit.circuit.library.C4XGate.inverse.rst", "stubs/qiskit.circuit.library.CCXGate.rst", "stubs/qiskit.circuit.library.CCXGate.control.rst", "stubs/qiskit.circuit.library.CCXGate.inverse.rst", "stubs/qiskit.circuit.library.CDKMRippleCarryAdder.rst", "stubs/qiskit.circuit.library.CHGate.rst", "stubs/qiskit.circuit.library.CHGate.inverse.rst", "stubs/qiskit.circuit.library.CPhaseGate.rst", "stubs/qiskit.circuit.library.CPhaseGate.control.rst", "stubs/qiskit.circuit.library.CPhaseGate.inverse.rst", "stubs/qiskit.circuit.library.CRXGate.rst", "stubs/qiskit.circuit.library.CRXGate.inverse.rst", "stubs/qiskit.circuit.library.CRYGate.rst", "stubs/qiskit.circuit.library.CRYGate.inverse.rst", "stubs/qiskit.circuit.library.CRZGate.rst", "stubs/qiskit.circuit.library.CRZGate.inverse.rst", "stubs/qiskit.circuit.library.CSXGate.rst", "stubs/qiskit.circuit.library.CSwapGate.rst", "stubs/qiskit.circuit.library.CSwapGate.inverse.rst", "stubs/qiskit.circuit.library.CU1Gate.rst", "stubs/qiskit.circuit.library.CU1Gate.control.rst", "stubs/qiskit.circuit.library.CU1Gate.inverse.rst", "stubs/qiskit.circuit.library.CU3Gate.rst", "stubs/qiskit.circuit.library.CU3Gate.inverse.rst", "stubs/qiskit.circuit.library.CUGate.rst", "stubs/qiskit.circuit.library.CUGate.inverse.rst", "stubs/qiskit.circuit.library.CXGate.rst", "stubs/qiskit.circuit.library.CXGate.control.rst", "stubs/qiskit.circuit.library.CXGate.inverse.rst", "stubs/qiskit.circuit.library.CYGate.rst", "stubs/qiskit.circuit.library.CYGate.inverse.rst", "stubs/qiskit.circuit.library.CZGate.rst", "stubs/qiskit.circuit.library.CZGate.inverse.rst", "stubs/qiskit.circuit.library.DCXGate.rst", "stubs/qiskit.circuit.library.Diagonal.rst", "stubs/qiskit.circuit.library.DraperQFTAdder.rst", "stubs/qiskit.circuit.library.ECRGate.rst", "stubs/qiskit.circuit.library.ECRGate.to_matrix.rst", "stubs/qiskit.circuit.library.EfficientSU2.rst", "stubs/qiskit.circuit.library.EvolvedOperatorAnsatz.rst", "stubs/qiskit.circuit.library.ExactReciprocal.rst", "stubs/qiskit.circuit.library.ExcitationPreserving.rst", "stubs/qiskit.circuit.library.FourierChecking.rst", "stubs/qiskit.circuit.library.FunctionalPauliRotations.rst", "stubs/qiskit.circuit.library.GMS.rst", "stubs/qiskit.circuit.library.GR.rst", "stubs/qiskit.circuit.library.GRX.rst", "stubs/qiskit.circuit.library.GRY.rst", "stubs/qiskit.circuit.library.GRZ.rst", "stubs/qiskit.circuit.library.GraphState.rst", "stubs/qiskit.circuit.library.GroverOperator.rst", "stubs/qiskit.circuit.library.HGate.rst", "stubs/qiskit.circuit.library.HGate.control.rst", "stubs/qiskit.circuit.library.HGate.inverse.rst", "stubs/qiskit.circuit.library.HRSCumulativeMultiplier.rst", "stubs/qiskit.circuit.library.HiddenLinearFunction.rst", "stubs/qiskit.circuit.library.IGate.rst", "stubs/qiskit.circuit.library.IGate.inverse.rst", "stubs/qiskit.circuit.library.IQP.rst", "stubs/qiskit.circuit.library.InnerProduct.rst", "stubs/qiskit.circuit.library.IntegerComparator.rst", "stubs/qiskit.circuit.library.LinearAmplitudeFunction.rst", "stubs/qiskit.circuit.library.LinearAmplitudeFunction.post_processing.rst", "stubs/qiskit.circuit.library.LinearFunction.rst", "stubs/qiskit.circuit.library.LinearFunction.is_permutation.rst", "stubs/qiskit.circuit.library.LinearFunction.permutation_pattern.rst", "stubs/qiskit.circuit.library.LinearFunction.synthesize.rst", "stubs/qiskit.circuit.library.LinearFunction.validate_parameter.rst", "stubs/qiskit.circuit.library.LinearPauliRotations.rst", "stubs/qiskit.circuit.library.MCMT.rst", "stubs/qiskit.circuit.library.MCMT.control.rst", "stubs/qiskit.circuit.library.MCMT.inverse.rst", "stubs/qiskit.circuit.library.MCMTVChain.rst", "stubs/qiskit.circuit.library.MCMTVChain.inverse.rst", "stubs/qiskit.circuit.library.MCPhaseGate.rst", "stubs/qiskit.circuit.library.MCPhaseGate.control.rst", "stubs/qiskit.circuit.library.MCPhaseGate.inverse.rst", "stubs/qiskit.circuit.library.MCXGate.rst", "stubs/qiskit.circuit.library.MCXGate.control.rst", "stubs/qiskit.circuit.library.MCXGate.get_num_ancilla_qubits.rst", "stubs/qiskit.circuit.library.MCXGate.inverse.rst", "stubs/qiskit.circuit.library.MCXGrayCode.rst", "stubs/qiskit.circuit.library.MCXGrayCode.inverse.rst", "stubs/qiskit.circuit.library.MCXRecursive.rst", "stubs/qiskit.circuit.library.MCXRecursive.get_num_ancilla_qubits.rst", "stubs/qiskit.circuit.library.MCXRecursive.inverse.rst", "stubs/qiskit.circuit.library.MCXVChain.rst", "stubs/qiskit.circuit.library.MCXVChain.get_num_ancilla_qubits.rst", "stubs/qiskit.circuit.library.MCXVChain.inverse.rst", "stubs/qiskit.circuit.library.MSGate.rst", "stubs/qiskit.circuit.library.Measure.rst", "stubs/qiskit.circuit.library.Measure.add_decomposition.rst", "stubs/qiskit.circuit.library.Measure.assemble.rst", "stubs/qiskit.circuit.library.Measure.broadcast_arguments.rst", "stubs/qiskit.circuit.library.Measure.c_if.rst", "stubs/qiskit.circuit.library.Measure.copy.rst", "stubs/qiskit.circuit.library.Measure.inverse.rst", "stubs/qiskit.circuit.library.Measure.is_parameterized.rst", "stubs/qiskit.circuit.library.Measure.qasm.rst", "stubs/qiskit.circuit.library.Measure.repeat.rst", "stubs/qiskit.circuit.library.Measure.reverse_ops.rst", "stubs/qiskit.circuit.library.Measure.soft_compare.rst", "stubs/qiskit.circuit.library.Measure.validate_parameter.rst", "stubs/qiskit.circuit.library.NLocal.rst", "stubs/qiskit.circuit.library.NLocal.add_layer.rst", "stubs/qiskit.circuit.library.NLocal.assign_parameters.rst", "stubs/qiskit.circuit.library.NLocal.get_entangler_map.rst", "stubs/qiskit.circuit.library.NLocal.get_unentangled_qubits.rst", "stubs/qiskit.circuit.library.NLocal.print_settings.rst", "stubs/qiskit.circuit.library.OR.rst", "stubs/qiskit.circuit.library.PauliEvolutionGate.rst", "stubs/qiskit.circuit.library.PauliEvolutionGate.validate_parameter.rst", "stubs/qiskit.circuit.library.PauliFeatureMap.rst", "stubs/qiskit.circuit.library.PauliFeatureMap.pauli_block.rst", "stubs/qiskit.circuit.library.PauliFeatureMap.pauli_evolution.rst", "stubs/qiskit.circuit.library.PauliGate.rst", "stubs/qiskit.circuit.library.PauliGate.inverse.rst", "stubs/qiskit.circuit.library.PauliGate.validate_parameter.rst", "stubs/qiskit.circuit.library.PauliTwoDesign.rst", "stubs/qiskit.circuit.library.Permutation.rst", "stubs/qiskit.circuit.library.PhaseEstimation.rst", "stubs/qiskit.circuit.library.PhaseGate.rst", "stubs/qiskit.circuit.library.PhaseGate.control.rst", "stubs/qiskit.circuit.library.PhaseGate.inverse.rst", "stubs/qiskit.circuit.library.PhaseOracle.rst", "stubs/qiskit.circuit.library.PhaseOracle.evaluate_bitstring.rst", "stubs/qiskit.circuit.library.PhaseOracle.from_dimacs_file.rst", "stubs/qiskit.circuit.library.PiecewiseChebyshev.rst", "stubs/qiskit.circuit.library.PiecewiseLinearPauliRotations.rst", "stubs/qiskit.circuit.library.PiecewiseLinearPauliRotations.evaluate.rst", "stubs/qiskit.circuit.library.PiecewisePolynomialPauliRotations.rst", "stubs/qiskit.circuit.library.PiecewisePolynomialPauliRotations.evaluate.rst", "stubs/qiskit.circuit.library.PolynomialPauliRotations.rst", "stubs/qiskit.circuit.library.QAOAAnsatz.rst", "stubs/qiskit.circuit.library.QFT.rst", "stubs/qiskit.circuit.library.QFT.inverse.rst", "stubs/qiskit.circuit.library.QFT.is_inverse.rst", "stubs/qiskit.circuit.library.QuadraticForm.rst", "stubs/qiskit.circuit.library.QuadraticForm.required_result_qubits.rst", "stubs/qiskit.circuit.library.QuantumVolume.rst", "stubs/qiskit.circuit.library.RC3XGate.rst", "stubs/qiskit.circuit.library.RCCXGate.rst", "stubs/qiskit.circuit.library.RGQFTMultiplier.rst", "stubs/qiskit.circuit.library.RGate.rst", "stubs/qiskit.circuit.library.RGate.inverse.rst", "stubs/qiskit.circuit.library.RVGate.rst", "stubs/qiskit.circuit.library.RVGate.inverse.rst", "stubs/qiskit.circuit.library.RVGate.to_matrix.rst", "stubs/qiskit.circuit.library.RXGate.rst", "stubs/qiskit.circuit.library.RXGate.control.rst", "stubs/qiskit.circuit.library.RXGate.inverse.rst", "stubs/qiskit.circuit.library.RXXGate.rst", "stubs/qiskit.circuit.library.RXXGate.inverse.rst", "stubs/qiskit.circuit.library.RYGate.rst", "stubs/qiskit.circuit.library.RYGate.control.rst", "stubs/qiskit.circuit.library.RYGate.inverse.rst", "stubs/qiskit.circuit.library.RYYGate.rst", "stubs/qiskit.circuit.library.RYYGate.inverse.rst", "stubs/qiskit.circuit.library.RZGate.rst", "stubs/qiskit.circuit.library.RZGate.control.rst", "stubs/qiskit.circuit.library.RZGate.inverse.rst", "stubs/qiskit.circuit.library.RZXGate.rst", "stubs/qiskit.circuit.library.RZXGate.inverse.rst", "stubs/qiskit.circuit.library.RZZGate.rst", "stubs/qiskit.circuit.library.RZZGate.inverse.rst", "stubs/qiskit.circuit.library.RealAmplitudes.rst", "stubs/qiskit.circuit.library.Reset.rst", "stubs/qiskit.circuit.library.Reset.add_decomposition.rst", "stubs/qiskit.circuit.library.Reset.assemble.rst", "stubs/qiskit.circuit.library.Reset.broadcast_arguments.rst", "stubs/qiskit.circuit.library.Reset.c_if.rst", "stubs/qiskit.circuit.library.Reset.copy.rst", "stubs/qiskit.circuit.library.Reset.inverse.rst", "stubs/qiskit.circuit.library.Reset.is_parameterized.rst", "stubs/qiskit.circuit.library.Reset.qasm.rst", "stubs/qiskit.circuit.library.Reset.repeat.rst", "stubs/qiskit.circuit.library.Reset.reverse_ops.rst", "stubs/qiskit.circuit.library.Reset.soft_compare.rst", "stubs/qiskit.circuit.library.Reset.validate_parameter.rst", "stubs/qiskit.circuit.library.SGate.rst", "stubs/qiskit.circuit.library.SGate.inverse.rst", "stubs/qiskit.circuit.library.SXGate.rst", "stubs/qiskit.circuit.library.SXGate.control.rst", "stubs/qiskit.circuit.library.SXGate.inverse.rst", "stubs/qiskit.circuit.library.SXdgGate.rst", "stubs/qiskit.circuit.library.SXdgGate.inverse.rst", "stubs/qiskit.circuit.library.SdgGate.rst", "stubs/qiskit.circuit.library.SdgGate.inverse.rst", "stubs/qiskit.circuit.library.StatePreparation.rst", "stubs/qiskit.circuit.library.StatePreparation.broadcast_arguments.rst", "stubs/qiskit.circuit.library.StatePreparation.inverse.rst", "stubs/qiskit.circuit.library.StatePreparation.validate_parameter.rst", "stubs/qiskit.circuit.library.SwapGate.rst", "stubs/qiskit.circuit.library.SwapGate.control.rst", "stubs/qiskit.circuit.library.SwapGate.inverse.rst", "stubs/qiskit.circuit.library.TGate.rst", "stubs/qiskit.circuit.library.TGate.inverse.rst", "stubs/qiskit.circuit.library.TdgGate.rst", "stubs/qiskit.circuit.library.TdgGate.inverse.rst", "stubs/qiskit.circuit.library.TwoLocal.rst", "stubs/qiskit.circuit.library.TwoLocal.get_entangler_map.rst", "stubs/qiskit.circuit.library.U1Gate.rst", "stubs/qiskit.circuit.library.U1Gate.control.rst", "stubs/qiskit.circuit.library.U1Gate.inverse.rst", "stubs/qiskit.circuit.library.U2Gate.rst", "stubs/qiskit.circuit.library.U2Gate.inverse.rst", "stubs/qiskit.circuit.library.U3Gate.rst", "stubs/qiskit.circuit.library.U3Gate.control.rst", "stubs/qiskit.circuit.library.U3Gate.inverse.rst", "stubs/qiskit.circuit.library.UGate.rst", "stubs/qiskit.circuit.library.UGate.control.rst", "stubs/qiskit.circuit.library.UGate.inverse.rst", "stubs/qiskit.circuit.library.VBERippleCarryAdder.rst", "stubs/qiskit.circuit.library.WeightedAdder.rst", "stubs/qiskit.circuit.library.XGate.rst", "stubs/qiskit.circuit.library.XGate.control.rst", "stubs/qiskit.circuit.library.XGate.inverse.rst", "stubs/qiskit.circuit.library.XOR.rst", "stubs/qiskit.circuit.library.XXMinusYYGate.rst", "stubs/qiskit.circuit.library.XXMinusYYGate.inverse.rst", "stubs/qiskit.circuit.library.XXPlusYYGate.rst", "stubs/qiskit.circuit.library.XXPlusYYGate.inverse.rst", "stubs/qiskit.circuit.library.YGate.rst", "stubs/qiskit.circuit.library.YGate.control.rst", "stubs/qiskit.circuit.library.YGate.inverse.rst", "stubs/qiskit.circuit.library.ZFeatureMap.rst", "stubs/qiskit.circuit.library.ZGate.rst", "stubs/qiskit.circuit.library.ZGate.control.rst", "stubs/qiskit.circuit.library.ZGate.inverse.rst", "stubs/qiskit.circuit.library.ZZFeatureMap.rst", "stubs/qiskit.circuit.library.clifford_2_1.rst", "stubs/qiskit.circuit.library.clifford_2_2.rst", "stubs/qiskit.circuit.library.clifford_2_3.rst", "stubs/qiskit.circuit.library.clifford_2_4.rst", "stubs/qiskit.circuit.library.clifford_3_1.rst", "stubs/qiskit.circuit.library.clifford_4_1.rst", "stubs/qiskit.circuit.library.clifford_4_2.rst", "stubs/qiskit.circuit.library.clifford_4_3.rst", "stubs/qiskit.circuit.library.clifford_4_4.rst", "stubs/qiskit.circuit.library.clifford_5_1.rst", "stubs/qiskit.circuit.library.clifford_6_1.rst", "stubs/qiskit.circuit.library.clifford_6_2.rst", "stubs/qiskit.circuit.library.clifford_6_3.rst", "stubs/qiskit.circuit.library.clifford_6_4.rst", "stubs/qiskit.circuit.library.clifford_6_5.rst", "stubs/qiskit.circuit.library.clifford_8_1.rst", "stubs/qiskit.circuit.library.clifford_8_2.rst", "stubs/qiskit.circuit.library.clifford_8_3.rst", "stubs/qiskit.circuit.library.iSwapGate.rst", "stubs/qiskit.circuit.library.rzx_cy.rst", "stubs/qiskit.circuit.library.rzx_xz.rst", "stubs/qiskit.circuit.library.rzx_yz.rst", "stubs/qiskit.circuit.library.rzx_zz1.rst", "stubs/qiskit.circuit.library.rzx_zz2.rst", "stubs/qiskit.circuit.library.rzx_zz3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_2a_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_4a_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_4b_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_4b_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_5a_4.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6a_4.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6b_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6b_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_6c_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_7a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_7b_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_7c_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_7d_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_7e_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9a_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_10.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_11.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_12.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_4.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_5.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_6.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_7.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_8.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9c_9.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_1.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_10.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_2.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_3.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_4.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_5.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_6.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_7.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_8.rst", "stubs/qiskit.circuit.library.templates.nct.template_nct_9d_9.rst", "stubs/qiskit.circuit.random.random_circuit.rst", "stubs/qiskit.compiler.assemble.rst", "stubs/qiskit.compiler.schedule.rst", "stubs/qiskit.compiler.sequence.rst", "stubs/qiskit.compiler.transpile.rst", "stubs/qiskit.converters.ast_to_dag.rst", "stubs/qiskit.converters.circuit_to_dag.rst", "stubs/qiskit.converters.circuit_to_dagdependency.rst", "stubs/qiskit.converters.circuit_to_gate.rst", "stubs/qiskit.converters.circuit_to_instruction.rst", "stubs/qiskit.converters.dag_to_circuit.rst", "stubs/qiskit.converters.dag_to_dagdependency.rst", "stubs/qiskit.converters.dagdependency_to_circuit.rst", "stubs/qiskit.converters.dagdependency_to_dag.rst", "stubs/qiskit.dagcircuit.DAGCircuit.rst", "stubs/qiskit.dagcircuit.DAGCircuit.add_calibration.rst", "stubs/qiskit.dagcircuit.DAGCircuit.add_clbits.rst", "stubs/qiskit.dagcircuit.DAGCircuit.add_creg.rst", "stubs/qiskit.dagcircuit.DAGCircuit.add_qreg.rst", "stubs/qiskit.dagcircuit.DAGCircuit.add_qubits.rst", "stubs/qiskit.dagcircuit.DAGCircuit.ancestors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.apply_operation_back.rst", "stubs/qiskit.dagcircuit.DAGCircuit.apply_operation_front.rst", "stubs/qiskit.dagcircuit.DAGCircuit.bfs_successors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.collect_1q_runs.rst", "stubs/qiskit.dagcircuit.DAGCircuit.collect_2q_runs.rst", "stubs/qiskit.dagcircuit.DAGCircuit.collect_runs.rst", "stubs/qiskit.dagcircuit.DAGCircuit.compose.rst", "stubs/qiskit.dagcircuit.DAGCircuit.copy_empty_like.rst", "stubs/qiskit.dagcircuit.DAGCircuit.count_ops.rst", "stubs/qiskit.dagcircuit.DAGCircuit.count_ops_longest_path.rst", "stubs/qiskit.dagcircuit.DAGCircuit.depth.rst", "stubs/qiskit.dagcircuit.DAGCircuit.descendants.rst", "stubs/qiskit.dagcircuit.DAGCircuit.draw.rst", "stubs/qiskit.dagcircuit.DAGCircuit.edges.rst", "stubs/qiskit.dagcircuit.DAGCircuit.from_networkx.rst", "stubs/qiskit.dagcircuit.DAGCircuit.front_layer.rst", "stubs/qiskit.dagcircuit.DAGCircuit.gate_nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.has_calibration_for.rst", "stubs/qiskit.dagcircuit.DAGCircuit.idle_wires.rst", "stubs/qiskit.dagcircuit.DAGCircuit.is_predecessor.rst", "stubs/qiskit.dagcircuit.DAGCircuit.is_successor.rst", "stubs/qiskit.dagcircuit.DAGCircuit.layers.rst", "stubs/qiskit.dagcircuit.DAGCircuit.longest_path.rst", "stubs/qiskit.dagcircuit.DAGCircuit.multi_qubit_ops.rst", "stubs/qiskit.dagcircuit.DAGCircuit.multigraph_layers.rst", "stubs/qiskit.dagcircuit.DAGCircuit.named_nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.node.rst", "stubs/qiskit.dagcircuit.DAGCircuit.nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.nodes_on_wire.rst", "stubs/qiskit.dagcircuit.DAGCircuit.num_clbits.rst", "stubs/qiskit.dagcircuit.DAGCircuit.num_qubits.rst", "stubs/qiskit.dagcircuit.DAGCircuit.num_tensor_factors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.op_nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.predecessors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.properties.rst", "stubs/qiskit.dagcircuit.DAGCircuit.quantum_predecessors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.quantum_successors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_all_ops_named.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_ancestors_of.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_clbits.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_cregs.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_descendants_of.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_nonancestors_of.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_nondescendants_of.rst", "stubs/qiskit.dagcircuit.DAGCircuit.remove_op_node.rst", "stubs/qiskit.dagcircuit.DAGCircuit.replace_block_with_op.rst", "stubs/qiskit.dagcircuit.DAGCircuit.reverse_ops.rst", "stubs/qiskit.dagcircuit.DAGCircuit.serial_layers.rst", "stubs/qiskit.dagcircuit.DAGCircuit.size.rst", "stubs/qiskit.dagcircuit.DAGCircuit.substitute_node.rst", "stubs/qiskit.dagcircuit.DAGCircuit.substitute_node_with_dag.rst", "stubs/qiskit.dagcircuit.DAGCircuit.successors.rst", "stubs/qiskit.dagcircuit.DAGCircuit.to_networkx.rst", "stubs/qiskit.dagcircuit.DAGCircuit.topological_nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.topological_op_nodes.rst", "stubs/qiskit.dagcircuit.DAGCircuit.two_qubit_ops.rst", "stubs/qiskit.dagcircuit.DAGCircuit.width.rst", "stubs/qiskit.dagcircuit.DAGCircuitError.rst", "stubs/qiskit.dagcircuit.DAGDepNode.rst", "stubs/qiskit.dagcircuit.DAGDepNode.copy.rst", "stubs/qiskit.dagcircuit.DAGDepNode.semantic_eq.rst", "stubs/qiskit.dagcircuit.DAGDependency.rst", "stubs/qiskit.dagcircuit.DAGDependency.add_clbits.rst", "stubs/qiskit.dagcircuit.DAGDependency.add_creg.rst", "stubs/qiskit.dagcircuit.DAGDependency.add_op_node.rst", "stubs/qiskit.dagcircuit.DAGDependency.add_qreg.rst", "stubs/qiskit.dagcircuit.DAGDependency.add_qubits.rst", "stubs/qiskit.dagcircuit.DAGDependency.copy.rst", "stubs/qiskit.dagcircuit.DAGDependency.depth.rst", "stubs/qiskit.dagcircuit.DAGDependency.direct_predecessors.rst", "stubs/qiskit.dagcircuit.DAGDependency.direct_successors.rst", "stubs/qiskit.dagcircuit.DAGDependency.draw.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_all_edges.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_edges.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_in_edges.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_node.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_nodes.rst", "stubs/qiskit.dagcircuit.DAGDependency.get_out_edges.rst", "stubs/qiskit.dagcircuit.DAGDependency.predecessors.rst", "stubs/qiskit.dagcircuit.DAGDependency.size.rst", "stubs/qiskit.dagcircuit.DAGDependency.successors.rst", "stubs/qiskit.dagcircuit.DAGDependency.to_networkx.rst", "stubs/qiskit.dagcircuit.DAGDependency.to_retworkx.rst", "stubs/qiskit.dagcircuit.DAGDependency.topological_nodes.rst", "stubs/qiskit.dagcircuit.DAGInNode.rst", "stubs/qiskit.dagcircuit.DAGInNode.semantic_eq.rst", "stubs/qiskit.dagcircuit.DAGNode.rst", "stubs/qiskit.dagcircuit.DAGNode.semantic_eq.rst", "stubs/qiskit.dagcircuit.DAGOpNode.rst", "stubs/qiskit.dagcircuit.DAGOpNode.semantic_eq.rst", "stubs/qiskit.dagcircuit.DAGOutNode.rst", "stubs/qiskit.dagcircuit.DAGOutNode.semantic_eq.rst", "stubs/qiskit.extensions.HamiltonianGate.rst", "stubs/qiskit.extensions.HamiltonianGate.add_decomposition.rst", "stubs/qiskit.extensions.HamiltonianGate.adjoint.rst", "stubs/qiskit.extensions.HamiltonianGate.assemble.rst", "stubs/qiskit.extensions.HamiltonianGate.broadcast_arguments.rst", "stubs/qiskit.extensions.HamiltonianGate.c_if.rst", "stubs/qiskit.extensions.HamiltonianGate.conjugate.rst", "stubs/qiskit.extensions.HamiltonianGate.control.rst", "stubs/qiskit.extensions.HamiltonianGate.copy.rst", "stubs/qiskit.extensions.HamiltonianGate.inverse.rst", "stubs/qiskit.extensions.HamiltonianGate.is_parameterized.rst", "stubs/qiskit.extensions.HamiltonianGate.power.rst", "stubs/qiskit.extensions.HamiltonianGate.qasm.rst", "stubs/qiskit.extensions.HamiltonianGate.repeat.rst", "stubs/qiskit.extensions.HamiltonianGate.reverse_ops.rst", "stubs/qiskit.extensions.HamiltonianGate.soft_compare.rst", "stubs/qiskit.extensions.HamiltonianGate.to_matrix.rst", "stubs/qiskit.extensions.HamiltonianGate.transpose.rst", "stubs/qiskit.extensions.HamiltonianGate.validate_parameter.rst", "stubs/qiskit.extensions.Initialize.rst", "stubs/qiskit.extensions.Initialize.add_decomposition.rst", "stubs/qiskit.extensions.Initialize.assemble.rst", "stubs/qiskit.extensions.Initialize.broadcast_arguments.rst", "stubs/qiskit.extensions.Initialize.c_if.rst", "stubs/qiskit.extensions.Initialize.copy.rst", "stubs/qiskit.extensions.Initialize.gates_to_uncompute.rst", "stubs/qiskit.extensions.Initialize.inverse.rst", "stubs/qiskit.extensions.Initialize.is_parameterized.rst", "stubs/qiskit.extensions.Initialize.qasm.rst", "stubs/qiskit.extensions.Initialize.repeat.rst", "stubs/qiskit.extensions.Initialize.reverse_ops.rst", "stubs/qiskit.extensions.Initialize.soft_compare.rst", "stubs/qiskit.extensions.Initialize.validate_parameter.rst", "stubs/qiskit.extensions.SingleQubitUnitary.rst", "stubs/qiskit.extensions.SingleQubitUnitary.add_decomposition.rst", "stubs/qiskit.extensions.SingleQubitUnitary.assemble.rst", "stubs/qiskit.extensions.SingleQubitUnitary.broadcast_arguments.rst", "stubs/qiskit.extensions.SingleQubitUnitary.c_if.rst", "stubs/qiskit.extensions.SingleQubitUnitary.control.rst", "stubs/qiskit.extensions.SingleQubitUnitary.copy.rst", "stubs/qiskit.extensions.SingleQubitUnitary.inverse.rst", "stubs/qiskit.extensions.SingleQubitUnitary.is_parameterized.rst", "stubs/qiskit.extensions.SingleQubitUnitary.power.rst", "stubs/qiskit.extensions.SingleQubitUnitary.qasm.rst", "stubs/qiskit.extensions.SingleQubitUnitary.repeat.rst", "stubs/qiskit.extensions.SingleQubitUnitary.reverse_ops.rst", "stubs/qiskit.extensions.SingleQubitUnitary.soft_compare.rst", "stubs/qiskit.extensions.SingleQubitUnitary.to_matrix.rst", "stubs/qiskit.extensions.SingleQubitUnitary.validate_parameter.rst", "stubs/qiskit.extensions.Snapshot.rst", "stubs/qiskit.extensions.Snapshot.add_decomposition.rst", "stubs/qiskit.extensions.Snapshot.assemble.rst", "stubs/qiskit.extensions.Snapshot.broadcast_arguments.rst", "stubs/qiskit.extensions.Snapshot.c_if.rst", "stubs/qiskit.extensions.Snapshot.copy.rst", "stubs/qiskit.extensions.Snapshot.inverse.rst", "stubs/qiskit.extensions.Snapshot.is_parameterized.rst", "stubs/qiskit.extensions.Snapshot.qasm.rst", "stubs/qiskit.extensions.Snapshot.repeat.rst", "stubs/qiskit.extensions.Snapshot.reverse_ops.rst", "stubs/qiskit.extensions.Snapshot.soft_compare.rst", "stubs/qiskit.extensions.Snapshot.validate_parameter.rst", "stubs/qiskit.extensions.UCPauliRotGate.rst", "stubs/qiskit.extensions.UCPauliRotGate.add_decomposition.rst", "stubs/qiskit.extensions.UCPauliRotGate.assemble.rst", "stubs/qiskit.extensions.UCPauliRotGate.broadcast_arguments.rst", "stubs/qiskit.extensions.UCPauliRotGate.c_if.rst", "stubs/qiskit.extensions.UCPauliRotGate.control.rst", "stubs/qiskit.extensions.UCPauliRotGate.copy.rst", "stubs/qiskit.extensions.UCPauliRotGate.inverse.rst", "stubs/qiskit.extensions.UCPauliRotGate.is_parameterized.rst", "stubs/qiskit.extensions.UCPauliRotGate.power.rst", "stubs/qiskit.extensions.UCPauliRotGate.qasm.rst", "stubs/qiskit.extensions.UCPauliRotGate.repeat.rst", "stubs/qiskit.extensions.UCPauliRotGate.reverse_ops.rst", "stubs/qiskit.extensions.UCPauliRotGate.soft_compare.rst", "stubs/qiskit.extensions.UCPauliRotGate.to_matrix.rst", "stubs/qiskit.extensions.UCPauliRotGate.validate_parameter.rst", "stubs/qiskit.extensions.UCRXGate.rst", "stubs/qiskit.extensions.UCRXGate.add_decomposition.rst", "stubs/qiskit.extensions.UCRXGate.assemble.rst", "stubs/qiskit.extensions.UCRXGate.broadcast_arguments.rst", "stubs/qiskit.extensions.UCRXGate.c_if.rst", "stubs/qiskit.extensions.UCRXGate.control.rst", "stubs/qiskit.extensions.UCRXGate.copy.rst", "stubs/qiskit.extensions.UCRXGate.inverse.rst", "stubs/qiskit.extensions.UCRXGate.is_parameterized.rst", "stubs/qiskit.extensions.UCRXGate.power.rst", "stubs/qiskit.extensions.UCRXGate.qasm.rst", "stubs/qiskit.extensions.UCRXGate.repeat.rst", "stubs/qiskit.extensions.UCRXGate.reverse_ops.rst", "stubs/qiskit.extensions.UCRXGate.soft_compare.rst", "stubs/qiskit.extensions.UCRXGate.to_matrix.rst", "stubs/qiskit.extensions.UCRXGate.validate_parameter.rst", "stubs/qiskit.extensions.UCRYGate.rst", "stubs/qiskit.extensions.UCRYGate.add_decomposition.rst", "stubs/qiskit.extensions.UCRYGate.assemble.rst", "stubs/qiskit.extensions.UCRYGate.broadcast_arguments.rst", "stubs/qiskit.extensions.UCRYGate.c_if.rst", "stubs/qiskit.extensions.UCRYGate.control.rst", "stubs/qiskit.extensions.UCRYGate.copy.rst", "stubs/qiskit.extensions.UCRYGate.inverse.rst", "stubs/qiskit.extensions.UCRYGate.is_parameterized.rst", "stubs/qiskit.extensions.UCRYGate.power.rst", "stubs/qiskit.extensions.UCRYGate.qasm.rst", "stubs/qiskit.extensions.UCRYGate.repeat.rst", "stubs/qiskit.extensions.UCRYGate.reverse_ops.rst", "stubs/qiskit.extensions.UCRYGate.soft_compare.rst", "stubs/qiskit.extensions.UCRYGate.to_matrix.rst", "stubs/qiskit.extensions.UCRYGate.validate_parameter.rst", "stubs/qiskit.extensions.UCRZGate.rst", "stubs/qiskit.extensions.UCRZGate.add_decomposition.rst", "stubs/qiskit.extensions.UCRZGate.assemble.rst", "stubs/qiskit.extensions.UCRZGate.broadcast_arguments.rst", "stubs/qiskit.extensions.UCRZGate.c_if.rst", "stubs/qiskit.extensions.UCRZGate.control.rst", "stubs/qiskit.extensions.UCRZGate.copy.rst", "stubs/qiskit.extensions.UCRZGate.inverse.rst", "stubs/qiskit.extensions.UCRZGate.is_parameterized.rst", "stubs/qiskit.extensions.UCRZGate.power.rst", "stubs/qiskit.extensions.UCRZGate.qasm.rst", "stubs/qiskit.extensions.UCRZGate.repeat.rst", "stubs/qiskit.extensions.UCRZGate.reverse_ops.rst", "stubs/qiskit.extensions.UCRZGate.soft_compare.rst", "stubs/qiskit.extensions.UCRZGate.to_matrix.rst", "stubs/qiskit.extensions.UCRZGate.validate_parameter.rst", "stubs/qiskit.extensions.UnitaryGate.rst", "stubs/qiskit.extensions.UnitaryGate.add_decomposition.rst", "stubs/qiskit.extensions.UnitaryGate.adjoint.rst", "stubs/qiskit.extensions.UnitaryGate.assemble.rst", "stubs/qiskit.extensions.UnitaryGate.broadcast_arguments.rst", "stubs/qiskit.extensions.UnitaryGate.c_if.rst", "stubs/qiskit.extensions.UnitaryGate.conjugate.rst", "stubs/qiskit.extensions.UnitaryGate.control.rst", "stubs/qiskit.extensions.UnitaryGate.copy.rst", "stubs/qiskit.extensions.UnitaryGate.inverse.rst", "stubs/qiskit.extensions.UnitaryGate.is_parameterized.rst", "stubs/qiskit.extensions.UnitaryGate.power.rst", "stubs/qiskit.extensions.UnitaryGate.qasm.rst", "stubs/qiskit.extensions.UnitaryGate.repeat.rst", "stubs/qiskit.extensions.UnitaryGate.reverse_ops.rst", "stubs/qiskit.extensions.UnitaryGate.soft_compare.rst", "stubs/qiskit.extensions.UnitaryGate.to_matrix.rst", "stubs/qiskit.extensions.UnitaryGate.transpose.rst", "stubs/qiskit.extensions.UnitaryGate.validate_parameter.rst", "stubs/qiskit.opflow.OperatorBase.rst", "stubs/qiskit.opflow.OperatorBase.add.rst", "stubs/qiskit.opflow.OperatorBase.adjoint.rst", "stubs/qiskit.opflow.OperatorBase.assign_parameters.rst", "stubs/qiskit.opflow.OperatorBase.bind_parameters.rst", "stubs/qiskit.opflow.OperatorBase.compose.rst", "stubs/qiskit.opflow.OperatorBase.copy.rst", "stubs/qiskit.opflow.OperatorBase.equals.rst", "stubs/qiskit.opflow.OperatorBase.eval.rst", "stubs/qiskit.opflow.OperatorBase.is_hermitian.rst", "stubs/qiskit.opflow.OperatorBase.mul.rst", "stubs/qiskit.opflow.OperatorBase.neg.rst", "stubs/qiskit.opflow.OperatorBase.permute.rst", "stubs/qiskit.opflow.OperatorBase.primitive_strings.rst", "stubs/qiskit.opflow.OperatorBase.reduce.rst", "stubs/qiskit.opflow.OperatorBase.tensor.rst", "stubs/qiskit.opflow.OperatorBase.tensorpower.rst", "stubs/qiskit.opflow.OperatorBase.to_circuit_op.rst", "stubs/qiskit.opflow.OperatorBase.to_matrix.rst", "stubs/qiskit.opflow.OperatorBase.to_matrix_op.rst", "stubs/qiskit.opflow.OperatorBase.to_spmatrix.rst", "stubs/qiskit.opflow.OpflowError.rst", "stubs/qiskit.opflow.anti_commutator.rst", "stubs/qiskit.opflow.commutator.rst", "stubs/qiskit.opflow.converters.rst", "stubs/qiskit.opflow.converters.AbelianGrouper.rst", "stubs/qiskit.opflow.converters.AbelianGrouper.convert.rst", "stubs/qiskit.opflow.converters.AbelianGrouper.group_subops.rst", "stubs/qiskit.opflow.converters.CircuitSampler.rst", "stubs/qiskit.opflow.converters.CircuitSampler.clear_cache.rst", "stubs/qiskit.opflow.converters.CircuitSampler.convert.rst", "stubs/qiskit.opflow.converters.CircuitSampler.sample_circuits.rst", "stubs/qiskit.opflow.converters.ConverterBase.rst", "stubs/qiskit.opflow.converters.ConverterBase.convert.rst", "stubs/qiskit.opflow.converters.DictToCircuitSum.rst", "stubs/qiskit.opflow.converters.DictToCircuitSum.convert.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.construct_cnot_chain.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.convert.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.get_cob_circuit.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.get_diagonal_pauli_op.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.get_diagonalizing_clifford.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.get_tpb_pauli.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.measurement_replacement_fn.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.operator_replacement_fn.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.pad_paulis_to_equal_length.rst", "stubs/qiskit.opflow.converters.PauliBasisChange.statefn_replacement_fn.rst", "stubs/qiskit.opflow.converters.TwoQubitReduction.rst", "stubs/qiskit.opflow.converters.TwoQubitReduction.convert.rst", "stubs/qiskit.opflow.double_commutator.rst", "stubs/qiskit.opflow.evolutions.rst", "stubs/qiskit.opflow.evolutions.EvolutionBase.rst", "stubs/qiskit.opflow.evolutions.EvolutionBase.convert.rst", "stubs/qiskit.opflow.evolutions.EvolutionFactory.rst", "stubs/qiskit.opflow.evolutions.EvolutionFactory.build.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.add.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.adjoint.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.assign_parameters.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.compose.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.equals.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.eval.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.log_i.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.permute.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.primitive_strings.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.reduce.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.tensor.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_instruction.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_matrix.rst", "stubs/qiskit.opflow.evolutions.EvolvedOp.to_matrix_op.rst", "stubs/qiskit.opflow.evolutions.MatrixEvolution.rst", "stubs/qiskit.opflow.evolutions.MatrixEvolution.convert.rst", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.rst", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.convert.rst", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_abelian_paulisum.rst", "stubs/qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_pauli.rst", "stubs/qiskit.opflow.evolutions.QDrift.rst", "stubs/qiskit.opflow.evolutions.QDrift.convert.rst", "stubs/qiskit.opflow.evolutions.Suzuki.rst", "stubs/qiskit.opflow.evolutions.Suzuki.convert.rst", "stubs/qiskit.opflow.evolutions.Trotter.rst", "stubs/qiskit.opflow.evolutions.TrotterizationBase.rst", "stubs/qiskit.opflow.evolutions.TrotterizationBase.convert.rst", "stubs/qiskit.opflow.evolutions.TrotterizationFactory.rst", "stubs/qiskit.opflow.evolutions.TrotterizationFactory.build.rst", "stubs/qiskit.opflow.expectations.rst", "stubs/qiskit.opflow.expectations.AerPauliExpectation.rst", "stubs/qiskit.opflow.expectations.AerPauliExpectation.compute_variance.rst", "stubs/qiskit.opflow.expectations.AerPauliExpectation.convert.rst", "stubs/qiskit.opflow.expectations.CVaRExpectation.rst", "stubs/qiskit.opflow.expectations.CVaRExpectation.compute_variance.rst", "stubs/qiskit.opflow.expectations.CVaRExpectation.convert.rst", "stubs/qiskit.opflow.expectations.ExpectationBase.rst", "stubs/qiskit.opflow.expectations.ExpectationBase.compute_variance.rst", "stubs/qiskit.opflow.expectations.ExpectationBase.convert.rst", "stubs/qiskit.opflow.expectations.ExpectationFactory.rst", "stubs/qiskit.opflow.expectations.ExpectationFactory.build.rst", "stubs/qiskit.opflow.expectations.MatrixExpectation.rst", "stubs/qiskit.opflow.expectations.MatrixExpectation.compute_variance.rst", "stubs/qiskit.opflow.expectations.MatrixExpectation.convert.rst", "stubs/qiskit.opflow.expectations.PauliExpectation.rst", "stubs/qiskit.opflow.expectations.PauliExpectation.compute_variance.rst", "stubs/qiskit.opflow.expectations.PauliExpectation.convert.rst", "stubs/qiskit.opflow.gradients.rst", "stubs/qiskit.opflow.gradients.CircuitGradient.rst", "stubs/qiskit.opflow.gradients.CircuitGradient.convert.rst", "stubs/qiskit.opflow.gradients.CircuitQFI.rst", "stubs/qiskit.opflow.gradients.CircuitQFI.convert.rst", "stubs/qiskit.opflow.gradients.DerivativeBase.rst", "stubs/qiskit.opflow.gradients.DerivativeBase.convert.rst", "stubs/qiskit.opflow.gradients.DerivativeBase.gradient_wrapper.rst", "stubs/qiskit.opflow.gradients.DerivativeBase.parameter_expression_grad.rst", "stubs/qiskit.opflow.gradients.Gradient.rst", "stubs/qiskit.opflow.gradients.Gradient.convert.rst", "stubs/qiskit.opflow.gradients.Gradient.get_gradient.rst", "stubs/qiskit.opflow.gradients.GradientBase.rst", "stubs/qiskit.opflow.gradients.Hessian.rst", "stubs/qiskit.opflow.gradients.Hessian.convert.rst", "stubs/qiskit.opflow.gradients.Hessian.get_hessian.rst", "stubs/qiskit.opflow.gradients.HessianBase.rst", "stubs/qiskit.opflow.gradients.NaturalGradient.rst", "stubs/qiskit.opflow.gradients.NaturalGradient.convert.rst", "stubs/qiskit.opflow.gradients.NaturalGradient.nat_grad_combo_fn.rst", "stubs/qiskit.opflow.gradients.QFI.rst", "stubs/qiskit.opflow.gradients.QFI.convert.rst", "stubs/qiskit.opflow.gradients.QFIBase.rst", "stubs/qiskit.opflow.list_ops.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.adjoint.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.compose.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.eval.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.non_distributive_reduce.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.reduce.rst", "stubs/qiskit.opflow.list_ops.ComposedOp.to_circuit.rst", "stubs/qiskit.opflow.list_ops.ListOp.rst", "stubs/qiskit.opflow.list_ops.ListOp.add.rst", "stubs/qiskit.opflow.list_ops.ListOp.adjoint.rst", "stubs/qiskit.opflow.list_ops.ListOp.assign_parameters.rst", "stubs/qiskit.opflow.list_ops.ListOp.compose.rst", "stubs/qiskit.opflow.list_ops.ListOp.default_combo_fn.rst", "stubs/qiskit.opflow.list_ops.ListOp.equals.rst", "stubs/qiskit.opflow.list_ops.ListOp.eval.rst", "stubs/qiskit.opflow.list_ops.ListOp.exp_i.rst", "stubs/qiskit.opflow.list_ops.ListOp.log_i.rst", "stubs/qiskit.opflow.list_ops.ListOp.mul.rst", "stubs/qiskit.opflow.list_ops.ListOp.permute.rst", "stubs/qiskit.opflow.list_ops.ListOp.power.rst", "stubs/qiskit.opflow.list_ops.ListOp.primitive_strings.rst", "stubs/qiskit.opflow.list_ops.ListOp.reduce.rst", "stubs/qiskit.opflow.list_ops.ListOp.tensor.rst", "stubs/qiskit.opflow.list_ops.ListOp.tensorpower.rst", "stubs/qiskit.opflow.list_ops.ListOp.to_circuit_op.rst", "stubs/qiskit.opflow.list_ops.ListOp.to_matrix.rst", "stubs/qiskit.opflow.list_ops.ListOp.to_matrix_op.rst", "stubs/qiskit.opflow.list_ops.ListOp.to_pauli_op.rst", "stubs/qiskit.opflow.list_ops.ListOp.to_spmatrix.rst", "stubs/qiskit.opflow.list_ops.ListOp.traverse.rst", "stubs/qiskit.opflow.list_ops.SummedOp.rst", "stubs/qiskit.opflow.list_ops.SummedOp.add.rst", "stubs/qiskit.opflow.list_ops.SummedOp.collapse_summands.rst", "stubs/qiskit.opflow.list_ops.SummedOp.equals.rst", "stubs/qiskit.opflow.list_ops.SummedOp.reduce.rst", "stubs/qiskit.opflow.list_ops.SummedOp.to_circuit.rst", "stubs/qiskit.opflow.list_ops.SummedOp.to_matrix_op.rst", "stubs/qiskit.opflow.list_ops.SummedOp.to_pauli_op.rst", "stubs/qiskit.opflow.list_ops.TensoredOp.rst", "stubs/qiskit.opflow.list_ops.TensoredOp.eval.rst", "stubs/qiskit.opflow.list_ops.TensoredOp.reduce.rst", "stubs/qiskit.opflow.list_ops.TensoredOp.tensor.rst", "stubs/qiskit.opflow.list_ops.TensoredOp.to_circuit.rst", "stubs/qiskit.opflow.primitive_ops.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.add.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.adjoint.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.assign_parameters.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.compose.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.equals.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.eval.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.permute.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.primitive_strings.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.reduce.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.tensor.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_circuit.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_circuit_op.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_instruction.rst", "stubs/qiskit.opflow.primitive_ops.CircuitOp.to_matrix.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.add.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.adjoint.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.compose.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.equals.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.eval.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.exp_i.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.permute.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.primitive_strings.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.tensor.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_instruction.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_matrix.rst", "stubs/qiskit.opflow.primitive_ops.MatrixOp.to_matrix_op.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.add.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.adjoint.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.compose.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.equals.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.eval.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.exp_i.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.permute.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.primitive_strings.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.tensor.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_circuit.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_instruction.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_matrix.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_pauli_op.rst", "stubs/qiskit.opflow.primitive_ops.PauliOp.to_spmatrix.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.add.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.adjoint.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.compose.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.equals.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.eval.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.exp_i.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.from_list.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.is_hermitian.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.is_zero.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.matrix_iter.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.mul.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.permute.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.primitive_strings.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.reduce.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.tensor.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_instruction.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_matrix.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_pauli_op.rst", "stubs/qiskit.opflow.primitive_ops.PauliSumOp.to_spmatrix.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.add.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.adjoint.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.assign_parameters.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.compose.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.equals.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.eval.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.exp_i.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.log_i.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.mul.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.permute.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.primitive_strings.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.reduce.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.tensor.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.tensorpower.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit_op.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_instruction.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix_op.rst", "stubs/qiskit.opflow.primitive_ops.PrimitiveOp.to_pauli_op.rst", "stubs/qiskit.opflow.primitive_ops.TaperedPauliSumOp.rst", "stubs/qiskit.opflow.primitive_ops.TaperedPauliSumOp.assign_parameters.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.consistent_tapering.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.copy.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.find_Z2_symmetries.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.is_empty.rst", "stubs/qiskit.opflow.primitive_ops.Z2Symmetries.taper.rst", "stubs/qiskit.opflow.state_fns.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.add.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.adjoint.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.compute_cvar.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.eval.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.eval_variance.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.get_outcome_energies_probabilities.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.mul.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.sample.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.tensor.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_matrix.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.to_matrix_op.rst", "stubs/qiskit.opflow.state_fns.CVaRMeasurement.traverse.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.add.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.assign_parameters.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.compose.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.eval.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.from_dict.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.from_vector.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.permute.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.reduce.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.sample.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.tensor.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_circuit.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_instruction.rst", "stubs/qiskit.opflow.state_fns.CircuitStateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.add.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.eval.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.permute.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.sample.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.tensor.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.to_spmatrix.rst", "stubs/qiskit.opflow.state_fns.DictStateFn.to_spmatrix_op.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.add.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.eval.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.permute.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.sample.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.tensor.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.OperatorStateFn.to_matrix_op.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.add.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.equals.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.eval.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.sample.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_dict_fn.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix_op.rst", "stubs/qiskit.opflow.state_fns.SparseVectorStateFn.to_spmatrix.rst", "stubs/qiskit.opflow.state_fns.StateFn.rst", "stubs/qiskit.opflow.state_fns.StateFn.add.rst", "stubs/qiskit.opflow.state_fns.StateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.StateFn.assign_parameters.rst", "stubs/qiskit.opflow.state_fns.StateFn.compose.rst", "stubs/qiskit.opflow.state_fns.StateFn.equals.rst", "stubs/qiskit.opflow.state_fns.StateFn.eval.rst", "stubs/qiskit.opflow.state_fns.StateFn.mul.rst", "stubs/qiskit.opflow.state_fns.StateFn.permute.rst", "stubs/qiskit.opflow.state_fns.StateFn.power.rst", "stubs/qiskit.opflow.state_fns.StateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.StateFn.reduce.rst", "stubs/qiskit.opflow.state_fns.StateFn.sample.rst", "stubs/qiskit.opflow.state_fns.StateFn.tensor.rst", "stubs/qiskit.opflow.state_fns.StateFn.tensorpower.rst", "stubs/qiskit.opflow.state_fns.StateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.StateFn.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.StateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.StateFn.to_matrix_op.rst", "stubs/qiskit.opflow.state_fns.StateFn.traverse.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.add.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.adjoint.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.eval.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.permute.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.primitive_strings.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.sample.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.tensor.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_circuit_op.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_density_matrix.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_dict_fn.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_matrix.rst", "stubs/qiskit.opflow.state_fns.VectorStateFn.to_matrix_op.rst", "stubs/qiskit.primitives.BaseEstimator.rst", "stubs/qiskit.primitives.BaseEstimator.close.rst", "stubs/qiskit.primitives.BaseSampler.rst", "stubs/qiskit.primitives.BaseSampler.close.rst", "stubs/qiskit.primitives.Estimator.rst", "stubs/qiskit.primitives.Estimator.close.rst", "stubs/qiskit.primitives.EstimatorResult.rst", "stubs/qiskit.primitives.Sampler.rst", "stubs/qiskit.primitives.Sampler.close.rst", "stubs/qiskit.primitives.SamplerResult.rst", "stubs/qiskit.providers.Backend.rst", "stubs/qiskit.providers.BackendPropertyError.rst", "stubs/qiskit.providers.BackendV1.rst", "stubs/qiskit.providers.BackendV1.configuration.rst", "stubs/qiskit.providers.BackendV1.name.rst", "stubs/qiskit.providers.BackendV1.properties.rst", "stubs/qiskit.providers.BackendV1.provider.rst", "stubs/qiskit.providers.BackendV1.run.rst", "stubs/qiskit.providers.BackendV1.set_options.rst", "stubs/qiskit.providers.BackendV1.status.rst", "stubs/qiskit.providers.BackendV2.rst", "stubs/qiskit.providers.BackendV2.acquire_channel.rst", "stubs/qiskit.providers.BackendV2.control_channel.rst", "stubs/qiskit.providers.BackendV2.drive_channel.rst", "stubs/qiskit.providers.BackendV2.measure_channel.rst", "stubs/qiskit.providers.BackendV2.qubit_properties.rst", "stubs/qiskit.providers.BackendV2.run.rst", "stubs/qiskit.providers.BackendV2.set_options.rst", "stubs/qiskit.providers.Job.rst", "stubs/qiskit.providers.JobError.rst", "stubs/qiskit.providers.JobStatus.rst", "stubs/qiskit.providers.JobTimeoutError.rst", "stubs/qiskit.providers.JobV1.rst", "stubs/qiskit.providers.JobV1.backend.rst", "stubs/qiskit.providers.JobV1.cancel.rst", "stubs/qiskit.providers.JobV1.cancelled.rst", "stubs/qiskit.providers.JobV1.done.rst", "stubs/qiskit.providers.JobV1.in_final_state.rst", "stubs/qiskit.providers.JobV1.job_id.rst", "stubs/qiskit.providers.JobV1.result.rst", "stubs/qiskit.providers.JobV1.running.rst", "stubs/qiskit.providers.JobV1.status.rst", "stubs/qiskit.providers.JobV1.submit.rst", "stubs/qiskit.providers.JobV1.wait_for_final_state.rst", "stubs/qiskit.providers.Options.rst", "stubs/qiskit.providers.Options.get.rst", "stubs/qiskit.providers.Options.set_validator.rst", "stubs/qiskit.providers.Options.update_options.rst", "stubs/qiskit.providers.Provider.rst", "stubs/qiskit.providers.ProviderV1.rst", "stubs/qiskit.providers.ProviderV1.backends.rst", "stubs/qiskit.providers.ProviderV1.get_backend.rst", "stubs/qiskit.providers.QiskitBackendNotFoundError.rst", "stubs/qiskit.providers.QubitProperties.rst", "stubs/qiskit.providers.aer.AerError.rst", "stubs/qiskit.providers.aer.AerProvider.rst", "stubs/qiskit.providers.aer.AerProvider.backends.rst", "stubs/qiskit.providers.aer.AerProvider.get_backend.rst", "stubs/qiskit.providers.aer.AerSimulator.rst", "stubs/qiskit.providers.aer.AerSimulator.available_devices.rst", "stubs/qiskit.providers.aer.AerSimulator.available_methods.rst", "stubs/qiskit.providers.aer.AerSimulator.clear_options.rst", "stubs/qiskit.providers.aer.AerSimulator.configuration.rst", "stubs/qiskit.providers.aer.AerSimulator.defaults.rst", "stubs/qiskit.providers.aer.AerSimulator.from_backend.rst", "stubs/qiskit.providers.aer.AerSimulator.name.rst", "stubs/qiskit.providers.aer.AerSimulator.properties.rst", "stubs/qiskit.providers.aer.AerSimulator.provider.rst", "stubs/qiskit.providers.aer.AerSimulator.run.rst", "stubs/qiskit.providers.aer.AerSimulator.set_option.rst", "stubs/qiskit.providers.aer.AerSimulator.set_options.rst", "stubs/qiskit.providers.aer.AerSimulator.status.rst", "stubs/qiskit.providers.aer.PulseSimulator.rst", "stubs/qiskit.providers.aer.PulseSimulator.clear_options.rst", "stubs/qiskit.providers.aer.PulseSimulator.configuration.rst", "stubs/qiskit.providers.aer.PulseSimulator.defaults.rst", "stubs/qiskit.providers.aer.PulseSimulator.from_backend.rst", "stubs/qiskit.providers.aer.PulseSimulator.name.rst", "stubs/qiskit.providers.aer.PulseSimulator.properties.rst", "stubs/qiskit.providers.aer.PulseSimulator.provider.rst", "stubs/qiskit.providers.aer.PulseSimulator.run.rst", "stubs/qiskit.providers.aer.PulseSimulator.set_option.rst", "stubs/qiskit.providers.aer.PulseSimulator.set_options.rst", "stubs/qiskit.providers.aer.PulseSimulator.status.rst", "stubs/qiskit.providers.aer.QasmSimulator.rst", "stubs/qiskit.providers.aer.QasmSimulator.available_devices.rst", "stubs/qiskit.providers.aer.QasmSimulator.available_methods.rst", "stubs/qiskit.providers.aer.QasmSimulator.clear_options.rst", "stubs/qiskit.providers.aer.QasmSimulator.configuration.rst", "stubs/qiskit.providers.aer.QasmSimulator.defaults.rst", "stubs/qiskit.providers.aer.QasmSimulator.from_backend.rst", "stubs/qiskit.providers.aer.QasmSimulator.name.rst", "stubs/qiskit.providers.aer.QasmSimulator.properties.rst", "stubs/qiskit.providers.aer.QasmSimulator.provider.rst", "stubs/qiskit.providers.aer.QasmSimulator.run.rst", "stubs/qiskit.providers.aer.QasmSimulator.set_option.rst", "stubs/qiskit.providers.aer.QasmSimulator.set_options.rst", "stubs/qiskit.providers.aer.QasmSimulator.status.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.available_devices.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.available_methods.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.clear_options.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.configuration.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.defaults.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.name.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.properties.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.provider.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.run.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.set_option.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.set_options.rst", "stubs/qiskit.providers.aer.StatevectorSimulator.status.rst", "stubs/qiskit.providers.aer.UnitarySimulator.rst", "stubs/qiskit.providers.aer.UnitarySimulator.available_devices.rst", "stubs/qiskit.providers.aer.UnitarySimulator.available_methods.rst", "stubs/qiskit.providers.aer.UnitarySimulator.clear_options.rst", "stubs/qiskit.providers.aer.UnitarySimulator.configuration.rst", "stubs/qiskit.providers.aer.UnitarySimulator.defaults.rst", "stubs/qiskit.providers.aer.UnitarySimulator.name.rst", "stubs/qiskit.providers.aer.UnitarySimulator.properties.rst", "stubs/qiskit.providers.aer.UnitarySimulator.provider.rst", "stubs/qiskit.providers.aer.UnitarySimulator.run.rst", "stubs/qiskit.providers.aer.UnitarySimulator.set_option.rst", "stubs/qiskit.providers.aer.UnitarySimulator.set_options.rst", "stubs/qiskit.providers.aer.UnitarySimulator.status.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.assemble.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.c_if.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.copy.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.inverse.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.qasm.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.repeat.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.Snapshot.validate_parameter.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.assemble.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.c_if.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.copy.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.inverse.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.qasm.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.repeat.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.SnapshotDensityMatrix.validate_parameter.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.assemble.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.c_if.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.copy.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.inverse.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.qasm.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.repeat.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.SnapshotExpectationValue.validate_parameter.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.assemble.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.c_if.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.copy.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.inverse.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.qasm.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.repeat.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.SnapshotProbabilities.validate_parameter.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.assemble.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.c_if.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.copy.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.inverse.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.qasm.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.repeat.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStabilizer.validate_parameter.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.add_decomposition.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.assemble.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.broadcast_arguments.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.c_if.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.copy.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.define_snapshot_register.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.inverse.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.is_parameterized.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.qasm.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.repeat.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.reverse_ops.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.soft_compare.rst", "stubs/qiskit.providers.aer.extensions.SnapshotStatevector.validate_parameter.rst", "stubs/qiskit.providers.aer.jobs.AerJob.rst", "stubs/qiskit.providers.aer.jobs.AerJob.backend.rst", "stubs/qiskit.providers.aer.jobs.AerJob.cancel.rst", "stubs/qiskit.providers.aer.jobs.AerJob.cancelled.rst", "stubs/qiskit.providers.aer.jobs.AerJob.done.rst", "stubs/qiskit.providers.aer.jobs.AerJob.executor.rst", "stubs/qiskit.providers.aer.jobs.AerJob.in_final_state.rst", "stubs/qiskit.providers.aer.jobs.AerJob.job_id.rst", "stubs/qiskit.providers.aer.jobs.AerJob.qobj.rst", "stubs/qiskit.providers.aer.jobs.AerJob.result.rst", "stubs/qiskit.providers.aer.jobs.AerJob.running.rst", "stubs/qiskit.providers.aer.jobs.AerJob.status.rst", "stubs/qiskit.providers.aer.jobs.AerJob.submit.rst", "stubs/qiskit.providers.aer.jobs.AerJob.wait_for_final_state.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.backend.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.cancel.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.cancelled.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.done.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.executor.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.in_final_state.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.job.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.job_id.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.result.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.running.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.status.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.submit.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.wait_for_final_state.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker_job.rst", "stubs/qiskit.providers.aer.jobs.AerJobSet.worker_results.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.assemble.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.c_if.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.copy.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.inverse.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.qasm.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.repeat.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudes.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.assemble.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.c_if.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.copy.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.inverse.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.qasm.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.repeat.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveAmplitudesSquared.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveClifford.rst", "stubs/qiskit.providers.aer.library.SaveClifford.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveClifford.assemble.rst", "stubs/qiskit.providers.aer.library.SaveClifford.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveClifford.c_if.rst", "stubs/qiskit.providers.aer.library.SaveClifford.copy.rst", "stubs/qiskit.providers.aer.library.SaveClifford.inverse.rst", "stubs/qiskit.providers.aer.library.SaveClifford.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveClifford.qasm.rst", "stubs/qiskit.providers.aer.library.SaveClifford.repeat.rst", "stubs/qiskit.providers.aer.library.SaveClifford.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveClifford.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveClifford.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.assemble.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.c_if.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.copy.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.inverse.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.qasm.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.repeat.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveDensityMatrix.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.assemble.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.c_if.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.copy.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.inverse.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.qasm.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.repeat.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValue.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.assemble.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.c_if.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.copy.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.inverse.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.qasm.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.repeat.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveExpectationValueVariance.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.assemble.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.c_if.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.copy.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.inverse.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.qasm.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.repeat.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveMatrixProductState.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.assemble.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.c_if.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.copy.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.inverse.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.qasm.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.repeat.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveProbabilities.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.assemble.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.c_if.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.copy.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.inverse.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.qasm.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.repeat.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveProbabilitiesDict.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.assemble.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.c_if.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.copy.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.inverse.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.qasm.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.repeat.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveStabilizer.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveState.rst", "stubs/qiskit.providers.aer.library.SaveState.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveState.assemble.rst", "stubs/qiskit.providers.aer.library.SaveState.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveState.c_if.rst", "stubs/qiskit.providers.aer.library.SaveState.copy.rst", "stubs/qiskit.providers.aer.library.SaveState.inverse.rst", "stubs/qiskit.providers.aer.library.SaveState.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveState.qasm.rst", "stubs/qiskit.providers.aer.library.SaveState.repeat.rst", "stubs/qiskit.providers.aer.library.SaveState.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveState.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveState.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.assemble.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.c_if.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.copy.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.inverse.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.qasm.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.repeat.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveStatevector.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.assemble.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.c_if.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.copy.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.inverse.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.qasm.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.repeat.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveStatevectorDict.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.assemble.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.c_if.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.copy.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.inverse.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.qasm.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.repeat.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveSuperOp.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.assemble.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.c_if.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.copy.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.inverse.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.qasm.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.repeat.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.soft_compare.rst", "stubs/qiskit.providers.aer.library.SaveUnitary.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.assemble.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.c_if.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.copy.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.inverse.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.qasm.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.repeat.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetDensityMatrix.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.assemble.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.c_if.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.copy.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.inverse.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.qasm.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.repeat.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetMatrixProductState.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.assemble.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.c_if.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.copy.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.inverse.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.qasm.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.repeat.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetStabilizer.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetStatevector.rst", "stubs/qiskit.providers.aer.library.SetStatevector.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetStatevector.assemble.rst", "stubs/qiskit.providers.aer.library.SetStatevector.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetStatevector.c_if.rst", "stubs/qiskit.providers.aer.library.SetStatevector.copy.rst", "stubs/qiskit.providers.aer.library.SetStatevector.inverse.rst", "stubs/qiskit.providers.aer.library.SetStatevector.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetStatevector.qasm.rst", "stubs/qiskit.providers.aer.library.SetStatevector.repeat.rst", "stubs/qiskit.providers.aer.library.SetStatevector.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetStatevector.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetStatevector.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.assemble.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.c_if.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.copy.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.inverse.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.qasm.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.repeat.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetSuperOp.validate_parameter.rst", "stubs/qiskit.providers.aer.library.SetUnitary.rst", "stubs/qiskit.providers.aer.library.SetUnitary.add_decomposition.rst", "stubs/qiskit.providers.aer.library.SetUnitary.assemble.rst", "stubs/qiskit.providers.aer.library.SetUnitary.broadcast_arguments.rst", "stubs/qiskit.providers.aer.library.SetUnitary.c_if.rst", "stubs/qiskit.providers.aer.library.SetUnitary.copy.rst", "stubs/qiskit.providers.aer.library.SetUnitary.inverse.rst", "stubs/qiskit.providers.aer.library.SetUnitary.is_parameterized.rst", "stubs/qiskit.providers.aer.library.SetUnitary.qasm.rst", "stubs/qiskit.providers.aer.library.SetUnitary.repeat.rst", "stubs/qiskit.providers.aer.library.SetUnitary.reverse_ops.rst", "stubs/qiskit.providers.aer.library.SetUnitary.soft_compare.rst", "stubs/qiskit.providers.aer.library.SetUnitary.validate_parameter.rst", "stubs/qiskit.providers.aer.library.save_amplitudes.rst", "stubs/qiskit.providers.aer.library.save_amplitudes_squared.rst", "stubs/qiskit.providers.aer.library.save_clifford.rst", "stubs/qiskit.providers.aer.library.save_density_matrix.rst", "stubs/qiskit.providers.aer.library.save_expectation_value.rst", "stubs/qiskit.providers.aer.library.save_expectation_value_variance.rst", "stubs/qiskit.providers.aer.library.save_matrix_product_state.rst", "stubs/qiskit.providers.aer.library.save_probabilities.rst", "stubs/qiskit.providers.aer.library.save_probabilities_dict.rst", "stubs/qiskit.providers.aer.library.save_stabilizer.rst", "stubs/qiskit.providers.aer.library.save_state.rst", "stubs/qiskit.providers.aer.library.save_statevector.rst", "stubs/qiskit.providers.aer.library.save_statevector_dict.rst", "stubs/qiskit.providers.aer.library.save_superop.rst", "stubs/qiskit.providers.aer.library.save_unitary.rst", "stubs/qiskit.providers.aer.library.set_density_matrix.rst", "stubs/qiskit.providers.aer.library.set_matrix_product_state.rst", "stubs/qiskit.providers.aer.library.set_stabilizer.rst", "stubs/qiskit.providers.aer.library.set_statevector.rst", "stubs/qiskit.providers.aer.library.set_superop.rst", "stubs/qiskit.providers.aer.library.set_unitary.rst", "stubs/qiskit.providers.aer.noise.LocalNoisePass.rst", "stubs/qiskit.providers.aer.noise.LocalNoisePass.name.rst", "stubs/qiskit.providers.aer.noise.LocalNoisePass.run.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_all_qubit_quantum_error.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_all_qubit_readout_error.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_basis_gates.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_nonlocal_quantum_error.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_quantum_error.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.add_readout_error.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.from_backend.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.from_dict.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.is_ideal.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.reset.rst", "stubs/qiskit.providers.aer.noise.NoiseModel.to_dict.rst", "stubs/qiskit.providers.aer.noise.QuantumError.rst", "stubs/qiskit.providers.aer.noise.QuantumError.compose.rst", "stubs/qiskit.providers.aer.noise.QuantumError.copy.rst", "stubs/qiskit.providers.aer.noise.QuantumError.dot.rst", "stubs/qiskit.providers.aer.noise.QuantumError.error_term.rst", "stubs/qiskit.providers.aer.noise.QuantumError.expand.rst", "stubs/qiskit.providers.aer.noise.QuantumError.ideal.rst", "stubs/qiskit.providers.aer.noise.QuantumError.input_dims.rst", "stubs/qiskit.providers.aer.noise.QuantumError.output_dims.rst", "stubs/qiskit.providers.aer.noise.QuantumError.power.rst", "stubs/qiskit.providers.aer.noise.QuantumError.reshape.rst", "stubs/qiskit.providers.aer.noise.QuantumError.set_atol.rst", "stubs/qiskit.providers.aer.noise.QuantumError.set_rtol.rst", "stubs/qiskit.providers.aer.noise.QuantumError.tensor.rst", "stubs/qiskit.providers.aer.noise.QuantumError.to_dict.rst", "stubs/qiskit.providers.aer.noise.QuantumError.to_instruction.rst", "stubs/qiskit.providers.aer.noise.QuantumError.to_quantumchannel.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.compose.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.copy.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.dot.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.expand.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.ideal.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.power.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.set_atol.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.set_rtol.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.tensor.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.to_dict.rst", "stubs/qiskit.providers.aer.noise.ReadoutError.to_instruction.rst", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass.rst", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass.name.rst", "stubs/qiskit.providers.aer.noise.RelaxationNoisePass.run.rst", "stubs/qiskit.providers.aer.noise.amplitude_damping_error.rst", "stubs/qiskit.providers.aer.noise.coherent_unitary_error.rst", "stubs/qiskit.providers.aer.noise.depolarizing_error.rst", "stubs/qiskit.providers.aer.noise.device.basic_device_gate_errors.rst", "stubs/qiskit.providers.aer.noise.device.basic_device_readout_errors.rst", "stubs/qiskit.providers.aer.noise.device.gate_error_values.rst", "stubs/qiskit.providers.aer.noise.device.gate_length_values.rst", "stubs/qiskit.providers.aer.noise.device.gate_param_values.rst", "stubs/qiskit.providers.aer.noise.device.readout_error_values.rst", "stubs/qiskit.providers.aer.noise.device.thermal_relaxation_values.rst", "stubs/qiskit.providers.aer.noise.kraus_error.rst", "stubs/qiskit.providers.aer.noise.mixed_unitary_error.rst", "stubs/qiskit.providers.aer.noise.pauli_error.rst", "stubs/qiskit.providers.aer.noise.phase_amplitude_damping_error.rst", "stubs/qiskit.providers.aer.noise.phase_damping_error.rst", "stubs/qiskit.providers.aer.noise.reset_error.rst", "stubs/qiskit.providers.aer.noise.thermal_relaxation_error.rst", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.rst", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.calculate_channel_frequencies.rst", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.control_channel_index.rst", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.from_backend.rst", "stubs/qiskit.providers.aer.pulse.PulseSystemModel.from_config.rst", "stubs/qiskit.providers.aer.pulse.duffing_system_model.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.channel_matrix_representation.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_P.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_channel_operation.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.compute_q.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.fidelity.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.flatten_matrix.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.generate_channel_matrices.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.generate_channel_quadratic_programming_matrices.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.get_const_matrix_from_channel.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.get_matrix_from_channel.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.operator_circuit.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.operator_matrix.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.prepare_channel_operator_list.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.prepare_honesty_constraint.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.solve_quadratic_program.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.transform_by_given_channel.rst", "stubs/qiskit.providers.aer.utils.NoiseTransformer.transform_by_operator_list.rst", "stubs/qiskit.providers.aer.utils.approximate_noise_model.rst", "stubs/qiskit.providers.aer.utils.approximate_quantum_error.rst", "stubs/qiskit.providers.aer.utils.insert_noise.rst", "stubs/qiskit.providers.aer.utils.remap_noise_model.rst", "stubs/qiskit.providers.aer.utils.transform_noise_model.rst", "stubs/qiskit.providers.aer.utils.transpile_noise_model.rst", "stubs/qiskit.providers.aer.utils.transpile_quantum_error.rst", "stubs/qiskit.providers.basicaer.BasicAerError.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.backend.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.cancel.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.cancelled.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.done.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.in_final_state.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.job_id.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.result.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.running.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.status.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.submit.rst", "stubs/qiskit.providers.basicaer.BasicAerJob.wait_for_final_state.rst", "stubs/qiskit.providers.basicaer.BasicAerProvider.rst", "stubs/qiskit.providers.basicaer.BasicAerProvider.backends.rst", "stubs/qiskit.providers.basicaer.BasicAerProvider.get_backend.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.configuration.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.name.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.properties.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.provider.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.run.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.run_experiment.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.set_options.rst", "stubs/qiskit.providers.basicaer.QasmSimulatorPy.status.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.configuration.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.name.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.properties.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.provider.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.run.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.run_experiment.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.set_options.rst", "stubs/qiskit.providers.basicaer.StatevectorSimulatorPy.status.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.configuration.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.name.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.properties.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.provider.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.run.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.run_experiment.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.set_options.rst", "stubs/qiskit.providers.basicaer.UnitarySimulatorPy.status.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.configuration.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.defaults.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.name.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.properties.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.provider.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.run.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.set_options.rst", "stubs/qiskit.providers.fake_provider.ConfigurableFakeBackend.status.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.configuration.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.defaults.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.name.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.properties.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.provider.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.run.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.set_options.rst", "stubs/qiskit.providers.fake_provider.Fake1Q.status.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.name.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.properties.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.provider.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.run.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeAlmaden.status.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeAlmadenV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.name.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.properties.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.provider.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.run.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeArmonk.status.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeArmonkV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.name.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.properties.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.provider.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.run.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeAthens.status.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeAthensV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBackend5QV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBackendV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.name.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.properties.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.provider.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.run.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBelem.status.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBelemV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.name.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.properties.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.provider.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.run.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingen.status.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBoeblingenV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.name.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.properties.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.provider.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.run.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBogota.status.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBogotaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.name.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.properties.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.provider.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.run.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklyn.status.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBrooklynV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.name.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.properties.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.provider.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.run.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeBurlington.status.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeBurlingtonV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.name.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.properties.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.provider.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.run.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCairo.status.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeCairoV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.name.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.properties.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.provider.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.run.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCambridge.status.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeCambridgeV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.name.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.properties.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.provider.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.run.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeCasablanca.status.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeCasablancaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.name.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.properties.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.provider.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.run.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeEssex.status.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeEssexV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.name.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.properties.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.provider.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.run.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupe.status.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeGuadalupeV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.name.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.properties.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.provider.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.run.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeHanoi.status.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeHanoiV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.name.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.properties.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.provider.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.run.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeJakarta.status.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeJakartaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.name.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.properties.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.provider.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.run.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburg.status.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeJohannesburgV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.name.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.properties.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.provider.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.run.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeKolkata.status.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeKolkataV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.name.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.properties.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.provider.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.run.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLagos.status.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeLagosV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLima.rst", "stubs/qiskit.providers.fake_provider.FakeLima.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeLima.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeLima.name.rst", "stubs/qiskit.providers.fake_provider.FakeLima.properties.rst", "stubs/qiskit.providers.fake_provider.FakeLima.provider.rst", "stubs/qiskit.providers.fake_provider.FakeLima.run.rst", "stubs/qiskit.providers.fake_provider.FakeLima.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLima.status.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeLimaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.name.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.properties.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.provider.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.run.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeLondon.status.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeLondonV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.name.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.properties.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.provider.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.run.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeManhattan.status.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeManhattanV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeManila.rst", "stubs/qiskit.providers.fake_provider.FakeManila.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeManila.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeManila.name.rst", "stubs/qiskit.providers.fake_provider.FakeManila.properties.rst", "stubs/qiskit.providers.fake_provider.FakeManila.provider.rst", "stubs/qiskit.providers.fake_provider.FakeManila.run.rst", "stubs/qiskit.providers.fake_provider.FakeManila.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeManila.status.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeManilaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.name.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.properties.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.provider.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.run.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourne.status.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeMelbourneV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.name.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.properties.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.provider.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.run.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMontreal.status.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeMontrealV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.name.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.properties.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.provider.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.run.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMumbai.status.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.run.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiFractionalCX.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeMumbaiV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.name.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.properties.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.provider.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.run.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeNairobi.status.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeNairobiV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.name.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.properties.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.provider.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.run.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse2Q.status.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.name.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.properties.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.provider.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.run.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeOpenPulse3Q.status.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.name.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.properties.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.provider.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.run.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeOurense.status.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeOurenseV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeParis.rst", "stubs/qiskit.providers.fake_provider.FakeParis.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeParis.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeParis.name.rst", "stubs/qiskit.providers.fake_provider.FakeParis.properties.rst", "stubs/qiskit.providers.fake_provider.FakeParis.provider.rst", "stubs/qiskit.providers.fake_provider.FakeParis.run.rst", "stubs/qiskit.providers.fake_provider.FakeParis.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeParis.status.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeParisV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.configuration.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.name.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.properties.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.provider.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.run.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.set_options.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsie.status.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.run.rst", "stubs/qiskit.providers.fake_provider.FakePoughkeepsieV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeProvider.rst", "stubs/qiskit.providers.fake_provider.FakeProvider.backends.rst", "stubs/qiskit.providers.fake_provider.FakeProvider.get_backend.rst", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2.rst", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2.backends.rst", "stubs/qiskit.providers.fake_provider.FakeProviderForBackendV2.get_backend.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.name.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.properties.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.provider.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.run.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeQasmSimulator.status.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.name.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.properties.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.provider.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.run.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeQuito.status.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeQuitoV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.name.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.properties.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.provider.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.run.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRochester.status.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeRochesterV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRome.rst", "stubs/qiskit.providers.fake_provider.FakeRome.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeRome.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeRome.name.rst", "stubs/qiskit.providers.fake_provider.FakeRome.properties.rst", "stubs/qiskit.providers.fake_provider.FakeRome.provider.rst", "stubs/qiskit.providers.fake_provider.FakeRome.run.rst", "stubs/qiskit.providers.fake_provider.FakeRome.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRome.status.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeRomeV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.name.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.properties.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.provider.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.run.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeRueschlikon.status.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.name.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.properties.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.provider.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.run.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeSantiago.status.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeSantiagoV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.name.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.properties.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.provider.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.run.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeSingapore.status.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeSingaporeV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.name.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.properties.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.provider.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.run.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeSydney.status.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeSydneyV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.name.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.properties.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.provider.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.run.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeTenerife.status.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.name.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.properties.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.provider.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.run.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeTokyo.status.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.name.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.properties.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.provider.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.run.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeToronto.status.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeTorontoV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.name.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.properties.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.provider.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.run.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeValencia.status.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeValenciaV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.name.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.properties.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.provider.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.run.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeVigo.status.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeVigoV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.defaults.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.name.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.properties.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.provider.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.run.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeWashington.status.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeWashingtonV2.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.configuration.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.name.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.properties.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.provider.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.run.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.set_options.rst", "stubs/qiskit.providers.fake_provider.FakeYorktown.status.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.acquire_channel.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.control_channel.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.drive_channel.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.measure_channel.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.qubit_properties.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.run.rst", "stubs/qiskit.providers.fake_provider.FakeYorktownV2.set_options.rst", "stubs/qiskit.providers.ibmq.AccountProvider.rst", "stubs/qiskit.providers.ibmq.AccountProvider.backends.rst", "stubs/qiskit.providers.ibmq.AccountProvider.get_backend.rst", "stubs/qiskit.providers.ibmq.AccountProvider.has_service.rst", "stubs/qiskit.providers.ibmq.AccountProvider.run_circuits.rst", "stubs/qiskit.providers.ibmq.AccountProvider.service.rst", "stubs/qiskit.providers.ibmq.AccountProvider.services.rst", "stubs/qiskit.providers.ibmq.BackendJobLimit.rst", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidFormat.rst", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidToken.rst", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsInvalidUrl.rst", "stubs/qiskit.providers.ibmq.IBMQAccountCredentialsNotFound.rst", "stubs/qiskit.providers.ibmq.IBMQAccountError.rst", "stubs/qiskit.providers.ibmq.IBMQAccountMultipleCredentialsFound.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.active_jobs.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.configuration.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.defaults.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.job_limit.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.jobs.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.name.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.properties.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.provider.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.remaining_jobs_count.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.reservations.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.retrieve_job.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.run.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.set_options.rst", "stubs/qiskit.providers.ibmq.IBMQBackend.status.rst", "stubs/qiskit.providers.ibmq.IBMQBackendApiError.rst", "stubs/qiskit.providers.ibmq.IBMQBackendApiProtocolError.rst", "stubs/qiskit.providers.ibmq.IBMQBackendError.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.backends.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.job_ids.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.jobs.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.my_reservations.rst", "stubs/qiskit.providers.ibmq.IBMQBackendService.retrieve_job.rst", "stubs/qiskit.providers.ibmq.IBMQBackendValueError.rst", "stubs/qiskit.providers.ibmq.IBMQError.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.active_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.delete_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.disable_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.enable_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.get_provider.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.load_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.providers.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.save_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.stored_account.rst", "stubs/qiskit.providers.ibmq.IBMQFactory.update_account.rst", "stubs/qiskit.providers.ibmq.IBMQProviderError.rst", "stubs/qiskit.providers.ibmq.RunnerResult.rst", "stubs/qiskit.providers.ibmq.RunnerResult.data.rst", "stubs/qiskit.providers.ibmq.RunnerResult.decode.rst", "stubs/qiskit.providers.ibmq.RunnerResult.from_dict.rst", "stubs/qiskit.providers.ibmq.RunnerResult.get_counts.rst", "stubs/qiskit.providers.ibmq.RunnerResult.get_memory.rst", "stubs/qiskit.providers.ibmq.RunnerResult.get_quasiprobabilities.rst", "stubs/qiskit.providers.ibmq.RunnerResult.get_statevector.rst", "stubs/qiskit.providers.ibmq.RunnerResult.get_unitary.rst", "stubs/qiskit.providers.ibmq.RunnerResult.to_dict.rst", "stubs/qiskit.providers.ibmq.credentials.Credentials.rst", "stubs/qiskit.providers.ibmq.credentials.Credentials.connection_parameters.rst", "stubs/qiskit.providers.ibmq.credentials.Credentials.is_ibmq.rst", "stubs/qiskit.providers.ibmq.credentials.Credentials.unique_id.rst", "stubs/qiskit.providers.ibmq.credentials.CredentialsError.rst", "stubs/qiskit.providers.ibmq.credentials.CredentialsNotFoundError.rst", "stubs/qiskit.providers.ibmq.credentials.InvalidCredentialsFormatError.rst", "stubs/qiskit.providers.ibmq.experiment.DeviceComponent.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentEntryExists.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentEntryNotFound.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentError.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_result.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_results.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.backends.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_analysis_result.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_experiment.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.create_figure.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_analysis_result.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_experiment.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.delete_figure.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.device_components.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.experiment.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.experiments.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.figure.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.save_preferences.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_analysis_result.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_experiment.rst", "stubs/qiskit.providers.ibmq.experiment.IBMExperimentService.update_figure.rst", "stubs/qiskit.providers.ibmq.experiment.ResultQuality.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.backend.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.backend_options.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.cancel.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.cancelled.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.circuits.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.creation_date.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.done.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.error_message.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.header.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.in_final_state.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.job_id.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.name.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.properties.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.qobj.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.queue_info.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.queue_position.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.refresh.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.result.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.running.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.scheduling_mode.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.share_level.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.status.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.submit.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.tags.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.time_per_step.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.update_name.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.update_tags.rst", "stubs/qiskit.providers.ibmq.job.IBMQJob.wait_for_final_state.rst", "stubs/qiskit.providers.ibmq.job.IBMQJobApiError.rst", "stubs/qiskit.providers.ibmq.job.IBMQJobError.rst", "stubs/qiskit.providers.ibmq.job.IBMQJobFailureError.rst", "stubs/qiskit.providers.ibmq.job.IBMQJobInvalidStateError.rst", "stubs/qiskit.providers.ibmq.job.IBMQJobTimeoutError.rst", "stubs/qiskit.providers.ibmq.job.QueueInfo.rst", "stubs/qiskit.providers.ibmq.job.QueueInfo.format.rst", "stubs/qiskit.providers.ibmq.job.job_monitor.rst", "stubs/qiskit.providers.ibmq.least_busy.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.job_sets.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.report.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.retrieve_job_set.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManager.run.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerError.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerInvalidStateError.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerJobNotFound.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerTimeoutError.rst", "stubs/qiskit.providers.ibmq.managed.IBMQJobManagerUnknownJobSet.rst", "stubs/qiskit.providers.ibmq.managed.IBMQManagedResultDataNotAvailable.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.cancel.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.error_message.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.qobj.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.result.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.status.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJob.submit.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.cancel.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.error_messages.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.job.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.job_set_id.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.jobs.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.managed_jobs.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.name.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.qobjs.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.report.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.results.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.retrieve_jobs.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.run.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.statuses.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.tags.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.update_name.rst", "stubs/qiskit.providers.ibmq.managed.ManagedJobSet.update_tags.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.combine_results.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.data.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_counts.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_memory.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_statevector.rst", "stubs/qiskit.providers.ibmq.managed.ManagedResults.get_unitary.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_job.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_program.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.job.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.jobs.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.logout.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.pprint_programs.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.program.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.programs.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.run.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.set_program_visibility.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.update_program.rst", "stubs/qiskit.providers.ibmq.runtime.IBMRuntimeService.upload_program.rst", "stubs/qiskit.providers.ibmq.runtime.ParameterNamespace.rst", "stubs/qiskit.providers.ibmq.runtime.ParameterNamespace.validate.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.configuration.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.name.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.properties.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.provider.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.run.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.set_options.rst", "stubs/qiskit.providers.ibmq.runtime.ProgramBackend.status.rst", "stubs/qiskit.providers.ibmq.runtime.ResultDecoder.rst", "stubs/qiskit.providers.ibmq.runtime.ResultDecoder.decode.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.decode.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.object_hook.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeDecoder.raw_decode.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.default.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.encode.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeEncoder.iterencode.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.backend.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.cancel.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.cancel_result_streaming.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.error_message.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.job_id.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.logs.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.result.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.status.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.stream_results.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeJob.wait_for_final_state.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeOptions.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeOptions.validate.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram.parameters.rst", "stubs/qiskit.providers.ibmq.runtime.RuntimeProgram.to_dict.rst", "stubs/qiskit.providers.ibmq.runtime.UserMessenger.rst", "stubs/qiskit.providers.ibmq.runtime.UserMessenger.publish.rst", "stubs/qiskit.providers.ibmq.utils.seconds_to_duration.rst", "stubs/qiskit.providers.ibmq.utils.to_python_identifier.rst", "stubs/qiskit.providers.ibmq.utils.update_qobj_config.rst", "stubs/qiskit.providers.ibmq.utils.utc_to_local.rst", "stubs/qiskit.providers.ibmq.utils.validate_job_tags.rst", "stubs/qiskit.providers.models.BackendConfiguration.rst", "stubs/qiskit.providers.models.BackendConfiguration.from_dict.rst", "stubs/qiskit.providers.models.BackendConfiguration.to_dict.rst", "stubs/qiskit.providers.models.BackendProperties.rst", "stubs/qiskit.providers.models.BackendProperties.faulty_gates.rst", "stubs/qiskit.providers.models.BackendProperties.faulty_qubits.rst", "stubs/qiskit.providers.models.BackendProperties.frequency.rst", "stubs/qiskit.providers.models.BackendProperties.from_dict.rst", "stubs/qiskit.providers.models.BackendProperties.gate_error.rst", "stubs/qiskit.providers.models.BackendProperties.gate_length.rst", "stubs/qiskit.providers.models.BackendProperties.gate_property.rst", "stubs/qiskit.providers.models.BackendProperties.is_gate_operational.rst", "stubs/qiskit.providers.models.BackendProperties.is_qubit_operational.rst", "stubs/qiskit.providers.models.BackendProperties.qubit_property.rst", "stubs/qiskit.providers.models.BackendProperties.readout_error.rst", "stubs/qiskit.providers.models.BackendProperties.readout_length.rst", "stubs/qiskit.providers.models.BackendProperties.t1.rst", "stubs/qiskit.providers.models.BackendProperties.t2.rst", "stubs/qiskit.providers.models.BackendProperties.to_dict.rst", "stubs/qiskit.providers.models.BackendStatus.rst", "stubs/qiskit.providers.models.BackendStatus.from_dict.rst", "stubs/qiskit.providers.models.BackendStatus.to_dict.rst", "stubs/qiskit.providers.models.Command.rst", "stubs/qiskit.providers.models.Command.from_dict.rst", "stubs/qiskit.providers.models.Command.to_dict.rst", "stubs/qiskit.providers.models.GateConfig.rst", "stubs/qiskit.providers.models.GateConfig.from_dict.rst", "stubs/qiskit.providers.models.GateConfig.to_dict.rst", "stubs/qiskit.providers.models.JobStatus.rst", "stubs/qiskit.providers.models.JobStatus.from_dict.rst", "stubs/qiskit.providers.models.JobStatus.to_dict.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.acquire.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.control.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.describe.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.drive.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.from_dict.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.get_channel_qubits.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.get_qubit_channels.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.measure.rst", "stubs/qiskit.providers.models.PulseBackendConfiguration.to_dict.rst", "stubs/qiskit.providers.models.PulseDefaults.rst", "stubs/qiskit.providers.models.PulseDefaults.from_dict.rst", "stubs/qiskit.providers.models.PulseDefaults.to_dict.rst", "stubs/qiskit.providers.models.QasmBackendConfiguration.rst", "stubs/qiskit.providers.models.QasmBackendConfiguration.from_dict.rst", "stubs/qiskit.providers.models.QasmBackendConfiguration.to_dict.rst", "stubs/qiskit.providers.models.UchannelLO.rst", "stubs/qiskit.providers.models.UchannelLO.from_dict.rst", "stubs/qiskit.providers.models.UchannelLO.to_dict.rst", "stubs/qiskit.pulse.InstructionScheduleMap.rst", "stubs/qiskit.pulse.InstructionScheduleMap.add.rst", "stubs/qiskit.pulse.InstructionScheduleMap.assert_has.rst", "stubs/qiskit.pulse.InstructionScheduleMap.get.rst", "stubs/qiskit.pulse.InstructionScheduleMap.get_parameters.rst", "stubs/qiskit.pulse.InstructionScheduleMap.has.rst", "stubs/qiskit.pulse.InstructionScheduleMap.has_custom_gate.rst", "stubs/qiskit.pulse.InstructionScheduleMap.pop.rst", "stubs/qiskit.pulse.InstructionScheduleMap.qubit_instructions.rst", "stubs/qiskit.pulse.InstructionScheduleMap.qubits_with_instruction.rst", "stubs/qiskit.pulse.InstructionScheduleMap.remove.rst", "stubs/qiskit.pulse.Schedule.rst", "stubs/qiskit.pulse.Schedule.append.rst", "stubs/qiskit.pulse.Schedule.assign_parameters.rst", "stubs/qiskit.pulse.Schedule.ch_duration.rst", "stubs/qiskit.pulse.Schedule.ch_start_time.rst", "stubs/qiskit.pulse.Schedule.ch_stop_time.rst", "stubs/qiskit.pulse.Schedule.draw.rst", "stubs/qiskit.pulse.Schedule.exclude.rst", "stubs/qiskit.pulse.Schedule.filter.rst", "stubs/qiskit.pulse.Schedule.get_parameters.rst", "stubs/qiskit.pulse.Schedule.initialize_from.rst", "stubs/qiskit.pulse.Schedule.insert.rst", "stubs/qiskit.pulse.Schedule.is_parameterized.rst", "stubs/qiskit.pulse.Schedule.replace.rst", "stubs/qiskit.pulse.Schedule.shift.rst", "stubs/qiskit.pulse.ScheduleBlock.rst", "stubs/qiskit.pulse.ScheduleBlock.append.rst", "stubs/qiskit.pulse.ScheduleBlock.assign_parameters.rst", "stubs/qiskit.pulse.ScheduleBlock.ch_duration.rst", "stubs/qiskit.pulse.ScheduleBlock.draw.rst", "stubs/qiskit.pulse.ScheduleBlock.exclude.rst", "stubs/qiskit.pulse.ScheduleBlock.filter.rst", "stubs/qiskit.pulse.ScheduleBlock.get_parameters.rst", "stubs/qiskit.pulse.ScheduleBlock.initialize_from.rst", "stubs/qiskit.pulse.ScheduleBlock.is_parameterized.rst", "stubs/qiskit.pulse.ScheduleBlock.is_schedulable.rst", "stubs/qiskit.pulse.ScheduleBlock.replace.rst", "stubs/qiskit.pulse.builder.acquire.rst", "stubs/qiskit.pulse.builder.acquire_channel.rst", "stubs/qiskit.pulse.builder.active_backend.rst", "stubs/qiskit.pulse.builder.active_circuit_scheduler_settings.rst", "stubs/qiskit.pulse.builder.active_transpiler_settings.rst", "stubs/qiskit.pulse.builder.align_equispaced.rst", "stubs/qiskit.pulse.builder.align_func.rst", "stubs/qiskit.pulse.builder.align_left.rst", "stubs/qiskit.pulse.builder.align_right.rst", "stubs/qiskit.pulse.builder.align_sequential.rst", "stubs/qiskit.pulse.builder.barrier.rst", "stubs/qiskit.pulse.builder.build.rst", "stubs/qiskit.pulse.builder.call.rst", "stubs/qiskit.pulse.builder.circuit_scheduler_settings.rst", "stubs/qiskit.pulse.builder.control_channels.rst", "stubs/qiskit.pulse.builder.cx.rst", "stubs/qiskit.pulse.builder.delay.rst", "stubs/qiskit.pulse.builder.delay_qubits.rst", "stubs/qiskit.pulse.builder.drive_channel.rst", "stubs/qiskit.pulse.builder.frequency_offset.rst", "stubs/qiskit.pulse.builder.inline.rst", "stubs/qiskit.pulse.builder.measure.rst", "stubs/qiskit.pulse.builder.measure_all.rst", "stubs/qiskit.pulse.builder.measure_channel.rst", "stubs/qiskit.pulse.builder.num_qubits.rst", "stubs/qiskit.pulse.builder.pad.rst", "stubs/qiskit.pulse.builder.phase_offset.rst", "stubs/qiskit.pulse.builder.play.rst", "stubs/qiskit.pulse.builder.qubit_channels.rst", "stubs/qiskit.pulse.builder.samples_to_seconds.rst", "stubs/qiskit.pulse.builder.seconds_to_samples.rst", "stubs/qiskit.pulse.builder.set_frequency.rst", "stubs/qiskit.pulse.builder.set_phase.rst", "stubs/qiskit.pulse.builder.shift_frequency.rst", "stubs/qiskit.pulse.builder.shift_phase.rst", "stubs/qiskit.pulse.builder.snapshot.rst", "stubs/qiskit.pulse.builder.transpiler_settings.rst", "stubs/qiskit.pulse.builder.u1.rst", "stubs/qiskit.pulse.builder.u2.rst", "stubs/qiskit.pulse.builder.u3.rst", "stubs/qiskit.pulse.builder.x.rst", "stubs/qiskit.pulse.channels.AcquireChannel.rst", "stubs/qiskit.pulse.channels.AcquireChannel.is_parameterized.rst", "stubs/qiskit.pulse.channels.ControlChannel.rst", "stubs/qiskit.pulse.channels.ControlChannel.is_parameterized.rst", "stubs/qiskit.pulse.channels.DriveChannel.rst", "stubs/qiskit.pulse.channels.DriveChannel.is_parameterized.rst", "stubs/qiskit.pulse.channels.MeasureChannel.rst", "stubs/qiskit.pulse.channels.MeasureChannel.is_parameterized.rst", "stubs/qiskit.pulse.channels.MemorySlot.rst", "stubs/qiskit.pulse.channels.MemorySlot.is_parameterized.rst", "stubs/qiskit.pulse.channels.RegisterSlot.rst", "stubs/qiskit.pulse.channels.RegisterSlot.is_parameterized.rst", "stubs/qiskit.pulse.channels.SnapshotChannel.rst", "stubs/qiskit.pulse.channels.SnapshotChannel.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Acquire.rst", "stubs/qiskit.pulse.instructions.Acquire.append.rst", "stubs/qiskit.pulse.instructions.Acquire.ch_duration.rst", "stubs/qiskit.pulse.instructions.Acquire.ch_start_time.rst", "stubs/qiskit.pulse.instructions.Acquire.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.Acquire.draw.rst", "stubs/qiskit.pulse.instructions.Acquire.insert.rst", "stubs/qiskit.pulse.instructions.Acquire.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Acquire.shift.rst", "stubs/qiskit.pulse.instructions.Call.rst", "stubs/qiskit.pulse.instructions.Call.append.rst", "stubs/qiskit.pulse.instructions.Call.assigned_subroutine.rst", "stubs/qiskit.pulse.instructions.Call.ch_duration.rst", "stubs/qiskit.pulse.instructions.Call.ch_start_time.rst", "stubs/qiskit.pulse.instructions.Call.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.Call.draw.rst", "stubs/qiskit.pulse.instructions.Call.insert.rst", "stubs/qiskit.pulse.instructions.Call.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Call.shift.rst", "stubs/qiskit.pulse.instructions.Delay.rst", "stubs/qiskit.pulse.instructions.Delay.append.rst", "stubs/qiskit.pulse.instructions.Delay.ch_duration.rst", "stubs/qiskit.pulse.instructions.Delay.ch_start_time.rst", "stubs/qiskit.pulse.instructions.Delay.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.Delay.draw.rst", "stubs/qiskit.pulse.instructions.Delay.insert.rst", "stubs/qiskit.pulse.instructions.Delay.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Delay.shift.rst", "stubs/qiskit.pulse.instructions.Play.rst", "stubs/qiskit.pulse.instructions.Play.append.rst", "stubs/qiskit.pulse.instructions.Play.ch_duration.rst", "stubs/qiskit.pulse.instructions.Play.ch_start_time.rst", "stubs/qiskit.pulse.instructions.Play.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.Play.draw.rst", "stubs/qiskit.pulse.instructions.Play.insert.rst", "stubs/qiskit.pulse.instructions.Play.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Play.shift.rst", "stubs/qiskit.pulse.instructions.SetFrequency.rst", "stubs/qiskit.pulse.instructions.SetFrequency.append.rst", "stubs/qiskit.pulse.instructions.SetFrequency.ch_duration.rst", "stubs/qiskit.pulse.instructions.SetFrequency.ch_start_time.rst", "stubs/qiskit.pulse.instructions.SetFrequency.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.SetFrequency.draw.rst", "stubs/qiskit.pulse.instructions.SetFrequency.insert.rst", "stubs/qiskit.pulse.instructions.SetFrequency.is_parameterized.rst", "stubs/qiskit.pulse.instructions.SetFrequency.shift.rst", "stubs/qiskit.pulse.instructions.SetPhase.rst", "stubs/qiskit.pulse.instructions.SetPhase.append.rst", "stubs/qiskit.pulse.instructions.SetPhase.ch_duration.rst", "stubs/qiskit.pulse.instructions.SetPhase.ch_start_time.rst", "stubs/qiskit.pulse.instructions.SetPhase.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.SetPhase.draw.rst", "stubs/qiskit.pulse.instructions.SetPhase.insert.rst", "stubs/qiskit.pulse.instructions.SetPhase.is_parameterized.rst", "stubs/qiskit.pulse.instructions.SetPhase.shift.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.append.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_duration.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_start_time.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.draw.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.insert.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.is_parameterized.rst", "stubs/qiskit.pulse.instructions.ShiftFrequency.shift.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.append.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_duration.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_start_time.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.draw.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.insert.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.is_parameterized.rst", "stubs/qiskit.pulse.instructions.ShiftPhase.shift.rst", "stubs/qiskit.pulse.instructions.Snapshot.rst", "stubs/qiskit.pulse.instructions.Snapshot.append.rst", "stubs/qiskit.pulse.instructions.Snapshot.ch_duration.rst", "stubs/qiskit.pulse.instructions.Snapshot.ch_start_time.rst", "stubs/qiskit.pulse.instructions.Snapshot.ch_stop_time.rst", "stubs/qiskit.pulse.instructions.Snapshot.draw.rst", "stubs/qiskit.pulse.instructions.Snapshot.insert.rst", "stubs/qiskit.pulse.instructions.Snapshot.is_parameterized.rst", "stubs/qiskit.pulse.instructions.Snapshot.shift.rst", "stubs/qiskit.pulse.library.Constant.rst", "stubs/qiskit.pulse.library.Constant.draw.rst", "stubs/qiskit.pulse.library.Constant.get_waveform.rst", "stubs/qiskit.pulse.library.Constant.is_parameterized.rst", "stubs/qiskit.pulse.library.Constant.validate_parameters.rst", "stubs/qiskit.pulse.library.Drag.rst", "stubs/qiskit.pulse.library.Drag.draw.rst", "stubs/qiskit.pulse.library.Drag.get_waveform.rst", "stubs/qiskit.pulse.library.Drag.is_parameterized.rst", "stubs/qiskit.pulse.library.Drag.validate_parameters.rst", "stubs/qiskit.pulse.library.Gaussian.rst", "stubs/qiskit.pulse.library.Gaussian.draw.rst", "stubs/qiskit.pulse.library.Gaussian.get_waveform.rst", "stubs/qiskit.pulse.library.Gaussian.is_parameterized.rst", "stubs/qiskit.pulse.library.Gaussian.validate_parameters.rst", "stubs/qiskit.pulse.library.GaussianSquare.rst", "stubs/qiskit.pulse.library.GaussianSquare.draw.rst", "stubs/qiskit.pulse.library.GaussianSquare.get_waveform.rst", "stubs/qiskit.pulse.library.GaussianSquare.is_parameterized.rst", "stubs/qiskit.pulse.library.GaussianSquare.validate_parameters.rst", "stubs/qiskit.pulse.library.ParametricPulse.rst", "stubs/qiskit.pulse.library.ParametricPulse.draw.rst", "stubs/qiskit.pulse.library.ParametricPulse.get_waveform.rst", "stubs/qiskit.pulse.library.ParametricPulse.is_parameterized.rst", "stubs/qiskit.pulse.library.ParametricPulse.validate_parameters.rst", "stubs/qiskit.pulse.library.SymbolicPulse.rst", "stubs/qiskit.pulse.library.SymbolicPulse.draw.rst", "stubs/qiskit.pulse.library.SymbolicPulse.get_waveform.rst", "stubs/qiskit.pulse.library.SymbolicPulse.is_parameterized.rst", "stubs/qiskit.pulse.library.SymbolicPulse.validate_parameters.rst", "stubs/qiskit.pulse.library.Waveform.rst", "stubs/qiskit.pulse.library.Waveform.draw.rst", "stubs/qiskit.pulse.library.Waveform.is_parameterized.rst", "stubs/qiskit.pulse.library.constant.rst", "stubs/qiskit.pulse.library.cos.rst", "stubs/qiskit.pulse.library.drag.rst", "stubs/qiskit.pulse.library.gaussian.rst", "stubs/qiskit.pulse.library.gaussian_deriv.rst", "stubs/qiskit.pulse.library.gaussian_square.rst", "stubs/qiskit.pulse.library.sawtooth.rst", "stubs/qiskit.pulse.library.sech.rst", "stubs/qiskit.pulse.library.sech_deriv.rst", "stubs/qiskit.pulse.library.sin.rst", "stubs/qiskit.pulse.library.square.rst", "stubs/qiskit.pulse.library.triangle.rst", "stubs/qiskit.pulse.library.zero.rst", "stubs/qiskit.pulse.transforms.AlignEquispaced.rst", "stubs/qiskit.pulse.transforms.AlignEquispaced.align.rst", "stubs/qiskit.pulse.transforms.AlignEquispaced.to_dict.rst", "stubs/qiskit.pulse.transforms.AlignFunc.rst", "stubs/qiskit.pulse.transforms.AlignFunc.align.rst", "stubs/qiskit.pulse.transforms.AlignFunc.to_dict.rst", "stubs/qiskit.pulse.transforms.AlignLeft.rst", "stubs/qiskit.pulse.transforms.AlignLeft.align.rst", "stubs/qiskit.pulse.transforms.AlignLeft.to_dict.rst", "stubs/qiskit.pulse.transforms.AlignRight.rst", "stubs/qiskit.pulse.transforms.AlignRight.align.rst", "stubs/qiskit.pulse.transforms.AlignRight.to_dict.rst", "stubs/qiskit.pulse.transforms.AlignSequential.rst", "stubs/qiskit.pulse.transforms.AlignSequential.align.rst", "stubs/qiskit.pulse.transforms.AlignSequential.to_dict.rst", "stubs/qiskit.pulse.transforms.add_implicit_acquires.rst", "stubs/qiskit.pulse.transforms.align_measures.rst", "stubs/qiskit.pulse.transforms.block_to_dag.rst", "stubs/qiskit.pulse.transforms.block_to_schedule.rst", "stubs/qiskit.pulse.transforms.compress_pulses.rst", "stubs/qiskit.pulse.transforms.flatten.rst", "stubs/qiskit.pulse.transforms.inline_subroutines.rst", "stubs/qiskit.pulse.transforms.pad.rst", "stubs/qiskit.pulse.transforms.remove_directives.rst", "stubs/qiskit.pulse.transforms.remove_trivial_barriers.rst", "stubs/qiskit.pulse.transforms.target_qobj_transform.rst", "stubs/qiskit.qasm.OpenQASMLexer.rst", "stubs/qiskit.qasm.OpenQASMLexer.add_filter.rst", "stubs/qiskit.qasm.OpenQASMLexer.analyse_text.rst", "stubs/qiskit.qasm.OpenQASMLexer.get_tokens.rst", "stubs/qiskit.qasm.OpenQASMLexer.get_tokens_unprocessed.rst", "stubs/qiskit.qasm.Qasm.rst", "stubs/qiskit.qasm.Qasm.generate_tokens.rst", "stubs/qiskit.qasm.Qasm.parse.rst", "stubs/qiskit.qasm.Qasm.return_filename.rst", "stubs/qiskit.qasm.QasmError.rst", "stubs/qiskit.qasm.QasmHTMLStyle.rst", "stubs/qiskit.qasm.QasmTerminalStyle.rst", "stubs/qiskit.qasm3.Exporter.rst", "stubs/qiskit.qasm3.Exporter.dump.rst", "stubs/qiskit.qasm3.Exporter.dumps.rst", "stubs/qiskit.qasm3.dump.rst", "stubs/qiskit.qasm3.dumps.rst", "stubs/qiskit.qobj.GateCalibration.rst", "stubs/qiskit.qobj.GateCalibration.from_dict.rst", "stubs/qiskit.qobj.GateCalibration.to_dict.rst", "stubs/qiskit.qobj.PulseLibraryItem.rst", "stubs/qiskit.qobj.PulseLibraryItem.from_dict.rst", "stubs/qiskit.qobj.PulseLibraryItem.to_dict.rst", "stubs/qiskit.qobj.PulseQobj.rst", "stubs/qiskit.qobj.PulseQobj.from_dict.rst", "stubs/qiskit.qobj.PulseQobj.to_dict.rst", "stubs/qiskit.qobj.PulseQobjConfig.rst", "stubs/qiskit.qobj.PulseQobjConfig.from_dict.rst", "stubs/qiskit.qobj.PulseQobjConfig.to_dict.rst", "stubs/qiskit.qobj.PulseQobjExperiment.rst", "stubs/qiskit.qobj.PulseQobjExperiment.from_dict.rst", "stubs/qiskit.qobj.PulseQobjExperiment.to_dict.rst", "stubs/qiskit.qobj.PulseQobjExperimentConfig.rst", "stubs/qiskit.qobj.PulseQobjExperimentConfig.from_dict.rst", "stubs/qiskit.qobj.PulseQobjExperimentConfig.to_dict.rst", "stubs/qiskit.qobj.PulseQobjInstruction.rst", "stubs/qiskit.qobj.PulseQobjInstruction.from_dict.rst", "stubs/qiskit.qobj.PulseQobjInstruction.to_dict.rst", "stubs/qiskit.qobj.QasmExperimentCalibrations.rst", "stubs/qiskit.qobj.QasmExperimentCalibrations.from_dict.rst", "stubs/qiskit.qobj.QasmExperimentCalibrations.to_dict.rst", "stubs/qiskit.qobj.QasmQobj.rst", "stubs/qiskit.qobj.QasmQobj.from_dict.rst", "stubs/qiskit.qobj.QasmQobj.to_dict.rst", "stubs/qiskit.qobj.QasmQobjConfig.rst", "stubs/qiskit.qobj.QasmQobjConfig.from_dict.rst", "stubs/qiskit.qobj.QasmQobjConfig.to_dict.rst", "stubs/qiskit.qobj.QasmQobjExperiment.rst", "stubs/qiskit.qobj.QasmQobjExperiment.from_dict.rst", "stubs/qiskit.qobj.QasmQobjExperiment.to_dict.rst", "stubs/qiskit.qobj.QasmQobjExperimentConfig.rst", "stubs/qiskit.qobj.QasmQobjExperimentConfig.from_dict.rst", "stubs/qiskit.qobj.QasmQobjExperimentConfig.to_dict.rst", "stubs/qiskit.qobj.QasmQobjInstruction.rst", "stubs/qiskit.qobj.QasmQobjInstruction.from_dict.rst", "stubs/qiskit.qobj.QasmQobjInstruction.to_dict.rst", "stubs/qiskit.qobj.Qobj.rst", "stubs/qiskit.qobj.Qobj.from_dict.rst", "stubs/qiskit.qobj.Qobj.to_dict.rst", "stubs/qiskit.qobj.QobjExperimentHeader.rst", "stubs/qiskit.qobj.QobjExperimentHeader.from_dict.rst", "stubs/qiskit.qobj.QobjExperimentHeader.to_dict.rst", "stubs/qiskit.qobj.QobjHeader.rst", "stubs/qiskit.qobj.QobjHeader.from_dict.rst", "stubs/qiskit.qobj.QobjHeader.to_dict.rst", "stubs/qiskit.qobj.QobjMeasurementOption.rst", "stubs/qiskit.qobj.QobjMeasurementOption.from_dict.rst", "stubs/qiskit.qobj.QobjMeasurementOption.to_dict.rst", "stubs/qiskit.qpy.dump.rst", "stubs/qiskit.qpy.load.rst", "stubs/qiskit.quantum_info.CNOTDihedral.rst", "stubs/qiskit.quantum_info.CNOTDihedral.adjoint.rst", "stubs/qiskit.quantum_info.CNOTDihedral.compose.rst", "stubs/qiskit.quantum_info.CNOTDihedral.conjugate.rst", "stubs/qiskit.quantum_info.CNOTDihedral.copy.rst", "stubs/qiskit.quantum_info.CNOTDihedral.dot.rst", "stubs/qiskit.quantum_info.CNOTDihedral.expand.rst", "stubs/qiskit.quantum_info.CNOTDihedral.input_dims.rst", "stubs/qiskit.quantum_info.CNOTDihedral.output_dims.rst", "stubs/qiskit.quantum_info.CNOTDihedral.power.rst", "stubs/qiskit.quantum_info.CNOTDihedral.reshape.rst", "stubs/qiskit.quantum_info.CNOTDihedral.tensor.rst", "stubs/qiskit.quantum_info.CNOTDihedral.to_circuit.rst", "stubs/qiskit.quantum_info.CNOTDihedral.to_instruction.rst", "stubs/qiskit.quantum_info.CNOTDihedral.to_matrix.rst", "stubs/qiskit.quantum_info.CNOTDihedral.to_operator.rst", "stubs/qiskit.quantum_info.CNOTDihedral.transpose.rst", "stubs/qiskit.quantum_info.Chi.rst", "stubs/qiskit.quantum_info.Chi.adjoint.rst", "stubs/qiskit.quantum_info.Chi.compose.rst", "stubs/qiskit.quantum_info.Chi.conjugate.rst", "stubs/qiskit.quantum_info.Chi.copy.rst", "stubs/qiskit.quantum_info.Chi.dot.rst", "stubs/qiskit.quantum_info.Chi.expand.rst", "stubs/qiskit.quantum_info.Chi.input_dims.rst", "stubs/qiskit.quantum_info.Chi.is_cp.rst", "stubs/qiskit.quantum_info.Chi.is_cptp.rst", "stubs/qiskit.quantum_info.Chi.is_tp.rst", "stubs/qiskit.quantum_info.Chi.is_unitary.rst", "stubs/qiskit.quantum_info.Chi.output_dims.rst", "stubs/qiskit.quantum_info.Chi.power.rst", "stubs/qiskit.quantum_info.Chi.reshape.rst", "stubs/qiskit.quantum_info.Chi.tensor.rst", "stubs/qiskit.quantum_info.Chi.to_instruction.rst", "stubs/qiskit.quantum_info.Chi.to_operator.rst", "stubs/qiskit.quantum_info.Chi.transpose.rst", "stubs/qiskit.quantum_info.Choi.rst", "stubs/qiskit.quantum_info.Choi.adjoint.rst", "stubs/qiskit.quantum_info.Choi.compose.rst", "stubs/qiskit.quantum_info.Choi.conjugate.rst", "stubs/qiskit.quantum_info.Choi.copy.rst", "stubs/qiskit.quantum_info.Choi.dot.rst", "stubs/qiskit.quantum_info.Choi.expand.rst", "stubs/qiskit.quantum_info.Choi.input_dims.rst", "stubs/qiskit.quantum_info.Choi.is_cp.rst", "stubs/qiskit.quantum_info.Choi.is_cptp.rst", "stubs/qiskit.quantum_info.Choi.is_tp.rst", "stubs/qiskit.quantum_info.Choi.is_unitary.rst", "stubs/qiskit.quantum_info.Choi.output_dims.rst", "stubs/qiskit.quantum_info.Choi.power.rst", "stubs/qiskit.quantum_info.Choi.reshape.rst", "stubs/qiskit.quantum_info.Choi.tensor.rst", "stubs/qiskit.quantum_info.Choi.to_instruction.rst", "stubs/qiskit.quantum_info.Choi.to_operator.rst", "stubs/qiskit.quantum_info.Choi.transpose.rst", "stubs/qiskit.quantum_info.Clifford.rst", "stubs/qiskit.quantum_info.Clifford.adjoint.rst", "stubs/qiskit.quantum_info.Clifford.compose.rst", "stubs/qiskit.quantum_info.Clifford.conjugate.rst", "stubs/qiskit.quantum_info.Clifford.copy.rst", "stubs/qiskit.quantum_info.Clifford.dot.rst", "stubs/qiskit.quantum_info.Clifford.expand.rst", "stubs/qiskit.quantum_info.Clifford.from_circuit.rst", "stubs/qiskit.quantum_info.Clifford.from_dict.rst", "stubs/qiskit.quantum_info.Clifford.from_label.rst", "stubs/qiskit.quantum_info.Clifford.input_dims.rst", "stubs/qiskit.quantum_info.Clifford.is_unitary.rst", "stubs/qiskit.quantum_info.Clifford.output_dims.rst", "stubs/qiskit.quantum_info.Clifford.power.rst", "stubs/qiskit.quantum_info.Clifford.reshape.rst", "stubs/qiskit.quantum_info.Clifford.tensor.rst", "stubs/qiskit.quantum_info.Clifford.to_circuit.rst", "stubs/qiskit.quantum_info.Clifford.to_dict.rst", "stubs/qiskit.quantum_info.Clifford.to_instruction.rst", "stubs/qiskit.quantum_info.Clifford.to_matrix.rst", "stubs/qiskit.quantum_info.Clifford.to_operator.rst", "stubs/qiskit.quantum_info.Clifford.transpose.rst", "stubs/qiskit.quantum_info.DensityMatrix.rst", "stubs/qiskit.quantum_info.DensityMatrix.conjugate.rst", "stubs/qiskit.quantum_info.DensityMatrix.copy.rst", "stubs/qiskit.quantum_info.DensityMatrix.dims.rst", "stubs/qiskit.quantum_info.DensityMatrix.draw.rst", "stubs/qiskit.quantum_info.DensityMatrix.evolve.rst", "stubs/qiskit.quantum_info.DensityMatrix.expand.rst", "stubs/qiskit.quantum_info.DensityMatrix.expectation_value.rst", "stubs/qiskit.quantum_info.DensityMatrix.from_instruction.rst", "stubs/qiskit.quantum_info.DensityMatrix.from_int.rst", "stubs/qiskit.quantum_info.DensityMatrix.from_label.rst", "stubs/qiskit.quantum_info.DensityMatrix.is_valid.rst", "stubs/qiskit.quantum_info.DensityMatrix.measure.rst", "stubs/qiskit.quantum_info.DensityMatrix.probabilities.rst", "stubs/qiskit.quantum_info.DensityMatrix.probabilities_dict.rst", "stubs/qiskit.quantum_info.DensityMatrix.purity.rst", "stubs/qiskit.quantum_info.DensityMatrix.reset.rst", "stubs/qiskit.quantum_info.DensityMatrix.reverse_qargs.rst", "stubs/qiskit.quantum_info.DensityMatrix.sample_counts.rst", "stubs/qiskit.quantum_info.DensityMatrix.sample_memory.rst", "stubs/qiskit.quantum_info.DensityMatrix.seed.rst", "stubs/qiskit.quantum_info.DensityMatrix.tensor.rst", "stubs/qiskit.quantum_info.DensityMatrix.to_dict.rst", "stubs/qiskit.quantum_info.DensityMatrix.to_operator.rst", "stubs/qiskit.quantum_info.DensityMatrix.to_statevector.rst", "stubs/qiskit.quantum_info.DensityMatrix.trace.rst", "stubs/qiskit.quantum_info.Kraus.rst", "stubs/qiskit.quantum_info.Kraus.adjoint.rst", "stubs/qiskit.quantum_info.Kraus.compose.rst", "stubs/qiskit.quantum_info.Kraus.conjugate.rst", "stubs/qiskit.quantum_info.Kraus.copy.rst", "stubs/qiskit.quantum_info.Kraus.dot.rst", "stubs/qiskit.quantum_info.Kraus.expand.rst", "stubs/qiskit.quantum_info.Kraus.input_dims.rst", "stubs/qiskit.quantum_info.Kraus.is_cp.rst", "stubs/qiskit.quantum_info.Kraus.is_cptp.rst", "stubs/qiskit.quantum_info.Kraus.is_tp.rst", "stubs/qiskit.quantum_info.Kraus.is_unitary.rst", "stubs/qiskit.quantum_info.Kraus.output_dims.rst", "stubs/qiskit.quantum_info.Kraus.power.rst", "stubs/qiskit.quantum_info.Kraus.reshape.rst", "stubs/qiskit.quantum_info.Kraus.tensor.rst", "stubs/qiskit.quantum_info.Kraus.to_instruction.rst", "stubs/qiskit.quantum_info.Kraus.to_operator.rst", "stubs/qiskit.quantum_info.Kraus.transpose.rst", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer.rst", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer.angles.rst", "stubs/qiskit.quantum_info.OneQubitEulerDecomposer.angles_and_phase.rst", "stubs/qiskit.quantum_info.Operator.rst", "stubs/qiskit.quantum_info.Operator.adjoint.rst", "stubs/qiskit.quantum_info.Operator.compose.rst", "stubs/qiskit.quantum_info.Operator.conjugate.rst", "stubs/qiskit.quantum_info.Operator.copy.rst", "stubs/qiskit.quantum_info.Operator.dot.rst", "stubs/qiskit.quantum_info.Operator.equiv.rst", "stubs/qiskit.quantum_info.Operator.expand.rst", "stubs/qiskit.quantum_info.Operator.from_circuit.rst", "stubs/qiskit.quantum_info.Operator.from_label.rst", "stubs/qiskit.quantum_info.Operator.input_dims.rst", "stubs/qiskit.quantum_info.Operator.is_unitary.rst", "stubs/qiskit.quantum_info.Operator.output_dims.rst", "stubs/qiskit.quantum_info.Operator.power.rst", "stubs/qiskit.quantum_info.Operator.reshape.rst", "stubs/qiskit.quantum_info.Operator.reverse_qargs.rst", "stubs/qiskit.quantum_info.Operator.tensor.rst", "stubs/qiskit.quantum_info.Operator.to_instruction.rst", "stubs/qiskit.quantum_info.Operator.to_operator.rst", "stubs/qiskit.quantum_info.Operator.transpose.rst", "stubs/qiskit.quantum_info.PTM.rst", "stubs/qiskit.quantum_info.PTM.adjoint.rst", "stubs/qiskit.quantum_info.PTM.compose.rst", "stubs/qiskit.quantum_info.PTM.conjugate.rst", "stubs/qiskit.quantum_info.PTM.copy.rst", "stubs/qiskit.quantum_info.PTM.dot.rst", "stubs/qiskit.quantum_info.PTM.expand.rst", "stubs/qiskit.quantum_info.PTM.input_dims.rst", "stubs/qiskit.quantum_info.PTM.is_cp.rst", "stubs/qiskit.quantum_info.PTM.is_cptp.rst", "stubs/qiskit.quantum_info.PTM.is_tp.rst", "stubs/qiskit.quantum_info.PTM.is_unitary.rst", "stubs/qiskit.quantum_info.PTM.output_dims.rst", "stubs/qiskit.quantum_info.PTM.power.rst", "stubs/qiskit.quantum_info.PTM.reshape.rst", "stubs/qiskit.quantum_info.PTM.tensor.rst", "stubs/qiskit.quantum_info.PTM.to_instruction.rst", "stubs/qiskit.quantum_info.PTM.to_operator.rst", "stubs/qiskit.quantum_info.PTM.transpose.rst", "stubs/qiskit.quantum_info.Pauli.rst", "stubs/qiskit.quantum_info.Pauli.adjoint.rst", "stubs/qiskit.quantum_info.Pauli.anticommutes.rst", "stubs/qiskit.quantum_info.Pauli.commutes.rst", "stubs/qiskit.quantum_info.Pauli.compose.rst", "stubs/qiskit.quantum_info.Pauli.conjugate.rst", "stubs/qiskit.quantum_info.Pauli.copy.rst", "stubs/qiskit.quantum_info.Pauli.delete.rst", "stubs/qiskit.quantum_info.Pauli.dot.rst", "stubs/qiskit.quantum_info.Pauli.equiv.rst", "stubs/qiskit.quantum_info.Pauli.evolve.rst", "stubs/qiskit.quantum_info.Pauli.expand.rst", "stubs/qiskit.quantum_info.Pauli.input_dims.rst", "stubs/qiskit.quantum_info.Pauli.insert.rst", "stubs/qiskit.quantum_info.Pauli.inverse.rst", "stubs/qiskit.quantum_info.Pauli.output_dims.rst", "stubs/qiskit.quantum_info.Pauli.power.rst", "stubs/qiskit.quantum_info.Pauli.reshape.rst", "stubs/qiskit.quantum_info.Pauli.set_truncation.rst", "stubs/qiskit.quantum_info.Pauli.tensor.rst", "stubs/qiskit.quantum_info.Pauli.to_instruction.rst", "stubs/qiskit.quantum_info.Pauli.to_label.rst", "stubs/qiskit.quantum_info.Pauli.to_matrix.rst", "stubs/qiskit.quantum_info.Pauli.transpose.rst", "stubs/qiskit.quantum_info.PauliList.rst", "stubs/qiskit.quantum_info.PauliList.adjoint.rst", "stubs/qiskit.quantum_info.PauliList.anticommutes.rst", "stubs/qiskit.quantum_info.PauliList.anticommutes_with_all.rst", "stubs/qiskit.quantum_info.PauliList.argsort.rst", "stubs/qiskit.quantum_info.PauliList.commutes.rst", "stubs/qiskit.quantum_info.PauliList.commutes_with_all.rst", "stubs/qiskit.quantum_info.PauliList.compose.rst", "stubs/qiskit.quantum_info.PauliList.conjugate.rst", "stubs/qiskit.quantum_info.PauliList.copy.rst", "stubs/qiskit.quantum_info.PauliList.delete.rst", "stubs/qiskit.quantum_info.PauliList.dot.rst", "stubs/qiskit.quantum_info.PauliList.equiv.rst", "stubs/qiskit.quantum_info.PauliList.evolve.rst", "stubs/qiskit.quantum_info.PauliList.expand.rst", "stubs/qiskit.quantum_info.PauliList.from_symplectic.rst", "stubs/qiskit.quantum_info.PauliList.group_commuting.rst", "stubs/qiskit.quantum_info.PauliList.group_qubit_wise_commuting.rst", "stubs/qiskit.quantum_info.PauliList.input_dims.rst", "stubs/qiskit.quantum_info.PauliList.insert.rst", "stubs/qiskit.quantum_info.PauliList.inverse.rst", "stubs/qiskit.quantum_info.PauliList.label_iter.rst", "stubs/qiskit.quantum_info.PauliList.matrix_iter.rst", "stubs/qiskit.quantum_info.PauliList.output_dims.rst", "stubs/qiskit.quantum_info.PauliList.power.rst", "stubs/qiskit.quantum_info.PauliList.reshape.rst", "stubs/qiskit.quantum_info.PauliList.sort.rst", "stubs/qiskit.quantum_info.PauliList.tensor.rst", "stubs/qiskit.quantum_info.PauliList.to_labels.rst", "stubs/qiskit.quantum_info.PauliList.to_matrix.rst", "stubs/qiskit.quantum_info.PauliList.transpose.rst", "stubs/qiskit.quantum_info.PauliList.unique.rst", "stubs/qiskit.quantum_info.PauliTable.rst", "stubs/qiskit.quantum_info.PauliTable.adjoint.rst", "stubs/qiskit.quantum_info.PauliTable.anticommutes_with_all.rst", "stubs/qiskit.quantum_info.PauliTable.argsort.rst", "stubs/qiskit.quantum_info.PauliTable.commutes.rst", "stubs/qiskit.quantum_info.PauliTable.commutes_with_all.rst", "stubs/qiskit.quantum_info.PauliTable.compose.rst", "stubs/qiskit.quantum_info.PauliTable.conjugate.rst", "stubs/qiskit.quantum_info.PauliTable.copy.rst", "stubs/qiskit.quantum_info.PauliTable.delete.rst", "stubs/qiskit.quantum_info.PauliTable.dot.rst", "stubs/qiskit.quantum_info.PauliTable.expand.rst", "stubs/qiskit.quantum_info.PauliTable.from_labels.rst", "stubs/qiskit.quantum_info.PauliTable.input_dims.rst", "stubs/qiskit.quantum_info.PauliTable.insert.rst", "stubs/qiskit.quantum_info.PauliTable.label_iter.rst", "stubs/qiskit.quantum_info.PauliTable.matrix_iter.rst", "stubs/qiskit.quantum_info.PauliTable.output_dims.rst", "stubs/qiskit.quantum_info.PauliTable.power.rst", "stubs/qiskit.quantum_info.PauliTable.reshape.rst", "stubs/qiskit.quantum_info.PauliTable.sort.rst", "stubs/qiskit.quantum_info.PauliTable.tensor.rst", "stubs/qiskit.quantum_info.PauliTable.to_labels.rst", "stubs/qiskit.quantum_info.PauliTable.to_matrix.rst", "stubs/qiskit.quantum_info.PauliTable.transpose.rst", "stubs/qiskit.quantum_info.PauliTable.unique.rst", "stubs/qiskit.quantum_info.Quaternion.rst", "stubs/qiskit.quantum_info.Quaternion.from_axis_rotation.rst", "stubs/qiskit.quantum_info.Quaternion.from_euler.rst", "stubs/qiskit.quantum_info.Quaternion.norm.rst", "stubs/qiskit.quantum_info.Quaternion.normalize.rst", "stubs/qiskit.quantum_info.Quaternion.to_matrix.rst", "stubs/qiskit.quantum_info.Quaternion.to_zyz.rst", "stubs/qiskit.quantum_info.ScalarOp.rst", "stubs/qiskit.quantum_info.ScalarOp.adjoint.rst", "stubs/qiskit.quantum_info.ScalarOp.compose.rst", "stubs/qiskit.quantum_info.ScalarOp.conjugate.rst", "stubs/qiskit.quantum_info.ScalarOp.copy.rst", "stubs/qiskit.quantum_info.ScalarOp.dot.rst", "stubs/qiskit.quantum_info.ScalarOp.expand.rst", "stubs/qiskit.quantum_info.ScalarOp.input_dims.rst", "stubs/qiskit.quantum_info.ScalarOp.is_unitary.rst", "stubs/qiskit.quantum_info.ScalarOp.output_dims.rst", "stubs/qiskit.quantum_info.ScalarOp.power.rst", "stubs/qiskit.quantum_info.ScalarOp.reshape.rst", "stubs/qiskit.quantum_info.ScalarOp.tensor.rst", "stubs/qiskit.quantum_info.ScalarOp.to_matrix.rst", "stubs/qiskit.quantum_info.ScalarOp.to_operator.rst", "stubs/qiskit.quantum_info.ScalarOp.transpose.rst", "stubs/qiskit.quantum_info.SparsePauliOp.rst", "stubs/qiskit.quantum_info.SparsePauliOp.adjoint.rst", "stubs/qiskit.quantum_info.SparsePauliOp.chop.rst", "stubs/qiskit.quantum_info.SparsePauliOp.compose.rst", "stubs/qiskit.quantum_info.SparsePauliOp.conjugate.rst", "stubs/qiskit.quantum_info.SparsePauliOp.copy.rst", "stubs/qiskit.quantum_info.SparsePauliOp.dot.rst", "stubs/qiskit.quantum_info.SparsePauliOp.equiv.rst", "stubs/qiskit.quantum_info.SparsePauliOp.expand.rst", "stubs/qiskit.quantum_info.SparsePauliOp.from_list.rst", "stubs/qiskit.quantum_info.SparsePauliOp.from_operator.rst", "stubs/qiskit.quantum_info.SparsePauliOp.from_sparse_list.rst", "stubs/qiskit.quantum_info.SparsePauliOp.group_commuting.rst", "stubs/qiskit.quantum_info.SparsePauliOp.input_dims.rst", "stubs/qiskit.quantum_info.SparsePauliOp.is_unitary.rst", "stubs/qiskit.quantum_info.SparsePauliOp.label_iter.rst", "stubs/qiskit.quantum_info.SparsePauliOp.matrix_iter.rst", "stubs/qiskit.quantum_info.SparsePauliOp.output_dims.rst", "stubs/qiskit.quantum_info.SparsePauliOp.power.rst", "stubs/qiskit.quantum_info.SparsePauliOp.reshape.rst", "stubs/qiskit.quantum_info.SparsePauliOp.simplify.rst", "stubs/qiskit.quantum_info.SparsePauliOp.sum.rst", "stubs/qiskit.quantum_info.SparsePauliOp.tensor.rst", "stubs/qiskit.quantum_info.SparsePauliOp.to_list.rst", "stubs/qiskit.quantum_info.SparsePauliOp.to_matrix.rst", "stubs/qiskit.quantum_info.SparsePauliOp.to_operator.rst", "stubs/qiskit.quantum_info.SparsePauliOp.transpose.rst", "stubs/qiskit.quantum_info.StabilizerState.rst", "stubs/qiskit.quantum_info.StabilizerState.conjugate.rst", "stubs/qiskit.quantum_info.StabilizerState.copy.rst", "stubs/qiskit.quantum_info.StabilizerState.dims.rst", "stubs/qiskit.quantum_info.StabilizerState.evolve.rst", "stubs/qiskit.quantum_info.StabilizerState.expand.rst", "stubs/qiskit.quantum_info.StabilizerState.expectation_value.rst", "stubs/qiskit.quantum_info.StabilizerState.is_valid.rst", "stubs/qiskit.quantum_info.StabilizerState.measure.rst", "stubs/qiskit.quantum_info.StabilizerState.probabilities.rst", "stubs/qiskit.quantum_info.StabilizerState.probabilities_dict.rst", "stubs/qiskit.quantum_info.StabilizerState.purity.rst", "stubs/qiskit.quantum_info.StabilizerState.reset.rst", "stubs/qiskit.quantum_info.StabilizerState.sample_counts.rst", "stubs/qiskit.quantum_info.StabilizerState.sample_memory.rst", "stubs/qiskit.quantum_info.StabilizerState.seed.rst", "stubs/qiskit.quantum_info.StabilizerState.tensor.rst", "stubs/qiskit.quantum_info.StabilizerState.to_operator.rst", "stubs/qiskit.quantum_info.StabilizerState.trace.rst", "stubs/qiskit.quantum_info.StabilizerTable.rst", "stubs/qiskit.quantum_info.StabilizerTable.adjoint.rst", "stubs/qiskit.quantum_info.StabilizerTable.anticommutes_with_all.rst", "stubs/qiskit.quantum_info.StabilizerTable.argsort.rst", "stubs/qiskit.quantum_info.StabilizerTable.commutes.rst", "stubs/qiskit.quantum_info.StabilizerTable.commutes_with_all.rst", "stubs/qiskit.quantum_info.StabilizerTable.compose.rst", "stubs/qiskit.quantum_info.StabilizerTable.conjugate.rst", "stubs/qiskit.quantum_info.StabilizerTable.copy.rst", "stubs/qiskit.quantum_info.StabilizerTable.delete.rst", "stubs/qiskit.quantum_info.StabilizerTable.dot.rst", "stubs/qiskit.quantum_info.StabilizerTable.expand.rst", "stubs/qiskit.quantum_info.StabilizerTable.from_labels.rst", "stubs/qiskit.quantum_info.StabilizerTable.input_dims.rst", "stubs/qiskit.quantum_info.StabilizerTable.insert.rst", "stubs/qiskit.quantum_info.StabilizerTable.label_iter.rst", "stubs/qiskit.quantum_info.StabilizerTable.matrix_iter.rst", "stubs/qiskit.quantum_info.StabilizerTable.output_dims.rst", "stubs/qiskit.quantum_info.StabilizerTable.power.rst", "stubs/qiskit.quantum_info.StabilizerTable.reshape.rst", "stubs/qiskit.quantum_info.StabilizerTable.sort.rst", "stubs/qiskit.quantum_info.StabilizerTable.tensor.rst", "stubs/qiskit.quantum_info.StabilizerTable.to_labels.rst", "stubs/qiskit.quantum_info.StabilizerTable.to_matrix.rst", "stubs/qiskit.quantum_info.StabilizerTable.transpose.rst", "stubs/qiskit.quantum_info.StabilizerTable.unique.rst", "stubs/qiskit.quantum_info.Statevector.rst", "stubs/qiskit.quantum_info.Statevector.conjugate.rst", "stubs/qiskit.quantum_info.Statevector.copy.rst", "stubs/qiskit.quantum_info.Statevector.dims.rst", "stubs/qiskit.quantum_info.Statevector.draw.rst", "stubs/qiskit.quantum_info.Statevector.equiv.rst", "stubs/qiskit.quantum_info.Statevector.evolve.rst", "stubs/qiskit.quantum_info.Statevector.expand.rst", "stubs/qiskit.quantum_info.Statevector.expectation_value.rst", "stubs/qiskit.quantum_info.Statevector.from_instruction.rst", "stubs/qiskit.quantum_info.Statevector.from_int.rst", "stubs/qiskit.quantum_info.Statevector.from_label.rst", "stubs/qiskit.quantum_info.Statevector.inner.rst", "stubs/qiskit.quantum_info.Statevector.is_valid.rst", "stubs/qiskit.quantum_info.Statevector.measure.rst", "stubs/qiskit.quantum_info.Statevector.probabilities.rst", "stubs/qiskit.quantum_info.Statevector.probabilities_dict.rst", "stubs/qiskit.quantum_info.Statevector.purity.rst", "stubs/qiskit.quantum_info.Statevector.reset.rst", "stubs/qiskit.quantum_info.Statevector.reverse_qargs.rst", "stubs/qiskit.quantum_info.Statevector.sample_counts.rst", "stubs/qiskit.quantum_info.Statevector.sample_memory.rst", "stubs/qiskit.quantum_info.Statevector.seed.rst", "stubs/qiskit.quantum_info.Statevector.tensor.rst", "stubs/qiskit.quantum_info.Statevector.to_dict.rst", "stubs/qiskit.quantum_info.Statevector.to_operator.rst", "stubs/qiskit.quantum_info.Statevector.trace.rst", "stubs/qiskit.quantum_info.Stinespring.rst", "stubs/qiskit.quantum_info.Stinespring.adjoint.rst", "stubs/qiskit.quantum_info.Stinespring.compose.rst", "stubs/qiskit.quantum_info.Stinespring.conjugate.rst", "stubs/qiskit.quantum_info.Stinespring.copy.rst", "stubs/qiskit.quantum_info.Stinespring.dot.rst", "stubs/qiskit.quantum_info.Stinespring.expand.rst", "stubs/qiskit.quantum_info.Stinespring.input_dims.rst", "stubs/qiskit.quantum_info.Stinespring.is_cp.rst", "stubs/qiskit.quantum_info.Stinespring.is_cptp.rst", "stubs/qiskit.quantum_info.Stinespring.is_tp.rst", "stubs/qiskit.quantum_info.Stinespring.is_unitary.rst", "stubs/qiskit.quantum_info.Stinespring.output_dims.rst", "stubs/qiskit.quantum_info.Stinespring.power.rst", "stubs/qiskit.quantum_info.Stinespring.reshape.rst", "stubs/qiskit.quantum_info.Stinespring.tensor.rst", "stubs/qiskit.quantum_info.Stinespring.to_instruction.rst", "stubs/qiskit.quantum_info.Stinespring.to_operator.rst", "stubs/qiskit.quantum_info.Stinespring.transpose.rst", "stubs/qiskit.quantum_info.SuperOp.rst", "stubs/qiskit.quantum_info.SuperOp.adjoint.rst", "stubs/qiskit.quantum_info.SuperOp.compose.rst", "stubs/qiskit.quantum_info.SuperOp.conjugate.rst", "stubs/qiskit.quantum_info.SuperOp.copy.rst", "stubs/qiskit.quantum_info.SuperOp.dot.rst", "stubs/qiskit.quantum_info.SuperOp.expand.rst", "stubs/qiskit.quantum_info.SuperOp.input_dims.rst", "stubs/qiskit.quantum_info.SuperOp.is_cp.rst", "stubs/qiskit.quantum_info.SuperOp.is_cptp.rst", "stubs/qiskit.quantum_info.SuperOp.is_tp.rst", "stubs/qiskit.quantum_info.SuperOp.is_unitary.rst", "stubs/qiskit.quantum_info.SuperOp.output_dims.rst", "stubs/qiskit.quantum_info.SuperOp.power.rst", "stubs/qiskit.quantum_info.SuperOp.reshape.rst", "stubs/qiskit.quantum_info.SuperOp.tensor.rst", "stubs/qiskit.quantum_info.SuperOp.to_instruction.rst", "stubs/qiskit.quantum_info.SuperOp.to_operator.rst", "stubs/qiskit.quantum_info.SuperOp.transpose.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp0.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp1.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp2_supercontrolled.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.decomp3_supercontrolled.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.num_basis_gates.rst", "stubs/qiskit.quantum_info.TwoQubitBasisDecomposer.traces.rst", "stubs/qiskit.quantum_info.XXDecomposer.rst", "stubs/qiskit.quantum_info.XXDecomposer.num_basis_gates.rst", "stubs/qiskit.quantum_info.average_gate_fidelity.rst", "stubs/qiskit.quantum_info.concurrence.rst", "stubs/qiskit.quantum_info.decompose_clifford.rst", "stubs/qiskit.quantum_info.diamond_norm.rst", "stubs/qiskit.quantum_info.entanglement_of_formation.rst", "stubs/qiskit.quantum_info.entropy.rst", "stubs/qiskit.quantum_info.gate_error.rst", "stubs/qiskit.quantum_info.hellinger_distance.rst", "stubs/qiskit.quantum_info.hellinger_fidelity.rst", "stubs/qiskit.quantum_info.mutual_information.rst", "stubs/qiskit.quantum_info.partial_trace.rst", "stubs/qiskit.quantum_info.pauli_basis.rst", "stubs/qiskit.quantum_info.process_fidelity.rst", "stubs/qiskit.quantum_info.purity.rst", "stubs/qiskit.quantum_info.random_clifford.rst", "stubs/qiskit.quantum_info.random_cnotdihedral.rst", "stubs/qiskit.quantum_info.random_density_matrix.rst", "stubs/qiskit.quantum_info.random_hermitian.rst", "stubs/qiskit.quantum_info.random_pauli.rst", "stubs/qiskit.quantum_info.random_pauli_list.rst", "stubs/qiskit.quantum_info.random_pauli_table.rst", "stubs/qiskit.quantum_info.random_quantum_channel.rst", "stubs/qiskit.quantum_info.random_stabilizer_table.rst", "stubs/qiskit.quantum_info.random_statevector.rst", "stubs/qiskit.quantum_info.random_unitary.rst", "stubs/qiskit.quantum_info.shannon_entropy.rst", "stubs/qiskit.quantum_info.state_fidelity.rst", "stubs/qiskit.quantum_info.two_qubit_cnot_decompose.rst", "stubs/qiskit.result.BaseReadoutMitigator.rst", "stubs/qiskit.result.BaseReadoutMitigator.expectation_value.rst", "stubs/qiskit.result.BaseReadoutMitigator.quasi_probabilities.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.assignment_matrix.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.expectation_value.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.mitigation_matrix.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.quasi_probabilities.rst", "stubs/qiskit.result.CorrelatedReadoutMitigator.stddev_upper_bound.rst", "stubs/qiskit.result.Counts.rst", "stubs/qiskit.result.Counts.clear.rst", "stubs/qiskit.result.Counts.copy.rst", "stubs/qiskit.result.Counts.fromkeys.rst", "stubs/qiskit.result.Counts.get.rst", "stubs/qiskit.result.Counts.hex_outcomes.rst", "stubs/qiskit.result.Counts.int_outcomes.rst", "stubs/qiskit.result.Counts.items.rst", "stubs/qiskit.result.Counts.keys.rst", "stubs/qiskit.result.Counts.most_frequent.rst", "stubs/qiskit.result.Counts.pop.rst", "stubs/qiskit.result.Counts.popitem.rst", "stubs/qiskit.result.Counts.setdefault.rst", "stubs/qiskit.result.Counts.shots.rst", "stubs/qiskit.result.Counts.update.rst", "stubs/qiskit.result.Counts.values.rst", "stubs/qiskit.result.LocalReadoutMitigator.rst", "stubs/qiskit.result.LocalReadoutMitigator.assignment_matrix.rst", "stubs/qiskit.result.LocalReadoutMitigator.expectation_value.rst", "stubs/qiskit.result.LocalReadoutMitigator.mitigation_matrix.rst", "stubs/qiskit.result.LocalReadoutMitigator.quasi_probabilities.rst", "stubs/qiskit.result.LocalReadoutMitigator.stddev_upper_bound.rst", "stubs/qiskit.result.ProbDistribution.rst", "stubs/qiskit.result.ProbDistribution.binary_probabilities.rst", "stubs/qiskit.result.ProbDistribution.clear.rst", "stubs/qiskit.result.ProbDistribution.copy.rst", "stubs/qiskit.result.ProbDistribution.fromkeys.rst", "stubs/qiskit.result.ProbDistribution.get.rst", "stubs/qiskit.result.ProbDistribution.hex_probabilities.rst", "stubs/qiskit.result.ProbDistribution.items.rst", "stubs/qiskit.result.ProbDistribution.keys.rst", "stubs/qiskit.result.ProbDistribution.pop.rst", "stubs/qiskit.result.ProbDistribution.popitem.rst", "stubs/qiskit.result.ProbDistribution.setdefault.rst", "stubs/qiskit.result.ProbDistribution.update.rst", "stubs/qiskit.result.ProbDistribution.values.rst", "stubs/qiskit.result.QuasiDistribution.rst", "stubs/qiskit.result.QuasiDistribution.binary_probabilities.rst", "stubs/qiskit.result.QuasiDistribution.clear.rst", "stubs/qiskit.result.QuasiDistribution.copy.rst", "stubs/qiskit.result.QuasiDistribution.fromkeys.rst", "stubs/qiskit.result.QuasiDistribution.get.rst", "stubs/qiskit.result.QuasiDistribution.hex_probabilities.rst", "stubs/qiskit.result.QuasiDistribution.items.rst", "stubs/qiskit.result.QuasiDistribution.keys.rst", "stubs/qiskit.result.QuasiDistribution.nearest_probability_distribution.rst", "stubs/qiskit.result.QuasiDistribution.pop.rst", "stubs/qiskit.result.QuasiDistribution.popitem.rst", "stubs/qiskit.result.QuasiDistribution.setdefault.rst", "stubs/qiskit.result.QuasiDistribution.update.rst", "stubs/qiskit.result.QuasiDistribution.values.rst", "stubs/qiskit.result.Result.rst", "stubs/qiskit.result.Result.data.rst", "stubs/qiskit.result.Result.from_dict.rst", "stubs/qiskit.result.Result.get_counts.rst", "stubs/qiskit.result.Result.get_memory.rst", "stubs/qiskit.result.Result.get_statevector.rst", "stubs/qiskit.result.Result.get_unitary.rst", "stubs/qiskit.result.Result.to_dict.rst", "stubs/qiskit.result.ResultError.rst", "stubs/qiskit.result.marginal_counts.rst", "stubs/qiskit.result.marginal_distribution.rst", "stubs/qiskit.result.marginal_memory.rst", "stubs/qiskit.scheduler.ScheduleConfig.rst", "stubs/qiskit.scheduler.methods.basic.rst", "stubs/qiskit.scheduler.schedule_circuit.rst", "stubs/qiskit.synthesis.EvolutionSynthesis.rst", "stubs/qiskit.synthesis.EvolutionSynthesis.synthesize.rst", "stubs/qiskit.synthesis.LieTrotter.rst", "stubs/qiskit.synthesis.LieTrotter.synthesize.rst", "stubs/qiskit.synthesis.MatrixExponential.rst", "stubs/qiskit.synthesis.MatrixExponential.synthesize.rst", "stubs/qiskit.synthesis.ProductFormula.rst", "stubs/qiskit.synthesis.ProductFormula.synthesize.rst", "stubs/qiskit.synthesis.SuzukiTrotter.rst", "stubs/qiskit.synthesis.SuzukiTrotter.synthesize.rst", "stubs/qiskit.tools.backend_monitor.rst", "stubs/qiskit.tools.backend_overview.rst", "stubs/qiskit.tools.job_monitor.rst", "stubs/qiskit.tools.parallel_map.rst", "stubs/qiskit.transpiler.AnalysisPass.rst", "stubs/qiskit.transpiler.AnalysisPass.name.rst", "stubs/qiskit.transpiler.AnalysisPass.run.rst", "stubs/qiskit.transpiler.ConditionalController.rst", "stubs/qiskit.transpiler.ConditionalController.add_flow_controller.rst", "stubs/qiskit.transpiler.ConditionalController.controller_factory.rst", "stubs/qiskit.transpiler.ConditionalController.dump_passes.rst", "stubs/qiskit.transpiler.ConditionalController.remove_flow_controller.rst", "stubs/qiskit.transpiler.CouplingMap.rst", "stubs/qiskit.transpiler.CouplingMap.add_edge.rst", "stubs/qiskit.transpiler.CouplingMap.add_physical_qubit.rst", "stubs/qiskit.transpiler.CouplingMap.compute_distance_matrix.rst", "stubs/qiskit.transpiler.CouplingMap.distance.rst", "stubs/qiskit.transpiler.CouplingMap.draw.rst", "stubs/qiskit.transpiler.CouplingMap.from_full.rst", "stubs/qiskit.transpiler.CouplingMap.from_grid.rst", "stubs/qiskit.transpiler.CouplingMap.from_heavy_hex.rst", "stubs/qiskit.transpiler.CouplingMap.from_heavy_square.rst", "stubs/qiskit.transpiler.CouplingMap.from_hexagonal_lattice.rst", "stubs/qiskit.transpiler.CouplingMap.from_line.rst", "stubs/qiskit.transpiler.CouplingMap.from_ring.rst", "stubs/qiskit.transpiler.CouplingMap.get_edges.rst", "stubs/qiskit.transpiler.CouplingMap.is_connected.rst", "stubs/qiskit.transpiler.CouplingMap.largest_connected_component.rst", "stubs/qiskit.transpiler.CouplingMap.make_symmetric.rst", "stubs/qiskit.transpiler.CouplingMap.neighbors.rst", "stubs/qiskit.transpiler.CouplingMap.reduce.rst", "stubs/qiskit.transpiler.CouplingMap.shortest_undirected_path.rst", "stubs/qiskit.transpiler.CouplingMap.size.rst", "stubs/qiskit.transpiler.CouplingMap.subgraph.rst", "stubs/qiskit.transpiler.DoWhileController.rst", "stubs/qiskit.transpiler.DoWhileController.add_flow_controller.rst", "stubs/qiskit.transpiler.DoWhileController.controller_factory.rst", "stubs/qiskit.transpiler.DoWhileController.dump_passes.rst", "stubs/qiskit.transpiler.DoWhileController.remove_flow_controller.rst", "stubs/qiskit.transpiler.FencedDAGCircuit.rst", "stubs/qiskit.transpiler.FencedPropertySet.rst", "stubs/qiskit.transpiler.FlowController.rst", "stubs/qiskit.transpiler.FlowController.add_flow_controller.rst", "stubs/qiskit.transpiler.FlowController.controller_factory.rst", "stubs/qiskit.transpiler.FlowController.dump_passes.rst", "stubs/qiskit.transpiler.FlowController.remove_flow_controller.rst", "stubs/qiskit.transpiler.InstructionDurations.rst", "stubs/qiskit.transpiler.InstructionDurations.from_backend.rst", "stubs/qiskit.transpiler.InstructionDurations.get.rst", "stubs/qiskit.transpiler.InstructionDurations.units_used.rst", "stubs/qiskit.transpiler.InstructionDurations.update.rst", "stubs/qiskit.transpiler.InstructionProperties.rst", "stubs/qiskit.transpiler.Layout.rst", "stubs/qiskit.transpiler.Layout.add.rst", "stubs/qiskit.transpiler.Layout.add_register.rst", "stubs/qiskit.transpiler.Layout.combine_into_edge_map.rst", "stubs/qiskit.transpiler.Layout.copy.rst", "stubs/qiskit.transpiler.Layout.from_dict.rst", "stubs/qiskit.transpiler.Layout.from_intlist.rst", "stubs/qiskit.transpiler.Layout.from_qubit_list.rst", "stubs/qiskit.transpiler.Layout.generate_trivial_layout.rst", "stubs/qiskit.transpiler.Layout.get_physical_bits.rst", "stubs/qiskit.transpiler.Layout.get_registers.rst", "stubs/qiskit.transpiler.Layout.get_virtual_bits.rst", "stubs/qiskit.transpiler.Layout.order_based_on_type.rst", "stubs/qiskit.transpiler.Layout.reorder_bits.rst", "stubs/qiskit.transpiler.Layout.swap.rst", "stubs/qiskit.transpiler.PassManager.rst", "stubs/qiskit.transpiler.PassManager.append.rst", "stubs/qiskit.transpiler.PassManager.draw.rst", "stubs/qiskit.transpiler.PassManager.passes.rst", "stubs/qiskit.transpiler.PassManager.remove.rst", "stubs/qiskit.transpiler.PassManager.replace.rst", "stubs/qiskit.transpiler.PassManager.run.rst", "stubs/qiskit.transpiler.PassManagerConfig.rst", "stubs/qiskit.transpiler.PassManagerConfig.from_backend.rst", "stubs/qiskit.transpiler.PropertySet.rst", "stubs/qiskit.transpiler.PropertySet.clear.rst", "stubs/qiskit.transpiler.PropertySet.copy.rst", "stubs/qiskit.transpiler.PropertySet.fromkeys.rst", "stubs/qiskit.transpiler.PropertySet.get.rst", "stubs/qiskit.transpiler.PropertySet.items.rst", "stubs/qiskit.transpiler.PropertySet.keys.rst", "stubs/qiskit.transpiler.PropertySet.pop.rst", "stubs/qiskit.transpiler.PropertySet.popitem.rst", "stubs/qiskit.transpiler.PropertySet.setdefault.rst", "stubs/qiskit.transpiler.PropertySet.update.rst", "stubs/qiskit.transpiler.PropertySet.values.rst", "stubs/qiskit.transpiler.StagedPassManager.rst", "stubs/qiskit.transpiler.StagedPassManager.append.rst", "stubs/qiskit.transpiler.StagedPassManager.draw.rst", "stubs/qiskit.transpiler.StagedPassManager.passes.rst", "stubs/qiskit.transpiler.StagedPassManager.remove.rst", "stubs/qiskit.transpiler.StagedPassManager.replace.rst", "stubs/qiskit.transpiler.StagedPassManager.run.rst", "stubs/qiskit.transpiler.Target.rst", "stubs/qiskit.transpiler.Target.add_instruction.rst", "stubs/qiskit.transpiler.Target.build_coupling_map.rst", "stubs/qiskit.transpiler.Target.durations.rst", "stubs/qiskit.transpiler.Target.get.rst", "stubs/qiskit.transpiler.Target.get_non_global_operation_names.rst", "stubs/qiskit.transpiler.Target.instruction_properties.rst", "stubs/qiskit.transpiler.Target.instruction_schedule_map.rst", "stubs/qiskit.transpiler.Target.instruction_supported.rst", "stubs/qiskit.transpiler.Target.items.rst", "stubs/qiskit.transpiler.Target.keys.rst", "stubs/qiskit.transpiler.Target.operation_from_name.rst", "stubs/qiskit.transpiler.Target.operation_names_for_qargs.rst", "stubs/qiskit.transpiler.Target.operations_for_qargs.rst", "stubs/qiskit.transpiler.Target.qargs_for_operation_name.rst", "stubs/qiskit.transpiler.Target.timing_constraints.rst", "stubs/qiskit.transpiler.Target.update_from_instruction_schedule_map.rst", "stubs/qiskit.transpiler.Target.update_instruction_properties.rst", "stubs/qiskit.transpiler.Target.values.rst", "stubs/qiskit.transpiler.TransformationPass.rst", "stubs/qiskit.transpiler.TransformationPass.name.rst", "stubs/qiskit.transpiler.TransformationPass.run.rst", "stubs/qiskit.transpiler.TranspilerAccessError.rst", "stubs/qiskit.transpiler.TranspilerError.rst", "stubs/qiskit.transpiler.passes.ALAPSchedule.rst", "stubs/qiskit.transpiler.passes.ALAPSchedule.name.rst", "stubs/qiskit.transpiler.passes.ALAPSchedule.run.rst", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis.rst", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis.name.rst", "stubs/qiskit.transpiler.passes.ALAPScheduleAnalysis.run.rst", "stubs/qiskit.transpiler.passes.ASAPSchedule.rst", "stubs/qiskit.transpiler.passes.ASAPSchedule.name.rst", "stubs/qiskit.transpiler.passes.ASAPSchedule.run.rst", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis.rst", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis.name.rst", "stubs/qiskit.transpiler.passes.ASAPScheduleAnalysis.run.rst", "stubs/qiskit.transpiler.passes.AlignMeasures.rst", "stubs/qiskit.transpiler.passes.AlignMeasures.name.rst", "stubs/qiskit.transpiler.passes.AlignMeasures.run.rst", "stubs/qiskit.transpiler.passes.ApplyLayout.rst", "stubs/qiskit.transpiler.passes.ApplyLayout.name.rst", "stubs/qiskit.transpiler.passes.ApplyLayout.run.rst", "stubs/qiskit.transpiler.passes.BIPMapping.rst", "stubs/qiskit.transpiler.passes.BIPMapping.name.rst", "stubs/qiskit.transpiler.passes.BIPMapping.run.rst", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.rst", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.name.rst", "stubs/qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.run.rst", "stubs/qiskit.transpiler.passes.BasicSwap.rst", "stubs/qiskit.transpiler.passes.BasicSwap.name.rst", "stubs/qiskit.transpiler.passes.BasicSwap.run.rst", "stubs/qiskit.transpiler.passes.BasisTranslator.rst", "stubs/qiskit.transpiler.passes.BasisTranslator.name.rst", "stubs/qiskit.transpiler.passes.BasisTranslator.run.rst", "stubs/qiskit.transpiler.passes.CSPLayout.rst", "stubs/qiskit.transpiler.passes.CSPLayout.name.rst", "stubs/qiskit.transpiler.passes.CSPLayout.run.rst", "stubs/qiskit.transpiler.passes.CXCancellation.rst", "stubs/qiskit.transpiler.passes.CXCancellation.name.rst", "stubs/qiskit.transpiler.passes.CXCancellation.run.rst", "stubs/qiskit.transpiler.passes.CXDirection.rst", "stubs/qiskit.transpiler.passes.CXDirection.name.rst", "stubs/qiskit.transpiler.passes.CXDirection.run.rst", "stubs/qiskit.transpiler.passes.CheckCXDirection.rst", "stubs/qiskit.transpiler.passes.CheckCXDirection.name.rst", "stubs/qiskit.transpiler.passes.CheckCXDirection.run.rst", "stubs/qiskit.transpiler.passes.CheckGateDirection.rst", "stubs/qiskit.transpiler.passes.CheckGateDirection.name.rst", "stubs/qiskit.transpiler.passes.CheckGateDirection.run.rst", "stubs/qiskit.transpiler.passes.CheckMap.rst", "stubs/qiskit.transpiler.passes.CheckMap.name.rst", "stubs/qiskit.transpiler.passes.CheckMap.run.rst", "stubs/qiskit.transpiler.passes.Collect1qRuns.rst", "stubs/qiskit.transpiler.passes.Collect1qRuns.name.rst", "stubs/qiskit.transpiler.passes.Collect1qRuns.run.rst", "stubs/qiskit.transpiler.passes.Collect2qBlocks.rst", "stubs/qiskit.transpiler.passes.Collect2qBlocks.name.rst", "stubs/qiskit.transpiler.passes.Collect2qBlocks.run.rst", "stubs/qiskit.transpiler.passes.CollectLinearFunctions.rst", "stubs/qiskit.transpiler.passes.CollectLinearFunctions.name.rst", "stubs/qiskit.transpiler.passes.CollectLinearFunctions.run.rst", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.rst", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.find_set.rst", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.name.rst", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.run.rst", "stubs/qiskit.transpiler.passes.CollectMultiQBlocks.union_set.rst", "stubs/qiskit.transpiler.passes.CommutationAnalysis.rst", "stubs/qiskit.transpiler.passes.CommutationAnalysis.name.rst", "stubs/qiskit.transpiler.passes.CommutationAnalysis.run.rst", "stubs/qiskit.transpiler.passes.CommutativeCancellation.rst", "stubs/qiskit.transpiler.passes.CommutativeCancellation.name.rst", "stubs/qiskit.transpiler.passes.CommutativeCancellation.run.rst", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.rst", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.name.rst", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.run.rst", "stubs/qiskit.transpiler.passes.Commuting2qGateRouter.swap_decompose.rst", "stubs/qiskit.transpiler.passes.ConsolidateBlocks.rst", "stubs/qiskit.transpiler.passes.ConsolidateBlocks.name.rst", "stubs/qiskit.transpiler.passes.ConsolidateBlocks.run.rst", "stubs/qiskit.transpiler.passes.ConstrainedReschedule.rst", "stubs/qiskit.transpiler.passes.ConstrainedReschedule.name.rst", "stubs/qiskit.transpiler.passes.ConstrainedReschedule.run.rst", "stubs/qiskit.transpiler.passes.ContainsInstruction.rst", "stubs/qiskit.transpiler.passes.ContainsInstruction.name.rst", "stubs/qiskit.transpiler.passes.ContainsInstruction.run.rst", "stubs/qiskit.transpiler.passes.CountOps.rst", "stubs/qiskit.transpiler.passes.CountOps.name.rst", "stubs/qiskit.transpiler.passes.CountOps.run.rst", "stubs/qiskit.transpiler.passes.CountOpsLongestPath.rst", "stubs/qiskit.transpiler.passes.CountOpsLongestPath.name.rst", "stubs/qiskit.transpiler.passes.CountOpsLongestPath.run.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.assign_gate_id.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.basic_bounds.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_dag_dependency.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_xtalk_dependency.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.coherence_constraints.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_updated_dag.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_z3_vars.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.cx_tuple.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.enforce_schedule_on_dag.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_crosstalk_relevant_sets.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_dag_overlap_sets.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_solution.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.fidelity_constraints.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.filter_candidates.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.find_layer.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.gate_tuple.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.generate_barriers.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.is_significant_xtalk.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.name.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.objective_function.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.parse_backend_properties.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.powerset.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.r2f.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.reset.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.run.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.scheduling_constraints.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.singleq_tuple.rst", "stubs/qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.solve_optimization.rst", "stubs/qiskit.transpiler.passes.DAGFixedPoint.rst", "stubs/qiskit.transpiler.passes.DAGFixedPoint.name.rst", "stubs/qiskit.transpiler.passes.DAGFixedPoint.run.rst", "stubs/qiskit.transpiler.passes.DAGLongestPath.rst", "stubs/qiskit.transpiler.passes.DAGLongestPath.name.rst", "stubs/qiskit.transpiler.passes.DAGLongestPath.run.rst", "stubs/qiskit.transpiler.passes.Decompose.rst", "stubs/qiskit.transpiler.passes.Decompose.name.rst", "stubs/qiskit.transpiler.passes.Decompose.run.rst", "stubs/qiskit.transpiler.passes.DenseLayout.rst", "stubs/qiskit.transpiler.passes.DenseLayout.name.rst", "stubs/qiskit.transpiler.passes.DenseLayout.run.rst", "stubs/qiskit.transpiler.passes.Depth.rst", "stubs/qiskit.transpiler.passes.Depth.name.rst", "stubs/qiskit.transpiler.passes.Depth.run.rst", "stubs/qiskit.transpiler.passes.DynamicalDecoupling.rst", "stubs/qiskit.transpiler.passes.DynamicalDecoupling.name.rst", "stubs/qiskit.transpiler.passes.DynamicalDecoupling.run.rst", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition.rst", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition.name.rst", "stubs/qiskit.transpiler.passes.EchoRZXWeylDecomposition.run.rst", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla.rst", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla.name.rst", "stubs/qiskit.transpiler.passes.EnlargeWithAncilla.run.rst", "stubs/qiskit.transpiler.passes.FixedPoint.rst", "stubs/qiskit.transpiler.passes.FixedPoint.name.rst", "stubs/qiskit.transpiler.passes.FixedPoint.run.rst", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.rst", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.name.rst", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.run.rst", "stubs/qiskit.transpiler.passes.FullAncillaAllocation.validate_layout.rst", "stubs/qiskit.transpiler.passes.GateDirection.rst", "stubs/qiskit.transpiler.passes.GateDirection.name.rst", "stubs/qiskit.transpiler.passes.GateDirection.run.rst", "stubs/qiskit.transpiler.passes.GatesInBasis.rst", "stubs/qiskit.transpiler.passes.GatesInBasis.name.rst", "stubs/qiskit.transpiler.passes.GatesInBasis.run.rst", "stubs/qiskit.transpiler.passes.HoareOptimizer.rst", "stubs/qiskit.transpiler.passes.HoareOptimizer.name.rst", "stubs/qiskit.transpiler.passes.HoareOptimizer.run.rst", "stubs/qiskit.transpiler.passes.InstructionDurationCheck.rst", "stubs/qiskit.transpiler.passes.InstructionDurationCheck.name.rst", "stubs/qiskit.transpiler.passes.InstructionDurationCheck.run.rst", "stubs/qiskit.transpiler.passes.InverseCancellation.rst", "stubs/qiskit.transpiler.passes.InverseCancellation.name.rst", "stubs/qiskit.transpiler.passes.InverseCancellation.run.rst", "stubs/qiskit.transpiler.passes.Layout2qDistance.rst", "stubs/qiskit.transpiler.passes.Layout2qDistance.name.rst", "stubs/qiskit.transpiler.passes.Layout2qDistance.run.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis.name.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsSynthesis.run.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations.name.rst", "stubs/qiskit.transpiler.passes.LinearFunctionsToPermutations.run.rst", "stubs/qiskit.transpiler.passes.LookaheadSwap.rst", "stubs/qiskit.transpiler.passes.LookaheadSwap.name.rst", "stubs/qiskit.transpiler.passes.LookaheadSwap.run.rst", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers.rst", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers.name.rst", "stubs/qiskit.transpiler.passes.MergeAdjacentBarriers.run.rst", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout.rst", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout.name.rst", "stubs/qiskit.transpiler.passes.NoiseAdaptiveLayout.run.rst", "stubs/qiskit.transpiler.passes.NumTensorFactors.rst", "stubs/qiskit.transpiler.passes.NumTensorFactors.name.rst", "stubs/qiskit.transpiler.passes.NumTensorFactors.run.rst", "stubs/qiskit.transpiler.passes.Optimize1qGates.rst", "stubs/qiskit.transpiler.passes.Optimize1qGates.compose_u3.rst", "stubs/qiskit.transpiler.passes.Optimize1qGates.name.rst", "stubs/qiskit.transpiler.passes.Optimize1qGates.run.rst", "stubs/qiskit.transpiler.passes.Optimize1qGates.yzy_to_zyz.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition.name.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesDecomposition.run.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.name.rst", "stubs/qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.run.rst", "stubs/qiskit.transpiler.passes.PadDelay.rst", "stubs/qiskit.transpiler.passes.PadDelay.name.rst", "stubs/qiskit.transpiler.passes.PadDelay.run.rst", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling.rst", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling.name.rst", "stubs/qiskit.transpiler.passes.PadDynamicalDecoupling.run.rst", "stubs/qiskit.transpiler.passes.PulseGates.rst", "stubs/qiskit.transpiler.passes.PulseGates.get_calibration.rst", "stubs/qiskit.transpiler.passes.PulseGates.name.rst", "stubs/qiskit.transpiler.passes.PulseGates.run.rst", "stubs/qiskit.transpiler.passes.PulseGates.supported.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.get_calibration.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.name.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.rescale_cr_inst.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.run.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilder.supported.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.get_calibration.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.name.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.rescale_cr_inst.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.run.rst", "stubs/qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.supported.rst", "stubs/qiskit.transpiler.passes.RemoveBarriers.rst", "stubs/qiskit.transpiler.passes.RemoveBarriers.name.rst", "stubs/qiskit.transpiler.passes.RemoveBarriers.run.rst", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.rst", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.name.rst", "stubs/qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.run.rst", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements.rst", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements.name.rst", "stubs/qiskit.transpiler.passes.RemoveFinalMeasurements.run.rst", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState.rst", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState.name.rst", "stubs/qiskit.transpiler.passes.RemoveResetInZeroState.run.rst", "stubs/qiskit.transpiler.passes.SabreLayout.rst", "stubs/qiskit.transpiler.passes.SabreLayout.name.rst", "stubs/qiskit.transpiler.passes.SabreLayout.run.rst", "stubs/qiskit.transpiler.passes.SabreSwap.rst", "stubs/qiskit.transpiler.passes.SabreSwap.name.rst", "stubs/qiskit.transpiler.passes.SabreSwap.run.rst", "stubs/qiskit.transpiler.passes.SetIOLatency.rst", "stubs/qiskit.transpiler.passes.SetIOLatency.name.rst", "stubs/qiskit.transpiler.passes.SetIOLatency.run.rst", "stubs/qiskit.transpiler.passes.SetLayout.rst", "stubs/qiskit.transpiler.passes.SetLayout.name.rst", "stubs/qiskit.transpiler.passes.SetLayout.run.rst", "stubs/qiskit.transpiler.passes.Size.rst", "stubs/qiskit.transpiler.passes.Size.name.rst", "stubs/qiskit.transpiler.passes.Size.run.rst", "stubs/qiskit.transpiler.passes.StochasticSwap.rst", "stubs/qiskit.transpiler.passes.StochasticSwap.name.rst", "stubs/qiskit.transpiler.passes.StochasticSwap.run.rst", "stubs/qiskit.transpiler.passes.TemplateOptimization.rst", "stubs/qiskit.transpiler.passes.TemplateOptimization.name.rst", "stubs/qiskit.transpiler.passes.TemplateOptimization.run.rst", "stubs/qiskit.transpiler.passes.TimeUnitConversion.rst", "stubs/qiskit.transpiler.passes.TimeUnitConversion.name.rst", "stubs/qiskit.transpiler.passes.TimeUnitConversion.run.rst", "stubs/qiskit.transpiler.passes.TrivialLayout.rst", "stubs/qiskit.transpiler.passes.TrivialLayout.name.rst", "stubs/qiskit.transpiler.passes.TrivialLayout.run.rst", "stubs/qiskit.transpiler.passes.UnitarySynthesis.rst", "stubs/qiskit.transpiler.passes.UnitarySynthesis.name.rst", "stubs/qiskit.transpiler.passes.UnitarySynthesis.run.rst", "stubs/qiskit.transpiler.passes.Unroll3qOrMore.rst", "stubs/qiskit.transpiler.passes.Unroll3qOrMore.name.rst", "stubs/qiskit.transpiler.passes.Unroll3qOrMore.run.rst", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions.rst", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions.name.rst", "stubs/qiskit.transpiler.passes.UnrollCustomDefinitions.run.rst", "stubs/qiskit.transpiler.passes.Unroller.rst", "stubs/qiskit.transpiler.passes.Unroller.name.rst", "stubs/qiskit.transpiler.passes.Unroller.run.rst", "stubs/qiskit.transpiler.passes.VF2Layout.rst", "stubs/qiskit.transpiler.passes.VF2Layout.name.rst", "stubs/qiskit.transpiler.passes.VF2Layout.run.rst", "stubs/qiskit.transpiler.passes.VF2PostLayout.rst", "stubs/qiskit.transpiler.passes.VF2PostLayout.name.rst", "stubs/qiskit.transpiler.passes.VF2PostLayout.run.rst", "stubs/qiskit.transpiler.passes.ValidatePulseGates.rst", "stubs/qiskit.transpiler.passes.ValidatePulseGates.name.rst", "stubs/qiskit.transpiler.passes.ValidatePulseGates.run.rst", "stubs/qiskit.transpiler.passes.Width.rst", "stubs/qiskit.transpiler.passes.Width.name.rst", "stubs/qiskit.transpiler.passes.Width.run.rst", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin.rst", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin.run.rst", "stubs/qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPluginManager.rst", "stubs/qiskit.transpiler.passes.synthesis.plugin.unitary_synthesis_plugin_names.rst", "stubs/qiskit.transpiler.preset_passmanagers.generate_preset_pass_manager.rst", "stubs/qiskit.transpiler.preset_passmanagers.level_0_pass_manager.rst", "stubs/qiskit.transpiler.preset_passmanagers.level_1_pass_manager.rst", "stubs/qiskit.transpiler.preset_passmanagers.level_2_pass_manager.rst", "stubs/qiskit.transpiler.preset_passmanagers.level_3_pass_manager.rst", "stubs/qiskit.transpiler.synthesis.aqc.AQC.rst", "stubs/qiskit.transpiler.synthesis.aqc.AQC.compile_unitary.rst", "stubs/qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin.rst", "stubs/qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin.run.rst", "stubs/qiskit.transpiler.synthesis.aqc.ApproximateCircuit.rst", "stubs/qiskit.transpiler.synthesis.aqc.ApproximateCircuit.build.rst", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective.rst", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective.gradient.rst", "stubs/qiskit.transpiler.synthesis.aqc.ApproximatingObjective.objective.rst", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit.rst", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit.build.rst", "stubs/qiskit.transpiler.synthesis.aqc.CNOTUnitObjective.rst", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.rst", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.gradient.rst", "stubs/qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.objective.rst", "stubs/qiskit.utils.QuantumInstance.rst", "stubs/qiskit.utils.QuantumInstance.assemble.rst", "stubs/qiskit.utils.QuantumInstance.cals_matrix.rst", "stubs/qiskit.utils.QuantumInstance.execute.rst", "stubs/qiskit.utils.QuantumInstance.maybe_refresh_cals_matrix.rst", "stubs/qiskit.utils.QuantumInstance.reset_execution_results.rst", "stubs/qiskit.utils.QuantumInstance.set_config.rst", "stubs/qiskit.utils.QuantumInstance.transpile.rst", "stubs/qiskit.utils.algorithm_globals.rst", "stubs/qiskit.utils.apply_prefix.rst", "stubs/qiskit.utils.deprecate_arguments.rst", "stubs/qiskit.utils.deprecate_function.rst", "stubs/qiskit.utils.detach_prefix.rst", "stubs/qiskit.utils.get_entangler_map.rst", "stubs/qiskit.utils.has_aer.rst", "stubs/qiskit.utils.has_ibmq.rst", "stubs/qiskit.utils.is_main_process.rst", "stubs/qiskit.utils.local_hardware_info.rst", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.rst", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.add_data.rst", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.readout_fidelity.rst", "stubs/qiskit.utils.mitigation.CompleteMeasFitter.subset_fitter.rst", "stubs/qiskit.utils.mitigation.TensoredMeasFitter.rst", "stubs/qiskit.utils.mitigation.TensoredMeasFitter.add_data.rst", "stubs/qiskit.utils.mitigation.TensoredMeasFitter.readout_fidelity.rst", "stubs/qiskit.utils.name_args.rst", "stubs/qiskit.utils.summarize_circuits.rst", "stubs/qiskit.utils.validate_entangler_map.rst", "stubs/qiskit.utils.wrap_method.rst", "stubs/qiskit.visualization.VisualizationError.rst", "stubs/qiskit.visualization.array_to_latex.rst", "stubs/qiskit.visualization.circuit_drawer.rst", "stubs/qiskit.visualization.dag_drawer.rst", "stubs/qiskit.visualization.pass_manager_drawer.rst", "stubs/qiskit.visualization.plot_bloch_multivector.rst", "stubs/qiskit.visualization.plot_bloch_vector.rst", "stubs/qiskit.visualization.plot_circuit_layout.rst", "stubs/qiskit.visualization.plot_coupling_map.rst", "stubs/qiskit.visualization.plot_error_map.rst", "stubs/qiskit.visualization.plot_gate_map.rst", "stubs/qiskit.visualization.plot_histogram.rst", "stubs/qiskit.visualization.plot_state_city.rst", "stubs/qiskit.visualization.plot_state_hinton.rst", "stubs/qiskit.visualization.plot_state_paulivec.rst", "stubs/qiskit.visualization.plot_state_qsphere.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.clear.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.copy.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.fromkeys.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.get.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.items.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.keys.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.pop.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.popitem.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.setdefault.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.update.rst", "stubs/qiskit.visualization.pulse_v2.IQXDebugging.values.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.clear.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.copy.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.fromkeys.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.get.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.items.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.keys.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.pop.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.popitem.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.setdefault.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.update.rst", "stubs/qiskit.visualization.pulse_v2.IQXSimple.values.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.clear.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.copy.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.fromkeys.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.get.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.items.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.keys.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.pop.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.popitem.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.setdefault.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.update.rst", "stubs/qiskit.visualization.pulse_v2.IQXStandard.values.rst", "stubs/qiskit.visualization.pulse_v2.draw.rst", "stubs/qiskit.visualization.qcstyle.DefaultStyle.rst", "stubs/qiskit.visualization.timeline.draw.rst", "stubs/qiskit.visualization.timeline_drawer.rst", "stubs/qiskit.visualization.visualize_transition.rst", "tutorials.rst", "tutorials/algorithms/01_algorithms_introduction.ipynb", "tutorials/algorithms/02_vqe_convergence.ipynb", "tutorials/algorithms/03_vqe_simulation_with_noise.ipynb", "tutorials/algorithms/04_vqe_advanced.ipynb", "tutorials/algorithms/05_qaoa.ipynb", "tutorials/algorithms/06_grover.ipynb", "tutorials/algorithms/07_grover_examples.ipynb", "tutorials/algorithms/08_factorizers.ipynb", "tutorials/algorithms/09_IQPE.ipynb", "tutorials/algorithms/index.rst", "tutorials/circuits/01_circuit_basics.ipynb", "tutorials/circuits/1_getting_started_with_qiskit.ipynb", "tutorials/circuits/2_plotting_data_in_qiskit.ipynb", "tutorials/circuits/3_summary_of_quantum_operations.ipynb", "tutorials/circuits/index.rst", "tutorials/circuits_advanced/01_advanced_circuits.ipynb", "tutorials/circuits_advanced/02_operators_overview.ipynb", "tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb", "tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb", "tutorials/circuits_advanced/05_pulse_gates.ipynb", "tutorials/circuits_advanced/06_building_pulse_schedules.ipynb", "tutorials/circuits_advanced/07_pulse_scheduler.ipynb", "tutorials/circuits_advanced/08_gathering_system_information.ipynb", "tutorials/circuits_advanced/index.rst", "tutorials/operators/01_operator_flow.ipynb", "tutorials/operators/02_gradients_framework.ipynb", "tutorials/operators/index.rst", "tutorials/simulators/1_aer_provider.ipynb", "tutorials/simulators/2_device_noise_simulation.ipynb", "tutorials/simulators/3_building_noise_models.ipynb", "tutorials/simulators/4_custom_gate_noise.ipynb", "tutorials/simulators/5_noise_transformation.ipynb", "tutorials/simulators/6_extended_stabilizer_tutorial.ipynb", "tutorials/simulators/7_matrix_product_state_method.ipynb", "tutorials/simulators/index.rst", "tutorials/textbook/01_IQPE.ipynb", "tutorials/textbook/index.rst"], "titles": ["Qiskit Aer API Reference", "Circuit Extensions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.extensions</span></code>)", "Aer Jobs (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.jobs</span></code>)", "Instruction Library (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.library</span></code>)", "Noise Models (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.noise</span></code>)", "Aer Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer</span></code>)", "Pulse System Models (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.pulse</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.aer.utils</span></code>)", "Algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.algorithms</span></code>)", "Circuit and Schedule Assembler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.assembler</span></code>)", "Quantum Circuits (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.circuit</span></code>)", "Circuit Library", "ClassicalFunction compiler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.circuit.classicalfunction</span></code>)", "Compilation Routines (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.compiler</span></code>)", "Circuit Converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.converters</span></code>)", "DAG Circuits (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.dagcircuit</span></code>)", "Executing Experiments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.execute_function</span></code>)", "Quantum Circuit Extensions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.extensions</span></code>)", "Qiskit IBM Quantum Provider API Reference", "Credentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.credentials</span></code>)", "Experiment (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.experiment</span></code>)", "Job (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.job</span></code>)", "&lt;no title&gt;", "Job Manager (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.managed</span></code>)", "IBM Quantum Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq</span></code>)", "Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.runtime</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.ibmq.utils</span></code>)", "&lt;no title&gt;", "Operators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.opflow</span></code>)", "Running with Threadpool and DASK", "Primitives (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.primitives</span></code>)", "Providers Interface (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers</span></code>)", "BasicAer: Python-based Simulators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.basicaer</span></code>)", "Fake Provider (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.fake_provider</span></code>)", "Backend Objects (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.providers.models</span></code>)", "Pulse (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.pulse</span></code>)", "Qasm (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.qasm</span></code>)", "Qasm (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.qasm3</span></code>)", "Qobj (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.qobj</span></code>)", "QPY serialization (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.qpy</span></code>)", "Quantum Information (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.quantum_info</span></code>)", "Experiment Results (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.result</span></code>)", "Circuit Scheduler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.scheduler</span></code>)", "Circuit Synthesis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.synthesis</span></code>)", "Approximate Quantum Compiler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.transpiler.synthesis.aqc</span></code>)", "Qiskit Terra API Reference", "Qiskit Tools (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.tools</span></code>)", "Jupyter Tools (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.tools.jupyter</span></code>)", "Transpiler (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.transpiler</span></code>)", "Built-in Transpiler Synthesis Plugins", "Transpiler Passes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.transpiler.passes</span></code>)", "Synthesis Plugins (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.transpiler.passes.synthesis.plugin</span></code>)", "Preset Passmanagers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.transpiler.preset_passmanagers</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.utils</span></code>)", "Measurement Mitigation Utils (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.utils.mitigation</span></code>)", "Visualizations (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit.visualization</span></code>)", "\u30ed\u30fc\u30ab\u30eb\u69cb\u6210", "Qiskit \u306b\u8ca2\u732e\u3059\u308b", "\u3088\u304f\u3042\u308b\u8cea\u554f", "\u306f\u3058\u3081\u306b", "Qiskit 0.37.0 documentation", "&lt;no title&gt;", "Qiskit \u5165\u9580", "\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u6982\u8981", "Release Notes", "qiskit.algorithms.AlgorithmError", "AmplificationProblem", "AmplitudeAmplifier", "qiskit.algorithms.AmplitudeAmplifier.amplify", "AmplitudeEstimation", "qiskit.algorithms.AmplitudeEstimation.compute_confidence_interval", "qiskit.algorithms.AmplitudeEstimation.compute_mle", "qiskit.algorithms.AmplitudeEstimation.construct_circuit", "qiskit.algorithms.AmplitudeEstimation.estimate", "qiskit.algorithms.AmplitudeEstimation.evaluate_measurements", "AmplitudeEstimationResult", "qiskit.algorithms.AmplitudeEstimationResult.combine", "AmplitudeEstimator", "qiskit.algorithms.AmplitudeEstimator.estimate", "AmplitudeEstimatorResult", "qiskit.algorithms.AmplitudeEstimatorResult.combine", "Eigensolver", "qiskit.algorithms.Eigensolver.compute_eigenvalues", "qiskit.algorithms.Eigensolver.supports_aux_operators", "EigensolverResult", "qiskit.algorithms.EigensolverResult.combine", "EstimationProblem", "qiskit.algorithms.EstimationProblem.rescale", "EvolutionProblem", "qiskit.algorithms.EvolutionProblem.validate_params", "EvolutionResult", "qiskit.algorithms.EvolutionResult.combine", "FasterAmplitudeEstimation", "qiskit.algorithms.FasterAmplitudeEstimation.construct_circuit", "qiskit.algorithms.FasterAmplitudeEstimation.estimate", "FasterAmplitudeEstimationResult", "qiskit.algorithms.FasterAmplitudeEstimationResult.combine", "Grover", "qiskit.algorithms.Grover.amplify", "qiskit.algorithms.Grover.construct_circuit", "qiskit.algorithms.Grover.optimal_num_iterations", "GroverResult", "qiskit.algorithms.GroverResult.combine", "HamiltonianPhaseEstimation", "qiskit.algorithms.HamiltonianPhaseEstimation.estimate", "HamiltonianPhaseEstimationResult", "qiskit.algorithms.HamiltonianPhaseEstimationResult.combine", "qiskit.algorithms.HamiltonianPhaseEstimationResult.filter_phases", "ImaginaryEvolver", "qiskit.algorithms.ImaginaryEvolver.evolve", "IterativeAmplitudeEstimation", "qiskit.algorithms.IterativeAmplitudeEstimation.construct_circuit", "qiskit.algorithms.IterativeAmplitudeEstimation.estimate", "IterativeAmplitudeEstimationResult", "qiskit.algorithms.IterativeAmplitudeEstimationResult.combine", "IterativePhaseEstimation", "qiskit.algorithms.IterativePhaseEstimation.construct_circuit", "qiskit.algorithms.IterativePhaseEstimation.estimate", "MaximumLikelihoodAmplitudeEstimation", "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_confidence_interval", "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.compute_mle", "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.construct_circuits", "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation.estimate", "MaximumLikelihoodAmplitudeEstimationResult", "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult.combine", "MinimumEigensolver", "qiskit.algorithms.MinimumEigensolver.compute_minimum_eigenvalue", "qiskit.algorithms.MinimumEigensolver.supports_aux_operators", "MinimumEigensolverResult", "qiskit.algorithms.MinimumEigensolverResult.combine", "NumPyEigensolver", "qiskit.algorithms.NumPyEigensolver.compute_eigenvalues", "qiskit.algorithms.NumPyEigensolver.supports_aux_operators", "NumPyMinimumEigensolver", "qiskit.algorithms.NumPyMinimumEigensolver.compute_minimum_eigenvalue", "qiskit.algorithms.NumPyMinimumEigensolver.supports_aux_operators", "PhaseEstimation", "qiskit.algorithms.PhaseEstimation.construct_circuit", "qiskit.algorithms.PhaseEstimation.estimate", "qiskit.algorithms.PhaseEstimation.estimate_from_pe_circuit", "PhaseEstimationResult", "qiskit.algorithms.PhaseEstimationResult.combine", "qiskit.algorithms.PhaseEstimationResult.filter_phases", "PhaseEstimationScale", "qiskit.algorithms.PhaseEstimationScale.from_pauli_sum", "qiskit.algorithms.PhaseEstimationScale.scale_phase", "qiskit.algorithms.PhaseEstimationScale.scale_phases", "QAOA", "qiskit.algorithms.QAOA.compute_minimum_eigenvalue", "qiskit.algorithms.QAOA.construct_circuit", "qiskit.algorithms.QAOA.construct_expectation", "qiskit.algorithms.QAOA.get_energy_evaluation", "qiskit.algorithms.QAOA.print_settings", "qiskit.algorithms.QAOA.supports_aux_operators", "RealEvolver", "qiskit.algorithms.RealEvolver.evolve", "Shor", "qiskit.algorithms.Shor.construct_circuit", "qiskit.algorithms.Shor.factor", "qiskit.algorithms.Shor.modinv", "ShorResult", "qiskit.algorithms.ShorResult.combine", "TrotterQRTE", "qiskit.algorithms.TrotterQRTE.evolve", "qiskit.algorithms.TrotterQRTE.supports_aux_operators", "VQD", "qiskit.algorithms.VQD.compute_eigenvalues", "qiskit.algorithms.VQD.construct_circuit", "qiskit.algorithms.VQD.construct_expectation", "qiskit.algorithms.VQD.get_energy_evaluation", "qiskit.algorithms.VQD.print_settings", "qiskit.algorithms.VQD.supports_aux_operators", "VQE", "qiskit.algorithms.VQE.compute_minimum_eigenvalue", "qiskit.algorithms.VQE.construct_circuit", "qiskit.algorithms.VQE.construct_expectation", "qiskit.algorithms.VQE.get_energy_evaluation", "qiskit.algorithms.VQE.print_settings", "qiskit.algorithms.VQE.supports_aux_operators", "qiskit.algorithms.eval_observables", "qiskit.algorithms.linear_solvers", "AbsoluteAverage", "qiskit.algorithms.linear_solvers.AbsoluteAverage.evaluate_classically", "qiskit.algorithms.linear_solvers.AbsoluteAverage.observable", "qiskit.algorithms.linear_solvers.AbsoluteAverage.observable_circuit", "qiskit.algorithms.linear_solvers.AbsoluteAverage.post_processing", "HHL", "qiskit.algorithms.linear_solvers.HHL.construct_circuit", "qiskit.algorithms.linear_solvers.HHL.solve", "LinearSolver", "qiskit.algorithms.linear_solvers.LinearSolver.solve", "LinearSolverResult", "qiskit.algorithms.linear_solvers.LinearSolverResult.combine", "LinearSystemMatrix", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_bits", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_calibration", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.add_register", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.append", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.assign_parameters", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.barrier", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.bind_parameters", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.break_loop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cast", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cbit_argument_conversion", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ccx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ch", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.clear", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_instances", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cls_prefix", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cnot", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.combine", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.compose", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.condition_bounds", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.continue_loop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.control", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.copy_empty_like", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.count_ops", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cp", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.crx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cry", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.crz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cswap", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.csx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu1", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cu3", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cy", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.cz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.dcx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.decompose", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.delay", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.depth", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.diagonal", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.draw", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ecr", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.eigs_bounds", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.extend", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.find_bit", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.for_loop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.fredkin", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_file", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.from_qasm_str", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.get_instructions", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.h", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.hamiltonian", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_calibration_for", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.has_register", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.i", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.id", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_else", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.if_test", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.initialize", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.inverse", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.iso", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.isometry", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.iswap", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcp", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcry", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcrz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mct", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcu1", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.mcx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_active", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.measure_all", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ms", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_connected_components", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_nonlocal_gates", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_tensor_factors", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.num_unitary_factors", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.p", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.pauli", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.power", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.prepare_state", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.qasm", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.qbit_argument_conversion", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_duration", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_start_time", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.qubit_stop_time", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.r", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rcccx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rccx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.remove_final_measurements", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.repeat", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.reset", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_bits", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.reverse_ops", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rv", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rxx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ry", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ryy", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.rzz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.s", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_amplitudes_squared", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_clifford", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_density_matrix", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_expectation_value_variance", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_matrix_product_state", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_probabilities_dict", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_stabilizer", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_state", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_statevector_dict", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_superop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.save_unitary", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.sdg", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_density_matrix", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_matrix_product_state", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_stabilizer", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_statevector", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_superop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.set_unitary", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.size", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_density_matrix", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_expectation_value", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_probabilities", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_stabilizer", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.snapshot_statevector", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.squ", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.swap", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.sx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.sxdg", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.t", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.tdg", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.tensor", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_gate", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.to_instruction", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.toffoli", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.u", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.u1", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.u2", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.u3", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.uc", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrx", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucry", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.ucrz", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.unitary", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.while_loop", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.width", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.x", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.y", "qiskit.algorithms.linear_solvers.LinearSystemMatrix.z", "LinearSystemObservable", "qiskit.algorithms.linear_solvers.LinearSystemObservable.evaluate_classically", "qiskit.algorithms.linear_solvers.LinearSystemObservable.observable", "qiskit.algorithms.linear_solvers.LinearSystemObservable.observable_circuit", "qiskit.algorithms.linear_solvers.LinearSystemObservable.post_processing", "MatrixFunctional", "qiskit.algorithms.linear_solvers.MatrixFunctional.evaluate_classically", "qiskit.algorithms.linear_solvers.MatrixFunctional.observable", "qiskit.algorithms.linear_solvers.MatrixFunctional.observable_circuit", "qiskit.algorithms.linear_solvers.MatrixFunctional.post_processing", "NumPyLinearSolver", "qiskit.algorithms.linear_solvers.NumPyLinearSolver.solve", "NumPyMatrix", "qiskit.algorithms.linear_solvers.NumPyMatrix.add_bits", "qiskit.algorithms.linear_solvers.NumPyMatrix.add_calibration", "qiskit.algorithms.linear_solvers.NumPyMatrix.add_register", "qiskit.algorithms.linear_solvers.NumPyMatrix.append", "qiskit.algorithms.linear_solvers.NumPyMatrix.assign_parameters", "qiskit.algorithms.linear_solvers.NumPyMatrix.barrier", "qiskit.algorithms.linear_solvers.NumPyMatrix.bind_parameters", "qiskit.algorithms.linear_solvers.NumPyMatrix.break_loop", "qiskit.algorithms.linear_solvers.NumPyMatrix.cast", "qiskit.algorithms.linear_solvers.NumPyMatrix.cbit_argument_conversion", "qiskit.algorithms.linear_solvers.NumPyMatrix.ccx", "qiskit.algorithms.linear_solvers.NumPyMatrix.ch", "qiskit.algorithms.linear_solvers.NumPyMatrix.clear", "qiskit.algorithms.linear_solvers.NumPyMatrix.cls_instances", "qiskit.algorithms.linear_solvers.NumPyMatrix.cls_prefix", "qiskit.algorithms.linear_solvers.NumPyMatrix.cnot", "qiskit.algorithms.linear_solvers.NumPyMatrix.combine", "qiskit.algorithms.linear_solvers.NumPyMatrix.compose", "qiskit.algorithms.linear_solvers.NumPyMatrix.condition_bounds", "qiskit.algorithms.linear_solvers.NumPyMatrix.continue_loop", "qiskit.algorithms.linear_solvers.NumPyMatrix.control", "qiskit.algorithms.linear_solvers.NumPyMatrix.copy", "qiskit.algorithms.linear_solvers.NumPyMatrix.copy_empty_like", "qiskit.algorithms.linear_solvers.NumPyMatrix.count_ops", "qiskit.algorithms.linear_solvers.NumPyMatrix.cp", "qiskit.algorithms.linear_solvers.NumPyMatrix.crx", "qiskit.algorithms.linear_solvers.NumPyMatrix.cry", "qiskit.algorithms.linear_solvers.NumPyMatrix.crz", "qiskit.algorithms.linear_solvers.NumPyMatrix.cswap", "qiskit.algorithms.linear_solvers.NumPyMatrix.csx", "qiskit.algorithms.linear_solvers.NumPyMatrix.cu", "qiskit.algorithms.linear_solvers.NumPyMatrix.cu1", "qiskit.algorithms.linear_solvers.NumPyMatrix.cu3", "qiskit.algorithms.linear_solvers.NumPyMatrix.cx", "qiskit.algorithms.linear_solvers.NumPyMatrix.cy", "qiskit.algorithms.linear_solvers.NumPyMatrix.cz", "qiskit.algorithms.linear_solvers.NumPyMatrix.dcx", "qiskit.algorithms.linear_solvers.NumPyMatrix.decompose", "qiskit.algorithms.linear_solvers.NumPyMatrix.delay", "qiskit.algorithms.linear_solvers.NumPyMatrix.depth", "qiskit.algorithms.linear_solvers.NumPyMatrix.diagonal", "qiskit.algorithms.linear_solvers.NumPyMatrix.draw", "qiskit.algorithms.linear_solvers.NumPyMatrix.ecr", "qiskit.algorithms.linear_solvers.NumPyMatrix.eigs_bounds", "qiskit.algorithms.linear_solvers.NumPyMatrix.extend", "qiskit.algorithms.linear_solvers.NumPyMatrix.find_bit", "qiskit.algorithms.linear_solvers.NumPyMatrix.for_loop", "qiskit.algorithms.linear_solvers.NumPyMatrix.fredkin", "qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_file", "qiskit.algorithms.linear_solvers.NumPyMatrix.from_qasm_str", "qiskit.algorithms.linear_solvers.NumPyMatrix.get_instructions", "qiskit.algorithms.linear_solvers.NumPyMatrix.h", "qiskit.algorithms.linear_solvers.NumPyMatrix.hamiltonian", "qiskit.algorithms.linear_solvers.NumPyMatrix.has_calibration_for", "qiskit.algorithms.linear_solvers.NumPyMatrix.has_register", "qiskit.algorithms.linear_solvers.NumPyMatrix.i", "qiskit.algorithms.linear_solvers.NumPyMatrix.id", "qiskit.algorithms.linear_solvers.NumPyMatrix.if_else", "qiskit.algorithms.linear_solvers.NumPyMatrix.if_test", "qiskit.algorithms.linear_solvers.NumPyMatrix.initialize", "qiskit.algorithms.linear_solvers.NumPyMatrix.inverse", "qiskit.algorithms.linear_solvers.NumPyMatrix.iso", "qiskit.algorithms.linear_solvers.NumPyMatrix.isometry", "qiskit.algorithms.linear_solvers.NumPyMatrix.iswap", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcp", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcrx", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcry", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcrz", "qiskit.algorithms.linear_solvers.NumPyMatrix.mct", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcu1", "qiskit.algorithms.linear_solvers.NumPyMatrix.mcx", "qiskit.algorithms.linear_solvers.NumPyMatrix.measure", "qiskit.algorithms.linear_solvers.NumPyMatrix.measure_active", "qiskit.algorithms.linear_solvers.NumPyMatrix.measure_all", "qiskit.algorithms.linear_solvers.NumPyMatrix.ms", "qiskit.algorithms.linear_solvers.NumPyMatrix.num_connected_components", "qiskit.algorithms.linear_solvers.NumPyMatrix.num_nonlocal_gates", "qiskit.algorithms.linear_solvers.NumPyMatrix.num_tensor_factors", "qiskit.algorithms.linear_solvers.NumPyMatrix.num_unitary_factors", "qiskit.algorithms.linear_solvers.NumPyMatrix.p", "qiskit.algorithms.linear_solvers.NumPyMatrix.pauli", "qiskit.algorithms.linear_solvers.NumPyMatrix.power", "qiskit.algorithms.linear_solvers.NumPyMatrix.prepare_state", "qiskit.algorithms.linear_solvers.NumPyMatrix.qasm", "qiskit.algorithms.linear_solvers.NumPyMatrix.qbit_argument_conversion", "qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_duration", "qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_start_time", "qiskit.algorithms.linear_solvers.NumPyMatrix.qubit_stop_time", "qiskit.algorithms.linear_solvers.NumPyMatrix.r", "qiskit.algorithms.linear_solvers.NumPyMatrix.rcccx", "qiskit.algorithms.linear_solvers.NumPyMatrix.rccx", "qiskit.algorithms.linear_solvers.NumPyMatrix.remove_final_measurements", "qiskit.algorithms.linear_solvers.NumPyMatrix.repeat", "qiskit.algorithms.linear_solvers.NumPyMatrix.reset", "qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_bits", "qiskit.algorithms.linear_solvers.NumPyMatrix.reverse_ops", "qiskit.algorithms.linear_solvers.NumPyMatrix.rv", "qiskit.algorithms.linear_solvers.NumPyMatrix.rx", "qiskit.algorithms.linear_solvers.NumPyMatrix.rxx", "qiskit.algorithms.linear_solvers.NumPyMatrix.ry", "qiskit.algorithms.linear_solvers.NumPyMatrix.ryy", "qiskit.algorithms.linear_solvers.NumPyMatrix.rz", "qiskit.algorithms.linear_solvers.NumPyMatrix.rzx", "qiskit.algorithms.linear_solvers.NumPyMatrix.rzz", "qiskit.algorithms.linear_solvers.NumPyMatrix.s", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_amplitudes_squared", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_clifford", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_density_matrix", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_expectation_value_variance", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_matrix_product_state", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_probabilities_dict", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_stabilizer", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_state", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_statevector_dict", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_superop", "qiskit.algorithms.linear_solvers.NumPyMatrix.save_unitary", "qiskit.algorithms.linear_solvers.NumPyMatrix.sdg", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_density_matrix", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_matrix_product_state", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_stabilizer", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_statevector", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_superop", "qiskit.algorithms.linear_solvers.NumPyMatrix.set_unitary", "qiskit.algorithms.linear_solvers.NumPyMatrix.size", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_density_matrix", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_expectation_value", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_probabilities", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_stabilizer", "qiskit.algorithms.linear_solvers.NumPyMatrix.snapshot_statevector", "qiskit.algorithms.linear_solvers.NumPyMatrix.squ", "qiskit.algorithms.linear_solvers.NumPyMatrix.swap", "qiskit.algorithms.linear_solvers.NumPyMatrix.sx", "qiskit.algorithms.linear_solvers.NumPyMatrix.sxdg", "qiskit.algorithms.linear_solvers.NumPyMatrix.t", "qiskit.algorithms.linear_solvers.NumPyMatrix.tdg", "qiskit.algorithms.linear_solvers.NumPyMatrix.tensor", "qiskit.algorithms.linear_solvers.NumPyMatrix.to_gate", "qiskit.algorithms.linear_solvers.NumPyMatrix.to_instruction", "qiskit.algorithms.linear_solvers.NumPyMatrix.toffoli", "qiskit.algorithms.linear_solvers.NumPyMatrix.u", "qiskit.algorithms.linear_solvers.NumPyMatrix.u1", "qiskit.algorithms.linear_solvers.NumPyMatrix.u2", "qiskit.algorithms.linear_solvers.NumPyMatrix.u3", "qiskit.algorithms.linear_solvers.NumPyMatrix.uc", "qiskit.algorithms.linear_solvers.NumPyMatrix.ucrx", "qiskit.algorithms.linear_solvers.NumPyMatrix.ucry", "qiskit.algorithms.linear_solvers.NumPyMatrix.ucrz", "qiskit.algorithms.linear_solvers.NumPyMatrix.unitary", "qiskit.algorithms.linear_solvers.NumPyMatrix.while_loop", "qiskit.algorithms.linear_solvers.NumPyMatrix.width", "qiskit.algorithms.linear_solvers.NumPyMatrix.x", "qiskit.algorithms.linear_solvers.NumPyMatrix.y", "qiskit.algorithms.linear_solvers.NumPyMatrix.z", "TridiagonalToeplitz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_bits", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_calibration", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.add_register", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.append", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.assign_parameters", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.barrier", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.bind_parameters", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.break_loop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cast", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cbit_argument_conversion", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ccx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ch", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.clear", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_instances", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cls_prefix", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cnot", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.combine", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.compose", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.condition_bounds", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.continue_loop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.control", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.copy_empty_like", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.count_ops", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cp", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cry", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.crz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cswap", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.csx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu1", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cu3", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cy", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.cz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.dcx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.decompose", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.delay", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.depth", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.diagonal", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.draw", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ecr", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.eigs_bounds", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.extend", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.find_bit", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.for_loop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.fredkin", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_file", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.from_qasm_str", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.get_instructions", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.h", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.hamiltonian", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_calibration_for", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.has_register", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.i", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.id", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_else", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.if_test", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.initialize", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.inverse", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iso", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.isometry", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.iswap", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcp", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcry", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcrz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mct", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcu1", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.mcx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_active", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.measure_all", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ms", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_connected_components", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_nonlocal_gates", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_tensor_factors", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.num_unitary_factors", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.p", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.pauli", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.power", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.prepare_state", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qasm", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qbit_argument_conversion", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_duration", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_start_time", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.qubit_stop_time", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.r", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rcccx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rccx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.remove_final_measurements", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.repeat", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reset", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_bits", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.reverse_ops", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rv", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rxx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ry", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ryy", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.rzz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.s", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_amplitudes_squared", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_clifford", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_density_matrix", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_expectation_value_variance", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_matrix_product_state", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_probabilities_dict", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_stabilizer", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_state", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_statevector_dict", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_superop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.save_unitary", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sdg", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_density_matrix", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_matrix_product_state", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_stabilizer", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_statevector", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_superop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.set_unitary", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.size", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_density_matrix", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_expectation_value", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_probabilities", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_stabilizer", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.snapshot_statevector", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.squ", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.swap", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.sxdg", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.t", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tdg", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.tensor", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_gate", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.to_instruction", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.toffoli", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u1", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u2", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.u3", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.uc", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrx", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucry", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.ucrz", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.unitary", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.while_loop", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.width", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.x", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.y", "qiskit.algorithms.linear_solvers.TridiagonalToeplitz.z", "qiskit.algorithms.optimizers", "ADAM", "qiskit.algorithms.optimizers.ADAM.get_support_level", "qiskit.algorithms.optimizers.ADAM.gradient_num_diff", "qiskit.algorithms.optimizers.ADAM.load_params", "qiskit.algorithms.optimizers.ADAM.minimize", "qiskit.algorithms.optimizers.ADAM.print_options", "qiskit.algorithms.optimizers.ADAM.save_params", "qiskit.algorithms.optimizers.ADAM.set_max_evals_grouped", "qiskit.algorithms.optimizers.ADAM.set_options", "qiskit.algorithms.optimizers.ADAM.wrap_function", "AQGD", "qiskit.algorithms.optimizers.AQGD.get_support_level", "qiskit.algorithms.optimizers.AQGD.gradient_num_diff", "qiskit.algorithms.optimizers.AQGD.minimize", "qiskit.algorithms.optimizers.AQGD.print_options", "qiskit.algorithms.optimizers.AQGD.set_max_evals_grouped", "qiskit.algorithms.optimizers.AQGD.set_options", "qiskit.algorithms.optimizers.AQGD.wrap_function", "BOBYQA", "qiskit.algorithms.optimizers.BOBYQA.get_support_level", "qiskit.algorithms.optimizers.BOBYQA.gradient_num_diff", "qiskit.algorithms.optimizers.BOBYQA.minimize", "qiskit.algorithms.optimizers.BOBYQA.print_options", "qiskit.algorithms.optimizers.BOBYQA.set_max_evals_grouped", "qiskit.algorithms.optimizers.BOBYQA.set_options", "qiskit.algorithms.optimizers.BOBYQA.wrap_function", "CG", "qiskit.algorithms.optimizers.CG.get_support_level", "qiskit.algorithms.optimizers.CG.gradient_num_diff", "qiskit.algorithms.optimizers.CG.minimize", "qiskit.algorithms.optimizers.CG.print_options", "qiskit.algorithms.optimizers.CG.set_max_evals_grouped", "qiskit.algorithms.optimizers.CG.set_options", "qiskit.algorithms.optimizers.CG.wrap_function", "COBYLA", "qiskit.algorithms.optimizers.COBYLA.get_support_level", "qiskit.algorithms.optimizers.COBYLA.gradient_num_diff", "qiskit.algorithms.optimizers.COBYLA.minimize", "qiskit.algorithms.optimizers.COBYLA.print_options", "qiskit.algorithms.optimizers.COBYLA.set_max_evals_grouped", "qiskit.algorithms.optimizers.COBYLA.set_options", "qiskit.algorithms.optimizers.COBYLA.wrap_function", "CRS", "qiskit.algorithms.optimizers.CRS.get_nlopt_optimizer", "qiskit.algorithms.optimizers.CRS.get_support_level", "qiskit.algorithms.optimizers.CRS.gradient_num_diff", "qiskit.algorithms.optimizers.CRS.minimize", "qiskit.algorithms.optimizers.CRS.print_options", "qiskit.algorithms.optimizers.CRS.set_max_evals_grouped", "qiskit.algorithms.optimizers.CRS.set_options", "qiskit.algorithms.optimizers.CRS.wrap_function", "DIRECT_L", "qiskit.algorithms.optimizers.DIRECT_L.get_nlopt_optimizer", "qiskit.algorithms.optimizers.DIRECT_L.get_support_level", "qiskit.algorithms.optimizers.DIRECT_L.gradient_num_diff", "qiskit.algorithms.optimizers.DIRECT_L.minimize", "qiskit.algorithms.optimizers.DIRECT_L.print_options", "qiskit.algorithms.optimizers.DIRECT_L.set_max_evals_grouped", "qiskit.algorithms.optimizers.DIRECT_L.set_options", "qiskit.algorithms.optimizers.DIRECT_L.wrap_function", "DIRECT_L_RAND", "qiskit.algorithms.optimizers.DIRECT_L_RAND.get_nlopt_optimizer", "qiskit.algorithms.optimizers.DIRECT_L_RAND.get_support_level", "qiskit.algorithms.optimizers.DIRECT_L_RAND.gradient_num_diff", "qiskit.algorithms.optimizers.DIRECT_L_RAND.minimize", "qiskit.algorithms.optimizers.DIRECT_L_RAND.print_options", "qiskit.algorithms.optimizers.DIRECT_L_RAND.set_max_evals_grouped", "qiskit.algorithms.optimizers.DIRECT_L_RAND.set_options", "qiskit.algorithms.optimizers.DIRECT_L_RAND.wrap_function", "ESCH", "qiskit.algorithms.optimizers.ESCH.get_nlopt_optimizer", "qiskit.algorithms.optimizers.ESCH.get_support_level", "qiskit.algorithms.optimizers.ESCH.gradient_num_diff", "qiskit.algorithms.optimizers.ESCH.minimize", "qiskit.algorithms.optimizers.ESCH.print_options", "qiskit.algorithms.optimizers.ESCH.set_max_evals_grouped", "qiskit.algorithms.optimizers.ESCH.set_options", "qiskit.algorithms.optimizers.ESCH.wrap_function", "GSLS", "qiskit.algorithms.optimizers.GSLS.get_support_level", "qiskit.algorithms.optimizers.GSLS.gradient_approximation", "qiskit.algorithms.optimizers.GSLS.gradient_num_diff", "qiskit.algorithms.optimizers.GSLS.ls_optimize", "qiskit.algorithms.optimizers.GSLS.minimize", "qiskit.algorithms.optimizers.GSLS.print_options", "qiskit.algorithms.optimizers.GSLS.sample_points", "qiskit.algorithms.optimizers.GSLS.sample_set", "qiskit.algorithms.optimizers.GSLS.set_max_evals_grouped", "qiskit.algorithms.optimizers.GSLS.set_options", "qiskit.algorithms.optimizers.GSLS.wrap_function", "GradientDescent", "qiskit.algorithms.optimizers.GradientDescent.get_support_level", "qiskit.algorithms.optimizers.GradientDescent.gradient_num_diff", "qiskit.algorithms.optimizers.GradientDescent.minimize", "qiskit.algorithms.optimizers.GradientDescent.print_options", "qiskit.algorithms.optimizers.GradientDescent.set_max_evals_grouped", "qiskit.algorithms.optimizers.GradientDescent.set_options", "qiskit.algorithms.optimizers.GradientDescent.wrap_function", "IMFIL", "qiskit.algorithms.optimizers.IMFIL.get_support_level", "qiskit.algorithms.optimizers.IMFIL.gradient_num_diff", "qiskit.algorithms.optimizers.IMFIL.minimize", "qiskit.algorithms.optimizers.IMFIL.print_options", "qiskit.algorithms.optimizers.IMFIL.set_max_evals_grouped", "qiskit.algorithms.optimizers.IMFIL.set_options", "qiskit.algorithms.optimizers.IMFIL.wrap_function", "ISRES", "qiskit.algorithms.optimizers.ISRES.get_nlopt_optimizer", "qiskit.algorithms.optimizers.ISRES.get_support_level", "qiskit.algorithms.optimizers.ISRES.gradient_num_diff", "qiskit.algorithms.optimizers.ISRES.minimize", "qiskit.algorithms.optimizers.ISRES.print_options", "qiskit.algorithms.optimizers.ISRES.set_max_evals_grouped", "qiskit.algorithms.optimizers.ISRES.set_options", "qiskit.algorithms.optimizers.ISRES.wrap_function", "L_BFGS_B", "qiskit.algorithms.optimizers.L_BFGS_B.get_support_level", "qiskit.algorithms.optimizers.L_BFGS_B.gradient_num_diff", "qiskit.algorithms.optimizers.L_BFGS_B.minimize", "qiskit.algorithms.optimizers.L_BFGS_B.print_options", "qiskit.algorithms.optimizers.L_BFGS_B.set_max_evals_grouped", "qiskit.algorithms.optimizers.L_BFGS_B.set_options", "qiskit.algorithms.optimizers.L_BFGS_B.wrap_function", "NELDER_MEAD", "qiskit.algorithms.optimizers.NELDER_MEAD.get_support_level", "qiskit.algorithms.optimizers.NELDER_MEAD.gradient_num_diff", "qiskit.algorithms.optimizers.NELDER_MEAD.minimize", "qiskit.algorithms.optimizers.NELDER_MEAD.print_options", "qiskit.algorithms.optimizers.NELDER_MEAD.set_max_evals_grouped", "qiskit.algorithms.optimizers.NELDER_MEAD.set_options", "qiskit.algorithms.optimizers.NELDER_MEAD.wrap_function", "NFT", "qiskit.algorithms.optimizers.NFT.get_support_level", "qiskit.algorithms.optimizers.NFT.gradient_num_diff", "qiskit.algorithms.optimizers.NFT.minimize", "qiskit.algorithms.optimizers.NFT.print_options", "qiskit.algorithms.optimizers.NFT.set_max_evals_grouped", "qiskit.algorithms.optimizers.NFT.set_options", "qiskit.algorithms.optimizers.NFT.wrap_function", "Optimizer", "qiskit.algorithms.optimizers.Optimizer.get_support_level", "qiskit.algorithms.optimizers.Optimizer.gradient_num_diff", "qiskit.algorithms.optimizers.Optimizer.minimize", "qiskit.algorithms.optimizers.Optimizer.print_options", "qiskit.algorithms.optimizers.Optimizer.set_max_evals_grouped", "qiskit.algorithms.optimizers.Optimizer.set_options", "qiskit.algorithms.optimizers.Optimizer.wrap_function", "OptimizerResult", "qiskit.algorithms.optimizers.OptimizerResult.combine", "OptimizerSupportLevel", "POWELL", "qiskit.algorithms.optimizers.POWELL.get_support_level", "qiskit.algorithms.optimizers.POWELL.gradient_num_diff", "qiskit.algorithms.optimizers.POWELL.minimize", "qiskit.algorithms.optimizers.POWELL.print_options", "qiskit.algorithms.optimizers.POWELL.set_max_evals_grouped", "qiskit.algorithms.optimizers.POWELL.set_options", "qiskit.algorithms.optimizers.POWELL.wrap_function", "P_BFGS", "qiskit.algorithms.optimizers.P_BFGS.get_support_level", "qiskit.algorithms.optimizers.P_BFGS.gradient_num_diff", "qiskit.algorithms.optimizers.P_BFGS.minimize", "qiskit.algorithms.optimizers.P_BFGS.print_options", "qiskit.algorithms.optimizers.P_BFGS.set_max_evals_grouped", "qiskit.algorithms.optimizers.P_BFGS.set_options", "qiskit.algorithms.optimizers.P_BFGS.wrap_function", "QNSPSA", "qiskit.algorithms.optimizers.QNSPSA.calibrate", "qiskit.algorithms.optimizers.QNSPSA.estimate_stddev", "qiskit.algorithms.optimizers.QNSPSA.get_fidelity", "qiskit.algorithms.optimizers.QNSPSA.get_support_level", "qiskit.algorithms.optimizers.QNSPSA.gradient_num_diff", "qiskit.algorithms.optimizers.QNSPSA.minimize", "qiskit.algorithms.optimizers.QNSPSA.optimize", "qiskit.algorithms.optimizers.QNSPSA.print_options", "qiskit.algorithms.optimizers.QNSPSA.set_max_evals_grouped", "qiskit.algorithms.optimizers.QNSPSA.set_options", "qiskit.algorithms.optimizers.QNSPSA.wrap_function", "SLSQP", "qiskit.algorithms.optimizers.SLSQP.get_support_level", "qiskit.algorithms.optimizers.SLSQP.gradient_num_diff", "qiskit.algorithms.optimizers.SLSQP.minimize", "qiskit.algorithms.optimizers.SLSQP.print_options", "qiskit.algorithms.optimizers.SLSQP.set_max_evals_grouped", "qiskit.algorithms.optimizers.SLSQP.set_options", "qiskit.algorithms.optimizers.SLSQP.wrap_function", "SNOBFIT", "qiskit.algorithms.optimizers.SNOBFIT.get_support_level", "qiskit.algorithms.optimizers.SNOBFIT.gradient_num_diff", "qiskit.algorithms.optimizers.SNOBFIT.minimize", "qiskit.algorithms.optimizers.SNOBFIT.print_options", "qiskit.algorithms.optimizers.SNOBFIT.set_max_evals_grouped", "qiskit.algorithms.optimizers.SNOBFIT.set_options", "qiskit.algorithms.optimizers.SNOBFIT.wrap_function", "SPSA", "qiskit.algorithms.optimizers.SPSA.calibrate", "qiskit.algorithms.optimizers.SPSA.estimate_stddev", "qiskit.algorithms.optimizers.SPSA.get_support_level", "qiskit.algorithms.optimizers.SPSA.gradient_num_diff", "qiskit.algorithms.optimizers.SPSA.minimize", "qiskit.algorithms.optimizers.SPSA.optimize", "qiskit.algorithms.optimizers.SPSA.print_options", "qiskit.algorithms.optimizers.SPSA.set_max_evals_grouped", "qiskit.algorithms.optimizers.SPSA.set_options", "qiskit.algorithms.optimizers.SPSA.wrap_function", "SciPyOptimizer", "qiskit.algorithms.optimizers.SciPyOptimizer.get_support_level", "qiskit.algorithms.optimizers.SciPyOptimizer.gradient_num_diff", "qiskit.algorithms.optimizers.SciPyOptimizer.minimize", "qiskit.algorithms.optimizers.SciPyOptimizer.print_options", "qiskit.algorithms.optimizers.SciPyOptimizer.set_max_evals_grouped", "qiskit.algorithms.optimizers.SciPyOptimizer.set_options", "qiskit.algorithms.optimizers.SciPyOptimizer.wrap_function", "TNC", "qiskit.algorithms.optimizers.TNC.get_support_level", "qiskit.algorithms.optimizers.TNC.gradient_num_diff", "qiskit.algorithms.optimizers.TNC.minimize", "qiskit.algorithms.optimizers.TNC.print_options", "qiskit.algorithms.optimizers.TNC.set_max_evals_grouped", "qiskit.algorithms.optimizers.TNC.set_options", "qiskit.algorithms.optimizers.TNC.wrap_function", "UMDA", "qiskit.algorithms.optimizers.UMDA.get_support_level", "qiskit.algorithms.optimizers.UMDA.gradient_num_diff", "qiskit.algorithms.optimizers.UMDA.minimize", "qiskit.algorithms.optimizers.UMDA.print_options", "qiskit.algorithms.optimizers.UMDA.set_max_evals_grouped", "qiskit.algorithms.optimizers.UMDA.set_options", "qiskit.algorithms.optimizers.UMDA.wrap_function", "qiskit.algorithms.optimizers.nlopts", "RunConfig", "qiskit.assembler.RunConfig.from_dict", "qiskit.assembler.RunConfig.to_dict", "qiskit.assembler.assemble_circuits", "qiskit.assembler.assemble_schedules", "qiskit.assembler.disassemble", "AncillaQubit", "AncillaRegister", "qiskit.circuit.AncillaRegister.index", "qiskit.circuit.AncillaRegister.qasm", "BreakLoopOp", "qiskit.circuit.BreakLoopOp.add_decomposition", "qiskit.circuit.BreakLoopOp.assemble", "qiskit.circuit.BreakLoopOp.broadcast_arguments", "qiskit.circuit.BreakLoopOp.c_if", "qiskit.circuit.BreakLoopOp.copy", "qiskit.circuit.BreakLoopOp.inverse", "qiskit.circuit.BreakLoopOp.is_parameterized", "qiskit.circuit.BreakLoopOp.qasm", "qiskit.circuit.BreakLoopOp.repeat", "qiskit.circuit.BreakLoopOp.reverse_ops", "qiskit.circuit.BreakLoopOp.soft_compare", "qiskit.circuit.BreakLoopOp.validate_parameter", "CircuitInstruction", "qiskit.circuit.CircuitInstruction.copy", "qiskit.circuit.CircuitInstruction.replace", "ClassicalRegister", "qiskit.circuit.ClassicalRegister.index", "qiskit.circuit.ClassicalRegister.qasm", "Clbit", "ContinueLoopOp", "qiskit.circuit.ContinueLoopOp.add_decomposition", "qiskit.circuit.ContinueLoopOp.assemble", "qiskit.circuit.ContinueLoopOp.broadcast_arguments", "qiskit.circuit.ContinueLoopOp.c_if", "qiskit.circuit.ContinueLoopOp.copy", "qiskit.circuit.ContinueLoopOp.inverse", "qiskit.circuit.ContinueLoopOp.is_parameterized", "qiskit.circuit.ContinueLoopOp.qasm", "qiskit.circuit.ContinueLoopOp.repeat", "qiskit.circuit.ContinueLoopOp.reverse_ops", "qiskit.circuit.ContinueLoopOp.soft_compare", "qiskit.circuit.ContinueLoopOp.validate_parameter", "ControlFlowOp", "qiskit.circuit.ControlFlowOp.add_decomposition", "qiskit.circuit.ControlFlowOp.assemble", "qiskit.circuit.ControlFlowOp.broadcast_arguments", "qiskit.circuit.ControlFlowOp.c_if", "qiskit.circuit.ControlFlowOp.copy", "qiskit.circuit.ControlFlowOp.inverse", "qiskit.circuit.ControlFlowOp.is_parameterized", "qiskit.circuit.ControlFlowOp.qasm", "qiskit.circuit.ControlFlowOp.repeat", "qiskit.circuit.ControlFlowOp.replace_blocks", "qiskit.circuit.ControlFlowOp.reverse_ops", "qiskit.circuit.ControlFlowOp.soft_compare", "qiskit.circuit.ControlFlowOp.validate_parameter", "ControlledGate", "qiskit.circuit.ControlledGate.add_decomposition", "qiskit.circuit.ControlledGate.assemble", "qiskit.circuit.ControlledGate.broadcast_arguments", "qiskit.circuit.ControlledGate.c_if", "qiskit.circuit.ControlledGate.control", "qiskit.circuit.ControlledGate.copy", "qiskit.circuit.ControlledGate.inverse", "qiskit.circuit.ControlledGate.is_parameterized", "qiskit.circuit.ControlledGate.power", "qiskit.circuit.ControlledGate.qasm", "qiskit.circuit.ControlledGate.repeat", "qiskit.circuit.ControlledGate.reverse_ops", "qiskit.circuit.ControlledGate.soft_compare", "qiskit.circuit.ControlledGate.to_matrix", "qiskit.circuit.ControlledGate.validate_parameter", "Delay", "qiskit.circuit.Delay.add_decomposition", "qiskit.circuit.Delay.assemble", "qiskit.circuit.Delay.broadcast_arguments", "qiskit.circuit.Delay.c_if", "qiskit.circuit.Delay.copy", "qiskit.circuit.Delay.inverse", "qiskit.circuit.Delay.is_parameterized", "qiskit.circuit.Delay.qasm", "qiskit.circuit.Delay.repeat", "qiskit.circuit.Delay.reverse_ops", "qiskit.circuit.Delay.soft_compare", "qiskit.circuit.Delay.to_matrix", "qiskit.circuit.Delay.validate_parameter", "EquivalenceLibrary", "qiskit.circuit.EquivalenceLibrary.add_equivalence", "qiskit.circuit.EquivalenceLibrary.draw", "qiskit.circuit.EquivalenceLibrary.get_entry", "qiskit.circuit.EquivalenceLibrary.has_entry", "qiskit.circuit.EquivalenceLibrary.set_entry", "ForLoopOp", "qiskit.circuit.ForLoopOp.add_decomposition", "qiskit.circuit.ForLoopOp.assemble", "qiskit.circuit.ForLoopOp.broadcast_arguments", "qiskit.circuit.ForLoopOp.c_if", "qiskit.circuit.ForLoopOp.copy", "qiskit.circuit.ForLoopOp.inverse", "qiskit.circuit.ForLoopOp.is_parameterized", "qiskit.circuit.ForLoopOp.qasm", "qiskit.circuit.ForLoopOp.repeat", "qiskit.circuit.ForLoopOp.replace_blocks", "qiskit.circuit.ForLoopOp.reverse_ops", "qiskit.circuit.ForLoopOp.soft_compare", "qiskit.circuit.ForLoopOp.validate_parameter", "Gate", "qiskit.circuit.Gate.add_decomposition", "qiskit.circuit.Gate.assemble", "qiskit.circuit.Gate.broadcast_arguments", "qiskit.circuit.Gate.c_if", "qiskit.circuit.Gate.control", "qiskit.circuit.Gate.copy", "qiskit.circuit.Gate.inverse", "qiskit.circuit.Gate.is_parameterized", "qiskit.circuit.Gate.power", "qiskit.circuit.Gate.qasm", "qiskit.circuit.Gate.repeat", "qiskit.circuit.Gate.reverse_ops", "qiskit.circuit.Gate.soft_compare", "qiskit.circuit.Gate.to_matrix", "qiskit.circuit.Gate.validate_parameter", "IfElseOp", "qiskit.circuit.IfElseOp.add_decomposition", "qiskit.circuit.IfElseOp.assemble", "qiskit.circuit.IfElseOp.broadcast_arguments", "qiskit.circuit.IfElseOp.c_if", "qiskit.circuit.IfElseOp.copy", "qiskit.circuit.IfElseOp.inverse", "qiskit.circuit.IfElseOp.is_parameterized", "qiskit.circuit.IfElseOp.qasm", "qiskit.circuit.IfElseOp.repeat", "qiskit.circuit.IfElseOp.replace_blocks", "qiskit.circuit.IfElseOp.reverse_ops", "qiskit.circuit.IfElseOp.soft_compare", "qiskit.circuit.IfElseOp.validate_parameter", "Instruction", "qiskit.circuit.Instruction.add_decomposition", "qiskit.circuit.Instruction.assemble", "qiskit.circuit.Instruction.broadcast_arguments", "qiskit.circuit.Instruction.c_if", "qiskit.circuit.Instruction.copy", "qiskit.circuit.Instruction.inverse", "qiskit.circuit.Instruction.is_parameterized", "qiskit.circuit.Instruction.qasm", "qiskit.circuit.Instruction.repeat", "qiskit.circuit.Instruction.reverse_ops", "qiskit.circuit.Instruction.soft_compare", "qiskit.circuit.Instruction.validate_parameter", "InstructionSet", "qiskit.circuit.InstructionSet.add", "qiskit.circuit.InstructionSet.c_if", "qiskit.circuit.InstructionSet.inverse", "Parameter", "qiskit.circuit.Parameter.arccos", "qiskit.circuit.Parameter.arcsin", "qiskit.circuit.Parameter.arctan", "qiskit.circuit.Parameter.assign", "qiskit.circuit.Parameter.bind", "qiskit.circuit.Parameter.conjugate", "qiskit.circuit.Parameter.cos", "qiskit.circuit.Parameter.exp", "qiskit.circuit.Parameter.gradient", "qiskit.circuit.Parameter.is_real", "qiskit.circuit.Parameter.log", "qiskit.circuit.Parameter.sin", "qiskit.circuit.Parameter.subs", "qiskit.circuit.Parameter.sympify", "qiskit.circuit.Parameter.tan", "ParameterExpression", "qiskit.circuit.ParameterExpression.arccos", "qiskit.circuit.ParameterExpression.arcsin", "qiskit.circuit.ParameterExpression.arctan", "qiskit.circuit.ParameterExpression.assign", "qiskit.circuit.ParameterExpression.bind", "qiskit.circuit.ParameterExpression.conjugate", "qiskit.circuit.ParameterExpression.cos", "qiskit.circuit.ParameterExpression.exp", "qiskit.circuit.ParameterExpression.gradient", "qiskit.circuit.ParameterExpression.is_real", "qiskit.circuit.ParameterExpression.log", "qiskit.circuit.ParameterExpression.sin", "qiskit.circuit.ParameterExpression.subs", "qiskit.circuit.ParameterExpression.sympify", "qiskit.circuit.ParameterExpression.tan", "ParameterVector", "qiskit.circuit.ParameterVector.index", "qiskit.circuit.ParameterVector.resize", "QuantumCircuit", "qiskit.circuit.QuantumCircuit.add_bits", "qiskit.circuit.QuantumCircuit.add_calibration", "qiskit.circuit.QuantumCircuit.add_register", "qiskit.circuit.QuantumCircuit.append", "qiskit.circuit.QuantumCircuit.assign_parameters", "qiskit.circuit.QuantumCircuit.barrier", "qiskit.circuit.QuantumCircuit.bind_parameters", "qiskit.circuit.QuantumCircuit.break_loop", "qiskit.circuit.QuantumCircuit.cast", "qiskit.circuit.QuantumCircuit.cbit_argument_conversion", "qiskit.circuit.QuantumCircuit.ccx", "qiskit.circuit.QuantumCircuit.ch", "qiskit.circuit.QuantumCircuit.clear", "qiskit.circuit.QuantumCircuit.cls_instances", "qiskit.circuit.QuantumCircuit.cls_prefix", "qiskit.circuit.QuantumCircuit.cnot", "qiskit.circuit.QuantumCircuit.combine", "qiskit.circuit.QuantumCircuit.compose", "qiskit.circuit.QuantumCircuit.continue_loop", "qiskit.circuit.QuantumCircuit.control", "qiskit.circuit.QuantumCircuit.copy", "qiskit.circuit.QuantumCircuit.copy_empty_like", "qiskit.circuit.QuantumCircuit.count_ops", "qiskit.circuit.QuantumCircuit.cp", "qiskit.circuit.QuantumCircuit.crx", "qiskit.circuit.QuantumCircuit.cry", "qiskit.circuit.QuantumCircuit.crz", "qiskit.circuit.QuantumCircuit.cswap", "qiskit.circuit.QuantumCircuit.csx", "qiskit.circuit.QuantumCircuit.cu", "qiskit.circuit.QuantumCircuit.cu1", "qiskit.circuit.QuantumCircuit.cu3", "qiskit.circuit.QuantumCircuit.cx", "qiskit.circuit.QuantumCircuit.cy", "qiskit.circuit.QuantumCircuit.cz", "qiskit.circuit.QuantumCircuit.dcx", "qiskit.circuit.QuantumCircuit.decompose", "qiskit.circuit.QuantumCircuit.delay", "qiskit.circuit.QuantumCircuit.depth", "qiskit.circuit.QuantumCircuit.diagonal", "qiskit.circuit.QuantumCircuit.draw", "qiskit.circuit.QuantumCircuit.ecr", "qiskit.circuit.QuantumCircuit.extend", "qiskit.circuit.QuantumCircuit.find_bit", "qiskit.circuit.QuantumCircuit.for_loop", "qiskit.circuit.QuantumCircuit.fredkin", "qiskit.circuit.QuantumCircuit.from_qasm_file", "qiskit.circuit.QuantumCircuit.from_qasm_str", "qiskit.circuit.QuantumCircuit.get_instructions", "qiskit.circuit.QuantumCircuit.h", "qiskit.circuit.QuantumCircuit.hamiltonian", "qiskit.circuit.QuantumCircuit.has_calibration_for", "qiskit.circuit.QuantumCircuit.has_register", "qiskit.circuit.QuantumCircuit.i", "qiskit.circuit.QuantumCircuit.id", "qiskit.circuit.QuantumCircuit.if_else", "qiskit.circuit.QuantumCircuit.if_test", "qiskit.circuit.QuantumCircuit.initialize", "qiskit.circuit.QuantumCircuit.inverse", "qiskit.circuit.QuantumCircuit.iso", "qiskit.circuit.QuantumCircuit.isometry", "qiskit.circuit.QuantumCircuit.iswap", "qiskit.circuit.QuantumCircuit.mcp", "qiskit.circuit.QuantumCircuit.mcrx", "qiskit.circuit.QuantumCircuit.mcry", "qiskit.circuit.QuantumCircuit.mcrz", "qiskit.circuit.QuantumCircuit.mct", "qiskit.circuit.QuantumCircuit.mcu1", "qiskit.circuit.QuantumCircuit.mcx", "qiskit.circuit.QuantumCircuit.measure", "qiskit.circuit.QuantumCircuit.measure_active", "qiskit.circuit.QuantumCircuit.measure_all", "qiskit.circuit.QuantumCircuit.ms", "qiskit.circuit.QuantumCircuit.num_connected_components", "qiskit.circuit.QuantumCircuit.num_nonlocal_gates", "qiskit.circuit.QuantumCircuit.num_tensor_factors", "qiskit.circuit.QuantumCircuit.num_unitary_factors", "qiskit.circuit.QuantumCircuit.p", "qiskit.circuit.QuantumCircuit.pauli", "qiskit.circuit.QuantumCircuit.power", "qiskit.circuit.QuantumCircuit.prepare_state", "qiskit.circuit.QuantumCircuit.qasm", "qiskit.circuit.QuantumCircuit.qbit_argument_conversion", "qiskit.circuit.QuantumCircuit.qubit_duration", "qiskit.circuit.QuantumCircuit.qubit_start_time", "qiskit.circuit.QuantumCircuit.qubit_stop_time", "qiskit.circuit.QuantumCircuit.r", "qiskit.circuit.QuantumCircuit.rcccx", "qiskit.circuit.QuantumCircuit.rccx", "qiskit.circuit.QuantumCircuit.remove_final_measurements", "qiskit.circuit.QuantumCircuit.repeat", "qiskit.circuit.QuantumCircuit.reset", "qiskit.circuit.QuantumCircuit.reverse_bits", "qiskit.circuit.QuantumCircuit.reverse_ops", "qiskit.circuit.QuantumCircuit.rv", "qiskit.circuit.QuantumCircuit.rx", "qiskit.circuit.QuantumCircuit.rxx", "qiskit.circuit.QuantumCircuit.ry", "qiskit.circuit.QuantumCircuit.ryy", "qiskit.circuit.QuantumCircuit.rz", "qiskit.circuit.QuantumCircuit.rzx", "qiskit.circuit.QuantumCircuit.rzz", "qiskit.circuit.QuantumCircuit.s", "qiskit.circuit.QuantumCircuit.save_amplitudes", "qiskit.circuit.QuantumCircuit.save_amplitudes_squared", "qiskit.circuit.QuantumCircuit.save_clifford", "qiskit.circuit.QuantumCircuit.save_density_matrix", "qiskit.circuit.QuantumCircuit.save_expectation_value", "qiskit.circuit.QuantumCircuit.save_expectation_value_variance", "qiskit.circuit.QuantumCircuit.save_matrix_product_state", "qiskit.circuit.QuantumCircuit.save_probabilities", "qiskit.circuit.QuantumCircuit.save_probabilities_dict", "qiskit.circuit.QuantumCircuit.save_stabilizer", "qiskit.circuit.QuantumCircuit.save_state", "qiskit.circuit.QuantumCircuit.save_statevector", "qiskit.circuit.QuantumCircuit.save_statevector_dict", "qiskit.circuit.QuantumCircuit.save_superop", "qiskit.circuit.QuantumCircuit.save_unitary", "qiskit.circuit.QuantumCircuit.sdg", "qiskit.circuit.QuantumCircuit.set_density_matrix", "qiskit.circuit.QuantumCircuit.set_matrix_product_state", "qiskit.circuit.QuantumCircuit.set_stabilizer", "qiskit.circuit.QuantumCircuit.set_statevector", "qiskit.circuit.QuantumCircuit.set_superop", "qiskit.circuit.QuantumCircuit.set_unitary", "qiskit.circuit.QuantumCircuit.size", "qiskit.circuit.QuantumCircuit.snapshot", "qiskit.circuit.QuantumCircuit.snapshot_density_matrix", "qiskit.circuit.QuantumCircuit.snapshot_expectation_value", "qiskit.circuit.QuantumCircuit.snapshot_probabilities", "qiskit.circuit.QuantumCircuit.snapshot_stabilizer", "qiskit.circuit.QuantumCircuit.snapshot_statevector", "qiskit.circuit.QuantumCircuit.squ", "qiskit.circuit.QuantumCircuit.swap", "qiskit.circuit.QuantumCircuit.sx", "qiskit.circuit.QuantumCircuit.sxdg", "qiskit.circuit.QuantumCircuit.t", "qiskit.circuit.QuantumCircuit.tdg", "qiskit.circuit.QuantumCircuit.tensor", "qiskit.circuit.QuantumCircuit.to_gate", "qiskit.circuit.QuantumCircuit.to_instruction", "qiskit.circuit.QuantumCircuit.toffoli", "qiskit.circuit.QuantumCircuit.u", "qiskit.circuit.QuantumCircuit.u1", "qiskit.circuit.QuantumCircuit.u2", "qiskit.circuit.QuantumCircuit.u3", "qiskit.circuit.QuantumCircuit.uc", "qiskit.circuit.QuantumCircuit.ucrx", "qiskit.circuit.QuantumCircuit.ucry", "qiskit.circuit.QuantumCircuit.ucrz", "qiskit.circuit.QuantumCircuit.unitary", "qiskit.circuit.QuantumCircuit.while_loop", "qiskit.circuit.QuantumCircuit.width", "qiskit.circuit.QuantumCircuit.x", "qiskit.circuit.QuantumCircuit.y", "qiskit.circuit.QuantumCircuit.z", "QuantumRegister", "qiskit.circuit.QuantumRegister.index", "qiskit.circuit.QuantumRegister.qasm", "Qubit", "WhileLoopOp", "qiskit.circuit.WhileLoopOp.add_decomposition", "qiskit.circuit.WhileLoopOp.assemble", "qiskit.circuit.WhileLoopOp.broadcast_arguments", "qiskit.circuit.WhileLoopOp.c_if", "qiskit.circuit.WhileLoopOp.copy", "qiskit.circuit.WhileLoopOp.inverse", "qiskit.circuit.WhileLoopOp.is_parameterized", "qiskit.circuit.WhileLoopOp.qasm", "qiskit.circuit.WhileLoopOp.repeat", "qiskit.circuit.WhileLoopOp.replace_blocks", "qiskit.circuit.WhileLoopOp.reverse_ops", "qiskit.circuit.WhileLoopOp.soft_compare", "qiskit.circuit.WhileLoopOp.validate_parameter", "BooleanExpression", "qiskit.circuit.classicalfunction.BooleanExpression.add_decomposition", "qiskit.circuit.classicalfunction.BooleanExpression.assemble", "qiskit.circuit.classicalfunction.BooleanExpression.broadcast_arguments", "qiskit.circuit.classicalfunction.BooleanExpression.c_if", "qiskit.circuit.classicalfunction.BooleanExpression.control", "qiskit.circuit.classicalfunction.BooleanExpression.copy", "qiskit.circuit.classicalfunction.BooleanExpression.from_dimacs_file", "qiskit.circuit.classicalfunction.BooleanExpression.inverse", "qiskit.circuit.classicalfunction.BooleanExpression.is_parameterized", "qiskit.circuit.classicalfunction.BooleanExpression.power", "qiskit.circuit.classicalfunction.BooleanExpression.qasm", "qiskit.circuit.classicalfunction.BooleanExpression.repeat", "qiskit.circuit.classicalfunction.BooleanExpression.reverse_ops", "qiskit.circuit.classicalfunction.BooleanExpression.simulate", "qiskit.circuit.classicalfunction.BooleanExpression.soft_compare", "qiskit.circuit.classicalfunction.BooleanExpression.synth", "qiskit.circuit.classicalfunction.BooleanExpression.to_matrix", "qiskit.circuit.classicalfunction.BooleanExpression.validate_parameter", "ClassicalFunction", "qiskit.circuit.classicalfunction.ClassicalFunction.add_decomposition", "qiskit.circuit.classicalfunction.ClassicalFunction.assemble", "qiskit.circuit.classicalfunction.ClassicalFunction.broadcast_arguments", "qiskit.circuit.classicalfunction.ClassicalFunction.c_if", "qiskit.circuit.classicalfunction.ClassicalFunction.compile", "qiskit.circuit.classicalfunction.ClassicalFunction.control", "qiskit.circuit.classicalfunction.ClassicalFunction.copy", "qiskit.circuit.classicalfunction.ClassicalFunction.inverse", "qiskit.circuit.classicalfunction.ClassicalFunction.is_parameterized", "qiskit.circuit.classicalfunction.ClassicalFunction.power", "qiskit.circuit.classicalfunction.ClassicalFunction.qasm", "qiskit.circuit.classicalfunction.ClassicalFunction.repeat", "qiskit.circuit.classicalfunction.ClassicalFunction.reverse_ops", "qiskit.circuit.classicalfunction.ClassicalFunction.simulate", "qiskit.circuit.classicalfunction.ClassicalFunction.simulate_all", "qiskit.circuit.classicalfunction.ClassicalFunction.soft_compare", "qiskit.circuit.classicalfunction.ClassicalFunction.synth", "qiskit.circuit.classicalfunction.ClassicalFunction.to_matrix", "qiskit.circuit.classicalfunction.ClassicalFunction.validate_parameter", "qiskit.circuit.classicalfunction.ClassicalFunctionCompilerTypeError", "qiskit.circuit.classicalfunction.ClassicalFunctionParseError", "AND", "Barrier", "qiskit.circuit.library.Barrier.add_decomposition", "qiskit.circuit.library.Barrier.assemble", "qiskit.circuit.library.Barrier.broadcast_arguments", "qiskit.circuit.library.Barrier.c_if", "qiskit.circuit.library.Barrier.copy", "qiskit.circuit.library.Barrier.inverse", "qiskit.circuit.library.Barrier.is_parameterized", "qiskit.circuit.library.Barrier.qasm", "qiskit.circuit.library.Barrier.repeat", "qiskit.circuit.library.Barrier.reverse_ops", "qiskit.circuit.library.Barrier.soft_compare", "qiskit.circuit.library.Barrier.validate_parameter", "C3SXGate", "C3XGate", "qiskit.circuit.library.C3XGate.control", "qiskit.circuit.library.C3XGate.inverse", "C4XGate", "qiskit.circuit.library.C4XGate.control", "qiskit.circuit.library.C4XGate.inverse", "CCXGate", "qiskit.circuit.library.CCXGate.control", "qiskit.circuit.library.CCXGate.inverse", "CDKMRippleCarryAdder", "CHGate", "qiskit.circuit.library.CHGate.inverse", "CPhaseGate", "qiskit.circuit.library.CPhaseGate.control", "qiskit.circuit.library.CPhaseGate.inverse", "CRXGate", "qiskit.circuit.library.CRXGate.inverse", "CRYGate", "qiskit.circuit.library.CRYGate.inverse", "CRZGate", "qiskit.circuit.library.CRZGate.inverse", "CSXGate", "CSwapGate", "qiskit.circuit.library.CSwapGate.inverse", "CU1Gate", "qiskit.circuit.library.CU1Gate.control", "qiskit.circuit.library.CU1Gate.inverse", "CU3Gate", "qiskit.circuit.library.CU3Gate.inverse", "CUGate", "qiskit.circuit.library.CUGate.inverse", "CXGate", "qiskit.circuit.library.CXGate.control", "qiskit.circuit.library.CXGate.inverse", "CYGate", "qiskit.circuit.library.CYGate.inverse", "CZGate", "qiskit.circuit.library.CZGate.inverse", "DCXGate", "Diagonal", "DraperQFTAdder", "ECRGate", "qiskit.circuit.library.ECRGate.to_matrix", "EfficientSU2", "EvolvedOperatorAnsatz", "ExactReciprocal", "ExcitationPreserving", "FourierChecking", "FunctionalPauliRotations", "GMS", "GR", "GRX", "GRY", "GRZ", "GraphState", "GroverOperator", "HGate", "qiskit.circuit.library.HGate.control", "qiskit.circuit.library.HGate.inverse", "HRSCumulativeMultiplier", "HiddenLinearFunction", "IGate", "qiskit.circuit.library.IGate.inverse", "IQP", "InnerProduct", "IntegerComparator", "LinearAmplitudeFunction", "qiskit.circuit.library.LinearAmplitudeFunction.post_processing", "LinearFunction", "qiskit.circuit.library.LinearFunction.is_permutation", "qiskit.circuit.library.LinearFunction.permutation_pattern", "qiskit.circuit.library.LinearFunction.synthesize", "qiskit.circuit.library.LinearFunction.validate_parameter", "LinearPauliRotations", "MCMT", "qiskit.circuit.library.MCMT.control", "qiskit.circuit.library.MCMT.inverse", "MCMTVChain", "qiskit.circuit.library.MCMTVChain.inverse", "MCPhaseGate", "qiskit.circuit.library.MCPhaseGate.control", "qiskit.circuit.library.MCPhaseGate.inverse", "MCXGate", "qiskit.circuit.library.MCXGate.control", "qiskit.circuit.library.MCXGate.get_num_ancilla_qubits", "qiskit.circuit.library.MCXGate.inverse", "MCXGrayCode", "qiskit.circuit.library.MCXGrayCode.inverse", "MCXRecursive", "qiskit.circuit.library.MCXRecursive.get_num_ancilla_qubits", "qiskit.circuit.library.MCXRecursive.inverse", "MCXVChain", "qiskit.circuit.library.MCXVChain.get_num_ancilla_qubits", "qiskit.circuit.library.MCXVChain.inverse", "MSGate", "Measure", "qiskit.circuit.library.Measure.add_decomposition", "qiskit.circuit.library.Measure.assemble", "qiskit.circuit.library.Measure.broadcast_arguments", "qiskit.circuit.library.Measure.c_if", "qiskit.circuit.library.Measure.copy", "qiskit.circuit.library.Measure.inverse", "qiskit.circuit.library.Measure.is_parameterized", "qiskit.circuit.library.Measure.qasm", "qiskit.circuit.library.Measure.repeat", "qiskit.circuit.library.Measure.reverse_ops", "qiskit.circuit.library.Measure.soft_compare", "qiskit.circuit.library.Measure.validate_parameter", "NLocal", "qiskit.circuit.library.NLocal.add_layer", "qiskit.circuit.library.NLocal.assign_parameters", "qiskit.circuit.library.NLocal.get_entangler_map", "qiskit.circuit.library.NLocal.get_unentangled_qubits", "qiskit.circuit.library.NLocal.print_settings", "OR", "PauliEvolutionGate", "qiskit.circuit.library.PauliEvolutionGate.validate_parameter", "PauliFeatureMap", "qiskit.circuit.library.PauliFeatureMap.pauli_block", "qiskit.circuit.library.PauliFeatureMap.pauli_evolution", "PauliGate", "qiskit.circuit.library.PauliGate.inverse", "qiskit.circuit.library.PauliGate.validate_parameter", "PauliTwoDesign", "Permutation", "PhaseEstimation", "PhaseGate", "qiskit.circuit.library.PhaseGate.control", "qiskit.circuit.library.PhaseGate.inverse", "PhaseOracle", "qiskit.circuit.library.PhaseOracle.evaluate_bitstring", "qiskit.circuit.library.PhaseOracle.from_dimacs_file", "PiecewiseChebyshev", "PiecewiseLinearPauliRotations", "qiskit.circuit.library.PiecewiseLinearPauliRotations.evaluate", "PiecewisePolynomialPauliRotations", "qiskit.circuit.library.PiecewisePolynomialPauliRotations.evaluate", "PolynomialPauliRotations", "QAOAAnsatz", "QFT", "qiskit.circuit.library.QFT.inverse", "qiskit.circuit.library.QFT.is_inverse", "QuadraticForm", "qiskit.circuit.library.QuadraticForm.required_result_qubits", "QuantumVolume", "RC3XGate", "RCCXGate", "RGQFTMultiplier", "RGate", "qiskit.circuit.library.RGate.inverse", "RVGate", "qiskit.circuit.library.RVGate.inverse", "qiskit.circuit.library.RVGate.to_matrix", "RXGate", "qiskit.circuit.library.RXGate.control", "qiskit.circuit.library.RXGate.inverse", "RXXGate", "qiskit.circuit.library.RXXGate.inverse", "RYGate", "qiskit.circuit.library.RYGate.control", "qiskit.circuit.library.RYGate.inverse", "RYYGate", "qiskit.circuit.library.RYYGate.inverse", "RZGate", "qiskit.circuit.library.RZGate.control", "qiskit.circuit.library.RZGate.inverse", "RZXGate", "qiskit.circuit.library.RZXGate.inverse", "RZZGate", "qiskit.circuit.library.RZZGate.inverse", "RealAmplitudes", "Reset", "qiskit.circuit.library.Reset.add_decomposition", "qiskit.circuit.library.Reset.assemble", "qiskit.circuit.library.Reset.broadcast_arguments", "qiskit.circuit.library.Reset.c_if", "qiskit.circuit.library.Reset.copy", "qiskit.circuit.library.Reset.inverse", "qiskit.circuit.library.Reset.is_parameterized", "qiskit.circuit.library.Reset.qasm", "qiskit.circuit.library.Reset.repeat", "qiskit.circuit.library.Reset.reverse_ops", "qiskit.circuit.library.Reset.soft_compare", "qiskit.circuit.library.Reset.validate_parameter", "SGate", "qiskit.circuit.library.SGate.inverse", "SXGate", "qiskit.circuit.library.SXGate.control", "qiskit.circuit.library.SXGate.inverse", "SXdgGate", "qiskit.circuit.library.SXdgGate.inverse", "SdgGate", "qiskit.circuit.library.SdgGate.inverse", "StatePreparation", "qiskit.circuit.library.StatePreparation.broadcast_arguments", "qiskit.circuit.library.StatePreparation.inverse", "qiskit.circuit.library.StatePreparation.validate_parameter", "SwapGate", "qiskit.circuit.library.SwapGate.control", "qiskit.circuit.library.SwapGate.inverse", "TGate", "qiskit.circuit.library.TGate.inverse", "TdgGate", "qiskit.circuit.library.TdgGate.inverse", "TwoLocal", "qiskit.circuit.library.TwoLocal.get_entangler_map", "U1Gate", "qiskit.circuit.library.U1Gate.control", "qiskit.circuit.library.U1Gate.inverse", "U2Gate", "qiskit.circuit.library.U2Gate.inverse", "U3Gate", "qiskit.circuit.library.U3Gate.control", "qiskit.circuit.library.U3Gate.inverse", "UGate", "qiskit.circuit.library.UGate.control", "qiskit.circuit.library.UGate.inverse", "VBERippleCarryAdder", "WeightedAdder", "XGate", "qiskit.circuit.library.XGate.control", "qiskit.circuit.library.XGate.inverse", "XOR", "XXMinusYYGate", "qiskit.circuit.library.XXMinusYYGate.inverse", "XXPlusYYGate", "qiskit.circuit.library.XXPlusYYGate.inverse", "YGate", "qiskit.circuit.library.YGate.control", "qiskit.circuit.library.YGate.inverse", "ZFeatureMap", "ZGate", "qiskit.circuit.library.ZGate.control", "qiskit.circuit.library.ZGate.inverse", "ZZFeatureMap", "qiskit.circuit.library.clifford_2_1", "qiskit.circuit.library.clifford_2_2", "qiskit.circuit.library.clifford_2_3", "qiskit.circuit.library.clifford_2_4", "qiskit.circuit.library.clifford_3_1", "qiskit.circuit.library.clifford_4_1", "qiskit.circuit.library.clifford_4_2", "qiskit.circuit.library.clifford_4_3", "qiskit.circuit.library.clifford_4_4", "qiskit.circuit.library.clifford_5_1", "qiskit.circuit.library.clifford_6_1", "qiskit.circuit.library.clifford_6_2", "qiskit.circuit.library.clifford_6_3", "qiskit.circuit.library.clifford_6_4", "qiskit.circuit.library.clifford_6_5", "qiskit.circuit.library.clifford_8_1", "qiskit.circuit.library.clifford_8_2", "qiskit.circuit.library.clifford_8_3", "iSwapGate", "qiskit.circuit.library.rzx_cy", "qiskit.circuit.library.rzx_xz", "qiskit.circuit.library.rzx_yz", "qiskit.circuit.library.rzx_zz1", "qiskit.circuit.library.rzx_zz2", "qiskit.circuit.library.rzx_zz3", "qiskit.circuit.library.templates.nct.template_nct_2a_1", "qiskit.circuit.library.templates.nct.template_nct_2a_2", "qiskit.circuit.library.templates.nct.template_nct_2a_3", "qiskit.circuit.library.templates.nct.template_nct_4a_1", "qiskit.circuit.library.templates.nct.template_nct_4a_2", "qiskit.circuit.library.templates.nct.template_nct_4a_3", "qiskit.circuit.library.templates.nct.template_nct_4b_1", "qiskit.circuit.library.templates.nct.template_nct_4b_2", "qiskit.circuit.library.templates.nct.template_nct_5a_1", "qiskit.circuit.library.templates.nct.template_nct_5a_2", "qiskit.circuit.library.templates.nct.template_nct_5a_3", "qiskit.circuit.library.templates.nct.template_nct_5a_4", "qiskit.circuit.library.templates.nct.template_nct_6a_1", "qiskit.circuit.library.templates.nct.template_nct_6a_2", "qiskit.circuit.library.templates.nct.template_nct_6a_3", "qiskit.circuit.library.templates.nct.template_nct_6a_4", "qiskit.circuit.library.templates.nct.template_nct_6b_1", "qiskit.circuit.library.templates.nct.template_nct_6b_2", "qiskit.circuit.library.templates.nct.template_nct_6c_1", "qiskit.circuit.library.templates.nct.template_nct_7a_1", "qiskit.circuit.library.templates.nct.template_nct_7b_1", "qiskit.circuit.library.templates.nct.template_nct_7c_1", "qiskit.circuit.library.templates.nct.template_nct_7d_1", "qiskit.circuit.library.templates.nct.template_nct_7e_1", "qiskit.circuit.library.templates.nct.template_nct_9a_1", "qiskit.circuit.library.templates.nct.template_nct_9c_1", "qiskit.circuit.library.templates.nct.template_nct_9c_10", "qiskit.circuit.library.templates.nct.template_nct_9c_11", "qiskit.circuit.library.templates.nct.template_nct_9c_12", "qiskit.circuit.library.templates.nct.template_nct_9c_2", "qiskit.circuit.library.templates.nct.template_nct_9c_3", "qiskit.circuit.library.templates.nct.template_nct_9c_4", "qiskit.circuit.library.templates.nct.template_nct_9c_5", "qiskit.circuit.library.templates.nct.template_nct_9c_6", "qiskit.circuit.library.templates.nct.template_nct_9c_7", "qiskit.circuit.library.templates.nct.template_nct_9c_8", "qiskit.circuit.library.templates.nct.template_nct_9c_9", "qiskit.circuit.library.templates.nct.template_nct_9d_1", "qiskit.circuit.library.templates.nct.template_nct_9d_10", "qiskit.circuit.library.templates.nct.template_nct_9d_2", "qiskit.circuit.library.templates.nct.template_nct_9d_3", "qiskit.circuit.library.templates.nct.template_nct_9d_4", "qiskit.circuit.library.templates.nct.template_nct_9d_5", "qiskit.circuit.library.templates.nct.template_nct_9d_6", "qiskit.circuit.library.templates.nct.template_nct_9d_7", "qiskit.circuit.library.templates.nct.template_nct_9d_8", "qiskit.circuit.library.templates.nct.template_nct_9d_9", "qiskit.circuit.random.random_circuit", "qiskit.compiler.assemble", "qiskit.compiler.schedule", "qiskit.compiler.sequence", "qiskit.compiler.transpile", "qiskit.converters.ast_to_dag", "qiskit.converters.circuit_to_dag", "qiskit.converters.circuit_to_dagdependency", "qiskit.converters.circuit_to_gate", "qiskit.converters.circuit_to_instruction", "qiskit.converters.dag_to_circuit", "qiskit.converters.dag_to_dagdependency", "qiskit.converters.dagdependency_to_circuit", "qiskit.converters.dagdependency_to_dag", "DAGCircuit", "qiskit.dagcircuit.DAGCircuit.add_calibration", "qiskit.dagcircuit.DAGCircuit.add_clbits", "qiskit.dagcircuit.DAGCircuit.add_creg", "qiskit.dagcircuit.DAGCircuit.add_qreg", "qiskit.dagcircuit.DAGCircuit.add_qubits", "qiskit.dagcircuit.DAGCircuit.ancestors", "qiskit.dagcircuit.DAGCircuit.apply_operation_back", "qiskit.dagcircuit.DAGCircuit.apply_operation_front", "qiskit.dagcircuit.DAGCircuit.bfs_successors", "qiskit.dagcircuit.DAGCircuit.collect_1q_runs", "qiskit.dagcircuit.DAGCircuit.collect_2q_runs", "qiskit.dagcircuit.DAGCircuit.collect_runs", "qiskit.dagcircuit.DAGCircuit.compose", "qiskit.dagcircuit.DAGCircuit.copy_empty_like", "qiskit.dagcircuit.DAGCircuit.count_ops", "qiskit.dagcircuit.DAGCircuit.count_ops_longest_path", "qiskit.dagcircuit.DAGCircuit.depth", "qiskit.dagcircuit.DAGCircuit.descendants", "qiskit.dagcircuit.DAGCircuit.draw", "qiskit.dagcircuit.DAGCircuit.edges", "qiskit.dagcircuit.DAGCircuit.from_networkx", "qiskit.dagcircuit.DAGCircuit.front_layer", "qiskit.dagcircuit.DAGCircuit.gate_nodes", "qiskit.dagcircuit.DAGCircuit.has_calibration_for", "qiskit.dagcircuit.DAGCircuit.idle_wires", "qiskit.dagcircuit.DAGCircuit.is_predecessor", "qiskit.dagcircuit.DAGCircuit.is_successor", "qiskit.dagcircuit.DAGCircuit.layers", "qiskit.dagcircuit.DAGCircuit.longest_path", "qiskit.dagcircuit.DAGCircuit.multi_qubit_ops", "qiskit.dagcircuit.DAGCircuit.multigraph_layers", "qiskit.dagcircuit.DAGCircuit.named_nodes", "qiskit.dagcircuit.DAGCircuit.node", "qiskit.dagcircuit.DAGCircuit.nodes", "qiskit.dagcircuit.DAGCircuit.nodes_on_wire", "qiskit.dagcircuit.DAGCircuit.num_clbits", "qiskit.dagcircuit.DAGCircuit.num_qubits", "qiskit.dagcircuit.DAGCircuit.num_tensor_factors", "qiskit.dagcircuit.DAGCircuit.op_nodes", "qiskit.dagcircuit.DAGCircuit.predecessors", "qiskit.dagcircuit.DAGCircuit.properties", "qiskit.dagcircuit.DAGCircuit.quantum_predecessors", "qiskit.dagcircuit.DAGCircuit.quantum_successors", "qiskit.dagcircuit.DAGCircuit.remove_all_ops_named", "qiskit.dagcircuit.DAGCircuit.remove_ancestors_of", "qiskit.dagcircuit.DAGCircuit.remove_clbits", "qiskit.dagcircuit.DAGCircuit.remove_cregs", "qiskit.dagcircuit.DAGCircuit.remove_descendants_of", "qiskit.dagcircuit.DAGCircuit.remove_nonancestors_of", "qiskit.dagcircuit.DAGCircuit.remove_nondescendants_of", "qiskit.dagcircuit.DAGCircuit.remove_op_node", "qiskit.dagcircuit.DAGCircuit.replace_block_with_op", "qiskit.dagcircuit.DAGCircuit.reverse_ops", "qiskit.dagcircuit.DAGCircuit.serial_layers", "qiskit.dagcircuit.DAGCircuit.size", "qiskit.dagcircuit.DAGCircuit.substitute_node", "qiskit.dagcircuit.DAGCircuit.substitute_node_with_dag", "qiskit.dagcircuit.DAGCircuit.successors", "qiskit.dagcircuit.DAGCircuit.to_networkx", "qiskit.dagcircuit.DAGCircuit.topological_nodes", "qiskit.dagcircuit.DAGCircuit.topological_op_nodes", "qiskit.dagcircuit.DAGCircuit.two_qubit_ops", "qiskit.dagcircuit.DAGCircuit.width", "qiskit.dagcircuit.DAGCircuitError", "DAGDepNode", "qiskit.dagcircuit.DAGDepNode.copy", "qiskit.dagcircuit.DAGDepNode.semantic_eq", "DAGDependency", "qiskit.dagcircuit.DAGDependency.add_clbits", "qiskit.dagcircuit.DAGDependency.add_creg", "qiskit.dagcircuit.DAGDependency.add_op_node", "qiskit.dagcircuit.DAGDependency.add_qreg", "qiskit.dagcircuit.DAGDependency.add_qubits", "qiskit.dagcircuit.DAGDependency.copy", "qiskit.dagcircuit.DAGDependency.depth", "qiskit.dagcircuit.DAGDependency.direct_predecessors", "qiskit.dagcircuit.DAGDependency.direct_successors", "qiskit.dagcircuit.DAGDependency.draw", "qiskit.dagcircuit.DAGDependency.get_all_edges", "qiskit.dagcircuit.DAGDependency.get_edges", "qiskit.dagcircuit.DAGDependency.get_in_edges", "qiskit.dagcircuit.DAGDependency.get_node", "qiskit.dagcircuit.DAGDependency.get_nodes", "qiskit.dagcircuit.DAGDependency.get_out_edges", "qiskit.dagcircuit.DAGDependency.predecessors", "qiskit.dagcircuit.DAGDependency.size", "qiskit.dagcircuit.DAGDependency.successors", "qiskit.dagcircuit.DAGDependency.to_networkx", "qiskit.dagcircuit.DAGDependency.to_retworkx", "qiskit.dagcircuit.DAGDependency.topological_nodes", "DAGInNode", "qiskit.dagcircuit.DAGInNode.semantic_eq", "DAGNode", "qiskit.dagcircuit.DAGNode.semantic_eq", "DAGOpNode", "qiskit.dagcircuit.DAGOpNode.semantic_eq", "DAGOutNode", "qiskit.dagcircuit.DAGOutNode.semantic_eq", "HamiltonianGate", "qiskit.extensions.HamiltonianGate.add_decomposition", "qiskit.extensions.HamiltonianGate.adjoint", "qiskit.extensions.HamiltonianGate.assemble", "qiskit.extensions.HamiltonianGate.broadcast_arguments", "qiskit.extensions.HamiltonianGate.c_if", "qiskit.extensions.HamiltonianGate.conjugate", "qiskit.extensions.HamiltonianGate.control", "qiskit.extensions.HamiltonianGate.copy", "qiskit.extensions.HamiltonianGate.inverse", "qiskit.extensions.HamiltonianGate.is_parameterized", "qiskit.extensions.HamiltonianGate.power", "qiskit.extensions.HamiltonianGate.qasm", "qiskit.extensions.HamiltonianGate.repeat", "qiskit.extensions.HamiltonianGate.reverse_ops", "qiskit.extensions.HamiltonianGate.soft_compare", "qiskit.extensions.HamiltonianGate.to_matrix", "qiskit.extensions.HamiltonianGate.transpose", "qiskit.extensions.HamiltonianGate.validate_parameter", "Initialize", "qiskit.extensions.Initialize.add_decomposition", "qiskit.extensions.Initialize.assemble", "qiskit.extensions.Initialize.broadcast_arguments", "qiskit.extensions.Initialize.c_if", "qiskit.extensions.Initialize.copy", "qiskit.extensions.Initialize.gates_to_uncompute", "qiskit.extensions.Initialize.inverse", "qiskit.extensions.Initialize.is_parameterized", "qiskit.extensions.Initialize.qasm", "qiskit.extensions.Initialize.repeat", "qiskit.extensions.Initialize.reverse_ops", "qiskit.extensions.Initialize.soft_compare", "qiskit.extensions.Initialize.validate_parameter", "SingleQubitUnitary", "qiskit.extensions.SingleQubitUnitary.add_decomposition", "qiskit.extensions.SingleQubitUnitary.assemble", "qiskit.extensions.SingleQubitUnitary.broadcast_arguments", "qiskit.extensions.SingleQubitUnitary.c_if", "qiskit.extensions.SingleQubitUnitary.control", "qiskit.extensions.SingleQubitUnitary.copy", "qiskit.extensions.SingleQubitUnitary.inverse", "qiskit.extensions.SingleQubitUnitary.is_parameterized", "qiskit.extensions.SingleQubitUnitary.power", "qiskit.extensions.SingleQubitUnitary.qasm", "qiskit.extensions.SingleQubitUnitary.repeat", "qiskit.extensions.SingleQubitUnitary.reverse_ops", "qiskit.extensions.SingleQubitUnitary.soft_compare", "qiskit.extensions.SingleQubitUnitary.to_matrix", "qiskit.extensions.SingleQubitUnitary.validate_parameter", "Snapshot", "qiskit.extensions.Snapshot.add_decomposition", "qiskit.extensions.Snapshot.assemble", "qiskit.extensions.Snapshot.broadcast_arguments", "qiskit.extensions.Snapshot.c_if", "qiskit.extensions.Snapshot.copy", "qiskit.extensions.Snapshot.inverse", "qiskit.extensions.Snapshot.is_parameterized", "qiskit.extensions.Snapshot.qasm", "qiskit.extensions.Snapshot.repeat", "qiskit.extensions.Snapshot.reverse_ops", "qiskit.extensions.Snapshot.soft_compare", "qiskit.extensions.Snapshot.validate_parameter", "UCPauliRotGate", "qiskit.extensions.UCPauliRotGate.add_decomposition", "qiskit.extensions.UCPauliRotGate.assemble", "qiskit.extensions.UCPauliRotGate.broadcast_arguments", "qiskit.extensions.UCPauliRotGate.c_if", "qiskit.extensions.UCPauliRotGate.control", "qiskit.extensions.UCPauliRotGate.copy", "qiskit.extensions.UCPauliRotGate.inverse", "qiskit.extensions.UCPauliRotGate.is_parameterized", "qiskit.extensions.UCPauliRotGate.power", "qiskit.extensions.UCPauliRotGate.qasm", "qiskit.extensions.UCPauliRotGate.repeat", "qiskit.extensions.UCPauliRotGate.reverse_ops", "qiskit.extensions.UCPauliRotGate.soft_compare", "qiskit.extensions.UCPauliRotGate.to_matrix", "qiskit.extensions.UCPauliRotGate.validate_parameter", "UCRXGate", "qiskit.extensions.UCRXGate.add_decomposition", "qiskit.extensions.UCRXGate.assemble", "qiskit.extensions.UCRXGate.broadcast_arguments", "qiskit.extensions.UCRXGate.c_if", "qiskit.extensions.UCRXGate.control", "qiskit.extensions.UCRXGate.copy", "qiskit.extensions.UCRXGate.inverse", "qiskit.extensions.UCRXGate.is_parameterized", "qiskit.extensions.UCRXGate.power", "qiskit.extensions.UCRXGate.qasm", "qiskit.extensions.UCRXGate.repeat", "qiskit.extensions.UCRXGate.reverse_ops", "qiskit.extensions.UCRXGate.soft_compare", "qiskit.extensions.UCRXGate.to_matrix", "qiskit.extensions.UCRXGate.validate_parameter", "UCRYGate", "qiskit.extensions.UCRYGate.add_decomposition", "qiskit.extensions.UCRYGate.assemble", "qiskit.extensions.UCRYGate.broadcast_arguments", "qiskit.extensions.UCRYGate.c_if", "qiskit.extensions.UCRYGate.control", "qiskit.extensions.UCRYGate.copy", "qiskit.extensions.UCRYGate.inverse", "qiskit.extensions.UCRYGate.is_parameterized", "qiskit.extensions.UCRYGate.power", "qiskit.extensions.UCRYGate.qasm", "qiskit.extensions.UCRYGate.repeat", "qiskit.extensions.UCRYGate.reverse_ops", "qiskit.extensions.UCRYGate.soft_compare", "qiskit.extensions.UCRYGate.to_matrix", "qiskit.extensions.UCRYGate.validate_parameter", "UCRZGate", "qiskit.extensions.UCRZGate.add_decomposition", "qiskit.extensions.UCRZGate.assemble", "qiskit.extensions.UCRZGate.broadcast_arguments", "qiskit.extensions.UCRZGate.c_if", "qiskit.extensions.UCRZGate.control", "qiskit.extensions.UCRZGate.copy", "qiskit.extensions.UCRZGate.inverse", "qiskit.extensions.UCRZGate.is_parameterized", "qiskit.extensions.UCRZGate.power", "qiskit.extensions.UCRZGate.qasm", "qiskit.extensions.UCRZGate.repeat", "qiskit.extensions.UCRZGate.reverse_ops", "qiskit.extensions.UCRZGate.soft_compare", "qiskit.extensions.UCRZGate.to_matrix", "qiskit.extensions.UCRZGate.validate_parameter", "UnitaryGate", "qiskit.extensions.UnitaryGate.add_decomposition", "qiskit.extensions.UnitaryGate.adjoint", "qiskit.extensions.UnitaryGate.assemble", "qiskit.extensions.UnitaryGate.broadcast_arguments", "qiskit.extensions.UnitaryGate.c_if", "qiskit.extensions.UnitaryGate.conjugate", "qiskit.extensions.UnitaryGate.control", "qiskit.extensions.UnitaryGate.copy", "qiskit.extensions.UnitaryGate.inverse", "qiskit.extensions.UnitaryGate.is_parameterized", "qiskit.extensions.UnitaryGate.power", "qiskit.extensions.UnitaryGate.qasm", "qiskit.extensions.UnitaryGate.repeat", "qiskit.extensions.UnitaryGate.reverse_ops", "qiskit.extensions.UnitaryGate.soft_compare", "qiskit.extensions.UnitaryGate.to_matrix", "qiskit.extensions.UnitaryGate.transpose", "qiskit.extensions.UnitaryGate.validate_parameter", "OperatorBase", "qiskit.opflow.OperatorBase.add", "qiskit.opflow.OperatorBase.adjoint", "qiskit.opflow.OperatorBase.assign_parameters", "qiskit.opflow.OperatorBase.bind_parameters", "qiskit.opflow.OperatorBase.compose", "qiskit.opflow.OperatorBase.copy", "qiskit.opflow.OperatorBase.equals", "qiskit.opflow.OperatorBase.eval", "qiskit.opflow.OperatorBase.is_hermitian", "qiskit.opflow.OperatorBase.mul", "qiskit.opflow.OperatorBase.neg", "qiskit.opflow.OperatorBase.permute", "qiskit.opflow.OperatorBase.primitive_strings", "qiskit.opflow.OperatorBase.reduce", "qiskit.opflow.OperatorBase.tensor", "qiskit.opflow.OperatorBase.tensorpower", "qiskit.opflow.OperatorBase.to_circuit_op", "qiskit.opflow.OperatorBase.to_matrix", "qiskit.opflow.OperatorBase.to_matrix_op", "qiskit.opflow.OperatorBase.to_spmatrix", "qiskit.opflow.OpflowError", "qiskit.opflow.anti_commutator", "qiskit.opflow.commutator", "qiskit.opflow.converters", "AbelianGrouper", "qiskit.opflow.converters.AbelianGrouper.convert", "qiskit.opflow.converters.AbelianGrouper.group_subops", "CircuitSampler", "qiskit.opflow.converters.CircuitSampler.clear_cache", "qiskit.opflow.converters.CircuitSampler.convert", "qiskit.opflow.converters.CircuitSampler.sample_circuits", "ConverterBase", "qiskit.opflow.converters.ConverterBase.convert", "DictToCircuitSum", "qiskit.opflow.converters.DictToCircuitSum.convert", "PauliBasisChange", "qiskit.opflow.converters.PauliBasisChange.construct_cnot_chain", "qiskit.opflow.converters.PauliBasisChange.convert", "qiskit.opflow.converters.PauliBasisChange.get_cob_circuit", "qiskit.opflow.converters.PauliBasisChange.get_diagonal_pauli_op", "qiskit.opflow.converters.PauliBasisChange.get_diagonalizing_clifford", "qiskit.opflow.converters.PauliBasisChange.get_tpb_pauli", "qiskit.opflow.converters.PauliBasisChange.measurement_replacement_fn", "qiskit.opflow.converters.PauliBasisChange.operator_replacement_fn", "qiskit.opflow.converters.PauliBasisChange.pad_paulis_to_equal_length", "qiskit.opflow.converters.PauliBasisChange.statefn_replacement_fn", "TwoQubitReduction", "qiskit.opflow.converters.TwoQubitReduction.convert", "qiskit.opflow.double_commutator", "qiskit.opflow.evolutions", "EvolutionBase", "qiskit.opflow.evolutions.EvolutionBase.convert", "EvolutionFactory", "qiskit.opflow.evolutions.EvolutionFactory.build", "EvolvedOp", "qiskit.opflow.evolutions.EvolvedOp.add", "qiskit.opflow.evolutions.EvolvedOp.adjoint", "qiskit.opflow.evolutions.EvolvedOp.assign_parameters", "qiskit.opflow.evolutions.EvolvedOp.compose", "qiskit.opflow.evolutions.EvolvedOp.equals", "qiskit.opflow.evolutions.EvolvedOp.eval", "qiskit.opflow.evolutions.EvolvedOp.log_i", "qiskit.opflow.evolutions.EvolvedOp.permute", "qiskit.opflow.evolutions.EvolvedOp.primitive_strings", "qiskit.opflow.evolutions.EvolvedOp.reduce", "qiskit.opflow.evolutions.EvolvedOp.tensor", "qiskit.opflow.evolutions.EvolvedOp.to_instruction", "qiskit.opflow.evolutions.EvolvedOp.to_matrix", "qiskit.opflow.evolutions.EvolvedOp.to_matrix_op", "MatrixEvolution", "qiskit.opflow.evolutions.MatrixEvolution.convert", "PauliTrotterEvolution", "qiskit.opflow.evolutions.PauliTrotterEvolution.convert", "qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_abelian_paulisum", "qiskit.opflow.evolutions.PauliTrotterEvolution.evolution_for_pauli", "QDrift", "qiskit.opflow.evolutions.QDrift.convert", "Suzuki", "qiskit.opflow.evolutions.Suzuki.convert", "Trotter", "TrotterizationBase", "qiskit.opflow.evolutions.TrotterizationBase.convert", "TrotterizationFactory", "qiskit.opflow.evolutions.TrotterizationFactory.build", "qiskit.opflow.expectations", "AerPauliExpectation", "qiskit.opflow.expectations.AerPauliExpectation.compute_variance", "qiskit.opflow.expectations.AerPauliExpectation.convert", "CVaRExpectation", "qiskit.opflow.expectations.CVaRExpectation.compute_variance", "qiskit.opflow.expectations.CVaRExpectation.convert", "ExpectationBase", "qiskit.opflow.expectations.ExpectationBase.compute_variance", "qiskit.opflow.expectations.ExpectationBase.convert", "ExpectationFactory", "qiskit.opflow.expectations.ExpectationFactory.build", "MatrixExpectation", "qiskit.opflow.expectations.MatrixExpectation.compute_variance", "qiskit.opflow.expectations.MatrixExpectation.convert", "PauliExpectation", "qiskit.opflow.expectations.PauliExpectation.compute_variance", "qiskit.opflow.expectations.PauliExpectation.convert", "qiskit.opflow.gradients", "CircuitGradient", "qiskit.opflow.gradients.CircuitGradient.convert", "CircuitQFI", "qiskit.opflow.gradients.CircuitQFI.convert", "DerivativeBase", "qiskit.opflow.gradients.DerivativeBase.convert", "qiskit.opflow.gradients.DerivativeBase.gradient_wrapper", "qiskit.opflow.gradients.DerivativeBase.parameter_expression_grad", "Gradient", "qiskit.opflow.gradients.Gradient.convert", "qiskit.opflow.gradients.Gradient.get_gradient", "GradientBase", "Hessian", "qiskit.opflow.gradients.Hessian.convert", "qiskit.opflow.gradients.Hessian.get_hessian", "HessianBase", "NaturalGradient", "qiskit.opflow.gradients.NaturalGradient.convert", "qiskit.opflow.gradients.NaturalGradient.nat_grad_combo_fn", "QFI", "qiskit.opflow.gradients.QFI.convert", "QFIBase", "qiskit.opflow.list_ops", "ComposedOp", "qiskit.opflow.list_ops.ComposedOp.adjoint", "qiskit.opflow.list_ops.ComposedOp.compose", "qiskit.opflow.list_ops.ComposedOp.eval", "qiskit.opflow.list_ops.ComposedOp.non_distributive_reduce", "qiskit.opflow.list_ops.ComposedOp.reduce", "qiskit.opflow.list_ops.ComposedOp.to_circuit", "ListOp", "qiskit.opflow.list_ops.ListOp.add", "qiskit.opflow.list_ops.ListOp.adjoint", "qiskit.opflow.list_ops.ListOp.assign_parameters", "qiskit.opflow.list_ops.ListOp.compose", "qiskit.opflow.list_ops.ListOp.default_combo_fn", "qiskit.opflow.list_ops.ListOp.equals", "qiskit.opflow.list_ops.ListOp.eval", "qiskit.opflow.list_ops.ListOp.exp_i", "qiskit.opflow.list_ops.ListOp.log_i", "qiskit.opflow.list_ops.ListOp.mul", "qiskit.opflow.list_ops.ListOp.permute", "qiskit.opflow.list_ops.ListOp.power", "qiskit.opflow.list_ops.ListOp.primitive_strings", "qiskit.opflow.list_ops.ListOp.reduce", "qiskit.opflow.list_ops.ListOp.tensor", "qiskit.opflow.list_ops.ListOp.tensorpower", "qiskit.opflow.list_ops.ListOp.to_circuit_op", "qiskit.opflow.list_ops.ListOp.to_matrix", "qiskit.opflow.list_ops.ListOp.to_matrix_op", "qiskit.opflow.list_ops.ListOp.to_pauli_op", "qiskit.opflow.list_ops.ListOp.to_spmatrix", "qiskit.opflow.list_ops.ListOp.traverse", "SummedOp", "qiskit.opflow.list_ops.SummedOp.add", "qiskit.opflow.list_ops.SummedOp.collapse_summands", "qiskit.opflow.list_ops.SummedOp.equals", "qiskit.opflow.list_ops.SummedOp.reduce", "qiskit.opflow.list_ops.SummedOp.to_circuit", "qiskit.opflow.list_ops.SummedOp.to_matrix_op", "qiskit.opflow.list_ops.SummedOp.to_pauli_op", "TensoredOp", "qiskit.opflow.list_ops.TensoredOp.eval", "qiskit.opflow.list_ops.TensoredOp.reduce", "qiskit.opflow.list_ops.TensoredOp.tensor", "qiskit.opflow.list_ops.TensoredOp.to_circuit", "qiskit.opflow.primitive_ops", "CircuitOp", "qiskit.opflow.primitive_ops.CircuitOp.add", "qiskit.opflow.primitive_ops.CircuitOp.adjoint", "qiskit.opflow.primitive_ops.CircuitOp.assign_parameters", "qiskit.opflow.primitive_ops.CircuitOp.compose", "qiskit.opflow.primitive_ops.CircuitOp.equals", "qiskit.opflow.primitive_ops.CircuitOp.eval", "qiskit.opflow.primitive_ops.CircuitOp.permute", "qiskit.opflow.primitive_ops.CircuitOp.primitive_strings", "qiskit.opflow.primitive_ops.CircuitOp.reduce", "qiskit.opflow.primitive_ops.CircuitOp.tensor", "qiskit.opflow.primitive_ops.CircuitOp.to_circuit", "qiskit.opflow.primitive_ops.CircuitOp.to_circuit_op", "qiskit.opflow.primitive_ops.CircuitOp.to_instruction", "qiskit.opflow.primitive_ops.CircuitOp.to_matrix", "MatrixOp", "qiskit.opflow.primitive_ops.MatrixOp.add", "qiskit.opflow.primitive_ops.MatrixOp.adjoint", "qiskit.opflow.primitive_ops.MatrixOp.compose", "qiskit.opflow.primitive_ops.MatrixOp.equals", "qiskit.opflow.primitive_ops.MatrixOp.eval", "qiskit.opflow.primitive_ops.MatrixOp.exp_i", "qiskit.opflow.primitive_ops.MatrixOp.permute", "qiskit.opflow.primitive_ops.MatrixOp.primitive_strings", "qiskit.opflow.primitive_ops.MatrixOp.tensor", "qiskit.opflow.primitive_ops.MatrixOp.to_instruction", "qiskit.opflow.primitive_ops.MatrixOp.to_matrix", "qiskit.opflow.primitive_ops.MatrixOp.to_matrix_op", "PauliOp", "qiskit.opflow.primitive_ops.PauliOp.add", "qiskit.opflow.primitive_ops.PauliOp.adjoint", "qiskit.opflow.primitive_ops.PauliOp.compose", "qiskit.opflow.primitive_ops.PauliOp.equals", "qiskit.opflow.primitive_ops.PauliOp.eval", "qiskit.opflow.primitive_ops.PauliOp.exp_i", "qiskit.opflow.primitive_ops.PauliOp.permute", "qiskit.opflow.primitive_ops.PauliOp.primitive_strings", "qiskit.opflow.primitive_ops.PauliOp.tensor", "qiskit.opflow.primitive_ops.PauliOp.to_circuit", "qiskit.opflow.primitive_ops.PauliOp.to_instruction", "qiskit.opflow.primitive_ops.PauliOp.to_matrix", "qiskit.opflow.primitive_ops.PauliOp.to_pauli_op", "qiskit.opflow.primitive_ops.PauliOp.to_spmatrix", "PauliSumOp", "qiskit.opflow.primitive_ops.PauliSumOp.add", "qiskit.opflow.primitive_ops.PauliSumOp.adjoint", "qiskit.opflow.primitive_ops.PauliSumOp.compose", "qiskit.opflow.primitive_ops.PauliSumOp.equals", "qiskit.opflow.primitive_ops.PauliSumOp.eval", "qiskit.opflow.primitive_ops.PauliSumOp.exp_i", "qiskit.opflow.primitive_ops.PauliSumOp.from_list", "qiskit.opflow.primitive_ops.PauliSumOp.is_hermitian", "qiskit.opflow.primitive_ops.PauliSumOp.is_zero", "qiskit.opflow.primitive_ops.PauliSumOp.matrix_iter", "qiskit.opflow.primitive_ops.PauliSumOp.mul", "qiskit.opflow.primitive_ops.PauliSumOp.permute", "qiskit.opflow.primitive_ops.PauliSumOp.primitive_strings", "qiskit.opflow.primitive_ops.PauliSumOp.reduce", "qiskit.opflow.primitive_ops.PauliSumOp.tensor", "qiskit.opflow.primitive_ops.PauliSumOp.to_instruction", "qiskit.opflow.primitive_ops.PauliSumOp.to_matrix", "qiskit.opflow.primitive_ops.PauliSumOp.to_pauli_op", "qiskit.opflow.primitive_ops.PauliSumOp.to_spmatrix", "PrimitiveOp", "qiskit.opflow.primitive_ops.PrimitiveOp.add", "qiskit.opflow.primitive_ops.PrimitiveOp.adjoint", "qiskit.opflow.primitive_ops.PrimitiveOp.assign_parameters", "qiskit.opflow.primitive_ops.PrimitiveOp.compose", "qiskit.opflow.primitive_ops.PrimitiveOp.equals", "qiskit.opflow.primitive_ops.PrimitiveOp.eval", "qiskit.opflow.primitive_ops.PrimitiveOp.exp_i", "qiskit.opflow.primitive_ops.PrimitiveOp.log_i", "qiskit.opflow.primitive_ops.PrimitiveOp.mul", "qiskit.opflow.primitive_ops.PrimitiveOp.permute", "qiskit.opflow.primitive_ops.PrimitiveOp.primitive_strings", "qiskit.opflow.primitive_ops.PrimitiveOp.reduce", "qiskit.opflow.primitive_ops.PrimitiveOp.tensor", "qiskit.opflow.primitive_ops.PrimitiveOp.tensorpower", "qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit", "qiskit.opflow.primitive_ops.PrimitiveOp.to_circuit_op", "qiskit.opflow.primitive_ops.PrimitiveOp.to_instruction", "qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix", "qiskit.opflow.primitive_ops.PrimitiveOp.to_matrix_op", "qiskit.opflow.primitive_ops.PrimitiveOp.to_pauli_op", "TaperedPauliSumOp", "qiskit.opflow.primitive_ops.TaperedPauliSumOp.assign_parameters", "Z2Symmetries", "qiskit.opflow.primitive_ops.Z2Symmetries.consistent_tapering", "qiskit.opflow.primitive_ops.Z2Symmetries.copy", "qiskit.opflow.primitive_ops.Z2Symmetries.find_Z2_symmetries", "qiskit.opflow.primitive_ops.Z2Symmetries.is_empty", "qiskit.opflow.primitive_ops.Z2Symmetries.taper", "qiskit.opflow.state_fns", "CVaRMeasurement", "qiskit.opflow.state_fns.CVaRMeasurement.add", "qiskit.opflow.state_fns.CVaRMeasurement.adjoint", "qiskit.opflow.state_fns.CVaRMeasurement.compute_cvar", "qiskit.opflow.state_fns.CVaRMeasurement.eval", "qiskit.opflow.state_fns.CVaRMeasurement.eval_variance", "qiskit.opflow.state_fns.CVaRMeasurement.get_outcome_energies_probabilities", "qiskit.opflow.state_fns.CVaRMeasurement.mul", "qiskit.opflow.state_fns.CVaRMeasurement.sample", "qiskit.opflow.state_fns.CVaRMeasurement.tensor", "qiskit.opflow.state_fns.CVaRMeasurement.to_circuit_op", "qiskit.opflow.state_fns.CVaRMeasurement.to_density_matrix", "qiskit.opflow.state_fns.CVaRMeasurement.to_matrix", "qiskit.opflow.state_fns.CVaRMeasurement.to_matrix_op", "qiskit.opflow.state_fns.CVaRMeasurement.traverse", "CircuitStateFn", "qiskit.opflow.state_fns.CircuitStateFn.add", "qiskit.opflow.state_fns.CircuitStateFn.adjoint", "qiskit.opflow.state_fns.CircuitStateFn.assign_parameters", "qiskit.opflow.state_fns.CircuitStateFn.compose", "qiskit.opflow.state_fns.CircuitStateFn.eval", "qiskit.opflow.state_fns.CircuitStateFn.from_dict", "qiskit.opflow.state_fns.CircuitStateFn.from_vector", "qiskit.opflow.state_fns.CircuitStateFn.permute", "qiskit.opflow.state_fns.CircuitStateFn.primitive_strings", "qiskit.opflow.state_fns.CircuitStateFn.reduce", "qiskit.opflow.state_fns.CircuitStateFn.sample", "qiskit.opflow.state_fns.CircuitStateFn.tensor", "qiskit.opflow.state_fns.CircuitStateFn.to_circuit", "qiskit.opflow.state_fns.CircuitStateFn.to_circuit_op", "qiskit.opflow.state_fns.CircuitStateFn.to_density_matrix", "qiskit.opflow.state_fns.CircuitStateFn.to_instruction", "qiskit.opflow.state_fns.CircuitStateFn.to_matrix", "DictStateFn", "qiskit.opflow.state_fns.DictStateFn.add", "qiskit.opflow.state_fns.DictStateFn.adjoint", "qiskit.opflow.state_fns.DictStateFn.eval", "qiskit.opflow.state_fns.DictStateFn.permute", "qiskit.opflow.state_fns.DictStateFn.primitive_strings", "qiskit.opflow.state_fns.DictStateFn.sample", "qiskit.opflow.state_fns.DictStateFn.tensor", "qiskit.opflow.state_fns.DictStateFn.to_circuit_op", "qiskit.opflow.state_fns.DictStateFn.to_density_matrix", "qiskit.opflow.state_fns.DictStateFn.to_matrix", "qiskit.opflow.state_fns.DictStateFn.to_spmatrix", "qiskit.opflow.state_fns.DictStateFn.to_spmatrix_op", "OperatorStateFn", "qiskit.opflow.state_fns.OperatorStateFn.add", "qiskit.opflow.state_fns.OperatorStateFn.adjoint", "qiskit.opflow.state_fns.OperatorStateFn.eval", "qiskit.opflow.state_fns.OperatorStateFn.permute", "qiskit.opflow.state_fns.OperatorStateFn.primitive_strings", "qiskit.opflow.state_fns.OperatorStateFn.sample", "qiskit.opflow.state_fns.OperatorStateFn.tensor", "qiskit.opflow.state_fns.OperatorStateFn.to_circuit_op", "qiskit.opflow.state_fns.OperatorStateFn.to_density_matrix", "qiskit.opflow.state_fns.OperatorStateFn.to_matrix", "qiskit.opflow.state_fns.OperatorStateFn.to_matrix_op", "SparseVectorStateFn", "qiskit.opflow.state_fns.SparseVectorStateFn.add", "qiskit.opflow.state_fns.SparseVectorStateFn.adjoint", "qiskit.opflow.state_fns.SparseVectorStateFn.equals", "qiskit.opflow.state_fns.SparseVectorStateFn.eval", "qiskit.opflow.state_fns.SparseVectorStateFn.primitive_strings", "qiskit.opflow.state_fns.SparseVectorStateFn.sample", "qiskit.opflow.state_fns.SparseVectorStateFn.to_circuit_op", "qiskit.opflow.state_fns.SparseVectorStateFn.to_dict_fn", "qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix", "qiskit.opflow.state_fns.SparseVectorStateFn.to_matrix_op", "qiskit.opflow.state_fns.SparseVectorStateFn.to_spmatrix", "StateFn", "qiskit.opflow.state_fns.StateFn.add", "qiskit.opflow.state_fns.StateFn.adjoint", "qiskit.opflow.state_fns.StateFn.assign_parameters", "qiskit.opflow.state_fns.StateFn.compose", "qiskit.opflow.state_fns.StateFn.equals", "qiskit.opflow.state_fns.StateFn.eval", "qiskit.opflow.state_fns.StateFn.mul", "qiskit.opflow.state_fns.StateFn.permute", "qiskit.opflow.state_fns.StateFn.power", "qiskit.opflow.state_fns.StateFn.primitive_strings", "qiskit.opflow.state_fns.StateFn.reduce", "qiskit.opflow.state_fns.StateFn.sample", "qiskit.opflow.state_fns.StateFn.tensor", "qiskit.opflow.state_fns.StateFn.tensorpower", "qiskit.opflow.state_fns.StateFn.to_circuit_op", "qiskit.opflow.state_fns.StateFn.to_density_matrix", "qiskit.opflow.state_fns.StateFn.to_matrix", "qiskit.opflow.state_fns.StateFn.to_matrix_op", "qiskit.opflow.state_fns.StateFn.traverse", "VectorStateFn", "qiskit.opflow.state_fns.VectorStateFn.add", "qiskit.opflow.state_fns.VectorStateFn.adjoint", "qiskit.opflow.state_fns.VectorStateFn.eval", "qiskit.opflow.state_fns.VectorStateFn.permute", "qiskit.opflow.state_fns.VectorStateFn.primitive_strings", "qiskit.opflow.state_fns.VectorStateFn.sample", "qiskit.opflow.state_fns.VectorStateFn.tensor", "qiskit.opflow.state_fns.VectorStateFn.to_circuit_op", "qiskit.opflow.state_fns.VectorStateFn.to_density_matrix", "qiskit.opflow.state_fns.VectorStateFn.to_dict_fn", "qiskit.opflow.state_fns.VectorStateFn.to_matrix", "qiskit.opflow.state_fns.VectorStateFn.to_matrix_op", "BaseEstimator", "qiskit.primitives.BaseEstimator.close", "BaseSampler", "qiskit.primitives.BaseSampler.close", "Estimator", "qiskit.primitives.Estimator.close", "EstimatorResult", "Sampler", "qiskit.primitives.Sampler.close", "SamplerResult", "Backend", "qiskit.providers.BackendPropertyError", "BackendV1", "qiskit.providers.BackendV1.configuration", "qiskit.providers.BackendV1.name", "qiskit.providers.BackendV1.properties", "qiskit.providers.BackendV1.provider", "qiskit.providers.BackendV1.run", "qiskit.providers.BackendV1.set_options", "qiskit.providers.BackendV1.status", "BackendV2", "qiskit.providers.BackendV2.acquire_channel", "qiskit.providers.BackendV2.control_channel", "qiskit.providers.BackendV2.drive_channel", "qiskit.providers.BackendV2.measure_channel", "qiskit.providers.BackendV2.qubit_properties", "qiskit.providers.BackendV2.run", "qiskit.providers.BackendV2.set_options", "Job", "qiskit.providers.JobError", "JobStatus", "qiskit.providers.JobTimeoutError", "JobV1", "qiskit.providers.JobV1.backend", "qiskit.providers.JobV1.cancel", "qiskit.providers.JobV1.cancelled", "qiskit.providers.JobV1.done", "qiskit.providers.JobV1.in_final_state", "qiskit.providers.JobV1.job_id", "qiskit.providers.JobV1.result", "qiskit.providers.JobV1.running", "qiskit.providers.JobV1.status", "qiskit.providers.JobV1.submit", "qiskit.providers.JobV1.wait_for_final_state", "Options", "qiskit.providers.Options.get", "qiskit.providers.Options.set_validator", "qiskit.providers.Options.update_options", "Provider", "ProviderV1", "qiskit.providers.ProviderV1.backends", "qiskit.providers.ProviderV1.get_backend", "qiskit.providers.QiskitBackendNotFoundError", "QubitProperties", "qiskit.providers.aer.AerError", "AerProvider", "qiskit.providers.aer.AerProvider.backends", "qiskit.providers.aer.AerProvider.get_backend", "AerSimulator", "qiskit.providers.aer.AerSimulator.available_devices", "qiskit.providers.aer.AerSimulator.available_methods", "qiskit.providers.aer.AerSimulator.clear_options", "qiskit.providers.aer.AerSimulator.configuration", "qiskit.providers.aer.AerSimulator.defaults", "qiskit.providers.aer.AerSimulator.from_backend", "qiskit.providers.aer.AerSimulator.name", "qiskit.providers.aer.AerSimulator.properties", "qiskit.providers.aer.AerSimulator.provider", "qiskit.providers.aer.AerSimulator.run", "qiskit.providers.aer.AerSimulator.set_option", "qiskit.providers.aer.AerSimulator.set_options", "qiskit.providers.aer.AerSimulator.status", "PulseSimulator", "qiskit.providers.aer.PulseSimulator.clear_options", "qiskit.providers.aer.PulseSimulator.configuration", "qiskit.providers.aer.PulseSimulator.defaults", "qiskit.providers.aer.PulseSimulator.from_backend", "qiskit.providers.aer.PulseSimulator.name", "qiskit.providers.aer.PulseSimulator.properties", "qiskit.providers.aer.PulseSimulator.provider", "qiskit.providers.aer.PulseSimulator.run", "qiskit.providers.aer.PulseSimulator.set_option", "qiskit.providers.aer.PulseSimulator.set_options", "qiskit.providers.aer.PulseSimulator.status", "QasmSimulator", "qiskit.providers.aer.QasmSimulator.available_devices", "qiskit.providers.aer.QasmSimulator.available_methods", "qiskit.providers.aer.QasmSimulator.clear_options", "qiskit.providers.aer.QasmSimulator.configuration", "qiskit.providers.aer.QasmSimulator.defaults", "qiskit.providers.aer.QasmSimulator.from_backend", "qiskit.providers.aer.QasmSimulator.name", "qiskit.providers.aer.QasmSimulator.properties", "qiskit.providers.aer.QasmSimulator.provider", "qiskit.providers.aer.QasmSimulator.run", "qiskit.providers.aer.QasmSimulator.set_option", "qiskit.providers.aer.QasmSimulator.set_options", "qiskit.providers.aer.QasmSimulator.status", "StatevectorSimulator", "qiskit.providers.aer.StatevectorSimulator.available_devices", "qiskit.providers.aer.StatevectorSimulator.available_methods", "qiskit.providers.aer.StatevectorSimulator.clear_options", "qiskit.providers.aer.StatevectorSimulator.configuration", "qiskit.providers.aer.StatevectorSimulator.defaults", "qiskit.providers.aer.StatevectorSimulator.name", "qiskit.providers.aer.StatevectorSimulator.properties", "qiskit.providers.aer.StatevectorSimulator.provider", "qiskit.providers.aer.StatevectorSimulator.run", "qiskit.providers.aer.StatevectorSimulator.set_option", "qiskit.providers.aer.StatevectorSimulator.set_options", "qiskit.providers.aer.StatevectorSimulator.status", "UnitarySimulator", "qiskit.providers.aer.UnitarySimulator.available_devices", "qiskit.providers.aer.UnitarySimulator.available_methods", "qiskit.providers.aer.UnitarySimulator.clear_options", "qiskit.providers.aer.UnitarySimulator.configuration", "qiskit.providers.aer.UnitarySimulator.defaults", "qiskit.providers.aer.UnitarySimulator.name", "qiskit.providers.aer.UnitarySimulator.properties", "qiskit.providers.aer.UnitarySimulator.provider", "qiskit.providers.aer.UnitarySimulator.run", "qiskit.providers.aer.UnitarySimulator.set_option", "qiskit.providers.aer.UnitarySimulator.set_options", "qiskit.providers.aer.UnitarySimulator.status", "Snapshot", "qiskit.providers.aer.extensions.Snapshot.add_decomposition", "qiskit.providers.aer.extensions.Snapshot.assemble", "qiskit.providers.aer.extensions.Snapshot.broadcast_arguments", "qiskit.providers.aer.extensions.Snapshot.c_if", "qiskit.providers.aer.extensions.Snapshot.copy", "qiskit.providers.aer.extensions.Snapshot.define_snapshot_register", "qiskit.providers.aer.extensions.Snapshot.inverse", "qiskit.providers.aer.extensions.Snapshot.is_parameterized", "qiskit.providers.aer.extensions.Snapshot.qasm", "qiskit.providers.aer.extensions.Snapshot.repeat", "qiskit.providers.aer.extensions.Snapshot.reverse_ops", "qiskit.providers.aer.extensions.Snapshot.soft_compare", "qiskit.providers.aer.extensions.Snapshot.validate_parameter", "SnapshotDensityMatrix", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.add_decomposition", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.assemble", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.broadcast_arguments", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.c_if", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.copy", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.define_snapshot_register", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.inverse", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.is_parameterized", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.qasm", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.repeat", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.reverse_ops", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.soft_compare", "qiskit.providers.aer.extensions.SnapshotDensityMatrix.validate_parameter", "SnapshotExpectationValue", "qiskit.providers.aer.extensions.SnapshotExpectationValue.add_decomposition", "qiskit.providers.aer.extensions.SnapshotExpectationValue.assemble", "qiskit.providers.aer.extensions.SnapshotExpectationValue.broadcast_arguments", "qiskit.providers.aer.extensions.SnapshotExpectationValue.c_if", "qiskit.providers.aer.extensions.SnapshotExpectationValue.copy", "qiskit.providers.aer.extensions.SnapshotExpectationValue.define_snapshot_register", "qiskit.providers.aer.extensions.SnapshotExpectationValue.inverse", "qiskit.providers.aer.extensions.SnapshotExpectationValue.is_parameterized", "qiskit.providers.aer.extensions.SnapshotExpectationValue.qasm", "qiskit.providers.aer.extensions.SnapshotExpectationValue.repeat", "qiskit.providers.aer.extensions.SnapshotExpectationValue.reverse_ops", "qiskit.providers.aer.extensions.SnapshotExpectationValue.soft_compare", "qiskit.providers.aer.extensions.SnapshotExpectationValue.validate_parameter", "SnapshotProbabilities", "qiskit.providers.aer.extensions.SnapshotProbabilities.add_decomposition", "qiskit.providers.aer.extensions.SnapshotProbabilities.assemble", "qiskit.providers.aer.extensions.SnapshotProbabilities.broadcast_arguments", "qiskit.providers.aer.extensions.SnapshotProbabilities.c_if", "qiskit.providers.aer.extensions.SnapshotProbabilities.copy", "qiskit.providers.aer.extensions.SnapshotProbabilities.define_snapshot_register", "qiskit.providers.aer.extensions.SnapshotProbabilities.inverse", "qiskit.providers.aer.extensions.SnapshotProbabilities.is_parameterized", "qiskit.providers.aer.extensions.SnapshotProbabilities.qasm", "qiskit.providers.aer.extensions.SnapshotProbabilities.repeat", "qiskit.providers.aer.extensions.SnapshotProbabilities.reverse_ops", "qiskit.providers.aer.extensions.SnapshotProbabilities.soft_compare", "qiskit.providers.aer.extensions.SnapshotProbabilities.validate_parameter", "SnapshotStabilizer", "qiskit.providers.aer.extensions.SnapshotStabilizer.add_decomposition", "qiskit.providers.aer.extensions.SnapshotStabilizer.assemble", "qiskit.providers.aer.extensions.SnapshotStabilizer.broadcast_arguments", "qiskit.providers.aer.extensions.SnapshotStabilizer.c_if", "qiskit.providers.aer.extensions.SnapshotStabilizer.copy", "qiskit.providers.aer.extensions.SnapshotStabilizer.define_snapshot_register", "qiskit.providers.aer.extensions.SnapshotStabilizer.inverse", "qiskit.providers.aer.extensions.SnapshotStabilizer.is_parameterized", "qiskit.providers.aer.extensions.SnapshotStabilizer.qasm", "qiskit.providers.aer.extensions.SnapshotStabilizer.repeat", "qiskit.providers.aer.extensions.SnapshotStabilizer.reverse_ops", "qiskit.providers.aer.extensions.SnapshotStabilizer.soft_compare", "qiskit.providers.aer.extensions.SnapshotStabilizer.validate_parameter", "SnapshotStatevector", "qiskit.providers.aer.extensions.SnapshotStatevector.add_decomposition", "qiskit.providers.aer.extensions.SnapshotStatevector.assemble", "qiskit.providers.aer.extensions.SnapshotStatevector.broadcast_arguments", "qiskit.providers.aer.extensions.SnapshotStatevector.c_if", "qiskit.providers.aer.extensions.SnapshotStatevector.copy", "qiskit.providers.aer.extensions.SnapshotStatevector.define_snapshot_register", "qiskit.providers.aer.extensions.SnapshotStatevector.inverse", "qiskit.providers.aer.extensions.SnapshotStatevector.is_parameterized", "qiskit.providers.aer.extensions.SnapshotStatevector.qasm", "qiskit.providers.aer.extensions.SnapshotStatevector.repeat", "qiskit.providers.aer.extensions.SnapshotStatevector.reverse_ops", "qiskit.providers.aer.extensions.SnapshotStatevector.soft_compare", "qiskit.providers.aer.extensions.SnapshotStatevector.validate_parameter", "AerJob", "qiskit.providers.aer.jobs.AerJob.backend", "qiskit.providers.aer.jobs.AerJob.cancel", "qiskit.providers.aer.jobs.AerJob.cancelled", "qiskit.providers.aer.jobs.AerJob.done", "qiskit.providers.aer.jobs.AerJob.executor", "qiskit.providers.aer.jobs.AerJob.in_final_state", "qiskit.providers.aer.jobs.AerJob.job_id", "qiskit.providers.aer.jobs.AerJob.qobj", "qiskit.providers.aer.jobs.AerJob.result", "qiskit.providers.aer.jobs.AerJob.running", "qiskit.providers.aer.jobs.AerJob.status", "qiskit.providers.aer.jobs.AerJob.submit", "qiskit.providers.aer.jobs.AerJob.wait_for_final_state", "AerJobSet", "qiskit.providers.aer.jobs.AerJobSet.backend", "qiskit.providers.aer.jobs.AerJobSet.cancel", "qiskit.providers.aer.jobs.AerJobSet.cancelled", "qiskit.providers.aer.jobs.AerJobSet.done", "qiskit.providers.aer.jobs.AerJobSet.executor", "qiskit.providers.aer.jobs.AerJobSet.in_final_state", "qiskit.providers.aer.jobs.AerJobSet.job", "qiskit.providers.aer.jobs.AerJobSet.job_id", "qiskit.providers.aer.jobs.AerJobSet.result", "qiskit.providers.aer.jobs.AerJobSet.running", "qiskit.providers.aer.jobs.AerJobSet.status", "qiskit.providers.aer.jobs.AerJobSet.submit", "qiskit.providers.aer.jobs.AerJobSet.wait_for_final_state", "qiskit.providers.aer.jobs.AerJobSet.worker", "qiskit.providers.aer.jobs.AerJobSet.worker_job", "qiskit.providers.aer.jobs.AerJobSet.worker_results", "SaveAmplitudes", "qiskit.providers.aer.library.SaveAmplitudes.add_decomposition", "qiskit.providers.aer.library.SaveAmplitudes.assemble", "qiskit.providers.aer.library.SaveAmplitudes.broadcast_arguments", "qiskit.providers.aer.library.SaveAmplitudes.c_if", "qiskit.providers.aer.library.SaveAmplitudes.copy", "qiskit.providers.aer.library.SaveAmplitudes.inverse", "qiskit.providers.aer.library.SaveAmplitudes.is_parameterized", "qiskit.providers.aer.library.SaveAmplitudes.qasm", "qiskit.providers.aer.library.SaveAmplitudes.repeat", "qiskit.providers.aer.library.SaveAmplitudes.reverse_ops", "qiskit.providers.aer.library.SaveAmplitudes.soft_compare", "qiskit.providers.aer.library.SaveAmplitudes.validate_parameter", "SaveAmplitudesSquared", "qiskit.providers.aer.library.SaveAmplitudesSquared.add_decomposition", "qiskit.providers.aer.library.SaveAmplitudesSquared.assemble", "qiskit.providers.aer.library.SaveAmplitudesSquared.broadcast_arguments", "qiskit.providers.aer.library.SaveAmplitudesSquared.c_if", "qiskit.providers.aer.library.SaveAmplitudesSquared.copy", "qiskit.providers.aer.library.SaveAmplitudesSquared.inverse", "qiskit.providers.aer.library.SaveAmplitudesSquared.is_parameterized", "qiskit.providers.aer.library.SaveAmplitudesSquared.qasm", "qiskit.providers.aer.library.SaveAmplitudesSquared.repeat", "qiskit.providers.aer.library.SaveAmplitudesSquared.reverse_ops", "qiskit.providers.aer.library.SaveAmplitudesSquared.soft_compare", "qiskit.providers.aer.library.SaveAmplitudesSquared.validate_parameter", "SaveClifford", "qiskit.providers.aer.library.SaveClifford.add_decomposition", "qiskit.providers.aer.library.SaveClifford.assemble", "qiskit.providers.aer.library.SaveClifford.broadcast_arguments", "qiskit.providers.aer.library.SaveClifford.c_if", "qiskit.providers.aer.library.SaveClifford.copy", "qiskit.providers.aer.library.SaveClifford.inverse", "qiskit.providers.aer.library.SaveClifford.is_parameterized", "qiskit.providers.aer.library.SaveClifford.qasm", "qiskit.providers.aer.library.SaveClifford.repeat", "qiskit.providers.aer.library.SaveClifford.reverse_ops", "qiskit.providers.aer.library.SaveClifford.soft_compare", "qiskit.providers.aer.library.SaveClifford.validate_parameter", "SaveDensityMatrix", "qiskit.providers.aer.library.SaveDensityMatrix.add_decomposition", "qiskit.providers.aer.library.SaveDensityMatrix.assemble", "qiskit.providers.aer.library.SaveDensityMatrix.broadcast_arguments", "qiskit.providers.aer.library.SaveDensityMatrix.c_if", "qiskit.providers.aer.library.SaveDensityMatrix.copy", "qiskit.providers.aer.library.SaveDensityMatrix.inverse", "qiskit.providers.aer.library.SaveDensityMatrix.is_parameterized", "qiskit.providers.aer.library.SaveDensityMatrix.qasm", "qiskit.providers.aer.library.SaveDensityMatrix.repeat", "qiskit.providers.aer.library.SaveDensityMatrix.reverse_ops", "qiskit.providers.aer.library.SaveDensityMatrix.soft_compare", "qiskit.providers.aer.library.SaveDensityMatrix.validate_parameter", "SaveExpectationValue", "qiskit.providers.aer.library.SaveExpectationValue.add_decomposition", "qiskit.providers.aer.library.SaveExpectationValue.assemble", "qiskit.providers.aer.library.SaveExpectationValue.broadcast_arguments", "qiskit.providers.aer.library.SaveExpectationValue.c_if", "qiskit.providers.aer.library.SaveExpectationValue.copy", "qiskit.providers.aer.library.SaveExpectationValue.inverse", "qiskit.providers.aer.library.SaveExpectationValue.is_parameterized", "qiskit.providers.aer.library.SaveExpectationValue.qasm", "qiskit.providers.aer.library.SaveExpectationValue.repeat", "qiskit.providers.aer.library.SaveExpectationValue.reverse_ops", "qiskit.providers.aer.library.SaveExpectationValue.soft_compare", "qiskit.providers.aer.library.SaveExpectationValue.validate_parameter", "SaveExpectationValueVariance", "qiskit.providers.aer.library.SaveExpectationValueVariance.add_decomposition", "qiskit.providers.aer.library.SaveExpectationValueVariance.assemble", "qiskit.providers.aer.library.SaveExpectationValueVariance.broadcast_arguments", "qiskit.providers.aer.library.SaveExpectationValueVariance.c_if", "qiskit.providers.aer.library.SaveExpectationValueVariance.copy", "qiskit.providers.aer.library.SaveExpectationValueVariance.inverse", "qiskit.providers.aer.library.SaveExpectationValueVariance.is_parameterized", "qiskit.providers.aer.library.SaveExpectationValueVariance.qasm", "qiskit.providers.aer.library.SaveExpectationValueVariance.repeat", "qiskit.providers.aer.library.SaveExpectationValueVariance.reverse_ops", "qiskit.providers.aer.library.SaveExpectationValueVariance.soft_compare", "qiskit.providers.aer.library.SaveExpectationValueVariance.validate_parameter", "SaveMatrixProductState", "qiskit.providers.aer.library.SaveMatrixProductState.add_decomposition", "qiskit.providers.aer.library.SaveMatrixProductState.assemble", "qiskit.providers.aer.library.SaveMatrixProductState.broadcast_arguments", "qiskit.providers.aer.library.SaveMatrixProductState.c_if", "qiskit.providers.aer.library.SaveMatrixProductState.copy", "qiskit.providers.aer.library.SaveMatrixProductState.inverse", "qiskit.providers.aer.library.SaveMatrixProductState.is_parameterized", "qiskit.providers.aer.library.SaveMatrixProductState.qasm", "qiskit.providers.aer.library.SaveMatrixProductState.repeat", "qiskit.providers.aer.library.SaveMatrixProductState.reverse_ops", "qiskit.providers.aer.library.SaveMatrixProductState.soft_compare", "qiskit.providers.aer.library.SaveMatrixProductState.validate_parameter", "SaveProbabilities", "qiskit.providers.aer.library.SaveProbabilities.add_decomposition", "qiskit.providers.aer.library.SaveProbabilities.assemble", "qiskit.providers.aer.library.SaveProbabilities.broadcast_arguments", "qiskit.providers.aer.library.SaveProbabilities.c_if", "qiskit.providers.aer.library.SaveProbabilities.copy", "qiskit.providers.aer.library.SaveProbabilities.inverse", "qiskit.providers.aer.library.SaveProbabilities.is_parameterized", "qiskit.providers.aer.library.SaveProbabilities.qasm", "qiskit.providers.aer.library.SaveProbabilities.repeat", "qiskit.providers.aer.library.SaveProbabilities.reverse_ops", "qiskit.providers.aer.library.SaveProbabilities.soft_compare", "qiskit.providers.aer.library.SaveProbabilities.validate_parameter", "SaveProbabilitiesDict", "qiskit.providers.aer.library.SaveProbabilitiesDict.add_decomposition", "qiskit.providers.aer.library.SaveProbabilitiesDict.assemble", "qiskit.providers.aer.library.SaveProbabilitiesDict.broadcast_arguments", "qiskit.providers.aer.library.SaveProbabilitiesDict.c_if", "qiskit.providers.aer.library.SaveProbabilitiesDict.copy", "qiskit.providers.aer.library.SaveProbabilitiesDict.inverse", "qiskit.providers.aer.library.SaveProbabilitiesDict.is_parameterized", "qiskit.providers.aer.library.SaveProbabilitiesDict.qasm", "qiskit.providers.aer.library.SaveProbabilitiesDict.repeat", "qiskit.providers.aer.library.SaveProbabilitiesDict.reverse_ops", "qiskit.providers.aer.library.SaveProbabilitiesDict.soft_compare", "qiskit.providers.aer.library.SaveProbabilitiesDict.validate_parameter", "SaveStabilizer", "qiskit.providers.aer.library.SaveStabilizer.add_decomposition", "qiskit.providers.aer.library.SaveStabilizer.assemble", "qiskit.providers.aer.library.SaveStabilizer.broadcast_arguments", "qiskit.providers.aer.library.SaveStabilizer.c_if", "qiskit.providers.aer.library.SaveStabilizer.copy", "qiskit.providers.aer.library.SaveStabilizer.inverse", "qiskit.providers.aer.library.SaveStabilizer.is_parameterized", "qiskit.providers.aer.library.SaveStabilizer.qasm", "qiskit.providers.aer.library.SaveStabilizer.repeat", "qiskit.providers.aer.library.SaveStabilizer.reverse_ops", "qiskit.providers.aer.library.SaveStabilizer.soft_compare", "qiskit.providers.aer.library.SaveStabilizer.validate_parameter", "SaveState", "qiskit.providers.aer.library.SaveState.add_decomposition", "qiskit.providers.aer.library.SaveState.assemble", "qiskit.providers.aer.library.SaveState.broadcast_arguments", "qiskit.providers.aer.library.SaveState.c_if", "qiskit.providers.aer.library.SaveState.copy", "qiskit.providers.aer.library.SaveState.inverse", "qiskit.providers.aer.library.SaveState.is_parameterized", "qiskit.providers.aer.library.SaveState.qasm", "qiskit.providers.aer.library.SaveState.repeat", "qiskit.providers.aer.library.SaveState.reverse_ops", "qiskit.providers.aer.library.SaveState.soft_compare", "qiskit.providers.aer.library.SaveState.validate_parameter", "SaveStatevector", "qiskit.providers.aer.library.SaveStatevector.add_decomposition", "qiskit.providers.aer.library.SaveStatevector.assemble", "qiskit.providers.aer.library.SaveStatevector.broadcast_arguments", "qiskit.providers.aer.library.SaveStatevector.c_if", "qiskit.providers.aer.library.SaveStatevector.copy", "qiskit.providers.aer.library.SaveStatevector.inverse", "qiskit.providers.aer.library.SaveStatevector.is_parameterized", "qiskit.providers.aer.library.SaveStatevector.qasm", "qiskit.providers.aer.library.SaveStatevector.repeat", "qiskit.providers.aer.library.SaveStatevector.reverse_ops", "qiskit.providers.aer.library.SaveStatevector.soft_compare", "qiskit.providers.aer.library.SaveStatevector.validate_parameter", "SaveStatevectorDict", "qiskit.providers.aer.library.SaveStatevectorDict.add_decomposition", "qiskit.providers.aer.library.SaveStatevectorDict.assemble", "qiskit.providers.aer.library.SaveStatevectorDict.broadcast_arguments", "qiskit.providers.aer.library.SaveStatevectorDict.c_if", "qiskit.providers.aer.library.SaveStatevectorDict.copy", "qiskit.providers.aer.library.SaveStatevectorDict.inverse", "qiskit.providers.aer.library.SaveStatevectorDict.is_parameterized", "qiskit.providers.aer.library.SaveStatevectorDict.qasm", "qiskit.providers.aer.library.SaveStatevectorDict.repeat", "qiskit.providers.aer.library.SaveStatevectorDict.reverse_ops", "qiskit.providers.aer.library.SaveStatevectorDict.soft_compare", "qiskit.providers.aer.library.SaveStatevectorDict.validate_parameter", "SaveSuperOp", "qiskit.providers.aer.library.SaveSuperOp.add_decomposition", "qiskit.providers.aer.library.SaveSuperOp.assemble", "qiskit.providers.aer.library.SaveSuperOp.broadcast_arguments", "qiskit.providers.aer.library.SaveSuperOp.c_if", "qiskit.providers.aer.library.SaveSuperOp.copy", "qiskit.providers.aer.library.SaveSuperOp.inverse", "qiskit.providers.aer.library.SaveSuperOp.is_parameterized", "qiskit.providers.aer.library.SaveSuperOp.qasm", "qiskit.providers.aer.library.SaveSuperOp.repeat", "qiskit.providers.aer.library.SaveSuperOp.reverse_ops", "qiskit.providers.aer.library.SaveSuperOp.soft_compare", "qiskit.providers.aer.library.SaveSuperOp.validate_parameter", "SaveUnitary", "qiskit.providers.aer.library.SaveUnitary.add_decomposition", "qiskit.providers.aer.library.SaveUnitary.assemble", "qiskit.providers.aer.library.SaveUnitary.broadcast_arguments", "qiskit.providers.aer.library.SaveUnitary.c_if", "qiskit.providers.aer.library.SaveUnitary.copy", "qiskit.providers.aer.library.SaveUnitary.inverse", "qiskit.providers.aer.library.SaveUnitary.is_parameterized", "qiskit.providers.aer.library.SaveUnitary.qasm", "qiskit.providers.aer.library.SaveUnitary.repeat", "qiskit.providers.aer.library.SaveUnitary.reverse_ops", "qiskit.providers.aer.library.SaveUnitary.soft_compare", "qiskit.providers.aer.library.SaveUnitary.validate_parameter", "SetDensityMatrix", "qiskit.providers.aer.library.SetDensityMatrix.add_decomposition", "qiskit.providers.aer.library.SetDensityMatrix.assemble", "qiskit.providers.aer.library.SetDensityMatrix.broadcast_arguments", "qiskit.providers.aer.library.SetDensityMatrix.c_if", "qiskit.providers.aer.library.SetDensityMatrix.copy", "qiskit.providers.aer.library.SetDensityMatrix.inverse", "qiskit.providers.aer.library.SetDensityMatrix.is_parameterized", "qiskit.providers.aer.library.SetDensityMatrix.qasm", "qiskit.providers.aer.library.SetDensityMatrix.repeat", "qiskit.providers.aer.library.SetDensityMatrix.reverse_ops", "qiskit.providers.aer.library.SetDensityMatrix.soft_compare", "qiskit.providers.aer.library.SetDensityMatrix.validate_parameter", "SetMatrixProductState", "qiskit.providers.aer.library.SetMatrixProductState.add_decomposition", "qiskit.providers.aer.library.SetMatrixProductState.assemble", "qiskit.providers.aer.library.SetMatrixProductState.broadcast_arguments", "qiskit.providers.aer.library.SetMatrixProductState.c_if", "qiskit.providers.aer.library.SetMatrixProductState.copy", "qiskit.providers.aer.library.SetMatrixProductState.inverse", "qiskit.providers.aer.library.SetMatrixProductState.is_parameterized", "qiskit.providers.aer.library.SetMatrixProductState.qasm", "qiskit.providers.aer.library.SetMatrixProductState.repeat", "qiskit.providers.aer.library.SetMatrixProductState.reverse_ops", "qiskit.providers.aer.library.SetMatrixProductState.soft_compare", "qiskit.providers.aer.library.SetMatrixProductState.validate_parameter", "SetStabilizer", "qiskit.providers.aer.library.SetStabilizer.add_decomposition", "qiskit.providers.aer.library.SetStabilizer.assemble", "qiskit.providers.aer.library.SetStabilizer.broadcast_arguments", "qiskit.providers.aer.library.SetStabilizer.c_if", "qiskit.providers.aer.library.SetStabilizer.copy", "qiskit.providers.aer.library.SetStabilizer.inverse", "qiskit.providers.aer.library.SetStabilizer.is_parameterized", "qiskit.providers.aer.library.SetStabilizer.qasm", "qiskit.providers.aer.library.SetStabilizer.repeat", "qiskit.providers.aer.library.SetStabilizer.reverse_ops", "qiskit.providers.aer.library.SetStabilizer.soft_compare", "qiskit.providers.aer.library.SetStabilizer.validate_parameter", "SetStatevector", "qiskit.providers.aer.library.SetStatevector.add_decomposition", "qiskit.providers.aer.library.SetStatevector.assemble", "qiskit.providers.aer.library.SetStatevector.broadcast_arguments", "qiskit.providers.aer.library.SetStatevector.c_if", "qiskit.providers.aer.library.SetStatevector.copy", "qiskit.providers.aer.library.SetStatevector.inverse", "qiskit.providers.aer.library.SetStatevector.is_parameterized", "qiskit.providers.aer.library.SetStatevector.qasm", "qiskit.providers.aer.library.SetStatevector.repeat", "qiskit.providers.aer.library.SetStatevector.reverse_ops", "qiskit.providers.aer.library.SetStatevector.soft_compare", "qiskit.providers.aer.library.SetStatevector.validate_parameter", "SetSuperOp", "qiskit.providers.aer.library.SetSuperOp.add_decomposition", "qiskit.providers.aer.library.SetSuperOp.assemble", "qiskit.providers.aer.library.SetSuperOp.broadcast_arguments", "qiskit.providers.aer.library.SetSuperOp.c_if", "qiskit.providers.aer.library.SetSuperOp.copy", "qiskit.providers.aer.library.SetSuperOp.inverse", "qiskit.providers.aer.library.SetSuperOp.is_parameterized", "qiskit.providers.aer.library.SetSuperOp.qasm", "qiskit.providers.aer.library.SetSuperOp.repeat", "qiskit.providers.aer.library.SetSuperOp.reverse_ops", "qiskit.providers.aer.library.SetSuperOp.soft_compare", "qiskit.providers.aer.library.SetSuperOp.validate_parameter", "SetUnitary", "qiskit.providers.aer.library.SetUnitary.add_decomposition", "qiskit.providers.aer.library.SetUnitary.assemble", "qiskit.providers.aer.library.SetUnitary.broadcast_arguments", "qiskit.providers.aer.library.SetUnitary.c_if", "qiskit.providers.aer.library.SetUnitary.copy", "qiskit.providers.aer.library.SetUnitary.inverse", "qiskit.providers.aer.library.SetUnitary.is_parameterized", "qiskit.providers.aer.library.SetUnitary.qasm", "qiskit.providers.aer.library.SetUnitary.repeat", "qiskit.providers.aer.library.SetUnitary.reverse_ops", "qiskit.providers.aer.library.SetUnitary.soft_compare", "qiskit.providers.aer.library.SetUnitary.validate_parameter", "qiskit.providers.aer.library.save_amplitudes", "qiskit.providers.aer.library.save_amplitudes_squared", "qiskit.providers.aer.library.save_clifford", "qiskit.providers.aer.library.save_density_matrix", "qiskit.providers.aer.library.save_expectation_value", "qiskit.providers.aer.library.save_expectation_value_variance", "qiskit.providers.aer.library.save_matrix_product_state", "qiskit.providers.aer.library.save_probabilities", "qiskit.providers.aer.library.save_probabilities_dict", "qiskit.providers.aer.library.save_stabilizer", "qiskit.providers.aer.library.save_state", "qiskit.providers.aer.library.save_statevector", "qiskit.providers.aer.library.save_statevector_dict", "qiskit.providers.aer.library.save_superop", "qiskit.providers.aer.library.save_unitary", "qiskit.providers.aer.library.set_density_matrix", "qiskit.providers.aer.library.set_matrix_product_state", "qiskit.providers.aer.library.set_stabilizer", "qiskit.providers.aer.library.set_statevector", "qiskit.providers.aer.library.set_superop", "qiskit.providers.aer.library.set_unitary", "LocalNoisePass", "qiskit.providers.aer.noise.LocalNoisePass.name", "qiskit.providers.aer.noise.LocalNoisePass.run", "NoiseModel", "qiskit.providers.aer.noise.NoiseModel.add_all_qubit_quantum_error", "qiskit.providers.aer.noise.NoiseModel.add_all_qubit_readout_error", "qiskit.providers.aer.noise.NoiseModel.add_basis_gates", "qiskit.providers.aer.noise.NoiseModel.add_nonlocal_quantum_error", "qiskit.providers.aer.noise.NoiseModel.add_quantum_error", "qiskit.providers.aer.noise.NoiseModel.add_readout_error", "qiskit.providers.aer.noise.NoiseModel.from_backend", "qiskit.providers.aer.noise.NoiseModel.from_dict", "qiskit.providers.aer.noise.NoiseModel.is_ideal", "qiskit.providers.aer.noise.NoiseModel.reset", "qiskit.providers.aer.noise.NoiseModel.to_dict", "QuantumError", "qiskit.providers.aer.noise.QuantumError.compose", "qiskit.providers.aer.noise.QuantumError.copy", "qiskit.providers.aer.noise.QuantumError.dot", "qiskit.providers.aer.noise.QuantumError.error_term", "qiskit.providers.aer.noise.QuantumError.expand", "qiskit.providers.aer.noise.QuantumError.ideal", "qiskit.providers.aer.noise.QuantumError.input_dims", "qiskit.providers.aer.noise.QuantumError.output_dims", "qiskit.providers.aer.noise.QuantumError.power", "qiskit.providers.aer.noise.QuantumError.reshape", "qiskit.providers.aer.noise.QuantumError.set_atol", "qiskit.providers.aer.noise.QuantumError.set_rtol", "qiskit.providers.aer.noise.QuantumError.tensor", "qiskit.providers.aer.noise.QuantumError.to_dict", "qiskit.providers.aer.noise.QuantumError.to_instruction", "qiskit.providers.aer.noise.QuantumError.to_quantumchannel", "ReadoutError", "qiskit.providers.aer.noise.ReadoutError.compose", "qiskit.providers.aer.noise.ReadoutError.copy", "qiskit.providers.aer.noise.ReadoutError.dot", "qiskit.providers.aer.noise.ReadoutError.expand", "qiskit.providers.aer.noise.ReadoutError.ideal", "qiskit.providers.aer.noise.ReadoutError.power", "qiskit.providers.aer.noise.ReadoutError.set_atol", "qiskit.providers.aer.noise.ReadoutError.set_rtol", "qiskit.providers.aer.noise.ReadoutError.tensor", "qiskit.providers.aer.noise.ReadoutError.to_dict", "qiskit.providers.aer.noise.ReadoutError.to_instruction", "RelaxationNoisePass", "qiskit.providers.aer.noise.RelaxationNoisePass.name", "qiskit.providers.aer.noise.RelaxationNoisePass.run", "qiskit.providers.aer.noise.amplitude_damping_error", "qiskit.providers.aer.noise.coherent_unitary_error", "qiskit.providers.aer.noise.depolarizing_error", "qiskit.providers.aer.noise.device.basic_device_gate_errors", "qiskit.providers.aer.noise.device.basic_device_readout_errors", "qiskit.providers.aer.noise.device.gate_error_values", "qiskit.providers.aer.noise.device.gate_length_values", "qiskit.providers.aer.noise.device.gate_param_values", "qiskit.providers.aer.noise.device.readout_error_values", "qiskit.providers.aer.noise.device.thermal_relaxation_values", "qiskit.providers.aer.noise.kraus_error", "qiskit.providers.aer.noise.mixed_unitary_error", "qiskit.providers.aer.noise.pauli_error", "qiskit.providers.aer.noise.phase_amplitude_damping_error", "qiskit.providers.aer.noise.phase_damping_error", "qiskit.providers.aer.noise.reset_error", "qiskit.providers.aer.noise.thermal_relaxation_error", "PulseSystemModel", "qiskit.providers.aer.pulse.PulseSystemModel.calculate_channel_frequencies", "qiskit.providers.aer.pulse.PulseSystemModel.control_channel_index", "qiskit.providers.aer.pulse.PulseSystemModel.from_backend", "qiskit.providers.aer.pulse.PulseSystemModel.from_config", "qiskit.providers.aer.pulse.duffing_system_model", "NoiseTransformer", "qiskit.providers.aer.utils.NoiseTransformer.channel_matrix_representation", "qiskit.providers.aer.utils.NoiseTransformer.compute_P", "qiskit.providers.aer.utils.NoiseTransformer.compute_channel_operation", "qiskit.providers.aer.utils.NoiseTransformer.compute_q", "qiskit.providers.aer.utils.NoiseTransformer.fidelity", "qiskit.providers.aer.utils.NoiseTransformer.flatten_matrix", "qiskit.providers.aer.utils.NoiseTransformer.generate_channel_matrices", "qiskit.providers.aer.utils.NoiseTransformer.generate_channel_quadratic_programming_matrices", "qiskit.providers.aer.utils.NoiseTransformer.get_const_matrix_from_channel", "qiskit.providers.aer.utils.NoiseTransformer.get_matrix_from_channel", "qiskit.providers.aer.utils.NoiseTransformer.operator_circuit", "qiskit.providers.aer.utils.NoiseTransformer.operator_matrix", "qiskit.providers.aer.utils.NoiseTransformer.prepare_channel_operator_list", "qiskit.providers.aer.utils.NoiseTransformer.prepare_honesty_constraint", "qiskit.providers.aer.utils.NoiseTransformer.solve_quadratic_program", "qiskit.providers.aer.utils.NoiseTransformer.transform_by_given_channel", "qiskit.providers.aer.utils.NoiseTransformer.transform_by_operator_list", "qiskit.providers.aer.utils.approximate_noise_model", "qiskit.providers.aer.utils.approximate_quantum_error", "qiskit.providers.aer.utils.insert_noise", "qiskit.providers.aer.utils.remap_noise_model", "qiskit.providers.aer.utils.transform_noise_model", "qiskit.providers.aer.utils.transpile_noise_model", "qiskit.providers.aer.utils.transpile_quantum_error", "qiskit.providers.basicaer.BasicAerError", "BasicAerJob", "qiskit.providers.basicaer.BasicAerJob.backend", "qiskit.providers.basicaer.BasicAerJob.cancel", "qiskit.providers.basicaer.BasicAerJob.cancelled", "qiskit.providers.basicaer.BasicAerJob.done", "qiskit.providers.basicaer.BasicAerJob.in_final_state", "qiskit.providers.basicaer.BasicAerJob.job_id", "qiskit.providers.basicaer.BasicAerJob.result", "qiskit.providers.basicaer.BasicAerJob.running", "qiskit.providers.basicaer.BasicAerJob.status", "qiskit.providers.basicaer.BasicAerJob.submit", "qiskit.providers.basicaer.BasicAerJob.wait_for_final_state", "BasicAerProvider", "qiskit.providers.basicaer.BasicAerProvider.backends", "qiskit.providers.basicaer.BasicAerProvider.get_backend", "QasmSimulatorPy", "qiskit.providers.basicaer.QasmSimulatorPy.configuration", "qiskit.providers.basicaer.QasmSimulatorPy.name", "qiskit.providers.basicaer.QasmSimulatorPy.properties", "qiskit.providers.basicaer.QasmSimulatorPy.provider", "qiskit.providers.basicaer.QasmSimulatorPy.run", "qiskit.providers.basicaer.QasmSimulatorPy.run_experiment", "qiskit.providers.basicaer.QasmSimulatorPy.set_options", "qiskit.providers.basicaer.QasmSimulatorPy.status", "StatevectorSimulatorPy", "qiskit.providers.basicaer.StatevectorSimulatorPy.configuration", "qiskit.providers.basicaer.StatevectorSimulatorPy.name", "qiskit.providers.basicaer.StatevectorSimulatorPy.properties", "qiskit.providers.basicaer.StatevectorSimulatorPy.provider", "qiskit.providers.basicaer.StatevectorSimulatorPy.run", "qiskit.providers.basicaer.StatevectorSimulatorPy.run_experiment", "qiskit.providers.basicaer.StatevectorSimulatorPy.set_options", "qiskit.providers.basicaer.StatevectorSimulatorPy.status", "UnitarySimulatorPy", "qiskit.providers.basicaer.UnitarySimulatorPy.configuration", "qiskit.providers.basicaer.UnitarySimulatorPy.name", "qiskit.providers.basicaer.UnitarySimulatorPy.properties", "qiskit.providers.basicaer.UnitarySimulatorPy.provider", "qiskit.providers.basicaer.UnitarySimulatorPy.run", "qiskit.providers.basicaer.UnitarySimulatorPy.run_experiment", "qiskit.providers.basicaer.UnitarySimulatorPy.set_options", "qiskit.providers.basicaer.UnitarySimulatorPy.status", "ConfigurableFakeBackend", "qiskit.providers.fake_provider.ConfigurableFakeBackend.configuration", "qiskit.providers.fake_provider.ConfigurableFakeBackend.defaults", "qiskit.providers.fake_provider.ConfigurableFakeBackend.name", "qiskit.providers.fake_provider.ConfigurableFakeBackend.properties", "qiskit.providers.fake_provider.ConfigurableFakeBackend.provider", "qiskit.providers.fake_provider.ConfigurableFakeBackend.run", "qiskit.providers.fake_provider.ConfigurableFakeBackend.set_options", "qiskit.providers.fake_provider.ConfigurableFakeBackend.status", "Fake1Q", "qiskit.providers.fake_provider.Fake1Q.configuration", "qiskit.providers.fake_provider.Fake1Q.defaults", "qiskit.providers.fake_provider.Fake1Q.name", "qiskit.providers.fake_provider.Fake1Q.properties", "qiskit.providers.fake_provider.Fake1Q.provider", "qiskit.providers.fake_provider.Fake1Q.run", "qiskit.providers.fake_provider.Fake1Q.set_options", "qiskit.providers.fake_provider.Fake1Q.status", "FakeAlmaden", "qiskit.providers.fake_provider.FakeAlmaden.configuration", "qiskit.providers.fake_provider.FakeAlmaden.defaults", "qiskit.providers.fake_provider.FakeAlmaden.name", "qiskit.providers.fake_provider.FakeAlmaden.properties", "qiskit.providers.fake_provider.FakeAlmaden.provider", "qiskit.providers.fake_provider.FakeAlmaden.run", "qiskit.providers.fake_provider.FakeAlmaden.set_options", "qiskit.providers.fake_provider.FakeAlmaden.status", "FakeAlmadenV2", "qiskit.providers.fake_provider.FakeAlmadenV2.acquire_channel", "qiskit.providers.fake_provider.FakeAlmadenV2.control_channel", "qiskit.providers.fake_provider.FakeAlmadenV2.drive_channel", "qiskit.providers.fake_provider.FakeAlmadenV2.measure_channel", "qiskit.providers.fake_provider.FakeAlmadenV2.qubit_properties", "qiskit.providers.fake_provider.FakeAlmadenV2.run", "qiskit.providers.fake_provider.FakeAlmadenV2.set_options", "FakeArmonk", "qiskit.providers.fake_provider.FakeArmonk.configuration", "qiskit.providers.fake_provider.FakeArmonk.defaults", "qiskit.providers.fake_provider.FakeArmonk.name", "qiskit.providers.fake_provider.FakeArmonk.properties", "qiskit.providers.fake_provider.FakeArmonk.provider", "qiskit.providers.fake_provider.FakeArmonk.run", "qiskit.providers.fake_provider.FakeArmonk.set_options", "qiskit.providers.fake_provider.FakeArmonk.status", "FakeArmonkV2", "qiskit.providers.fake_provider.FakeArmonkV2.acquire_channel", "qiskit.providers.fake_provider.FakeArmonkV2.control_channel", "qiskit.providers.fake_provider.FakeArmonkV2.drive_channel", "qiskit.providers.fake_provider.FakeArmonkV2.measure_channel", "qiskit.providers.fake_provider.FakeArmonkV2.qubit_properties", "qiskit.providers.fake_provider.FakeArmonkV2.run", "qiskit.providers.fake_provider.FakeArmonkV2.set_options", "FakeAthens", "qiskit.providers.fake_provider.FakeAthens.configuration", "qiskit.providers.fake_provider.FakeAthens.defaults", "qiskit.providers.fake_provider.FakeAthens.name", "qiskit.providers.fake_provider.FakeAthens.properties", "qiskit.providers.fake_provider.FakeAthens.provider", "qiskit.providers.fake_provider.FakeAthens.run", "qiskit.providers.fake_provider.FakeAthens.set_options", "qiskit.providers.fake_provider.FakeAthens.status", "FakeAthensV2", "qiskit.providers.fake_provider.FakeAthensV2.acquire_channel", "qiskit.providers.fake_provider.FakeAthensV2.control_channel", "qiskit.providers.fake_provider.FakeAthensV2.drive_channel", "qiskit.providers.fake_provider.FakeAthensV2.measure_channel", "qiskit.providers.fake_provider.FakeAthensV2.qubit_properties", "qiskit.providers.fake_provider.FakeAthensV2.run", "qiskit.providers.fake_provider.FakeAthensV2.set_options", "FakeBackend5QV2", "qiskit.providers.fake_provider.FakeBackend5QV2.acquire_channel", "qiskit.providers.fake_provider.FakeBackend5QV2.control_channel", "qiskit.providers.fake_provider.FakeBackend5QV2.drive_channel", "qiskit.providers.fake_provider.FakeBackend5QV2.measure_channel", "qiskit.providers.fake_provider.FakeBackend5QV2.qubit_properties", "qiskit.providers.fake_provider.FakeBackend5QV2.run", "qiskit.providers.fake_provider.FakeBackend5QV2.set_options", "FakeBackendV2", "qiskit.providers.fake_provider.FakeBackendV2.acquire_channel", "qiskit.providers.fake_provider.FakeBackendV2.control_channel", "qiskit.providers.fake_provider.FakeBackendV2.drive_channel", "qiskit.providers.fake_provider.FakeBackendV2.measure_channel", "qiskit.providers.fake_provider.FakeBackendV2.qubit_properties", "qiskit.providers.fake_provider.FakeBackendV2.run", "qiskit.providers.fake_provider.FakeBackendV2.set_options", "FakeBelem", "qiskit.providers.fake_provider.FakeBelem.configuration", "qiskit.providers.fake_provider.FakeBelem.defaults", "qiskit.providers.fake_provider.FakeBelem.name", "qiskit.providers.fake_provider.FakeBelem.properties", "qiskit.providers.fake_provider.FakeBelem.provider", "qiskit.providers.fake_provider.FakeBelem.run", "qiskit.providers.fake_provider.FakeBelem.set_options", "qiskit.providers.fake_provider.FakeBelem.status", "FakeBelemV2", "qiskit.providers.fake_provider.FakeBelemV2.acquire_channel", "qiskit.providers.fake_provider.FakeBelemV2.control_channel", "qiskit.providers.fake_provider.FakeBelemV2.drive_channel", "qiskit.providers.fake_provider.FakeBelemV2.measure_channel", "qiskit.providers.fake_provider.FakeBelemV2.qubit_properties", "qiskit.providers.fake_provider.FakeBelemV2.run", "qiskit.providers.fake_provider.FakeBelemV2.set_options", "FakeBoeblingen", "qiskit.providers.fake_provider.FakeBoeblingen.configuration", "qiskit.providers.fake_provider.FakeBoeblingen.defaults", "qiskit.providers.fake_provider.FakeBoeblingen.name", "qiskit.providers.fake_provider.FakeBoeblingen.properties", "qiskit.providers.fake_provider.FakeBoeblingen.provider", "qiskit.providers.fake_provider.FakeBoeblingen.run", "qiskit.providers.fake_provider.FakeBoeblingen.set_options", "qiskit.providers.fake_provider.FakeBoeblingen.status", "FakeBoeblingenV2", "qiskit.providers.fake_provider.FakeBoeblingenV2.acquire_channel", "qiskit.providers.fake_provider.FakeBoeblingenV2.control_channel", "qiskit.providers.fake_provider.FakeBoeblingenV2.drive_channel", "qiskit.providers.fake_provider.FakeBoeblingenV2.measure_channel", "qiskit.providers.fake_provider.FakeBoeblingenV2.qubit_properties", "qiskit.providers.fake_provider.FakeBoeblingenV2.run", "qiskit.providers.fake_provider.FakeBoeblingenV2.set_options", "FakeBogota", "qiskit.providers.fake_provider.FakeBogota.configuration", "qiskit.providers.fake_provider.FakeBogota.defaults", "qiskit.providers.fake_provider.FakeBogota.name", "qiskit.providers.fake_provider.FakeBogota.properties", "qiskit.providers.fake_provider.FakeBogota.provider", "qiskit.providers.fake_provider.FakeBogota.run", "qiskit.providers.fake_provider.FakeBogota.set_options", "qiskit.providers.fake_provider.FakeBogota.status", "FakeBogotaV2", "qiskit.providers.fake_provider.FakeBogotaV2.acquire_channel", "qiskit.providers.fake_provider.FakeBogotaV2.control_channel", "qiskit.providers.fake_provider.FakeBogotaV2.drive_channel", "qiskit.providers.fake_provider.FakeBogotaV2.measure_channel", "qiskit.providers.fake_provider.FakeBogotaV2.qubit_properties", "qiskit.providers.fake_provider.FakeBogotaV2.run", "qiskit.providers.fake_provider.FakeBogotaV2.set_options", "FakeBrooklyn", "qiskit.providers.fake_provider.FakeBrooklyn.configuration", "qiskit.providers.fake_provider.FakeBrooklyn.defaults", "qiskit.providers.fake_provider.FakeBrooklyn.name", "qiskit.providers.fake_provider.FakeBrooklyn.properties", "qiskit.providers.fake_provider.FakeBrooklyn.provider", "qiskit.providers.fake_provider.FakeBrooklyn.run", "qiskit.providers.fake_provider.FakeBrooklyn.set_options", "qiskit.providers.fake_provider.FakeBrooklyn.status", "FakeBrooklynV2", "qiskit.providers.fake_provider.FakeBrooklynV2.acquire_channel", "qiskit.providers.fake_provider.FakeBrooklynV2.control_channel", "qiskit.providers.fake_provider.FakeBrooklynV2.drive_channel", "qiskit.providers.fake_provider.FakeBrooklynV2.measure_channel", "qiskit.providers.fake_provider.FakeBrooklynV2.qubit_properties", "qiskit.providers.fake_provider.FakeBrooklynV2.run", "qiskit.providers.fake_provider.FakeBrooklynV2.set_options", "FakeBurlington", "qiskit.providers.fake_provider.FakeBurlington.configuration", "qiskit.providers.fake_provider.FakeBurlington.name", "qiskit.providers.fake_provider.FakeBurlington.properties", "qiskit.providers.fake_provider.FakeBurlington.provider", "qiskit.providers.fake_provider.FakeBurlington.run", "qiskit.providers.fake_provider.FakeBurlington.set_options", "qiskit.providers.fake_provider.FakeBurlington.status", "FakeBurlingtonV2", "qiskit.providers.fake_provider.FakeBurlingtonV2.acquire_channel", "qiskit.providers.fake_provider.FakeBurlingtonV2.control_channel", "qiskit.providers.fake_provider.FakeBurlingtonV2.drive_channel", "qiskit.providers.fake_provider.FakeBurlingtonV2.measure_channel", "qiskit.providers.fake_provider.FakeBurlingtonV2.qubit_properties", "qiskit.providers.fake_provider.FakeBurlingtonV2.run", "qiskit.providers.fake_provider.FakeBurlingtonV2.set_options", "FakeCairo", "qiskit.providers.fake_provider.FakeCairo.configuration", "qiskit.providers.fake_provider.FakeCairo.defaults", "qiskit.providers.fake_provider.FakeCairo.name", "qiskit.providers.fake_provider.FakeCairo.properties", "qiskit.providers.fake_provider.FakeCairo.provider", "qiskit.providers.fake_provider.FakeCairo.run", "qiskit.providers.fake_provider.FakeCairo.set_options", "qiskit.providers.fake_provider.FakeCairo.status", "FakeCairoV2", "qiskit.providers.fake_provider.FakeCairoV2.acquire_channel", "qiskit.providers.fake_provider.FakeCairoV2.control_channel", "qiskit.providers.fake_provider.FakeCairoV2.drive_channel", "qiskit.providers.fake_provider.FakeCairoV2.measure_channel", "qiskit.providers.fake_provider.FakeCairoV2.qubit_properties", "qiskit.providers.fake_provider.FakeCairoV2.run", "qiskit.providers.fake_provider.FakeCairoV2.set_options", "FakeCambridge", "qiskit.providers.fake_provider.FakeCambridge.configuration", "qiskit.providers.fake_provider.FakeCambridge.name", "qiskit.providers.fake_provider.FakeCambridge.properties", "qiskit.providers.fake_provider.FakeCambridge.provider", "qiskit.providers.fake_provider.FakeCambridge.run", "qiskit.providers.fake_provider.FakeCambridge.set_options", "qiskit.providers.fake_provider.FakeCambridge.status", "FakeCambridgeV2", "qiskit.providers.fake_provider.FakeCambridgeV2.acquire_channel", "qiskit.providers.fake_provider.FakeCambridgeV2.control_channel", "qiskit.providers.fake_provider.FakeCambridgeV2.drive_channel", "qiskit.providers.fake_provider.FakeCambridgeV2.measure_channel", "qiskit.providers.fake_provider.FakeCambridgeV2.qubit_properties", "qiskit.providers.fake_provider.FakeCambridgeV2.run", "qiskit.providers.fake_provider.FakeCambridgeV2.set_options", "FakeCasablanca", "qiskit.providers.fake_provider.FakeCasablanca.configuration", "qiskit.providers.fake_provider.FakeCasablanca.defaults", "qiskit.providers.fake_provider.FakeCasablanca.name", "qiskit.providers.fake_provider.FakeCasablanca.properties", "qiskit.providers.fake_provider.FakeCasablanca.provider", "qiskit.providers.fake_provider.FakeCasablanca.run", "qiskit.providers.fake_provider.FakeCasablanca.set_options", "qiskit.providers.fake_provider.FakeCasablanca.status", "FakeCasablancaV2", "qiskit.providers.fake_provider.FakeCasablancaV2.acquire_channel", "qiskit.providers.fake_provider.FakeCasablancaV2.control_channel", "qiskit.providers.fake_provider.FakeCasablancaV2.drive_channel", "qiskit.providers.fake_provider.FakeCasablancaV2.measure_channel", "qiskit.providers.fake_provider.FakeCasablancaV2.qubit_properties", "qiskit.providers.fake_provider.FakeCasablancaV2.run", "qiskit.providers.fake_provider.FakeCasablancaV2.set_options", "FakeEssex", "qiskit.providers.fake_provider.FakeEssex.configuration", "qiskit.providers.fake_provider.FakeEssex.name", "qiskit.providers.fake_provider.FakeEssex.properties", "qiskit.providers.fake_provider.FakeEssex.provider", "qiskit.providers.fake_provider.FakeEssex.run", "qiskit.providers.fake_provider.FakeEssex.set_options", "qiskit.providers.fake_provider.FakeEssex.status", "FakeEssexV2", "qiskit.providers.fake_provider.FakeEssexV2.acquire_channel", "qiskit.providers.fake_provider.FakeEssexV2.control_channel", "qiskit.providers.fake_provider.FakeEssexV2.drive_channel", "qiskit.providers.fake_provider.FakeEssexV2.measure_channel", "qiskit.providers.fake_provider.FakeEssexV2.qubit_properties", "qiskit.providers.fake_provider.FakeEssexV2.run", "qiskit.providers.fake_provider.FakeEssexV2.set_options", "FakeGuadalupe", "qiskit.providers.fake_provider.FakeGuadalupe.configuration", "qiskit.providers.fake_provider.FakeGuadalupe.defaults", "qiskit.providers.fake_provider.FakeGuadalupe.name", "qiskit.providers.fake_provider.FakeGuadalupe.properties", "qiskit.providers.fake_provider.FakeGuadalupe.provider", "qiskit.providers.fake_provider.FakeGuadalupe.run", "qiskit.providers.fake_provider.FakeGuadalupe.set_options", "qiskit.providers.fake_provider.FakeGuadalupe.status", "FakeGuadalupeV2", "qiskit.providers.fake_provider.FakeGuadalupeV2.acquire_channel", "qiskit.providers.fake_provider.FakeGuadalupeV2.control_channel", "qiskit.providers.fake_provider.FakeGuadalupeV2.drive_channel", "qiskit.providers.fake_provider.FakeGuadalupeV2.measure_channel", "qiskit.providers.fake_provider.FakeGuadalupeV2.qubit_properties", "qiskit.providers.fake_provider.FakeGuadalupeV2.run", "qiskit.providers.fake_provider.FakeGuadalupeV2.set_options", "FakeHanoi", "qiskit.providers.fake_provider.FakeHanoi.configuration", "qiskit.providers.fake_provider.FakeHanoi.defaults", "qiskit.providers.fake_provider.FakeHanoi.name", "qiskit.providers.fake_provider.FakeHanoi.properties", "qiskit.providers.fake_provider.FakeHanoi.provider", "qiskit.providers.fake_provider.FakeHanoi.run", "qiskit.providers.fake_provider.FakeHanoi.set_options", "qiskit.providers.fake_provider.FakeHanoi.status", "FakeHanoiV2", "qiskit.providers.fake_provider.FakeHanoiV2.acquire_channel", "qiskit.providers.fake_provider.FakeHanoiV2.control_channel", "qiskit.providers.fake_provider.FakeHanoiV2.drive_channel", "qiskit.providers.fake_provider.FakeHanoiV2.measure_channel", "qiskit.providers.fake_provider.FakeHanoiV2.qubit_properties", "qiskit.providers.fake_provider.FakeHanoiV2.run", "qiskit.providers.fake_provider.FakeHanoiV2.set_options", "FakeJakarta", "qiskit.providers.fake_provider.FakeJakarta.configuration", "qiskit.providers.fake_provider.FakeJakarta.defaults", "qiskit.providers.fake_provider.FakeJakarta.name", "qiskit.providers.fake_provider.FakeJakarta.properties", "qiskit.providers.fake_provider.FakeJakarta.provider", "qiskit.providers.fake_provider.FakeJakarta.run", "qiskit.providers.fake_provider.FakeJakarta.set_options", "qiskit.providers.fake_provider.FakeJakarta.status", "FakeJakartaV2", "qiskit.providers.fake_provider.FakeJakartaV2.acquire_channel", "qiskit.providers.fake_provider.FakeJakartaV2.control_channel", "qiskit.providers.fake_provider.FakeJakartaV2.drive_channel", "qiskit.providers.fake_provider.FakeJakartaV2.measure_channel", "qiskit.providers.fake_provider.FakeJakartaV2.qubit_properties", "qiskit.providers.fake_provider.FakeJakartaV2.run", "qiskit.providers.fake_provider.FakeJakartaV2.set_options", "FakeJohannesburg", "qiskit.providers.fake_provider.FakeJohannesburg.configuration", "qiskit.providers.fake_provider.FakeJohannesburg.defaults", "qiskit.providers.fake_provider.FakeJohannesburg.name", "qiskit.providers.fake_provider.FakeJohannesburg.properties", "qiskit.providers.fake_provider.FakeJohannesburg.provider", "qiskit.providers.fake_provider.FakeJohannesburg.run", "qiskit.providers.fake_provider.FakeJohannesburg.set_options", "qiskit.providers.fake_provider.FakeJohannesburg.status", "FakeJohannesburgV2", "qiskit.providers.fake_provider.FakeJohannesburgV2.acquire_channel", "qiskit.providers.fake_provider.FakeJohannesburgV2.control_channel", "qiskit.providers.fake_provider.FakeJohannesburgV2.drive_channel", "qiskit.providers.fake_provider.FakeJohannesburgV2.measure_channel", "qiskit.providers.fake_provider.FakeJohannesburgV2.qubit_properties", "qiskit.providers.fake_provider.FakeJohannesburgV2.run", "qiskit.providers.fake_provider.FakeJohannesburgV2.set_options", "FakeKolkata", "qiskit.providers.fake_provider.FakeKolkata.configuration", "qiskit.providers.fake_provider.FakeKolkata.defaults", "qiskit.providers.fake_provider.FakeKolkata.name", "qiskit.providers.fake_provider.FakeKolkata.properties", "qiskit.providers.fake_provider.FakeKolkata.provider", "qiskit.providers.fake_provider.FakeKolkata.run", "qiskit.providers.fake_provider.FakeKolkata.set_options", "qiskit.providers.fake_provider.FakeKolkata.status", "FakeKolkataV2", "qiskit.providers.fake_provider.FakeKolkataV2.acquire_channel", "qiskit.providers.fake_provider.FakeKolkataV2.control_channel", "qiskit.providers.fake_provider.FakeKolkataV2.drive_channel", "qiskit.providers.fake_provider.FakeKolkataV2.measure_channel", "qiskit.providers.fake_provider.FakeKolkataV2.qubit_properties", "qiskit.providers.fake_provider.FakeKolkataV2.run", "qiskit.providers.fake_provider.FakeKolkataV2.set_options", "FakeLagos", "qiskit.providers.fake_provider.FakeLagos.configuration", "qiskit.providers.fake_provider.FakeLagos.defaults", "qiskit.providers.fake_provider.FakeLagos.name", "qiskit.providers.fake_provider.FakeLagos.properties", "qiskit.providers.fake_provider.FakeLagos.provider", "qiskit.providers.fake_provider.FakeLagos.run", "qiskit.providers.fake_provider.FakeLagos.set_options", "qiskit.providers.fake_provider.FakeLagos.status", "FakeLagosV2", "qiskit.providers.fake_provider.FakeLagosV2.acquire_channel", "qiskit.providers.fake_provider.FakeLagosV2.control_channel", "qiskit.providers.fake_provider.FakeLagosV2.drive_channel", "qiskit.providers.fake_provider.FakeLagosV2.measure_channel", "qiskit.providers.fake_provider.FakeLagosV2.qubit_properties", "qiskit.providers.fake_provider.FakeLagosV2.run", "qiskit.providers.fake_provider.FakeLagosV2.set_options", "FakeLima", "qiskit.providers.fake_provider.FakeLima.configuration", "qiskit.providers.fake_provider.FakeLima.defaults", "qiskit.providers.fake_provider.FakeLima.name", "qiskit.providers.fake_provider.FakeLima.properties", "qiskit.providers.fake_provider.FakeLima.provider", "qiskit.providers.fake_provider.FakeLima.run", "qiskit.providers.fake_provider.FakeLima.set_options", "qiskit.providers.fake_provider.FakeLima.status", "FakeLimaV2", "qiskit.providers.fake_provider.FakeLimaV2.acquire_channel", "qiskit.providers.fake_provider.FakeLimaV2.control_channel", "qiskit.providers.fake_provider.FakeLimaV2.drive_channel", "qiskit.providers.fake_provider.FakeLimaV2.measure_channel", "qiskit.providers.fake_provider.FakeLimaV2.qubit_properties", "qiskit.providers.fake_provider.FakeLimaV2.run", "qiskit.providers.fake_provider.FakeLimaV2.set_options", "FakeLondon", "qiskit.providers.fake_provider.FakeLondon.configuration", "qiskit.providers.fake_provider.FakeLondon.name", "qiskit.providers.fake_provider.FakeLondon.properties", "qiskit.providers.fake_provider.FakeLondon.provider", "qiskit.providers.fake_provider.FakeLondon.run", "qiskit.providers.fake_provider.FakeLondon.set_options", "qiskit.providers.fake_provider.FakeLondon.status", "FakeLondonV2", "qiskit.providers.fake_provider.FakeLondonV2.acquire_channel", "qiskit.providers.fake_provider.FakeLondonV2.control_channel", "qiskit.providers.fake_provider.FakeLondonV2.drive_channel", "qiskit.providers.fake_provider.FakeLondonV2.measure_channel", "qiskit.providers.fake_provider.FakeLondonV2.qubit_properties", "qiskit.providers.fake_provider.FakeLondonV2.run", "qiskit.providers.fake_provider.FakeLondonV2.set_options", "FakeManhattan", "qiskit.providers.fake_provider.FakeManhattan.configuration", "qiskit.providers.fake_provider.FakeManhattan.defaults", "qiskit.providers.fake_provider.FakeManhattan.name", "qiskit.providers.fake_provider.FakeManhattan.properties", "qiskit.providers.fake_provider.FakeManhattan.provider", "qiskit.providers.fake_provider.FakeManhattan.run", "qiskit.providers.fake_provider.FakeManhattan.set_options", "qiskit.providers.fake_provider.FakeManhattan.status", "FakeManhattanV2", "qiskit.providers.fake_provider.FakeManhattanV2.acquire_channel", "qiskit.providers.fake_provider.FakeManhattanV2.control_channel", "qiskit.providers.fake_provider.FakeManhattanV2.drive_channel", "qiskit.providers.fake_provider.FakeManhattanV2.measure_channel", "qiskit.providers.fake_provider.FakeManhattanV2.qubit_properties", "qiskit.providers.fake_provider.FakeManhattanV2.run", "qiskit.providers.fake_provider.FakeManhattanV2.set_options", "FakeManila", "qiskit.providers.fake_provider.FakeManila.configuration", "qiskit.providers.fake_provider.FakeManila.defaults", "qiskit.providers.fake_provider.FakeManila.name", "qiskit.providers.fake_provider.FakeManila.properties", "qiskit.providers.fake_provider.FakeManila.provider", "qiskit.providers.fake_provider.FakeManila.run", "qiskit.providers.fake_provider.FakeManila.set_options", "qiskit.providers.fake_provider.FakeManila.status", "FakeManilaV2", "qiskit.providers.fake_provider.FakeManilaV2.acquire_channel", "qiskit.providers.fake_provider.FakeManilaV2.control_channel", "qiskit.providers.fake_provider.FakeManilaV2.drive_channel", "qiskit.providers.fake_provider.FakeManilaV2.measure_channel", "qiskit.providers.fake_provider.FakeManilaV2.qubit_properties", "qiskit.providers.fake_provider.FakeManilaV2.run", "qiskit.providers.fake_provider.FakeManilaV2.set_options", "FakeMelbourne", "qiskit.providers.fake_provider.FakeMelbourne.configuration", "qiskit.providers.fake_provider.FakeMelbourne.name", "qiskit.providers.fake_provider.FakeMelbourne.properties", "qiskit.providers.fake_provider.FakeMelbourne.provider", "qiskit.providers.fake_provider.FakeMelbourne.run", "qiskit.providers.fake_provider.FakeMelbourne.set_options", "qiskit.providers.fake_provider.FakeMelbourne.status", "FakeMelbourneV2", "qiskit.providers.fake_provider.FakeMelbourneV2.acquire_channel", "qiskit.providers.fake_provider.FakeMelbourneV2.control_channel", "qiskit.providers.fake_provider.FakeMelbourneV2.drive_channel", "qiskit.providers.fake_provider.FakeMelbourneV2.measure_channel", "qiskit.providers.fake_provider.FakeMelbourneV2.qubit_properties", "qiskit.providers.fake_provider.FakeMelbourneV2.run", "qiskit.providers.fake_provider.FakeMelbourneV2.set_options", "FakeMontreal", "qiskit.providers.fake_provider.FakeMontreal.configuration", "qiskit.providers.fake_provider.FakeMontreal.defaults", "qiskit.providers.fake_provider.FakeMontreal.name", "qiskit.providers.fake_provider.FakeMontreal.properties", "qiskit.providers.fake_provider.FakeMontreal.provider", "qiskit.providers.fake_provider.FakeMontreal.run", "qiskit.providers.fake_provider.FakeMontreal.set_options", "qiskit.providers.fake_provider.FakeMontreal.status", "FakeMontrealV2", "qiskit.providers.fake_provider.FakeMontrealV2.acquire_channel", "qiskit.providers.fake_provider.FakeMontrealV2.control_channel", "qiskit.providers.fake_provider.FakeMontrealV2.drive_channel", "qiskit.providers.fake_provider.FakeMontrealV2.measure_channel", "qiskit.providers.fake_provider.FakeMontrealV2.qubit_properties", "qiskit.providers.fake_provider.FakeMontrealV2.run", "qiskit.providers.fake_provider.FakeMontrealV2.set_options", "FakeMumbai", "qiskit.providers.fake_provider.FakeMumbai.configuration", "qiskit.providers.fake_provider.FakeMumbai.defaults", "qiskit.providers.fake_provider.FakeMumbai.name", "qiskit.providers.fake_provider.FakeMumbai.properties", "qiskit.providers.fake_provider.FakeMumbai.provider", "qiskit.providers.fake_provider.FakeMumbai.run", "qiskit.providers.fake_provider.FakeMumbai.set_options", "qiskit.providers.fake_provider.FakeMumbai.status", "FakeMumbaiFractionalCX", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.acquire_channel", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.control_channel", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.drive_channel", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.measure_channel", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.qubit_properties", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.run", "qiskit.providers.fake_provider.FakeMumbaiFractionalCX.set_options", "FakeMumbaiV2", "qiskit.providers.fake_provider.FakeMumbaiV2.acquire_channel", "qiskit.providers.fake_provider.FakeMumbaiV2.control_channel", "qiskit.providers.fake_provider.FakeMumbaiV2.drive_channel", "qiskit.providers.fake_provider.FakeMumbaiV2.measure_channel", "qiskit.providers.fake_provider.FakeMumbaiV2.qubit_properties", "qiskit.providers.fake_provider.FakeMumbaiV2.run", "qiskit.providers.fake_provider.FakeMumbaiV2.set_options", "FakeNairobi", "qiskit.providers.fake_provider.FakeNairobi.configuration", "qiskit.providers.fake_provider.FakeNairobi.defaults", "qiskit.providers.fake_provider.FakeNairobi.name", "qiskit.providers.fake_provider.FakeNairobi.properties", "qiskit.providers.fake_provider.FakeNairobi.provider", "qiskit.providers.fake_provider.FakeNairobi.run", "qiskit.providers.fake_provider.FakeNairobi.set_options", "qiskit.providers.fake_provider.FakeNairobi.status", "FakeNairobiV2", "qiskit.providers.fake_provider.FakeNairobiV2.acquire_channel", "qiskit.providers.fake_provider.FakeNairobiV2.control_channel", "qiskit.providers.fake_provider.FakeNairobiV2.drive_channel", "qiskit.providers.fake_provider.FakeNairobiV2.measure_channel", "qiskit.providers.fake_provider.FakeNairobiV2.qubit_properties", "qiskit.providers.fake_provider.FakeNairobiV2.run", "qiskit.providers.fake_provider.FakeNairobiV2.set_options", "FakeOpenPulse2Q", "qiskit.providers.fake_provider.FakeOpenPulse2Q.configuration", "qiskit.providers.fake_provider.FakeOpenPulse2Q.defaults", "qiskit.providers.fake_provider.FakeOpenPulse2Q.name", "qiskit.providers.fake_provider.FakeOpenPulse2Q.properties", "qiskit.providers.fake_provider.FakeOpenPulse2Q.provider", "qiskit.providers.fake_provider.FakeOpenPulse2Q.run", "qiskit.providers.fake_provider.FakeOpenPulse2Q.set_options", "qiskit.providers.fake_provider.FakeOpenPulse2Q.status", "FakeOpenPulse3Q", "qiskit.providers.fake_provider.FakeOpenPulse3Q.configuration", "qiskit.providers.fake_provider.FakeOpenPulse3Q.defaults", "qiskit.providers.fake_provider.FakeOpenPulse3Q.name", "qiskit.providers.fake_provider.FakeOpenPulse3Q.properties", "qiskit.providers.fake_provider.FakeOpenPulse3Q.provider", "qiskit.providers.fake_provider.FakeOpenPulse3Q.run", "qiskit.providers.fake_provider.FakeOpenPulse3Q.set_options", "qiskit.providers.fake_provider.FakeOpenPulse3Q.status", "FakeOurense", "qiskit.providers.fake_provider.FakeOurense.configuration", "qiskit.providers.fake_provider.FakeOurense.name", "qiskit.providers.fake_provider.FakeOurense.properties", "qiskit.providers.fake_provider.FakeOurense.provider", "qiskit.providers.fake_provider.FakeOurense.run", "qiskit.providers.fake_provider.FakeOurense.set_options", "qiskit.providers.fake_provider.FakeOurense.status", "FakeOurenseV2", "qiskit.providers.fake_provider.FakeOurenseV2.acquire_channel", "qiskit.providers.fake_provider.FakeOurenseV2.control_channel", "qiskit.providers.fake_provider.FakeOurenseV2.drive_channel", "qiskit.providers.fake_provider.FakeOurenseV2.measure_channel", "qiskit.providers.fake_provider.FakeOurenseV2.qubit_properties", "qiskit.providers.fake_provider.FakeOurenseV2.run", "qiskit.providers.fake_provider.FakeOurenseV2.set_options", "FakeParis", "qiskit.providers.fake_provider.FakeParis.configuration", "qiskit.providers.fake_provider.FakeParis.defaults", "qiskit.providers.fake_provider.FakeParis.name", "qiskit.providers.fake_provider.FakeParis.properties", "qiskit.providers.fake_provider.FakeParis.provider", "qiskit.providers.fake_provider.FakeParis.run", "qiskit.providers.fake_provider.FakeParis.set_options", "qiskit.providers.fake_provider.FakeParis.status", "FakeParisV2", "qiskit.providers.fake_provider.FakeParisV2.acquire_channel", "qiskit.providers.fake_provider.FakeParisV2.control_channel", "qiskit.providers.fake_provider.FakeParisV2.drive_channel", "qiskit.providers.fake_provider.FakeParisV2.measure_channel", "qiskit.providers.fake_provider.FakeParisV2.qubit_properties", "qiskit.providers.fake_provider.FakeParisV2.run", "qiskit.providers.fake_provider.FakeParisV2.set_options", "FakePoughkeepsie", "qiskit.providers.fake_provider.FakePoughkeepsie.configuration", "qiskit.providers.fake_provider.FakePoughkeepsie.name", "qiskit.providers.fake_provider.FakePoughkeepsie.properties", "qiskit.providers.fake_provider.FakePoughkeepsie.provider", "qiskit.providers.fake_provider.FakePoughkeepsie.run", "qiskit.providers.fake_provider.FakePoughkeepsie.set_options", "qiskit.providers.fake_provider.FakePoughkeepsie.status", "FakePoughkeepsieV2", "qiskit.providers.fake_provider.FakePoughkeepsieV2.acquire_channel", "qiskit.providers.fake_provider.FakePoughkeepsieV2.control_channel", "qiskit.providers.fake_provider.FakePoughkeepsieV2.drive_channel", "qiskit.providers.fake_provider.FakePoughkeepsieV2.measure_channel", "qiskit.providers.fake_provider.FakePoughkeepsieV2.qubit_properties", "qiskit.providers.fake_provider.FakePoughkeepsieV2.run", "qiskit.providers.fake_provider.FakePoughkeepsieV2.set_options", "FakeProvider", "qiskit.providers.fake_provider.FakeProvider.backends", "qiskit.providers.fake_provider.FakeProvider.get_backend", "FakeProviderForBackendV2", "qiskit.providers.fake_provider.FakeProviderForBackendV2.backends", "qiskit.providers.fake_provider.FakeProviderForBackendV2.get_backend", "FakeQasmSimulator", "qiskit.providers.fake_provider.FakeQasmSimulator.configuration", "qiskit.providers.fake_provider.FakeQasmSimulator.name", "qiskit.providers.fake_provider.FakeQasmSimulator.properties", "qiskit.providers.fake_provider.FakeQasmSimulator.provider", "qiskit.providers.fake_provider.FakeQasmSimulator.run", "qiskit.providers.fake_provider.FakeQasmSimulator.set_options", "qiskit.providers.fake_provider.FakeQasmSimulator.status", "FakeQuito", "qiskit.providers.fake_provider.FakeQuito.configuration", "qiskit.providers.fake_provider.FakeQuito.defaults", "qiskit.providers.fake_provider.FakeQuito.name", "qiskit.providers.fake_provider.FakeQuito.properties", "qiskit.providers.fake_provider.FakeQuito.provider", "qiskit.providers.fake_provider.FakeQuito.run", "qiskit.providers.fake_provider.FakeQuito.set_options", "qiskit.providers.fake_provider.FakeQuito.status", "FakeQuitoV2", "qiskit.providers.fake_provider.FakeQuitoV2.acquire_channel", "qiskit.providers.fake_provider.FakeQuitoV2.control_channel", "qiskit.providers.fake_provider.FakeQuitoV2.drive_channel", "qiskit.providers.fake_provider.FakeQuitoV2.measure_channel", "qiskit.providers.fake_provider.FakeQuitoV2.qubit_properties", "qiskit.providers.fake_provider.FakeQuitoV2.run", "qiskit.providers.fake_provider.FakeQuitoV2.set_options", "FakeRochester", "qiskit.providers.fake_provider.FakeRochester.configuration", "qiskit.providers.fake_provider.FakeRochester.name", "qiskit.providers.fake_provider.FakeRochester.properties", "qiskit.providers.fake_provider.FakeRochester.provider", "qiskit.providers.fake_provider.FakeRochester.run", "qiskit.providers.fake_provider.FakeRochester.set_options", "qiskit.providers.fake_provider.FakeRochester.status", "FakeRochesterV2", "qiskit.providers.fake_provider.FakeRochesterV2.acquire_channel", "qiskit.providers.fake_provider.FakeRochesterV2.control_channel", "qiskit.providers.fake_provider.FakeRochesterV2.drive_channel", "qiskit.providers.fake_provider.FakeRochesterV2.measure_channel", "qiskit.providers.fake_provider.FakeRochesterV2.qubit_properties", "qiskit.providers.fake_provider.FakeRochesterV2.run", "qiskit.providers.fake_provider.FakeRochesterV2.set_options", "FakeRome", "qiskit.providers.fake_provider.FakeRome.configuration", "qiskit.providers.fake_provider.FakeRome.defaults", "qiskit.providers.fake_provider.FakeRome.name", "qiskit.providers.fake_provider.FakeRome.properties", "qiskit.providers.fake_provider.FakeRome.provider", "qiskit.providers.fake_provider.FakeRome.run", "qiskit.providers.fake_provider.FakeRome.set_options", "qiskit.providers.fake_provider.FakeRome.status", "FakeRomeV2", "qiskit.providers.fake_provider.FakeRomeV2.acquire_channel", "qiskit.providers.fake_provider.FakeRomeV2.control_channel", "qiskit.providers.fake_provider.FakeRomeV2.drive_channel", "qiskit.providers.fake_provider.FakeRomeV2.measure_channel", "qiskit.providers.fake_provider.FakeRomeV2.qubit_properties", "qiskit.providers.fake_provider.FakeRomeV2.run", "qiskit.providers.fake_provider.FakeRomeV2.set_options", "FakeRueschlikon", "qiskit.providers.fake_provider.FakeRueschlikon.configuration", "qiskit.providers.fake_provider.FakeRueschlikon.name", "qiskit.providers.fake_provider.FakeRueschlikon.properties", "qiskit.providers.fake_provider.FakeRueschlikon.provider", "qiskit.providers.fake_provider.FakeRueschlikon.run", "qiskit.providers.fake_provider.FakeRueschlikon.set_options", "qiskit.providers.fake_provider.FakeRueschlikon.status", "FakeSantiago", "qiskit.providers.fake_provider.FakeSantiago.configuration", "qiskit.providers.fake_provider.FakeSantiago.defaults", "qiskit.providers.fake_provider.FakeSantiago.name", "qiskit.providers.fake_provider.FakeSantiago.properties", "qiskit.providers.fake_provider.FakeSantiago.provider", "qiskit.providers.fake_provider.FakeSantiago.run", "qiskit.providers.fake_provider.FakeSantiago.set_options", "qiskit.providers.fake_provider.FakeSantiago.status", "FakeSantiagoV2", "qiskit.providers.fake_provider.FakeSantiagoV2.acquire_channel", "qiskit.providers.fake_provider.FakeSantiagoV2.control_channel", "qiskit.providers.fake_provider.FakeSantiagoV2.drive_channel", "qiskit.providers.fake_provider.FakeSantiagoV2.measure_channel", "qiskit.providers.fake_provider.FakeSantiagoV2.qubit_properties", "qiskit.providers.fake_provider.FakeSantiagoV2.run", "qiskit.providers.fake_provider.FakeSantiagoV2.set_options", "FakeSingapore", "qiskit.providers.fake_provider.FakeSingapore.configuration", "qiskit.providers.fake_provider.FakeSingapore.defaults", "qiskit.providers.fake_provider.FakeSingapore.name", "qiskit.providers.fake_provider.FakeSingapore.properties", "qiskit.providers.fake_provider.FakeSingapore.provider", "qiskit.providers.fake_provider.FakeSingapore.run", "qiskit.providers.fake_provider.FakeSingapore.set_options", "qiskit.providers.fake_provider.FakeSingapore.status", "FakeSingaporeV2", "qiskit.providers.fake_provider.FakeSingaporeV2.acquire_channel", "qiskit.providers.fake_provider.FakeSingaporeV2.control_channel", "qiskit.providers.fake_provider.FakeSingaporeV2.drive_channel", "qiskit.providers.fake_provider.FakeSingaporeV2.measure_channel", "qiskit.providers.fake_provider.FakeSingaporeV2.qubit_properties", "qiskit.providers.fake_provider.FakeSingaporeV2.run", "qiskit.providers.fake_provider.FakeSingaporeV2.set_options", "FakeSydney", "qiskit.providers.fake_provider.FakeSydney.configuration", "qiskit.providers.fake_provider.FakeSydney.defaults", "qiskit.providers.fake_provider.FakeSydney.name", "qiskit.providers.fake_provider.FakeSydney.properties", "qiskit.providers.fake_provider.FakeSydney.provider", "qiskit.providers.fake_provider.FakeSydney.run", "qiskit.providers.fake_provider.FakeSydney.set_options", "qiskit.providers.fake_provider.FakeSydney.status", "FakeSydneyV2", "qiskit.providers.fake_provider.FakeSydneyV2.acquire_channel", "qiskit.providers.fake_provider.FakeSydneyV2.control_channel", "qiskit.providers.fake_provider.FakeSydneyV2.drive_channel", "qiskit.providers.fake_provider.FakeSydneyV2.measure_channel", "qiskit.providers.fake_provider.FakeSydneyV2.qubit_properties", "qiskit.providers.fake_provider.FakeSydneyV2.run", "qiskit.providers.fake_provider.FakeSydneyV2.set_options", "FakeTenerife", "qiskit.providers.fake_provider.FakeTenerife.configuration", "qiskit.providers.fake_provider.FakeTenerife.name", "qiskit.providers.fake_provider.FakeTenerife.properties", "qiskit.providers.fake_provider.FakeTenerife.provider", "qiskit.providers.fake_provider.FakeTenerife.run", "qiskit.providers.fake_provider.FakeTenerife.set_options", "qiskit.providers.fake_provider.FakeTenerife.status", "FakeTokyo", "qiskit.providers.fake_provider.FakeTokyo.configuration", "qiskit.providers.fake_provider.FakeTokyo.name", "qiskit.providers.fake_provider.FakeTokyo.properties", "qiskit.providers.fake_provider.FakeTokyo.provider", "qiskit.providers.fake_provider.FakeTokyo.run", "qiskit.providers.fake_provider.FakeTokyo.set_options", "qiskit.providers.fake_provider.FakeTokyo.status", "FakeToronto", "qiskit.providers.fake_provider.FakeToronto.configuration", "qiskit.providers.fake_provider.FakeToronto.defaults", "qiskit.providers.fake_provider.FakeToronto.name", "qiskit.providers.fake_provider.FakeToronto.properties", "qiskit.providers.fake_provider.FakeToronto.provider", "qiskit.providers.fake_provider.FakeToronto.run", "qiskit.providers.fake_provider.FakeToronto.set_options", "qiskit.providers.fake_provider.FakeToronto.status", "FakeTorontoV2", "qiskit.providers.fake_provider.FakeTorontoV2.acquire_channel", "qiskit.providers.fake_provider.FakeTorontoV2.control_channel", "qiskit.providers.fake_provider.FakeTorontoV2.drive_channel", "qiskit.providers.fake_provider.FakeTorontoV2.measure_channel", "qiskit.providers.fake_provider.FakeTorontoV2.qubit_properties", "qiskit.providers.fake_provider.FakeTorontoV2.run", "qiskit.providers.fake_provider.FakeTorontoV2.set_options", "FakeValencia", "qiskit.providers.fake_provider.FakeValencia.configuration", "qiskit.providers.fake_provider.FakeValencia.defaults", "qiskit.providers.fake_provider.FakeValencia.name", "qiskit.providers.fake_provider.FakeValencia.properties", "qiskit.providers.fake_provider.FakeValencia.provider", "qiskit.providers.fake_provider.FakeValencia.run", "qiskit.providers.fake_provider.FakeValencia.set_options", "qiskit.providers.fake_provider.FakeValencia.status", "FakeValenciaV2", "qiskit.providers.fake_provider.FakeValenciaV2.acquire_channel", "qiskit.providers.fake_provider.FakeValenciaV2.control_channel", "qiskit.providers.fake_provider.FakeValenciaV2.drive_channel", "qiskit.providers.fake_provider.FakeValenciaV2.measure_channel", "qiskit.providers.fake_provider.FakeValenciaV2.qubit_properties", "qiskit.providers.fake_provider.FakeValenciaV2.run", "qiskit.providers.fake_provider.FakeValenciaV2.set_options", "FakeVigo", "qiskit.providers.fake_provider.FakeVigo.configuration", "qiskit.providers.fake_provider.FakeVigo.name", "qiskit.providers.fake_provider.FakeVigo.properties", "qiskit.providers.fake_provider.FakeVigo.provider", "qiskit.providers.fake_provider.FakeVigo.run", "qiskit.providers.fake_provider.FakeVigo.set_options", "qiskit.providers.fake_provider.FakeVigo.status", "FakeVigoV2", "qiskit.providers.fake_provider.FakeVigoV2.acquire_channel", "qiskit.providers.fake_provider.FakeVigoV2.control_channel", "qiskit.providers.fake_provider.FakeVigoV2.drive_channel", "qiskit.providers.fake_provider.FakeVigoV2.measure_channel", "qiskit.providers.fake_provider.FakeVigoV2.qubit_properties", "qiskit.providers.fake_provider.FakeVigoV2.run", "qiskit.providers.fake_provider.FakeVigoV2.set_options", "FakeWashington", "qiskit.providers.fake_provider.FakeWashington.configuration", "qiskit.providers.fake_provider.FakeWashington.defaults", "qiskit.providers.fake_provider.FakeWashington.name", "qiskit.providers.fake_provider.FakeWashington.properties", "qiskit.providers.fake_provider.FakeWashington.provider", "qiskit.providers.fake_provider.FakeWashington.run", "qiskit.providers.fake_provider.FakeWashington.set_options", "qiskit.providers.fake_provider.FakeWashington.status", "FakeWashingtonV2", "qiskit.providers.fake_provider.FakeWashingtonV2.acquire_channel", "qiskit.providers.fake_provider.FakeWashingtonV2.control_channel", "qiskit.providers.fake_provider.FakeWashingtonV2.drive_channel", "qiskit.providers.fake_provider.FakeWashingtonV2.measure_channel", "qiskit.providers.fake_provider.FakeWashingtonV2.qubit_properties", "qiskit.providers.fake_provider.FakeWashingtonV2.run", "qiskit.providers.fake_provider.FakeWashingtonV2.set_options", "FakeYorktown", "qiskit.providers.fake_provider.FakeYorktown.configuration", "qiskit.providers.fake_provider.FakeYorktown.name", "qiskit.providers.fake_provider.FakeYorktown.properties", "qiskit.providers.fake_provider.FakeYorktown.provider", "qiskit.providers.fake_provider.FakeYorktown.run", "qiskit.providers.fake_provider.FakeYorktown.set_options", "qiskit.providers.fake_provider.FakeYorktown.status", "FakeYorktownV2", "qiskit.providers.fake_provider.FakeYorktownV2.acquire_channel", "qiskit.providers.fake_provider.FakeYorktownV2.control_channel", "qiskit.providers.fake_provider.FakeYorktownV2.drive_channel", "qiskit.providers.fake_provider.FakeYorktownV2.measure_channel", "qiskit.providers.fake_provider.FakeYorktownV2.qubit_properties", "qiskit.providers.fake_provider.FakeYorktownV2.run", "qiskit.providers.fake_provider.FakeYorktownV2.set_options", "AccountProvider", "qiskit.providers.ibmq.AccountProvider.backends", "qiskit.providers.ibmq.AccountProvider.get_backend", "qiskit.providers.ibmq.AccountProvider.has_service", "qiskit.providers.ibmq.AccountProvider.run_circuits", "qiskit.providers.ibmq.AccountProvider.service", "qiskit.providers.ibmq.AccountProvider.services", "BackendJobLimit", "qiskit.providers.ibmq.IBMQAccountCredentialsInvalidFormat", "qiskit.providers.ibmq.IBMQAccountCredentialsInvalidToken", "qiskit.providers.ibmq.IBMQAccountCredentialsInvalidUrl", "qiskit.providers.ibmq.IBMQAccountCredentialsNotFound", "qiskit.providers.ibmq.IBMQAccountError", "qiskit.providers.ibmq.IBMQAccountMultipleCredentialsFound", "IBMQBackend", "qiskit.providers.ibmq.IBMQBackend.active_jobs", "qiskit.providers.ibmq.IBMQBackend.configuration", "qiskit.providers.ibmq.IBMQBackend.defaults", "qiskit.providers.ibmq.IBMQBackend.job_limit", "qiskit.providers.ibmq.IBMQBackend.jobs", "qiskit.providers.ibmq.IBMQBackend.name", "qiskit.providers.ibmq.IBMQBackend.properties", "qiskit.providers.ibmq.IBMQBackend.provider", "qiskit.providers.ibmq.IBMQBackend.remaining_jobs_count", "qiskit.providers.ibmq.IBMQBackend.reservations", "qiskit.providers.ibmq.IBMQBackend.retrieve_job", "qiskit.providers.ibmq.IBMQBackend.run", "qiskit.providers.ibmq.IBMQBackend.set_options", "qiskit.providers.ibmq.IBMQBackend.status", "qiskit.providers.ibmq.IBMQBackendApiError", "qiskit.providers.ibmq.IBMQBackendApiProtocolError", "qiskit.providers.ibmq.IBMQBackendError", "IBMQBackendService", "qiskit.providers.ibmq.IBMQBackendService.backends", "qiskit.providers.ibmq.IBMQBackendService.job_ids", "qiskit.providers.ibmq.IBMQBackendService.jobs", "qiskit.providers.ibmq.IBMQBackendService.my_reservations", "qiskit.providers.ibmq.IBMQBackendService.retrieve_job", "qiskit.providers.ibmq.IBMQBackendValueError", "qiskit.providers.ibmq.IBMQError", "IBMQFactory", "qiskit.providers.ibmq.IBMQFactory.active_account", "qiskit.providers.ibmq.IBMQFactory.delete_account", "qiskit.providers.ibmq.IBMQFactory.disable_account", "qiskit.providers.ibmq.IBMQFactory.enable_account", "qiskit.providers.ibmq.IBMQFactory.get_provider", "qiskit.providers.ibmq.IBMQFactory.load_account", "qiskit.providers.ibmq.IBMQFactory.providers", "qiskit.providers.ibmq.IBMQFactory.save_account", "qiskit.providers.ibmq.IBMQFactory.stored_account", "qiskit.providers.ibmq.IBMQFactory.update_account", "qiskit.providers.ibmq.IBMQProviderError", "RunnerResult", "qiskit.providers.ibmq.RunnerResult.data", "qiskit.providers.ibmq.RunnerResult.decode", "qiskit.providers.ibmq.RunnerResult.from_dict", "qiskit.providers.ibmq.RunnerResult.get_counts", "qiskit.providers.ibmq.RunnerResult.get_memory", "qiskit.providers.ibmq.RunnerResult.get_quasiprobabilities", "qiskit.providers.ibmq.RunnerResult.get_statevector", "qiskit.providers.ibmq.RunnerResult.get_unitary", "qiskit.providers.ibmq.RunnerResult.to_dict", "Credentials", "qiskit.providers.ibmq.credentials.Credentials.connection_parameters", "qiskit.providers.ibmq.credentials.Credentials.is_ibmq", "qiskit.providers.ibmq.credentials.Credentials.unique_id", "qiskit.providers.ibmq.credentials.CredentialsError", "qiskit.providers.ibmq.credentials.CredentialsNotFoundError", "qiskit.providers.ibmq.credentials.InvalidCredentialsFormatError", "DeviceComponent", "qiskit.providers.ibmq.experiment.IBMExperimentEntryExists", "qiskit.providers.ibmq.experiment.IBMExperimentEntryNotFound", "qiskit.providers.ibmq.experiment.IBMExperimentError", "IBMExperimentService", "qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_result", "qiskit.providers.ibmq.experiment.IBMExperimentService.analysis_results", "qiskit.providers.ibmq.experiment.IBMExperimentService.backends", "qiskit.providers.ibmq.experiment.IBMExperimentService.create_analysis_result", "qiskit.providers.ibmq.experiment.IBMExperimentService.create_experiment", "qiskit.providers.ibmq.experiment.IBMExperimentService.create_figure", "qiskit.providers.ibmq.experiment.IBMExperimentService.delete_analysis_result", "qiskit.providers.ibmq.experiment.IBMExperimentService.delete_experiment", "qiskit.providers.ibmq.experiment.IBMExperimentService.delete_figure", "qiskit.providers.ibmq.experiment.IBMExperimentService.device_components", "qiskit.providers.ibmq.experiment.IBMExperimentService.experiment", "qiskit.providers.ibmq.experiment.IBMExperimentService.experiments", "qiskit.providers.ibmq.experiment.IBMExperimentService.figure", "qiskit.providers.ibmq.experiment.IBMExperimentService.save_preferences", "qiskit.providers.ibmq.experiment.IBMExperimentService.update_analysis_result", "qiskit.providers.ibmq.experiment.IBMExperimentService.update_experiment", "qiskit.providers.ibmq.experiment.IBMExperimentService.update_figure", "ResultQuality", "IBMQJob", "qiskit.providers.ibmq.job.IBMQJob.backend", "qiskit.providers.ibmq.job.IBMQJob.backend_options", "qiskit.providers.ibmq.job.IBMQJob.cancel", "qiskit.providers.ibmq.job.IBMQJob.cancelled", "qiskit.providers.ibmq.job.IBMQJob.circuits", "qiskit.providers.ibmq.job.IBMQJob.creation_date", "qiskit.providers.ibmq.job.IBMQJob.done", "qiskit.providers.ibmq.job.IBMQJob.error_message", "qiskit.providers.ibmq.job.IBMQJob.header", "qiskit.providers.ibmq.job.IBMQJob.in_final_state", "qiskit.providers.ibmq.job.IBMQJob.job_id", "qiskit.providers.ibmq.job.IBMQJob.name", "qiskit.providers.ibmq.job.IBMQJob.properties", "qiskit.providers.ibmq.job.IBMQJob.qobj", "qiskit.providers.ibmq.job.IBMQJob.queue_info", "qiskit.providers.ibmq.job.IBMQJob.queue_position", "qiskit.providers.ibmq.job.IBMQJob.refresh", "qiskit.providers.ibmq.job.IBMQJob.result", "qiskit.providers.ibmq.job.IBMQJob.running", "qiskit.providers.ibmq.job.IBMQJob.scheduling_mode", "qiskit.providers.ibmq.job.IBMQJob.share_level", "qiskit.providers.ibmq.job.IBMQJob.status", "qiskit.providers.ibmq.job.IBMQJob.submit", "qiskit.providers.ibmq.job.IBMQJob.tags", "qiskit.providers.ibmq.job.IBMQJob.time_per_step", "qiskit.providers.ibmq.job.IBMQJob.update_name", "qiskit.providers.ibmq.job.IBMQJob.update_tags", "qiskit.providers.ibmq.job.IBMQJob.wait_for_final_state", "qiskit.providers.ibmq.job.IBMQJobApiError", "qiskit.providers.ibmq.job.IBMQJobError", "qiskit.providers.ibmq.job.IBMQJobFailureError", "qiskit.providers.ibmq.job.IBMQJobInvalidStateError", "qiskit.providers.ibmq.job.IBMQJobTimeoutError", "QueueInfo", "qiskit.providers.ibmq.job.QueueInfo.format", "qiskit.providers.ibmq.job.job_monitor", "qiskit.providers.ibmq.least_busy", "IBMQJobManager", "qiskit.providers.ibmq.managed.IBMQJobManager.job_sets", "qiskit.providers.ibmq.managed.IBMQJobManager.report", "qiskit.providers.ibmq.managed.IBMQJobManager.retrieve_job_set", "qiskit.providers.ibmq.managed.IBMQJobManager.run", "qiskit.providers.ibmq.managed.IBMQJobManagerError", "qiskit.providers.ibmq.managed.IBMQJobManagerInvalidStateError", "qiskit.providers.ibmq.managed.IBMQJobManagerJobNotFound", "qiskit.providers.ibmq.managed.IBMQJobManagerTimeoutError", "qiskit.providers.ibmq.managed.IBMQJobManagerUnknownJobSet", "qiskit.providers.ibmq.managed.IBMQManagedResultDataNotAvailable", "ManagedJob", "qiskit.providers.ibmq.managed.ManagedJob.cancel", "qiskit.providers.ibmq.managed.ManagedJob.error_message", "qiskit.providers.ibmq.managed.ManagedJob.qobj", "qiskit.providers.ibmq.managed.ManagedJob.result", "qiskit.providers.ibmq.managed.ManagedJob.status", "qiskit.providers.ibmq.managed.ManagedJob.submit", "ManagedJobSet", "qiskit.providers.ibmq.managed.ManagedJobSet.cancel", "qiskit.providers.ibmq.managed.ManagedJobSet.error_messages", "qiskit.providers.ibmq.managed.ManagedJobSet.job", "qiskit.providers.ibmq.managed.ManagedJobSet.job_set_id", "qiskit.providers.ibmq.managed.ManagedJobSet.jobs", "qiskit.providers.ibmq.managed.ManagedJobSet.managed_jobs", "qiskit.providers.ibmq.managed.ManagedJobSet.name", "qiskit.providers.ibmq.managed.ManagedJobSet.qobjs", "qiskit.providers.ibmq.managed.ManagedJobSet.report", "qiskit.providers.ibmq.managed.ManagedJobSet.results", "qiskit.providers.ibmq.managed.ManagedJobSet.retrieve_jobs", "qiskit.providers.ibmq.managed.ManagedJobSet.run", "qiskit.providers.ibmq.managed.ManagedJobSet.statuses", "qiskit.providers.ibmq.managed.ManagedJobSet.tags", "qiskit.providers.ibmq.managed.ManagedJobSet.update_name", "qiskit.providers.ibmq.managed.ManagedJobSet.update_tags", "ManagedResults", "qiskit.providers.ibmq.managed.ManagedResults.combine_results", "qiskit.providers.ibmq.managed.ManagedResults.data", "qiskit.providers.ibmq.managed.ManagedResults.get_counts", "qiskit.providers.ibmq.managed.ManagedResults.get_memory", "qiskit.providers.ibmq.managed.ManagedResults.get_statevector", "qiskit.providers.ibmq.managed.ManagedResults.get_unitary", "IBMRuntimeService", "qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_job", "qiskit.providers.ibmq.runtime.IBMRuntimeService.delete_program", "qiskit.providers.ibmq.runtime.IBMRuntimeService.job", "qiskit.providers.ibmq.runtime.IBMRuntimeService.jobs", "qiskit.providers.ibmq.runtime.IBMRuntimeService.logout", "qiskit.providers.ibmq.runtime.IBMRuntimeService.pprint_programs", "qiskit.providers.ibmq.runtime.IBMRuntimeService.program", "qiskit.providers.ibmq.runtime.IBMRuntimeService.programs", "qiskit.providers.ibmq.runtime.IBMRuntimeService.run", "qiskit.providers.ibmq.runtime.IBMRuntimeService.set_program_visibility", "qiskit.providers.ibmq.runtime.IBMRuntimeService.update_program", "qiskit.providers.ibmq.runtime.IBMRuntimeService.upload_program", "ParameterNamespace", "qiskit.providers.ibmq.runtime.ParameterNamespace.validate", "ProgramBackend", "qiskit.providers.ibmq.runtime.ProgramBackend.configuration", "qiskit.providers.ibmq.runtime.ProgramBackend.name", "qiskit.providers.ibmq.runtime.ProgramBackend.properties", "qiskit.providers.ibmq.runtime.ProgramBackend.provider", "qiskit.providers.ibmq.runtime.ProgramBackend.run", "qiskit.providers.ibmq.runtime.ProgramBackend.set_options", "qiskit.providers.ibmq.runtime.ProgramBackend.status", "ResultDecoder", "qiskit.providers.ibmq.runtime.ResultDecoder.decode", "RuntimeDecoder", "qiskit.providers.ibmq.runtime.RuntimeDecoder.decode", "qiskit.providers.ibmq.runtime.RuntimeDecoder.object_hook", "qiskit.providers.ibmq.runtime.RuntimeDecoder.raw_decode", "RuntimeEncoder", "qiskit.providers.ibmq.runtime.RuntimeEncoder.default", "qiskit.providers.ibmq.runtime.RuntimeEncoder.encode", "qiskit.providers.ibmq.runtime.RuntimeEncoder.iterencode", "RuntimeJob", "qiskit.providers.ibmq.runtime.RuntimeJob.backend", "qiskit.providers.ibmq.runtime.RuntimeJob.cancel", "qiskit.providers.ibmq.runtime.RuntimeJob.cancel_result_streaming", "qiskit.providers.ibmq.runtime.RuntimeJob.error_message", "qiskit.providers.ibmq.runtime.RuntimeJob.job_id", "qiskit.providers.ibmq.runtime.RuntimeJob.logs", "qiskit.providers.ibmq.runtime.RuntimeJob.result", "qiskit.providers.ibmq.runtime.RuntimeJob.status", "qiskit.providers.ibmq.runtime.RuntimeJob.stream_results", "qiskit.providers.ibmq.runtime.RuntimeJob.wait_for_final_state", "RuntimeOptions", "qiskit.providers.ibmq.runtime.RuntimeOptions.validate", "RuntimeProgram", "qiskit.providers.ibmq.runtime.RuntimeProgram.parameters", "qiskit.providers.ibmq.runtime.RuntimeProgram.to_dict", "UserMessenger", "qiskit.providers.ibmq.runtime.UserMessenger.publish", "qiskit.providers.ibmq.utils.seconds_to_duration", "qiskit.providers.ibmq.utils.to_python_identifier", "qiskit.providers.ibmq.utils.update_qobj_config", "qiskit.providers.ibmq.utils.utc_to_local", "qiskit.providers.ibmq.utils.validate_job_tags", "BackendConfiguration", "qiskit.providers.models.BackendConfiguration.from_dict", "qiskit.providers.models.BackendConfiguration.to_dict", "BackendProperties", "qiskit.providers.models.BackendProperties.faulty_gates", "qiskit.providers.models.BackendProperties.faulty_qubits", "qiskit.providers.models.BackendProperties.frequency", "qiskit.providers.models.BackendProperties.from_dict", "qiskit.providers.models.BackendProperties.gate_error", "qiskit.providers.models.BackendProperties.gate_length", "qiskit.providers.models.BackendProperties.gate_property", "qiskit.providers.models.BackendProperties.is_gate_operational", "qiskit.providers.models.BackendProperties.is_qubit_operational", "qiskit.providers.models.BackendProperties.qubit_property", "qiskit.providers.models.BackendProperties.readout_error", "qiskit.providers.models.BackendProperties.readout_length", "qiskit.providers.models.BackendProperties.t1", "qiskit.providers.models.BackendProperties.t2", "qiskit.providers.models.BackendProperties.to_dict", "BackendStatus", "qiskit.providers.models.BackendStatus.from_dict", "qiskit.providers.models.BackendStatus.to_dict", "Command", "qiskit.providers.models.Command.from_dict", "qiskit.providers.models.Command.to_dict", "GateConfig", "qiskit.providers.models.GateConfig.from_dict", "qiskit.providers.models.GateConfig.to_dict", "JobStatus", "qiskit.providers.models.JobStatus.from_dict", "qiskit.providers.models.JobStatus.to_dict", "PulseBackendConfiguration", "qiskit.providers.models.PulseBackendConfiguration.acquire", "qiskit.providers.models.PulseBackendConfiguration.control", "qiskit.providers.models.PulseBackendConfiguration.describe", "qiskit.providers.models.PulseBackendConfiguration.drive", "qiskit.providers.models.PulseBackendConfiguration.from_dict", "qiskit.providers.models.PulseBackendConfiguration.get_channel_qubits", "qiskit.providers.models.PulseBackendConfiguration.get_qubit_channels", "qiskit.providers.models.PulseBackendConfiguration.measure", "qiskit.providers.models.PulseBackendConfiguration.to_dict", "PulseDefaults", "qiskit.providers.models.PulseDefaults.from_dict", "qiskit.providers.models.PulseDefaults.to_dict", "QasmBackendConfiguration", "qiskit.providers.models.QasmBackendConfiguration.from_dict", "qiskit.providers.models.QasmBackendConfiguration.to_dict", "UchannelLO", "qiskit.providers.models.UchannelLO.from_dict", "qiskit.providers.models.UchannelLO.to_dict", "InstructionScheduleMap", "qiskit.pulse.InstructionScheduleMap.add", "qiskit.pulse.InstructionScheduleMap.assert_has", "qiskit.pulse.InstructionScheduleMap.get", "qiskit.pulse.InstructionScheduleMap.get_parameters", "qiskit.pulse.InstructionScheduleMap.has", "qiskit.pulse.InstructionScheduleMap.has_custom_gate", "qiskit.pulse.InstructionScheduleMap.pop", "qiskit.pulse.InstructionScheduleMap.qubit_instructions", "qiskit.pulse.InstructionScheduleMap.qubits_with_instruction", "qiskit.pulse.InstructionScheduleMap.remove", "Schedule", "qiskit.pulse.Schedule.append", "qiskit.pulse.Schedule.assign_parameters", "qiskit.pulse.Schedule.ch_duration", "qiskit.pulse.Schedule.ch_start_time", "qiskit.pulse.Schedule.ch_stop_time", "qiskit.pulse.Schedule.draw", "qiskit.pulse.Schedule.exclude", "qiskit.pulse.Schedule.filter", "qiskit.pulse.Schedule.get_parameters", "qiskit.pulse.Schedule.initialize_from", "qiskit.pulse.Schedule.insert", "qiskit.pulse.Schedule.is_parameterized", "qiskit.pulse.Schedule.replace", "qiskit.pulse.Schedule.shift", "ScheduleBlock", "qiskit.pulse.ScheduleBlock.append", "qiskit.pulse.ScheduleBlock.assign_parameters", "qiskit.pulse.ScheduleBlock.ch_duration", "qiskit.pulse.ScheduleBlock.draw", "qiskit.pulse.ScheduleBlock.exclude", "qiskit.pulse.ScheduleBlock.filter", "qiskit.pulse.ScheduleBlock.get_parameters", "qiskit.pulse.ScheduleBlock.initialize_from", "qiskit.pulse.ScheduleBlock.is_parameterized", "qiskit.pulse.ScheduleBlock.is_schedulable", "qiskit.pulse.ScheduleBlock.replace", "qiskit.pulse.builder.acquire", "qiskit.pulse.builder.acquire_channel", "qiskit.pulse.builder.active_backend", "qiskit.pulse.builder.active_circuit_scheduler_settings", "qiskit.pulse.builder.active_transpiler_settings", "qiskit.pulse.builder.align_equispaced", "qiskit.pulse.builder.align_func", "qiskit.pulse.builder.align_left", "qiskit.pulse.builder.align_right", "qiskit.pulse.builder.align_sequential", "qiskit.pulse.builder.barrier", "qiskit.pulse.builder.build", "qiskit.pulse.builder.call", "qiskit.pulse.builder.circuit_scheduler_settings", "qiskit.pulse.builder.control_channels", "qiskit.pulse.builder.cx", "qiskit.pulse.builder.delay", "qiskit.pulse.builder.delay_qubits", "qiskit.pulse.builder.drive_channel", "qiskit.pulse.builder.frequency_offset", "qiskit.pulse.builder.inline", "qiskit.pulse.builder.measure", "qiskit.pulse.builder.measure_all", "qiskit.pulse.builder.measure_channel", "qiskit.pulse.builder.num_qubits", "qiskit.pulse.builder.pad", "qiskit.pulse.builder.phase_offset", "qiskit.pulse.builder.play", "qiskit.pulse.builder.qubit_channels", "qiskit.pulse.builder.samples_to_seconds", "qiskit.pulse.builder.seconds_to_samples", "qiskit.pulse.builder.set_frequency", "qiskit.pulse.builder.set_phase", "qiskit.pulse.builder.shift_frequency", "qiskit.pulse.builder.shift_phase", "qiskit.pulse.builder.snapshot", "qiskit.pulse.builder.transpiler_settings", "qiskit.pulse.builder.u1", "qiskit.pulse.builder.u2", "qiskit.pulse.builder.u3", "qiskit.pulse.builder.x", "AcquireChannel", "qiskit.pulse.channels.AcquireChannel.is_parameterized", "ControlChannel", "qiskit.pulse.channels.ControlChannel.is_parameterized", "DriveChannel", "qiskit.pulse.channels.DriveChannel.is_parameterized", "MeasureChannel", "qiskit.pulse.channels.MeasureChannel.is_parameterized", "MemorySlot", "qiskit.pulse.channels.MemorySlot.is_parameterized", "RegisterSlot", "qiskit.pulse.channels.RegisterSlot.is_parameterized", "SnapshotChannel", "qiskit.pulse.channels.SnapshotChannel.is_parameterized", "Acquire", "qiskit.pulse.instructions.Acquire.append", "qiskit.pulse.instructions.Acquire.ch_duration", "qiskit.pulse.instructions.Acquire.ch_start_time", "qiskit.pulse.instructions.Acquire.ch_stop_time", "qiskit.pulse.instructions.Acquire.draw", "qiskit.pulse.instructions.Acquire.insert", "qiskit.pulse.instructions.Acquire.is_parameterized", "qiskit.pulse.instructions.Acquire.shift", "Call", "qiskit.pulse.instructions.Call.append", "qiskit.pulse.instructions.Call.assigned_subroutine", "qiskit.pulse.instructions.Call.ch_duration", "qiskit.pulse.instructions.Call.ch_start_time", "qiskit.pulse.instructions.Call.ch_stop_time", "qiskit.pulse.instructions.Call.draw", "qiskit.pulse.instructions.Call.insert", "qiskit.pulse.instructions.Call.is_parameterized", "qiskit.pulse.instructions.Call.shift", "Delay", "qiskit.pulse.instructions.Delay.append", "qiskit.pulse.instructions.Delay.ch_duration", "qiskit.pulse.instructions.Delay.ch_start_time", "qiskit.pulse.instructions.Delay.ch_stop_time", "qiskit.pulse.instructions.Delay.draw", "qiskit.pulse.instructions.Delay.insert", "qiskit.pulse.instructions.Delay.is_parameterized", "qiskit.pulse.instructions.Delay.shift", "Play", "qiskit.pulse.instructions.Play.append", "qiskit.pulse.instructions.Play.ch_duration", "qiskit.pulse.instructions.Play.ch_start_time", "qiskit.pulse.instructions.Play.ch_stop_time", "qiskit.pulse.instructions.Play.draw", "qiskit.pulse.instructions.Play.insert", "qiskit.pulse.instructions.Play.is_parameterized", "qiskit.pulse.instructions.Play.shift", "SetFrequency", "qiskit.pulse.instructions.SetFrequency.append", "qiskit.pulse.instructions.SetFrequency.ch_duration", "qiskit.pulse.instructions.SetFrequency.ch_start_time", "qiskit.pulse.instructions.SetFrequency.ch_stop_time", "qiskit.pulse.instructions.SetFrequency.draw", "qiskit.pulse.instructions.SetFrequency.insert", "qiskit.pulse.instructions.SetFrequency.is_parameterized", "qiskit.pulse.instructions.SetFrequency.shift", "SetPhase", "qiskit.pulse.instructions.SetPhase.append", "qiskit.pulse.instructions.SetPhase.ch_duration", "qiskit.pulse.instructions.SetPhase.ch_start_time", "qiskit.pulse.instructions.SetPhase.ch_stop_time", "qiskit.pulse.instructions.SetPhase.draw", "qiskit.pulse.instructions.SetPhase.insert", "qiskit.pulse.instructions.SetPhase.is_parameterized", "qiskit.pulse.instructions.SetPhase.shift", "ShiftFrequency", "qiskit.pulse.instructions.ShiftFrequency.append", "qiskit.pulse.instructions.ShiftFrequency.ch_duration", "qiskit.pulse.instructions.ShiftFrequency.ch_start_time", "qiskit.pulse.instructions.ShiftFrequency.ch_stop_time", "qiskit.pulse.instructions.ShiftFrequency.draw", "qiskit.pulse.instructions.ShiftFrequency.insert", "qiskit.pulse.instructions.ShiftFrequency.is_parameterized", "qiskit.pulse.instructions.ShiftFrequency.shift", "ShiftPhase", "qiskit.pulse.instructions.ShiftPhase.append", "qiskit.pulse.instructions.ShiftPhase.ch_duration", "qiskit.pulse.instructions.ShiftPhase.ch_start_time", "qiskit.pulse.instructions.ShiftPhase.ch_stop_time", "qiskit.pulse.instructions.ShiftPhase.draw", "qiskit.pulse.instructions.ShiftPhase.insert", "qiskit.pulse.instructions.ShiftPhase.is_parameterized", "qiskit.pulse.instructions.ShiftPhase.shift", "Snapshot", "qiskit.pulse.instructions.Snapshot.append", "qiskit.pulse.instructions.Snapshot.ch_duration", "qiskit.pulse.instructions.Snapshot.ch_start_time", "qiskit.pulse.instructions.Snapshot.ch_stop_time", "qiskit.pulse.instructions.Snapshot.draw", "qiskit.pulse.instructions.Snapshot.insert", "qiskit.pulse.instructions.Snapshot.is_parameterized", "qiskit.pulse.instructions.Snapshot.shift", "Constant", "qiskit.pulse.library.Constant.draw", "qiskit.pulse.library.Constant.get_waveform", "qiskit.pulse.library.Constant.is_parameterized", "qiskit.pulse.library.Constant.validate_parameters", "Drag", "qiskit.pulse.library.Drag.draw", "qiskit.pulse.library.Drag.get_waveform", "qiskit.pulse.library.Drag.is_parameterized", "qiskit.pulse.library.Drag.validate_parameters", "Gaussian", "qiskit.pulse.library.Gaussian.draw", "qiskit.pulse.library.Gaussian.get_waveform", "qiskit.pulse.library.Gaussian.is_parameterized", "qiskit.pulse.library.Gaussian.validate_parameters", "GaussianSquare", "qiskit.pulse.library.GaussianSquare.draw", "qiskit.pulse.library.GaussianSquare.get_waveform", "qiskit.pulse.library.GaussianSquare.is_parameterized", "qiskit.pulse.library.GaussianSquare.validate_parameters", "ParametricPulse", "qiskit.pulse.library.ParametricPulse.draw", "qiskit.pulse.library.ParametricPulse.get_waveform", "qiskit.pulse.library.ParametricPulse.is_parameterized", "qiskit.pulse.library.ParametricPulse.validate_parameters", "SymbolicPulse", "qiskit.pulse.library.SymbolicPulse.draw", "qiskit.pulse.library.SymbolicPulse.get_waveform", "qiskit.pulse.library.SymbolicPulse.is_parameterized", "qiskit.pulse.library.SymbolicPulse.validate_parameters", "Waveform", "qiskit.pulse.library.Waveform.draw", "qiskit.pulse.library.Waveform.is_parameterized", "qiskit.pulse.library.constant", "qiskit.pulse.library.cos", "qiskit.pulse.library.drag", "qiskit.pulse.library.gaussian", "qiskit.pulse.library.gaussian_deriv", "qiskit.pulse.library.gaussian_square", "qiskit.pulse.library.sawtooth", "qiskit.pulse.library.sech", "qiskit.pulse.library.sech_deriv", "qiskit.pulse.library.sin", "qiskit.pulse.library.square", "qiskit.pulse.library.triangle", "qiskit.pulse.library.zero", "AlignEquispaced", "qiskit.pulse.transforms.AlignEquispaced.align", "qiskit.pulse.transforms.AlignEquispaced.to_dict", "AlignFunc", "qiskit.pulse.transforms.AlignFunc.align", "qiskit.pulse.transforms.AlignFunc.to_dict", "AlignLeft", "qiskit.pulse.transforms.AlignLeft.align", "qiskit.pulse.transforms.AlignLeft.to_dict", "AlignRight", "qiskit.pulse.transforms.AlignRight.align", "qiskit.pulse.transforms.AlignRight.to_dict", "AlignSequential", "qiskit.pulse.transforms.AlignSequential.align", "qiskit.pulse.transforms.AlignSequential.to_dict", "qiskit.pulse.transforms.add_implicit_acquires", "qiskit.pulse.transforms.align_measures", "qiskit.pulse.transforms.block_to_dag", "qiskit.pulse.transforms.block_to_schedule", "qiskit.pulse.transforms.compress_pulses", "qiskit.pulse.transforms.flatten", "qiskit.pulse.transforms.inline_subroutines", "qiskit.pulse.transforms.pad", "qiskit.pulse.transforms.remove_directives", "qiskit.pulse.transforms.remove_trivial_barriers", "qiskit.pulse.transforms.target_qobj_transform", "OpenQASMLexer", "qiskit.qasm.OpenQASMLexer.add_filter", "qiskit.qasm.OpenQASMLexer.analyse_text", "qiskit.qasm.OpenQASMLexer.get_tokens", "qiskit.qasm.OpenQASMLexer.get_tokens_unprocessed", "Qasm", "qiskit.qasm.Qasm.generate_tokens", "qiskit.qasm.Qasm.parse", "qiskit.qasm.Qasm.return_filename", "qiskit.qasm.QasmError", "QasmHTMLStyle", "QasmTerminalStyle", "Exporter", "qiskit.qasm3.Exporter.dump", "qiskit.qasm3.Exporter.dumps", "qiskit.qasm3.dump", "qiskit.qasm3.dumps", "GateCalibration", "qiskit.qobj.GateCalibration.from_dict", "qiskit.qobj.GateCalibration.to_dict", "PulseLibraryItem", "qiskit.qobj.PulseLibraryItem.from_dict", "qiskit.qobj.PulseLibraryItem.to_dict", "PulseQobj", "qiskit.qobj.PulseQobj.from_dict", "qiskit.qobj.PulseQobj.to_dict", "PulseQobjConfig", "qiskit.qobj.PulseQobjConfig.from_dict", "qiskit.qobj.PulseQobjConfig.to_dict", "PulseQobjExperiment", "qiskit.qobj.PulseQobjExperiment.from_dict", "qiskit.qobj.PulseQobjExperiment.to_dict", "PulseQobjExperimentConfig", "qiskit.qobj.PulseQobjExperimentConfig.from_dict", "qiskit.qobj.PulseQobjExperimentConfig.to_dict", "PulseQobjInstruction", "qiskit.qobj.PulseQobjInstruction.from_dict", "qiskit.qobj.PulseQobjInstruction.to_dict", "QasmExperimentCalibrations", "qiskit.qobj.QasmExperimentCalibrations.from_dict", "qiskit.qobj.QasmExperimentCalibrations.to_dict", "QasmQobj", "qiskit.qobj.QasmQobj.from_dict", "qiskit.qobj.QasmQobj.to_dict", "QasmQobjConfig", "qiskit.qobj.QasmQobjConfig.from_dict", "qiskit.qobj.QasmQobjConfig.to_dict", "QasmQobjExperiment", "qiskit.qobj.QasmQobjExperiment.from_dict", "qiskit.qobj.QasmQobjExperiment.to_dict", "QasmQobjExperimentConfig", "qiskit.qobj.QasmQobjExperimentConfig.from_dict", "qiskit.qobj.QasmQobjExperimentConfig.to_dict", "QasmQobjInstruction", "qiskit.qobj.QasmQobjInstruction.from_dict", "qiskit.qobj.QasmQobjInstruction.to_dict", "Qobj", "qiskit.qobj.Qobj.from_dict", "qiskit.qobj.Qobj.to_dict", "QobjExperimentHeader", "qiskit.qobj.QobjExperimentHeader.from_dict", "qiskit.qobj.QobjExperimentHeader.to_dict", "QobjHeader", "qiskit.qobj.QobjHeader.from_dict", "qiskit.qobj.QobjHeader.to_dict", "QobjMeasurementOption", "qiskit.qobj.QobjMeasurementOption.from_dict", "qiskit.qobj.QobjMeasurementOption.to_dict", "qiskit.qpy.dump", "qiskit.qpy.load", "CNOTDihedral", "qiskit.quantum_info.CNOTDihedral.adjoint", "qiskit.quantum_info.CNOTDihedral.compose", "qiskit.quantum_info.CNOTDihedral.conjugate", "qiskit.quantum_info.CNOTDihedral.copy", "qiskit.quantum_info.CNOTDihedral.dot", "qiskit.quantum_info.CNOTDihedral.expand", "qiskit.quantum_info.CNOTDihedral.input_dims", "qiskit.quantum_info.CNOTDihedral.output_dims", "qiskit.quantum_info.CNOTDihedral.power", "qiskit.quantum_info.CNOTDihedral.reshape", "qiskit.quantum_info.CNOTDihedral.tensor", "qiskit.quantum_info.CNOTDihedral.to_circuit", "qiskit.quantum_info.CNOTDihedral.to_instruction", "qiskit.quantum_info.CNOTDihedral.to_matrix", "qiskit.quantum_info.CNOTDihedral.to_operator", "qiskit.quantum_info.CNOTDihedral.transpose", "Chi", "qiskit.quantum_info.Chi.adjoint", "qiskit.quantum_info.Chi.compose", "qiskit.quantum_info.Chi.conjugate", "qiskit.quantum_info.Chi.copy", "qiskit.quantum_info.Chi.dot", "qiskit.quantum_info.Chi.expand", "qiskit.quantum_info.Chi.input_dims", "qiskit.quantum_info.Chi.is_cp", "qiskit.quantum_info.Chi.is_cptp", "qiskit.quantum_info.Chi.is_tp", "qiskit.quantum_info.Chi.is_unitary", "qiskit.quantum_info.Chi.output_dims", "qiskit.quantum_info.Chi.power", "qiskit.quantum_info.Chi.reshape", "qiskit.quantum_info.Chi.tensor", "qiskit.quantum_info.Chi.to_instruction", "qiskit.quantum_info.Chi.to_operator", "qiskit.quantum_info.Chi.transpose", "Choi", "qiskit.quantum_info.Choi.adjoint", "qiskit.quantum_info.Choi.compose", "qiskit.quantum_info.Choi.conjugate", "qiskit.quantum_info.Choi.copy", "qiskit.quantum_info.Choi.dot", "qiskit.quantum_info.Choi.expand", "qiskit.quantum_info.Choi.input_dims", "qiskit.quantum_info.Choi.is_cp", "qiskit.quantum_info.Choi.is_cptp", "qiskit.quantum_info.Choi.is_tp", "qiskit.quantum_info.Choi.is_unitary", "qiskit.quantum_info.Choi.output_dims", "qiskit.quantum_info.Choi.power", "qiskit.quantum_info.Choi.reshape", "qiskit.quantum_info.Choi.tensor", "qiskit.quantum_info.Choi.to_instruction", "qiskit.quantum_info.Choi.to_operator", "qiskit.quantum_info.Choi.transpose", "Clifford", "qiskit.quantum_info.Clifford.adjoint", "qiskit.quantum_info.Clifford.compose", "qiskit.quantum_info.Clifford.conjugate", "qiskit.quantum_info.Clifford.copy", "qiskit.quantum_info.Clifford.dot", "qiskit.quantum_info.Clifford.expand", "qiskit.quantum_info.Clifford.from_circuit", "qiskit.quantum_info.Clifford.from_dict", "qiskit.quantum_info.Clifford.from_label", "qiskit.quantum_info.Clifford.input_dims", "qiskit.quantum_info.Clifford.is_unitary", "qiskit.quantum_info.Clifford.output_dims", "qiskit.quantum_info.Clifford.power", "qiskit.quantum_info.Clifford.reshape", "qiskit.quantum_info.Clifford.tensor", "qiskit.quantum_info.Clifford.to_circuit", "qiskit.quantum_info.Clifford.to_dict", "qiskit.quantum_info.Clifford.to_instruction", "qiskit.quantum_info.Clifford.to_matrix", "qiskit.quantum_info.Clifford.to_operator", "qiskit.quantum_info.Clifford.transpose", "DensityMatrix", "qiskit.quantum_info.DensityMatrix.conjugate", "qiskit.quantum_info.DensityMatrix.copy", "qiskit.quantum_info.DensityMatrix.dims", "qiskit.quantum_info.DensityMatrix.draw", "qiskit.quantum_info.DensityMatrix.evolve", "qiskit.quantum_info.DensityMatrix.expand", "qiskit.quantum_info.DensityMatrix.expectation_value", "qiskit.quantum_info.DensityMatrix.from_instruction", "qiskit.quantum_info.DensityMatrix.from_int", "qiskit.quantum_info.DensityMatrix.from_label", "qiskit.quantum_info.DensityMatrix.is_valid", "qiskit.quantum_info.DensityMatrix.measure", "qiskit.quantum_info.DensityMatrix.probabilities", "qiskit.quantum_info.DensityMatrix.probabilities_dict", "qiskit.quantum_info.DensityMatrix.purity", "qiskit.quantum_info.DensityMatrix.reset", "qiskit.quantum_info.DensityMatrix.reverse_qargs", "qiskit.quantum_info.DensityMatrix.sample_counts", "qiskit.quantum_info.DensityMatrix.sample_memory", "qiskit.quantum_info.DensityMatrix.seed", "qiskit.quantum_info.DensityMatrix.tensor", "qiskit.quantum_info.DensityMatrix.to_dict", "qiskit.quantum_info.DensityMatrix.to_operator", "qiskit.quantum_info.DensityMatrix.to_statevector", "qiskit.quantum_info.DensityMatrix.trace", "Kraus", "qiskit.quantum_info.Kraus.adjoint", "qiskit.quantum_info.Kraus.compose", "qiskit.quantum_info.Kraus.conjugate", "qiskit.quantum_info.Kraus.copy", "qiskit.quantum_info.Kraus.dot", "qiskit.quantum_info.Kraus.expand", "qiskit.quantum_info.Kraus.input_dims", "qiskit.quantum_info.Kraus.is_cp", "qiskit.quantum_info.Kraus.is_cptp", "qiskit.quantum_info.Kraus.is_tp", "qiskit.quantum_info.Kraus.is_unitary", "qiskit.quantum_info.Kraus.output_dims", "qiskit.quantum_info.Kraus.power", "qiskit.quantum_info.Kraus.reshape", "qiskit.quantum_info.Kraus.tensor", "qiskit.quantum_info.Kraus.to_instruction", "qiskit.quantum_info.Kraus.to_operator", "qiskit.quantum_info.Kraus.transpose", "OneQubitEulerDecomposer", "qiskit.quantum_info.OneQubitEulerDecomposer.angles", "qiskit.quantum_info.OneQubitEulerDecomposer.angles_and_phase", "Operator", "qiskit.quantum_info.Operator.adjoint", "qiskit.quantum_info.Operator.compose", "qiskit.quantum_info.Operator.conjugate", "qiskit.quantum_info.Operator.copy", "qiskit.quantum_info.Operator.dot", "qiskit.quantum_info.Operator.equiv", "qiskit.quantum_info.Operator.expand", "qiskit.quantum_info.Operator.from_circuit", "qiskit.quantum_info.Operator.from_label", "qiskit.quantum_info.Operator.input_dims", "qiskit.quantum_info.Operator.is_unitary", "qiskit.quantum_info.Operator.output_dims", "qiskit.quantum_info.Operator.power", "qiskit.quantum_info.Operator.reshape", "qiskit.quantum_info.Operator.reverse_qargs", "qiskit.quantum_info.Operator.tensor", "qiskit.quantum_info.Operator.to_instruction", "qiskit.quantum_info.Operator.to_operator", "qiskit.quantum_info.Operator.transpose", "PTM", "qiskit.quantum_info.PTM.adjoint", "qiskit.quantum_info.PTM.compose", "qiskit.quantum_info.PTM.conjugate", "qiskit.quantum_info.PTM.copy", "qiskit.quantum_info.PTM.dot", "qiskit.quantum_info.PTM.expand", "qiskit.quantum_info.PTM.input_dims", "qiskit.quantum_info.PTM.is_cp", "qiskit.quantum_info.PTM.is_cptp", "qiskit.quantum_info.PTM.is_tp", "qiskit.quantum_info.PTM.is_unitary", "qiskit.quantum_info.PTM.output_dims", "qiskit.quantum_info.PTM.power", "qiskit.quantum_info.PTM.reshape", "qiskit.quantum_info.PTM.tensor", "qiskit.quantum_info.PTM.to_instruction", "qiskit.quantum_info.PTM.to_operator", "qiskit.quantum_info.PTM.transpose", "Pauli", "qiskit.quantum_info.Pauli.adjoint", "qiskit.quantum_info.Pauli.anticommutes", "qiskit.quantum_info.Pauli.commutes", "qiskit.quantum_info.Pauli.compose", "qiskit.quantum_info.Pauli.conjugate", "qiskit.quantum_info.Pauli.copy", "qiskit.quantum_info.Pauli.delete", "qiskit.quantum_info.Pauli.dot", "qiskit.quantum_info.Pauli.equiv", "qiskit.quantum_info.Pauli.evolve", "qiskit.quantum_info.Pauli.expand", "qiskit.quantum_info.Pauli.input_dims", "qiskit.quantum_info.Pauli.insert", "qiskit.quantum_info.Pauli.inverse", "qiskit.quantum_info.Pauli.output_dims", "qiskit.quantum_info.Pauli.power", "qiskit.quantum_info.Pauli.reshape", "qiskit.quantum_info.Pauli.set_truncation", "qiskit.quantum_info.Pauli.tensor", "qiskit.quantum_info.Pauli.to_instruction", "qiskit.quantum_info.Pauli.to_label", "qiskit.quantum_info.Pauli.to_matrix", "qiskit.quantum_info.Pauli.transpose", "PauliList", "qiskit.quantum_info.PauliList.adjoint", "qiskit.quantum_info.PauliList.anticommutes", "qiskit.quantum_info.PauliList.anticommutes_with_all", "qiskit.quantum_info.PauliList.argsort", "qiskit.quantum_info.PauliList.commutes", "qiskit.quantum_info.PauliList.commutes_with_all", "qiskit.quantum_info.PauliList.compose", "qiskit.quantum_info.PauliList.conjugate", "qiskit.quantum_info.PauliList.copy", "qiskit.quantum_info.PauliList.delete", "qiskit.quantum_info.PauliList.dot", "qiskit.quantum_info.PauliList.equiv", "qiskit.quantum_info.PauliList.evolve", "qiskit.quantum_info.PauliList.expand", "qiskit.quantum_info.PauliList.from_symplectic", "qiskit.quantum_info.PauliList.group_commuting", "qiskit.quantum_info.PauliList.group_qubit_wise_commuting", "qiskit.quantum_info.PauliList.input_dims", "qiskit.quantum_info.PauliList.insert", "qiskit.quantum_info.PauliList.inverse", "qiskit.quantum_info.PauliList.label_iter", "qiskit.quantum_info.PauliList.matrix_iter", "qiskit.quantum_info.PauliList.output_dims", "qiskit.quantum_info.PauliList.power", "qiskit.quantum_info.PauliList.reshape", "qiskit.quantum_info.PauliList.sort", "qiskit.quantum_info.PauliList.tensor", "qiskit.quantum_info.PauliList.to_labels", "qiskit.quantum_info.PauliList.to_matrix", "qiskit.quantum_info.PauliList.transpose", "qiskit.quantum_info.PauliList.unique", "PauliTable", "qiskit.quantum_info.PauliTable.adjoint", "qiskit.quantum_info.PauliTable.anticommutes_with_all", "qiskit.quantum_info.PauliTable.argsort", "qiskit.quantum_info.PauliTable.commutes", "qiskit.quantum_info.PauliTable.commutes_with_all", "qiskit.quantum_info.PauliTable.compose", "qiskit.quantum_info.PauliTable.conjugate", "qiskit.quantum_info.PauliTable.copy", "qiskit.quantum_info.PauliTable.delete", "qiskit.quantum_info.PauliTable.dot", "qiskit.quantum_info.PauliTable.expand", "qiskit.quantum_info.PauliTable.from_labels", "qiskit.quantum_info.PauliTable.input_dims", "qiskit.quantum_info.PauliTable.insert", "qiskit.quantum_info.PauliTable.label_iter", "qiskit.quantum_info.PauliTable.matrix_iter", "qiskit.quantum_info.PauliTable.output_dims", "qiskit.quantum_info.PauliTable.power", "qiskit.quantum_info.PauliTable.reshape", "qiskit.quantum_info.PauliTable.sort", "qiskit.quantum_info.PauliTable.tensor", "qiskit.quantum_info.PauliTable.to_labels", "qiskit.quantum_info.PauliTable.to_matrix", "qiskit.quantum_info.PauliTable.transpose", "qiskit.quantum_info.PauliTable.unique", "Quaternion", "qiskit.quantum_info.Quaternion.from_axis_rotation", "qiskit.quantum_info.Quaternion.from_euler", "qiskit.quantum_info.Quaternion.norm", "qiskit.quantum_info.Quaternion.normalize", "qiskit.quantum_info.Quaternion.to_matrix", "qiskit.quantum_info.Quaternion.to_zyz", "ScalarOp", "qiskit.quantum_info.ScalarOp.adjoint", "qiskit.quantum_info.ScalarOp.compose", "qiskit.quantum_info.ScalarOp.conjugate", "qiskit.quantum_info.ScalarOp.copy", "qiskit.quantum_info.ScalarOp.dot", "qiskit.quantum_info.ScalarOp.expand", "qiskit.quantum_info.ScalarOp.input_dims", "qiskit.quantum_info.ScalarOp.is_unitary", "qiskit.quantum_info.ScalarOp.output_dims", "qiskit.quantum_info.ScalarOp.power", "qiskit.quantum_info.ScalarOp.reshape", "qiskit.quantum_info.ScalarOp.tensor", "qiskit.quantum_info.ScalarOp.to_matrix", "qiskit.quantum_info.ScalarOp.to_operator", "qiskit.quantum_info.ScalarOp.transpose", "SparsePauliOp", "qiskit.quantum_info.SparsePauliOp.adjoint", "qiskit.quantum_info.SparsePauliOp.chop", "qiskit.quantum_info.SparsePauliOp.compose", "qiskit.quantum_info.SparsePauliOp.conjugate", "qiskit.quantum_info.SparsePauliOp.copy", "qiskit.quantum_info.SparsePauliOp.dot", "qiskit.quantum_info.SparsePauliOp.equiv", "qiskit.quantum_info.SparsePauliOp.expand", "qiskit.quantum_info.SparsePauliOp.from_list", "qiskit.quantum_info.SparsePauliOp.from_operator", "qiskit.quantum_info.SparsePauliOp.from_sparse_list", "qiskit.quantum_info.SparsePauliOp.group_commuting", "qiskit.quantum_info.SparsePauliOp.input_dims", "qiskit.quantum_info.SparsePauliOp.is_unitary", "qiskit.quantum_info.SparsePauliOp.label_iter", "qiskit.quantum_info.SparsePauliOp.matrix_iter", "qiskit.quantum_info.SparsePauliOp.output_dims", "qiskit.quantum_info.SparsePauliOp.power", "qiskit.quantum_info.SparsePauliOp.reshape", "qiskit.quantum_info.SparsePauliOp.simplify", "qiskit.quantum_info.SparsePauliOp.sum", "qiskit.quantum_info.SparsePauliOp.tensor", "qiskit.quantum_info.SparsePauliOp.to_list", "qiskit.quantum_info.SparsePauliOp.to_matrix", "qiskit.quantum_info.SparsePauliOp.to_operator", "qiskit.quantum_info.SparsePauliOp.transpose", "StabilizerState", "qiskit.quantum_info.StabilizerState.conjugate", "qiskit.quantum_info.StabilizerState.copy", "qiskit.quantum_info.StabilizerState.dims", "qiskit.quantum_info.StabilizerState.evolve", "qiskit.quantum_info.StabilizerState.expand", "qiskit.quantum_info.StabilizerState.expectation_value", "qiskit.quantum_info.StabilizerState.is_valid", "qiskit.quantum_info.StabilizerState.measure", "qiskit.quantum_info.StabilizerState.probabilities", "qiskit.quantum_info.StabilizerState.probabilities_dict", "qiskit.quantum_info.StabilizerState.purity", "qiskit.quantum_info.StabilizerState.reset", "qiskit.quantum_info.StabilizerState.sample_counts", "qiskit.quantum_info.StabilizerState.sample_memory", "qiskit.quantum_info.StabilizerState.seed", "qiskit.quantum_info.StabilizerState.tensor", "qiskit.quantum_info.StabilizerState.to_operator", "qiskit.quantum_info.StabilizerState.trace", "StabilizerTable", "qiskit.quantum_info.StabilizerTable.adjoint", "qiskit.quantum_info.StabilizerTable.anticommutes_with_all", "qiskit.quantum_info.StabilizerTable.argsort", "qiskit.quantum_info.StabilizerTable.commutes", "qiskit.quantum_info.StabilizerTable.commutes_with_all", "qiskit.quantum_info.StabilizerTable.compose", "qiskit.quantum_info.StabilizerTable.conjugate", "qiskit.quantum_info.StabilizerTable.copy", "qiskit.quantum_info.StabilizerTable.delete", "qiskit.quantum_info.StabilizerTable.dot", "qiskit.quantum_info.StabilizerTable.expand", "qiskit.quantum_info.StabilizerTable.from_labels", "qiskit.quantum_info.StabilizerTable.input_dims", "qiskit.quantum_info.StabilizerTable.insert", "qiskit.quantum_info.StabilizerTable.label_iter", "qiskit.quantum_info.StabilizerTable.matrix_iter", "qiskit.quantum_info.StabilizerTable.output_dims", "qiskit.quantum_info.StabilizerTable.power", "qiskit.quantum_info.StabilizerTable.reshape", "qiskit.quantum_info.StabilizerTable.sort", "qiskit.quantum_info.StabilizerTable.tensor", "qiskit.quantum_info.StabilizerTable.to_labels", "qiskit.quantum_info.StabilizerTable.to_matrix", "qiskit.quantum_info.StabilizerTable.transpose", "qiskit.quantum_info.StabilizerTable.unique", "Statevector", "qiskit.quantum_info.Statevector.conjugate", "qiskit.quantum_info.Statevector.copy", "qiskit.quantum_info.Statevector.dims", "qiskit.quantum_info.Statevector.draw", "qiskit.quantum_info.Statevector.equiv", "qiskit.quantum_info.Statevector.evolve", "qiskit.quantum_info.Statevector.expand", "qiskit.quantum_info.Statevector.expectation_value", "qiskit.quantum_info.Statevector.from_instruction", "qiskit.quantum_info.Statevector.from_int", "qiskit.quantum_info.Statevector.from_label", "qiskit.quantum_info.Statevector.inner", "qiskit.quantum_info.Statevector.is_valid", "qiskit.quantum_info.Statevector.measure", "qiskit.quantum_info.Statevector.probabilities", "qiskit.quantum_info.Statevector.probabilities_dict", "qiskit.quantum_info.Statevector.purity", "qiskit.quantum_info.Statevector.reset", "qiskit.quantum_info.Statevector.reverse_qargs", "qiskit.quantum_info.Statevector.sample_counts", "qiskit.quantum_info.Statevector.sample_memory", "qiskit.quantum_info.Statevector.seed", "qiskit.quantum_info.Statevector.tensor", "qiskit.quantum_info.Statevector.to_dict", "qiskit.quantum_info.Statevector.to_operator", "qiskit.quantum_info.Statevector.trace", "Stinespring", "qiskit.quantum_info.Stinespring.adjoint", "qiskit.quantum_info.Stinespring.compose", "qiskit.quantum_info.Stinespring.conjugate", "qiskit.quantum_info.Stinespring.copy", "qiskit.quantum_info.Stinespring.dot", "qiskit.quantum_info.Stinespring.expand", "qiskit.quantum_info.Stinespring.input_dims", "qiskit.quantum_info.Stinespring.is_cp", "qiskit.quantum_info.Stinespring.is_cptp", "qiskit.quantum_info.Stinespring.is_tp", "qiskit.quantum_info.Stinespring.is_unitary", "qiskit.quantum_info.Stinespring.output_dims", "qiskit.quantum_info.Stinespring.power", "qiskit.quantum_info.Stinespring.reshape", "qiskit.quantum_info.Stinespring.tensor", "qiskit.quantum_info.Stinespring.to_instruction", "qiskit.quantum_info.Stinespring.to_operator", "qiskit.quantum_info.Stinespring.transpose", "SuperOp", "qiskit.quantum_info.SuperOp.adjoint", "qiskit.quantum_info.SuperOp.compose", "qiskit.quantum_info.SuperOp.conjugate", "qiskit.quantum_info.SuperOp.copy", "qiskit.quantum_info.SuperOp.dot", "qiskit.quantum_info.SuperOp.expand", "qiskit.quantum_info.SuperOp.input_dims", "qiskit.quantum_info.SuperOp.is_cp", "qiskit.quantum_info.SuperOp.is_cptp", "qiskit.quantum_info.SuperOp.is_tp", "qiskit.quantum_info.SuperOp.is_unitary", "qiskit.quantum_info.SuperOp.output_dims", "qiskit.quantum_info.SuperOp.power", "qiskit.quantum_info.SuperOp.reshape", "qiskit.quantum_info.SuperOp.tensor", "qiskit.quantum_info.SuperOp.to_instruction", "qiskit.quantum_info.SuperOp.to_operator", "qiskit.quantum_info.SuperOp.transpose", "TwoQubitBasisDecomposer", "qiskit.quantum_info.TwoQubitBasisDecomposer.decomp0", "qiskit.quantum_info.TwoQubitBasisDecomposer.decomp1", "qiskit.quantum_info.TwoQubitBasisDecomposer.decomp2_supercontrolled", "qiskit.quantum_info.TwoQubitBasisDecomposer.decomp3_supercontrolled", "qiskit.quantum_info.TwoQubitBasisDecomposer.num_basis_gates", "qiskit.quantum_info.TwoQubitBasisDecomposer.traces", "XXDecomposer", "qiskit.quantum_info.XXDecomposer.num_basis_gates", "qiskit.quantum_info.average_gate_fidelity", "qiskit.quantum_info.concurrence", "qiskit.quantum_info.decompose_clifford", "qiskit.quantum_info.diamond_norm", "qiskit.quantum_info.entanglement_of_formation", "qiskit.quantum_info.entropy", "qiskit.quantum_info.gate_error", "qiskit.quantum_info.hellinger_distance", "qiskit.quantum_info.hellinger_fidelity", "qiskit.quantum_info.mutual_information", "qiskit.quantum_info.partial_trace", "qiskit.quantum_info.pauli_basis", "qiskit.quantum_info.process_fidelity", "qiskit.quantum_info.purity", "qiskit.quantum_info.random_clifford", "qiskit.quantum_info.random_cnotdihedral", "qiskit.quantum_info.random_density_matrix", "qiskit.quantum_info.random_hermitian", "qiskit.quantum_info.random_pauli", "qiskit.quantum_info.random_pauli_list", "qiskit.quantum_info.random_pauli_table", "qiskit.quantum_info.random_quantum_channel", "qiskit.quantum_info.random_stabilizer_table", "qiskit.quantum_info.random_statevector", "qiskit.quantum_info.random_unitary", "qiskit.quantum_info.shannon_entropy", "qiskit.quantum_info.state_fidelity", "qiskit.quantum_info.two_qubit_cnot_decompose", "BaseReadoutMitigator", "qiskit.result.BaseReadoutMitigator.expectation_value", "qiskit.result.BaseReadoutMitigator.quasi_probabilities", "CorrelatedReadoutMitigator", "qiskit.result.CorrelatedReadoutMitigator.assignment_matrix", "qiskit.result.CorrelatedReadoutMitigator.expectation_value", "qiskit.result.CorrelatedReadoutMitigator.mitigation_matrix", "qiskit.result.CorrelatedReadoutMitigator.quasi_probabilities", "qiskit.result.CorrelatedReadoutMitigator.stddev_upper_bound", "Counts", "qiskit.result.Counts.clear", "qiskit.result.Counts.copy", "qiskit.result.Counts.fromkeys", "qiskit.result.Counts.get", "qiskit.result.Counts.hex_outcomes", "qiskit.result.Counts.int_outcomes", "qiskit.result.Counts.items", "qiskit.result.Counts.keys", "qiskit.result.Counts.most_frequent", "qiskit.result.Counts.pop", "qiskit.result.Counts.popitem", "qiskit.result.Counts.setdefault", "qiskit.result.Counts.shots", "qiskit.result.Counts.update", "qiskit.result.Counts.values", "LocalReadoutMitigator", "qiskit.result.LocalReadoutMitigator.assignment_matrix", "qiskit.result.LocalReadoutMitigator.expectation_value", "qiskit.result.LocalReadoutMitigator.mitigation_matrix", "qiskit.result.LocalReadoutMitigator.quasi_probabilities", "qiskit.result.LocalReadoutMitigator.stddev_upper_bound", "ProbDistribution", "qiskit.result.ProbDistribution.binary_probabilities", "qiskit.result.ProbDistribution.clear", "qiskit.result.ProbDistribution.copy", "qiskit.result.ProbDistribution.fromkeys", "qiskit.result.ProbDistribution.get", "qiskit.result.ProbDistribution.hex_probabilities", "qiskit.result.ProbDistribution.items", "qiskit.result.ProbDistribution.keys", "qiskit.result.ProbDistribution.pop", "qiskit.result.ProbDistribution.popitem", "qiskit.result.ProbDistribution.setdefault", "qiskit.result.ProbDistribution.update", "qiskit.result.ProbDistribution.values", "QuasiDistribution", "qiskit.result.QuasiDistribution.binary_probabilities", "qiskit.result.QuasiDistribution.clear", "qiskit.result.QuasiDistribution.copy", "qiskit.result.QuasiDistribution.fromkeys", "qiskit.result.QuasiDistribution.get", "qiskit.result.QuasiDistribution.hex_probabilities", "qiskit.result.QuasiDistribution.items", "qiskit.result.QuasiDistribution.keys", "qiskit.result.QuasiDistribution.nearest_probability_distribution", "qiskit.result.QuasiDistribution.pop", "qiskit.result.QuasiDistribution.popitem", "qiskit.result.QuasiDistribution.setdefault", "qiskit.result.QuasiDistribution.update", "qiskit.result.QuasiDistribution.values", "Result", "qiskit.result.Result.data", "qiskit.result.Result.from_dict", "qiskit.result.Result.get_counts", "qiskit.result.Result.get_memory", "qiskit.result.Result.get_statevector", "qiskit.result.Result.get_unitary", "qiskit.result.Result.to_dict", "qiskit.result.ResultError", "qiskit.result.marginal_counts", "qiskit.result.marginal_distribution", "qiskit.result.marginal_memory", "ScheduleConfig", "qiskit.scheduler.methods.basic", "qiskit.scheduler.schedule_circuit", "EvolutionSynthesis", "qiskit.synthesis.EvolutionSynthesis.synthesize", "LieTrotter", "qiskit.synthesis.LieTrotter.synthesize", "MatrixExponential", "qiskit.synthesis.MatrixExponential.synthesize", "ProductFormula", "qiskit.synthesis.ProductFormula.synthesize", "SuzukiTrotter", "qiskit.synthesis.SuzukiTrotter.synthesize", "qiskit.tools.backend_monitor", "qiskit.tools.backend_overview", "qiskit.tools.job_monitor", "qiskit.tools.parallel_map", "AnalysisPass", "qiskit.transpiler.AnalysisPass.name", "qiskit.transpiler.AnalysisPass.run", "ConditionalController", "qiskit.transpiler.ConditionalController.add_flow_controller", "qiskit.transpiler.ConditionalController.controller_factory", "qiskit.transpiler.ConditionalController.dump_passes", "qiskit.transpiler.ConditionalController.remove_flow_controller", "CouplingMap", "qiskit.transpiler.CouplingMap.add_edge", "qiskit.transpiler.CouplingMap.add_physical_qubit", "qiskit.transpiler.CouplingMap.compute_distance_matrix", "qiskit.transpiler.CouplingMap.distance", "qiskit.transpiler.CouplingMap.draw", "qiskit.transpiler.CouplingMap.from_full", "qiskit.transpiler.CouplingMap.from_grid", "qiskit.transpiler.CouplingMap.from_heavy_hex", "qiskit.transpiler.CouplingMap.from_heavy_square", "qiskit.transpiler.CouplingMap.from_hexagonal_lattice", "qiskit.transpiler.CouplingMap.from_line", "qiskit.transpiler.CouplingMap.from_ring", "qiskit.transpiler.CouplingMap.get_edges", "qiskit.transpiler.CouplingMap.is_connected", "qiskit.transpiler.CouplingMap.largest_connected_component", "qiskit.transpiler.CouplingMap.make_symmetric", "qiskit.transpiler.CouplingMap.neighbors", "qiskit.transpiler.CouplingMap.reduce", "qiskit.transpiler.CouplingMap.shortest_undirected_path", "qiskit.transpiler.CouplingMap.size", "qiskit.transpiler.CouplingMap.subgraph", "DoWhileController", "qiskit.transpiler.DoWhileController.add_flow_controller", "qiskit.transpiler.DoWhileController.controller_factory", "qiskit.transpiler.DoWhileController.dump_passes", "qiskit.transpiler.DoWhileController.remove_flow_controller", "FencedDAGCircuit", "FencedPropertySet", "FlowController", "qiskit.transpiler.FlowController.add_flow_controller", "qiskit.transpiler.FlowController.controller_factory", "qiskit.transpiler.FlowController.dump_passes", "qiskit.transpiler.FlowController.remove_flow_controller", "InstructionDurations", "qiskit.transpiler.InstructionDurations.from_backend", "qiskit.transpiler.InstructionDurations.get", "qiskit.transpiler.InstructionDurations.units_used", "qiskit.transpiler.InstructionDurations.update", "InstructionProperties", "Layout", "qiskit.transpiler.Layout.add", "qiskit.transpiler.Layout.add_register", "qiskit.transpiler.Layout.combine_into_edge_map", "qiskit.transpiler.Layout.copy", "qiskit.transpiler.Layout.from_dict", "qiskit.transpiler.Layout.from_intlist", "qiskit.transpiler.Layout.from_qubit_list", "qiskit.transpiler.Layout.generate_trivial_layout", "qiskit.transpiler.Layout.get_physical_bits", "qiskit.transpiler.Layout.get_registers", "qiskit.transpiler.Layout.get_virtual_bits", "qiskit.transpiler.Layout.order_based_on_type", "qiskit.transpiler.Layout.reorder_bits", "qiskit.transpiler.Layout.swap", "PassManager", "qiskit.transpiler.PassManager.append", "qiskit.transpiler.PassManager.draw", "qiskit.transpiler.PassManager.passes", "qiskit.transpiler.PassManager.remove", "qiskit.transpiler.PassManager.replace", "qiskit.transpiler.PassManager.run", "PassManagerConfig", "qiskit.transpiler.PassManagerConfig.from_backend", "PropertySet", "qiskit.transpiler.PropertySet.clear", "qiskit.transpiler.PropertySet.copy", "qiskit.transpiler.PropertySet.fromkeys", "qiskit.transpiler.PropertySet.get", "qiskit.transpiler.PropertySet.items", "qiskit.transpiler.PropertySet.keys", "qiskit.transpiler.PropertySet.pop", "qiskit.transpiler.PropertySet.popitem", "qiskit.transpiler.PropertySet.setdefault", "qiskit.transpiler.PropertySet.update", "qiskit.transpiler.PropertySet.values", "StagedPassManager", "qiskit.transpiler.StagedPassManager.append", "qiskit.transpiler.StagedPassManager.draw", "qiskit.transpiler.StagedPassManager.passes", "qiskit.transpiler.StagedPassManager.remove", "qiskit.transpiler.StagedPassManager.replace", "qiskit.transpiler.StagedPassManager.run", "Target", "qiskit.transpiler.Target.add_instruction", "qiskit.transpiler.Target.build_coupling_map", "qiskit.transpiler.Target.durations", "qiskit.transpiler.Target.get", "qiskit.transpiler.Target.get_non_global_operation_names", "qiskit.transpiler.Target.instruction_properties", "qiskit.transpiler.Target.instruction_schedule_map", "qiskit.transpiler.Target.instruction_supported", "qiskit.transpiler.Target.items", "qiskit.transpiler.Target.keys", "qiskit.transpiler.Target.operation_from_name", "qiskit.transpiler.Target.operation_names_for_qargs", "qiskit.transpiler.Target.operations_for_qargs", "qiskit.transpiler.Target.qargs_for_operation_name", "qiskit.transpiler.Target.timing_constraints", "qiskit.transpiler.Target.update_from_instruction_schedule_map", "qiskit.transpiler.Target.update_instruction_properties", "qiskit.transpiler.Target.values", "TransformationPass", "qiskit.transpiler.TransformationPass.name", "qiskit.transpiler.TransformationPass.run", "qiskit.transpiler.TranspilerAccessError", "qiskit.transpiler.TranspilerError", "ALAPSchedule", "qiskit.transpiler.passes.ALAPSchedule.name", "qiskit.transpiler.passes.ALAPSchedule.run", "ALAPScheduleAnalysis", "qiskit.transpiler.passes.ALAPScheduleAnalysis.name", "qiskit.transpiler.passes.ALAPScheduleAnalysis.run", "ASAPSchedule", "qiskit.transpiler.passes.ASAPSchedule.name", "qiskit.transpiler.passes.ASAPSchedule.run", "ASAPScheduleAnalysis", "qiskit.transpiler.passes.ASAPScheduleAnalysis.name", "qiskit.transpiler.passes.ASAPScheduleAnalysis.run", "AlignMeasures", "qiskit.transpiler.passes.AlignMeasures.name", "qiskit.transpiler.passes.AlignMeasures.run", "ApplyLayout", "qiskit.transpiler.passes.ApplyLayout.name", "qiskit.transpiler.passes.ApplyLayout.run", "BIPMapping", "qiskit.transpiler.passes.BIPMapping.name", "qiskit.transpiler.passes.BIPMapping.run", "BarrierBeforeFinalMeasurements", "qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.name", "qiskit.transpiler.passes.BarrierBeforeFinalMeasurements.run", "BasicSwap", "qiskit.transpiler.passes.BasicSwap.name", "qiskit.transpiler.passes.BasicSwap.run", "BasisTranslator", "qiskit.transpiler.passes.BasisTranslator.name", "qiskit.transpiler.passes.BasisTranslator.run", "CSPLayout", "qiskit.transpiler.passes.CSPLayout.name", "qiskit.transpiler.passes.CSPLayout.run", "CXCancellation", "qiskit.transpiler.passes.CXCancellation.name", "qiskit.transpiler.passes.CXCancellation.run", "CXDirection", "qiskit.transpiler.passes.CXDirection.name", "qiskit.transpiler.passes.CXDirection.run", "CheckCXDirection", "qiskit.transpiler.passes.CheckCXDirection.name", "qiskit.transpiler.passes.CheckCXDirection.run", "CheckGateDirection", "qiskit.transpiler.passes.CheckGateDirection.name", "qiskit.transpiler.passes.CheckGateDirection.run", "CheckMap", "qiskit.transpiler.passes.CheckMap.name", "qiskit.transpiler.passes.CheckMap.run", "Collect1qRuns", "qiskit.transpiler.passes.Collect1qRuns.name", "qiskit.transpiler.passes.Collect1qRuns.run", "Collect2qBlocks", "qiskit.transpiler.passes.Collect2qBlocks.name", "qiskit.transpiler.passes.Collect2qBlocks.run", "CollectLinearFunctions", "qiskit.transpiler.passes.CollectLinearFunctions.name", "qiskit.transpiler.passes.CollectLinearFunctions.run", "CollectMultiQBlocks", "qiskit.transpiler.passes.CollectMultiQBlocks.find_set", "qiskit.transpiler.passes.CollectMultiQBlocks.name", "qiskit.transpiler.passes.CollectMultiQBlocks.run", "qiskit.transpiler.passes.CollectMultiQBlocks.union_set", "CommutationAnalysis", "qiskit.transpiler.passes.CommutationAnalysis.name", "qiskit.transpiler.passes.CommutationAnalysis.run", "CommutativeCancellation", "qiskit.transpiler.passes.CommutativeCancellation.name", "qiskit.transpiler.passes.CommutativeCancellation.run", "Commuting2qGateRouter", "qiskit.transpiler.passes.Commuting2qGateRouter.name", "qiskit.transpiler.passes.Commuting2qGateRouter.run", "qiskit.transpiler.passes.Commuting2qGateRouter.swap_decompose", "ConsolidateBlocks", "qiskit.transpiler.passes.ConsolidateBlocks.name", "qiskit.transpiler.passes.ConsolidateBlocks.run", "ConstrainedReschedule", "qiskit.transpiler.passes.ConstrainedReschedule.name", "qiskit.transpiler.passes.ConstrainedReschedule.run", "ContainsInstruction", "qiskit.transpiler.passes.ContainsInstruction.name", "qiskit.transpiler.passes.ContainsInstruction.run", "CountOps", "qiskit.transpiler.passes.CountOps.name", "qiskit.transpiler.passes.CountOps.run", "CountOpsLongestPath", "qiskit.transpiler.passes.CountOpsLongestPath.name", "qiskit.transpiler.passes.CountOpsLongestPath.run", "CrosstalkAdaptiveSchedule", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.assign_gate_id", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.basic_bounds", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_dag_dependency", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.check_xtalk_dependency", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.coherence_constraints", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_updated_dag", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.create_z3_vars", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.cx_tuple", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.enforce_schedule_on_dag", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_crosstalk_relevant_sets", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_dag_overlap_sets", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.extract_solution", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.fidelity_constraints", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.filter_candidates", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.find_layer", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.gate_tuple", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.generate_barriers", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.is_significant_xtalk", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.name", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.objective_function", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.parse_backend_properties", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.powerset", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.r2f", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.reset", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.run", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.scheduling_constraints", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.singleq_tuple", "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule.solve_optimization", "DAGFixedPoint", "qiskit.transpiler.passes.DAGFixedPoint.name", "qiskit.transpiler.passes.DAGFixedPoint.run", "DAGLongestPath", "qiskit.transpiler.passes.DAGLongestPath.name", "qiskit.transpiler.passes.DAGLongestPath.run", "Decompose", "qiskit.transpiler.passes.Decompose.name", "qiskit.transpiler.passes.Decompose.run", "DenseLayout", "qiskit.transpiler.passes.DenseLayout.name", "qiskit.transpiler.passes.DenseLayout.run", "Depth", "qiskit.transpiler.passes.Depth.name", "qiskit.transpiler.passes.Depth.run", "DynamicalDecoupling", "qiskit.transpiler.passes.DynamicalDecoupling.name", "qiskit.transpiler.passes.DynamicalDecoupling.run", "EchoRZXWeylDecomposition", "qiskit.transpiler.passes.EchoRZXWeylDecomposition.name", "qiskit.transpiler.passes.EchoRZXWeylDecomposition.run", "EnlargeWithAncilla", "qiskit.transpiler.passes.EnlargeWithAncilla.name", "qiskit.transpiler.passes.EnlargeWithAncilla.run", "FixedPoint", "qiskit.transpiler.passes.FixedPoint.name", "qiskit.transpiler.passes.FixedPoint.run", "FullAncillaAllocation", "qiskit.transpiler.passes.FullAncillaAllocation.name", "qiskit.transpiler.passes.FullAncillaAllocation.run", "qiskit.transpiler.passes.FullAncillaAllocation.validate_layout", "GateDirection", "qiskit.transpiler.passes.GateDirection.name", "qiskit.transpiler.passes.GateDirection.run", "GatesInBasis", "qiskit.transpiler.passes.GatesInBasis.name", "qiskit.transpiler.passes.GatesInBasis.run", "HoareOptimizer", "qiskit.transpiler.passes.HoareOptimizer.name", "qiskit.transpiler.passes.HoareOptimizer.run", "InstructionDurationCheck", "qiskit.transpiler.passes.InstructionDurationCheck.name", "qiskit.transpiler.passes.InstructionDurationCheck.run", "InverseCancellation", "qiskit.transpiler.passes.InverseCancellation.name", "qiskit.transpiler.passes.InverseCancellation.run", "Layout2qDistance", "qiskit.transpiler.passes.Layout2qDistance.name", "qiskit.transpiler.passes.Layout2qDistance.run", "LinearFunctionsSynthesis", "qiskit.transpiler.passes.LinearFunctionsSynthesis.name", "qiskit.transpiler.passes.LinearFunctionsSynthesis.run", "LinearFunctionsToPermutations", "qiskit.transpiler.passes.LinearFunctionsToPermutations.name", "qiskit.transpiler.passes.LinearFunctionsToPermutations.run", "LookaheadSwap", "qiskit.transpiler.passes.LookaheadSwap.name", "qiskit.transpiler.passes.LookaheadSwap.run", "MergeAdjacentBarriers", "qiskit.transpiler.passes.MergeAdjacentBarriers.name", "qiskit.transpiler.passes.MergeAdjacentBarriers.run", "NoiseAdaptiveLayout", "qiskit.transpiler.passes.NoiseAdaptiveLayout.name", "qiskit.transpiler.passes.NoiseAdaptiveLayout.run", "NumTensorFactors", "qiskit.transpiler.passes.NumTensorFactors.name", "qiskit.transpiler.passes.NumTensorFactors.run", "Optimize1qGates", "qiskit.transpiler.passes.Optimize1qGates.compose_u3", "qiskit.transpiler.passes.Optimize1qGates.name", "qiskit.transpiler.passes.Optimize1qGates.run", "qiskit.transpiler.passes.Optimize1qGates.yzy_to_zyz", "Optimize1qGatesDecomposition", "qiskit.transpiler.passes.Optimize1qGatesDecomposition.name", "qiskit.transpiler.passes.Optimize1qGatesDecomposition.run", "Optimize1qGatesSimpleCommutation", "qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.name", "qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation.run", "PadDelay", "qiskit.transpiler.passes.PadDelay.name", "qiskit.transpiler.passes.PadDelay.run", "PadDynamicalDecoupling", "qiskit.transpiler.passes.PadDynamicalDecoupling.name", "qiskit.transpiler.passes.PadDynamicalDecoupling.run", "PulseGates", "qiskit.transpiler.passes.PulseGates.get_calibration", "qiskit.transpiler.passes.PulseGates.name", "qiskit.transpiler.passes.PulseGates.run", "qiskit.transpiler.passes.PulseGates.supported", "RZXCalibrationBuilder", "qiskit.transpiler.passes.RZXCalibrationBuilder.get_calibration", "qiskit.transpiler.passes.RZXCalibrationBuilder.name", "qiskit.transpiler.passes.RZXCalibrationBuilder.rescale_cr_inst", "qiskit.transpiler.passes.RZXCalibrationBuilder.run", "qiskit.transpiler.passes.RZXCalibrationBuilder.supported", "RZXCalibrationBuilderNoEcho", "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.get_calibration", "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.name", "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.rescale_cr_inst", "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.run", "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho.supported", "RemoveBarriers", "qiskit.transpiler.passes.RemoveBarriers.name", "qiskit.transpiler.passes.RemoveBarriers.run", "RemoveDiagonalGatesBeforeMeasure", "qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.name", "qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure.run", "RemoveFinalMeasurements", "qiskit.transpiler.passes.RemoveFinalMeasurements.name", "qiskit.transpiler.passes.RemoveFinalMeasurements.run", "RemoveResetInZeroState", "qiskit.transpiler.passes.RemoveResetInZeroState.name", "qiskit.transpiler.passes.RemoveResetInZeroState.run", "SabreLayout", "qiskit.transpiler.passes.SabreLayout.name", "qiskit.transpiler.passes.SabreLayout.run", "SabreSwap", "qiskit.transpiler.passes.SabreSwap.name", "qiskit.transpiler.passes.SabreSwap.run", "SetIOLatency", "qiskit.transpiler.passes.SetIOLatency.name", "qiskit.transpiler.passes.SetIOLatency.run", "SetLayout", "qiskit.transpiler.passes.SetLayout.name", "qiskit.transpiler.passes.SetLayout.run", "Size", "qiskit.transpiler.passes.Size.name", "qiskit.transpiler.passes.Size.run", "StochasticSwap", "qiskit.transpiler.passes.StochasticSwap.name", "qiskit.transpiler.passes.StochasticSwap.run", "TemplateOptimization", "qiskit.transpiler.passes.TemplateOptimization.name", "qiskit.transpiler.passes.TemplateOptimization.run", "TimeUnitConversion", "qiskit.transpiler.passes.TimeUnitConversion.name", "qiskit.transpiler.passes.TimeUnitConversion.run", "TrivialLayout", "qiskit.transpiler.passes.TrivialLayout.name", "qiskit.transpiler.passes.TrivialLayout.run", "UnitarySynthesis", "qiskit.transpiler.passes.UnitarySynthesis.name", "qiskit.transpiler.passes.UnitarySynthesis.run", "Unroll3qOrMore", "qiskit.transpiler.passes.Unroll3qOrMore.name", "qiskit.transpiler.passes.Unroll3qOrMore.run", "UnrollCustomDefinitions", "qiskit.transpiler.passes.UnrollCustomDefinitions.name", "qiskit.transpiler.passes.UnrollCustomDefinitions.run", "Unroller", "qiskit.transpiler.passes.Unroller.name", "qiskit.transpiler.passes.Unroller.run", "VF2Layout", "qiskit.transpiler.passes.VF2Layout.name", "qiskit.transpiler.passes.VF2Layout.run", "VF2PostLayout", "qiskit.transpiler.passes.VF2PostLayout.name", "qiskit.transpiler.passes.VF2PostLayout.run", "ValidatePulseGates", "qiskit.transpiler.passes.ValidatePulseGates.name", "qiskit.transpiler.passes.ValidatePulseGates.run", "Width", "qiskit.transpiler.passes.Width.name", "qiskit.transpiler.passes.Width.run", "UnitarySynthesisPlugin", "qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin.run", "UnitarySynthesisPluginManager", "qiskit.transpiler.passes.synthesis.plugin.unitary_synthesis_plugin_names", "qiskit.transpiler.preset_passmanagers.generate_preset_pass_manager", "qiskit.transpiler.preset_passmanagers.level_0_pass_manager", "qiskit.transpiler.preset_passmanagers.level_1_pass_manager", "qiskit.transpiler.preset_passmanagers.level_2_pass_manager", "qiskit.transpiler.preset_passmanagers.level_3_pass_manager", "AQC", "qiskit.transpiler.synthesis.aqc.AQC.compile_unitary", "AQCSynthesisPlugin", "qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin.run", "ApproximateCircuit", "qiskit.transpiler.synthesis.aqc.ApproximateCircuit.build", "ApproximatingObjective", "qiskit.transpiler.synthesis.aqc.ApproximatingObjective.gradient", "qiskit.transpiler.synthesis.aqc.ApproximatingObjective.objective", "CNOTUnitCircuit", "qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit.build", "CNOTUnitObjective", "DefaultCNOTUnitObjective", "qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.gradient", "qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective.objective", "QuantumInstance", "qiskit.utils.QuantumInstance.assemble", "qiskit.utils.QuantumInstance.cals_matrix", "qiskit.utils.QuantumInstance.execute", "qiskit.utils.QuantumInstance.maybe_refresh_cals_matrix", "qiskit.utils.QuantumInstance.reset_execution_results", "qiskit.utils.QuantumInstance.set_config", "qiskit.utils.QuantumInstance.transpile", "qiskit.utils.algorithm_globals", "qiskit.utils.apply_prefix", "qiskit.utils.deprecate_arguments", "qiskit.utils.deprecate_function", "qiskit.utils.detach_prefix", "qiskit.utils.get_entangler_map", "qiskit.utils.has_aer", "qiskit.utils.has_ibmq", "qiskit.utils.is_main_process", "qiskit.utils.local_hardware_info", "CompleteMeasFitter", "qiskit.utils.mitigation.CompleteMeasFitter.add_data", "qiskit.utils.mitigation.CompleteMeasFitter.readout_fidelity", "qiskit.utils.mitigation.CompleteMeasFitter.subset_fitter", "TensoredMeasFitter", "qiskit.utils.mitigation.TensoredMeasFitter.add_data", "qiskit.utils.mitigation.TensoredMeasFitter.readout_fidelity", "qiskit.utils.name_args", "qiskit.utils.summarize_circuits", "qiskit.utils.validate_entangler_map", "qiskit.utils.wrap_method", "qiskit.visualization.VisualizationError", "qiskit.visualization.array_to_latex", "qiskit.visualization.circuit_drawer", "qiskit.visualization.dag_drawer", "qiskit.visualization.pass_manager_drawer", "qiskit.visualization.plot_bloch_multivector", "qiskit.visualization.plot_bloch_vector", "qiskit.visualization.plot_circuit_layout", "qiskit.visualization.plot_coupling_map", "qiskit.visualization.plot_error_map", "qiskit.visualization.plot_gate_map", "qiskit.visualization.plot_histogram", "qiskit.visualization.plot_state_city", "qiskit.visualization.plot_state_hinton", "qiskit.visualization.plot_state_paulivec", "qiskit.visualization.plot_state_qsphere", "IQXDebugging", "qiskit.visualization.pulse_v2.IQXDebugging.clear", "qiskit.visualization.pulse_v2.IQXDebugging.copy", "qiskit.visualization.pulse_v2.IQXDebugging.fromkeys", "qiskit.visualization.pulse_v2.IQXDebugging.get", "qiskit.visualization.pulse_v2.IQXDebugging.items", "qiskit.visualization.pulse_v2.IQXDebugging.keys", "qiskit.visualization.pulse_v2.IQXDebugging.pop", "qiskit.visualization.pulse_v2.IQXDebugging.popitem", "qiskit.visualization.pulse_v2.IQXDebugging.setdefault", "qiskit.visualization.pulse_v2.IQXDebugging.update", "qiskit.visualization.pulse_v2.IQXDebugging.values", "IQXSimple", "qiskit.visualization.pulse_v2.IQXSimple.clear", "qiskit.visualization.pulse_v2.IQXSimple.copy", "qiskit.visualization.pulse_v2.IQXSimple.fromkeys", "qiskit.visualization.pulse_v2.IQXSimple.get", "qiskit.visualization.pulse_v2.IQXSimple.items", "qiskit.visualization.pulse_v2.IQXSimple.keys", "qiskit.visualization.pulse_v2.IQXSimple.pop", "qiskit.visualization.pulse_v2.IQXSimple.popitem", "qiskit.visualization.pulse_v2.IQXSimple.setdefault", "qiskit.visualization.pulse_v2.IQXSimple.update", "qiskit.visualization.pulse_v2.IQXSimple.values", "IQXStandard", "qiskit.visualization.pulse_v2.IQXStandard.clear", "qiskit.visualization.pulse_v2.IQXStandard.copy", "qiskit.visualization.pulse_v2.IQXStandard.fromkeys", "qiskit.visualization.pulse_v2.IQXStandard.get", "qiskit.visualization.pulse_v2.IQXStandard.items", "qiskit.visualization.pulse_v2.IQXStandard.keys", "qiskit.visualization.pulse_v2.IQXStandard.pop", "qiskit.visualization.pulse_v2.IQXStandard.popitem", "qiskit.visualization.pulse_v2.IQXStandard.setdefault", "qiskit.visualization.pulse_v2.IQXStandard.update", "qiskit.visualization.pulse_v2.IQXStandard.values", "qiskit.visualization.pulse_v2.draw", "DefaultStyle", "qiskit.visualization.timeline.draw", "qiskit.visualization.timeline_drawer", "qiskit.visualization.visualize_transition", "Tutorials", "Qiskit \u306b\u304a\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5165\u9580", "VQE \u306e\u53ce\u675f\u6027\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0", "\u30ce\u30a4\u30ba\u306e\u3042\u308b Aer \u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3067\u306eVQE", "VQE \u306e\u9ad8\u5ea6\u306a\u4f7f\u3044\u65b9", "\u91cf\u5b50\u8fd1\u4f3c\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "Grover \u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u632f\u5e45\u5897\u5e45", "Grover \u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f8b", "Shor\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "\u53cd\u5fa9\u91cf\u5b50\u76f8\u63a8\u5b9a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "\u91cf\u5b50\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb", "\u56de\u8def\u306e\u57fa\u672c", "Qiskit \u5165\u9580", "Qiskit \u53ef\u8996\u5316\u30c4\u30fc\u30eb", "\u91cf\u5b50\u64cd\u4f5c\u306e\u6982\u8981", "\u56de\u8def\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb", "\u9ad8\u5ea6\u306a\u56de\u8def", "\u30aa\u30da\u30ec\u30fc\u30bf\u30fc", "\u91cf\u5b50\u56de\u8def\u306e\u53ef\u8996\u5316", "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc \u30d1\u30b9\u3068\u30d1\u30b9 \u30de\u30cd\u30fc\u30b8\u30e3\u30fc", "\u30d1\u30eb\u30b9\u30b2\u30fc\u30c8", "Pulse\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u306e\u69cb\u7bc9", "\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306e\u4f7f\u7528", "<code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> \u306b\u95a2\u3059\u308b\u60c5\u5831\u306e\u53d6\u5f97", "\u9ad8\u5ea6\u306a\u56de\u8def\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb", "Operator Flow", "Qiskit Gradient \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af", "\u6f14\u7b97\u5b50\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb", "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc", "\u30c7\u30d0\u30a4\u30b9\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u7528\u3044\u305f\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3", "\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9", "\u30ab\u30b9\u30bf\u30e0\u30e6\u30cb\u30bf\u30ea\u30fc\u30b2\u30fc\u30c8\u306b\u30ce\u30a4\u30ba\u3092\u9069\u7528\u3059\u308b", "\u30ce\u30a4\u30ba\u5909\u63db", "\u62e1\u5f35\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6\u30fc\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3", "\u884c\u5217\u7a4d\u72b6\u614b\u3092\u7528\u3044\u305f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6cd5", "\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30fb\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30fb\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb", "\u53cd\u5fa9\u91cf\u5b50\u76f8\u63a8\u5b9a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "Qiskit \u30c6\u30ad\u30b9\u30c8\u30fb\u30d6\u30c3\u30af\u30fb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"], "terms": {"provider": [0, 4, 20, 25, 26, 45, 47, 53, 57, 2275, 2277, 2282, 2285, 2291, 2293, 2297, 2314, 2320, 2323, 2332, 2337, 2344, 2349, 2358, 2363, 2371, 2376, 2384, 2801, 2906, 2909, 2913, 2918, 2922, 2927, 2931, 2941, 2950, 2959, 2963, 2976, 2980, 2993, 2997, 3005, 3011, 3013, 3019, 3026, 3030, 3043, 3047, 3060, 3064, 3077, 3081, 3093, 3097, 3110, 3114, 3126, 3130, 3143, 3147, 3159, 3163, 3176, 3180, 3193, 3197, 3210, 3214, 3227, 3231, 3244, 3248, 3261, 3265, 3278, 3282, 3294, 3298, 3311, 3315, 3328, 3332, 3344, 3348, 3361, 3365, 3378, 3382, 3388, 3390, 3403, 3407, 3420, 3429, 3437, 3441, 3454, 3458, 3470, 3474, 3482, 3485, 3492, 3501, 3505, 3517, 3521, 3534, 3538, 3550, 3559, 3563, 3576, 3580, 3593, 3597, 3609, 3617, 3626, 3630, 3643, 3647, 3659, 3663, 3676, 3680, 3692, 3696, 3704, 3705, 3707, 3710, 3711, 3718, 3719, 3722, 3726, 3727, 3736, 3737, 3743, 3748, 3749, 3750, 3752, 3755, 3766, 3777, 3782, 3789, 3793, 3812, 3834, 3837, 3863, 3876, 3891, 3895, 3909, 3922, 3935, 4252, 4270, 5250, 5286, 5288, 5289, 5345, 5347, 5354, 5355, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ".providers": [0, 18, 29, 35, 45, 48, 62, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2277, 2323, 2337, 2349, 2389, 2403, 2417, 2431, 2445, 2459, 2801, 2909, 2918, 2927, 3482, 3485, 3796, 3834, 3876, 3891, 3899, 3909, 4021, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060, 5331, 5333, 5334, 5339, 5340, 5347, 5364, 5365, 5366, 5367, 5368, 5369, 5370], ".aer": [0, 29, 33, 62, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2323, 2337, 2349, 2389, 2403, 2417, 2431, 2445, 2459, 2801, 5339, 5340, 5347, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "jobs": [0, 16, 21, 23, 29, 31, 53, 64, 1641, 2294, 2296, 2297, 2323, 2337, 2349, 2363, 2376, 2487, 2489, 2496, 2499, 2502, 2503, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3711, 3718, 3719, 3722, 3723, 3727, 3730, 3732, 3736, 3738, 3739, 3758, 3782, 3793, 3814, 3833, 3834, 3836, 3837, 3838, 3852, 3853, 3854, 3855, 3857, 3858, 3860, 3862, 3863, 3864, 3870, 3880, 3951, 5250], ".jobs": [0, 64, 3736, 3838], "instruction": [0, 16, 31, 35, 48, 64, 193, 197, 201, 211, 213, 233, 240, 244, 247, 251, 252, 253, 276, 280, 281, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 336, 347, 364, 368, 372, 382, 384, 404, 411, 415, 418, 422, 423, 424, 447, 451, 452, 458, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 507, 518, 523, 527, 531, 541, 543, 563, 570, 574, 577, 581, 582, 583, 606, 610, 611, 617, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 666, 677, 917, 923, 924, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 943, 944, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 974, 976, 978, 980, 981, 982, 983, 986, 987, 990, 991, 993, 994, 995, 996, 997, 1006, 1007, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1102, 1106, 1110, 1120, 1121, 1141, 1147, 1151, 1154, 1158, 1159, 1160, 1183, 1187, 1188, 1194, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1243, 1254, 1263, 1264, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1283, 1285, 1286, 1288, 1289, 1290, 1292, 1296, 1297, 1300, 1303, 1304, 1305, 1307, 1308, 1309, 1312, 1318, 1319, 1320, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1505, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1524, 1526, 1529, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1642, 1643, 1644, 1649, 1706, 1710, 1719, 1749, 1753, 1754, 1758, 1761, 1763, 1766, 1767, 1768, 1772, 1773, 1776, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1790, 1792, 1794, 1796, 1797, 1798, 1799, 1802, 1803, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1819, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1831, 1832, 1835, 1837, 1838, 1839, 1841, 1842, 1843, 1844, 1847, 1848, 1851, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1863, 1864, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1879, 1880, 1884, 1887, 1889, 1892, 1893, 1894, 1965, 2069, 2082, 2094, 2108, 2128, 2149, 2177, 2193, 2232, 2285, 2323, 2349, 2389, 2390, 2393, 2394, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2407, 2408, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2421, 2422, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2435, 2436, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2449, 2450, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2463, 2464, 2467, 2468, 2469, 2470, 2471, 2472, 2504, 2505, 2508, 2509, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2521, 2522, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2534, 2535, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2547, 2548, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2560, 2561, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2573, 2574, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2586, 2587, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2599, 2600, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2612, 2613, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2625, 2626, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2638, 2639, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2651, 2652, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2664, 2665, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2677, 2678, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2690, 2691, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2828, 2841, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3708, 3730, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3996, 3997, 4000, 4001, 4004, 4005, 4006, 4008, 4009, 4011, 4013, 4014, 4017, 4019, 4026, 4032, 4036, 4041, 4051, 4052, 4053, 4054, 4075, 4076, 4077, 4080, 4081, 4082, 4084, 4085, 4087, 4090, 4091, 4092, 4094, 4095, 4096, 4099, 4100, 4101, 4103, 4104, 4105, 4108, 4109, 4110, 4112, 4113, 4114, 4117, 4118, 4119, 4121, 4122, 4123, 4126, 4127, 4128, 4130, 4131, 4132, 4135, 4136, 4137, 4139, 4140, 4141, 4144, 4145, 4146, 4148, 4149, 4150, 4153, 4154, 4155, 4160, 4165, 4170, 4175, 4180, 4185, 4189, 4206, 4218, 4219, 4220, 4221, 4224, 4228, 4264, 4266, 4282, 4284, 4299, 4312, 4316, 4332, 4335, 4351, 4361, 4372, 4376, 4381, 4384, 4402, 4418, 4424, 4441, 4444, 4460, 4483, 4640, 4649, 4667, 4683, 4686, 4702, 4873, 4875, 4876, 4877, 4878, 4901, 4922, 4923, 4924, 4925, 4928, 4929, 4930, 4933, 4935, 4938, 4939, 4946, 4948, 4951, 4952, 4954, 4957, 4958, 5014, 5021, 5024, 5033, 5080, 5102, 5104, 5140, 5146, 5147, 5150, 5151, 5152, 5154, 5156, 5157, 5158, 5160, 5162, 5181, 5196, 5211, 5230, 5239, 5244, 5331, 5352, 5353, 5356, 5357, 5361, 5364, 5366], "library": [0, 12, 28, 31, 39, 53, 57, 64, 69, 97, 725, 734, 743, 752, 789, 904, 912, 1000, 1001, 1002, 1003, 1004, 1081, 1097, 1648, 1649, 2482, 2883, 4182, 4249, 4251, 4973, 5208, 5355, 5356, 5357], ".library": [0, 1, 20, 30, 31, 48, 64, 69, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 849, 877, 970, 1230, 1231, 1232, 1233, 1234, 1388, 1410, 1448, 1450, 1462, 1465, 1468, 1567, 1650, 2323, 2389, 2403, 2417, 2431, 2445, 2459, 4182, 4818, 4820, 4822, 4824, 4826, 4922, 4923, 5014, 5077, 5143, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5355, 5356, 5357, 5358, 5361, 5362], "noise": [0, 1, 7, 33, 35, 48, 53, 64, 136, 147, 165, 172, 683, 877, 1644, 1994, 2277, 2323, 2349, 2376, 2798, 2801, 2802, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2830, 2842, 2845, 2847, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2879, 2880, 2884, 2885, 2886, 2888, 2889, 2890, 2891, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3929, 5043, 5123, 5234, 5250, 5339, 5365, 5367, 5368], "models": [0, 7, 11, 44, 64, 186, 877, 2323, 2798, 2801, 5339], ".noise": [0, 64, 2801, 5339, 5365, 5366, 5367, 5368], "pulse": [0, 16, 39, 42, 45, 64, 193, 195, 364, 366, 523, 525, 918, 1102, 1104, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1542, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1654, 1655, 1722, 2285, 2286, 2287, 2288, 2289, 2323, 2328, 2337, 2340, 2345, 2346, 2349, 2354, 2363, 2368, 2376, 2381, 2862, 2867, 2963, 2964, 2965, 2966, 2967, 2969, 2980, 2981, 2982, 2983, 2984, 2986, 2997, 2998, 2999, 3000, 3001, 3003, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3030, 3031, 3032, 3033, 3034, 3036, 3047, 3048, 3049, 3050, 3051, 3053, 3064, 3065, 3066, 3067, 3068, 3070, 3081, 3082, 3083, 3084, 3085, 3087, 3097, 3098, 3099, 3100, 3101, 3103, 3114, 3115, 3116, 3117, 3118, 3120, 3130, 3131, 3132, 3133, 3134, 3136, 3147, 3148, 3149, 3150, 3151, 3153, 3163, 3164, 3165, 3166, 3167, 3169, 3180, 3181, 3182, 3183, 3184, 3186, 3197, 3198, 3199, 3200, 3201, 3203, 3214, 3215, 3216, 3217, 3218, 3220, 3231, 3232, 3233, 3234, 3235, 3237, 3248, 3249, 3250, 3251, 3252, 3254, 3265, 3266, 3267, 3268, 3269, 3271, 3282, 3283, 3284, 3285, 3286, 3288, 3298, 3299, 3300, 3301, 3302, 3304, 3315, 3316, 3317, 3318, 3319, 3321, 3332, 3333, 3334, 3335, 3336, 3338, 3348, 3349, 3350, 3351, 3352, 3354, 3365, 3366, 3367, 3368, 3369, 3371, 3382, 3383, 3384, 3385, 3386, 3390, 3391, 3392, 3393, 3394, 3396, 3407, 3408, 3409, 3410, 3411, 3413, 3415, 3417, 3441, 3442, 3443, 3444, 3445, 3447, 3458, 3459, 3460, 3461, 3462, 3464, 3474, 3475, 3476, 3477, 3478, 3480, 3505, 3506, 3507, 3508, 3509, 3511, 3521, 3522, 3523, 3524, 3525, 3527, 3538, 3539, 3540, 3541, 3542, 3544, 3563, 3564, 3565, 3566, 3567, 3569, 3580, 3581, 3582, 3583, 3584, 3586, 3597, 3598, 3599, 3600, 3601, 3603, 3630, 3631, 3632, 3633, 3634, 3636, 3647, 3648, 3649, 3650, 3651, 3653, 3663, 3664, 3665, 3666, 3667, 3669, 3680, 3681, 3682, 3683, 3684, 3686, 3696, 3697, 3698, 3699, 3700, 3702, 3721, 3730, 3801, 3834, 3838, 3864, 3932, 3954, 3963, 3973, 3976, 3983, 3993, 3999, 4006, 4008, 4012, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4080, 4084, 4090, 4099, 4103, 4108, 4117, 4126, 4135, 4144, 4153, 4157, 4158, 4159, 4162, 4163, 4164, 4167, 4168, 4169, 4172, 4173, 4174, 4177, 4178, 4179, 4182, 4183, 4184, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4206, 4219, 4220, 4221, 4223, 4228, 4246, 4249, 4251, 4252, 4254, 4255, 4257, 4258, 4261, 4264, 4273, 4279, 4298, 4705, 4814, 4816, 4878, 4922, 4929, 4946, 4952, 4958, 5021, 5102, 5143, 5146, 5151, 5154, 5157, 5160, 5181, 5202, 5220, 5222, 5226, 5239, 5244, 5295, 5307, 5319, 5331, 5356, 5358, 5359, 5364, 5366], "system": [0, 33, 35, 63, 64, 88, 165, 172, 180, 181, 182, 185, 186, 187, 188, 189, 190, 193, 277, 352, 353, 356, 358, 361, 362, 363, 364, 448, 607, 912, 918, 1184, 1945, 2018, 2161, 2232, 2285, 2323, 2337, 2349, 2363, 2376, 2862, 2867, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3935, 3963, 3964, 3965, 3967, 3971, 4182, 4398, 4664, 4922, 5333, 5334, 5353, 5362, 5366], ".pulse": [0, 16, 39, 45, 64, 4182, 4878, 5154, 5160, 5356, 5357], "utilities": [0, 18, 19, 45, 64], ".utils": [0, 18, 45, 64, 162, 683, 761, 849, 877, 904, 3926, 5250, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5362, 5368], "circuit": [0, 3, 4, 8, 16, 25, 29, 30, 31, 33, 44, 45, 48, 51, 53, 56, 62, 64, 66, 69, 72, 74, 75, 79, 86, 93, 95, 97, 99, 101, 103, 104, 111, 113, 115, 116, 117, 120, 121, 123, 136, 137, 138, 139, 140, 147, 149, 150, 151, 157, 163, 165, 167, 168, 169, 172, 174, 175, 176, 179, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 197, 198, 199, 200, 205, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 238, 239, 240, 247, 248, 251, 252, 253, 254, 255, 256, 262, 264, 266, 267, 269, 271, 272, 275, 276, 277, 280, 281, 285, 286, 288, 289, 291, 293, 301, 303, 304, 308, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 334, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 353, 355, 356, 358, 361, 363, 364, 365, 368, 369, 370, 371, 376, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 409, 410, 411, 418, 419, 422, 423, 424, 425, 426, 427, 433, 435, 437, 438, 440, 442, 443, 446, 447, 448, 451, 452, 456, 457, 459, 460, 462, 464, 472, 474, 475, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 505, 506, 507, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 527, 528, 529, 530, 535, 539, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 563, 564, 565, 568, 569, 570, 577, 578, 581, 582, 583, 584, 585, 586, 592, 594, 596, 597, 599, 601, 602, 605, 606, 607, 610, 611, 615, 616, 618, 619, 621, 623, 631, 633, 634, 638, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 664, 665, 666, 672, 673, 674, 675, 676, 677, 678, 679, 693, 849, 852, 877, 904, 916, 918, 923, 928, 943, 948, 961, 970, 976, 991, 1001, 1006, 1011, 1026, 1036, 1041, 1046, 1055, 1063, 1065, 1067, 1081, 1097, 1102, 1103, 1106, 1107, 1108, 1109, 1114, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1154, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1169, 1171, 1173, 1174, 1176, 1178, 1179, 1182, 1183, 1184, 1187, 1188, 1192, 1193, 1195, 1196, 1198, 1200, 1208, 1210, 1211, 1215, 1217, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1241, 1242, 1243, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1263, 1268, 1283, 1293, 1301, 1303, 1313, 1318, 1324, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1433, 1441, 1443, 1447, 1448, 1450, 1451, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1509, 1517, 1519, 1524, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1661, 1662, 1666, 1667, 1671, 1673, 1682, 1690, 1691, 1692, 1695, 1700, 1701, 1707, 1708, 1711, 1717, 1722, 1729, 1740, 1746, 1748, 1750, 1752, 1761, 1777, 1778, 1786, 1792, 1807, 1821, 1837, 1853, 1869, 1879, 1887, 1903, 1913, 1922, 1923, 1926, 1929, 1930, 1934, 1939, 1957, 1964, 1968, 1970, 1974, 1976, 1978, 1982, 1983, 1990, 1998, 2002, 2004, 2012, 2016, 2027, 2031, 2036, 2047, 2060, 2066, 2067, 2068, 2073, 2076, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2168, 2171, 2185, 2189, 2199, 2202, 2212, 2215, 2240, 2245, 2256, 2259, 2265, 2267, 2269, 2271, 2272, 2274, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2394, 2395, 2408, 2409, 2422, 2423, 2436, 2437, 2445, 2450, 2451, 2459, 2464, 2465, 2494, 2501, 2509, 2522, 2530, 2535, 2548, 2556, 2561, 2569, 2574, 2582, 2587, 2600, 2613, 2621, 2626, 2634, 2639, 2647, 2652, 2660, 2665, 2673, 2678, 2686, 2691, 2699, 2704, 2712, 2717, 2725, 2730, 2738, 2743, 2751, 2756, 2764, 2769, 2779, 2781, 2782, 2786, 2788, 2789, 2790, 2791, 2792, 2794, 2795, 2796, 2797, 2798, 2801, 2805, 2808, 2813, 2817, 2828, 2841, 2879, 2880, 2888, 2915, 2924, 2927, 2933, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3730, 3756, 3757, 3760, 3761, 3838, 3855, 3864, 3871, 3876, 3896, 3922, 3982, 3991, 4023, 4030, 4031, 4032, 4033, 4035, 4057, 4058, 4059, 4060, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4219, 4234, 4242, 4243, 4244, 4245, 4297, 4298, 4299, 4311, 4332, 4351, 4354, 4361, 4370, 4381, 4384, 4418, 4432, 4460, 4483, 4595, 4640, 4649, 4683, 4702, 4716, 4747, 4751, 4769, 4803, 4805, 4806, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4866, 4900, 4901, 4915, 4921, 4922, 4948, 4951, 4954, 4957, 4958, 4960, 4961, 4964, 4973, 4975, 4984, 4991, 4996, 4999, 5006, 5011, 5014, 5016, 5021, 5023, 5027, 5033, 5068, 5071, 5074, 5077, 5079, 5080, 5082, 5083, 5089, 5091, 5095, 5099, 5102, 5104, 5108, 5117, 5120, 5123, 5126, 5140, 5143, 5146, 5163, 5169, 5175, 5178, 5181, 5183, 5184, 5187, 5190, 5193, 5195, 5196, 5199, 5202, 5205, 5211, 5214, 5217, 5223, 5227, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5244, 5245, 5246, 5247, 5250, 5281, 5282, 5286, 5332, 5333, 5334, 5335, 5342, 5344, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5359, 5362, 5364, 5365, 5366, 5367, 5369, 5370], "extensions": [0, 45, 64, 1387], ".extensions": [0, 45, 64, 253, 276, 424, 447, 583, 606, 979, 1029, 1160, 1183, 1287, 1306, 1640, 1772, 2323, 2349, 5353], "running": [0, 25, 31, 48, 53, 64, 92, 103, 105, 140, 186, 235, 406, 565, 841, 912, 1143, 2282, 2283, 2291, 2292, 2295, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2483, 2497, 2902, 2916, 2925, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3011, 3012, 3019, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3388, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3711, 3719, 3723, 3731, 3738, 3739, 3796, 3815, 3816, 3880, 3897, 4006, 4241, 4813, 4915, 4964, 4973, 5143, 5250, 5268, 5272, 5281, 5342], "with": [0, 1, 3, 8, 10, 11, 16, 19, 20, 28, 30, 31, 33, 35, 39, 44, 48, 51, 53, 54, 57, 58, 59, 60, 62, 63, 69, 74, 75, 76, 80, 82, 85, 88, 89, 91, 96, 97, 99, 102, 103, 106, 107, 110, 114, 119, 121, 124, 126, 129, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 145, 147, 148, 151, 159, 161, 162, 165, 166, 169, 172, 173, 176, 179, 186, 191, 192, 193, 197, 198, 200, 209, 210, 211, 215, 216, 232, 235, 238, 239, 240, 241, 251, 252, 253, 255, 256, 262, 266, 267, 276, 277, 288, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 334, 337, 342, 343, 344, 345, 347, 364, 368, 369, 371, 380, 381, 382, 386, 387, 403, 406, 409, 410, 411, 412, 422, 423, 424, 426, 427, 433, 437, 438, 447, 448, 459, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 505, 508, 513, 514, 515, 516, 518, 523, 527, 528, 530, 539, 540, 541, 545, 546, 562, 565, 568, 569, 570, 571, 581, 582, 583, 585, 586, 592, 596, 597, 606, 607, 618, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 664, 667, 672, 673, 674, 675, 677, 683, 685, 691, 693, 695, 699, 701, 703, 707, 711, 715, 719, 723, 725, 728, 732, 734, 737, 741, 743, 746, 750, 755, 759, 764, 771, 773, 775, 779, 781, 783, 787, 792, 796, 798, 800, 804, 808, 812, 816, 820, 824, 828, 831, 835, 839, 841, 843, 847, 849, 850, 852, 854, 856, 859, 861, 863, 867, 869, 871, 875, 877, 878, 881, 883, 886, 890, 894, 896, 898, 902, 904, 906, 910, 912, 920, 926, 928, 932, 933, 936, 938, 939, 946, 948, 952, 953, 959, 961, 965, 966, 967, 970, 973, 976, 981, 982, 989, 991, 995, 996, 1003, 1009, 1011, 1015, 1016, 1017, 1023, 1026, 1031, 1032, 1036, 1039, 1041, 1045, 1046, 1047, 1053, 1055, 1059, 1060, 1063, 1080, 1081, 1096, 1097, 1102, 1106, 1107, 1109, 1118, 1119, 1120, 1123, 1124, 1140, 1143, 1145, 1146, 1147, 1148, 1158, 1159, 1160, 1162, 1163, 1169, 1173, 1174, 1183, 1184, 1195, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1241, 1244, 1249, 1250, 1251, 1252, 1254, 1259, 1263, 1266, 1268, 1272, 1273, 1274, 1280, 1283, 1289, 1290, 1293, 1296, 1299, 1303, 1308, 1309, 1311, 1313, 1318, 1322, 1324, 1328, 1329, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1415, 1416, 1419, 1421, 1424, 1431, 1433, 1437, 1438, 1441, 1443, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1490, 1495, 1500, 1502, 1503, 1507, 1509, 1513, 1514, 1526, 1527, 1537, 1544, 1547, 1550, 1551, 1555, 1559, 1563, 1567, 1640, 1641, 1644, 1648, 1649, 1661, 1662, 1666, 1667, 1668, 1682, 1686, 1691, 1698, 1700, 1706, 1708, 1710, 1711, 1717, 1722, 1757, 1761, 1766, 1767, 1772, 1775, 1777, 1778, 1782, 1783, 1786, 1789, 1792, 1797, 1798, 1805, 1807, 1811, 1812, 1818, 1821, 1826, 1827, 1834, 1837, 1842, 1843, 1850, 1853, 1858, 1859, 1866, 1869, 1874, 1875, 1883, 1887, 1892, 1893, 1899, 1901, 1902, 1903, 1906, 1913, 1914, 1923, 1926, 1928, 1930, 1932, 1934, 1936, 1937, 1938, 1939, 1948, 1949, 1950, 1954, 1956, 1957, 1959, 1964, 1968, 1969, 1970, 1971, 1974, 1983, 1985, 1986, 1987, 1990, 1992, 1994, 1997, 1998, 2000, 2001, 2002, 2004, 2005, 2007, 2008, 2011, 2015, 2018, 2019, 2024, 2025, 2027, 2028, 2032, 2033, 2035, 2036, 2039, 2044, 2047, 2048, 2055, 2056, 2063, 2064, 2066, 2070, 2072, 2073, 2075, 2079, 2085, 2087, 2089, 2093, 2098, 2100, 2102, 2106, 2113, 2115, 2117, 2119, 2127, 2133, 2135, 2136, 2138, 2145, 2146, 2154, 2156, 2161, 2162, 2163, 2165, 2166, 2170, 2171, 2178, 2180, 2181, 2182, 2188, 2189, 2196, 2198, 2201, 2202, 2209, 2211, 2214, 2215, 2221, 2224, 2226, 2232, 2233, 2235, 2236, 2238, 2241, 2244, 2245, 2246, 2253, 2255, 2258, 2259, 2265, 2269, 2277, 2282, 2283, 2292, 2297, 2312, 2318, 2323, 2333, 2337, 2349, 2359, 2372, 2376, 2385, 2392, 2394, 2399, 2400, 2406, 2408, 2413, 2414, 2420, 2422, 2427, 2428, 2434, 2436, 2441, 2442, 2448, 2450, 2455, 2456, 2462, 2464, 2469, 2470, 2473, 2487, 2502, 2503, 2507, 2509, 2513, 2514, 2520, 2522, 2526, 2527, 2533, 2535, 2539, 2540, 2546, 2548, 2552, 2553, 2559, 2561, 2565, 2566, 2572, 2574, 2578, 2579, 2585, 2587, 2591, 2592, 2598, 2600, 2604, 2605, 2611, 2613, 2617, 2618, 2624, 2626, 2630, 2631, 2637, 2639, 2643, 2644, 2650, 2652, 2656, 2657, 2663, 2665, 2669, 2670, 2676, 2678, 2682, 2683, 2689, 2691, 2695, 2696, 2702, 2704, 2708, 2709, 2715, 2717, 2721, 2722, 2728, 2730, 2734, 2735, 2741, 2743, 2747, 2748, 2754, 2756, 2760, 2761, 2767, 2769, 2773, 2774, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2808, 2813, 2814, 2818, 2822, 2823, 2826, 2836, 2847, 2848, 2849, 2864, 2867, 2875, 2886, 2888, 2889, 2891, 2892, 2894, 2909, 2916, 2918, 2925, 2927, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3005, 3012, 3013, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3704, 3705, 3711, 3718, 3719, 3722, 3723, 3727, 3728, 3729, 3731, 3737, 3738, 3739, 3741, 3748, 3753, 3757, 3760, 3761, 3762, 3767, 3777, 3779, 3781, 3782, 3789, 3792, 3793, 3796, 3798, 3799, 3809, 3813, 3814, 3818, 3821, 3822, 3823, 3824, 3833, 3834, 3852, 3867, 3868, 3876, 3888, 3889, 3891, 3897, 3901, 3904, 3905, 3909, 3925, 3930, 3963, 3966, 3982, 3983, 3985, 3993, 3994, 3995, 3999, 4000, 4001, 4003, 4004, 4006, 4008, 4009, 4010, 4012, 4013, 4014, 4016, 4019, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4081, 4085, 4086, 4091, 4094, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154, 4157, 4158, 4159, 4162, 4163, 4164, 4168, 4169, 4172, 4173, 4174, 4178, 4179, 4182, 4183, 4184, 4188, 4193, 4194, 4195, 4196, 4197, 4200, 4201, 4203, 4204, 4206, 4207, 4210, 4213, 4216, 4218, 4219, 4220, 4223, 4225, 4227, 4229, 4231, 4254, 4272, 4287, 4297, 4298, 4299, 4301, 4305, 4308, 4309, 4310, 4311, 4318, 4322, 4330, 4331, 4335, 4337, 4341, 4349, 4350, 4356, 4360, 4367, 4368, 4369, 4376, 4385, 4389, 4390, 4393, 4402, 4404, 4408, 4416, 4417, 4424, 4426, 4431, 4438, 4439, 4440, 4444, 4446, 4450, 4458, 4459, 4463, 4465, 4466, 4467, 4470, 4474, 4476, 4479, 4480, 4482, 4487, 4489, 4490, 4492, 4493, 4497, 4506, 4511, 4512, 4514, 4519, 4521, 4523, 4524, 4525, 4528, 4529, 4530, 4533, 4537, 4538, 4540, 4554, 4558, 4563, 4564, 4570, 4571, 4576, 4578, 4579, 4586, 4587, 4589, 4590, 4591, 4604, 4605, 4614, 4616, 4617, 4618, 4619, 4620, 4623, 4624, 4625, 4626, 4628, 4632, 4633, 4634, 4635, 4640, 4650, 4655, 4656, 4659, 4669, 4673, 4681, 4682, 4686, 4688, 4692, 4700, 4701, 4706, 4707, 4708, 4709, 4714, 4716, 4720, 4745, 4751, 4754, 4756, 4757, 4760, 4763, 4767, 4774, 4777, 4779, 4784, 4788, 4791, 4793, 4799, 4803, 4805, 4806, 4811, 4812, 4813, 4819, 4839, 4849, 4873, 4875, 4877, 4878, 4887, 4893, 4894, 4900, 4906, 4912, 4921, 4922, 4923, 4928, 4929, 4930, 4946, 4952, 4958, 4960, 4961, 4963, 4964, 4970, 4972, 4973, 4976, 4988, 5014, 5017, 5020, 5021, 5023, 5033, 5047, 5050, 5051, 5077, 5079, 5080, 5083, 5091, 5113, 5116, 5117, 5119, 5120, 5123, 5137, 5140, 5142, 5143, 5145, 5146, 5149, 5151, 5152, 5154, 5155, 5160, 5161, 5163, 5175, 5178, 5180, 5181, 5190, 5192, 5196, 5198, 5202, 5204, 5207, 5208, 5214, 5217, 5220, 5222, 5226, 5230, 5234, 5235, 5236, 5239, 5242, 5244, 5248, 5250, 5253, 5262, 5263, 5278, 5280, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5298, 5304, 5307, 5310, 5316, 5319, 5322, 5328, 5331, 5333, 5334, 5335, 5339, 5340, 5341, 5345, 5349, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5365, 5366, 5367, 5369, 5372], "threadpool": 0, "and": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 16, 20, 24, 25, 28, 30, 31, 33, 34, 35, 39, 44, 45, 47, 51, 53, 54, 57, 59, 60, 62, 66, 69, 74, 78, 82, 86, 88, 92, 93, 94, 97, 98, 99, 103, 104, 105, 107, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 126, 130, 131, 133, 134, 136, 137, 138, 140, 142, 143, 146, 147, 148, 150, 151, 156, 157, 158, 163, 165, 166, 168, 169, 172, 173, 175, 176, 179, 180, 185, 186, 188, 190, 193, 195, 197, 198, 200, 201, 206, 212, 213, 214, 216, 233, 234, 235, 237, 238, 240, 242, 243, 252, 253, 255, 256, 262, 264, 271, 275, 276, 277, 279, 285, 288, 304, 322, 323, 324, 325, 326, 327, 328, 342, 343, 344, 345, 347, 356, 361, 363, 364, 366, 368, 369, 371, 372, 377, 383, 384, 385, 387, 404, 405, 406, 408, 409, 411, 413, 414, 423, 424, 426, 427, 433, 435, 442, 446, 447, 448, 450, 456, 459, 475, 493, 494, 495, 496, 497, 498, 499, 513, 514, 515, 516, 518, 523, 525, 527, 528, 530, 531, 536, 542, 543, 544, 546, 563, 564, 565, 567, 568, 570, 572, 573, 582, 583, 585, 586, 592, 594, 601, 605, 606, 607, 609, 615, 618, 634, 652, 653, 654, 655, 656, 657, 658, 672, 673, 674, 675, 677, 682, 683, 693, 694, 701, 709, 725, 765, 768, 769, 773, 781, 789, 798, 806, 814, 822, 832, 833, 841, 849, 850, 861, 869, 877, 878, 896, 904, 912, 913, 918, 920, 927, 929, 934, 936, 939, 943, 947, 949, 954, 960, 962, 966, 968, 970, 973, 974, 983, 986, 990, 997, 1010, 1012, 1016, 1018, 1023, 1024, 1027, 1033, 1036, 1040, 1042, 1046, 1048, 1054, 1056, 1061, 1063, 1064, 1065, 1081, 1097, 1101, 1102, 1104, 1106, 1107, 1109, 1110, 1115, 1121, 1122, 1124, 1141, 1142, 1143, 1145, 1147, 1149, 1150, 1159, 1160, 1162, 1163, 1169, 1171, 1178, 1182, 1183, 1184, 1186, 1192, 1195, 1211, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1249, 1250, 1251, 1252, 1254, 1259, 1267, 1269, 1273, 1275, 1280, 1281, 1285, 1292, 1293, 1296, 1299, 1300, 1301, 1304, 1312, 1323, 1330, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1432, 1434, 1439, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1450, 1456, 1457, 1458, 1459, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1489, 1494, 1496, 1501, 1503, 1508, 1510, 1515, 1517, 1519, 1522, 1524, 1526, 1527, 1529, 1530, 1533, 1535, 1537, 1539, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1563, 1564, 1567, 1586, 1640, 1641, 1642, 1643, 1644, 1648, 1649, 1654, 1655, 1660, 1663, 1668, 1672, 1673, 1674, 1675, 1682, 1683, 1684, 1694, 1696, 1697, 1706, 1710, 1712, 1714, 1715, 1716, 1719, 1722, 1725, 1732, 1747, 1753, 1757, 1758, 1768, 1772, 1776, 1779, 1784, 1789, 1790, 1799, 1806, 1813, 1815, 1818, 1819, 1822, 1828, 1834, 1835, 1838, 1844, 1850, 1851, 1854, 1860, 1866, 1867, 1870, 1876, 1883, 1884, 1894, 1898, 1899, 1901, 1902, 1903, 1905, 1906, 1908, 1911, 1913, 1920, 1921, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1931, 1934, 1935, 1936, 1937, 1939, 1943, 1945, 1947, 1948, 1953, 1954, 1956, 1957, 1958, 1959, 1962, 1964, 1969, 1970, 1978, 1983, 1985, 1986, 1987, 1990, 1992, 1993, 1994, 1996, 1997, 1998, 2000, 2001, 2002, 2004, 2006, 2010, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2022, 2024, 2025, 2027, 2028, 2032, 2033, 2035, 2036, 2038, 2039, 2042, 2045, 2047, 2049, 2051, 2055, 2056, 2058, 2059, 2060, 2061, 2063, 2064, 2066, 2068, 2070, 2072, 2073, 2074, 2075, 2077, 2079, 2085, 2087, 2088, 2089, 2092, 2093, 2098, 2100, 2101, 2102, 2104, 2105, 2106, 2113, 2115, 2116, 2117, 2119, 2123, 2124, 2125, 2127, 2132, 2133, 2135, 2136, 2137, 2138, 2141, 2143, 2145, 2154, 2155, 2156, 2160, 2161, 2162, 2163, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2177, 2178, 2180, 2181, 2182, 2186, 2189, 2192, 2195, 2196, 2198, 2200, 2201, 2202, 2204, 2208, 2209, 2211, 2213, 2214, 2215, 2216, 2217, 2220, 2221, 2223, 2224, 2225, 2226, 2232, 2233, 2235, 2236, 2237, 2238, 2239, 2242, 2244, 2245, 2248, 2252, 2253, 2255, 2257, 2258, 2259, 2261, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2273, 2274, 2275, 2277, 2282, 2285, 2290, 2293, 2297, 2311, 2313, 2323, 2333, 2334, 2337, 2345, 2346, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2389, 2393, 2401, 2403, 2407, 2415, 2417, 2421, 2429, 2431, 2435, 2443, 2445, 2449, 2457, 2459, 2463, 2471, 2487, 2494, 2508, 2515, 2521, 2528, 2534, 2541, 2547, 2554, 2560, 2567, 2569, 2573, 2580, 2586, 2593, 2599, 2606, 2612, 2619, 2625, 2632, 2638, 2645, 2651, 2658, 2664, 2671, 2677, 2684, 2690, 2697, 2703, 2705, 2710, 2716, 2718, 2723, 2729, 2731, 2736, 2742, 2744, 2749, 2755, 2757, 2762, 2768, 2770, 2775, 2782, 2798, 2801, 2805, 2808, 2813, 2814, 2817, 2818, 2819, 2822, 2823, 2826, 2830, 2842, 2847, 2848, 2854, 2856, 2857, 2858, 2861, 2866, 2867, 2875, 2883, 2884, 2885, 2886, 2887, 2889, 2915, 2924, 2933, 2968, 2969, 2985, 2986, 3002, 3003, 3010, 3018, 3035, 3036, 3052, 3053, 3069, 3070, 3086, 3087, 3102, 3103, 3119, 3120, 3135, 3136, 3152, 3153, 3168, 3169, 3185, 3186, 3202, 3203, 3219, 3220, 3236, 3237, 3253, 3254, 3270, 3271, 3287, 3288, 3303, 3304, 3320, 3321, 3337, 3338, 3353, 3354, 3370, 3371, 3387, 3395, 3396, 3412, 3413, 3446, 3447, 3463, 3464, 3479, 3480, 3510, 3511, 3526, 3527, 3543, 3544, 3568, 3569, 3585, 3586, 3602, 3603, 3635, 3636, 3652, 3653, 3668, 3669, 3685, 3686, 3701, 3702, 3704, 3708, 3718, 3719, 3722, 3723, 3725, 3728, 3730, 3737, 3738, 3739, 3744, 3748, 3754, 3757, 3760, 3766, 3767, 3769, 3777, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3789, 3791, 3792, 3793, 3794, 3796, 3811, 3812, 3814, 3817, 3821, 3823, 3834, 3838, 3852, 3855, 3862, 3868, 3869, 3876, 3880, 3882, 3887, 3888, 3889, 3896, 3899, 3901, 3904, 3905, 3908, 3915, 3920, 3923, 3926, 3927, 3929, 3932, 3940, 3941, 3942, 3945, 3957, 3963, 3973, 3976, 3982, 3983, 3989, 3991, 3993, 3994, 3999, 4000, 4001, 4003, 4008, 4012, 4013, 4014, 4016, 4020, 4025, 4026, 4030, 4031, 4032, 4037, 4039, 4041, 4042, 4046, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4084, 4085, 4094, 4095, 4103, 4104, 4113, 4122, 4131, 4140, 4148, 4149, 4157, 4158, 4159, 4162, 4163, 4164, 4167, 4168, 4169, 4172, 4173, 4174, 4177, 4178, 4179, 4182, 4183, 4184, 4188, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4203, 4206, 4219, 4220, 4224, 4229, 4231, 4232, 4241, 4244, 4245, 4246, 4254, 4255, 4264, 4272, 4273, 4282, 4287, 4297, 4298, 4299, 4301, 4305, 4308, 4309, 4310, 4311, 4316, 4318, 4322, 4329, 4330, 4331, 4335, 4337, 4341, 4348, 4349, 4350, 4354, 4356, 4360, 4367, 4368, 4369, 4384, 4387, 4388, 4389, 4394, 4395, 4398, 4402, 4404, 4408, 4415, 4416, 4417, 4421, 4423, 4424, 4426, 4431, 4437, 4438, 4440, 4444, 4446, 4450, 4457, 4458, 4459, 4463, 4467, 4473, 4474, 4479, 4480, 4482, 4484, 4487, 4497, 4500, 4506, 4511, 4512, 4516, 4519, 4523, 4525, 4528, 4529, 4533, 4537, 4538, 4542, 4552, 4554, 4558, 4563, 4564, 4568, 4570, 4571, 4576, 4577, 4579, 4586, 4587, 4588, 4590, 4591, 4603, 4607, 4608, 4614, 4618, 4623, 4628, 4632, 4633, 4637, 4649, 4652, 4654, 4655, 4658, 4660, 4661, 4664, 4667, 4669, 4673, 4680, 4681, 4682, 4686, 4688, 4692, 4699, 4700, 4701, 4706, 4707, 4708, 4709, 4714, 4716, 4720, 4726, 4728, 4739, 4740, 4743, 4744, 4745, 4747, 4749, 4751, 4754, 4761, 4762, 4765, 4767, 4769, 4771, 4773, 4777, 4782, 4783, 4785, 4787, 4791, 4796, 4797, 4798, 4800, 4803, 4805, 4811, 4812, 4813, 4819, 4821, 4823, 4825, 4831, 4839, 4843, 4847, 4848, 4858, 4873, 4874, 4875, 4880, 4882, 4884, 4887, 4888, 4890, 4893, 4894, 4895, 4896, 4897, 4900, 4902, 4906, 4910, 4911, 4913, 4915, 4916, 4917, 4918, 4921, 4922, 4923, 4927, 4928, 4930, 4938, 4941, 4946, 4949, 4952, 4955, 4958, 4960, 4961, 4964, 4966, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4994, 4996, 4997, 4999, 5000, 5003, 5006, 5008, 5010, 5011, 5014, 5016, 5017, 5018, 5020, 5021, 5023, 5024, 5027, 5030, 5033, 5039, 5041, 5044, 5045, 5047, 5053, 5054, 5061, 5062, 5065, 5068, 5071, 5073, 5074, 5077, 5080, 5083, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5132, 5133, 5134, 5137, 5140, 5143, 5146, 5147, 5151, 5152, 5157, 5158, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5198, 5199, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5220, 5222, 5223, 5226, 5227, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5241, 5244, 5246, 5250, 5252, 5253, 5257, 5259, 5260, 5262, 5263, 5268, 5270, 5272, 5276, 5277, 5278, 5280, 5281, 5282, 5283, 5284, 5285, 5287, 5290, 5291, 5292, 5293, 5294, 5295, 5298, 5302, 5303, 5305, 5307, 5310, 5314, 5315, 5317, 5319, 5322, 5326, 5327, 5329, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "dask": [0, 64, 2473, 2487], "\u30d0\u30fc\u30b8\u30e7\u30f3": [1, 58, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1063, 1230, 1231, 1232, 1233, 1234, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 5342, 5359, 5364, 5372], "\u975e\u63a8": [1, 57, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1063, 1230, 1231, 1232, 1233, 1234, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 5350], "adding": [1, 3, 4, 35, 39, 51, 57, 64, 1373, 1387, 1556, 1558, 1891, 2024, 2798, 2801, 2805, 4380, 4644, 4915, 4964, 4970, 5146, 5190, 5347, 5352, 5355, 5367], "nonlocal": [1, 270, 441, 600, 1177, 2805], "tomodel": [1, 4, 6, 31, 33, 35, 39, 48, 60, 64, 850, 869, 878, 904, 1477, 2181, 2236, 2277, 2297, 2323, 2337, 2349, 2376, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2830, 2845, 2858, 2859, 2861, 2862, 2865, 2866, 2867, 2886, 2888, 2889, 2890, 2891, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3929, 3960, 3993, 4182, 4273, 4802, 4922, 5250, 5365, 5366, 5367], "is": [1, 3, 4, 8, 10, 11, 12, 16, 20, 24, 25, 28, 29, 30, 31, 33, 35, 39, 44, 47, 48, 51, 53, 54, 57, 64, 66, 69, 70, 75, 76, 79, 80, 82, 83, 85, 86, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 156, 158, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 190, 192, 193, 195, 197, 198, 199, 200, 203, 210, 211, 232, 234, 235, 238, 239, 240, 248, 251, 252, 253, 254, 255, 256, 262, 264, 271, 275, 276, 277, 279, 280, 281, 288, 289, 290, 299, 300, 301, 303, 304, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 342, 343, 344, 345, 347, 357, 361, 362, 363, 364, 366, 368, 369, 370, 371, 374, 381, 382, 403, 405, 406, 409, 410, 411, 419, 422, 423, 424, 425, 426, 427, 433, 435, 442, 446, 447, 448, 450, 451, 452, 459, 460, 461, 470, 471, 472, 474, 475, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 513, 514, 515, 516, 518, 523, 525, 527, 528, 529, 530, 533, 540, 541, 562, 564, 565, 568, 569, 570, 578, 581, 582, 583, 584, 585, 586, 592, 594, 601, 605, 606, 607, 609, 610, 611, 618, 619, 620, 629, 630, 631, 633, 634, 638, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 658, 672, 673, 674, 675, 677, 682, 683, 685, 689, 691, 693, 694, 695, 699, 701, 703, 707, 709, 711, 715, 717, 719, 723, 725, 728, 732, 734, 737, 741, 743, 746, 750, 752, 755, 759, 761, 764, 765, 768, 769, 771, 773, 775, 779, 781, 783, 787, 789, 792, 796, 798, 800, 804, 806, 808, 812, 814, 816, 820, 822, 824, 828, 831, 833, 835, 839, 841, 843, 847, 849, 850, 852, 854, 856, 859, 861, 863, 867, 869, 871, 875, 877, 878, 881, 883, 886, 888, 890, 894, 896, 898, 902, 904, 906, 910, 912, 913, 918, 919, 920, 923, 926, 927, 929, 930, 933, 934, 936, 939, 942, 943, 946, 947, 949, 950, 953, 954, 956, 959, 960, 962, 963, 967, 968, 970, 973, 974, 978, 979, 982, 983, 984, 989, 990, 993, 996, 997, 1000, 1006, 1009, 1010, 1012, 1013, 1017, 1018, 1023, 1024, 1027, 1028, 1029, 1032, 1033, 1034, 1036, 1039, 1040, 1042, 1043, 1046, 1047, 1048, 1050, 1053, 1054, 1056, 1057, 1060, 1061, 1063, 1064, 1065, 1067, 1072, 1077, 1081, 1088, 1093, 1097, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1112, 1119, 1120, 1140, 1142, 1143, 1145, 1146, 1147, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1169, 1171, 1178, 1182, 1183, 1184, 1186, 1187, 1188, 1195, 1196, 1197, 1206, 1207, 1208, 1210, 1211, 1215, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1235, 1249, 1250, 1251, 1252, 1254, 1259, 1262, 1263, 1266, 1267, 1269, 1270, 1274, 1275, 1277, 1280, 1281, 1284, 1285, 1286, 1287, 1290, 1291, 1292, 1294, 1296, 1299, 1300, 1304, 1305, 1306, 1309, 1310, 1312, 1313, 1314, 1318, 1322, 1323, 1326, 1329, 1330, 1332, 1333, 1335, 1336, 1338, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1406, 1407, 1409, 1410, 1411, 1412, 1415, 1418, 1419, 1420, 1421, 1423, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1438, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1483, 1489, 1494, 1496, 1499, 1501, 1503, 1507, 1508, 1510, 1511, 1514, 1515, 1517, 1524, 1526, 1527, 1530, 1533, 1535, 1537, 1539, 1542, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1641, 1642, 1643, 1644, 1645, 1648, 1649, 1654, 1655, 1661, 1663, 1667, 1674, 1675, 1679, 1680, 1681, 1682, 1700, 1701, 1706, 1708, 1719, 1722, 1753, 1757, 1758, 1763, 1764, 1765, 1767, 1768, 1769, 1772, 1775, 1776, 1779, 1780, 1783, 1784, 1786, 1789, 1790, 1794, 1795, 1798, 1799, 1800, 1802, 1805, 1806, 1809, 1812, 1813, 1815, 1818, 1819, 1822, 1823, 1824, 1827, 1828, 1829, 1831, 1834, 1835, 1838, 1839, 1840, 1843, 1844, 1845, 1847, 1850, 1851, 1854, 1855, 1856, 1859, 1860, 1861, 1863, 1866, 1867, 1870, 1871, 1872, 1875, 1876, 1877, 1879, 1883, 1884, 1889, 1890, 1891, 1893, 1894, 1895, 1898, 1901, 1905, 1906, 1907, 1912, 1916, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1933, 1934, 1935, 1936, 1940, 1943, 1945, 1946, 1947, 1948, 1952, 1953, 1956, 1958, 1959, 1960, 1963, 1966, 1969, 1973, 1975, 1977, 1980, 1982, 1985, 1986, 1987, 1994, 1996, 2001, 2002, 2003, 2004, 2006, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2028, 2030, 2032, 2035, 2038, 2039, 2041, 2046, 2050, 2054, 2055, 2056, 2058, 2060, 2063, 2064, 2065, 2068, 2072, 2074, 2075, 2078, 2083, 2088, 2089, 2095, 2101, 2102, 2109, 2112, 2116, 2117, 2120, 2121, 2122, 2129, 2132, 2135, 2137, 2138, 2140, 2144, 2150, 2154, 2156, 2159, 2160, 2161, 2162, 2164, 2165, 2166, 2167, 2168, 2176, 2177, 2180, 2181, 2182, 2187, 2192, 2194, 2195, 2198, 2204, 2205, 2208, 2211, 2216, 2217, 2218, 2220, 2223, 2224, 2229, 2232, 2235, 2236, 2237, 2238, 2241, 2243, 2248, 2249, 2251, 2252, 2255, 2261, 2263, 2265, 2269, 2271, 2274, 2275, 2277, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2295, 2297, 2302, 2305, 2309, 2311, 2313, 2323, 2333, 2334, 2337, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2389, 2392, 2393, 2397, 2400, 2401, 2403, 2406, 2407, 2411, 2414, 2415, 2417, 2420, 2421, 2425, 2428, 2429, 2431, 2434, 2435, 2439, 2442, 2443, 2445, 2448, 2449, 2453, 2456, 2457, 2459, 2462, 2463, 2467, 2470, 2471, 2479, 2482, 2483, 2484, 2487, 2493, 2496, 2497, 2503, 2504, 2507, 2508, 2511, 2514, 2515, 2517, 2520, 2521, 2524, 2527, 2528, 2533, 2534, 2537, 2540, 2541, 2546, 2547, 2550, 2553, 2554, 2556, 2559, 2560, 2563, 2566, 2567, 2569, 2572, 2573, 2576, 2579, 2580, 2585, 2586, 2589, 2592, 2593, 2598, 2599, 2602, 2605, 2606, 2611, 2612, 2615, 2618, 2619, 2624, 2625, 2628, 2631, 2632, 2637, 2638, 2641, 2644, 2645, 2650, 2651, 2654, 2657, 2658, 2663, 2664, 2667, 2670, 2671, 2676, 2677, 2680, 2683, 2684, 2689, 2690, 2693, 2696, 2697, 2699, 2702, 2703, 2705, 2706, 2709, 2710, 2712, 2715, 2716, 2718, 2719, 2722, 2723, 2728, 2729, 2731, 2732, 2735, 2736, 2738, 2741, 2742, 2744, 2745, 2748, 2749, 2751, 2754, 2755, 2757, 2758, 2761, 2762, 2764, 2767, 2768, 2770, 2771, 2774, 2775, 2777, 2778, 2779, 2781, 2782, 2786, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2810, 2813, 2814, 2816, 2817, 2818, 2819, 2822, 2823, 2826, 2830, 2831, 2833, 2834, 2835, 2836, 2839, 2842, 2844, 2845, 2847, 2848, 2850, 2851, 2852, 2853, 2854, 2856, 2857, 2858, 2859, 2860, 2862, 2867, 2869, 2871, 2875, 2877, 2878, 2883, 2884, 2885, 2886, 2887, 2889, 2890, 2899, 2902, 2909, 2914, 2916, 2918, 2923, 2925, 2927, 2932, 2933, 2934, 2936, 2943, 2945, 2952, 2954, 2961, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2978, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2995, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3028, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3045, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3062, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3079, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3095, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3128, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3145, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3161, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3178, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3195, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3212, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3229, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3246, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3263, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3280, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3296, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3313, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3330, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3346, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3363, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3380, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3405, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3422, 3424, 3431, 3433, 3439, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3456, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3472, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3485, 3488, 3494, 3496, 3503, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3519, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3536, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3552, 3554, 3561, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3578, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3595, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3611, 3613, 3619, 3621, 3628, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3645, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3661, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3678, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3694, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3707, 3708, 3709, 3711, 3712, 3713, 3714, 3718, 3722, 3723, 3725, 3727, 3728, 3730, 3731, 3732, 3734, 3736, 3737, 3738, 3739, 3747, 3748, 3750, 3752, 3754, 3757, 3760, 3761, 3763, 3764, 3768, 3777, 3779, 3781, 3782, 3783, 3787, 3789, 3790, 3791, 3793, 3796, 3798, 3799, 3801, 3805, 3806, 3811, 3812, 3815, 3816, 3817, 3818, 3819, 3821, 3822, 3823, 3824, 3828, 3832, 3833, 3834, 3836, 3838, 3840, 3843, 3844, 3852, 3855, 3857, 3860, 3862, 3865, 3868, 3869, 3873, 3876, 3881, 3883, 3884, 3885, 3887, 3888, 3891, 3896, 3897, 3901, 3905, 3909, 3911, 3918, 3920, 3921, 3922, 3926, 3928, 3930, 3932, 3942, 3943, 3944, 3945, 3951, 3957, 3963, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3976, 3979, 3982, 3983, 3984, 3987, 3991, 3993, 3999, 4000, 4001, 4003, 4005, 4006, 4008, 4009, 4012, 4013, 4014, 4016, 4017, 4018, 4020, 4025, 4026, 4031, 4032, 4035, 4041, 4042, 4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4082, 4084, 4086, 4092, 4094, 4101, 4103, 4110, 4112, 4119, 4121, 4128, 4130, 4137, 4139, 4146, 4148, 4155, 4157, 4158, 4159, 4160, 4162, 4163, 4164, 4165, 4167, 4168, 4169, 4170, 4172, 4173, 4174, 4175, 4177, 4178, 4180, 4182, 4183, 4184, 4185, 4187, 4188, 4189, 4192, 4193, 4195, 4196, 4197, 4200, 4201, 4203, 4206, 4208, 4209, 4212, 4215, 4219, 4220, 4221, 4223, 4224, 4225, 4229, 4231, 4232, 4233, 4241, 4244, 4245, 4252, 4254, 4255, 4258, 4264, 4270, 4272, 4273, 4276, 4282, 4287, 4297, 4298, 4299, 4301, 4304, 4305, 4308, 4309, 4310, 4316, 4317, 4318, 4319, 4321, 4322, 4324, 4325, 4326, 4327, 4329, 4330, 4331, 4332, 4334, 4335, 4336, 4337, 4338, 4340, 4341, 4343, 4344, 4345, 4346, 4348, 4349, 4350, 4351, 4353, 4354, 4356, 4359, 4360, 4361, 4365, 4367, 4368, 4369, 4370, 4376, 4380, 4382, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4393, 4394, 4395, 4397, 4398, 4400, 4402, 4403, 4404, 4405, 4407, 4408, 4410, 4411, 4412, 4413, 4415, 4416, 4417, 4418, 4420, 4421, 4424, 4426, 4429, 4431, 4432, 4433, 4435, 4438, 4439, 4440, 4444, 4445, 4446, 4447, 4449, 4450, 4452, 4453, 4454, 4455, 4457, 4458, 4459, 4460, 4462, 4463, 4467, 4470, 4474, 4479, 4480, 4481, 4482, 4484, 4487, 4490, 4491, 4493, 4497, 4503, 4506, 4508, 4509, 4511, 4512, 4513, 4518, 4519, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4531, 4533, 4534, 4535, 4537, 4538, 4539, 4540, 4544, 4547, 4552, 4554, 4557, 4558, 4560, 4563, 4564, 4568, 4570, 4571, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4582, 4583, 4584, 4586, 4587, 4589, 4590, 4595, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4608, 4611, 4613, 4614, 4616, 4617, 4618, 4619, 4620, 4623, 4624, 4625, 4626, 4628, 4629, 4630, 4632, 4633, 4634, 4635, 4639, 4640, 4644, 4645, 4647, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4659, 4660, 4661, 4663, 4664, 4667, 4668, 4669, 4670, 4672, 4673, 4675, 4676, 4677, 4678, 4680, 4681, 4682, 4683, 4685, 4686, 4687, 4688, 4689, 4691, 4692, 4694, 4695, 4696, 4697, 4699, 4700, 4701, 4702, 4704, 4705, 4706, 4707, 4708, 4709, 4712, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4722, 4723, 4724, 4726, 4727, 4728, 4730, 4731, 4732, 4737, 4738, 4739, 4740, 4744, 4745, 4746, 4747, 4748, 4749, 4751, 4755, 4760, 4761, 4762, 4763, 4765, 4767, 4768, 4769, 4770, 4771, 4773, 4778, 4782, 4783, 4784, 4785, 4787, 4792, 4797, 4798, 4799, 4800, 4803, 4805, 4806, 4807, 4808, 4810, 4811, 4812, 4813, 4819, 4821, 4823, 4825, 4827, 4829, 4830, 4831, 4833, 4836, 4839, 4842, 4847, 4848, 4849, 4852, 4853, 4858, 4863, 4868, 4870, 4873, 4874, 4875, 4877, 4880, 4882, 4891, 4894, 4895, 4896, 4898, 4899, 4907, 4910, 4911, 4912, 4913, 4915, 4916, 4917, 4919, 4920, 4922, 4923, 4924, 4927, 4928, 4930, 4934, 4935, 4938, 4941, 4943, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5003, 5004, 5006, 5008, 5011, 5014, 5016, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5036, 5044, 5047, 5050, 5051, 5053, 5055, 5062, 5065, 5068, 5071, 5074, 5077, 5079, 5080, 5083, 5085, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5142, 5143, 5145, 5146, 5150, 5151, 5152, 5154, 5156, 5157, 5158, 5160, 5162, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5204, 5205, 5207, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5230, 5231, 5232, 5233, 5234, 5235, 5237, 5238, 5239, 5244, 5245, 5250, 5252, 5257, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5270, 5271, 5272, 5274, 5275, 5276, 5277, 5278, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5299, 5302, 5303, 5304, 5305, 5311, 5314, 5315, 5316, 5317, 5323, 5326, 5327, 5328, 5329, 5331, 5332, 5333, 5334, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "deprecated": [1, 16, 57, 140, 165, 172, 210, 238, 323, 324, 325, 326, 327, 381, 409, 494, 495, 496, 497, 498, 540, 568, 653, 654, 655, 656, 657, 687, 913, 1119, 1145, 1230, 1231, 1232, 1233, 1234, 1398, 1427, 1470, 1641, 2282, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 2808, 2847, 2848, 2855, 2856, 2857, 3730, 3796, 3896, 3965, 4035, 4040, 4045, 4057, 4058, 4059, 4060, 4177, 4255, 4273, 4568, 4944, 4946, 4952, 4982, 4985, 5068, 5250, 5260, 5261, 5275, 5372], "as": [1, 4, 8, 10, 11, 16, 25, 28, 29, 30, 31, 33, 35, 39, 44, 47, 48, 51, 53, 54, 57, 60, 62, 64, 66, 68, 69, 75, 78, 84, 86, 90, 92, 94, 97, 98, 101, 103, 105, 107, 109, 112, 115, 118, 122, 128, 130, 136, 137, 140, 142, 144, 145, 146, 147, 155, 163, 165, 172, 180, 181, 182, 183, 184, 186, 191, 197, 203, 204, 205, 209, 210, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 240, 241, 251, 252, 253, 258, 262, 263, 264, 276, 278, 283, 284, 285, 301, 302, 305, 308, 310, 311, 321, 326, 327, 328, 337, 342, 347, 353, 354, 355, 357, 358, 359, 360, 362, 364, 368, 374, 375, 376, 380, 381, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 411, 412, 422, 423, 424, 429, 433, 434, 435, 447, 449, 454, 455, 456, 472, 473, 476, 479, 481, 482, 492, 497, 498, 499, 508, 513, 518, 523, 527, 533, 534, 535, 539, 540, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563, 565, 570, 571, 581, 582, 583, 588, 592, 593, 594, 606, 608, 613, 614, 615, 631, 632, 635, 638, 640, 641, 651, 656, 657, 658, 667, 672, 677, 682, 687, 691, 696, 699, 704, 707, 709, 712, 715, 720, 723, 729, 732, 738, 741, 747, 750, 756, 759, 763, 765, 766, 771, 773, 776, 779, 784, 787, 793, 796, 801, 804, 809, 812, 817, 820, 822, 825, 828, 832, 836, 839, 844, 847, 849, 850, 852, 855, 859, 864, 867, 872, 875, 877, 878, 882, 886, 891, 894, 896, 899, 902, 904, 907, 910, 912, 913, 914, 919, 956, 970, 975, 979, 1000, 1002, 1025, 1029, 1036, 1063, 1065, 1081, 1083, 1097, 1102, 1106, 1112, 1113, 1114, 1118, 1119, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1143, 1147, 1148, 1158, 1159, 1160, 1165, 1169, 1170, 1171, 1183, 1185, 1190, 1191, 1192, 1208, 1209, 1212, 1215, 1217, 1218, 1228, 1233, 1234, 1235, 1244, 1249, 1254, 1263, 1282, 1287, 1296, 1302, 1306, 1318, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1372, 1373, 1376, 1377, 1379, 1380, 1387, 1388, 1390, 1392, 1393, 1396, 1399, 1401, 1406, 1407, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1441, 1443, 1444, 1446, 1447, 1448, 1450, 1456, 1458, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1479, 1480, 1487, 1492, 1497, 1503, 1520, 1526, 1531, 1537, 1540, 1545, 1547, 1548, 1550, 1551, 1553, 1558, 1561, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1644, 1647, 1648, 1649, 1651, 1654, 1660, 1666, 1672, 1674, 1675, 1682, 1683, 1694, 1696, 1697, 1708, 1712, 1714, 1715, 1719, 1721, 1722, 1725, 1730, 1731, 1739, 1741, 1746, 1748, 1750, 1752, 1753, 1760, 1764, 1765, 1772, 1786, 1791, 1795, 1820, 1824, 1836, 1840, 1852, 1856, 1868, 1872, 1886, 1890, 1898, 1899, 1902, 1906, 1908, 1911, 1922, 1923, 1930, 1934, 1943, 1948, 1953, 1954, 1959, 1962, 1983, 1987, 1990, 1994, 2001, 2006, 2008, 2024, 2025, 2028, 2032, 2033, 2039, 2042, 2045, 2049, 2051, 2052, 2055, 2056, 2061, 2062, 2063, 2064, 2070, 2075, 2077, 2085, 2089, 2092, 2098, 2102, 2105, 2113, 2117, 2122, 2123, 2125, 2133, 2138, 2141, 2143, 2161, 2163, 2165, 2166, 2167, 2168, 2169, 2170, 2176, 2178, 2182, 2186, 2188, 2196, 2198, 2200, 2201, 2206, 2209, 2211, 2213, 2214, 2221, 2224, 2225, 2226, 2232, 2233, 2238, 2239, 2242, 2244, 2251, 2253, 2255, 2257, 2258, 2275, 2277, 2282, 2285, 2293, 2302, 2308, 2311, 2313, 2323, 2337, 2349, 2363, 2376, 2445, 2459, 2479, 2482, 2486, 2487, 2493, 2496, 2500, 2530, 2621, 2660, 2779, 2780, 2783, 2786, 2788, 2789, 2801, 2808, 2812, 2813, 2814, 2827, 2830, 2840, 2847, 2848, 2857, 2861, 2867, 2870, 2872, 2884, 2885, 2887, 2889, 2890, 2899, 2905, 3005, 3013, 3382, 3417, 3608, 3616, 3704, 3705, 3708, 3711, 3720, 3723, 3725, 3730, 3736, 3737, 3738, 3739, 3748, 3757, 3759, 3760, 3761, 3763, 3764, 3777, 3781, 3782, 3789, 3791, 3796, 3802, 3806, 3814, 3821, 3823, 3824, 3834, 3838, 3852, 3862, 3868, 3872, 3873, 3874, 3875, 3887, 3888, 3905, 3908, 3909, 3919, 3922, 3926, 3932, 3933, 3935, 3939, 3942, 3945, 3952, 3955, 3957, 3958, 3961, 3963, 3966, 3968, 3974, 3976, 3977, 3980, 3982, 3983, 3993, 3999, 4008, 4012, 4020, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4035, 4036, 4037, 4039, 4041, 4042, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4057, 4058, 4059, 4060, 4103, 4158, 4163, 4168, 4172, 4173, 4178, 4182, 4183, 4188, 4192, 4195, 4196, 4201, 4203, 4206, 4209, 4212, 4219, 4220, 4231, 4241, 4243, 4244, 4247, 4253, 4254, 4255, 4258, 4262, 4264, 4268, 4271, 4272, 4273, 4276, 4280, 4282, 4286, 4287, 4288, 4289, 4291, 4292, 4297, 4298, 4299, 4301, 4316, 4318, 4329, 4332, 4335, 4337, 4348, 4351, 4354, 4356, 4376, 4384, 4385, 4398, 4402, 4404, 4415, 4418, 4424, 4426, 4432, 4444, 4446, 4457, 4460, 4467, 4487, 4494, 4497, 4498, 4501, 4506, 4508, 4509, 4514, 4516, 4519, 4523, 4528, 4533, 4534, 4535, 4542, 4554, 4568, 4571, 4577, 4578, 4579, 4584, 4613, 4614, 4618, 4629, 4630, 4637, 4640, 4645, 4649, 4650, 4652, 4664, 4666, 4667, 4669, 4680, 4683, 4686, 4688, 4699, 4702, 4712, 4717, 4722, 4739, 4743, 4744, 4747, 4748, 4756, 4757, 4762, 4769, 4770, 4783, 4796, 4798, 4803, 4804, 4805, 4806, 4807, 4808, 4810, 4811, 4815, 4819, 4821, 4825, 4839, 4841, 4873, 4884, 4894, 4897, 4899, 4900, 4911, 4915, 4918, 4920, 4921, 4922, 4923, 4927, 4928, 4930, 4946, 4949, 4952, 4955, 4958, 4964, 4973, 4976, 5003, 5007, 5014, 5018, 5027, 5030, 5033, 5062, 5065, 5077, 5086, 5089, 5117, 5120, 5126, 5133, 5143, 5146, 5151, 5157, 5169, 5175, 5178, 5181, 5187, 5195, 5202, 5210, 5213, 5214, 5217, 5220, 5223, 5226, 5227, 5230, 5231, 5232, 5236, 5237, 5238, 5250, 5262, 5268, 5272, 5275, 5278, 5280, 5281, 5286, 5303, 5315, 5327, 5331, 5332, 5333, 5334, 5335, 5338, 5339, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5361, 5362, 5364, 5366, 5367, 5368, 5370, 5372], "ofaer": [1, 47, 57, 64, 2323, 2805, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 5339, 5342, 5348, 5349, 5350, 5352, 5353, 5358, 5359, 5361, 5364, 5369], "will": [1, 3, 8, 10, 12, 16, 24, 25, 28, 31, 35, 39, 44, 48, 51, 53, 57, 64, 66, 82, 92, 103, 104, 115, 116, 117, 126, 127, 131, 134, 135, 136, 138, 142, 143, 147, 148, 153, 158, 165, 166, 172, 173, 178, 180, 183, 184, 193, 197, 206, 210, 211, 232, 235, 238, 239, 240, 251, 252, 262, 264, 267, 271, 288, 302, 306, 307, 309, 323, 324, 325, 326, 327, 334, 335, 336, 347, 354, 355, 359, 360, 364, 368, 377, 381, 382, 403, 406, 409, 410, 411, 422, 423, 433, 435, 438, 442, 459, 473, 477, 478, 480, 494, 495, 496, 497, 498, 505, 506, 507, 518, 523, 527, 536, 540, 541, 562, 565, 568, 569, 570, 581, 582, 592, 594, 597, 601, 618, 632, 636, 637, 639, 653, 654, 655, 656, 657, 664, 665, 666, 677, 773, 806, 833, 852, 904, 913, 914, 920, 927, 929, 936, 939, 947, 949, 960, 962, 970, 974, 984, 990, 1000, 1001, 1002, 1003, 1005, 1006, 1010, 1012, 1024, 1027, 1034, 1036, 1040, 1042, 1054, 1056, 1063, 1065, 1071, 1072, 1081, 1087, 1088, 1097, 1102, 1106, 1115, 1119, 1120, 1140, 1143, 1145, 1146, 1147, 1158, 1159, 1169, 1171, 1174, 1178, 1195, 1209, 1213, 1214, 1216, 1230, 1231, 1232, 1233, 1234, 1241, 1242, 1243, 1254, 1259, 1267, 1269, 1281, 1285, 1294, 1300, 1304, 1314, 1318, 1323, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1432, 1434, 1441, 1444, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1499, 1503, 1508, 1510, 1537, 1550, 1551, 1555, 1563, 1567, 1640, 1641, 1642, 1643, 1644, 1648, 1649, 1661, 1662, 1667, 1682, 1700, 1706, 1710, 1711, 1714, 1715, 1758, 1769, 1776, 1779, 1790, 1800, 1806, 1819, 1822, 1829, 1835, 1838, 1845, 1851, 1854, 1861, 1867, 1870, 1877, 1884, 1895, 1898, 1901, 1905, 1906, 1922, 1923, 1926, 1930, 1934, 1936, 1937, 1943, 1948, 1956, 1958, 1959, 1994, 2024, 2028, 2032, 2035, 2038, 2039, 2058, 2064, 2072, 2074, 2075, 2088, 2089, 2101, 2102, 2116, 2117, 2135, 2137, 2138, 2154, 2160, 2165, 2166, 2168, 2177, 2180, 2182, 2198, 2211, 2223, 2224, 2235, 2237, 2238, 2255, 2265, 2269, 2277, 2282, 2285, 2290, 2291, 2311, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2389, 2393, 2403, 2407, 2417, 2421, 2431, 2435, 2445, 2449, 2459, 2463, 2494, 2496, 2501, 2508, 2521, 2530, 2534, 2547, 2560, 2573, 2582, 2586, 2599, 2612, 2621, 2625, 2634, 2638, 2647, 2651, 2660, 2664, 2673, 2677, 2686, 2690, 2699, 2703, 2705, 2716, 2718, 2725, 2729, 2731, 2738, 2742, 2744, 2751, 2755, 2757, 2764, 2768, 2770, 2780, 2784, 2785, 2787, 2798, 2801, 2802, 2803, 2805, 2806, 2807, 2808, 2813, 2823, 2842, 2850, 2851, 2852, 2853, 2854, 2888, 2889, 2909, 2918, 2927, 2963, 2968, 2969, 2980, 2985, 2986, 2997, 3002, 3003, 3005, 3010, 3011, 3013, 3018, 3019, 3030, 3035, 3036, 3047, 3052, 3053, 3064, 3069, 3070, 3081, 3086, 3087, 3097, 3102, 3103, 3114, 3119, 3120, 3130, 3135, 3136, 3147, 3152, 3153, 3163, 3168, 3169, 3180, 3185, 3186, 3197, 3202, 3203, 3214, 3219, 3220, 3231, 3236, 3237, 3248, 3253, 3254, 3265, 3270, 3271, 3282, 3287, 3288, 3298, 3303, 3304, 3315, 3320, 3321, 3332, 3337, 3338, 3348, 3353, 3354, 3365, 3370, 3371, 3382, 3387, 3388, 3390, 3395, 3396, 3407, 3412, 3413, 3441, 3446, 3447, 3458, 3463, 3464, 3474, 3479, 3480, 3505, 3510, 3511, 3521, 3526, 3527, 3538, 3543, 3544, 3563, 3568, 3569, 3580, 3585, 3586, 3597, 3602, 3603, 3630, 3635, 3636, 3647, 3652, 3653, 3663, 3668, 3669, 3680, 3685, 3686, 3696, 3701, 3702, 3708, 3711, 3728, 3730, 3737, 3757, 3759, 3779, 3781, 3782, 3783, 3789, 3792, 3793, 3794, 3796, 3814, 3823, 3838, 3854, 3855, 3862, 3868, 3871, 3876, 3885, 3888, 3891, 3896, 3899, 3901, 3905, 3909, 3918, 3922, 3926, 3932, 3933, 3939, 3952, 3955, 3957, 3958, 3961, 3968, 3974, 3976, 3977, 3980, 3993, 3999, 4001, 4006, 4008, 4012, 4013, 4014, 4020, 4027, 4028, 4029, 4030, 4031, 4032, 4035, 4037, 4040, 4041, 4042, 4049, 4050, 4057, 4058, 4059, 4060, 4075, 4086, 4094, 4103, 4112, 4139, 4158, 4163, 4168, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4195, 4218, 4219, 4225, 4229, 4241, 4244, 4245, 4247, 4252, 4253, 4255, 4262, 4268, 4270, 4271, 4273, 4280, 4286, 4289, 4292, 4297, 4298, 4309, 4316, 4330, 4332, 4335, 4349, 4351, 4368, 4376, 4385, 4392, 4393, 4402, 4416, 4418, 4424, 4432, 4438, 4439, 4444, 4458, 4460, 4463, 4480, 4481, 4484, 4490, 4493, 4512, 4515, 4516, 4519, 4521, 4524, 4538, 4541, 4542, 4563, 4568, 4570, 4587, 4591, 4607, 4614, 4616, 4617, 4619, 4620, 4625, 4633, 4634, 4635, 4636, 4637, 4640, 4645, 4650, 4658, 4659, 4667, 4681, 4683, 4686, 4700, 4702, 4705, 4712, 4717, 4732, 4743, 4744, 4774, 4788, 4803, 4804, 4812, 4813, 4839, 4844, 4880, 4894, 4895, 4896, 4900, 4901, 4915, 4916, 4917, 4921, 4922, 4923, 4924, 4928, 4930, 4934, 4935, 4938, 4946, 4952, 4961, 4964, 4973, 4976, 4982, 4985, 4988, 5006, 5014, 5016, 5017, 5023, 5024, 5033, 5077, 5080, 5089, 5091, 5093, 5096, 5117, 5120, 5140, 5143, 5169, 5178, 5193, 5196, 5202, 5205, 5208, 5214, 5217, 5226, 5227, 5230, 5236, 5237, 5238, 5239, 5244, 5245, 5250, 5262, 5268, 5272, 5278, 5280, 5281, 5283, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5345, 5364, 5368, 5372], "be": [1, 3, 4, 6, 8, 10, 11, 12, 16, 20, 24, 25, 28, 30, 31, 33, 35, 39, 44, 48, 51, 53, 54, 57, 64, 66, 68, 69, 70, 72, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 147, 148, 150, 151, 153, 157, 158, 161, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 183, 184, 186, 188, 190, 192, 193, 195, 197, 198, 201, 211, 213, 214, 215, 231, 232, 233, 235, 239, 240, 247, 251, 252, 253, 254, 255, 256, 262, 264, 267, 269, 271, 276, 277, 286, 302, 306, 307, 309, 323, 324, 325, 326, 327, 328, 334, 335, 336, 347, 354, 355, 359, 360, 363, 364, 366, 368, 369, 372, 382, 384, 385, 386, 402, 403, 404, 406, 410, 411, 418, 422, 423, 424, 425, 426, 427, 433, 435, 438, 440, 442, 447, 448, 457, 473, 477, 478, 480, 494, 495, 496, 497, 498, 499, 505, 506, 507, 518, 523, 525, 527, 528, 531, 541, 543, 544, 545, 561, 562, 563, 565, 569, 570, 577, 581, 582, 583, 584, 585, 586, 592, 594, 597, 599, 601, 606, 607, 616, 632, 636, 637, 639, 653, 654, 655, 656, 657, 658, 664, 665, 666, 677, 682, 683, 685, 687, 691, 692, 693, 695, 696, 699, 700, 703, 704, 707, 708, 709, 711, 712, 715, 716, 719, 720, 723, 724, 728, 729, 732, 733, 737, 738, 741, 742, 746, 747, 750, 751, 755, 756, 759, 760, 764, 765, 766, 769, 771, 772, 775, 776, 779, 780, 783, 784, 787, 788, 792, 793, 796, 797, 800, 801, 804, 805, 806, 808, 809, 812, 813, 816, 817, 820, 821, 822, 824, 825, 828, 829, 831, 833, 835, 836, 839, 840, 841, 843, 844, 847, 848, 849, 852, 854, 855, 856, 859, 860, 863, 864, 867, 868, 871, 872, 875, 876, 877, 881, 882, 883, 886, 887, 890, 891, 894, 895, 896, 898, 899, 902, 903, 904, 906, 907, 910, 911, 912, 913, 914, 916, 917, 918, 920, 923, 928, 929, 936, 939, 943, 948, 949, 956, 961, 962, 970, 976, 984, 985, 991, 999, 1000, 1001, 1003, 1005, 1006, 1011, 1012, 1026, 1027, 1034, 1035, 1036, 1041, 1042, 1046, 1050, 1055, 1056, 1063, 1065, 1067, 1071, 1072, 1081, 1083, 1087, 1088, 1096, 1097, 1102, 1104, 1106, 1107, 1110, 1120, 1121, 1122, 1123, 1139, 1140, 1141, 1143, 1146, 1147, 1154, 1158, 1159, 1160, 1161, 1162, 1163, 1169, 1171, 1174, 1176, 1178, 1182, 1183, 1184, 1193, 1209, 1213, 1214, 1216, 1230, 1231, 1232, 1233, 1234, 1235, 1241, 1242, 1243, 1254, 1259, 1263, 1268, 1269, 1277, 1283, 1285, 1294, 1295, 1296, 1303, 1304, 1314, 1315, 1318, 1324, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1417, 1427, 1433, 1434, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1453, 1455, 1456, 1457, 1458, 1459, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1496, 1499, 1503, 1509, 1510, 1526, 1529, 1537, 1539, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1648, 1649, 1655, 1661, 1662, 1667, 1673, 1675, 1678, 1682, 1689, 1700, 1706, 1710, 1714, 1715, 1719, 1722, 1732, 1753, 1761, 1769, 1771, 1772, 1777, 1779, 1792, 1800, 1801, 1807, 1821, 1822, 1829, 1830, 1837, 1838, 1845, 1846, 1853, 1854, 1861, 1862, 1869, 1870, 1877, 1878, 1879, 1887, 1895, 1897, 1898, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1923, 1926, 1929, 1932, 1934, 1936, 1938, 1945, 1948, 1951, 1952, 1953, 1956, 1957, 1958, 1959, 1961, 1962, 1964, 1970, 1983, 1987, 1990, 1993, 1994, 1995, 2000, 2001, 2008, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2023, 2024, 2025, 2027, 2028, 2031, 2032, 2035, 2036, 2038, 2039, 2042, 2043, 2045, 2047, 2055, 2060, 2063, 2064, 2066, 2067, 2068, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2087, 2088, 2089, 2091, 2092, 2093, 2100, 2101, 2102, 2104, 2105, 2106, 2115, 2116, 2117, 2123, 2124, 2125, 2127, 2135, 2136, 2137, 2138, 2141, 2142, 2143, 2145, 2154, 2160, 2161, 2165, 2166, 2169, 2171, 2177, 2180, 2181, 2182, 2185, 2186, 2189, 2198, 2199, 2200, 2202, 2211, 2212, 2213, 2215, 2216, 2218, 2223, 2224, 2225, 2232, 2235, 2236, 2237, 2238, 2239, 2240, 2242, 2245, 2255, 2256, 2257, 2259, 2265, 2267, 2269, 2272, 2275, 2277, 2282, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2293, 2297, 2309, 2311, 2313, 2316, 2322, 2323, 2333, 2334, 2337, 2345, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2389, 2394, 2403, 2408, 2417, 2422, 2431, 2436, 2445, 2450, 2459, 2464, 2473, 2487, 2494, 2501, 2502, 2503, 2509, 2522, 2530, 2535, 2548, 2556, 2561, 2569, 2574, 2582, 2587, 2600, 2613, 2621, 2626, 2634, 2639, 2647, 2652, 2660, 2665, 2673, 2678, 2686, 2691, 2699, 2704, 2705, 2712, 2717, 2718, 2725, 2730, 2731, 2738, 2743, 2744, 2751, 2756, 2757, 2764, 2769, 2770, 2780, 2784, 2785, 2787, 2798, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2812, 2813, 2814, 2816, 2823, 2826, 2842, 2844, 2848, 2850, 2851, 2852, 2853, 2854, 2856, 2857, 2861, 2862, 2875, 2877, 2878, 2879, 2880, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2908, 2909, 2914, 2918, 2923, 2927, 2932, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3484, 3487, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3704, 3706, 3708, 3711, 3718, 3720, 3721, 3722, 3723, 3725, 3727, 3728, 3730, 3732, 3738, 3739, 3746, 3750, 3752, 3757, 3759, 3767, 3775, 3779, 3780, 3781, 3782, 3783, 3787, 3789, 3791, 3792, 3793, 3794, 3796, 3798, 3799, 3801, 3805, 3811, 3814, 3818, 3823, 3834, 3836, 3837, 3838, 3841, 3845, 3848, 3849, 3851, 3855, 3857, 3860, 3862, 3863, 3864, 3865, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3885, 3887, 3888, 3891, 3896, 3900, 3901, 3904, 3905, 3909, 3911, 3918, 3922, 3925, 3926, 3928, 3931, 3932, 3933, 3935, 3939, 3952, 3955, 3957, 3958, 3961, 3963, 3966, 3968, 3973, 3974, 3976, 3977, 3979, 3980, 3982, 3993, 3994, 3999, 4001, 4008, 4009, 4012, 4013, 4014, 4025, 4026, 4029, 4030, 4031, 4032, 4035, 4037, 4040, 4041, 4042, 4048, 4057, 4058, 4059, 4060, 4076, 4084, 4085, 4086, 4094, 4095, 4103, 4104, 4113, 4122, 4131, 4139, 4140, 4149, 4158, 4162, 4163, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4206, 4218, 4219, 4220, 4225, 4229, 4241, 4244, 4245, 4246, 4247, 4252, 4253, 4255, 4262, 4264, 4268, 4270, 4271, 4273, 4280, 4282, 4286, 4288, 4289, 4291, 4292, 4297, 4298, 4299, 4301, 4304, 4309, 4310, 4316, 4318, 4321, 4330, 4331, 4332, 4335, 4337, 4340, 4349, 4350, 4351, 4354, 4356, 4359, 4368, 4369, 4376, 4380, 4385, 4388, 4390, 4392, 4393, 4394, 4395, 4398, 4402, 4404, 4407, 4416, 4417, 4418, 4424, 4426, 4429, 4432, 4438, 4439, 4440, 4444, 4446, 4449, 4458, 4459, 4460, 4463, 4467, 4480, 4481, 4482, 4487, 4490, 4491, 4493, 4494, 4498, 4501, 4512, 4513, 4514, 4515, 4516, 4519, 4521, 4522, 4524, 4525, 4529, 4530, 4538, 4539, 4540, 4541, 4542, 4552, 4554, 4557, 4563, 4564, 4568, 4570, 4571, 4574, 4577, 4579, 4587, 4590, 4591, 4595, 4603, 4605, 4607, 4608, 4609, 4614, 4616, 4617, 4619, 4620, 4624, 4625, 4633, 4634, 4635, 4636, 4637, 4640, 4644, 4645, 4650, 4654, 4656, 4658, 4659, 4660, 4661, 4664, 4667, 4669, 4672, 4681, 4682, 4683, 4686, 4688, 4691, 4700, 4701, 4702, 4705, 4708, 4712, 4713, 4717, 4718, 4732, 4743, 4744, 4745, 4747, 4751, 4767, 4769, 4770, 4773, 4774, 4787, 4788, 4803, 4804, 4810, 4811, 4812, 4813, 4814, 4817, 4819, 4821, 4823, 4825, 4830, 4831, 4839, 4842, 4844, 4847, 4848, 4856, 4857, 4866, 4867, 4873, 4875, 4877, 4880, 4882, 4884, 4894, 4895, 4896, 4899, 4900, 4902, 4915, 4916, 4917, 4920, 4921, 4922, 4923, 4927, 4928, 4930, 4938, 4941, 4946, 4949, 4952, 4955, 4958, 4960, 4961, 4964, 4967, 4970, 4973, 4975, 4976, 4979, 4982, 4984, 4985, 4988, 4991, 4994, 4997, 5000, 5002, 5003, 5004, 5006, 5008, 5011, 5013, 5014, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5042, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5082, 5083, 5086, 5089, 5093, 5095, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5132, 5134, 5136, 5137, 5139, 5140, 5142, 5143, 5145, 5146, 5150, 5151, 5152, 5154, 5156, 5157, 5158, 5160, 5162, 5163, 5166, 5168, 5169, 5171, 5172, 5174, 5175, 5178, 5180, 5181, 5184, 5187, 5190, 5193, 5196, 5198, 5199, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5220, 5222, 5223, 5226, 5227, 5230, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5244, 5245, 5246, 5247, 5250, 5262, 5263, 5267, 5268, 5270, 5271, 5275, 5277, 5278, 5280, 5281, 5283, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5335, 5340, 5342, 5347, 5348, 5349, 5352, 5353, 5355, 5362, 5367, 5368, 5372], "removed": [1, 16, 31, 35, 57, 271, 285, 323, 324, 325, 326, 327, 442, 456, 494, 495, 496, 497, 498, 601, 615, 653, 654, 655, 656, 657, 913, 1178, 1192, 1230, 1231, 1232, 1233, 1234, 1641, 1700, 2282, 2389, 2403, 2417, 2431, 2445, 2459, 2798, 2805, 3823, 3868, 4177, 4255, 4273, 4470, 4497, 4528, 4570, 4623, 4946, 4952, 5163, 5169, 5250, 5372], "no": [1, 11, 16, 31, 39, 48, 53, 57, 58, 64, 97, 99, 103, 104, 116, 117, 133, 138, 147, 150, 165, 168, 172, 175, 235, 252, 262, 264, 280, 281, 285, 323, 324, 325, 326, 327, 343, 344, 345, 362, 406, 423, 433, 435, 451, 452, 456, 494, 495, 496, 497, 498, 514, 515, 516, 565, 582, 592, 594, 610, 611, 615, 653, 654, 655, 656, 657, 673, 674, 675, 683, 773, 798, 833, 841, 850, 878, 913, 935, 936, 955, 969, 1003, 1019, 1046, 1049, 1062, 1143, 1159, 1169, 1171, 1187, 1188, 1192, 1230, 1231, 1232, 1233, 1234, 1250, 1251, 1252, 1276, 1331, 1376, 1379, 1392, 1398, 1407, 1440, 1441, 1442, 1444, 1456, 1472, 1503, 1516, 1537, 1641, 1644, 1674, 1722, 1785, 1814, 1912, 1963, 2030, 2046, 2065, 2078, 2144, 2161, 2187, 2232, 2243, 2285, 2290, 2316, 2322, 2323, 2337, 2349, 2363, 2376, 2389, 2402, 2403, 2416, 2417, 2430, 2431, 2444, 2445, 2458, 2459, 2472, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2711, 2724, 2737, 2750, 2763, 2776, 2805, 2810, 2860, 2908, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3484, 3487, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3706, 3722, 3727, 3738, 3746, 3747, 3748, 3749, 3750, 3760, 3761, 3763, 3764, 3777, 3789, 3791, 3801, 3808, 3814, 3862, 3880, 3884, 3905, 4001, 4014, 4029, 4094, 4182, 4203, 4206, 4215, 4223, 4229, 4231, 4255, 4273, 4389, 4390, 4398, 4432, 4463, 4490, 4493, 4521, 4524, 4604, 4605, 4616, 4619, 4626, 4655, 4656, 4664, 4708, 4709, 4712, 4747, 4769, 4805, 4806, 4807, 4808, 4811, 4839, 4858, 4875, 4894, 4896, 4901, 4917, 4923, 4963, 4966, 4967, 4970, 4976, 5016, 5047, 5091, 5102, 5108, 5117, 5169, 5178, 5190, 5202, 5214, 5217, 5226, 5227, 5230, 5231, 5233, 5234, 5238, 5250, 5281, 5283, 5284, 5285, 5286, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5339, 5355, 5356, 5372], "earlier": [1, 35, 57, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2285, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 5372], "than": [1, 3, 28, 31, 35, 39, 48, 57, 64, 69, 97, 107, 115, 118, 130, 142, 143, 145, 147, 158, 165, 172, 180, 255, 256, 262, 264, 299, 300, 302, 303, 304, 306, 307, 323, 324, 325, 326, 327, 426, 427, 433, 435, 470, 471, 473, 474, 475, 477, 478, 494, 495, 496, 497, 498, 585, 586, 592, 594, 629, 630, 632, 633, 634, 636, 637, 653, 654, 655, 656, 657, 709, 773, 877, 1101, 1162, 1163, 1169, 1171, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1230, 1231, 1232, 1233, 1234, 1342, 1372, 1373, 1374, 1410, 1441, 1477, 1550, 1567, 1644, 1916, 1926, 1929, 1932, 1937, 1966, 1970, 2024, 2050, 2068, 2083, 2095, 2109, 2129, 2132, 2150, 2192, 2194, 2205, 2217, 2218, 2229, 2249, 2263, 2316, 2322, 2323, 2349, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2595, 2608, 2621, 2634, 2647, 2660, 2686, 2777, 2778, 2780, 2781, 2782, 2784, 2785, 2805, 2817, 2857, 2908, 2933, 3484, 3487, 3706, 3708, 3723, 3725, 3730, 3738, 3739, 3748, 3749, 3789, 3983, 3991, 4025, 4026, 4032, 4182, 4187, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4206, 4221, 4225, 4299, 4386, 4390, 4398, 4433, 4570, 4605, 4651, 4656, 4664, 4725, 4767, 4882, 4915, 4922, 4930, 4958, 4964, 5003, 5016, 5073, 5077, 5143, 5177, 5201, 5202, 5231, 5245, 5290, 5331, 5353, 5372], "months": [1, 31, 57, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 5372], "from": [1, 3, 4, 10, 11, 12, 16, 20, 25, 28, 29, 30, 32, 33, 35, 39, 47, 48, 51, 53, 54, 57, 59, 60, 62, 64, 66, 69, 74, 76, 80, 85, 86, 91, 96, 102, 103, 104, 105, 106, 110, 114, 124, 129, 136, 140, 141, 143, 144, 145, 146, 147, 156, 161, 162, 165, 169, 172, 180, 181, 185, 186, 188, 190, 191, 192, 193, 198, 235, 240, 242, 243, 251, 252, 253, 255, 256, 276, 277, 285, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 323, 324, 325, 326, 327, 334, 335, 336, 347, 353, 356, 357, 361, 362, 363, 364, 369, 406, 411, 413, 414, 422, 423, 424, 426, 427, 447, 448, 456, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 494, 495, 496, 497, 498, 505, 506, 507, 518, 523, 528, 565, 570, 572, 573, 581, 582, 583, 585, 586, 606, 607, 615, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 653, 654, 655, 656, 657, 664, 665, 666, 677, 682, 709, 763, 765, 769, 831, 849, 877, 896, 904, 913, 914, 920, 923, 929, 936, 939, 943, 949, 956, 962, 970, 986, 1001, 1003, 1006, 1012, 1020, 1027, 1036, 1042, 1050, 1056, 1067, 1096, 1102, 1107, 1143, 1147, 1149, 1150, 1158, 1159, 1160, 1162, 1163, 1183, 1184, 1192, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1230, 1231, 1232, 1233, 1234, 1241, 1242, 1243, 1254, 1259, 1263, 1269, 1277, 1284, 1285, 1296, 1304, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1434, 1441, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1510, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1666, 1673, 1674, 1675, 1682, 1700, 1701, 1705, 1710, 1711, 1719, 1722, 1732, 1753, 1772, 1779, 1786, 1802, 1815, 1822, 1831, 1838, 1847, 1854, 1863, 1870, 1879, 1901, 1906, 1926, 1937, 1953, 1956, 1959, 2002, 2004, 2006, 2011, 2015, 2016, 2019, 2022, 2024, 2028, 2032, 2035, 2039, 2058, 2064, 2068, 2072, 2075, 2089, 2102, 2117, 2119, 2132, 2135, 2138, 2154, 2161, 2167, 2170, 2177, 2180, 2181, 2182, 2183, 2184, 2195, 2198, 2201, 2211, 2214, 2224, 2226, 2232, 2235, 2236, 2238, 2244, 2255, 2258, 2267, 2275, 2277, 2285, 2287, 2293, 2308, 2313, 2323, 2329, 2337, 2341, 2349, 2355, 2389, 2403, 2417, 2431, 2445, 2459, 2486, 2500, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2705, 2712, 2718, 2725, 2731, 2738, 2744, 2751, 2757, 2764, 2770, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2801, 2805, 2808, 2809, 2817, 2842, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2862, 2865, 2866, 2875, 2889, 2890, 2891, 2892, 2905, 2909, 2914, 2915, 2918, 2923, 2924, 2927, 2932, 2933, 2965, 2982, 2999, 3005, 3007, 3013, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3382, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3704, 3708, 3718, 3722, 3727, 3730, 3734, 3736, 3738, 3739, 3741, 3746, 3750, 3752, 3758, 3759, 3761, 3762, 3777, 3789, 3796, 3810, 3812, 3813, 3823, 3824, 3833, 3834, 3868, 3870, 3873, 3876, 3891, 3896, 3904, 3907, 3922, 3926, 3929, 3933, 3939, 3940, 3952, 3955, 3958, 3961, 3963, 3965, 3968, 3974, 3977, 3980, 3982, 3983, 3992, 3993, 3995, 4000, 4001, 4006, 4008, 4010, 4013, 4014, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4182, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4206, 4218, 4219, 4229, 4232, 4241, 4244, 4245, 4247, 4250, 4253, 4255, 4256, 4259, 4262, 4265, 4268, 4271, 4273, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4297, 4298, 4299, 4316, 4335, 4354, 4361, 4362, 4363, 4370, 4376, 4384, 4385, 4386, 4389, 4398, 4400, 4402, 4424, 4432, 4433, 4444, 4463, 4470, 4487, 4497, 4502, 4503, 4513, 4518, 4519, 4525, 4528, 4529, 4530, 4531, 4539, 4540, 4544, 4546, 4547, 4570, 4577, 4578, 4579, 4595, 4614, 4620, 4623, 4624, 4625, 4626, 4634, 4635, 4639, 4640, 4644, 4645, 4649, 4650, 4651, 4655, 4664, 4667, 4686, 4715, 4716, 4717, 4722, 4730, 4731, 4735, 4737, 4738, 4743, 4751, 4752, 4754, 4765, 4767, 4773, 4774, 4775, 4777, 4785, 4787, 4788, 4789, 4791, 4796, 4800, 4802, 4804, 4806, 4810, 4811, 4812, 4823, 4830, 4842, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4873, 4874, 4879, 4884, 4885, 4886, 4896, 4902, 4904, 4906, 4913, 4915, 4917, 4922, 4923, 4924, 4925, 4928, 4937, 4938, 4967, 4973, 5014, 5018, 5023, 5033, 5045, 5077, 5080, 5089, 5117, 5123, 5140, 5143, 5146, 5154, 5160, 5163, 5169, 5178, 5193, 5202, 5217, 5220, 5230, 5235, 5236, 5237, 5239, 5244, 5250, 5254, 5257, 5268, 5272, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5296, 5298, 5305, 5308, 5310, 5317, 5320, 5322, 5329, 5331, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "that": [1, 3, 4, 8, 10, 11, 12, 16, 25, 28, 29, 30, 31, 33, 35, 39, 44, 47, 48, 51, 53, 54, 57, 60, 64, 66, 69, 74, 76, 80, 81, 85, 86, 89, 91, 92, 96, 97, 101, 102, 103, 104, 105, 106, 107, 110, 114, 116, 117, 124, 125, 127, 129, 130, 133, 135, 136, 138, 141, 142, 143, 144, 145, 147, 151, 153, 157, 158, 161, 163, 165, 169, 172, 176, 178, 179, 180, 182, 186, 191, 192, 193, 197, 201, 211, 213, 216, 235, 251, 253, 255, 256, 276, 285, 328, 334, 342, 353, 358, 364, 368, 372, 382, 384, 387, 406, 422, 424, 426, 427, 447, 456, 499, 505, 513, 523, 527, 531, 541, 543, 546, 565, 581, 583, 585, 586, 606, 615, 658, 664, 672, 682, 683, 694, 709, 734, 752, 761, 773, 781, 798, 806, 822, 831, 849, 856, 861, 877, 883, 904, 912, 916, 917, 918, 936, 943, 1063, 1065, 1067, 1101, 1102, 1106, 1110, 1120, 1121, 1124, 1143, 1158, 1160, 1162, 1163, 1183, 1192, 1235, 1241, 1249, 1293, 1318, 1342, 1345, 1352, 1357, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1406, 1407, 1410, 1412, 1421, 1441, 1442, 1444, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1503, 1526, 1537, 1539, 1542, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1654, 1661, 1662, 1666, 1668, 1677, 1682, 1689, 1696, 1697, 1706, 1711, 1719, 1722, 1772, 1778, 1786, 1793, 1891, 1901, 1906, 1923, 1926, 1929, 1935, 1936, 1943, 1945, 1948, 1953, 1956, 1959, 1969, 1983, 1987, 1989, 1998, 2001, 2020, 2025, 2028, 2032, 2035, 2039, 2055, 2060, 2063, 2064, 2068, 2072, 2075, 2089, 2091, 2102, 2117, 2122, 2132, 2135, 2138, 2154, 2161, 2162, 2165, 2166, 2167, 2168, 2180, 2182, 2198, 2211, 2216, 2218, 2224, 2232, 2235, 2238, 2255, 2265, 2267, 2269, 2277, 2282, 2285, 2291, 2309, 2311, 2315, 2318, 2321, 2323, 2333, 2349, 2359, 2363, 2372, 2376, 2385, 2487, 2502, 2503, 2798, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2812, 2813, 2814, 2819, 2831, 2842, 2862, 2864, 2875, 2876, 2883, 2884, 2885, 2887, 2907, 2909, 2918, 2927, 2933, 2963, 2969, 2980, 2986, 2997, 3003, 3005, 3011, 3013, 3019, 3030, 3036, 3047, 3053, 3064, 3070, 3081, 3087, 3097, 3103, 3114, 3120, 3130, 3136, 3147, 3153, 3163, 3169, 3180, 3186, 3197, 3203, 3214, 3220, 3231, 3237, 3248, 3254, 3265, 3271, 3282, 3288, 3298, 3304, 3315, 3321, 3332, 3338, 3348, 3354, 3365, 3371, 3382, 3388, 3390, 3396, 3407, 3413, 3441, 3447, 3458, 3464, 3474, 3480, 3483, 3486, 3505, 3511, 3521, 3527, 3538, 3544, 3563, 3569, 3580, 3586, 3597, 3603, 3630, 3636, 3647, 3653, 3663, 3669, 3680, 3686, 3696, 3702, 3704, 3705, 3711, 3718, 3719, 3723, 3727, 3728, 3730, 3733, 3736, 3737, 3738, 3739, 3749, 3751, 3757, 3766, 3769, 3777, 3779, 3780, 3781, 3782, 3789, 3791, 3792, 3793, 3796, 3798, 3801, 3811, 3814, 3823, 3825, 3833, 3835, 3838, 3852, 3857, 3862, 3868, 3870, 3876, 3877, 3885, 3890, 3891, 3896, 3904, 3905, 3906, 3911, 3923, 3928, 3932, 3935, 3957, 3963, 3973, 3976, 3979, 3983, 3990, 3993, 3999, 4000, 4002, 4003, 4008, 4012, 4013, 4014, 4015, 4016, 4025, 4026, 4029, 4030, 4037, 4049, 4050, 4075, 4084, 4086, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4159, 4164, 4169, 4172, 4174, 4179, 4182, 4184, 4206, 4218, 4219, 4229, 4231, 4241, 4244, 4245, 4252, 4254, 4270, 4272, 4287, 4288, 4291, 4297, 4298, 4299, 4301, 4316, 4318, 4337, 4354, 4356, 4376, 4380, 4388, 4390, 4398, 4402, 4404, 4421, 4424, 4426, 4446, 4463, 4467, 4484, 4489, 4490, 4492, 4493, 4508, 4509, 4518, 4519, 4521, 4523, 4524, 4525, 4529, 4534, 4535, 4544, 4549, 4554, 4568, 4571, 4578, 4583, 4584, 4589, 4595, 4603, 4605, 4607, 4614, 4616, 4618, 4619, 4629, 4630, 4639, 4640, 4644, 4645, 4654, 4656, 4658, 4664, 4667, 4669, 4686, 4688, 4712, 4713, 4722, 4732, 4751, 4773, 4787, 4803, 4828, 4830, 4831, 4839, 4857, 4866, 4867, 4873, 4875, 4878, 4881, 4895, 4900, 4901, 4902, 4915, 4916, 4921, 4922, 4923, 4927, 4928, 4930, 4934, 4935, 4938, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4996, 4997, 4999, 5000, 5003, 5004, 5006, 5008, 5011, 5014, 5016, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5041, 5054, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5154, 5157, 5160, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5230, 5232, 5233, 5234, 5236, 5237, 5238, 5239, 5244, 5250, 5262, 5268, 5271, 5272, 5278, 5281, 5284, 5285, 5289, 5291, 5292, 5293, 5331, 5332, 5333, 5334, 5342, 5361, 5362, 5364, 5368, 5370], "release": [1, 16, 31, 35, 57, 271, 323, 324, 325, 326, 327, 442, 494, 495, 496, 497, 498, 601, 653, 654, 655, 656, 657, 913, 1178, 1230, 1231, 1232, 1233, 1234, 1641, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 4255, 4273, 4915, 4946, 4952, 5250, 5372], "date": [1, 57, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2389, 2403, 2417, 2431, 2445, 2459, 2805, 3723, 3728, 3738, 3739, 3756, 3789, 3796, 3802, 3821, 3838, 3852, 3909, 3922, 3932, 3935, 3963, 3976, 4802, 5372], "they": [1, 10, 11, 28, 31, 35, 39, 47, 48, 51, 53, 64, 127, 135, 153, 163, 178, 179, 210, 238, 285, 381, 409, 456, 540, 568, 615, 912, 1072, 1081, 1088, 1096, 1097, 1119, 1145, 1192, 1372, 1444, 1472, 1551, 1644, 1898, 1937, 1943, 1983, 1990, 1995, 2000, 2011, 2019, 2022, 2024, 2025, 2055, 2063, 2068, 2132, 2161, 2192, 2217, 2218, 2323, 2349, 2363, 2376, 2875, 3736, 3814, 3862, 3926, 3993, 4008, 4063, 4182, 4219, 4220, 4299, 4316, 4335, 4354, 4402, 4424, 4444, 4465, 4466, 4489, 4492, 4519, 4667, 4686, 4922, 4938, 4967, 4973, 5014, 5105, 5117, 5120, 5169, 5196, 5230, 5278, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "have": [1, 8, 11, 16, 25, 31, 35, 39, 44, 47, 48, 51, 53, 64, 97, 101, 142, 165, 172, 232, 251, 262, 264, 265, 285, 288, 403, 422, 433, 435, 436, 456, 459, 562, 581, 592, 594, 595, 615, 618, 814, 904, 912, 1003, 1065, 1140, 1158, 1169, 1171, 1172, 1192, 1195, 1318, 1342, 1373, 1376, 1379, 1388, 1392, 1393, 1421, 1441, 1442, 1443, 1447, 1450, 1456, 1470, 1475, 1480, 1503, 1537, 1563, 1567, 1641, 1644, 1648, 1649, 1666, 1708, 1722, 1815, 1901, 1922, 1923, 1930, 1934, 1948, 1953, 1956, 1998, 2035, 2072, 2135, 2154, 2180, 2235, 2311, 2323, 2331, 2343, 2349, 2357, 2370, 2383, 2801, 2890, 3704, 3722, 3723, 3727, 3736, 3737, 3738, 3739, 3757, 3766, 3769, 3777, 3779, 3789, 3791, 3810, 3823, 3833, 3837, 3838, 3863, 3868, 3890, 3904, 3982, 3991, 4002, 4015, 4021, 4022, 4030, 4034, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4094, 4112, 4219, 4244, 4245, 4376, 4385, 4494, 4498, 4501, 4514, 4519, 4614, 4640, 4650, 4714, 4720, 4726, 4803, 4814, 4830, 4875, 4893, 4895, 4916, 4922, 4924, 4930, 4973, 5007, 5016, 5017, 5037, 5043, 5077, 5102, 5143, 5169, 5193, 5202, 5217, 5226, 5230, 5241, 5246, 5268, 5272, 5280, 5294, 5332, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "been": [1, 8, 28, 39, 47, 48, 53, 64, 75, 79, 95, 97, 101, 113, 119, 123, 142, 150, 158, 168, 175, 238, 323, 324, 325, 326, 327, 409, 494, 495, 496, 497, 498, 568, 653, 654, 655, 656, 657, 682, 849, 877, 904, 929, 949, 962, 998, 1012, 1027, 1042, 1056, 1145, 1230, 1231, 1232, 1233, 1234, 1269, 1285, 1304, 1376, 1379, 1427, 1434, 1441, 1450, 1456, 1470, 1503, 1510, 1537, 1563, 1567, 1779, 1822, 1838, 1854, 1870, 1891, 1934, 2295, 2300, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2476, 2490, 2705, 2718, 2731, 2744, 2757, 2770, 2897, 3779, 3781, 3792, 3800, 3814, 3862, 4030, 4112, 4568, 4915, 4946, 4952, 4973, 5016, 5017, 5250, 5253, 5257, 5274, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "superceded": 1, "by": [1, 3, 4, 8, 10, 11, 12, 16, 25, 28, 29, 31, 33, 34, 35, 39, 44, 48, 51, 53, 60, 62, 64, 66, 69, 75, 79, 82, 86, 92, 95, 97, 103, 105, 110, 113, 123, 126, 131, 134, 136, 140, 142, 143, 145, 146, 147, 148, 150, 158, 162, 163, 165, 166, 168, 172, 173, 175, 186, 204, 205, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 241, 251, 253, 254, 255, 256, 258, 262, 263, 264, 267, 277, 283, 284, 285, 289, 321, 323, 324, 325, 326, 327, 328, 337, 342, 343, 344, 345, 346, 375, 376, 380, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 412, 422, 424, 425, 426, 427, 429, 433, 434, 435, 438, 448, 454, 455, 456, 460, 492, 494, 495, 496, 497, 498, 499, 508, 513, 514, 515, 516, 517, 534, 535, 539, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 563, 564, 565, 571, 581, 583, 584, 585, 586, 588, 592, 593, 594, 597, 607, 613, 614, 615, 619, 651, 653, 654, 655, 656, 657, 658, 667, 672, 673, 674, 675, 676, 682, 691, 699, 701, 707, 715, 717, 723, 725, 732, 741, 750, 759, 761, 771, 773, 779, 781, 787, 789, 796, 798, 804, 812, 820, 828, 839, 847, 849, 850, 859, 861, 867, 869, 875, 877, 878, 886, 894, 902, 904, 910, 912, 914, 933, 936, 953, 956, 967, 977, 982, 996, 1006, 1017, 1032, 1047, 1060, 1071, 1072, 1087, 1088, 1113, 1114, 1118, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1148, 1158, 1160, 1161, 1162, 1163, 1165, 1169, 1170, 1171, 1174, 1184, 1190, 1191, 1192, 1196, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1244, 1249, 1250, 1251, 1252, 1253, 1274, 1290, 1296, 1309, 1329, 1342, 1372, 1373, 1376, 1379, 1380, 1383, 1387, 1388, 1392, 1393, 1396, 1399, 1400, 1401, 1407, 1438, 1441, 1448, 1450, 1464, 1466, 1468, 1470, 1472, 1480, 1503, 1514, 1537, 1544, 1547, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1586, 1640, 1641, 1644, 1654, 1674, 1675, 1690, 1691, 1696, 1697, 1711, 1717, 1718, 1722, 1753, 1767, 1772, 1783, 1786, 1798, 1812, 1815, 1827, 1831, 1843, 1847, 1859, 1863, 1875, 1879, 1891, 1893, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1909, 1913, 1914, 1926, 1928, 1932, 1934, 1935, 1936, 1937, 1941, 1944, 1946, 1948, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1964, 1968, 1969, 1970, 1976, 1978, 1979, 1986, 1987, 1992, 1995, 1996, 1997, 1998, 2000, 2001, 2011, 2012, 2015, 2016, 2019, 2022, 2024, 2025, 2026, 2027, 2028, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2042, 2044, 2047, 2048, 2054, 2055, 2056, 2057, 2063, 2064, 2066, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2079, 2084, 2085, 2086, 2087, 2088, 2089, 2093, 2097, 2098, 2099, 2100, 2101, 2102, 2106, 2112, 2113, 2114, 2115, 2116, 2117, 2123, 2127, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2141, 2145, 2146, 2154, 2160, 2161, 2162, 2163, 2165, 2166, 2167, 2169, 2170, 2171, 2176, 2177, 2178, 2179, 2180, 2182, 2189, 2195, 2196, 2197, 2198, 2201, 2202, 2204, 2208, 2209, 2210, 2211, 2214, 2215, 2218, 2220, 2221, 2222, 2223, 2224, 2226, 2232, 2233, 2234, 2235, 2237, 2238, 2239, 2244, 2245, 2246, 2248, 2251, 2252, 2253, 2254, 2255, 2258, 2259, 2261, 2271, 2274, 2277, 2285, 2294, 2296, 2311, 2318, 2319, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2389, 2400, 2403, 2414, 2417, 2428, 2431, 2442, 2445, 2456, 2459, 2470, 2484, 2514, 2527, 2540, 2553, 2556, 2566, 2569, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 2798, 2801, 2804, 2808, 2812, 2814, 2842, 2845, 2858, 2859, 2860, 2862, 2867, 2869, 2875, 2884, 2885, 2886, 2887, 2888, 2890, 2893, 2903, 3417, 3482, 3485, 3704, 3705, 3708, 3711, 3716, 3718, 3722, 3723, 3725, 3728, 3730, 3735, 3737, 3738, 3739, 3742, 3743, 3757, 3759, 3760, 3761, 3763, 3764, 3766, 3767, 3769, 3776, 3779, 3789, 3796, 3807, 3823, 3826, 3832, 3836, 3838, 3839, 3845, 3868, 3869, 3872, 3873, 3874, 3875, 3876, 3880, 3901, 3905, 3909, 3932, 3933, 3935, 3939, 3952, 3955, 3957, 3958, 3961, 3968, 3969, 3974, 3976, 3977, 3980, 3982, 3986, 3990, 3993, 4000, 4001, 4002, 4003, 4006, 4007, 4008, 4013, 4014, 4015, 4016, 4019, 4025, 4026, 4027, 4028, 4032, 4037, 4039, 4053, 4054, 4083, 4084, 4093, 4102, 4103, 4111, 4120, 4121, 4129, 4138, 4139, 4147, 4148, 4156, 4162, 4177, 4182, 4187, 4193, 4197, 4206, 4218, 4219, 4225, 4229, 4231, 4246, 4247, 4253, 4254, 4255, 4262, 4264, 4268, 4271, 4272, 4273, 4280, 4286, 4287, 4289, 4292, 4299, 4301, 4316, 4318, 4335, 4337, 4354, 4356, 4376, 4380, 4381, 4384, 4385, 4392, 4394, 4395, 4402, 4404, 4421, 4424, 4426, 4432, 4444, 4446, 4463, 4467, 4473, 4491, 4500, 4513, 4519, 4522, 4539, 4552, 4554, 4571, 4588, 4599, 4608, 4609, 4614, 4617, 4620, 4624, 4626, 4634, 4640, 4644, 4646, 4649, 4650, 4660, 4661, 4667, 4669, 4686, 4688, 4713, 4714, 4715, 4719, 4720, 4723, 4724, 4725, 4726, 4735, 4740, 4765, 4785, 4796, 4800, 4803, 4804, 4805, 4806, 4807, 4808, 4813, 4821, 4829, 4831, 4833, 4839, 4842, 4847, 4848, 4849, 4856, 4873, 4878, 4880, 4895, 4901, 4913, 4915, 4916, 4922, 4923, 4927, 4928, 4930, 4941, 4943, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4984, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5006, 5008, 5011, 5014, 5016, 5018, 5021, 5024, 5027, 5030, 5033, 5051, 5062, 5065, 5068, 5071, 5074, 5077, 5079, 5080, 5082, 5083, 5086, 5089, 5093, 5095, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5232, 5233, 5234, 5235, 5236, 5237, 5244, 5246, 5247, 5250, 5263, 5268, 5272, 5281, 5290, 5295, 5305, 5307, 5317, 5319, 5329, 5331, 5332, 5333, 5334, 5335, 5341, 5344, 5347, 5353, 5355, 5358, 5362, 5366, 5367, 5369, 5370], "thesave": [1, 39, 64, 235, 277, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 406, 448, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 565, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 683, 689, 1143, 1184, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1673, 1732, 2323, 2389, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 3752, 3790, 3791, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4297, 4896, 4917, 5108, 5281, 5282, 5283, 5287, 5289, 5290, 5292, 5335, 5339, 5364, 5370], "instructions": [1, 3, 4, 31, 48, 62, 64, 137, 197, 199, 204, 205, 206, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 241, 244, 245, 249, 250, 257, 258, 262, 263, 264, 265, 268, 273, 274, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 321, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 368, 370, 375, 376, 377, 380, 382, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 412, 415, 416, 420, 421, 428, 429, 433, 434, 435, 436, 439, 444, 445, 450, 451, 452, 453, 454, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 492, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 527, 529, 534, 535, 536, 539, 541, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 566, 571, 574, 575, 579, 580, 587, 588, 592, 593, 594, 595, 598, 603, 604, 609, 610, 611, 612, 613, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 651, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 682, 912, 929, 931, 949, 951, 962, 964, 980, 994, 1012, 1014, 1027, 1030, 1042, 1044, 1056, 1058, 1063, 1065, 1066, 1102, 1106, 1108, 1113, 1114, 1115, 1118, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1144, 1148, 1151, 1152, 1156, 1157, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1186, 1187, 1188, 1189, 1190, 1191, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1228, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1269, 1271, 1285, 1288, 1304, 1307, 1318, 1327, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1434, 1436, 1447, 1450, 1457, 1458, 1462, 1475, 1477, 1480, 1510, 1512, 1550, 1555, 1563, 1567, 1644, 1779, 1781, 1796, 1810, 1822, 1825, 1838, 1841, 1854, 1857, 1870, 1873, 2285, 2323, 2349, 2389, 2398, 2412, 2417, 2426, 2431, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2705, 2707, 2718, 2720, 2731, 2733, 2744, 2746, 2757, 2759, 2770, 2772, 2798, 2801, 2802, 2804, 2805, 2806, 2808, 2817, 2842, 2848, 2857, 2862, 2867, 2888, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3932, 3973, 3976, 3982, 3990, 3991, 3992, 3993, 3999, 4000, 4001, 4006, 4008, 4012, 4013, 4014, 4025, 4026, 4027, 4028, 4029, 4030, 4040, 4073, 4075, 4080, 4084, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4182, 4203, 4204, 4206, 4207, 4209, 4210, 4212, 4213, 4215, 4216, 4218, 4219, 4220, 4224, 4246, 4258, 4264, 4276, 4282, 4384, 4649, 4873, 4875, 4878, 4901, 4922, 4928, 4929, 4934, 4935, 4938, 4946, 4949, 4952, 4955, 4958, 4973, 5014, 5077, 5102, 5140, 5142, 5143, 5145, 5181, 5196, 5205, 5208, 5211, 5217, 5220, 5230, 5239, 5244, 5295, 5331, 5333, 5334, 5339, 5347, 5355, 5357, 5359, 5366], "in": [1, 3, 4, 8, 10, 11, 12, 16, 20, 25, 28, 30, 31, 33, 35, 39, 44, 47, 48, 51, 53, 54, 57, 64, 66, 69, 70, 72, 73, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 126, 128, 129, 130, 131, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 175, 176, 180, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 204, 205, 206, 209, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 239, 240, 242, 243, 247, 248, 251, 252, 253, 255, 256, 265, 267, 269, 271, 272, 276, 282, 288, 290, 291, 293, 301, 308, 310, 311, 312, 313, 321, 326, 327, 328, 334, 335, 336, 342, 343, 344, 345, 347, 348, 349, 352, 357, 361, 363, 364, 368, 369, 370, 371, 375, 376, 377, 380, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 405, 406, 410, 411, 413, 414, 418, 419, 422, 423, 424, 426, 427, 436, 438, 440, 442, 443, 447, 453, 459, 461, 462, 464, 472, 479, 481, 482, 483, 484, 492, 497, 498, 499, 505, 506, 507, 513, 514, 515, 516, 518, 519, 520, 523, 527, 528, 529, 530, 534, 535, 536, 539, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 564, 565, 569, 570, 572, 573, 577, 578, 581, 582, 583, 585, 586, 595, 597, 599, 601, 602, 606, 612, 618, 620, 621, 623, 631, 638, 640, 641, 642, 643, 651, 656, 657, 658, 664, 665, 666, 672, 673, 674, 675, 677, 678, 679, 683, 685, 689, 691, 693, 695, 699, 703, 707, 709, 711, 715, 717, 719, 723, 725, 728, 732, 737, 741, 743, 746, 750, 755, 759, 761, 763, 764, 768, 769, 771, 773, 775, 779, 781, 783, 787, 789, 792, 796, 798, 800, 804, 806, 808, 812, 814, 816, 820, 822, 824, 828, 831, 833, 835, 839, 843, 847, 849, 854, 859, 861, 863, 867, 871, 875, 877, 881, 886, 890, 894, 896, 898, 902, 904, 906, 910, 912, 913, 914, 918, 919, 920, 923, 931, 936, 939, 942, 943, 951, 956, 964, 966, 970, 973, 975, 980, 986, 994, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1014, 1016, 1020, 1023, 1025, 1030, 1036, 1044, 1050, 1058, 1063, 1065, 1067, 1071, 1072, 1080, 1081, 1083, 1087, 1088, 1096, 1097, 1099, 1102, 1106, 1107, 1108, 1109, 1113, 1114, 1115, 1118, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1142, 1143, 1146, 1147, 1149, 1150, 1154, 1155, 1158, 1159, 1160, 1162, 1163, 1172, 1174, 1176, 1178, 1179, 1183, 1189, 1195, 1197, 1198, 1200, 1208, 1215, 1217, 1218, 1219, 1220, 1228, 1233, 1234, 1235, 1241, 1242, 1243, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1259, 1262, 1263, 1271, 1273, 1277, 1280, 1282, 1284, 1288, 1296, 1299, 1302, 1307, 1318, 1319, 1327, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1403, 1406, 1407, 1410, 1412, 1415, 1417, 1419, 1421, 1424, 1427, 1428, 1436, 1441, 1443, 1444, 1445, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1512, 1517, 1519, 1522, 1524, 1526, 1527, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1640, 1641, 1642, 1644, 1648, 1649, 1654, 1657, 1658, 1663, 1666, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1689, 1693, 1700, 1701, 1706, 1707, 1708, 1711, 1713, 1714, 1715, 1719, 1722, 1724, 1726, 1732, 1740, 1742, 1743, 1744, 1745, 1749, 1751, 1753, 1757, 1760, 1772, 1781, 1786, 1789, 1791, 1796, 1802, 1810, 1815, 1818, 1820, 1825, 1831, 1834, 1836, 1841, 1847, 1850, 1852, 1857, 1863, 1866, 1868, 1873, 1879, 1883, 1886, 1898, 1899, 1901, 1902, 1906, 1911, 1912, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1934, 1937, 1939, 1940, 1943, 1945, 1948, 1954, 1956, 1959, 1962, 1963, 1974, 1976, 1978, 1979, 1982, 1983, 1985, 1987, 1990, 1996, 2003, 2005, 2007, 2011, 2012, 2016, 2019, 2024, 2025, 2028, 2030, 2032, 2033, 2035, 2039, 2041, 2045, 2046, 2054, 2055, 2056, 2058, 2059, 2060, 2063, 2064, 2065, 2068, 2070, 2072, 2075, 2077, 2078, 2085, 2089, 2092, 2098, 2102, 2105, 2113, 2117, 2122, 2125, 2132, 2133, 2135, 2138, 2143, 2144, 2154, 2161, 2162, 2163, 2165, 2166, 2167, 2168, 2170, 2176, 2178, 2180, 2181, 2182, 2186, 2187, 2188, 2192, 2195, 2196, 2198, 2200, 2201, 2209, 2211, 2213, 2214, 2217, 2220, 2221, 2224, 2225, 2226, 2233, 2235, 2236, 2238, 2242, 2243, 2244, 2251, 2252, 2253, 2255, 2257, 2258, 2265, 2267, 2269, 2272, 2277, 2282, 2283, 2285, 2290, 2291, 2292, 2297, 2311, 2318, 2323, 2333, 2334, 2337, 2345, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2389, 2398, 2403, 2412, 2417, 2426, 2431, 2440, 2445, 2454, 2459, 2468, 2473, 2479, 2484, 2489, 2493, 2498, 2504, 2512, 2517, 2525, 2530, 2538, 2543, 2551, 2556, 2564, 2569, 2577, 2582, 2590, 2595, 2603, 2608, 2616, 2621, 2629, 2634, 2642, 2647, 2655, 2660, 2668, 2673, 2681, 2686, 2694, 2699, 2707, 2712, 2720, 2725, 2733, 2738, 2746, 2751, 2759, 2764, 2772, 2779, 2786, 2788, 2789, 2790, 2791, 2798, 2801, 2804, 2808, 2813, 2842, 2848, 2851, 2854, 2862, 2865, 2867, 2870, 2875, 2876, 2877, 2878, 2883, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2894, 2899, 2909, 2914, 2915, 2916, 2918, 2923, 2924, 2925, 2927, 2932, 2933, 2934, 2936, 2942, 2943, 2951, 2952, 2960, 2961, 2963, 2968, 2969, 2970, 2977, 2978, 2980, 2985, 2986, 2987, 2994, 2995, 2997, 3002, 3003, 3004, 3005, 3010, 3011, 3012, 3013, 3018, 3019, 3020, 3027, 3028, 3030, 3035, 3036, 3037, 3044, 3045, 3047, 3052, 3053, 3054, 3061, 3062, 3064, 3069, 3070, 3071, 3078, 3079, 3081, 3086, 3087, 3088, 3094, 3095, 3097, 3102, 3103, 3104, 3111, 3112, 3114, 3119, 3120, 3121, 3127, 3128, 3130, 3135, 3136, 3137, 3144, 3145, 3147, 3152, 3153, 3154, 3160, 3161, 3163, 3168, 3169, 3170, 3177, 3178, 3180, 3185, 3186, 3187, 3194, 3195, 3197, 3202, 3203, 3204, 3211, 3212, 3214, 3219, 3220, 3221, 3228, 3229, 3231, 3236, 3237, 3238, 3245, 3246, 3248, 3253, 3254, 3255, 3262, 3263, 3265, 3270, 3271, 3272, 3279, 3280, 3282, 3287, 3288, 3289, 3295, 3296, 3298, 3303, 3304, 3305, 3312, 3313, 3315, 3320, 3321, 3322, 3329, 3330, 3332, 3337, 3338, 3339, 3345, 3346, 3348, 3353, 3354, 3355, 3362, 3363, 3365, 3370, 3371, 3372, 3379, 3380, 3382, 3387, 3388, 3389, 3390, 3395, 3396, 3397, 3404, 3405, 3407, 3412, 3413, 3414, 3421, 3422, 3430, 3431, 3438, 3439, 3441, 3446, 3447, 3448, 3455, 3456, 3458, 3463, 3464, 3465, 3471, 3472, 3474, 3479, 3480, 3481, 3482, 3485, 3493, 3494, 3502, 3503, 3505, 3510, 3511, 3512, 3518, 3519, 3521, 3526, 3527, 3528, 3535, 3536, 3538, 3543, 3544, 3545, 3551, 3552, 3560, 3561, 3563, 3568, 3569, 3570, 3577, 3578, 3580, 3585, 3586, 3587, 3594, 3595, 3597, 3602, 3603, 3604, 3610, 3611, 3618, 3619, 3627, 3628, 3630, 3635, 3636, 3637, 3644, 3645, 3647, 3652, 3653, 3654, 3660, 3661, 3663, 3668, 3669, 3670, 3677, 3678, 3680, 3685, 3686, 3687, 3693, 3694, 3696, 3701, 3702, 3703, 3704, 3705, 3708, 3718, 3719, 3720, 3721, 3723, 3725, 3728, 3730, 3731, 3737, 3738, 3739, 3745, 3747, 3748, 3757, 3759, 3760, 3761, 3763, 3764, 3766, 3767, 3772, 3779, 3781, 3782, 3783, 3789, 3790, 3793, 3796, 3799, 3802, 3806, 3812, 3814, 3816, 3818, 3821, 3823, 3824, 3828, 3830, 3833, 3834, 3835, 3838, 3840, 3853, 3855, 3857, 3858, 3860, 3862, 3863, 3865, 3868, 3874, 3875, 3876, 3885, 3887, 3888, 3891, 3897, 3899, 3901, 3904, 3906, 3908, 3909, 3911, 3920, 3922, 3924, 3927, 3932, 3933, 3935, 3939, 3941, 3951, 3952, 3955, 3957, 3958, 3961, 3963, 3965, 3968, 3969, 3970, 3973, 3974, 3976, 3977, 3980, 3982, 3983, 3992, 3993, 3994, 3995, 3999, 4001, 4006, 4008, 4010, 4012, 4014, 4020, 4022, 4025, 4026, 4029, 4030, 4031, 4032, 4035, 4039, 4041, 4042, 4044, 4045, 4046, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4057, 4058, 4059, 4060, 4075, 4077, 4080, 4087, 4090, 4094, 4096, 4099, 4103, 4105, 4108, 4112, 4114, 4117, 4121, 4123, 4126, 4130, 4132, 4135, 4139, 4141, 4144, 4148, 4150, 4153, 4157, 4159, 4162, 4164, 4167, 4169, 4172, 4174, 4177, 4182, 4184, 4187, 4192, 4195, 4203, 4206, 4208, 4209, 4212, 4215, 4219, 4220, 4221, 4224, 4225, 4229, 4231, 4239, 4240, 4241, 4245, 4246, 4247, 4249, 4253, 4254, 4255, 4261, 4262, 4264, 4268, 4271, 4272, 4273, 4279, 4280, 4282, 4286, 4287, 4289, 4291, 4292, 4297, 4298, 4299, 4316, 4317, 4319, 4334, 4336, 4338, 4353, 4354, 4376, 4380, 4384, 4385, 4389, 4390, 4394, 4395, 4398, 4403, 4405, 4420, 4421, 4432, 4444, 4445, 4447, 4462, 4463, 4467, 4468, 4471, 4486, 4487, 4488, 4490, 4491, 4493, 4494, 4495, 4498, 4501, 4507, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4521, 4522, 4524, 4525, 4529, 4530, 4539, 4540, 4541, 4542, 4544, 4546, 4568, 4570, 4583, 4584, 4589, 4591, 4592, 4604, 4605, 4608, 4609, 4614, 4616, 4617, 4619, 4620, 4624, 4625, 4634, 4635, 4636, 4637, 4639, 4640, 4644, 4649, 4650, 4655, 4656, 4660, 4661, 4664, 4668, 4670, 4685, 4687, 4689, 4704, 4705, 4710, 4712, 4716, 4722, 4744, 4745, 4749, 4751, 4755, 4762, 4763, 4765, 4767, 4770, 4771, 4774, 4778, 4779, 4783, 4784, 4785, 4788, 4792, 4793, 4798, 4799, 4800, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4810, 4811, 4812, 4813, 4817, 4819, 4821, 4823, 4825, 4830, 4831, 4836, 4839, 4843, 4844, 4847, 4848, 4849, 4850, 4851, 4852, 4854, 4856, 4857, 4859, 4861, 4863, 4870, 4873, 4874, 4876, 4877, 4878, 4881, 4887, 4889, 4892, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4907, 4911, 4912, 4913, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4934, 4935, 4937, 4938, 4939, 4941, 4944, 4946, 4949, 4952, 4955, 4958, 4961, 4963, 4964, 4966, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4996, 4997, 4999, 5000, 5003, 5004, 5006, 5007, 5008, 5011, 5014, 5016, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5047, 5054, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5082, 5083, 5085, 5086, 5089, 5091, 5092, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5154, 5157, 5160, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5232, 5233, 5234, 5235, 5236, 5237, 5239, 5240, 5241, 5244, 5245, 5246, 5247, 5250, 5252, 5257, 5262, 5263, 5267, 5270, 5271, 5274, 5277, 5281, 5282, 5283, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5299, 5303, 5304, 5305, 5311, 5315, 5316, 5317, 5323, 5327, 5328, 5329, 5331, 5332, 5333, 5334, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "module": [1, 2, 4, 6, 7, 31, 32, 33, 35, 39, 44, 51, 53, 54, 57, 58, 277, 448, 607, 1184, 1922, 2069, 2084, 2097, 2323, 2337, 2349, 2363, 2376, 2389, 2801, 2808, 2812, 2813, 5033, 5250], "snapshot": [1, 64, 233, 306, 307, 321, 322, 323, 324, 325, 326, 327, 404, 477, 478, 492, 493, 494, 495, 496, 497, 498, 563, 636, 637, 651, 652, 653, 654, 655, 656, 657, 683, 689, 1141, 1213, 1214, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1684, 1693, 1716, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1984, 1994, 2323, 2349, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2409, 2417, 2419, 2423, 2431, 2437, 2445, 2451, 2459, 2465, 2504, 2517, 2595, 2608, 2784, 2785, 2956, 2958, 2973, 2975, 2990, 2992, 3023, 3025, 3040, 3042, 3057, 3059, 3074, 3076, 3092, 3107, 3109, 3125, 3140, 3142, 3158, 3173, 3175, 3190, 3192, 3207, 3209, 3224, 3226, 3241, 3243, 3258, 3260, 3275, 3277, 3293, 3308, 3310, 3325, 3327, 3343, 3358, 3360, 3375, 3377, 3400, 3402, 3436, 3451, 3453, 3469, 3498, 3500, 3516, 3531, 3533, 3556, 3558, 3573, 3575, 3590, 3592, 3608, 3616, 3623, 3625, 3640, 3642, 3658, 3673, 3675, 3691, 3757, 3999, 4012, 4055, 4073, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4282, 4803, 5295, 5307, 5319, 5331, 5339, 5355, 5370], "allow": [1, 11, 35, 64, 81, 125, 147, 165, 172, 1318, 1722, 2068, 2132, 2170, 2201, 2204, 2214, 2218, 2226, 2230, 2244, 2248, 2250, 2258, 2261, 2264, 2487, 2798, 3838, 3852, 3905, 4219, 4958, 5257, 5277, 5332], "taking": [1, 28, 48, 64, 97, 147, 165, 172, 849, 877, 1898, 1906, 1959, 2003, 2007, 2008, 2011, 2019, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2161, 2182, 2198, 2211, 2224, 2232, 2238, 2255, 4008, 4578, 4715, 5014, 5226, 5237], "current": [1, 57, 64, 147, 165, 172, 198, 207, 215, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 369, 378, 386, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 528, 537, 545, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 689, 693, 773, 928, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1107, 1116, 1123, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1268, 1283, 1303, 1324, 1433, 1444, 1509, 1663, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 2323, 2333, 2349, 2359, 2363, 2372, 2376, 2385, 2394, 2408, 2422, 2436, 2450, 2464, 2484, 2504, 2509, 2517, 2522, 2535, 2543, 2548, 2556, 2561, 2569, 2574, 2582, 2587, 2595, 2600, 2608, 2613, 2621, 2626, 2634, 2639, 2647, 2652, 2660, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2794, 2795, 2796, 2797, 2815, 2818, 2826, 2827, 2832, 2835, 2840, 2903, 3711, 3722, 3823, 3838, 3850, 3852, 3861, 3868, 4023, 4024, 4041, 4130, 4229, 4303, 4305, 4310, 4320, 4322, 4331, 4339, 4341, 4350, 4358, 4360, 4369, 4378, 4394, 4395, 4406, 4408, 4417, 4428, 4431, 4440, 4448, 4450, 4459, 4463, 4469, 4474, 4482, 4490, 4493, 4494, 4496, 4498, 4499, 4501, 4514, 4521, 4524, 4525, 4527, 4529, 4530, 4540, 4556, 4558, 4564, 4573, 4576, 4590, 4597, 4608, 4616, 4619, 4620, 4624, 4625, 4635, 4642, 4645, 4660, 4661, 4671, 4673, 4682, 4690, 4692, 4701, 4743, 4915, 5003, 5008, 5014, 5017, 5023, 5041, 5117, 5123, 5178, 5266, 5335, 5355, 5370], "state": [1, 10, 11, 16, 28, 35, 48, 56, 64, 66, 68, 73, 78, 82, 86, 87, 88, 90, 94, 97, 98, 101, 103, 104, 109, 112, 116, 117, 120, 122, 126, 127, 128, 131, 134, 135, 136, 137, 138, 143, 147, 148, 153, 155, 163, 165, 166, 169, 172, 173, 178, 179, 181, 186, 191, 193, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 253, 255, 256, 276, 287, 301, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 342, 343, 344, 345, 357, 364, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 424, 426, 427, 447, 458, 472, 473, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 494, 496, 497, 498, 513, 514, 515, 516, 523, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 564, 583, 585, 586, 606, 617, 631, 632, 635, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 653, 655, 656, 657, 672, 673, 674, 675, 849, 877, 970, 975, 1025, 1102, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1142, 1160, 1162, 1163, 1183, 1194, 1208, 1209, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1232, 1233, 1234, 1249, 1250, 1251, 1252, 1282, 1302, 1318, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1372, 1373, 1376, 1377, 1379, 1381, 1387, 1388, 1390, 1392, 1398, 1399, 1406, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1441, 1447, 1450, 1456, 1460, 1463, 1465, 1466, 1468, 1470, 1471, 1480, 1487, 1492, 1497, 1503, 1520, 1526, 1530, 1531, 1537, 1540, 1545, 1548, 1550, 1551, 1553, 1561, 1563, 1565, 1567, 1641, 1644, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 1899, 1903, 1906, 1926, 1944, 1948, 1954, 1957, 1959, 1983, 1984, 1987, 1990, 1994, 1998, 2001, 2005, 2010, 2013, 2014, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2027, 2032, 2033, 2036, 2056, 2068, 2070, 2073, 2075, 2085, 2087, 2089, 2098, 2100, 2102, 2113, 2115, 2117, 2133, 2136, 2138, 2162, 2163, 2165, 2166, 2167, 2170, 2177, 2178, 2182, 2183, 2184, 2188, 2195, 2196, 2198, 2199, 2201, 2203, 2204, 2206, 2207, 2208, 2209, 2211, 2212, 2214, 2218, 2220, 2221, 2224, 2226, 2227, 2228, 2232, 2233, 2238, 2240, 2244, 2248, 2252, 2253, 2255, 2256, 2258, 2261, 2262, 2302, 2308, 2323, 2349, 2363, 2376, 2403, 2445, 2459, 2479, 2484, 2486, 2493, 2500, 2530, 2556, 2569, 2582, 2621, 2634, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2779, 2780, 2783, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2842, 2845, 2858, 2859, 2861, 2871, 2885, 2899, 2905, 2914, 2923, 3708, 3718, 3719, 3730, 3799, 3806, 3824, 3828, 3840, 3880, 3911, 3919, 3963, 4139, 4148, 4162, 4229, 4354, 4376, 4380, 4381, 4382, 4384, 4385, 4388, 4389, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4400, 4595, 4599, 4600, 4603, 4606, 4607, 4608, 4610, 4611, 4612, 4613, 4640, 4644, 4646, 4647, 4649, 4650, 4652, 4654, 4655, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4665, 4666, 4715, 4718, 4719, 4722, 4723, 4724, 4726, 4727, 4737, 4740, 4744, 4749, 4771, 4946, 4952, 5033, 5077, 5143, 5172, 5181, 5190, 5214, 5217, 5268, 5270, 5274, 5284, 5291, 5292, 5293, 5294, 5340, 5341, 5342, 5347, 5348, 5349, 5350, 5355, 5362, 5364, 5365, 5367, 5370], "simulator": [1, 4, 16, 31, 33, 35, 53, 62, 64, 140, 142, 147, 158, 165, 172, 301, 302, 305, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 472, 473, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 631, 632, 635, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 655, 656, 657, 841, 877, 913, 1208, 1209, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1232, 1233, 1234, 1641, 1802, 2323, 2326, 2327, 2328, 2329, 2330, 2331, 2335, 2337, 2338, 2339, 2340, 2341, 2343, 2345, 2347, 2349, 2352, 2353, 2354, 2355, 2357, 2361, 2363, 2366, 2367, 2368, 2370, 2374, 2376, 2379, 2380, 2381, 2383, 2387, 2389, 2403, 2417, 2431, 2445, 2530, 2543, 2556, 2569, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2779, 2780, 2783, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2801, 2862, 2909, 2914, 2918, 2923, 2927, 2932, 2942, 2951, 2960, 2969, 2977, 2986, 2994, 3003, 3027, 3036, 3044, 3053, 3061, 3070, 3078, 3087, 3094, 3103, 3111, 3120, 3127, 3136, 3144, 3153, 3160, 3169, 3177, 3186, 3194, 3203, 3211, 3220, 3228, 3237, 3245, 3254, 3262, 3271, 3279, 3288, 3295, 3304, 3312, 3321, 3329, 3338, 3345, 3354, 3362, 3371, 3379, 3396, 3404, 3413, 3421, 3430, 3438, 3447, 3455, 3464, 3471, 3480, 3488, 3493, 3502, 3511, 3518, 3527, 3535, 3544, 3551, 3560, 3569, 3577, 3586, 3594, 3603, 3610, 3618, 3627, 3636, 3644, 3653, 3660, 3669, 3677, 3686, 3693, 3702, 3704, 3757, 3796, 3932, 3963, 3976, 4055, 4148, 4255, 4273, 4332, 4351, 4418, 4460, 4595, 4683, 4702, 4803, 4922, 5250, 5289, 5339, 5347, 5348, 5364, 5366, 5367, 5369, 5370], "without": [1, 35, 48, 53, 64, 105, 118, 200, 201, 213, 371, 372, 384, 530, 531, 543, 701, 789, 970, 998, 1109, 1110, 1121, 1318, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1417, 1419, 1421, 1424, 1447, 1463, 1563, 2018, 2029, 2056, 2323, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3736, 4167, 4172, 4182, 4224, 4226, 4227, 5023, 5102, 5120, 5137, 5146, 5157, 5158, 5250, 5291, 5292, 5307, 5331, 5332, 5333, 5334, 5340, 5354, 5364, 5367], "effecting": 1, "outcome": [1, 8, 48, 64, 66, 86, 147, 165, 172, 306, 307, 477, 478, 636, 637, 1213, 1214, 1994, 2165, 2166, 2167, 2168, 2323, 2349, 2595, 2608, 2784, 2785, 2830, 3757, 3761, 4388, 4603, 4654, 4803, 4806], "simulation": [1, 3, 4, 29, 33, 64, 74, 186, 193, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 364, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 523, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 841, 877, 998, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1387, 1396, 1399, 1448, 1453, 1948, 1949, 2323, 2324, 2325, 2333, 2337, 2345, 2346, 2349, 2350, 2351, 2359, 2363, 2364, 2365, 2372, 2376, 2377, 2378, 2385, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2725, 2738, 2751, 2764, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2915, 2924, 2933, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4148, 4354, 4370, 4384, 4519, 4595, 4614, 4649, 4716, 4923, 5353, 5362, 5364, 5365, 5366, 5369, 5370], "these": [1, 3, 4, 6, 8, 10, 11, 16, 25, 28, 31, 35, 39, 48, 51, 53, 54, 64, 66, 82, 84, 86, 88, 90, 103, 126, 128, 131, 134, 142, 143, 147, 148, 165, 166, 172, 173, 235, 253, 262, 264, 267, 285, 406, 424, 433, 435, 438, 456, 565, 583, 592, 594, 597, 615, 682, 725, 904, 912, 1063, 1065, 1143, 1160, 1169, 1171, 1174, 1192, 1342, 1379, 1380, 1421, 1441, 1503, 1537, 1551, 1641, 1682, 1898, 1936, 1937, 1987, 2001, 2068, 2277, 2285, 2290, 2318, 2323, 2337, 2349, 2363, 2376, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2968, 2971, 2980, 2985, 2988, 2997, 3002, 3005, 3010, 3013, 3018, 3021, 3030, 3035, 3038, 3047, 3052, 3055, 3064, 3069, 3072, 3081, 3086, 3089, 3097, 3102, 3105, 3114, 3119, 3122, 3130, 3135, 3138, 3147, 3152, 3155, 3163, 3168, 3171, 3180, 3185, 3188, 3197, 3202, 3205, 3214, 3219, 3222, 3231, 3236, 3239, 3248, 3253, 3256, 3265, 3270, 3273, 3282, 3287, 3290, 3298, 3303, 3306, 3315, 3320, 3323, 3332, 3337, 3340, 3348, 3353, 3356, 3365, 3370, 3373, 3382, 3387, 3390, 3395, 3398, 3407, 3412, 3415, 3424, 3433, 3441, 3446, 3449, 3458, 3463, 3466, 3474, 3479, 3488, 3496, 3505, 3510, 3513, 3521, 3526, 3529, 3538, 3543, 3546, 3554, 3563, 3568, 3571, 3580, 3585, 3588, 3597, 3602, 3605, 3613, 3621, 3630, 3635, 3638, 3647, 3652, 3655, 3663, 3668, 3671, 3680, 3685, 3688, 3696, 3701, 3718, 3769, 3777, 3791, 3796, 3838, 3864, 3869, 3876, 3885, 3891, 3935, 3973, 3982, 4008, 4032, 4063, 4182, 4219, 4241, 4254, 4272, 4287, 4743, 4744, 4747, 4749, 4769, 4771, 4873, 4878, 4915, 4922, 4958, 4973, 5003, 5021, 5077, 5120, 5143, 5178, 5181, 5190, 5220, 5226, 5227, 5238, 5257, 5270, 5281, 5332, 5369], "can": [1, 3, 4, 6, 8, 10, 11, 20, 24, 25, 28, 29, 30, 31, 33, 35, 39, 44, 48, 51, 53, 54, 64, 66, 68, 69, 70, 74, 75, 79, 81, 82, 83, 86, 88, 95, 97, 98, 101, 110, 113, 120, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 142, 143, 147, 148, 153, 158, 164, 165, 166, 171, 172, 173, 178, 179, 180, 186, 198, 201, 211, 213, 231, 235, 239, 251, 252, 255, 256, 262, 264, 269, 277, 328, 335, 336, 369, 372, 382, 384, 402, 406, 410, 422, 423, 426, 427, 433, 435, 440, 448, 499, 506, 507, 528, 531, 541, 543, 561, 565, 569, 581, 582, 585, 586, 592, 594, 599, 607, 658, 665, 666, 682, 765, 769, 773, 806, 822, 841, 849, 852, 877, 904, 912, 916, 917, 929, 943, 949, 962, 1001, 1005, 1012, 1027, 1036, 1042, 1056, 1063, 1067, 1071, 1087, 1102, 1107, 1110, 1120, 1121, 1139, 1143, 1146, 1158, 1159, 1162, 1163, 1169, 1171, 1176, 1184, 1235, 1242, 1243, 1263, 1269, 1285, 1304, 1318, 1342, 1372, 1373, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1393, 1399, 1401, 1406, 1407, 1410, 1427, 1434, 1441, 1442, 1447, 1448, 1450, 1453, 1456, 1459, 1470, 1471, 1472, 1475, 1478, 1479, 1496, 1503, 1510, 1529, 1537, 1539, 1550, 1551, 1555, 1563, 1567, 1641, 1644, 1648, 1649, 1666, 1667, 1692, 1706, 1719, 1753, 1779, 1822, 1838, 1854, 1870, 1879, 1898, 1906, 1908, 1911, 1923, 1926, 1929, 1932, 1934, 1935, 1945, 1948, 1959, 1962, 1970, 1983, 1987, 1990, 1994, 1995, 2000, 2001, 2008, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2024, 2025, 2028, 2031, 2032, 2039, 2042, 2045, 2055, 2060, 2063, 2064, 2067, 2075, 2077, 2089, 2092, 2102, 2105, 2117, 2123, 2125, 2138, 2141, 2143, 2165, 2166, 2167, 2169, 2182, 2186, 2198, 2200, 2211, 2213, 2218, 2224, 2225, 2238, 2239, 2242, 2255, 2257, 2282, 2285, 2290, 2291, 2309, 2311, 2318, 2323, 2337, 2349, 2363, 2376, 2487, 2503, 2556, 2569, 2705, 2718, 2731, 2744, 2757, 2770, 2798, 2801, 2808, 2812, 2813, 2816, 2826, 2842, 2848, 2861, 2862, 2879, 2880, 2885, 2888, 2968, 2985, 3002, 3010, 3011, 3018, 3019, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3388, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3704, 3708, 3718, 3720, 3721, 3722, 3723, 3725, 3730, 3738, 3739, 3746, 3750, 3767, 3779, 3780, 3782, 3789, 3793, 3796, 3798, 3814, 3818, 3824, 3834, 3838, 3852, 3862, 3870, 3876, 3887, 3888, 3896, 3899, 3901, 3904, 3905, 3909, 3922, 3923, 3925, 3926, 3932, 3963, 3966, 3976, 3982, 3999, 4002, 4008, 4012, 4015, 4030, 4032, 4158, 4162, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4203, 4206, 4220, 4229, 4241, 4254, 4272, 4282, 4287, 4288, 4291, 4297, 4299, 4304, 4310, 4321, 4331, 4340, 4350, 4354, 4359, 4369, 4376, 4380, 4385, 4388, 4389, 4390, 4394, 4395, 4398, 4402, 4407, 4417, 4429, 4432, 4440, 4449, 4459, 4463, 4482, 4487, 4491, 4513, 4519, 4522, 4539, 4557, 4564, 4568, 4574, 4577, 4579, 4590, 4595, 4603, 4605, 4607, 4608, 4609, 4614, 4617, 4634, 4640, 4644, 4645, 4650, 4654, 4655, 4656, 4658, 4660, 4661, 4664, 4667, 4672, 4682, 4691, 4701, 4712, 4751, 4773, 4787, 4813, 4817, 4819, 4821, 4823, 4825, 4831, 4842, 4847, 4848, 4873, 4878, 4882, 4884, 4896, 4902, 4915, 4917, 4922, 4923, 4928, 4930, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5017, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5150, 5151, 5156, 5157, 5162, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5230, 5237, 5238, 5241, 5250, 5253, 5263, 5267, 5275, 5277, 5280, 5281, 5283, 5331, 5332, 5333, 5334, 5335, 5340, 5342, 5359, 5361, 5362], "used": [1, 2, 3, 4, 6, 8, 10, 11, 16, 20, 24, 25, 30, 31, 34, 35, 39, 44, 48, 51, 53, 54, 57, 64, 66, 69, 75, 79, 81, 86, 88, 92, 95, 97, 100, 103, 104, 105, 110, 113, 118, 120, 123, 125, 136, 143, 147, 149, 150, 151, 162, 165, 167, 168, 169, 172, 174, 175, 176, 179, 186, 193, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 239, 240, 241, 252, 253, 255, 256, 258, 262, 263, 264, 276, 283, 284, 285, 328, 335, 336, 337, 347, 364, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 410, 411, 412, 423, 424, 426, 427, 429, 433, 434, 435, 447, 454, 455, 456, 499, 506, 507, 508, 518, 523, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 569, 570, 571, 582, 583, 585, 586, 588, 592, 593, 594, 606, 613, 614, 615, 658, 665, 666, 667, 677, 682, 683, 685, 691, 695, 699, 703, 707, 709, 711, 715, 719, 723, 728, 732, 737, 741, 746, 750, 755, 759, 764, 771, 775, 779, 783, 787, 792, 796, 798, 800, 804, 806, 808, 812, 816, 820, 822, 824, 828, 835, 839, 843, 847, 849, 852, 854, 859, 861, 863, 867, 869, 871, 875, 877, 881, 886, 890, 894, 896, 898, 902, 904, 906, 910, 912, 919, 920, 939, 1036, 1063, 1067, 1081, 1097, 1102, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1143, 1146, 1147, 1148, 1159, 1160, 1162, 1163, 1165, 1169, 1170, 1171, 1183, 1190, 1191, 1192, 1235, 1242, 1243, 1244, 1254, 1259, 1263, 1277, 1296, 1313, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1644, 1648, 1649, 1690, 1691, 1706, 1710, 1714, 1715, 1717, 1719, 1772, 1786, 1898, 1901, 1922, 1926, 1934, 1945, 1948, 1956, 1970, 1983, 1987, 1993, 1994, 2001, 2008, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2035, 2054, 2072, 2122, 2135, 2154, 2155, 2162, 2165, 2166, 2176, 2180, 2235, 2251, 2272, 2275, 2277, 2282, 2283, 2285, 2291, 2292, 2293, 2297, 2313, 2315, 2316, 2321, 2322, 2323, 2337, 2349, 2363, 2376, 2473, 2474, 2487, 2494, 2501, 2502, 2503, 2634, 2801, 2804, 2808, 2813, 2848, 2854, 2877, 2886, 2887, 2894, 2895, 2907, 2908, 2909, 2914, 2915, 2916, 2918, 2923, 2924, 2925, 2927, 2932, 2933, 2934, 2936, 2943, 2945, 2952, 2954, 2961, 2963, 2969, 2970, 2971, 2978, 2980, 2986, 2987, 2988, 2995, 2997, 3003, 3004, 3005, 3011, 3012, 3013, 3019, 3020, 3021, 3028, 3030, 3036, 3037, 3038, 3045, 3047, 3053, 3054, 3055, 3062, 3064, 3070, 3071, 3072, 3079, 3081, 3087, 3088, 3089, 3095, 3097, 3103, 3104, 3105, 3112, 3114, 3120, 3121, 3122, 3128, 3130, 3136, 3137, 3138, 3145, 3147, 3153, 3154, 3155, 3161, 3163, 3169, 3170, 3171, 3178, 3180, 3186, 3187, 3188, 3195, 3197, 3203, 3204, 3205, 3212, 3214, 3220, 3221, 3222, 3229, 3231, 3237, 3238, 3239, 3246, 3248, 3254, 3255, 3256, 3263, 3265, 3271, 3272, 3273, 3280, 3282, 3288, 3289, 3290, 3296, 3298, 3304, 3305, 3306, 3313, 3315, 3321, 3322, 3323, 3330, 3332, 3338, 3339, 3340, 3346, 3348, 3354, 3355, 3356, 3363, 3365, 3371, 3372, 3373, 3380, 3382, 3388, 3389, 3390, 3396, 3397, 3398, 3405, 3407, 3413, 3414, 3415, 3422, 3424, 3431, 3433, 3439, 3441, 3447, 3448, 3449, 3456, 3458, 3464, 3465, 3466, 3472, 3474, 3480, 3481, 3483, 3484, 3486, 3487, 3488, 3494, 3496, 3503, 3505, 3511, 3512, 3513, 3519, 3521, 3527, 3528, 3529, 3536, 3538, 3544, 3545, 3546, 3552, 3554, 3561, 3563, 3569, 3570, 3571, 3578, 3580, 3586, 3587, 3588, 3595, 3597, 3603, 3604, 3605, 3611, 3613, 3619, 3621, 3628, 3630, 3636, 3637, 3638, 3645, 3647, 3653, 3654, 3655, 3661, 3663, 3669, 3670, 3671, 3678, 3680, 3686, 3687, 3688, 3694, 3696, 3702, 3703, 3704, 3706, 3708, 3718, 3723, 3730, 3731, 3736, 3738, 3739, 3757, 3766, 3779, 3780, 3783, 3789, 3796, 3798, 3809, 3814, 3823, 3834, 3837, 3838, 3851, 3852, 3855, 3862, 3863, 3864, 3868, 3869, 3871, 3881, 3885, 3888, 3891, 3896, 3897, 3901, 3904, 3905, 3909, 3910, 3916, 3918, 3920, 3925, 3926, 3942, 3945, 3966, 3983, 3993, 4003, 4008, 4016, 4031, 4061, 4073, 4075, 4080, 4090, 4094, 4099, 4108, 4117, 4126, 4135, 4144, 4148, 4153, 4182, 4219, 4231, 4252, 4255, 4258, 4264, 4270, 4276, 4291, 4297, 4298, 4335, 4354, 4394, 4395, 4402, 4421, 4424, 4432, 4463, 4508, 4509, 4534, 4535, 4552, 4568, 4584, 4608, 4609, 4626, 4629, 4630, 4645, 4660, 4661, 4686, 4705, 4713, 4745, 4747, 4750, 4767, 4769, 4772, 4803, 4817, 4819, 4821, 4823, 4825, 4873, 4876, 4882, 4896, 4901, 4902, 4915, 4917, 4923, 4928, 4930, 4938, 4946, 4949, 4952, 4955, 4964, 4973, 4982, 4985, 4988, 5003, 5014, 5017, 5055, 5077, 5093, 5096, 5143, 5175, 5178, 5196, 5202, 5205, 5208, 5214, 5217, 5226, 5230, 5231, 5232, 5235, 5237, 5239, 5241, 5244, 5246, 5247, 5250, 5257, 5262, 5268, 5272, 5274, 5275, 5281, 5283, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5342, 5347, 5368], "qasmsimulator": [1, 4, 62, 64, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2801, 2804, 2888, 5339, 5340, 5364], "backend": [1, 3, 4, 8, 11, 16, 25, 29, 32, 33, 35, 45, 48, 53, 62, 69, 92, 97, 103, 110, 115, 118, 136, 147, 156, 158, 162, 163, 165, 172, 179, 186, 232, 235, 403, 406, 562, 565, 852, 904, 913, 916, 917, 918, 1140, 1143, 1641, 1642, 1643, 1644, 1753, 1879, 1926, 1993, 1994, 2008, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2297, 2307, 2309, 2314, 2315, 2316, 2317, 2318, 2321, 2322, 2323, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2336, 2337, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2348, 2349, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2362, 2363, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2375, 2376, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2388, 2473, 2474, 2485, 2487, 2488, 2801, 2808, 2842, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2862, 2865, 2894, 2895, 2904, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2943, 2944, 2945, 2946, 2948, 2950, 2952, 2953, 2954, 2955, 2957, 2959, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2974, 2976, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2991, 2993, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3024, 3026, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3041, 3043, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3058, 3060, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3075, 3077, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3093, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3108, 3110, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3126, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3141, 3143, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3159, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3174, 3176, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3191, 3193, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3208, 3210, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3225, 3227, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3242, 3244, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3259, 3261, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3276, 3278, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3294, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3309, 3311, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3326, 3328, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3344, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3359, 3361, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3376, 3378, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3401, 3403, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3422, 3423, 3424, 3425, 3427, 3428, 3429, 3431, 3432, 3433, 3434, 3435, 3437, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3452, 3454, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3470, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3483, 3484, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3494, 3495, 3496, 3497, 3499, 3501, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3517, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3532, 3534, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3552, 3553, 3554, 3555, 3557, 3559, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3574, 3576, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3591, 3593, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3609, 3611, 3612, 3613, 3614, 3615, 3617, 3619, 3620, 3621, 3622, 3624, 3626, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3641, 3643, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3659, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3674, 3676, 3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3692, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3708, 3711, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3735, 3736, 3737, 3738, 3739, 3742, 3756, 3757, 3777, 3779, 3782, 3787, 3789, 3796, 3797, 3798, 3809, 3833, 3834, 3838, 3851, 3864, 3869, 3876, 3885, 3887, 3888, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3909, 3910, 3920, 3922, 3929, 3932, 3935, 3940, 3951, 3957, 3960, 3963, 3965, 3966, 3969, 3970, 3976, 3990, 3999, 4012, 4021, 4022, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4049, 4050, 4056, 4057, 4058, 4059, 4060, 4080, 4090, 4099, 4103, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4187, 4188, 4241, 4255, 4273, 4767, 4802, 4803, 4814, 4827, 4828, 4873, 4874, 4877, 4878, 4901, 4902, 4915, 4922, 4923, 4930, 4958, 4964, 4973, 4982, 4985, 4988, 5014, 5018, 5021, 5033, 5054, 5071, 5093, 5096, 5102, 5117, 5123, 5143, 5146, 5151, 5152, 5157, 5158, 5178, 5190, 5202, 5214, 5217, 5220, 5226, 5230, 5231, 5250, 5253, 5257, 5281, 5286, 5288, 5289, 5290, 5331, 5337, 5339, 5343, 5344, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5364, 5366, 5367, 5369], "return": [1, 11, 12, 16, 25, 31, 35, 44, 48, 51, 53, 64, 66, 75, 79, 84, 95, 100, 101, 107, 113, 115, 120, 123, 128, 130, 133, 137, 140, 142, 143, 149, 150, 151, 165, 167, 168, 169, 174, 175, 176, 191, 193, 207, 208, 210, 211, 212, 216, 233, 237, 238, 247, 252, 266, 267, 270, 277, 279, 280, 281, 285, 288, 299, 300, 302, 303, 304, 306, 307, 324, 334, 348, 364, 378, 379, 381, 382, 383, 387, 404, 408, 409, 418, 423, 437, 438, 441, 448, 450, 451, 452, 456, 459, 470, 471, 473, 474, 475, 477, 478, 495, 505, 519, 523, 537, 538, 540, 541, 542, 546, 563, 567, 568, 577, 582, 596, 597, 600, 607, 609, 610, 611, 615, 618, 629, 630, 632, 633, 634, 636, 637, 654, 664, 678, 683, 684, 693, 701, 709, 710, 717, 718, 725, 726, 727, 734, 735, 736, 743, 744, 745, 752, 753, 754, 761, 762, 773, 781, 789, 790, 791, 798, 799, 806, 807, 814, 815, 822, 823, 833, 834, 841, 842, 849, 861, 862, 869, 877, 888, 889, 896, 897, 904, 915, 918, 922, 923, 930, 931, 937, 938, 941, 943, 950, 951, 956, 963, 964, 966, 970, 975, 978, 980, 984, 986, 992, 993, 994, 998, 1002, 1005, 1006, 1013, 1014, 1016, 1020, 1025, 1028, 1030, 1034, 1036, 1043, 1044, 1046, 1050, 1057, 1058, 1073, 1077, 1081, 1089, 1093, 1097, 1102, 1116, 1117, 1119, 1120, 1124, 1141, 1145, 1154, 1159, 1173, 1174, 1177, 1184, 1186, 1187, 1188, 1192, 1195, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1231, 1241, 1255, 1261, 1263, 1270, 1271, 1273, 1277, 1282, 1286, 1288, 1294, 1296, 1302, 1305, 1307, 1314, 1318, 1319, 1325, 1326, 1327, 1332, 1333, 1336, 1339, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1419, 1421, 1424, 1427, 1428, 1435, 1436, 1441, 1447, 1448, 1450, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1511, 1512, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1586, 1641, 1654, 1664, 1665, 1666, 1667, 1668, 1671, 1676, 1678, 1679, 1690, 1691, 1693, 1695, 1709, 1714, 1715, 1717, 1719, 1722, 1729, 1753, 1755, 1759, 1760, 1762, 1763, 1769, 1770, 1772, 1780, 1781, 1786, 1791, 1793, 1794, 1796, 1800, 1802, 1808, 1809, 1810, 1815, 1820, 1823, 1825, 1829, 1831, 1836, 1839, 1841, 1845, 1847, 1852, 1855, 1857, 1861, 1863, 1868, 1871, 1873, 1877, 1879, 1881, 1885, 1886, 1888, 1889, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1909, 1911, 1913, 1914, 1916, 1918, 1922, 1923, 1930, 1931, 1940, 1948, 1953, 1954, 1955, 1957, 1959, 1960, 1962, 1964, 1966, 1985, 1986, 1989, 1992, 1996, 1997, 2024, 2025, 2026, 2027, 2028, 2032, 2033, 2034, 2036, 2039, 2040, 2041, 2044, 2045, 2047, 2048, 2050, 2055, 2056, 2057, 2063, 2064, 2066, 2068, 2069, 2070, 2071, 2073, 2075, 2077, 2079, 2083, 2084, 2085, 2086, 2087, 2089, 2090, 2092, 2093, 2095, 2097, 2098, 2099, 2100, 2102, 2103, 2105, 2106, 2109, 2112, 2113, 2114, 2115, 2117, 2118, 2120, 2121, 2122, 2125, 2127, 2129, 2132, 2133, 2134, 2136, 2138, 2139, 2140, 2143, 2145, 2146, 2150, 2153, 2155, 2161, 2162, 2163, 2164, 2170, 2171, 2177, 2178, 2179, 2181, 2182, 2186, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2200, 2201, 2202, 2204, 2205, 2208, 2209, 2210, 2211, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2224, 2225, 2226, 2229, 2230, 2231, 2232, 2233, 2234, 2236, 2238, 2242, 2244, 2245, 2246, 2248, 2249, 2250, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2263, 2264, 2277, 2278, 2279, 2280, 2281, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2298, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2315, 2316, 2321, 2322, 2323, 2324, 2325, 2327, 2328, 2331, 2332, 2336, 2337, 2339, 2340, 2342, 2343, 2344, 2348, 2349, 2350, 2351, 2353, 2354, 2356, 2357, 2358, 2362, 2363, 2364, 2365, 2367, 2368, 2369, 2370, 2371, 2375, 2376, 2377, 2378, 2380, 2381, 2382, 2383, 2384, 2388, 2389, 2396, 2397, 2398, 2403, 2410, 2411, 2412, 2417, 2424, 2425, 2426, 2431, 2438, 2439, 2440, 2445, 2452, 2453, 2454, 2459, 2466, 2467, 2468, 2474, 2476, 2477, 2478, 2479, 2480, 2481, 2483, 2488, 2490, 2491, 2492, 2493, 2495, 2496, 2497, 2498, 2503, 2504, 2506, 2510, 2511, 2512, 2517, 2519, 2523, 2524, 2525, 2530, 2532, 2536, 2537, 2538, 2543, 2545, 2549, 2550, 2551, 2556, 2558, 2562, 2563, 2564, 2569, 2571, 2575, 2576, 2577, 2582, 2584, 2588, 2589, 2590, 2595, 2597, 2601, 2602, 2603, 2608, 2610, 2614, 2615, 2616, 2621, 2623, 2627, 2628, 2629, 2634, 2636, 2640, 2641, 2642, 2647, 2649, 2653, 2654, 2655, 2660, 2662, 2666, 2667, 2668, 2673, 2675, 2679, 2680, 2681, 2686, 2688, 2692, 2693, 2694, 2699, 2706, 2707, 2712, 2719, 2720, 2725, 2732, 2733, 2738, 2745, 2746, 2751, 2758, 2759, 2764, 2771, 2772, 2777, 2778, 2780, 2781, 2782, 2784, 2785, 2798, 2799, 2801, 2808, 2810, 2812, 2813, 2814, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2826, 2827, 2830, 2831, 2833, 2834, 2835, 2836, 2839, 2840, 2843, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2864, 2887, 2888, 2890, 2891, 2892, 2895, 2897, 2898, 2899, 2900, 2902, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2915, 2917, 2918, 2919, 2920, 2921, 2922, 2924, 2926, 2927, 2928, 2929, 2930, 2931, 2933, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2944, 2945, 2946, 2948, 2950, 2953, 2954, 2955, 2957, 2959, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2971, 2972, 2974, 2976, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2988, 2989, 2991, 2993, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3021, 3022, 3024, 3026, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3038, 3039, 3041, 3043, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3055, 3056, 3058, 3060, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3072, 3073, 3075, 3077, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3089, 3090, 3091, 3093, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3105, 3106, 3108, 3110, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3122, 3123, 3124, 3126, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3138, 3139, 3141, 3143, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3155, 3156, 3157, 3159, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3171, 3172, 3174, 3176, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3188, 3189, 3191, 3193, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3205, 3206, 3208, 3210, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3222, 3223, 3225, 3227, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3239, 3240, 3242, 3244, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3256, 3257, 3259, 3261, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3273, 3274, 3276, 3278, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3290, 3291, 3292, 3294, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3306, 3307, 3309, 3311, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3323, 3324, 3326, 3328, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3340, 3341, 3342, 3344, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3356, 3357, 3359, 3361, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3373, 3374, 3376, 3378, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3390, 3391, 3392, 3393, 3394, 3395, 3398, 3399, 3401, 3403, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3415, 3416, 3417, 3418, 3419, 3420, 3423, 3424, 3425, 3427, 3428, 3429, 3432, 3433, 3434, 3435, 3437, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3449, 3450, 3452, 3454, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3466, 3467, 3468, 3470, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3483, 3484, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3495, 3496, 3497, 3499, 3501, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3513, 3514, 3515, 3517, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3529, 3530, 3532, 3534, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3546, 3547, 3548, 3549, 3550, 3553, 3554, 3555, 3557, 3559, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3571, 3572, 3574, 3576, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3588, 3589, 3591, 3593, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3605, 3606, 3607, 3609, 3612, 3613, 3614, 3615, 3617, 3620, 3621, 3622, 3624, 3626, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3638, 3639, 3641, 3643, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3655, 3656, 3657, 3659, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3671, 3672, 3674, 3676, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3688, 3689, 3690, 3692, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3704, 3705, 3706, 3709, 3710, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3732, 3737, 3738, 3739, 3740, 3741, 3745, 3749, 3751, 3757, 3765, 3768, 3769, 3777, 3779, 3780, 3787, 3789, 3796, 3797, 3798, 3800, 3801, 3802, 3803, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3814, 3815, 3816, 3817, 3820, 3821, 3830, 3833, 3835, 3836, 3837, 3848, 3849, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3865, 3866, 3871, 3872, 3873, 3874, 3875, 3882, 3883, 3884, 3888, 3891, 3892, 3893, 3894, 3895, 3898, 3901, 3902, 3904, 3905, 3906, 3907, 3909, 3910, 3914, 3915, 3916, 3917, 3922, 3934, 3936, 3937, 3938, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3953, 3956, 3959, 3962, 3963, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3972, 3975, 3978, 3981, 3982, 3985, 3986, 3988, 3989, 3990, 3991, 3993, 3994, 3996, 3997, 3998, 4000, 4001, 4004, 4005, 4006, 4007, 4008, 4009, 4011, 4013, 4014, 4017, 4018, 4019, 4021, 4023, 4024, 4026, 4034, 4038, 4041, 4042, 4043, 4044, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4081, 4082, 4083, 4084, 4085, 4087, 4088, 4089, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4154, 4155, 4156, 4157, 4159, 4160, 4162, 4164, 4165, 4167, 4169, 4170, 4172, 4174, 4175, 4177, 4179, 4180, 4182, 4184, 4185, 4187, 4189, 4203, 4206, 4218, 4219, 4231, 4232, 4237, 4248, 4251, 4254, 4255, 4257, 4260, 4263, 4266, 4269, 4272, 4275, 4278, 4281, 4284, 4287, 4290, 4293, 4296, 4298, 4299, 4300, 4301, 4302, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4315, 4316, 4317, 4318, 4319, 4321, 4322, 4323, 4325, 4327, 4328, 4329, 4330, 4331, 4334, 4335, 4336, 4337, 4338, 4340, 4341, 4342, 4344, 4346, 4347, 4348, 4349, 4350, 4353, 4354, 4355, 4356, 4357, 4359, 4360, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4375, 4376, 4377, 4379, 4380, 4382, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4397, 4400, 4401, 4402, 4403, 4404, 4405, 4407, 4408, 4409, 4411, 4413, 4414, 4415, 4416, 4417, 4420, 4422, 4423, 4424, 4425, 4426, 4427, 4429, 4430, 4431, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4443, 4444, 4445, 4446, 4447, 4449, 4450, 4451, 4453, 4455, 4456, 4457, 4458, 4459, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4470, 4471, 4472, 4474, 4475, 4477, 4478, 4479, 4480, 4482, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4497, 4498, 4501, 4505, 4507, 4508, 4509, 4510, 4511, 4512, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4532, 4534, 4535, 4536, 4537, 4538, 4540, 4541, 4542, 4544, 4546, 4552, 4553, 4554, 4555, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4567, 4568, 4569, 4570, 4571, 4572, 4574, 4576, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4590, 4591, 4592, 4594, 4595, 4596, 4598, 4600, 4602, 4603, 4604, 4605, 4606, 4607, 4611, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4622, 4623, 4624, 4625, 4627, 4629, 4630, 4631, 4632, 4633, 4635, 4636, 4637, 4639, 4640, 4641, 4643, 4644, 4645, 4647, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4663, 4666, 4667, 4668, 4669, 4670, 4672, 4673, 4674, 4676, 4678, 4679, 4680, 4681, 4682, 4685, 4686, 4687, 4688, 4689, 4691, 4692, 4693, 4695, 4697, 4698, 4699, 4700, 4701, 4704, 4714, 4717, 4720, 4724, 4725, 4726, 4728, 4729, 4731, 4732, 4733, 4734, 4735, 4736, 4738, 4740, 4745, 4746, 4748, 4750, 4755, 4756, 4760, 4761, 4762, 4763, 4764, 4767, 4768, 4770, 4772, 4778, 4782, 4783, 4784, 4787, 4792, 4796, 4797, 4798, 4799, 4803, 4809, 4813, 4817, 4819, 4821, 4823, 4825, 4832, 4839, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4853, 4854, 4856, 4859, 4860, 4897, 4907, 4910, 4911, 4912, 4918, 4927, 4929, 4930, 4934, 4935, 4942, 4947, 4950, 4953, 4956, 4958, 4959, 4962, 4965, 4968, 4971, 4974, 4977, 4980, 4983, 4986, 4989, 4992, 4995, 4998, 5001, 5005, 5009, 5012, 5015, 5019, 5022, 5025, 5028, 5031, 5052, 5063, 5065, 5066, 5069, 5072, 5075, 5077, 5078, 5081, 5084, 5087, 5090, 5094, 5097, 5100, 5103, 5106, 5109, 5112, 5115, 5118, 5120, 5121, 5124, 5127, 5130, 5131, 5133, 5135, 5138, 5141, 5143, 5144, 5147, 5148, 5150, 5153, 5156, 5159, 5162, 5163, 5164, 5167, 5170, 5173, 5176, 5179, 5182, 5185, 5188, 5191, 5194, 5197, 5200, 5203, 5206, 5209, 5212, 5215, 5218, 5221, 5224, 5226, 5227, 5229, 5238, 5239, 5244, 5250, 5252, 5268, 5271, 5272, 5278, 5280, 5299, 5302, 5303, 5304, 5311, 5314, 5315, 5316, 5323, 5326, 5327, 5328, 5341, 5342, 5355], "expectation": [1, 30, 31, 64, 82, 83, 84, 88, 126, 127, 128, 131, 132, 134, 135, 147, 148, 149, 150, 151, 153, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 186, 303, 304, 324, 474, 475, 495, 633, 634, 654, 849, 852, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1210, 1211, 1231, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2001, 2008, 2019, 2162, 2168, 2265, 2271, 2282, 2291, 2392, 2406, 2417, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2556, 2559, 2569, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 2781, 2782, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4383, 4595, 4601, 4648, 4743, 4745, 4747, 4750, 4767, 4769, 4772, 5293, 5340, 5361, 5362], "value": [1, 3, 16, 31, 39, 44, 48, 53, 64, 66, 83, 86, 92, 97, 101, 104, 107, 110, 127, 128, 130, 132, 133, 135, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 157, 158, 164, 165, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 182, 185, 186, 188, 190, 198, 200, 202, 235, 240, 252, 303, 304, 324, 353, 356, 358, 361, 362, 363, 369, 371, 373, 406, 411, 423, 474, 475, 495, 528, 530, 532, 565, 570, 582, 633, 634, 654, 682, 683, 693, 709, 763, 765, 773, 798, 830, 832, 841, 849, 850, 852, 856, 861, 869, 877, 878, 883, 896, 904, 927, 947, 960, 970, 974, 990, 1010, 1024, 1040, 1054, 1065, 1067, 1071, 1072, 1087, 1088, 1100, 1102, 1107, 1109, 1111, 1143, 1147, 1159, 1210, 1211, 1231, 1267, 1281, 1296, 1300, 1323, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1378, 1392, 1398, 1400, 1412, 1415, 1419, 1421, 1424, 1432, 1441, 1444, 1467, 1469, 1475, 1476, 1480, 1508, 1556, 1558, 1563, 1567, 1641, 1644, 1719, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 1906, 1907, 1926, 1959, 1983, 1985, 1987, 1988, 1990, 1991, 1992, 1993, 1994, 1996, 1999, 2001, 2014, 2017, 2019, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2120, 2138, 2161, 2162, 2182, 2198, 2211, 2224, 2232, 2238, 2255, 2271, 2282, 2283, 2291, 2292, 2295, 2297, 2310, 2311, 2323, 2333, 2334, 2337, 2346, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2393, 2407, 2417, 2421, 2435, 2449, 2463, 2501, 2508, 2521, 2534, 2547, 2556, 2560, 2569, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 2781, 2782, 2801, 2808, 2824, 2825, 2837, 2838, 2848, 2850, 2851, 2852, 2853, 2854, 2894, 2916, 2925, 2932, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3011, 3012, 3019, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3388, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3722, 3723, 3727, 3730, 3731, 3734, 3738, 3739, 3741, 3742, 3757, 3769, 3779, 3781, 3789, 3792, 3795, 3796, 3812, 3814, 3833, 3837, 3838, 3849, 3862, 3863, 3882, 3883, 3884, 3896, 3897, 3901, 3922, 3930, 3932, 3942, 3945, 3976, 3982, 3993, 3995, 4008, 4010, 4026, 4032, 4084, 4112, 4157, 4182, 4193, 4197, 4206, 4231, 4232, 4255, 4261, 4264, 4273, 4279, 4282, 4383, 4394, 4395, 4396, 4421, 4430, 4463, 4476, 4481, 4506, 4533, 4568, 4595, 4601, 4608, 4609, 4610, 4628, 4645, 4648, 4660, 4661, 4662, 4722, 4730, 4743, 4747, 4749, 4750, 4751, 4754, 4755, 4761, 4762, 4763, 4769, 4771, 4772, 4773, 4777, 4778, 4782, 4783, 4784, 4787, 4791, 4792, 4797, 4798, 4799, 4803, 4812, 4813, 4830, 4847, 4848, 4873, 4875, 4891, 4906, 4907, 4910, 4911, 4912, 4922, 4923, 4930, 4938, 4946, 4952, 4958, 4964, 5024, 5033, 5143, 5146, 5181, 5193, 5202, 5214, 5217, 5220, 5226, 5230, 5235, 5237, 5243, 5244, 5245, 5249, 5250, 5259, 5262, 5277, 5278, 5280, 5281, 5290, 5291, 5293, 5298, 5299, 5302, 5303, 5304, 5310, 5311, 5314, 5315, 5316, 5322, 5323, 5326, 5327, 5328, 5331, 5332, 5333, 5334, 5338, 5339, 5340, 5341, 5362, 5366], "an": [1, 3, 4, 8, 10, 16, 20, 24, 28, 29, 30, 31, 33, 35, 39, 44, 48, 51, 53, 54, 57, 64, 66, 69, 70, 71, 73, 78, 81, 82, 86, 90, 92, 94, 97, 99, 103, 104, 105, 109, 110, 112, 115, 117, 118, 122, 125, 126, 127, 131, 133, 134, 135, 136, 138, 139, 140, 143, 145, 147, 148, 153, 155, 162, 163, 165, 166, 172, 173, 178, 179, 180, 181, 186, 188, 189, 191, 197, 198, 214, 216, 235, 239, 240, 251, 252, 253, 255, 256, 276, 290, 324, 328, 336, 342, 343, 344, 345, 347, 352, 368, 369, 385, 387, 406, 410, 411, 422, 423, 424, 426, 427, 447, 461, 495, 499, 507, 513, 514, 515, 516, 518, 527, 528, 544, 546, 565, 569, 570, 581, 582, 583, 585, 586, 606, 620, 654, 658, 666, 672, 673, 674, 675, 677, 682, 709, 752, 761, 773, 781, 789, 798, 806, 830, 849, 852, 877, 904, 918, 920, 923, 927, 929, 932, 936, 939, 943, 947, 949, 952, 956, 960, 962, 965, 970, 974, 981, 984, 990, 995, 1000, 1002, 1006, 1010, 1012, 1015, 1020, 1024, 1027, 1031, 1034, 1036, 1040, 1042, 1045, 1050, 1054, 1056, 1059, 1063, 1064, 1065, 1102, 1106, 1107, 1122, 1124, 1143, 1146, 1147, 1158, 1159, 1160, 1162, 1163, 1183, 1197, 1231, 1235, 1243, 1249, 1250, 1251, 1252, 1254, 1259, 1263, 1267, 1269, 1272, 1281, 1285, 1289, 1294, 1300, 1304, 1308, 1314, 1318, 1323, 1328, 1332, 1334, 1337, 1340, 1341, 1342, 1346, 1358, 1365, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1390, 1392, 1393, 1394, 1396, 1399, 1401, 1407, 1413, 1416, 1427, 1432, 1434, 1437, 1441, 1442, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1460, 1464, 1465, 1470, 1471, 1475, 1476, 1480, 1487, 1492, 1497, 1499, 1503, 1508, 1510, 1513, 1520, 1526, 1531, 1537, 1540, 1545, 1548, 1550, 1551, 1553, 1555, 1558, 1561, 1563, 1565, 1567, 1644, 1645, 1649, 1654, 1661, 1662, 1663, 1666, 1668, 1705, 1710, 1711, 1719, 1722, 1745, 1749, 1751, 1753, 1758, 1765, 1766, 1769, 1771, 1772, 1776, 1779, 1782, 1790, 1793, 1797, 1800, 1801, 1806, 1811, 1815, 1819, 1822, 1826, 1829, 1831, 1835, 1838, 1842, 1845, 1847, 1851, 1854, 1858, 1861, 1863, 1867, 1870, 1874, 1877, 1879, 1884, 1892, 1895, 1897, 1899, 1900, 1901, 1903, 1906, 1908, 1909, 1913, 1914, 1922, 1926, 1930, 1932, 1934, 1936, 1937, 1941, 1944, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1964, 1965, 1970, 1975, 1977, 1980, 1983, 1984, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 1997, 1998, 2000, 2001, 2003, 2005, 2007, 2008, 2010, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2024, 2026, 2027, 2028, 2032, 2033, 2034, 2035, 2036, 2039, 2040, 2042, 2047, 2048, 2049, 2051, 2052, 2056, 2061, 2062, 2064, 2066, 2068, 2070, 2071, 2072, 2073, 2075, 2079, 2082, 2085, 2086, 2087, 2089, 2093, 2094, 2098, 2099, 2100, 2102, 2106, 2108, 2113, 2114, 2115, 2117, 2123, 2127, 2128, 2132, 2133, 2134, 2135, 2136, 2138, 2141, 2145, 2146, 2149, 2154, 2158, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2168, 2169, 2171, 2176, 2178, 2179, 2180, 2181, 2182, 2189, 2196, 2197, 2198, 2202, 2208, 2209, 2210, 2211, 2215, 2221, 2222, 2224, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2245, 2246, 2251, 2253, 2254, 2255, 2259, 2265, 2269, 2277, 2282, 2285, 2291, 2310, 2311, 2323, 2337, 2349, 2363, 2376, 2393, 2399, 2407, 2413, 2417, 2421, 2427, 2435, 2441, 2449, 2455, 2463, 2469, 2487, 2499, 2508, 2513, 2521, 2526, 2530, 2534, 2539, 2547, 2552, 2556, 2560, 2565, 2569, 2573, 2578, 2582, 2586, 2591, 2599, 2604, 2612, 2617, 2621, 2625, 2630, 2634, 2638, 2643, 2647, 2651, 2656, 2660, 2664, 2669, 2673, 2677, 2682, 2686, 2690, 2695, 2699, 2703, 2705, 2708, 2716, 2718, 2721, 2725, 2729, 2731, 2734, 2738, 2742, 2744, 2747, 2751, 2755, 2757, 2760, 2764, 2768, 2770, 2773, 2798, 2801, 2802, 2803, 2805, 2806, 2807, 2808, 2813, 2814, 2816, 2823, 2830, 2835, 2842, 2865, 2875, 2879, 2880, 2887, 2889, 2915, 2924, 2933, 2969, 2986, 3003, 3005, 3011, 3013, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3382, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3704, 3705, 3707, 3709, 3713, 3714, 3718, 3719, 3722, 3723, 3725, 3727, 3730, 3734, 3736, 3737, 3739, 3741, 3748, 3757, 3760, 3763, 3764, 3768, 3772, 3774, 3775, 3777, 3779, 3782, 3784, 3785, 3786, 3789, 3790, 3792, 3793, 3794, 3796, 3798, 3799, 3801, 3804, 3805, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3832, 3838, 3840, 3847, 3850, 3852, 3854, 3857, 3860, 3862, 3865, 3871, 3872, 3874, 3875, 3888, 3896, 3901, 3905, 3909, 3926, 3932, 3951, 3957, 3963, 3976, 3983, 3991, 3993, 3999, 4001, 4006, 4008, 4012, 4013, 4014, 4026, 4030, 4031, 4041, 4094, 4148, 4157, 4158, 4162, 4163, 4168, 4173, 4178, 4182, 4183, 4187, 4188, 4206, 4231, 4232, 4234, 4241, 4244, 4245, 4249, 4252, 4258, 4264, 4270, 4282, 4294, 4297, 4298, 4299, 4301, 4304, 4309, 4314, 4316, 4318, 4321, 4330, 4332, 4335, 4337, 4340, 4349, 4351, 4354, 4356, 4359, 4368, 4374, 4376, 4380, 4381, 4383, 4384, 4385, 4386, 4402, 4404, 4407, 4416, 4418, 4421, 4424, 4426, 4429, 4430, 4432, 4433, 4438, 4439, 4444, 4446, 4449, 4458, 4460, 4463, 4467, 4471, 4472, 4480, 4487, 4499, 4512, 4519, 4538, 4549, 4552, 4554, 4557, 4563, 4566, 4568, 4571, 4574, 4575, 4578, 4587, 4589, 4614, 4626, 4633, 4640, 4644, 4645, 4648, 4649, 4650, 4651, 4669, 4672, 4681, 4683, 4686, 4688, 4691, 4700, 4702, 4705, 4708, 4709, 4712, 4743, 4746, 4747, 4750, 4751, 4760, 4766, 4768, 4769, 4772, 4773, 4786, 4787, 4801, 4803, 4805, 4807, 4808, 4811, 4812, 4813, 4818, 4820, 4822, 4824, 4826, 4831, 4839, 4841, 4856, 4873, 4874, 4875, 4878, 4882, 4892, 4894, 4896, 4914, 4915, 4917, 4922, 4923, 4924, 4925, 4928, 4929, 4930, 4937, 4938, 4939, 4940, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4975, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5017, 5018, 5020, 5021, 5024, 5027, 5030, 5033, 5044, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5082, 5083, 5085, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5235, 5236, 5237, 5239, 5241, 5242, 5244, 5248, 5250, 5262, 5263, 5268, 5272, 5277, 5280, 5281, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5306, 5318, 5330, 5331, 5333, 5334, 5336, 5352, 5353, 5356, 5357, 5359, 5362, 5364, 5366], "operator": [1, 8, 11, 39, 44, 48, 66, 81, 82, 84, 86, 93, 97, 99, 101, 103, 104, 110, 111, 113, 116, 117, 118, 123, 125, 126, 127, 128, 130, 131, 134, 135, 138, 143, 145, 147, 148, 149, 150, 151, 153, 162, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 178, 181, 183, 246, 274, 303, 304, 317, 320, 324, 354, 417, 445, 474, 475, 488, 491, 495, 576, 604, 633, 634, 647, 650, 654, 904, 1153, 1181, 1210, 1211, 1224, 1227, 1231, 1377, 1388, 1398, 1406, 1448, 1458, 1464, 1470, 1471, 1753, 1771, 1879, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1939, 1941, 1942, 1944, 1946, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1971, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2015, 2016, 2018, 2019, 2022, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2117, 2118, 2120, 2121, 2123, 2124, 2125, 2128, 2129, 2130, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2158, 2160, 2161, 2162, 2163, 2169, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2186, 2187, 2192, 2194, 2195, 2196, 2197, 2198, 2200, 2205, 2208, 2209, 2210, 2211, 2213, 2217, 2219, 2220, 2221, 2222, 2224, 2225, 2229, 2231, 2232, 2233, 2234, 2235, 2236, 2238, 2239, 2242, 2243, 2247, 2249, 2251, 2252, 2253, 2254, 2255, 2257, 2263, 2417, 2556, 2569, 2725, 2764, 2781, 2782, 2794, 2797, 2813, 2814, 2816, 2822, 2823, 2826, 2875, 2879, 2880, 2881, 2885, 2886, 2887, 3723, 3738, 3739, 3779, 3789, 4282, 4299, 4300, 4301, 4303, 4304, 4308, 4309, 4310, 4313, 4314, 4316, 4318, 4320, 4321, 4330, 4331, 4333, 4335, 4337, 4339, 4340, 4349, 4350, 4352, 4354, 4355, 4356, 4358, 4359, 4363, 4367, 4368, 4369, 4373, 4374, 4378, 4381, 4383, 4397, 4399, 4402, 4404, 4406, 4407, 4416, 4417, 4419, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4446, 4448, 4449, 4458, 4459, 4461, 4463, 4464, 4465, 4466, 4467, 4469, 4471, 4472, 4473, 4479, 4480, 4482, 4487, 4489, 4492, 4496, 4500, 4503, 4511, 4512, 4519, 4520, 4527, 4537, 4538, 4552, 4553, 4554, 4556, 4557, 4560, 4563, 4564, 4566, 4568, 4569, 4570, 4571, 4573, 4574, 4575, 4578, 4579, 4580, 4582, 4586, 4587, 4588, 4590, 4593, 4596, 4597, 4599, 4600, 4601, 4611, 4612, 4614, 4615, 4632, 4633, 4640, 4641, 4642, 4646, 4648, 4663, 4665, 4667, 4669, 4671, 4672, 4681, 4682, 4684, 4686, 4688, 4690, 4691, 4700, 4701, 4703, 4714, 4716, 4720, 4726, 4728, 4731, 4735, 4738, 4743, 4747, 4768, 4769, 4770, 4772, 4819, 4821, 4823, 4825, 5341, 5342, 5347, 5348, 5362, 5364, 5366, 5367, 5368], "or": [1, 4, 11, 16, 25, 28, 29, 30, 31, 35, 39, 44, 47, 48, 53, 54, 57, 60, 64, 66, 69, 70, 73, 74, 75, 79, 86, 92, 95, 97, 98, 101, 103, 104, 110, 113, 118, 120, 123, 130, 133, 136, 140, 142, 143, 146, 147, 156, 158, 163, 165, 172, 179, 180, 182, 186, 191, 193, 197, 198, 200, 201, 204, 205, 209, 210, 211, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 248, 251, 252, 253, 255, 256, 259, 260, 262, 264, 266, 267, 276, 277, 285, 299, 300, 302, 303, 304, 306, 307, 309, 321, 322, 323, 328, 343, 344, 345, 347, 353, 358, 362, 364, 368, 369, 371, 372, 375, 376, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 409, 411, 419, 422, 423, 424, 426, 427, 430, 431, 433, 435, 437, 438, 447, 448, 456, 470, 471, 473, 474, 475, 477, 478, 480, 492, 493, 494, 499, 514, 515, 516, 518, 523, 527, 528, 530, 531, 534, 535, 539, 540, 541, 543, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 568, 570, 578, 581, 582, 583, 585, 586, 589, 590, 592, 594, 596, 597, 606, 607, 615, 629, 630, 632, 633, 634, 636, 637, 639, 651, 652, 653, 658, 673, 674, 675, 677, 682, 691, 693, 699, 707, 715, 723, 732, 741, 750, 759, 765, 771, 773, 779, 787, 796, 804, 806, 812, 820, 828, 833, 839, 847, 849, 850, 856, 859, 867, 869, 875, 877, 878, 883, 886, 894, 902, 904, 910, 918, 920, 923, 927, 935, 936, 939, 943, 947, 955, 956, 960, 969, 970, 974, 975, 985, 990, 999, 1002, 1006, 1010, 1019, 1024, 1025, 1035, 1036, 1040, 1046, 1049, 1050, 1054, 1062, 1065, 1071, 1076, 1081, 1083, 1087, 1092, 1097, 1102, 1106, 1107, 1109, 1110, 1113, 1114, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1145, 1147, 1155, 1158, 1159, 1160, 1162, 1163, 1166, 1167, 1169, 1171, 1173, 1174, 1183, 1184, 1192, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1216, 1228, 1229, 1230, 1235, 1250, 1251, 1252, 1254, 1259, 1263, 1267, 1276, 1281, 1282, 1295, 1300, 1302, 1315, 1318, 1323, 1331, 1332, 1334, 1337, 1340, 1342, 1346, 1358, 1365, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1413, 1416, 1417, 1421, 1432, 1440, 1441, 1442, 1449, 1450, 1455, 1456, 1457, 1458, 1460, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1487, 1492, 1497, 1503, 1508, 1516, 1520, 1531, 1537, 1540, 1545, 1548, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1641, 1642, 1644, 1648, 1667, 1674, 1700, 1701, 1706, 1714, 1753, 1758, 1760, 1771, 1772, 1776, 1785, 1790, 1791, 1802, 1806, 1814, 1819, 1820, 1830, 1835, 1836, 1846, 1851, 1852, 1862, 1867, 1868, 1878, 1879, 1884, 1886, 1899, 1901, 1905, 1906, 1908, 1912, 1913, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1939, 1948, 1949, 1954, 1956, 1958, 1959, 1963, 1964, 1968, 1969, 1970, 1973, 1975, 1977, 1980, 1983, 1985, 1990, 1991, 1996, 1998, 1999, 2003, 2007, 2008, 2010, 2013, 2014, 2015, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2028, 2030, 2032, 2033, 2035, 2038, 2039, 2042, 2046, 2047, 2053, 2055, 2056, 2059, 2063, 2064, 2065, 2066, 2069, 2070, 2072, 2074, 2075, 2078, 2079, 2085, 2088, 2089, 2093, 2098, 2101, 2102, 2106, 2113, 2116, 2117, 2121, 2123, 2127, 2133, 2135, 2137, 2138, 2141, 2144, 2145, 2154, 2159, 2161, 2163, 2165, 2166, 2167, 2168, 2169, 2171, 2177, 2178, 2180, 2182, 2187, 2189, 2195, 2196, 2198, 2202, 2209, 2211, 2215, 2218, 2221, 2223, 2224, 2232, 2233, 2235, 2237, 2238, 2239, 2243, 2245, 2252, 2253, 2255, 2259, 2265, 2269, 2277, 2282, 2285, 2287, 2290, 2291, 2302, 2308, 2311, 2316, 2322, 2323, 2328, 2331, 2333, 2337, 2340, 2343, 2345, 2349, 2354, 2357, 2359, 2363, 2368, 2370, 2372, 2376, 2381, 2383, 2385, 2389, 2393, 2402, 2407, 2416, 2421, 2430, 2435, 2444, 2449, 2458, 2463, 2472, 2473, 2479, 2486, 2487, 2493, 2496, 2500, 2501, 2508, 2516, 2521, 2529, 2534, 2542, 2543, 2547, 2555, 2556, 2560, 2568, 2569, 2573, 2581, 2586, 2594, 2599, 2607, 2612, 2620, 2625, 2633, 2634, 2638, 2646, 2651, 2659, 2664, 2672, 2677, 2685, 2690, 2698, 2703, 2711, 2716, 2724, 2725, 2729, 2737, 2742, 2750, 2755, 2763, 2768, 2776, 2777, 2778, 2780, 2781, 2782, 2784, 2785, 2787, 2798, 2801, 2802, 2804, 2805, 2806, 2807, 2808, 2813, 2814, 2816, 2822, 2823, 2831, 2833, 2842, 2848, 2852, 2854, 2857, 2862, 2863, 2864, 2865, 2879, 2880, 2885, 2886, 2887, 2888, 2889, 2899, 2905, 2908, 2965, 2968, 2969, 2982, 2985, 2986, 2999, 3002, 3003, 3007, 3010, 3011, 3015, 3018, 3019, 3032, 3035, 3036, 3049, 3052, 3053, 3066, 3069, 3070, 3083, 3086, 3087, 3099, 3102, 3103, 3116, 3119, 3120, 3132, 3135, 3136, 3149, 3152, 3153, 3165, 3168, 3169, 3182, 3185, 3186, 3199, 3202, 3203, 3216, 3219, 3220, 3233, 3236, 3237, 3250, 3253, 3254, 3267, 3270, 3271, 3284, 3287, 3288, 3300, 3303, 3304, 3317, 3320, 3321, 3334, 3337, 3338, 3350, 3353, 3354, 3367, 3370, 3371, 3384, 3387, 3388, 3392, 3395, 3396, 3409, 3412, 3413, 3443, 3446, 3447, 3460, 3463, 3464, 3476, 3479, 3480, 3484, 3487, 3507, 3510, 3511, 3523, 3526, 3527, 3540, 3543, 3544, 3565, 3568, 3569, 3582, 3585, 3586, 3599, 3602, 3603, 3632, 3635, 3636, 3649, 3652, 3653, 3665, 3668, 3669, 3682, 3685, 3686, 3698, 3701, 3702, 3704, 3705, 3706, 3718, 3721, 3723, 3725, 3730, 3736, 3737, 3738, 3739, 3748, 3749, 3752, 3754, 3757, 3760, 3761, 3762, 3763, 3764, 3779, 3783, 3789, 3794, 3796, 3801, 3804, 3806, 3808, 3809, 3810, 3811, 3812, 3814, 3816, 3821, 3822, 3823, 3824, 3833, 3834, 3838, 3845, 3847, 3848, 3849, 3850, 3854, 3855, 3862, 3864, 3876, 3887, 3888, 3896, 3899, 3901, 3905, 3906, 3909, 3913, 3918, 3919, 3921, 3922, 3930, 3932, 3935, 3942, 3957, 3963, 3965, 3969, 3970, 3973, 3976, 3985, 3990, 3991, 3993, 3995, 3999, 4001, 4008, 4010, 4012, 4014, 4020, 4025, 4030, 4031, 4032, 4034, 4076, 4081, 4085, 4091, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4178, 4182, 4183, 4187, 4188, 4195, 4219, 4225, 4227, 4229, 4231, 4241, 4242, 4264, 4273, 4282, 4297, 4298, 4299, 4301, 4304, 4308, 4309, 4316, 4318, 4321, 4329, 4330, 4332, 4335, 4337, 4340, 4348, 4349, 4351, 4354, 4356, 4359, 4361, 4367, 4368, 4376, 4380, 4381, 4383, 4384, 4385, 4386, 4388, 4389, 4390, 4392, 4394, 4395, 4398, 4402, 4404, 4407, 4415, 4416, 4418, 4421, 4424, 4426, 4429, 4433, 4438, 4444, 4446, 4449, 4457, 4458, 4460, 4463, 4466, 4467, 4470, 4471, 4473, 4476, 4479, 4480, 4485, 4487, 4490, 4491, 4493, 4494, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4511, 4512, 4513, 4514, 4515, 4516, 4519, 4521, 4523, 4524, 4525, 4528, 4529, 4531, 4537, 4538, 4541, 4542, 4552, 4554, 4557, 4563, 4568, 4570, 4571, 4574, 4580, 4586, 4587, 4591, 4592, 4595, 4599, 4601, 4603, 4604, 4605, 4607, 4608, 4609, 4614, 4616, 4618, 4619, 4620, 4623, 4624, 4626, 4632, 4633, 4636, 4637, 4640, 4644, 4648, 4649, 4650, 4651, 4652, 4654, 4655, 4656, 4658, 4660, 4661, 4664, 4667, 4669, 4672, 4680, 4681, 4683, 4686, 4688, 4691, 4699, 4700, 4702, 4705, 4707, 4708, 4712, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4740, 4743, 4747, 4751, 4760, 4767, 4769, 4773, 4787, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4815, 4819, 4821, 4823, 4825, 4830, 4839, 4842, 4844, 4847, 4848, 4849, 4873, 4875, 4886, 4893, 4896, 4899, 4917, 4920, 4922, 4923, 4927, 4930, 4939, 4958, 4963, 4964, 4966, 4967, 4970, 4972, 4987, 4990, 4991, 4993, 5014, 5021, 5023, 5033, 5044, 5068, 5085, 5091, 5096, 5105, 5119, 5152, 5154, 5158, 5160, 5169, 5178, 5180, 5192, 5193, 5195, 5202, 5205, 5210, 5211, 5213, 5214, 5217, 5226, 5230, 5239, 5244, 5250, 5253, 5254, 5257, 5262, 5263, 5269, 5273, 5276, 5277, 5278, 5280, 5281, 5283, 5284, 5285, 5286, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "probability": [1, 54, 64, 75, 92, 95, 97, 101, 103, 110, 136, 140, 143, 185, 188, 190, 300, 325, 356, 363, 471, 496, 630, 655, 1207, 1232, 1380, 1926, 1974, 2161, 2165, 2166, 2167, 2168, 2170, 2183, 2188, 2201, 2214, 2218, 2226, 2232, 2244, 2258, 2323, 2349, 2431, 2517, 2778, 2813, 2817, 2830, 2856, 2857, 2860, 2883, 2885, 4389, 4390, 4604, 4605, 4655, 4656, 4739, 4746, 4768, 4773, 4796, 4964, 5290, 5294, 5369], "measurement": [1, 3, 16, 25, 28, 31, 35, 45, 48, 62, 64, 66, 72, 75, 86, 93, 99, 101, 111, 116, 121, 137, 147, 150, 157, 165, 168, 172, 175, 186, 265, 266, 267, 306, 307, 436, 437, 438, 477, 478, 595, 596, 597, 636, 637, 877, 1172, 1173, 1174, 1213, 1214, 1428, 1641, 1722, 1899, 1900, 1934, 1941, 1954, 1955, 1983, 1987, 1990, 2024, 2026, 2033, 2034, 2056, 2070, 2071, 2085, 2086, 2098, 2099, 2113, 2114, 2133, 2134, 2161, 2162, 2163, 2165, 2166, 2167, 2168, 2177, 2178, 2179, 2181, 2195, 2196, 2197, 2208, 2209, 2210, 2216, 2220, 2221, 2222, 2232, 2233, 2234, 2236, 2252, 2253, 2254, 2285, 2286, 2287, 2288, 2289, 2323, 2337, 2349, 2595, 2608, 2784, 2785, 2830, 2964, 2965, 2966, 2967, 2981, 2982, 2983, 2984, 2998, 2999, 3000, 3001, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3031, 3032, 3033, 3034, 3048, 3049, 3050, 3051, 3065, 3066, 3067, 3068, 3082, 3083, 3084, 3085, 3098, 3099, 3100, 3101, 3115, 3116, 3117, 3118, 3131, 3132, 3133, 3134, 3148, 3149, 3150, 3151, 3164, 3165, 3166, 3167, 3181, 3182, 3183, 3184, 3198, 3199, 3200, 3201, 3215, 3216, 3217, 3218, 3232, 3233, 3234, 3235, 3249, 3250, 3251, 3252, 3266, 3267, 3268, 3269, 3283, 3284, 3285, 3286, 3299, 3300, 3301, 3302, 3316, 3317, 3318, 3319, 3333, 3334, 3335, 3336, 3349, 3350, 3351, 3352, 3366, 3367, 3368, 3369, 3382, 3383, 3384, 3385, 3386, 3391, 3392, 3393, 3394, 3408, 3409, 3410, 3411, 3442, 3443, 3444, 3445, 3459, 3460, 3461, 3462, 3475, 3476, 3477, 3478, 3506, 3507, 3508, 3509, 3522, 3523, 3524, 3525, 3539, 3540, 3541, 3542, 3564, 3565, 3566, 3567, 3581, 3582, 3583, 3584, 3598, 3599, 3600, 3601, 3631, 3632, 3633, 3634, 3648, 3649, 3650, 3651, 3664, 3665, 3666, 3667, 3681, 3682, 3683, 3684, 3697, 3698, 3699, 3700, 3708, 3730, 3932, 3963, 3964, 3971, 3973, 3976, 4020, 4041, 4042, 4067, 4218, 4219, 4255, 4264, 4273, 4282, 4294, 4388, 4389, 4390, 4394, 4395, 4595, 4603, 4604, 4605, 4607, 4608, 4609, 4654, 4655, 4656, 4658, 4660, 4661, 4748, 4750, 4768, 4770, 4772, 4813, 4958, 4960, 5021, 5166, 5190, 5250, 5268, 5269, 5272, 5273, 5339, 5342, 5345, 5347, 5348, 5361, 5366, 5372], "outcomes": [1, 48, 64, 120, 1987, 2165, 2323, 2349, 4394, 4395, 4608, 4609, 4660, 4661], "this": [2, 3, 4, 6, 7, 8, 10, 11, 16, 20, 25, 28, 29, 31, 35, 39, 44, 47, 48, 51, 53, 54, 57, 64, 66, 69, 74, 81, 86, 88, 92, 97, 99, 103, 104, 105, 110, 116, 117, 118, 120, 125, 130, 133, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 151, 158, 165, 169, 172, 176, 180, 186, 193, 197, 201, 204, 205, 207, 209, 211, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 240, 241, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 262, 263, 264, 268, 271, 273, 274, 275, 276, 277, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 303, 304, 308, 310, 311, 312, 313, 314, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 349, 350, 351, 362, 364, 368, 372, 375, 376, 378, 380, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 411, 412, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 433, 434, 435, 439, 442, 444, 445, 446, 447, 448, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 479, 481, 482, 483, 484, 485, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 518, 520, 521, 522, 523, 527, 531, 534, 535, 537, 539, 541, 543, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 568, 570, 571, 575, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 592, 593, 594, 598, 601, 603, 604, 605, 606, 607, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 631, 633, 634, 638, 640, 641, 642, 643, 644, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 677, 679, 680, 681, 683, 687, 693, 696, 704, 709, 712, 717, 720, 729, 738, 747, 756, 761, 766, 773, 776, 784, 789, 793, 798, 801, 809, 814, 817, 825, 836, 841, 844, 849, 852, 855, 864, 869, 872, 877, 882, 891, 896, 899, 904, 907, 912, 913, 918, 921, 922, 927, 929, 931, 933, 936, 940, 941, 947, 949, 951, 953, 956, 960, 962, 964, 967, 970, 973, 974, 975, 977, 980, 982, 984, 986, 990, 994, 996, 998, 1000, 1002, 1010, 1012, 1014, 1017, 1023, 1024, 1025, 1027, 1030, 1032, 1034, 1036, 1040, 1042, 1044, 1047, 1054, 1056, 1058, 1060, 1063, 1065, 1067, 1071, 1081, 1087, 1097, 1101, 1102, 1106, 1110, 1113, 1114, 1116, 1118, 1120, 1121, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1147, 1148, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1178, 1180, 1181, 1182, 1183, 1184, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1210, 1211, 1215, 1217, 1218, 1219, 1220, 1221, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1260, 1261, 1267, 1269, 1271, 1274, 1280, 1281, 1282, 1285, 1288, 1290, 1291, 1294, 1299, 1300, 1302, 1304, 1307, 1309, 1310, 1314, 1318, 1323, 1327, 1329, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1406, 1407, 1410, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1426, 1427, 1432, 1434, 1436, 1438, 1441, 1443, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1482, 1484, 1487, 1489, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1508, 1510, 1512, 1514, 1517, 1520, 1524, 1526, 1527, 1530, 1531, 1533, 1535, 1537, 1539, 1540, 1545, 1548, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1586, 1640, 1641, 1644, 1648, 1649, 1667, 1673, 1674, 1675, 1676, 1678, 1682, 1706, 1708, 1711, 1717, 1732, 1749, 1753, 1757, 1758, 1760, 1767, 1769, 1772, 1776, 1779, 1781, 1783, 1789, 1790, 1791, 1796, 1798, 1800, 1806, 1810, 1812, 1818, 1819, 1820, 1822, 1825, 1827, 1829, 1834, 1835, 1836, 1838, 1841, 1843, 1845, 1850, 1851, 1852, 1854, 1857, 1859, 1861, 1866, 1867, 1868, 1870, 1873, 1875, 1877, 1883, 1884, 1891, 1893, 1895, 1898, 1900, 1901, 1905, 1906, 1911, 1915, 1916, 1917, 1918, 1922, 1923, 1926, 1929, 1932, 1934, 1935, 1943, 1955, 1956, 1958, 1959, 1960, 1962, 1965, 1966, 1967, 1969, 1983, 1985, 1987, 1990, 1996, 2002, 2004, 2006, 2008, 2024, 2025, 2026, 2028, 2032, 2034, 2035, 2038, 2039, 2041, 2045, 2050, 2055, 2056, 2058, 2060, 2063, 2064, 2071, 2072, 2074, 2075, 2077, 2080, 2081, 2082, 2083, 2086, 2088, 2089, 2090, 2092, 2094, 2095, 2096, 2099, 2101, 2102, 2103, 2105, 2107, 2108, 2109, 2110, 2114, 2116, 2117, 2118, 2121, 2122, 2125, 2128, 2129, 2130, 2132, 2134, 2135, 2137, 2138, 2140, 2143, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2156, 2161, 2162, 2166, 2167, 2168, 2179, 2180, 2182, 2186, 2191, 2192, 2194, 2197, 2198, 2200, 2203, 2205, 2207, 2210, 2211, 2213, 2216, 2217, 2218, 2219, 2220, 2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230, 2231, 2232, 2234, 2235, 2237, 2238, 2241, 2242, 2247, 2249, 2250, 2254, 2255, 2257, 2260, 2263, 2264, 2271, 2274, 2275, 2277, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2297, 2298, 2308, 2309, 2311, 2313, 2318, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2389, 2393, 2398, 2400, 2403, 2407, 2412, 2414, 2417, 2421, 2426, 2428, 2431, 2435, 2440, 2442, 2445, 2449, 2454, 2456, 2459, 2463, 2468, 2470, 2473, 2474, 2478, 2481, 2486, 2487, 2488, 2489, 2492, 2494, 2496, 2498, 2499, 2500, 2501, 2502, 2503, 2508, 2512, 2514, 2521, 2525, 2527, 2530, 2534, 2538, 2540, 2547, 2551, 2553, 2556, 2560, 2564, 2566, 2569, 2573, 2577, 2579, 2582, 2586, 2590, 2592, 2599, 2603, 2605, 2612, 2616, 2618, 2621, 2625, 2629, 2631, 2634, 2638, 2642, 2644, 2647, 2651, 2655, 2657, 2660, 2664, 2668, 2670, 2673, 2677, 2681, 2683, 2686, 2690, 2694, 2696, 2699, 2703, 2705, 2707, 2709, 2712, 2716, 2718, 2720, 2722, 2725, 2729, 2731, 2733, 2735, 2738, 2742, 2744, 2746, 2748, 2751, 2755, 2757, 2759, 2761, 2764, 2768, 2770, 2772, 2774, 2779, 2781, 2782, 2786, 2788, 2789, 2790, 2791, 2798, 2801, 2804, 2808, 2813, 2814, 2819, 2831, 2842, 2847, 2848, 2862, 2867, 2869, 2870, 2871, 2872, 2875, 2883, 2884, 2885, 2888, 2889, 2890, 2891, 2892, 2894, 2895, 2905, 2909, 2914, 2915, 2916, 2918, 2923, 2924, 2925, 2927, 2932, 2933, 2934, 2943, 2952, 2961, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2978, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2995, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3028, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3045, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3062, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3079, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3095, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3128, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3145, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3161, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3178, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3195, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3212, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3229, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3246, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3263, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3280, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3296, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3313, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3330, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3346, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3363, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3380, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3405, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3422, 3431, 3439, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3456, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3472, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3485, 3494, 3503, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3519, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3536, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3552, 3561, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3578, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3595, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3611, 3619, 3628, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3645, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3661, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3678, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3694, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3707, 3708, 3710, 3711, 3718, 3719, 3722, 3723, 3725, 3727, 3729, 3730, 3731, 3736, 3737, 3738, 3739, 3748, 3757, 3766, 3777, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3789, 3791, 3792, 3793, 3796, 3797, 3798, 3801, 3805, 3808, 3809, 3810, 3811, 3813, 3814, 3816, 3818, 3819, 3820, 3822, 3823, 3824, 3832, 3833, 3835, 3836, 3837, 3838, 3848, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3862, 3863, 3865, 3866, 3867, 3868, 3869, 3871, 3872, 3873, 3874, 3875, 3877, 3881, 3889, 3890, 3891, 3897, 3899, 3901, 3904, 3905, 3906, 3909, 3910, 3917, 3920, 3922, 3923, 3925, 3926, 3932, 3935, 3957, 3963, 3965, 3966, 3976, 3982, 3983, 3985, 3991, 3993, 3994, 3995, 3999, 4000, 4001, 4002, 4004, 4006, 4007, 4008, 4009, 4010, 4012, 4013, 4014, 4015, 4019, 4025, 4026, 4027, 4028, 4029, 4030, 4032, 4033, 4040, 4041, 4042, 4048, 4056, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4077, 4080, 4081, 4084, 4085, 4086, 4087, 4090, 4091, 4094, 4095, 4096, 4099, 4100, 4103, 4104, 4105, 4108, 4109, 4112, 4113, 4114, 4117, 4118, 4121, 4122, 4123, 4126, 4127, 4130, 4131, 4132, 4135, 4136, 4139, 4140, 4141, 4144, 4145, 4148, 4149, 4150, 4153, 4154, 4157, 4158, 4159, 4162, 4163, 4164, 4167, 4168, 4169, 4172, 4173, 4174, 4177, 4178, 4182, 4183, 4184, 4187, 4188, 4192, 4193, 4197, 4201, 4203, 4205, 4206, 4208, 4211, 4214, 4217, 4218, 4219, 4220, 4221, 4225, 4229, 4230, 4231, 4241, 4244, 4245, 4254, 4255, 4258, 4264, 4272, 4273, 4276, 4282, 4287, 4297, 4298, 4299, 4301, 4317, 4318, 4319, 4334, 4336, 4337, 4338, 4353, 4354, 4356, 4370, 4388, 4390, 4392, 4393, 4394, 4395, 4398, 4403, 4404, 4405, 4420, 4424, 4426, 4432, 4439, 4445, 4446, 4447, 4462, 4463, 4467, 4473, 4487, 4500, 4508, 4509, 4519, 4525, 4529, 4530, 4534, 4535, 4540, 4552, 4554, 4568, 4570, 4571, 4578, 4583, 4584, 4589, 4603, 4605, 4607, 4608, 4609, 4614, 4617, 4620, 4624, 4625, 4629, 4630, 4634, 4635, 4640, 4645, 4654, 4656, 4658, 4659, 4660, 4661, 4664, 4667, 4668, 4669, 4670, 4685, 4687, 4688, 4689, 4704, 4705, 4708, 4709, 4712, 4716, 4717, 4722, 4724, 4726, 4735, 4740, 4743, 4745, 4747, 4765, 4767, 4769, 4785, 4800, 4803, 4810, 4812, 4813, 4817, 4819, 4821, 4823, 4825, 4829, 4830, 4831, 4833, 4837, 4842, 4844, 4847, 4848, 4849, 4859, 4864, 4868, 4871, 4876, 4878, 4892, 4896, 4902, 4913, 4915, 4917, 4922, 4923, 4924, 4927, 4928, 4929, 4930, 4938, 4939, 4941, 4943, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5042, 5054, 5055, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5142, 5143, 5145, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5228, 5230, 5231, 5232, 5233, 5234, 5235, 5237, 5238, 5239, 5240, 5241, 5244, 5245, 5246, 5247, 5250, 5259, 5262, 5263, 5268, 5272, 5274, 5275, 5278, 5280, 5281, 5282, 5283, 5290, 5291, 5292, 5305, 5317, 5329, 5331, 5332, 5333, 5334, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "contains": [2, 3, 4, 6, 7, 8, 25, 30, 31, 33, 39, 64, 66, 86, 88, 180, 198, 200, 210, 211, 214, 235, 238, 239, 369, 371, 381, 382, 385, 406, 409, 410, 528, 530, 540, 541, 544, 565, 568, 569, 682, 1003, 1004, 1072, 1088, 1096, 1107, 1109, 1119, 1120, 1122, 1143, 1145, 1146, 1373, 1401, 1450, 1464, 1466, 1468, 1642, 1643, 1682, 1772, 1901, 1924, 1934, 1948, 1956, 1983, 1985, 1986, 1991, 1996, 1999, 2003, 2005, 2007, 2011, 2012, 2016, 2019, 2035, 2072, 2135, 2154, 2158, 2168, 2180, 2235, 2862, 3482, 3485, 3718, 3720, 3779, 3789, 3811, 3814, 3821, 3862, 3870, 3922, 3963, 4159, 4164, 4169, 4174, 4179, 4182, 4184, 4229, 4246, 4267, 4298, 4361, 4363, 4384, 4386, 4433, 4503, 4504, 4523, 4531, 4580, 4618, 4626, 4649, 4651, 4756, 4757, 4830, 4922, 4930, 4938, 4973, 5016, 5017, 5024, 5205, 5223, 5226, 5228, 5281, 5331, 5332, 5333, 5334], "functions": [2, 12, 20, 35, 39, 47, 48, 53, 64, 180, 186, 683, 734, 869, 1372, 1376, 1379, 1380, 1399, 1406, 1465, 1719, 1898, 1934, 1944, 1987, 2024, 2032, 2068, 2177, 2195, 2208, 2220, 2232, 2252, 2813, 3705, 3737, 4182, 4815, 4816, 5000, 5111, 5114, 5178, 5331, 5333, 5334, 5368], "manage": [2, 64, 103, 4008], "following": [2, 3, 4, 10, 12, 28, 30, 39, 44, 48, 64, 172, 180, 682, 773, 912, 1397, 1441, 1464, 1722, 2018, 2021, 2023, 2277, 2308, 2323, 2349, 2363, 2376, 2486, 2500, 2808, 2845, 2858, 2859, 2875, 2905, 2909, 2918, 2927, 3730, 3767, 3823, 3824, 3868, 3888, 3891, 3901, 3999, 4008, 4012, 4094, 4139, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4206, 4299, 4354, 4398, 4421, 4579, 4614, 4664, 4958, 4976, 5021, 5023, 5093, 5143, 5196, 5214, 5217, 5230, 5250, 5284, 5331, 5333, 5334, 5352, 5369], "are": [2, 3, 4, 8, 10, 11, 16, 24, 25, 28, 29, 30, 31, 32, 33, 35, 39, 44, 48, 51, 53, 54, 57, 62, 64, 73, 74, 82, 84, 89, 90, 92, 97, 99, 103, 104, 105, 107, 119, 120, 126, 128, 130, 131, 134, 136, 142, 143, 144, 145, 146, 147, 148, 163, 165, 166, 172, 173, 179, 180, 198, 201, 210, 211, 213, 234, 235, 238, 240, 252, 253, 255, 256, 262, 264, 267, 270, 276, 280, 281, 285, 328, 342, 343, 344, 345, 347, 369, 372, 381, 382, 384, 405, 406, 409, 411, 423, 424, 426, 427, 433, 435, 438, 441, 447, 451, 452, 456, 499, 513, 514, 515, 516, 518, 528, 531, 540, 541, 543, 564, 565, 568, 570, 582, 583, 585, 586, 592, 594, 597, 600, 606, 610, 611, 615, 658, 672, 673, 674, 675, 677, 682, 689, 693, 709, 769, 781, 789, 798, 806, 822, 833, 849, 850, 861, 877, 878, 904, 912, 917, 920, 934, 939, 954, 968, 970, 973, 983, 997, 1002, 1018, 1023, 1033, 1048, 1061, 1063, 1065, 1081, 1097, 1101, 1107, 1110, 1119, 1120, 1121, 1142, 1143, 1145, 1147, 1159, 1160, 1162, 1163, 1169, 1171, 1174, 1177, 1183, 1187, 1188, 1192, 1235, 1249, 1250, 1251, 1252, 1254, 1259, 1275, 1280, 1292, 1299, 1312, 1318, 1330, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1372, 1374, 1376, 1377, 1379, 1380, 1387, 1388, 1393, 1396, 1401, 1406, 1407, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1450, 1456, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1499, 1503, 1515, 1527, 1537, 1538, 1550, 1551, 1556, 1558, 1563, 1567, 1641, 1642, 1643, 1644, 1654, 1666, 1667, 1674, 1682, 1689, 1696, 1697, 1721, 1722, 1746, 1748, 1750, 1752, 1757, 1768, 1784, 1789, 1799, 1813, 1815, 1818, 1828, 1834, 1844, 1850, 1860, 1866, 1876, 1883, 1894, 1898, 1901, 1905, 1906, 1922, 1926, 1928, 1929, 1934, 1935, 1937, 1939, 1943, 1945, 1948, 1949, 1956, 1958, 1959, 1970, 1983, 1987, 1990, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2015, 2016, 2019, 2020, 2022, 2024, 2025, 2028, 2032, 2035, 2038, 2039, 2055, 2058, 2060, 2063, 2064, 2068, 2072, 2074, 2075, 2088, 2089, 2101, 2102, 2116, 2117, 2126, 2132, 2135, 2137, 2138, 2154, 2161, 2165, 2177, 2180, 2182, 2195, 2198, 2208, 2211, 2223, 2224, 2232, 2235, 2237, 2238, 2252, 2255, 2272, 2277, 2285, 2290, 2308, 2309, 2323, 2337, 2349, 2363, 2376, 2401, 2415, 2429, 2443, 2457, 2471, 2486, 2494, 2498, 2500, 2501, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2798, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2813, 2814, 2822, 2830, 2842, 2847, 2848, 2851, 2854, 2855, 2856, 2858, 2860, 2861, 2863, 2865, 2867, 2875, 2883, 2886, 2887, 2889, 2905, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2968, 2971, 2980, 2985, 2988, 2997, 3002, 3005, 3010, 3013, 3018, 3021, 3030, 3035, 3038, 3047, 3052, 3055, 3064, 3069, 3072, 3081, 3086, 3089, 3097, 3102, 3105, 3114, 3119, 3122, 3130, 3135, 3138, 3147, 3152, 3155, 3163, 3168, 3171, 3180, 3185, 3188, 3197, 3202, 3205, 3214, 3219, 3222, 3231, 3236, 3239, 3248, 3253, 3256, 3265, 3270, 3273, 3282, 3287, 3290, 3298, 3303, 3306, 3315, 3320, 3323, 3332, 3337, 3340, 3348, 3353, 3356, 3365, 3370, 3373, 3382, 3387, 3390, 3395, 3398, 3407, 3412, 3415, 3424, 3433, 3441, 3446, 3449, 3458, 3463, 3466, 3474, 3479, 3488, 3496, 3505, 3510, 3513, 3521, 3526, 3529, 3538, 3543, 3546, 3554, 3563, 3568, 3571, 3580, 3585, 3588, 3597, 3602, 3605, 3613, 3621, 3630, 3635, 3638, 3647, 3652, 3655, 3663, 3668, 3671, 3680, 3685, 3688, 3696, 3701, 3704, 3708, 3715, 3717, 3718, 3719, 3723, 3725, 3727, 3728, 3730, 3736, 3737, 3738, 3739, 3746, 3748, 3750, 3752, 3753, 3757, 3760, 3766, 3769, 3771, 3772, 3777, 3779, 3781, 3782, 3783, 3787, 3789, 3791, 3792, 3793, 3796, 3798, 3809, 3814, 3821, 3823, 3824, 3833, 3834, 3837, 3855, 3862, 3863, 3868, 3871, 3880, 3885, 3888, 3891, 3901, 3905, 3909, 3915, 3920, 3931, 3932, 3935, 3957, 3963, 3966, 3969, 3973, 3976, 3982, 3983, 3985, 3990, 3993, 3999, 4001, 4008, 4012, 4013, 4014, 4018, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4045, 4061, 4063, 4073, 4075, 4103, 4112, 4148, 4158, 4159, 4161, 4163, 4164, 4166, 4168, 4169, 4171, 4172, 4173, 4174, 4176, 4178, 4181, 4182, 4183, 4184, 4186, 4188, 4192, 4193, 4195, 4197, 4203, 4204, 4206, 4207, 4209, 4210, 4212, 4213, 4215, 4216, 4218, 4220, 4224, 4229, 4232, 4244, 4245, 4254, 4272, 4273, 4287, 4299, 4301, 4308, 4316, 4318, 4329, 4335, 4337, 4348, 4354, 4356, 4363, 4367, 4376, 4380, 4385, 4389, 4390, 4392, 4398, 4402, 4404, 4415, 4421, 4424, 4426, 4430, 4437, 4444, 4446, 4457, 4463, 4467, 4472, 4476, 4479, 4487, 4491, 4511, 4513, 4519, 4522, 4537, 4539, 4554, 4568, 4571, 4575, 4578, 4579, 4582, 4586, 4588, 4604, 4605, 4607, 4614, 4617, 4626, 4632, 4634, 4640, 4644, 4645, 4650, 4655, 4656, 4658, 4664, 4667, 4669, 4680, 4686, 4688, 4699, 4705, 4712, 4714, 4715, 4720, 4723, 4724, 4726, 4733, 4735, 4740, 4743, 4744, 4745, 4747, 4762, 4767, 4769, 4771, 4773, 4774, 4779, 4783, 4787, 4788, 4793, 4798, 4803, 4805, 4810, 4812, 4813, 4819, 4823, 4825, 4828, 4830, 4831, 4839, 4844, 4847, 4848, 4849, 4873, 4874, 4886, 4888, 4890, 4895, 4896, 4900, 4911, 4915, 4916, 4917, 4921, 4922, 4923, 4927, 4930, 4939, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4966, 4967, 4970, 4972, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4996, 4997, 4999, 5000, 5003, 5006, 5008, 5011, 5013, 5014, 5016, 5017, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5041, 5044, 5054, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5154, 5157, 5160, 5163, 5166, 5169, 5172, 5175, 5178, 5180, 5181, 5184, 5187, 5190, 5192, 5193, 5196, 5198, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5229, 5230, 5232, 5233, 5234, 5237, 5238, 5250, 5257, 5268, 5270, 5272, 5274, 5276, 5277, 5278, 5281, 5283, 5290, 5291, 5295, 5303, 5307, 5315, 5319, 5327, 5331, 5332, 5333, 5334, 5335, 5342, 5355, 5359, 5364], "job": [2, 16, 18, 25, 29, 33, 62, 1641, 2282, 2285, 2291, 2295, 2297, 2298, 2299, 2300, 2301, 2302, 2304, 2305, 2306, 2307, 2308, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2385, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2500, 2501, 2502, 2503, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2942, 2951, 2960, 2969, 2977, 2986, 2994, 3003, 3011, 3019, 3027, 3036, 3044, 3053, 3061, 3070, 3078, 3087, 3094, 3103, 3111, 3120, 3127, 3136, 3144, 3153, 3160, 3169, 3177, 3186, 3194, 3203, 3211, 3220, 3228, 3237, 3245, 3254, 3262, 3271, 3279, 3288, 3295, 3304, 3312, 3321, 3329, 3338, 3345, 3354, 3362, 3371, 3379, 3388, 3396, 3404, 3413, 3421, 3430, 3438, 3447, 3455, 3464, 3471, 3480, 3493, 3502, 3511, 3518, 3527, 3535, 3544, 3551, 3560, 3569, 3577, 3586, 3594, 3603, 3610, 3618, 3627, 3636, 3644, 3653, 3660, 3669, 3677, 3686, 3693, 3702, 3708, 3711, 3718, 3719, 3722, 3723, 3727, 3729, 3730, 3736, 3737, 3738, 3739, 3741, 3756, 3782, 3789, 3793, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3834, 3835, 3836, 3837, 3838, 3839, 3841, 3842, 3843, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3859, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3879, 3880, 3885, 3896, 3899, 3909, 3910, 3911, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3929, 3931, 3932, 3960, 3963, 3976, 4802, 4811, 4829, 5220, 5250, 5286, 5290, 5347, 5348, 5349, 5350, 5352, 5353, 5364], "submissions": [2, 31, 64], "subclasses": [3, 11, 35, 53, 64, 1906, 1959, 2024, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2277, 2282, 2909, 2918, 2927, 3891, 4552, 5246], "aer": [3, 4, 16, 31, 53, 62, 147, 165, 172, 904, 1641, 1753, 1926, 1984, 1985, 1994, 2320, 2323, 2337, 2349, 2363, 2376, 2473, 2487, 2801, 2813, 2830, 2893, 2906, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 5264, 5337, 5338, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5361, 5362, 5365, 5367, 5368, 5369, 5370, 5372], "backends": [3, 4, 16, 25, 31, 34, 35, 53, 916, 917, 1641, 2277, 2285, 2320, 2321, 2323, 2337, 2349, 2363, 2376, 2801, 2906, 2907, 3482, 3483, 3485, 3704, 3705, 3708, 3718, 3730, 3736, 3737, 3757, 3780, 3787, 3833, 3932, 3963, 3976, 4241, 4255, 4273, 4803, 4828, 4923], "set": [3, 8, 10, 11, 12, 16, 24, 25, 28, 29, 31, 35, 39, 48, 57, 60, 64, 65, 66, 69, 73, 76, 80, 82, 85, 86, 91, 92, 96, 97, 99, 102, 106, 114, 124, 126, 129, 130, 131, 133, 134, 141, 143, 147, 148, 161, 163, 165, 166, 172, 173, 192, 235, 277, 315, 316, 317, 318, 319, 320, 326, 327, 328, 342, 406, 448, 486, 487, 488, 489, 490, 491, 497, 498, 499, 513, 565, 607, 645, 646, 647, 648, 649, 650, 656, 657, 658, 672, 682, 683, 690, 691, 698, 699, 706, 707, 709, 714, 715, 717, 722, 723, 731, 732, 740, 741, 749, 750, 758, 759, 761, 763, 768, 769, 770, 771, 773, 778, 779, 786, 787, 795, 796, 798, 803, 804, 806, 811, 812, 819, 820, 827, 828, 831, 833, 838, 839, 841, 846, 847, 849, 852, 858, 859, 861, 866, 867, 869, 874, 875, 877, 885, 886, 893, 894, 896, 901, 902, 904, 909, 910, 912, 927, 947, 960, 974, 990, 1003, 1005, 1006, 1010, 1024, 1040, 1046, 1054, 1063, 1065, 1067, 1072, 1083, 1088, 1102, 1143, 1184, 1222, 1223, 1224, 1225, 1226, 1227, 1233, 1234, 1235, 1249, 1267, 1281, 1300, 1316, 1317, 1323, 1376, 1377, 1379, 1381, 1387, 1398, 1406, 1407, 1410, 1432, 1441, 1445, 1448, 1450, 1456, 1466, 1468, 1470, 1471, 1472, 1503, 1508, 1537, 1556, 1558, 1563, 1567, 1640, 1641, 1644, 1660, 1664, 1665, 1666, 1672, 1686, 1706, 1718, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 1898, 1911, 1916, 1919, 1926, 1937, 1962, 1966, 2008, 2045, 2050, 2077, 2083, 2092, 2095, 2105, 2109, 2125, 2129, 2143, 2150, 2186, 2192, 2194, 2200, 2204, 2205, 2213, 2217, 2218, 2225, 2229, 2242, 2248, 2249, 2257, 2261, 2263, 2276, 2277, 2282, 2291, 2294, 2296, 2311, 2317, 2318, 2319, 2323, 2331, 2333, 2334, 2335, 2337, 2343, 2346, 2347, 2349, 2357, 2359, 2360, 2361, 2363, 2370, 2372, 2373, 2374, 2376, 2383, 2385, 2386, 2387, 2393, 2407, 2421, 2435, 2445, 2449, 2459, 2463, 2487, 2489, 2498, 2499, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2699, 2703, 2712, 2716, 2725, 2729, 2738, 2742, 2751, 2755, 2764, 2768, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2801, 2808, 2824, 2825, 2837, 2838, 2842, 2848, 2885, 2886, 2887, 2893, 2909, 2916, 2918, 2925, 2927, 2934, 2943, 2952, 2961, 2969, 2978, 2986, 2995, 3003, 3011, 3019, 3028, 3036, 3045, 3053, 3062, 3070, 3079, 3087, 3095, 3103, 3112, 3120, 3128, 3136, 3145, 3153, 3161, 3169, 3178, 3186, 3195, 3203, 3212, 3220, 3229, 3237, 3246, 3254, 3263, 3271, 3280, 3288, 3296, 3304, 3313, 3321, 3330, 3338, 3346, 3354, 3363, 3371, 3380, 3388, 3389, 3396, 3405, 3413, 3422, 3431, 3439, 3447, 3456, 3464, 3472, 3480, 3494, 3503, 3511, 3519, 3527, 3536, 3544, 3552, 3561, 3569, 3578, 3586, 3595, 3603, 3611, 3619, 3628, 3636, 3645, 3653, 3661, 3669, 3678, 3686, 3694, 3702, 3712, 3713, 3714, 3715, 3716, 3717, 3730, 3731, 3733, 3734, 3735, 3742, 3743, 3755, 3770, 3771, 3772, 3774, 3775, 3776, 3791, 3825, 3826, 3827, 3828, 3829, 3834, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3852, 3853, 3856, 3857, 3858, 3859, 3860, 3863, 3865, 3866, 3867, 3868, 3869, 3876, 3886, 3891, 3896, 3897, 3920, 3932, 3963, 3976, 3990, 3993, 3995, 3999, 4000, 4001, 4008, 4010, 4012, 4013, 4014, 4021, 4022, 4030, 4033, 4034, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4051, 4052, 4056, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4080, 4084, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4193, 4197, 4218, 4219, 4228, 4232, 4238, 4241, 4255, 4264, 4354, 4388, 4394, 4395, 4396, 4402, 4432, 4463, 4481, 4491, 4513, 4522, 4539, 4547, 4570, 4603, 4607, 4608, 4609, 4610, 4617, 4634, 4654, 4658, 4660, 4661, 4662, 4716, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4754, 4758, 4759, 4777, 4780, 4781, 4791, 4794, 4795, 4810, 4813, 4819, 4823, 4825, 4831, 4834, 4847, 4848, 4849, 4854, 4861, 4867, 4876, 4878, 4889, 4894, 4895, 4899, 4900, 4906, 4908, 4909, 4915, 4916, 4920, 4921, 4922, 4923, 4927, 4928, 4930, 4931, 4932, 4934, 4935, 4936, 4939, 4941, 4944, 4945, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5003, 5004, 5006, 5007, 5008, 5011, 5014, 5016, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5038, 5039, 5043, 5046, 5055, 5062, 5065, 5068, 5071, 5073, 5074, 5077, 5080, 5083, 5085, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5235, 5237, 5240, 5250, 5256, 5257, 5268, 5272, 5274, 5279, 5281, 5290, 5291, 5292, 5293, 5294, 5298, 5300, 5301, 5310, 5312, 5313, 5322, 5324, 5325, 5331, 5332, 5333, 5334, 5335, 5339, 5341, 5347, 5348, 5352, 5354, 5361, 5362, 5364, 5369], "specific": [3, 8, 31, 48, 64, 65, 231, 253, 276, 402, 424, 447, 561, 583, 606, 904, 912, 1139, 1160, 1183, 1715, 1919, 1945, 1994, 2323, 2349, 3711, 3722, 3727, 3736, 3777, 3922, 3940, 3941, 3984, 3987, 3999, 4012, 4020, 4476, 4928, 4930, 5024, 5105, 5279, 5331, 5339, 5366], "note": [3, 16, 25, 28, 30, 33, 35, 39, 44, 48, 51, 64, 103, 235, 328, 406, 499, 565, 658, 773, 849, 861, 877, 1143, 1235, 1342, 1379, 1388, 1444, 1448, 1456, 1458, 1468, 1478, 1479, 1537, 1550, 1551, 1563, 1641, 1644, 1772, 1793, 1903, 1913, 1926, 1929, 1939, 1943, 1953, 1957, 1964, 2027, 2032, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2165, 2166, 2168, 2171, 2189, 2202, 2215, 2218, 2232, 2245, 2259, 2275, 2293, 2308, 2313, 2323, 2349, 2363, 2376, 2486, 2500, 2813, 2819, 2831, 2867, 2905, 2933, 3704, 3723, 3738, 3739, 3757, 3833, 3877, 3896, 3923, 4008, 4086, 4182, 4229, 4254, 4272, 4287, 4299, 4354, 4388, 4421, 4463, 4525, 4529, 4578, 4603, 4614, 4654, 4713, 4751, 4803, 4873, 4922, 4958, 5021, 5023, 5041, 5102, 5137, 5140, 5226, 5281, 5361, 5364], "only": [3, 11, 12, 16, 24, 25, 28, 31, 35, 39, 48, 53, 57, 64, 66, 86, 97, 103, 105, 110, 130, 133, 142, 165, 180, 186, 201, 211, 213, 235, 240, 269, 271, 272, 285, 372, 382, 384, 406, 411, 440, 442, 443, 456, 531, 541, 543, 565, 570, 599, 601, 602, 615, 682, 752, 798, 841, 849, 877, 943, 1005, 1063, 1081, 1097, 1110, 1120, 1121, 1143, 1147, 1176, 1178, 1179, 1192, 1342, 1376, 1379, 1388, 1393, 1398, 1401, 1441, 1456, 1468, 1475, 1503, 1526, 1537, 1550, 1641, 1644, 1666, 1689, 1772, 1898, 1905, 1923, 1929, 1932, 1934, 1937, 1938, 1939, 1958, 1983, 1990, 2038, 2049, 2051, 2052, 2061, 2062, 2074, 2088, 2101, 2116, 2137, 2162, 2165, 2166, 2223, 2237, 2323, 2349, 2363, 2376, 2812, 2819, 2883, 2886, 2887, 3482, 3485, 3704, 3708, 3723, 3728, 3730, 3738, 3739, 3752, 3757, 3779, 3782, 3783, 3789, 3793, 3814, 3816, 3824, 3862, 3870, 3881, 3883, 3884, 3885, 3890, 3905, 3915, 3922, 3993, 3999, 4000, 4001, 4006, 4012, 4013, 4014, 4148, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4195, 4204, 4207, 4210, 4213, 4216, 4219, 4229, 4255, 4264, 4273, 4298, 4299, 4316, 4354, 4389, 4392, 4400, 4444, 4463, 4508, 4509, 4518, 4519, 4534, 4535, 4544, 4568, 4601, 4607, 4614, 4629, 4630, 4639, 4640, 4655, 4658, 4705, 4715, 4803, 4811, 4813, 4895, 4915, 4916, 4922, 4924, 4958, 4964, 4970, 4973, 5033, 5077, 5089, 5102, 5117, 5120, 5137, 5143, 5157, 5178, 5190, 5193, 5202, 5205, 5227, 5230, 5235, 5238, 5241, 5250, 5280, 5281, 5284, 5291, 5292, 5331, 5342, 5353, 5357, 5361, 5366, 5369], "valid": [3, 24, 28, 39, 51, 53, 64, 147, 235, 277, 406, 448, 565, 607, 919, 920, 926, 939, 942, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1063, 1102, 1143, 1184, 1259, 1262, 1266, 1280, 1299, 1322, 1380, 1431, 1462, 1507, 1527, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 1898, 1929, 2277, 2311, 2323, 2337, 2349, 2363, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2699, 2702, 2715, 2728, 2738, 2741, 2754, 2767, 2800, 2808, 2844, 2856, 2857, 2861, 2862, 2909, 2918, 2927, 3723, 3730, 3737, 3738, 3739, 3746, 3748, 3752, 3779, 3789, 3828, 3838, 3891, 3896, 3920, 3928, 3930, 4084, 4157, 4161, 4162, 4166, 4167, 4171, 4172, 4176, 4181, 4182, 4186, 4224, 4298, 4316, 4365, 4376, 4380, 4444, 4549, 4595, 4602, 4640, 4644, 4705, 4715, 4718, 4719, 4723, 4727, 4730, 4740, 4771, 4901, 4966, 5003, 5229, 5230, 5263, 5281, 5282, 5284, 5291, 5292, 5293, 5294, 5332], "when": [3, 10, 16, 25, 28, 29, 31, 35, 39, 48, 51, 53, 64, 69, 88, 98, 105, 142, 143, 147, 165, 172, 186, 193, 232, 235, 240, 266, 267, 285, 347, 364, 403, 406, 411, 437, 438, 456, 518, 523, 562, 565, 570, 596, 597, 615, 677, 691, 693, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 789, 796, 798, 804, 806, 812, 820, 828, 839, 841, 847, 859, 867, 869, 875, 877, 886, 894, 902, 910, 917, 918, 923, 936, 943, 956, 984, 1002, 1006, 1034, 1036, 1050, 1102, 1140, 1143, 1147, 1173, 1174, 1192, 1254, 1263, 1294, 1314, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1640, 1641, 1644, 1706, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 1923, 1926, 1934, 1945, 1960, 1970, 1994, 2002, 2004, 2006, 2024, 2041, 2140, 2162, 2275, 2293, 2311, 2313, 2323, 2337, 2349, 2363, 2376, 2487, 2498, 2503, 2814, 2875, 3712, 3713, 3714, 3715, 3717, 3723, 3733, 3734, 3738, 3739, 3741, 3771, 3772, 3774, 3775, 3779, 3782, 3789, 3793, 3796, 3799, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3825, 3827, 3828, 3829, 3834, 3840, 3841, 3842, 3843, 3844, 3852, 3862, 3868, 3881, 3899, 3909, 3925, 3932, 3976, 3985, 3993, 3999, 4003, 4008, 4009, 4012, 4013, 4014, 4016, 4039, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4159, 4163, 4164, 4168, 4169, 4172, 4173, 4174, 4178, 4182, 4183, 4184, 4188, 4220, 4221, 4223, 4224, 4254, 4272, 4287, 4297, 4298, 4301, 4318, 4337, 4356, 4380, 4404, 4426, 4432, 4446, 4463, 4467, 4497, 4506, 4528, 4533, 4554, 4568, 4571, 4623, 4628, 4644, 4669, 4688, 4712, 4726, 4760, 4833, 4836, 4844, 4858, 4863, 4868, 4870, 4896, 4915, 4917, 4922, 4938, 4943, 4970, 4973, 5013, 5033, 5044, 5077, 5105, 5114, 5117, 5123, 5142, 5143, 5145, 5172, 5178, 5190, 5202, 5205, 5222, 5226, 5230, 5237, 5239, 5244, 5250, 5267, 5278, 5281, 5282, 5283, 5290, 5291, 5331, 5332, 5333, 5334], "applied": [3, 4, 35, 48, 64, 66, 75, 79, 86, 95, 97, 113, 118, 123, 165, 172, 183, 184, 185, 186, 188, 190, 224, 253, 276, 354, 355, 356, 359, 360, 361, 363, 395, 424, 447, 554, 583, 606, 936, 1132, 1160, 1183, 1376, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1406, 1407, 1410, 1427, 1441, 1456, 1471, 1472, 1477, 1503, 1526, 1537, 1661, 1662, 1772, 1879, 1911, 1943, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 2798, 2805, 4103, 4162, 4224, 4282, 4503, 4580, 4973, 5014, 5017, 5117, 5178, 5331, 5333, 5334], "all": [3, 10, 11, 12, 16, 20, 25, 28, 29, 31, 35, 39, 44, 48, 51, 53, 54, 57, 60, 64, 66, 78, 86, 88, 89, 94, 97, 101, 104, 112, 116, 117, 122, 136, 138, 140, 142, 145, 146, 165, 193, 197, 199, 201, 206, 210, 213, 216, 231, 232, 234, 238, 240, 252, 254, 266, 267, 285, 289, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 322, 323, 326, 327, 347, 364, 368, 370, 372, 377, 381, 384, 387, 402, 403, 405, 409, 411, 423, 425, 437, 438, 456, 460, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 483, 484, 493, 494, 497, 498, 518, 523, 527, 529, 531, 536, 540, 543, 546, 561, 562, 564, 568, 570, 582, 584, 596, 597, 615, 619, 630, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 652, 653, 656, 657, 677, 682, 822, 849, 877, 933, 953, 956, 967, 982, 996, 1001, 1017, 1032, 1047, 1060, 1063, 1065, 1066, 1102, 1106, 1108, 1110, 1115, 1119, 1121, 1124, 1139, 1140, 1142, 1145, 1147, 1159, 1161, 1173, 1174, 1192, 1196, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1229, 1230, 1233, 1234, 1254, 1274, 1290, 1309, 1318, 1329, 1332, 1334, 1337, 1340, 1342, 1346, 1358, 1365, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1413, 1416, 1438, 1441, 1444, 1447, 1450, 1456, 1457, 1458, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1487, 1492, 1497, 1503, 1514, 1520, 1531, 1537, 1539, 1540, 1542, 1545, 1548, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1640, 1641, 1644, 1657, 1658, 1668, 1674, 1682, 1689, 1693, 1698, 1699, 1700, 1702, 1703, 1704, 1708, 1733, 1734, 1735, 1737, 1738, 1739, 1741, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 1898, 1901, 1906, 1922, 1926, 1948, 1956, 1959, 1983, 1990, 1998, 2001, 2025, 2028, 2029, 2032, 2035, 2039, 2041, 2055, 2063, 2064, 2068, 2072, 2075, 2089, 2102, 2117, 2132, 2135, 2138, 2154, 2161, 2180, 2182, 2198, 2211, 2224, 2235, 2238, 2255, 2275, 2277, 2285, 2293, 2309, 2313, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2385, 2395, 2400, 2409, 2414, 2423, 2428, 2431, 2437, 2442, 2445, 2451, 2456, 2459, 2465, 2470, 2487, 2489, 2496, 2498, 2503, 2514, 2517, 2527, 2540, 2543, 2553, 2556, 2566, 2569, 2579, 2592, 2595, 2605, 2608, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 2778, 2779, 2780, 2781, 2782, 2784, 2785, 2786, 2788, 2789, 2790, 2791, 2798, 2802, 2803, 2808, 2814, 2816, 2823, 2842, 2847, 2856, 2857, 2867, 2886, 2888, 2889, 2890, 2891, 2892, 2914, 2923, 3482, 3485, 3704, 3705, 3708, 3710, 3723, 3730, 3736, 3737, 3738, 3739, 3752, 3777, 3779, 3789, 3798, 3811, 3836, 3852, 3853, 3854, 3862, 3869, 3870, 3876, 3880, 3882, 3885, 3886, 3905, 3920, 3922, 3935, 3963, 3982, 3985, 3990, 3993, 3994, 4006, 4008, 4018, 4037, 4040, 4042, 4045, 4076, 4085, 4095, 4104, 4112, 4113, 4122, 4131, 4139, 4140, 4149, 4182, 4219, 4225, 4229, 4244, 4245, 4301, 4304, 4309, 4318, 4321, 4330, 4337, 4340, 4349, 4356, 4359, 4368, 4376, 4388, 4389, 4390, 4392, 4394, 4395, 4404, 4407, 4416, 4426, 4429, 4438, 4446, 4449, 4458, 4480, 4490, 4491, 4493, 4512, 4513, 4521, 4522, 4524, 4525, 4529, 4530, 4538, 4539, 4540, 4554, 4557, 4563, 4571, 4574, 4587, 4603, 4604, 4605, 4607, 4608, 4609, 4616, 4617, 4619, 4620, 4624, 4625, 4633, 4634, 4635, 4640, 4654, 4655, 4656, 4658, 4660, 4661, 4669, 4672, 4681, 4688, 4691, 4700, 4706, 4707, 4708, 4709, 4724, 4743, 4744, 4752, 4775, 4789, 4811, 4812, 4813, 4814, 4819, 4823, 4825, 4828, 4830, 4842, 4876, 4887, 4900, 4904, 4921, 4923, 4927, 4930, 4934, 4935, 4964, 4973, 4976, 4991, 4996, 4999, 5003, 5006, 5008, 5014, 5023, 5055, 5068, 5077, 5089, 5092, 5096, 5117, 5120, 5137, 5143, 5154, 5160, 5169, 5178, 5196, 5214, 5217, 5220, 5226, 5233, 5234, 5237, 5239, 5244, 5250, 5252, 5263, 5296, 5308, 5320, 5331, 5332, 5333, 5334, 5366], "qubits": [3, 10, 11, 16, 31, 35, 39, 44, 48, 64, 66, 69, 75, 78, 86, 92, 94, 100, 103, 112, 118, 120, 122, 130, 136, 139, 140, 183, 184, 185, 193, 195, 199, 211, 214, 216, 232, 234, 236, 239, 240, 246, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 274, 276, 278, 279, 280, 281, 285, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 322, 323, 324, 325, 326, 327, 329, 342, 343, 344, 345, 346, 347, 348, 354, 355, 356, 359, 360, 361, 364, 366, 370, 382, 385, 387, 403, 405, 407, 410, 411, 417, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 445, 447, 449, 450, 451, 452, 456, 470, 471, 472, 473, 474, 475, 477, 478, 479, 481, 482, 483, 484, 493, 494, 495, 496, 497, 498, 500, 513, 514, 515, 516, 517, 518, 519, 523, 525, 529, 541, 544, 546, 562, 564, 566, 569, 570, 576, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 600, 604, 606, 608, 609, 610, 611, 615, 629, 630, 631, 632, 633, 634, 636, 637, 638, 640, 641, 642, 643, 652, 653, 654, 655, 656, 657, 659, 672, 673, 674, 675, 676, 677, 678, 923, 934, 936, 938, 943, 954, 956, 968, 970, 975, 983, 986, 997, 1006, 1018, 1020, 1025, 1033, 1036, 1048, 1050, 1061, 1102, 1104, 1108, 1120, 1122, 1124, 1140, 1142, 1144, 1146, 1147, 1153, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1177, 1181, 1183, 1185, 1186, 1187, 1188, 1192, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1217, 1218, 1219, 1220, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1263, 1275, 1277, 1282, 1292, 1296, 1302, 1312, 1318, 1319, 1330, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1439, 1441, 1444, 1445, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1515, 1517, 1519, 1520, 1522, 1524, 1526, 1530, 1531, 1533, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1640, 1641, 1642, 1643, 1644, 1654, 1655, 1659, 1661, 1662, 1667, 1668, 1682, 1691, 1717, 1722, 1725, 1726, 1727, 1753, 1760, 1768, 1772, 1784, 1786, 1791, 1799, 1802, 1813, 1815, 1820, 1828, 1831, 1836, 1844, 1847, 1852, 1860, 1863, 1868, 1876, 1879, 1894, 1898, 1899, 1910, 1916, 1922, 1930, 1943, 1945, 1954, 1961, 1966, 2033, 2043, 2050, 2056, 2070, 2076, 2083, 2085, 2091, 2095, 2098, 2109, 2113, 2129, 2133, 2142, 2150, 2163, 2170, 2178, 2185, 2192, 2194, 2196, 2199, 2201, 2204, 2205, 2209, 2212, 2214, 2217, 2218, 2221, 2226, 2229, 2230, 2233, 2240, 2244, 2248, 2249, 2250, 2253, 2256, 2258, 2261, 2263, 2264, 2285, 2287, 2290, 2309, 2318, 2323, 2349, 2363, 2376, 2389, 2395, 2401, 2403, 2409, 2415, 2417, 2423, 2429, 2431, 2437, 2443, 2445, 2451, 2457, 2459, 2465, 2471, 2504, 2515, 2517, 2528, 2530, 2541, 2543, 2554, 2556, 2567, 2569, 2580, 2582, 2593, 2595, 2606, 2608, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2699, 2710, 2712, 2723, 2725, 2736, 2738, 2749, 2751, 2762, 2764, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2784, 2785, 2786, 2788, 2789, 2790, 2791, 2798, 2801, 2802, 2803, 2805, 2806, 2807, 2808, 2813, 2830, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2865, 2867, 2887, 2889, 2890, 2914, 2923, 2932, 2933, 2936, 2963, 2965, 2968, 2980, 2982, 2985, 2997, 2999, 3002, 3005, 3007, 3010, 3013, 3015, 3018, 3030, 3032, 3035, 3047, 3049, 3052, 3064, 3066, 3069, 3081, 3083, 3086, 3097, 3099, 3102, 3114, 3116, 3119, 3130, 3132, 3135, 3147, 3149, 3152, 3163, 3165, 3168, 3180, 3182, 3185, 3197, 3199, 3202, 3214, 3216, 3219, 3231, 3233, 3236, 3248, 3250, 3253, 3265, 3267, 3270, 3282, 3284, 3287, 3298, 3300, 3303, 3315, 3317, 3320, 3332, 3334, 3337, 3348, 3350, 3353, 3365, 3367, 3370, 3382, 3384, 3387, 3390, 3392, 3395, 3407, 3409, 3412, 3441, 3443, 3446, 3458, 3460, 3463, 3474, 3476, 3479, 3505, 3507, 3510, 3521, 3523, 3526, 3538, 3540, 3543, 3563, 3565, 3568, 3580, 3582, 3585, 3597, 3599, 3602, 3630, 3632, 3635, 3647, 3649, 3652, 3663, 3665, 3668, 3680, 3682, 3685, 3696, 3698, 3701, 3705, 3708, 3720, 3725, 3730, 3737, 3777, 3781, 3932, 3935, 3937, 3940, 3941, 3942, 3943, 3954, 3963, 3965, 3969, 3976, 3982, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3991, 3992, 4030, 4034, 4035, 4037, 4041, 4042, 4044, 4065, 4218, 4246, 4264, 4273, 4282, 4299, 4316, 4335, 4354, 4370, 4376, 4384, 4389, 4402, 4424, 4432, 4444, 4463, 4465, 4466, 4467, 4470, 4471, 4473, 4476, 4484, 4487, 4489, 4492, 4494, 4497, 4498, 4500, 4506, 4519, 4525, 4528, 4529, 4530, 4533, 4540, 4552, 4568, 4579, 4589, 4595, 4614, 4620, 4623, 4624, 4625, 4635, 4640, 4649, 4655, 4667, 4686, 4716, 4725, 4728, 4729, 4732, 4733, 4734, 4736, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4767, 4768, 4769, 4770, 4771, 4772, 4814, 4819, 4823, 4825, 4839, 4843, 4845, 4846, 4847, 4848, 4850, 4851, 4852, 4854, 4857, 4859, 4873, 4875, 4878, 4879, 4884, 4885, 4886, 4887, 4901, 4915, 4922, 4923, 4924, 4927, 4928, 4930, 4934, 4935, 4948, 4951, 4954, 4957, 4961, 4963, 4964, 4966, 4973, 4996, 4999, 5003, 5006, 5014, 5016, 5018, 5033, 5071, 5077, 5079, 5083, 5089, 5091, 5117, 5123, 5143, 5147, 5150, 5151, 5152, 5156, 5158, 5162, 5178, 5193, 5199, 5202, 5217, 5223, 5226, 5230, 5233, 5234, 5237, 5239, 5244, 5246, 5247, 5250, 5263, 5268, 5271, 5272, 5276, 5277, 5284, 5286, 5287, 5288, 5289, 5333, 5334, 5339, 5344, 5345, 5347, 5348, 5355, 5356, 5357, 5359, 5366, 5368, 5372], "applying": [3, 35, 64, 232, 403, 562, 896, 1140, 1387, 1406, 1447, 1453, 2054, 2176, 2251, 2869, 2871, 2885, 2890, 4103, 4961, 5193, 5335], "subset": [3, 31, 44, 64, 231, 402, 561, 1036, 1139, 1263, 1466, 1468, 1667, 4922, 4973, 5068, 5071, 5233, 5250, 5253, 5268, 5271], "raise": [3, 31, 53, 64, 275, 446, 605, 1182, 1706, 1765, 2323, 2337, 2349, 2363, 2376, 3814, 3839, 3862, 3901, 3905, 3906, 3931, 4182, 4437, 4705, 4810, 5092, 5196, 5202, 5275, 5355, 5364], "exception": [3, 53, 64, 65, 195, 240, 252, 347, 366, 411, 423, 518, 525, 570, 582, 677, 984, 1034, 1104, 1147, 1159, 1254, 1294, 1314, 1316, 1317, 1655, 1718, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 1919, 2012, 2016, 2025, 2032, 2055, 2063, 2276, 2294, 2296, 2317, 2319, 2323, 2337, 2349, 2363, 2376, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2725, 2738, 2751, 2764, 2893, 3712, 3713, 3714, 3715, 3716, 3717, 3733, 3734, 3735, 3742, 3743, 3755, 3770, 3771, 3772, 3774, 3775, 3776, 3814, 3825, 3826, 3827, 3828, 3829, 3839, 3840, 3841, 3842, 3843, 3844, 3862, 3901, 3931, 4238, 4705, 4810, 4944, 4945, 5202, 5239, 5279, 5364], "during": [3, 16, 48, 53, 64, 147, 165, 172, 1987, 2323, 2349, 2363, 2376, 2485, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2725, 2738, 2751, 2764, 3704, 3748, 3770, 3905, 4075, 4148, 4162, 4182, 4713, 4894, 4945, 5202, 5226, 5250], "execution": [3, 8, 16, 25, 31, 35, 48, 53, 60, 64, 147, 165, 172, 193, 364, 523, 912, 936, 956, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1644, 1926, 1948, 1983, 1998, 2282, 2291, 2307, 2323, 2337, 2349, 2363, 2376, 2485, 2904, 3011, 3019, 3388, 3708, 3730, 3798, 3885, 3887, 3888, 3896, 3909, 3920, 3922, 3963, 3993, 4008, 4009, 4020, 4228, 4255, 4751, 4802, 4830, 4900, 4921, 4973, 4996, 4999, 5006, 5102, 5214, 5217, 5220, 5239, 5244, 5250, 5255, 5348, 5349, 5362, 5366], "also": [3, 10, 16, 24, 25, 31, 35, 39, 48, 53, 57, 64, 89, 147, 156, 158, 172, 201, 213, 252, 270, 334, 335, 336, 342, 343, 344, 345, 372, 384, 423, 441, 505, 506, 507, 513, 514, 515, 516, 531, 543, 582, 600, 664, 665, 666, 672, 673, 674, 675, 682, 743, 798, 841, 849, 877, 896, 1063, 1110, 1121, 1159, 1177, 1241, 1242, 1243, 1249, 1250, 1251, 1252, 1339, 1341, 1342, 1355, 1377, 1379, 1388, 1443, 1448, 1462, 1479, 1499, 1555, 1558, 1641, 1648, 1649, 1700, 1815, 1831, 1847, 1863, 1879, 1900, 1901, 1922, 1955, 1956, 2026, 2034, 2035, 2071, 2072, 2086, 2099, 2114, 2134, 2135, 2154, 2166, 2168, 2179, 2180, 2197, 2210, 2222, 2234, 2235, 2254, 2277, 2282, 2291, 2323, 2349, 2363, 2376, 2813, 2909, 2918, 2927, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3704, 3718, 3723, 3730, 3736, 3748, 3757, 3789, 3814, 3824, 3862, 3876, 3888, 3891, 3896, 3901, 4029, 4041, 4075, 4182, 4203, 4206, 4215, 4224, 4229, 4232, 4254, 4272, 4287, 4299, 4354, 4389, 4402, 4432, 4487, 4518, 4519, 4544, 4568, 4614, 4639, 4655, 4667, 4751, 4803, 4811, 4895, 4915, 4916, 4964, 4973, 5003, 5089, 5137, 5169, 5181, 5233, 5250, 5280, 5331, 5332, 5333, 5334, 5361], "added": [3, 31, 35, 39, 51, 105, 193, 197, 199, 232, 240, 252, 265, 287, 364, 368, 370, 403, 411, 423, 436, 458, 523, 527, 529, 562, 570, 582, 595, 617, 849, 877, 998, 1063, 1102, 1106, 1108, 1140, 1147, 1159, 1172, 1194, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1661, 1662, 1710, 1926, 1932, 1934, 2055, 2285, 2798, 2801, 2802, 2803, 2805, 2806, 2807, 2842, 2889, 3711, 3823, 3868, 3993, 4008, 4013, 4014, 4218, 4225, 4332, 4351, 4418, 4460, 4683, 4702, 4837, 4839, 4864, 4871, 4873, 4894, 4895, 4899, 4915, 4916, 4920, 4938, 4948, 4951, 4954, 4957, 4970, 4976, 5014, 5016, 5017, 5117, 5149, 5155, 5161, 5178, 5181, 5190, 5193, 5239, 5244, 5295, 5319, 5366], "circuits": [3, 4, 8, 12, 16, 25, 28, 29, 30, 31, 35, 39, 45, 48, 53, 57, 59, 62, 69, 92, 93, 97, 111, 118, 121, 149, 167, 174, 191, 201, 206, 210, 213, 234, 238, 335, 336, 357, 360, 372, 377, 381, 384, 405, 409, 506, 507, 531, 536, 540, 543, 564, 568, 665, 666, 852, 904, 916, 918, 1001, 1003, 1005, 1046, 1110, 1115, 1119, 1121, 1142, 1145, 1242, 1243, 1342, 1372, 1377, 1387, 1392, 1393, 1401, 1450, 1462, 1465, 1468, 1471, 1477, 1503, 1526, 1563, 1567, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1722, 1815, 1831, 1847, 1863, 1903, 1913, 1926, 1928, 1929, 1957, 1964, 1970, 1976, 1978, 1984, 1986, 2002, 2004, 2006, 2024, 2027, 2036, 2047, 2066, 2068, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 2265, 2267, 2269, 2271, 2272, 2274, 2282, 2285, 2291, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2798, 2813, 2842, 2888, 2892, 3011, 3019, 3388, 3708, 3718, 3730, 3801, 3834, 3838, 3851, 3864, 3891, 3896, 4244, 4245, 4298, 4299, 4311, 4354, 4370, 4421, 4519, 4595, 4614, 4712, 4716, 4728, 4900, 4921, 4958, 4964, 5021, 5033, 5175, 5190, 5230, 5250, 5251, 5253, 5257, 5268, 5272, 5276, 5342, 5352, 5355, 5366, 5368, 5369], "using": [3, 4, 7, 10, 11, 12, 20, 25, 28, 29, 31, 33, 35, 44, 48, 53, 54, 57, 64, 69, 97, 103, 115, 119, 142, 144, 147, 162, 163, 165, 172, 186, 201, 213, 235, 240, 252, 262, 264, 347, 372, 384, 406, 411, 423, 433, 435, 518, 531, 543, 565, 570, 582, 592, 594, 677, 682, 693, 761, 798, 806, 814, 849, 877, 918, 936, 1065, 1067, 1102, 1110, 1121, 1143, 1147, 1159, 1169, 1171, 1254, 1318, 1374, 1376, 1379, 1392, 1399, 1401, 1407, 1410, 1419, 1421, 1424, 1441, 1447, 1448, 1450, 1453, 1457, 1462, 1468, 1472, 1477, 1480, 1503, 1526, 1537, 1539, 1542, 1551, 1642, 1643, 1644, 1682, 1926, 1934, 1935, 1937, 1970, 1973, 1984, 1987, 1994, 2001, 2028, 2032, 2039, 2064, 2156, 2162, 2177, 2208, 2252, 2265, 2269, 2323, 2337, 2349, 2363, 2376, 2487, 2556, 2569, 2798, 2801, 2808, 2814, 2816, 2826, 2862, 2891, 2892, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3704, 3708, 3718, 3777, 3816, 3852, 3876, 3887, 3888, 4008, 4031, 4041, 4139, 4298, 4299, 4301, 4304, 4310, 4318, 4321, 4331, 4337, 4340, 4350, 4354, 4356, 4359, 4369, 4370, 4380, 4388, 4394, 4395, 4402, 4404, 4407, 4417, 4426, 4429, 4440, 4446, 4449, 4459, 4463, 4467, 4482, 4487, 4491, 4513, 4515, 4516, 4519, 4522, 4539, 4541, 4542, 4552, 4554, 4557, 4564, 4568, 4571, 4574, 4590, 4591, 4595, 4603, 4607, 4608, 4609, 4614, 4617, 4634, 4636, 4637, 4644, 4654, 4658, 4660, 4661, 4667, 4669, 4672, 4682, 4688, 4691, 4701, 4708, 4712, 4716, 4717, 4728, 4745, 4747, 4767, 4769, 4821, 4842, 4915, 4923, 4928, 4973, 4976, 5014, 5068, 5080, 5099, 5123, 5190, 5199, 5211, 5233, 5234, 5236, 5237, 5250, 5268, 5272, 5281, 5332, 5333, 5334, 5338, 5342, 5347, 5348, 5355, 5362, 5367, 5369, 5370], "which": [3, 4, 8, 10, 11, 16, 20, 24, 25, 28, 30, 31, 33, 35, 39, 44, 48, 51, 53, 57, 60, 64, 70, 72, 86, 88, 90, 93, 97, 103, 104, 109, 110, 111, 115, 118, 119, 121, 136, 143, 145, 147, 155, 158, 162, 172, 179, 183, 184, 234, 235, 238, 239, 240, 251, 252, 253, 255, 256, 262, 264, 276, 328, 347, 354, 355, 359, 360, 405, 406, 409, 410, 411, 422, 423, 424, 426, 427, 433, 435, 447, 499, 518, 564, 565, 568, 569, 570, 581, 582, 583, 585, 586, 592, 594, 606, 658, 677, 682, 685, 693, 695, 703, 709, 711, 719, 728, 737, 746, 755, 763, 764, 768, 769, 775, 781, 783, 792, 798, 800, 808, 816, 822, 824, 833, 835, 841, 843, 849, 854, 861, 863, 871, 877, 881, 890, 898, 904, 906, 912, 918, 923, 943, 956, 979, 1003, 1006, 1029, 1036, 1063, 1071, 1072, 1076, 1087, 1088, 1092, 1096, 1142, 1143, 1145, 1146, 1147, 1158, 1159, 1160, 1162, 1163, 1169, 1171, 1183, 1235, 1254, 1263, 1287, 1291, 1306, 1310, 1318, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1376, 1377, 1379, 1380, 1388, 1397, 1398, 1401, 1409, 1411, 1441, 1447, 1450, 1456, 1458, 1462, 1463, 1464, 1466, 1468, 1471, 1472, 1479, 1480, 1499, 1503, 1526, 1537, 1547, 1550, 1556, 1558, 1563, 1567, 1641, 1642, 1643, 1644, 1673, 1706, 1714, 1715, 1725, 1732, 1753, 1764, 1772, 1786, 1795, 1824, 1840, 1856, 1872, 1890, 1898, 1901, 1902, 1903, 1906, 1908, 1911, 1913, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1934, 1935, 1937, 1938, 1939, 1941, 1942, 1944, 1945, 1948, 1949, 1952, 1956, 1957, 1959, 1960, 1962, 1964, 1974, 1983, 1985, 1987, 1990, 1994, 1995, 1996, 1998, 2001, 2002, 2004, 2005, 2006, 2008, 2009, 2012, 2015, 2016, 2022, 2024, 2025, 2027, 2028, 2032, 2035, 2036, 2039, 2041, 2042, 2045, 2047, 2055, 2063, 2064, 2066, 2068, 2069, 2072, 2073, 2075, 2077, 2079, 2084, 2087, 2089, 2092, 2093, 2097, 2100, 2102, 2105, 2106, 2112, 2115, 2117, 2123, 2125, 2127, 2132, 2135, 2136, 2138, 2140, 2141, 2143, 2145, 2153, 2154, 2161, 2162, 2166, 2167, 2168, 2169, 2177, 2180, 2181, 2182, 2186, 2195, 2198, 2200, 2208, 2211, 2213, 2220, 2224, 2225, 2232, 2235, 2236, 2238, 2239, 2242, 2252, 2255, 2257, 2265, 2269, 2277, 2285, 2323, 2337, 2349, 2813, 2862, 2865, 2867, 2875, 2876, 2882, 2885, 2915, 2924, 2933, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3704, 3708, 3718, 3730, 3757, 3777, 3782, 3793, 3796, 3834, 3905, 3909, 3932, 3935, 3938, 3940, 3941, 3942, 3944, 3945, 3946, 3947, 3948, 3949, 3957, 3963, 3966, 3969, 3970, 3976, 3982, 3983, 3984, 3987, 3990, 3991, 3992, 3993, 4000, 4001, 4008, 4013, 4014, 4031, 4032, 4035, 4041, 4057, 4058, 4059, 4060, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4182, 4195, 4224, 4229, 4246, 4255, 4264, 4282, 4297, 4298, 4376, 4402, 4463, 4487, 4523, 4595, 4606, 4613, 4618, 4640, 4645, 4667, 4705, 4706, 4707, 4708, 4712, 4716, 4744, 4746, 4747, 4749, 4768, 4769, 4771, 4803, 4814, 4817, 4819, 4821, 4823, 4825, 4830, 4833, 4844, 4873, 4874, 4891, 4896, 4915, 4917, 4922, 4923, 4927, 4943, 4946, 4949, 4952, 4955, 4964, 4973, 5014, 5016, 5017, 5018, 5033, 5043, 5077, 5083, 5091, 5102, 5105, 5111, 5117, 5120, 5123, 5143, 5146, 5152, 5154, 5158, 5160, 5178, 5181, 5193, 5196, 5202, 5205, 5208, 5214, 5217, 5226, 5228, 5230, 5233, 5235, 5250, 5262, 5263, 5270, 5274, 5281, 5283, 5290, 5332, 5333, 5334, 5347, 5348, 5353, 5362], "patched": 3, "importing": [3, 64], "into": [3, 11, 12, 28, 29, 31, 35, 39, 48, 53, 59, 64, 82, 126, 131, 134, 143, 145, 148, 152, 166, 170, 173, 177, 197, 203, 211, 240, 265, 267, 278, 328, 368, 374, 382, 411, 436, 438, 449, 499, 527, 533, 541, 570, 595, 597, 608, 658, 682, 734, 861, 877, 912, 916, 917, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1063, 1065, 1106, 1112, 1120, 1147, 1172, 1174, 1185, 1235, 1275, 1292, 1293, 1312, 1313, 1318, 1330, 1388, 1401, 1404, 1410, 1439, 1447, 1448, 1462, 1480, 1515, 1537, 1551, 1641, 1648, 1649, 1692, 1706, 1753, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1900, 1922, 1923, 1924, 1925, 1926, 1929, 1932, 1934, 1936, 1937, 1953, 1955, 1970, 1975, 1977, 1980, 1986, 1998, 2002, 2004, 2024, 2026, 2034, 2071, 2086, 2099, 2114, 2122, 2134, 2160, 2165, 2166, 2179, 2197, 2210, 2216, 2222, 2234, 2254, 2323, 2337, 2349, 2363, 2376, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2798, 2845, 2855, 2858, 2859, 2867, 2869, 2888, 3833, 3834, 3838, 3855, 3870, 3963, 4004, 4009, 4039, 4040, 4046, 4075, 4148, 4220, 4223, 4233, 4299, 4316, 4354, 4421, 4503, 4504, 4506, 4508, 4509, 4533, 4534, 4535, 4580, 4583, 4584, 4628, 4629, 4630, 4705, 4712, 4716, 4814, 4855, 4877, 4882, 4896, 4917, 4930, 4946, 4952, 4958, 4961, 4964, 4973, 5007, 5008, 5010, 5014, 5018, 5077, 5117, 5120, 5129, 5134, 5137, 5143, 5181, 5202, 5220, 5244, 5262, 5283, 5290, 5331, 5333, 5334, 5341, 5342, 5347, 5352, 5362], "returned": [3, 16, 25, 31, 48, 64, 82, 88, 105, 107, 126, 130, 131, 134, 136, 140, 142, 148, 166, 173, 198, 210, 235, 238, 240, 369, 381, 406, 409, 411, 528, 540, 565, 568, 570, 970, 1003, 1107, 1119, 1143, 1145, 1147, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1377, 1412, 1415, 1419, 1421, 1424, 1441, 1450, 1456, 1471, 1537, 1563, 1567, 1641, 1644, 1666, 1674, 1675, 1682, 1689, 1717, 1901, 1906, 1929, 1956, 1959, 2024, 2035, 2072, 2075, 2089, 2102, 2117, 2135, 2138, 2154, 2180, 2182, 2198, 2211, 2224, 2235, 2238, 2255, 2285, 2290, 2323, 2337, 2487, 2498, 2798, 2850, 2851, 2852, 2853, 2854, 2860, 2867, 2890, 2963, 2968, 2980, 2985, 2997, 3002, 3005, 3010, 3013, 3018, 3030, 3035, 3047, 3052, 3064, 3069, 3081, 3086, 3097, 3102, 3114, 3119, 3130, 3135, 3147, 3152, 3163, 3168, 3180, 3185, 3197, 3202, 3214, 3219, 3231, 3236, 3248, 3253, 3265, 3270, 3282, 3287, 3298, 3303, 3315, 3320, 3332, 3337, 3348, 3353, 3365, 3370, 3382, 3387, 3390, 3395, 3407, 3412, 3441, 3446, 3458, 3463, 3474, 3479, 3505, 3510, 3521, 3526, 3538, 3543, 3563, 3568, 3580, 3585, 3597, 3602, 3630, 3635, 3647, 3652, 3663, 3668, 3680, 3685, 3696, 3701, 3711, 3722, 3723, 3727, 3728, 3730, 3732, 3738, 3739, 3748, 3750, 3757, 3789, 3790, 3796, 3798, 3801, 3805, 3812, 3814, 3836, 3852, 3862, 3882, 3883, 3884, 3909, 3923, 3993, 3999, 4001, 4012, 4014, 4025, 4026, 4037, 4041, 4086, 4158, 4159, 4163, 4164, 4168, 4169, 4173, 4174, 4178, 4183, 4184, 4188, 4203, 4206, 4273, 4298, 4384, 4393, 4439, 4463, 4490, 4493, 4521, 4523, 4524, 4530, 4540, 4616, 4618, 4619, 4625, 4635, 4649, 4659, 4761, 4762, 4782, 4783, 4797, 4798, 4803, 4875, 4901, 4910, 4911, 4927, 4928, 5226, 5227, 5230, 5238, 5268, 5272, 5281, 5290, 5291, 5292, 5293, 5294, 5302, 5303, 5314, 5315, 5326, 5327, 5331, 5333, 5334, 5338, 5366, 5369], "result": [3, 4, 10, 25, 29, 30, 31, 48, 53, 62, 68, 70, 71, 74, 75, 76, 80, 82, 84, 85, 86, 90, 91, 95, 96, 98, 101, 102, 104, 105, 106, 109, 113, 114, 119, 120, 123, 124, 126, 128, 129, 130, 131, 133, 134, 140, 141, 148, 155, 160, 161, 163, 165, 166, 172, 173, 181, 188, 190, 191, 192, 285, 322, 323, 324, 325, 326, 327, 357, 362, 363, 456, 493, 494, 495, 496, 497, 498, 615, 652, 653, 654, 655, 656, 657, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 830, 831, 836, 844, 849, 855, 864, 872, 877, 882, 891, 899, 904, 907, 1081, 1096, 1097, 1192, 1229, 1230, 1231, 1232, 1233, 1234, 1291, 1310, 1318, 1388, 1392, 1398, 1447, 1475, 1476, 1480, 1563, 1641, 1802, 1906, 1959, 1987, 2024, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2195, 2198, 2211, 2224, 2232, 2238, 2255, 2271, 2274, 2323, 2349, 2363, 2376, 2389, 2473, 2482, 2487, 2496, 2503, 2871, 2894, 2901, 2915, 2924, 2933, 2954, 2971, 2988, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3488, 3496, 3513, 3529, 3554, 3571, 3588, 3621, 3638, 3655, 3671, 3688, 3723, 3730, 3738, 3739, 3756, 3759, 3762, 3765, 3778, 3779, 3781, 3784, 3789, 3792, 3795, 3796, 3814, 3844, 3849, 3862, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3885, 3887, 3888, 3899, 3900, 3901, 3909, 3912, 3916, 3918, 3922, 3926, 3963, 4020, 4041, 4075, 4242, 4243, 4264, 4282, 4518, 4544, 4639, 4706, 4707, 4708, 4722, 4751, 4760, 4773, 4787, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4830, 5021, 5027, 5030, 5117, 5126, 5169, 5178, 5187, 5190, 5223, 5250, 5253, 5269, 5273, 5290, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "object": [3, 12, 30, 31, 35, 39, 47, 48, 51, 53, 64, 66, 71, 72, 73, 75, 79, 86, 88, 95, 99, 103, 105, 113, 117, 120, 123, 140, 143, 144, 156, 188, 191, 193, 197, 198, 203, 210, 211, 232, 235, 238, 242, 243, 259, 260, 261, 278, 334, 364, 368, 369, 374, 381, 382, 403, 406, 409, 413, 414, 430, 431, 432, 449, 505, 523, 527, 528, 533, 540, 541, 562, 565, 568, 572, 573, 589, 590, 591, 608, 664, 822, 913, 914, 918, 936, 970, 1000, 1050, 1063, 1081, 1083, 1097, 1099, 1102, 1106, 1107, 1112, 1119, 1120, 1140, 1143, 1145, 1149, 1150, 1166, 1167, 1168, 1185, 1241, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1406, 1407, 1410, 1441, 1447, 1456, 1457, 1458, 1462, 1465, 1475, 1477, 1480, 1503, 1537, 1550, 1555, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1667, 1675, 1714, 1715, 1718, 1719, 1720, 1722, 1728, 1745, 1747, 1749, 1751, 1898, 1926, 1951, 1953, 1981, 1987, 1993, 2021, 2023, 2068, 2069, 2084, 2097, 2112, 2122, 2132, 2153, 2155, 2158, 2161, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2271, 2274, 2275, 2277, 2282, 2285, 2290, 2291, 2293, 2309, 2311, 2313, 2318, 2323, 2333, 2337, 2359, 2372, 2385, 2482, 2496, 2503, 2801, 2802, 2803, 2805, 2806, 2807, 2813, 2814, 2816, 2818, 2819, 2826, 2830, 2835, 2845, 2846, 2847, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2865, 2868, 2887, 2901, 2909, 2918, 2927, 2963, 2968, 2969, 2980, 2985, 2986, 2997, 3002, 3003, 3005, 3010, 3011, 3013, 3018, 3019, 3030, 3035, 3036, 3047, 3052, 3053, 3064, 3069, 3070, 3081, 3086, 3087, 3097, 3102, 3103, 3114, 3119, 3120, 3130, 3135, 3136, 3147, 3152, 3153, 3163, 3168, 3169, 3180, 3185, 3186, 3197, 3202, 3203, 3214, 3219, 3220, 3231, 3236, 3237, 3248, 3253, 3254, 3265, 3270, 3271, 3282, 3287, 3288, 3298, 3303, 3304, 3315, 3320, 3321, 3332, 3337, 3338, 3348, 3353, 3354, 3365, 3370, 3371, 3382, 3387, 3388, 3390, 3395, 3396, 3407, 3412, 3413, 3441, 3446, 3447, 3458, 3463, 3464, 3474, 3479, 3480, 3505, 3510, 3511, 3521, 3526, 3527, 3538, 3543, 3544, 3563, 3568, 3569, 3580, 3585, 3586, 3597, 3602, 3603, 3630, 3635, 3636, 3647, 3652, 3653, 3663, 3668, 3669, 3680, 3685, 3686, 3696, 3701, 3702, 3711, 3730, 3736, 3744, 3759, 3766, 3777, 3796, 3802, 3821, 3830, 3832, 3834, 3845, 3852, 3869, 3870, 3876, 3891, 3896, 3899, 3901, 3902, 3903, 3905, 3906, 3908, 3909, 3920, 3922, 3925, 3930, 3932, 3933, 3935, 3939, 3951, 3952, 3954, 3955, 3957, 3958, 3960, 3961, 3968, 3973, 3974, 3976, 3977, 3979, 3980, 3982, 3993, 3999, 4002, 4003, 4008, 4012, 4015, 4016, 4032, 4080, 4084, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4231, 4234, 4241, 4244, 4245, 4246, 4247, 4249, 4250, 4252, 4253, 4254, 4255, 4256, 4258, 4259, 4261, 4262, 4264, 4265, 4267, 4268, 4270, 4271, 4272, 4274, 4276, 4277, 4280, 4282, 4283, 4285, 4286, 4287, 4288, 4289, 4291, 4292, 4294, 4295, 4297, 4298, 4299, 4301, 4304, 4305, 4310, 4311, 4312, 4314, 4318, 4321, 4322, 4331, 4337, 4340, 4341, 4350, 4354, 4356, 4359, 4360, 4361, 4369, 4371, 4374, 4376, 4380, 4382, 4397, 4404, 4407, 4408, 4417, 4421, 4424, 4426, 4429, 4430, 4431, 4432, 4440, 4446, 4449, 4450, 4459, 4463, 4467, 4471, 4472, 4474, 4482, 4487, 4499, 4508, 4509, 4534, 4535, 4545, 4552, 4554, 4557, 4558, 4564, 4566, 4568, 4571, 4574, 4575, 4576, 4583, 4584, 4589, 4590, 4593, 4595, 4600, 4611, 4614, 4629, 4630, 4640, 4644, 4645, 4647, 4652, 4663, 4669, 4672, 4673, 4682, 4688, 4691, 4692, 4701, 4705, 4712, 4717, 4729, 4741, 4743, 4747, 4749, 4751, 4756, 4757, 4758, 4759, 4760, 4766, 4769, 4771, 4773, 4780, 4781, 4786, 4787, 4794, 4795, 4801, 4802, 4804, 4811, 4814, 4817, 4819, 4821, 4823, 4825, 4829, 4839, 4860, 4868, 4873, 4874, 4878, 4879, 4885, 4886, 4894, 4901, 4902, 4903, 4908, 4909, 4914, 4915, 4922, 4923, 4924, 4925, 4928, 4930, 4931, 4932, 4933, 4935, 4937, 4938, 4939, 4940, 4964, 5018, 5033, 5071, 5123, 5146, 5147, 5150, 5151, 5156, 5157, 5162, 5181, 5205, 5217, 5226, 5227, 5228, 5230, 5235, 5237, 5238, 5239, 5244, 5250, 5253, 5258, 5259, 5262, 5268, 5271, 5272, 5274, 5280, 5281, 5290, 5291, 5292, 5293, 5294, 5300, 5301, 5306, 5312, 5313, 5318, 5324, 5325, 5330, 5331, 5332, 5333, 5334, 5347, 5348, 5353, 5355, 5362], "savestate": [3, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646], "automatically": [3, 4, 16, 35, 48, 51, 60, 64, 105, 130, 240, 252, 347, 411, 423, 518, 570, 582, 677, 798, 849, 877, 1102, 1147, 1159, 1254, 1641, 1644, 1926, 2032, 2323, 2349, 2363, 2376, 2801, 2813, 3708, 3791, 4008, 4009, 4025, 4026, 4182, 4231, 4316, 4335, 4402, 4424, 4444, 4667, 4686, 4902, 4964, 5260], "select": [3, 64, 147, 165, 172, 235, 406, 565, 1143, 2323, 3704, 3885, 3920, 4380, 4644, 4958, 5281, 5370], "format": [3, 31, 35, 48, 53, 64, 185, 187, 232, 234, 235, 265, 328, 361, 403, 405, 406, 436, 499, 562, 564, 565, 595, 658, 822, 849, 914, 915, 918, 923, 931, 943, 951, 956, 964, 980, 994, 1006, 1014, 1030, 1036, 1044, 1050, 1058, 1140, 1142, 1143, 1172, 1235, 1263, 1271, 1284, 1288, 1307, 1318, 1327, 1372, 1376, 1377, 1379, 1401, 1436, 1441, 1450, 1456, 1462, 1464, 1465, 1471, 1503, 1512, 1537, 1563, 1567, 1644, 1673, 1674, 1675, 1713, 1732, 1742, 1743, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1898, 1929, 2016, 2024, 2323, 2330, 2337, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2634, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2813, 3712, 3757, 3759, 3760, 3761, 3765, 3767, 3772, 3781, 3782, 3796, 3801, 3831, 3873, 3888, 3909, 3924, 3933, 3934, 3935, 3939, 3950, 3951, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3968, 3972, 3974, 3975, 3977, 3978, 3980, 3981, 3999, 4012, 4084, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4206, 4223, 4224, 4247, 4248, 4251, 4253, 4254, 4257, 4260, 4262, 4263, 4266, 4268, 4269, 4271, 4272, 4275, 4278, 4280, 4281, 4284, 4286, 4287, 4289, 4290, 4292, 4293, 4296, 4297, 4389, 4592, 4655, 4773, 4774, 4779, 4787, 4788, 4793, 4803, 4804, 4805, 4806, 4809, 4810, 4811, 4812, 4877, 5281, 5282, 5331, 5333, 5334, 5338, 5359, 5361, 5367, 5368, 5369, 5370], "based": [3, 4, 16, 31, 35, 53, 64, 110, 147, 163, 165, 172, 234, 405, 564, 734, 761, 789, 806, 849, 912, 1142, 1332, 1336, 1372, 1377, 1388, 1398, 1401, 1471, 1786, 1815, 1831, 1847, 1863, 1926, 1951, 1952, 1974, 1993, 1994, 1997, 2000, 2001, 2155, 2160, 2285, 2309, 2323, 2337, 2349, 2363, 2376, 2808, 2868, 2936, 3005, 3013, 3382, 3834, 3905, 4006, 4037, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4084, 4086, 4299, 4370, 4432, 4519, 4595, 4614, 4617, 4634, 4716, 4825, 4836, 4863, 4870, 4891, 4898, 4899, 4902, 4919, 4920, 4922, 4964, 5023, 5038, 5046, 5123, 5178, 5214, 5227, 5235, 5238, 5244, 5246, 5247, 5270, 5274, 5276, 5286, 5287, 5288, 5289, 5331, 5333, 5334], "on": [3, 4, 8, 10, 12, 16, 25, 29, 31, 35, 39, 48, 51, 53, 57, 58, 60, 62, 64, 66, 69, 73, 86, 88, 90, 97, 103, 104, 110, 115, 118, 136, 139, 140, 142, 143, 144, 147, 163, 165, 169, 172, 182, 183, 184, 185, 193, 204, 205, 209, 211, 212, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 239, 240, 252, 255, 256, 259, 260, 261, 285, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 322, 326, 327, 328, 342, 343, 344, 345, 347, 354, 355, 356, 358, 359, 360, 361, 364, 375, 376, 380, 382, 383, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 408, 410, 411, 423, 426, 427, 430, 431, 432, 456, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 493, 497, 498, 499, 513, 514, 515, 516, 518, 523, 534, 535, 539, 541, 542, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 567, 569, 570, 582, 585, 586, 589, 590, 591, 615, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 652, 656, 657, 658, 672, 673, 674, 675, 677, 683, 693, 717, 734, 761, 765, 768, 769, 789, 806, 841, 849, 877, 904, 912, 913, 916, 917, 927, 936, 947, 960, 970, 974, 977, 990, 1010, 1020, 1024, 1036, 1040, 1054, 1065, 1083, 1102, 1113, 1114, 1118, 1120, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1142, 1143, 1146, 1147, 1159, 1162, 1163, 1166, 1167, 1168, 1192, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1229, 1233, 1234, 1235, 1249, 1250, 1251, 1252, 1254, 1267, 1281, 1291, 1300, 1310, 1318, 1323, 1332, 1333, 1336, 1342, 1343, 1345, 1352, 1357, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1432, 1441, 1444, 1447, 1450, 1453, 1456, 1457, 1458, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1499, 1503, 1508, 1537, 1542, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1641, 1644, 1669, 1670, 1682, 1689, 1725, 1758, 1776, 1786, 1790, 1806, 1815, 1819, 1831, 1835, 1847, 1851, 1863, 1867, 1884, 1903, 1906, 1913, 1916, 1918, 1922, 1926, 1930, 1932, 1934, 1935, 1951, 1952, 1957, 1959, 1964, 1966, 1969, 1974, 1983, 1990, 1993, 1994, 2001, 2024, 2027, 2028, 2032, 2036, 2039, 2047, 2050, 2064, 2066, 2073, 2075, 2079, 2083, 2087, 2089, 2091, 2093, 2095, 2100, 2102, 2106, 2109, 2115, 2117, 2127, 2129, 2136, 2138, 2145, 2150, 2155, 2160, 2171, 2181, 2182, 2189, 2194, 2198, 2202, 2204, 2205, 2211, 2215, 2218, 2224, 2229, 2231, 2236, 2238, 2245, 2248, 2249, 2255, 2259, 2261, 2263, 2282, 2285, 2291, 2309, 2311, 2318, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2393, 2407, 2421, 2435, 2445, 2449, 2459, 2463, 2473, 2487, 2499, 2504, 2508, 2517, 2521, 2530, 2534, 2543, 2547, 2556, 2560, 2569, 2573, 2582, 2586, 2595, 2599, 2608, 2612, 2621, 2625, 2634, 2638, 2647, 2651, 2660, 2664, 2673, 2677, 2686, 2690, 2699, 2703, 2712, 2716, 2725, 2729, 2738, 2742, 2751, 2755, 2764, 2768, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2798, 2800, 2803, 2808, 2814, 2816, 2842, 2844, 2867, 2868, 2871, 2875, 2883, 2888, 2890, 2936, 2963, 2969, 2980, 2986, 2997, 3003, 3005, 3011, 3013, 3019, 3030, 3036, 3047, 3053, 3064, 3070, 3081, 3087, 3097, 3103, 3114, 3120, 3130, 3136, 3147, 3153, 3163, 3169, 3180, 3186, 3197, 3203, 3214, 3220, 3231, 3237, 3248, 3254, 3265, 3271, 3282, 3288, 3298, 3304, 3315, 3321, 3332, 3338, 3348, 3354, 3365, 3371, 3382, 3388, 3390, 3396, 3407, 3413, 3441, 3447, 3458, 3464, 3474, 3480, 3505, 3511, 3521, 3527, 3538, 3544, 3563, 3569, 3580, 3586, 3597, 3603, 3608, 3616, 3630, 3636, 3647, 3653, 3663, 3669, 3680, 3686, 3696, 3702, 3708, 3711, 3718, 3719, 3722, 3727, 3730, 3746, 3750, 3752, 3753, 3757, 3760, 3777, 3782, 3791, 3796, 3799, 3821, 3834, 3836, 3838, 3851, 3861, 3864, 3869, 3871, 3872, 3873, 3874, 3875, 3881, 3896, 3905, 3920, 3922, 3932, 3951, 3957, 3963, 3969, 3970, 3976, 3984, 3985, 3986, 3989, 3990, 3993, 3994, 3999, 4001, 4004, 4006, 4007, 4008, 4009, 4012, 4014, 4020, 4021, 4030, 4034, 4035, 4036, 4037, 4038, 4039, 4043, 4046, 4047, 4049, 4050, 4057, 4058, 4059, 4060, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4080, 4084, 4086, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4158, 4163, 4168, 4172, 4173, 4178, 4182, 4183, 4188, 4203, 4206, 4215, 4219, 4220, 4225, 4229, 4241, 4255, 4264, 4273, 4282, 4297, 4298, 4299, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4370, 4381, 4383, 4392, 4404, 4407, 4421, 4426, 4429, 4432, 4446, 4449, 4463, 4465, 4466, 4467, 4471, 4489, 4492, 4494, 4498, 4503, 4519, 4525, 4529, 4552, 4554, 4557, 4571, 4574, 4580, 4595, 4599, 4601, 4607, 4614, 4617, 4620, 4624, 4634, 4646, 4648, 4658, 4669, 4672, 4688, 4691, 4716, 4717, 4750, 4758, 4759, 4766, 4772, 4780, 4781, 4786, 4787, 4794, 4795, 4801, 4803, 4805, 4811, 4814, 4825, 4828, 4830, 4831, 4833, 4836, 4842, 4845, 4846, 4863, 4868, 4870, 4873, 4875, 4878, 4891, 4898, 4899, 4900, 4901, 4902, 4908, 4909, 4914, 4915, 4919, 4920, 4921, 4922, 4923, 4927, 4928, 4930, 4931, 4932, 4940, 4941, 4943, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4969, 4970, 4972, 4973, 4976, 4979, 4981, 4982, 4984, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5002, 5003, 5006, 5008, 5010, 5011, 5013, 5014, 5016, 5017, 5018, 5020, 5021, 5023, 5024, 5026, 5027, 5029, 5030, 5032, 5033, 5038, 5046, 5062, 5064, 5065, 5067, 5068, 5070, 5071, 5073, 5074, 5076, 5077, 5079, 5080, 5082, 5083, 5085, 5086, 5088, 5089, 5091, 5093, 5095, 5096, 5098, 5099, 5101, 5102, 5105, 5107, 5108, 5110, 5111, 5113, 5114, 5116, 5117, 5119, 5120, 5122, 5123, 5125, 5126, 5128, 5129, 5132, 5134, 5136, 5137, 5140, 5142, 5143, 5145, 5146, 5149, 5151, 5155, 5157, 5161, 5163, 5165, 5166, 5168, 5169, 5171, 5172, 5174, 5175, 5177, 5178, 5180, 5181, 5184, 5186, 5187, 5189, 5190, 5192, 5193, 5196, 5198, 5199, 5201, 5202, 5204, 5205, 5207, 5208, 5210, 5211, 5213, 5214, 5217, 5220, 5223, 5225, 5226, 5227, 5230, 5233, 5235, 5238, 5239, 5244, 5246, 5247, 5250, 5267, 5270, 5272, 5274, 5276, 5278, 5281, 5286, 5288, 5289, 5300, 5301, 5306, 5312, 5313, 5318, 5324, 5325, 5330, 5331, 5333, 5334, 5339, 5342, 5347, 5348, 5349, 5352, 5355, 5359, 5366, 5367, 5368], "eg": [3, 64, 2309], "savestatevector": [3, 64, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659], "forstatevector": [3, 64, 66, 74, 75, 79, 95, 101, 113, 120, 123, 162, 179, 186, 253, 276, 299, 300, 310, 311, 318, 322, 327, 424, 447, 470, 471, 481, 482, 489, 493, 498, 583, 606, 629, 630, 640, 641, 648, 652, 657, 904, 1160, 1183, 1206, 1207, 1217, 1218, 1225, 1229, 1234, 1388, 1453, 1526, 1772, 1906, 1926, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2166, 2168, 2182, 2184, 2198, 2211, 2224, 2232, 2238, 2252, 2255, 2323, 2349, 2363, 2459, 2504, 2517, 2530, 2621, 2647, 2660, 2686, 2738, 2777, 2778, 2788, 2789, 2795, 2914, 2918, 2923, 3757, 3763, 3874, 4055, 4376, 4380, 4384, 4385, 4386, 4400, 4424, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4715, 4718, 4719, 4723, 4724, 4727, 4737, 4740, 4803, 4807, 5250, 5284, 5291, 5292, 5293, 5294, 5337, 5338, 5340, 5341, 5342, 5347, 5348, 5349, 5350, 5361, 5364, 5369, 5370], "savedensitymatrix": [3, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555], "density": [3, 64, 302, 315, 323, 473, 486, 494, 632, 645, 653, 1209, 1222, 1230, 2183, 2192, 2204, 2208, 2217, 2218, 2248, 2261, 2323, 2349, 2403, 2543, 2699, 2780, 2792, 2869, 2871, 2875, 4376, 4377, 4380, 4384, 4385, 4386, 4393, 4398, 4400, 4401, 4613, 4640, 4651, 4666, 4715, 4718, 4722, 4723, 4724, 4727, 4730, 4740, 5291, 5292, 5364, 5370], "matrix": [3, 16, 28, 44, 51, 64, 130, 180, 186, 187, 188, 190, 204, 205, 209, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 241, 245, 249, 250, 257, 258, 262, 263, 264, 268, 273, 275, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 305, 314, 315, 316, 318, 320, 323, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 346, 349, 350, 351, 357, 360, 361, 362, 363, 364, 375, 376, 380, 383, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 408, 412, 416, 420, 421, 428, 429, 433, 434, 435, 439, 444, 446, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 473, 476, 485, 486, 487, 489, 491, 494, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 517, 520, 521, 522, 523, 534, 535, 539, 542, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 567, 571, 575, 579, 580, 587, 588, 592, 593, 594, 598, 603, 605, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 632, 635, 644, 645, 646, 648, 650, 653, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 676, 679, 680, 681, 798, 849, 852, 877, 984, 998, 1034, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1152, 1156, 1157, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1182, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1209, 1212, 1221, 1222, 1223, 1225, 1227, 1230, 1235, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1253, 1256, 1257, 1258, 1294, 1314, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1374, 1382, 1387, 1389, 1393, 1394, 1396, 1401, 1402, 1459, 1475, 1476, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1644, 1706, 1753, 1769, 1786, 1800, 1829, 1845, 1861, 1877, 1879, 1895, 1906, 1918, 1948, 1949, 1959, 1968, 1985, 1995, 1996, 1997, 2024, 2028, 2039, 2053, 2064, 2075, 2084, 2089, 2102, 2111, 2117, 2122, 2131, 2138, 2170, 2182, 2192, 2198, 2201, 2204, 2206, 2211, 2214, 2217, 2218, 2224, 2226, 2230, 2231, 2238, 2244, 2248, 2250, 2255, 2258, 2261, 2264, 2323, 2349, 2363, 2376, 2403, 2543, 2582, 2673, 2699, 2712, 2764, 2780, 2783, 2792, 2793, 2795, 2797, 2814, 2816, 2830, 2846, 2855, 2856, 2857, 2869, 2870, 2872, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2883, 2884, 2887, 2909, 2918, 2927, 2932, 4299, 4301, 4304, 4313, 4316, 4317, 4318, 4319, 4321, 4329, 4334, 4335, 4336, 4337, 4338, 4340, 4348, 4353, 4356, 4359, 4373, 4376, 4377, 4380, 4384, 4385, 4386, 4393, 4398, 4400, 4401, 4402, 4403, 4404, 4405, 4407, 4415, 4420, 4422, 4423, 4424, 4426, 4429, 4435, 4437, 4442, 4444, 4445, 4446, 4447, 4449, 4457, 4462, 4463, 4467, 4485, 4487, 4509, 4515, 4516, 4519, 4535, 4541, 4542, 4550, 4554, 4557, 4560, 4565, 4568, 4571, 4574, 4582, 4584, 4592, 4593, 4612, 4613, 4614, 4626, 4630, 4636, 4637, 4640, 4651, 4666, 4667, 4668, 4669, 4670, 4672, 4680, 4685, 4686, 4687, 4688, 4689, 4691, 4699, 4704, 4715, 4718, 4724, 4726, 4727, 4730, 4740, 4745, 4746, 4748, 4768, 4770, 4821, 4839, 4842, 5008, 5132, 5227, 5236, 5238, 5241, 5246, 5247, 5250, 5252, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5291, 5292, 5340, 5341, 5345, 5353, 5362, 5364, 5367, 5370], "etc": [3, 16, 33, 48, 53, 64, 203, 278, 374, 449, 533, 608, 929, 949, 962, 1012, 1027, 1042, 1056, 1112, 1185, 1269, 1285, 1304, 1434, 1510, 1644, 1693, 1779, 1822, 1838, 1854, 1870, 1898, 1906, 1959, 2032, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2705, 2718, 2731, 2744, 2757, 2770, 3720, 3922, 4519, 4901, 4923, 5166, 5230], ".)": [3, 25, 33, 64, 136, 143, 203, 255, 256, 278, 285, 374, 426, 427, 449, 456, 533, 585, 586, 608, 615, 877, 929, 949, 962, 1012, 1027, 1042, 1056, 1112, 1162, 1163, 1185, 1192, 1269, 1285, 1304, 1434, 1458, 1510, 1779, 1822, 1838, 1854, 1870, 1906, 1959, 2001, 2032, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2705, 2718, 2731, 2744, 2757, 2770, 2875, 2885, 3796, 3909, 4219, 4708, 4880, 4967, 4973, 5117, 5137, 5169, 5208, 5342, 5362], "reduced": [3, 64, 143, 302, 473, 632, 1209, 1382, 1383, 1384, 1385, 1386, 1427, 1503, 1912, 1946, 1963, 2012, 2016, 2025, 2029, 2030, 2046, 2055, 2063, 2065, 2078, 2144, 2187, 2243, 2543, 2780, 4570, 4715, 4723, 4724, 4857, 5151, 5369], "densit": 3, "supported": [3, 12, 16, 31, 35, 39, 51, 57, 62, 64, 83, 110, 119, 127, 132, 135, 153, 163, 164, 171, 178, 187, 232, 403, 562, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 832, 833, 841, 849, 850, 856, 861, 869, 877, 878, 883, 888, 896, 904, 1140, 1342, 1379, 1401, 1641, 1642, 1644, 1815, 1926, 1929, 2028, 2039, 2060, 2064, 2282, 2323, 2337, 2349, 2363, 2376, 2417, 2798, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3730, 3748, 3779, 3781, 3782, 3783, 3789, 3792, 3793, 3796, 3801, 3819, 3896, 3932, 3963, 3976, 4008, 4013, 4014, 4020, 4032, 4080, 4084, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4241, 4255, 4273, 4297, 4814, 4930, 5102, 5150, 5151, 5156, 5157, 5162, 5178, 5205, 5226, 5237, 5250, 5335, 5347, 5359], "however": [3, 10, 29, 31, 35, 39, 44, 48, 64, 143, 147, 165, 172, 186, 235, 252, 406, 423, 565, 582, 806, 904, 1143, 1159, 1318, 1379, 1387, 1499, 1987, 1994, 2068, 2132, 2318, 2323, 3814, 3862, 4182, 4241, 4463, 4878, 4915, 4922, 4928, 4930, 4938, 4958, 5021, 5117, 5143, 5214, 5217, 5281], "other": [3, 16, 25, 28, 31, 35, 39, 44, 48, 53, 54, 97, 142, 151, 169, 176, 211, 216, 235, 285, 334, 382, 387, 406, 456, 505, 541, 546, 565, 615, 664, 806, 923, 934, 943, 954, 956, 968, 970, 983, 986, 997, 1006, 1018, 1020, 1033, 1036, 1048, 1050, 1061, 1083, 1120, 1124, 1143, 1192, 1241, 1263, 1275, 1277, 1292, 1296, 1312, 1319, 1330, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1379, 1380, 1389, 1392, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1439, 1441, 1442, 1448, 1453, 1459, 1475, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1515, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1641, 1644, 1667, 1668, 1721, 1746, 1748, 1750, 1752, 1753, 1768, 1772, 1784, 1786, 1799, 1802, 1813, 1815, 1828, 1831, 1844, 1847, 1860, 1863, 1876, 1879, 1894, 1899, 1903, 1905, 1913, 1914, 1934, 1937, 1954, 1957, 1958, 1964, 2024, 2027, 2033, 2036, 2038, 2047, 2048, 2056, 2058, 2066, 2070, 2073, 2074, 2079, 2085, 2087, 2088, 2093, 2098, 2100, 2101, 2106, 2113, 2115, 2116, 2127, 2133, 2136, 2137, 2145, 2146, 2163, 2171, 2178, 2181, 2189, 2196, 2202, 2209, 2215, 2221, 2223, 2233, 2236, 2237, 2245, 2246, 2253, 2259, 2287, 2323, 2337, 2389, 2401, 2403, 2415, 2417, 2429, 2431, 2443, 2445, 2457, 2459, 2471, 2504, 2515, 2517, 2528, 2530, 2541, 2543, 2554, 2556, 2567, 2569, 2580, 2582, 2593, 2595, 2606, 2608, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2699, 2710, 2712, 2723, 2725, 2736, 2738, 2749, 2751, 2762, 2764, 2775, 2814, 2816, 2818, 2826, 2831, 2833, 2834, 2839, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3718, 3725, 3766, 3876, 3935, 3965, 3966, 3973, 3982, 4003, 4008, 4016, 4094, 4282, 4301, 4304, 4305, 4310, 4318, 4321, 4322, 4331, 4337, 4340, 4341, 4350, 4356, 4359, 4360, 4369, 4381, 4382, 4397, 4404, 4407, 4408, 4417, 4426, 4429, 4430, 4431, 4440, 4446, 4449, 4450, 4459, 4465, 4466, 4467, 4471, 4472, 4473, 4474, 4482, 4489, 4490, 4492, 4493, 4494, 4498, 4499, 4500, 4501, 4514, 4521, 4524, 4525, 4529, 4530, 4540, 4552, 4554, 4557, 4558, 4564, 4571, 4574, 4575, 4576, 4590, 4599, 4600, 4611, 4616, 4619, 4620, 4624, 4625, 4635, 4645, 4646, 4647, 4652, 4663, 4669, 4672, 4673, 4682, 4688, 4691, 4692, 4701, 4882, 4915, 4922, 4958, 4964, 4967, 5007, 5014, 5105, 5169, 5202, 5214, 5230, 5231, 5277, 5281, 5331, 5333, 5334], "must": [3, 8, 12, 16, 25, 28, 35, 39, 47, 48, 53, 57, 64, 66, 88, 97, 104, 105, 118, 130, 133, 139, 143, 165, 172, 198, 201, 213, 234, 235, 347, 369, 372, 384, 405, 406, 518, 528, 531, 543, 564, 565, 677, 682, 693, 709, 849, 877, 912, 920, 923, 934, 936, 939, 943, 954, 956, 968, 970, 983, 997, 999, 1006, 1018, 1033, 1036, 1048, 1050, 1061, 1107, 1110, 1121, 1142, 1143, 1254, 1259, 1263, 1275, 1292, 1312, 1330, 1342, 1373, 1381, 1392, 1439, 1443, 1471, 1480, 1515, 1641, 1642, 1643, 1644, 1666, 1675, 1700, 1768, 1784, 1799, 1813, 1815, 1828, 1844, 1860, 1876, 1894, 1901, 1903, 1913, 1926, 1956, 1957, 1964, 2024, 2027, 2035, 2036, 2047, 2066, 2072, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2135, 2136, 2145, 2154, 2171, 2180, 2189, 2202, 2215, 2235, 2245, 2259, 2311, 2323, 2333, 2349, 2359, 2363, 2372, 2376, 2385, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2530, 2541, 2554, 2567, 2580, 2582, 2593, 2606, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2699, 2710, 2712, 2723, 2725, 2736, 2738, 2749, 2751, 2762, 2764, 2775, 2856, 2857, 2861, 2886, 2887, 2914, 2923, 2932, 3708, 3723, 3730, 3737, 3738, 3739, 3752, 3779, 3781, 3782, 3789, 3870, 3935, 3979, 4013, 4014, 4103, 4182, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4241, 4255, 4264, 4273, 4282, 4297, 4463, 4487, 4718, 4856, 4857, 4873, 4875, 4884, 4892, 4922, 4930, 5077, 5089, 5143, 5151, 5154, 5160, 5178, 5202, 5240, 5241, 5271, 5280, 5281, 5290, 5333, 5334, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "run": [3, 8, 10, 16, 25, 30, 33, 35, 44, 48, 51, 53, 60, 62, 64, 66, 68, 69, 70, 73, 78, 86, 92, 94, 97, 98, 103, 104, 110, 112, 115, 116, 117, 118, 119, 122, 136, 138, 139, 142, 147, 186, 240, 251, 252, 347, 411, 422, 423, 518, 570, 581, 582, 677, 765, 912, 913, 916, 917, 918, 956, 1147, 1158, 1159, 1254, 1641, 1644, 1666, 1706, 2277, 2285, 2295, 2297, 2301, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2473, 2477, 2487, 2491, 2800, 2844, 2894, 2898, 2909, 2914, 2915, 2918, 2923, 2924, 2927, 2932, 2933, 2936, 2942, 2945, 2951, 2954, 2960, 2963, 2971, 2977, 2980, 2988, 2994, 2997, 3005, 3013, 3021, 3027, 3030, 3038, 3044, 3047, 3055, 3061, 3064, 3072, 3078, 3081, 3089, 3094, 3097, 3105, 3111, 3114, 3122, 3127, 3130, 3138, 3144, 3147, 3155, 3160, 3163, 3171, 3177, 3180, 3188, 3194, 3197, 3205, 3211, 3214, 3222, 3228, 3231, 3239, 3245, 3248, 3256, 3262, 3265, 3273, 3279, 3282, 3290, 3295, 3298, 3306, 3312, 3315, 3323, 3329, 3332, 3340, 3345, 3348, 3356, 3362, 3365, 3373, 3379, 3382, 3388, 3390, 3398, 3404, 3407, 3415, 3421, 3424, 3430, 3433, 3438, 3441, 3449, 3455, 3458, 3466, 3471, 3474, 3488, 3493, 3496, 3502, 3505, 3513, 3518, 3521, 3529, 3535, 3538, 3546, 3551, 3554, 3560, 3563, 3571, 3577, 3580, 3588, 3594, 3597, 3605, 3610, 3613, 3618, 3621, 3627, 3630, 3638, 3644, 3647, 3655, 3660, 3663, 3671, 3677, 3680, 3688, 3693, 3696, 3708, 3718, 3730, 3796, 3803, 3816, 3819, 3834, 3838, 3851, 3864, 3869, 3876, 3885, 3888, 3891, 3896, 3909, 3920, 3932, 3963, 3976, 4182, 4252, 4270, 4813, 4833, 4868, 4900, 4915, 4921, 4943, 4948, 4951, 4954, 4957, 4960, 4961, 4963, 4964, 4966, 4969, 4972, 4973, 4975, 4978, 4981, 4984, 4987, 4990, 4993, 4996, 4999, 5002, 5006, 5010, 5013, 5014, 5016, 5020, 5023, 5026, 5029, 5032, 5058, 5064, 5067, 5070, 5073, 5076, 5079, 5082, 5085, 5088, 5091, 5095, 5098, 5101, 5104, 5107, 5110, 5113, 5116, 5119, 5122, 5125, 5128, 5132, 5136, 5137, 5139, 5142, 5145, 5149, 5155, 5161, 5165, 5168, 5171, 5174, 5177, 5180, 5183, 5186, 5189, 5192, 5195, 5198, 5201, 5204, 5205, 5207, 5210, 5213, 5214, 5216, 5217, 5219, 5222, 5225, 5226, 5227, 5235, 5238, 5250, 5257, 5342, 5348, 5349, 5355, 5364, 5366, 5367, 5369, 5370], "statevectorsimulator": [3, 64, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 5364], "(and": [3, 64, 239, 240, 252, 347, 410, 411, 423, 518, 569, 570, 582, 677, 1146, 1147, 1159, 1254, 4964], "unitarysimulator": [3, 64, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 5364], "append": [3, 11, 31, 64, 197, 210, 211, 238, 368, 381, 382, 409, 527, 540, 541, 568, 970, 1106, 1119, 1120, 1145, 1376, 1379, 1442, 1503, 1983, 1990, 2798, 3994, 4009, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 4895, 4897, 4916, 4918, 5339, 5353], "every": [3, 16, 28, 31, 35, 44, 48, 64, 683, 798, 841, 1402, 1441, 1477, 1537, 1551, 1641, 1901, 1916, 1918, 1934, 1956, 1966, 2035, 2050, 2072, 2083, 2095, 2109, 2129, 2135, 2150, 2154, 2180, 2194, 2205, 2229, 2231, 2235, 2249, 2263, 2323, 2349, 2798, 3730, 3901, 4001, 4014, 4182, 4219, 4578, 4976, 5021, 5226, 5263], "`(": [3, 64], "saveunitary": [3, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698], "default": [3, 16, 31, 35, 44, 48, 51, 56, 64, 66, 70, 75, 79, 86, 95, 104, 107, 110, 113, 123, 142, 147, 162, 165, 172, 180, 188, 190, 232, 233, 235, 253, 255, 256, 267, 276, 277, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 328, 363, 403, 404, 406, 424, 426, 427, 438, 447, 448, 458, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 492, 493, 494, 495, 496, 499, 562, 563, 565, 583, 585, 586, 597, 606, 607, 617, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 652, 653, 654, 655, 658, 682, 709, 773, 798, 822, 841, 849, 861, 869, 877, 888, 896, 904, 931, 951, 964, 970, 975, 980, 994, 1014, 1025, 1030, 1044, 1058, 1063, 1140, 1141, 1143, 1160, 1162, 1163, 1174, 1183, 1184, 1194, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1228, 1229, 1230, 1231, 1232, 1235, 1271, 1282, 1288, 1293, 1296, 1302, 1307, 1313, 1327, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1388, 1390, 1392, 1407, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1436, 1441, 1448, 1450, 1456, 1458, 1460, 1462, 1471, 1480, 1487, 1492, 1497, 1512, 1520, 1531, 1537, 1540, 1545, 1548, 1551, 1553, 1556, 1558, 1561, 1563, 1565, 1567, 1641, 1644, 1673, 1679, 1710, 1732, 1753, 1760, 1781, 1791, 1796, 1802, 1810, 1820, 1825, 1836, 1841, 1852, 1857, 1868, 1873, 1879, 1886, 1934, 2032, 2037, 2122, 2126, 2177, 2195, 2277, 2285, 2310, 2323, 2326, 2333, 2337, 2338, 2345, 2349, 2352, 2359, 2363, 2366, 2372, 2376, 2379, 2385, 2389, 2398, 2412, 2417, 2426, 2431, 2440, 2445, 2454, 2459, 2468, 2504, 2512, 2517, 2525, 2530, 2538, 2543, 2551, 2556, 2564, 2569, 2577, 2582, 2590, 2595, 2603, 2608, 2616, 2621, 2629, 2634, 2642, 2647, 2655, 2660, 2668, 2673, 2681, 2686, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2813, 2814, 2816, 2823, 2824, 2825, 2830, 2831, 2837, 2838, 2845, 2847, 2848, 2855, 2857, 2858, 2859, 2861, 2886, 2887, 2889, 2909, 2918, 2927, 2932, 3005, 3013, 3382, 3417, 3704, 3708, 3721, 3730, 3750, 3752, 3766, 3779, 3782, 3789, 3793, 3798, 3832, 3838, 3882, 3888, 3891, 3901, 3905, 3906, 3909, 3920, 3932, 3973, 3976, 3982, 4003, 4016, 4023, 4024, 4031, 4157, 4162, 4167, 4172, 4177, 4182, 4193, 4197, 4219, 4233, 4241, 4254, 4255, 4272, 4273, 4287, 4298, 4301, 4304, 4309, 4316, 4318, 4321, 4330, 4335, 4337, 4340, 4349, 4356, 4359, 4368, 4380, 4388, 4389, 4390, 4392, 4394, 4395, 4398, 4402, 4404, 4407, 4416, 4421, 4424, 4426, 4429, 4432, 4438, 4444, 4446, 4449, 4458, 4463, 4465, 4466, 4467, 4471, 4480, 4485, 4489, 4491, 4492, 4494, 4497, 4498, 4506, 4509, 4512, 4513, 4515, 4516, 4518, 4522, 4525, 4528, 4529, 4533, 4535, 4538, 4539, 4541, 4542, 4544, 4547, 4552, 4554, 4557, 4563, 4568, 4571, 4574, 4578, 4582, 4584, 4587, 4588, 4591, 4592, 4603, 4604, 4605, 4607, 4608, 4609, 4614, 4617, 4620, 4623, 4624, 4626, 4628, 4630, 4633, 4634, 4636, 4637, 4639, 4644, 4654, 4655, 4656, 4658, 4660, 4661, 4664, 4667, 4669, 4672, 4681, 4686, 4688, 4691, 4700, 4705, 4714, 4719, 4720, 4723, 4725, 4726, 4727, 4730, 4731, 4732, 4733, 4734, 4736, 4739, 4740, 4747, 4755, 4763, 4769, 4778, 4784, 4792, 4799, 4811, 4812, 4813, 4819, 4823, 4825, 4829, 4839, 4847, 4848, 4849, 4896, 4903, 4907, 4912, 4915, 4917, 4922, 4923, 4927, 4964, 4976, 5108, 5151, 5157, 5193, 5202, 5214, 5226, 5230, 5235, 5237, 5250, 5281, 5282, 5283, 5284, 5285, 5299, 5304, 5311, 5316, 5323, 5328, 5331, 5332, 5333, 5334, 5337, 5338, 5340, 5341, 5343, 5344, 5345, 5347, 5348, 5349, 5352, 5354, 5355, 5356, 5357, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "label": [3, 31, 35, 39, 48, 64, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 240, 246, 251, 252, 253, 276, 291, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 322, 323, 324, 325, 326, 327, 335, 336, 346, 347, 349, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 411, 417, 422, 423, 424, 447, 462, 464, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 494, 495, 496, 497, 498, 506, 507, 517, 518, 520, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 570, 576, 581, 582, 583, 606, 621, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 652, 653, 654, 655, 656, 657, 665, 666, 676, 677, 679, 923, 943, 956, 970, 975, 986, 1006, 1020, 1025, 1036, 1050, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1147, 1153, 1158, 1159, 1160, 1183, 1198, 1200, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1229, 1230, 1231, 1232, 1233, 1234, 1242, 1243, 1253, 1254, 1256, 1263, 1277, 1282, 1296, 1302, 1319, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1374, 1389, 1390, 1394, 1401, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1460, 1478, 1479, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1504, 1517, 1519, 1520, 1522, 1524, 1526, 1530, 1531, 1533, 1535, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1552, 1553, 1556, 1558, 1560, 1561, 1564, 1565, 1586, 1648, 1649, 1730, 1731, 1733, 1734, 1735, 1736, 1738, 1739, 1741, 1753, 1760, 1772, 1786, 1791, 1802, 1815, 1820, 1831, 1836, 1847, 1852, 1863, 1868, 1879, 1886, 2389, 2395, 2403, 2409, 2417, 2423, 2431, 2437, 2445, 2451, 2459, 2465, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2801, 2804, 2848, 2857, 2864, 4055, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4148, 4153, 4264, 4282, 4363, 4386, 4388, 4433, 4463, 4484, 4487, 4508, 4515, 4516, 4519, 4531, 4534, 4541, 4542, 4583, 4591, 4603, 4614, 4626, 4629, 4636, 4637, 4651, 4654, 5068, 5270, 5274, 5287, 5289, 5290, 5333, 5334, 5338, 5352, 5367], "hence": [3, 64, 1373, 1994, 2816, 2826, 4304, 4310, 4321, 4331, 4340, 4350, 4359, 4369, 4407, 4417, 4429, 4440, 4449, 4459, 4482, 4525, 4557, 4564, 4574, 4590, 4614, 4672, 4682, 4691, 4701], "any": [3, 8, 10, 16, 31, 35, 39, 44, 47, 48, 51, 53, 64, 66, 76, 80, 82, 85, 91, 92, 96, 101, 102, 106, 114, 124, 126, 129, 131, 134, 141, 145, 148, 157, 158, 161, 166, 172, 173, 192, 193, 197, 235, 255, 256, 277, 289, 364, 368, 406, 426, 427, 448, 460, 523, 527, 565, 585, 586, 607, 619, 683, 693, 701, 709, 717, 761, 773, 781, 798, 806, 814, 822, 831, 833, 841, 849, 861, 869, 877, 888, 896, 904, 912, 918, 927, 933, 947, 953, 960, 967, 974, 982, 990, 996, 1004, 1010, 1017, 1024, 1032, 1040, 1047, 1054, 1060, 1063, 1065, 1067, 1071, 1072, 1087, 1088, 1102, 1106, 1143, 1162, 1163, 1184, 1196, 1267, 1274, 1281, 1290, 1300, 1309, 1318, 1323, 1329, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1432, 1438, 1441, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1508, 1514, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1644, 1700, 1758, 1767, 1776, 1783, 1790, 1798, 1806, 1812, 1819, 1827, 1835, 1843, 1851, 1859, 1867, 1875, 1884, 1893, 1901, 1924, 1925, 1926, 1934, 1937, 1948, 1949, 1950, 1956, 2024, 2032, 2035, 2037, 2072, 2135, 2154, 2180, 2235, 2271, 2274, 2282, 2283, 2291, 2292, 2297, 2323, 2333, 2334, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2393, 2400, 2407, 2414, 2421, 2428, 2435, 2442, 2449, 2456, 2463, 2470, 2508, 2514, 2521, 2527, 2534, 2540, 2547, 2553, 2560, 2566, 2573, 2579, 2586, 2592, 2599, 2605, 2612, 2618, 2625, 2631, 2638, 2644, 2651, 2657, 2664, 2670, 2677, 2683, 2690, 2696, 2703, 2709, 2716, 2722, 2729, 2735, 2742, 2748, 2755, 2761, 2768, 2774, 2804, 2813, 2848, 2862, 2864, 2886, 2887, 2889, 2894, 2916, 2925, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3011, 3012, 3019, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3388, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3705, 3709, 3711, 3723, 3730, 3731, 3737, 3738, 3739, 3767, 3779, 3781, 3782, 3789, 3792, 3793, 3796, 3798, 3814, 3823, 3830, 3838, 3862, 3864, 3876, 3885, 3897, 3900, 3903, 3906, 3909, 3916, 3918, 3923, 3926, 3929, 3942, 3945, 3957, 3963, 3993, 3999, 4003, 4008, 4012, 4016, 4023, 4024, 4031, 4032, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4205, 4208, 4211, 4214, 4217, 4221, 4223, 4231, 4241, 4246, 4267, 4298, 4390, 4398, 4519, 4568, 4605, 4614, 4656, 4664, 4708, 4709, 4717, 4812, 4817, 4819, 4821, 4823, 4825, 4847, 4848, 4895, 4896, 4899, 4915, 4916, 4917, 4920, 4922, 4923, 4930, 4938, 4964, 4973, 5003, 5014, 5023, 5117, 5120, 5123, 5137, 5163, 5178, 5193, 5199, 5205, 5211, 5217, 5220, 5226, 5230, 5231, 5232, 5233, 5234, 5237, 5239, 5244, 5250, 5270, 5278, 5281, 5283, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "additional": [3, 4, 44, 48, 53, 64, 69, 92, 105, 118, 326, 327, 497, 498, 656, 657, 691, 699, 707, 709, 715, 717, 723, 732, 741, 750, 759, 771, 779, 787, 796, 798, 804, 806, 812, 814, 820, 828, 833, 839, 841, 847, 849, 859, 861, 867, 875, 877, 886, 888, 894, 896, 902, 910, 1233, 1234, 1318, 1342, 1447, 1503, 1526, 1537, 1551, 2318, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2445, 2459, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2851, 2854, 2861, 2877, 2878, 2883, 2888, 2889, 2914, 2923, 2932, 3708, 3711, 3730, 3748, 3766, 3779, 3781, 3782, 3789, 3792, 3793, 3796, 3813, 3823, 3830, 3864, 3868, 3935, 3954, 3999, 4012, 4020, 4158, 4162, 4163, 4168, 4173, 4178, 4183, 4188, 4218, 4255, 4261, 4273, 4279, 4316, 4335, 4363, 4376, 4385, 4392, 4394, 4395, 4402, 4424, 4433, 4444, 4487, 4519, 4607, 4608, 4609, 4614, 4640, 4650, 4658, 4660, 4661, 4667, 4686, 4717, 4747, 4769, 4830, 4878, 4938, 5117, 5140, 5151, 5178, 5237, 5270, 5274, 5278, 5331, 5350], "type": [3, 8, 10, 12, 31, 35, 39, 44, 53, 64, 76, 80, 85, 91, 96, 101, 102, 104, 106, 114, 124, 129, 141, 161, 162, 187, 191, 192, 195, 202, 235, 239, 309, 322, 342, 343, 344, 345, 366, 373, 406, 410, 480, 493, 513, 514, 515, 516, 525, 532, 565, 569, 639, 652, 672, 673, 674, 675, 726, 735, 744, 753, 790, 831, 888, 904, 913, 920, 936, 939, 966, 998, 1104, 1111, 1143, 1146, 1216, 1229, 1249, 1250, 1251, 1252, 1259, 1284, 1296, 1316, 1376, 1406, 1444, 1456, 1466, 1468, 1470, 1537, 1641, 1655, 1693, 1719, 1802, 1899, 1912, 1925, 1941, 1944, 1954, 1963, 1989, 2030, 2033, 2046, 2056, 2058, 2065, 2070, 2078, 2085, 2098, 2112, 2113, 2133, 2144, 2153, 2163, 2178, 2187, 2196, 2209, 2221, 2233, 2243, 2253, 2262, 2275, 2293, 2295, 2311, 2313, 2337, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2595, 2608, 2634, 2787, 2798, 2800, 2813, 2814, 2842, 2844, 2862, 2870, 2872, 2883, 3725, 3757, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3796, 3885, 3909, 3916, 3918, 3926, 3931, 3932, 3960, 3963, 3973, 3976, 3982, 3999, 4001, 4009, 4012, 4014, 4020, 4032, 4055, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4103, 4148, 4158, 4163, 4168, 4173, 4177, 4178, 4183, 4188, 4254, 4264, 4272, 4282, 4287, 4297, 4298, 4299, 4301, 4318, 4337, 4354, 4356, 4404, 4426, 4446, 4463, 4467, 4554, 4571, 4669, 4688, 4712, 4725, 4751, 4802, 4803, 4813, 4835, 4837, 4862, 4864, 4869, 4871, 4891, 4893, 4964, 5016, 5068, 5110, 5113, 5116, 5178, 5237, 5275, 5277, 5278, 5281, 5285, 5286, 5331, 5333, 5334, 5342, 5357], "require": [3, 10, 51, 53, 64, 92, 118, 798, 849, 1376, 1377, 1379, 1393, 1421, 1441, 1456, 1471, 1503, 1537, 1922, 1930, 2168, 2192, 2217, 4714, 4720, 4726, 5355], "specifying": [3, 35, 64, 93, 111, 187, 188, 190, 198, 363, 369, 528, 1063, 1107, 1376, 1379, 1441, 1456, 1462, 1464, 1503, 1537, 1934, 2265, 2269, 2808, 2813, 2867, 3725, 3736, 4032, 4041, 4577, 4579, 4839, 5342], "those": [3, 28, 53, 64, 904, 1001, 1005, 1036, 1072, 1088, 1096, 1263, 1293, 1313, 1906, 1945, 1959, 1985, 1996, 1998, 2015, 2024, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2218, 2224, 2238, 2255, 2311, 2318, 3789, 3823, 3833, 3868, 3901, 4229, 4241, 4607, 4658, 4842, 4878, 4927, 4964, 4973, 5033, 5042, 5077, 5089, 5137, 5143, 5146, 5178, 5193, 5226, 5230, 5237, 5331, 5333, 5334], "directly": [3, 10, 16, 33, 35, 48, 53, 64, 147, 172, 814, 1083, 1102, 1641, 1644, 1753, 1879, 1948, 2015, 2024, 2275, 2293, 2313, 2323, 2337, 2349, 2556, 2569, 3718, 3969, 3993, 4008, 4035, 4057, 4058, 4059, 4060, 4380, 4432, 4519, 4568, 4614, 4644, 4767, 4928, 5146, 5178, 5202, 5230], "one": [3, 10, 16, 28, 29, 31, 35, 39, 48, 53, 63, 64, 97, 103, 136, 143, 147, 156, 165, 172, 186, 193, 197, 231, 240, 253, 276, 342, 343, 344, 345, 364, 368, 402, 411, 424, 447, 513, 514, 515, 516, 523, 527, 561, 570, 583, 606, 672, 673, 674, 675, 763, 769, 798, 833, 841, 849, 850, 877, 878, 927, 934, 947, 954, 960, 968, 974, 983, 990, 997, 1000, 1010, 1018, 1024, 1033, 1040, 1048, 1054, 1061, 1063, 1065, 1071, 1087, 1102, 1106, 1139, 1147, 1160, 1183, 1249, 1250, 1251, 1252, 1267, 1275, 1281, 1292, 1300, 1312, 1318, 1323, 1330, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1402, 1406, 1407, 1410, 1432, 1439, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1508, 1515, 1520, 1526, 1531, 1537, 1542, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1641, 1644, 1666, 1700, 1708, 1711, 1722, 1758, 1768, 1772, 1776, 1784, 1790, 1799, 1806, 1813, 1815, 1819, 1828, 1835, 1844, 1851, 1860, 1867, 1876, 1884, 1891, 1894, 1898, 1901, 1923, 1928, 1937, 1946, 1956, 1982, 1983, 1990, 1998, 2001, 2018, 2021, 2023, 2024, 2025, 2032, 2035, 2055, 2063, 2072, 2135, 2154, 2166, 2180, 2216, 2235, 2265, 2269, 2285, 2316, 2322, 2393, 2401, 2407, 2415, 2421, 2429, 2435, 2443, 2449, 2457, 2463, 2471, 2508, 2515, 2521, 2528, 2534, 2541, 2547, 2554, 2560, 2567, 2573, 2580, 2586, 2593, 2599, 2606, 2612, 2619, 2625, 2632, 2638, 2645, 2651, 2658, 2664, 2671, 2677, 2684, 2690, 2697, 2703, 2710, 2716, 2723, 2729, 2736, 2742, 2749, 2755, 2762, 2768, 2775, 2798, 2848, 2868, 2908, 3484, 3487, 3706, 3718, 3723, 3730, 3738, 3739, 3748, 3749, 3752, 3757, 3762, 3781, 3782, 3796, 3814, 3817, 3838, 3854, 3862, 3901, 3909, 3921, 3999, 4000, 4001, 4008, 4012, 4013, 4014, 4030, 4031, 4158, 4163, 4168, 4172, 4173, 4178, 4182, 4183, 4188, 4195, 4229, 4241, 4640, 4644, 4740, 4751, 4773, 4787, 4803, 4819, 4823, 4825, 4830, 4856, 4880, 4887, 4891, 4915, 4922, 4938, 4958, 4970, 4976, 4994, 5007, 5014, 5016, 5021, 5077, 5120, 5123, 5137, 5143, 5169, 5214, 5217, 5226, 5230, 5233, 5234, 5235, 5237, 5239, 5244, 5250, 5257, 5263, 5266, 5270, 5289, 5331, 5333, 5334, 5347, 5361], "some": [3, 8, 10, 25, 28, 29, 31, 35, 44, 48, 51, 53, 58, 64, 66, 86, 233, 262, 264, 321, 404, 433, 435, 492, 563, 592, 594, 651, 683, 743, 761, 849, 877, 904, 1102, 1141, 1169, 1171, 1228, 1374, 1379, 1388, 1399, 1475, 1503, 1526, 1555, 1556, 1558, 1641, 1644, 1772, 1912, 1922, 1930, 1934, 1935, 1963, 1983, 1987, 1988, 1990, 2024, 2030, 2032, 2046, 2065, 2078, 2144, 2161, 2165, 2166, 2187, 2232, 2243, 2272, 2323, 2349, 3704, 3723, 3728, 3739, 3796, 3798, 3811, 3814, 3823, 3838, 3862, 3868, 3870, 3909, 3993, 4392, 4607, 4658, 4811, 4812, 4875, 4922, 5003, 5042, 5050, 5137, 5142, 5145, 5178, 5190, 5202, 5263, 5331, 5333, 5334, 5359, 5369], "compatible": [3, 16, 31, 39, 48, 51, 64, 210, 238, 381, 409, 540, 568, 1119, 1145, 1442, 1644, 1648, 1649, 2001, 2277, 2297, 2323, 4008, 4297, 4922, 4970, 4972, 5017, 5117, 5119, 5180, 5192, 5278, 5355], "certain": [3, 6, 16, 25, 28, 44, 53, 64, 849, 877, 1641, 1922, 1930, 2311, 2323, 2349, 2363, 2376, 3708, 3730, 3876, 3932, 3963, 3976, 4031, 4182, 4255, 4273, 4834, 4958, 4964, 5332], "convenience": [3, 28, 64, 1102, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 1644, 1941, 1942, 1944, 2024, 2032, 2192, 2217, 2494, 2501, 3704, 3757, 3855, 3871, 4803, 5239, 5244], "accessed": [3, 30, 32, 64, 4288, 4291, 4354, 4463, 4487, 4519, 4568, 4614], "pershot": [3, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791], "=true": [3, 29, 56, 64, 198, 211, 369, 382, 528, 541, 849, 877, 1107, 1120, 1376, 1379, 1388, 1503, 1537, 1563, 1640, 1641, 1916, 1966, 2050, 2083, 2095, 2109, 2129, 2150, 2192, 2194, 2205, 2217, 2218, 2229, 2249, 2263, 2323, 2808, 2814, 2831, 3705, 3730, 3732, 3737, 3761, 3814, 3834, 3862, 3932, 3976, 4039, 4219, 4299, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4503, 4513, 4515, 4516, 4539, 4541, 4542, 4554, 4571, 4580, 4591, 4592, 4620, 4634, 4636, 4637, 4669, 4688, 4740, 4806, 5217, 5283, 5340, 5342, 5347, 5353, 5354, 5361, 5364, 5369], "kwarg": [3, 16, 31, 51, 56, 57, 64, 66, 235, 406, 565, 1143, 2282, 2283, 2291, 2292, 2323, 2333, 2345, 2349, 2359, 2372, 2385, 2798, 2808, 2814, 2916, 2925, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3011, 3012, 3019, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3388, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3731, 3897, 4282, 4297, 4298, 4301, 4318, 4337, 4356, 4376, 4385, 4404, 4426, 4432, 4446, 4467, 4491, 4513, 4515, 4516, 4522, 4525, 4539, 4541, 4542, 4554, 4571, 4591, 4617, 4634, 4636, 4637, 4640, 4650, 4669, 4688, 4747, 4769, 5226, 5229, 5260, 5268, 5272, 5281, 5290, 5293, 5294, 5331, 5332, 5333, 5334, 5349, 5353, 5354, 5355], "above": [3, 25, 28, 31, 35, 39, 48, 64, 165, 172, 262, 264, 433, 435, 592, 594, 769, 912, 1169, 1171, 1374, 1448, 1464, 1499, 1556, 1558, 1722, 2032, 2165, 2166, 2167, 2337, 2813, 2867, 3704, 4030, 4182, 4220, 4614, 4958, 5014, 5023, 5117, 5262, 5331, 5333, 5334, 5354, 5355, 5369], "resulting": [3, 10, 12, 48, 64, 92, 163, 285, 288, 456, 459, 615, 618, 1192, 1195, 1475, 1644, 1793, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2888, 2890, 2891, 2892, 4421, 4437, 4470, 4476, 4497, 4506, 4528, 4533, 4623, 4628, 4882, 5117], "list": [3, 16, 25, 30, 31, 33, 35, 39, 48, 51, 64, 66, 82, 84, 86, 88, 90, 93, 95, 97, 98, 101, 113, 118, 120, 121, 123, 126, 128, 130, 131, 133, 134, 140, 146, 147, 148, 149, 150, 151, 160, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 198, 203, 211, 231, 233, 234, 239, 244, 253, 255, 256, 259, 260, 261, 276, 278, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 316, 321, 322, 323, 324, 325, 342, 343, 344, 345, 354, 355, 356, 357, 359, 360, 361, 363, 364, 366, 369, 374, 382, 402, 404, 405, 410, 415, 424, 426, 427, 430, 431, 432, 447, 449, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 487, 492, 493, 494, 495, 496, 513, 514, 515, 516, 523, 525, 528, 533, 541, 561, 563, 564, 569, 574, 583, 585, 586, 589, 590, 591, 606, 608, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 646, 651, 652, 653, 654, 655, 672, 673, 674, 675, 687, 693, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 856, 864, 872, 882, 883, 891, 899, 907, 913, 916, 917, 918, 920, 923, 926, 939, 943, 946, 956, 959, 970, 973, 986, 989, 1003, 1005, 1006, 1009, 1020, 1023, 1036, 1039, 1050, 1053, 1063, 1099, 1102, 1104, 1107, 1112, 1120, 1139, 1141, 1142, 1146, 1151, 1160, 1162, 1163, 1166, 1167, 1168, 1183, 1185, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1223, 1228, 1229, 1230, 1231, 1232, 1249, 1250, 1251, 1252, 1259, 1263, 1266, 1277, 1280, 1296, 1299, 1318, 1319, 1322, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1431, 1441, 1442, 1443, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1507, 1517, 1519, 1522, 1524, 1526, 1527, 1530, 1533, 1535, 1537, 1538, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1641, 1642, 1643, 1644, 1654, 1655, 1667, 1674, 1676, 1677, 1679, 1682, 1683, 1684, 1693, 1700, 1706, 1711, 1716, 1719, 1725, 1730, 1731, 1733, 1734, 1735, 1738, 1739, 1741, 1753, 1757, 1772, 1775, 1786, 1789, 1802, 1805, 1815, 1818, 1831, 1834, 1847, 1850, 1863, 1866, 1879, 1883, 1901, 1903, 1906, 1910, 1925, 1928, 1929, 1940, 1945, 1956, 1957, 1959, 1961, 1985, 1988, 1991, 1996, 1999, 2001, 2003, 2005, 2007, 2008, 2011, 2012, 2015, 2016, 2019, 2022, 2025, 2027, 2028, 2032, 2035, 2036, 2039, 2043, 2053, 2055, 2059, 2063, 2064, 2072, 2073, 2075, 2076, 2084, 2087, 2089, 2091, 2100, 2102, 2104, 2115, 2117, 2119, 2124, 2135, 2136, 2138, 2142, 2154, 2155, 2158, 2160, 2165, 2168, 2180, 2181, 2182, 2185, 2198, 2199, 2211, 2212, 2224, 2232, 2235, 2236, 2238, 2240, 2252, 2255, 2256, 2265, 2267, 2269, 2271, 2272, 2274, 2282, 2285, 2287, 2290, 2291, 2311, 2315, 2321, 2323, 2333, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2389, 2392, 2403, 2406, 2417, 2420, 2431, 2434, 2445, 2448, 2459, 2462, 2487, 2498, 2501, 2502, 2504, 2507, 2517, 2520, 2530, 2533, 2543, 2546, 2556, 2559, 2569, 2572, 2582, 2585, 2595, 2598, 2608, 2611, 2621, 2624, 2634, 2637, 2647, 2650, 2660, 2663, 2673, 2676, 2686, 2689, 2699, 2702, 2712, 2715, 2725, 2728, 2738, 2741, 2751, 2754, 2764, 2767, 2777, 2778, 2779, 2780, 2781, 2782, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2793, 2798, 2801, 2802, 2804, 2805, 2806, 2807, 2808, 2813, 2814, 2816, 2817, 2830, 2842, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2862, 2863, 2865, 2867, 2869, 2870, 2871, 2872, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2907, 2915, 2924, 2933, 2936, 2963, 2965, 2968, 2969, 2980, 2982, 2985, 2986, 2997, 2999, 3002, 3003, 3005, 3007, 3010, 3011, 3013, 3015, 3018, 3019, 3030, 3032, 3035, 3036, 3047, 3049, 3052, 3053, 3064, 3066, 3069, 3070, 3081, 3083, 3086, 3087, 3097, 3099, 3102, 3103, 3114, 3116, 3119, 3120, 3130, 3132, 3135, 3136, 3147, 3149, 3152, 3153, 3163, 3165, 3168, 3169, 3180, 3182, 3185, 3186, 3197, 3199, 3202, 3203, 3214, 3216, 3219, 3220, 3231, 3233, 3236, 3237, 3248, 3250, 3253, 3254, 3265, 3267, 3270, 3271, 3282, 3284, 3287, 3288, 3298, 3300, 3303, 3304, 3315, 3317, 3320, 3321, 3332, 3334, 3337, 3338, 3348, 3350, 3353, 3354, 3365, 3367, 3370, 3371, 3382, 3384, 3387, 3388, 3390, 3392, 3395, 3396, 3407, 3409, 3412, 3413, 3441, 3443, 3446, 3447, 3458, 3460, 3463, 3464, 3474, 3476, 3479, 3480, 3483, 3486, 3505, 3507, 3510, 3511, 3521, 3523, 3526, 3527, 3538, 3540, 3543, 3544, 3563, 3565, 3568, 3569, 3580, 3582, 3585, 3586, 3597, 3599, 3602, 3603, 3630, 3632, 3635, 3636, 3647, 3649, 3652, 3653, 3663, 3665, 3668, 3669, 3680, 3682, 3685, 3686, 3696, 3698, 3701, 3702, 3705, 3708, 3719, 3723, 3728, 3730, 3737, 3738, 3739, 3740, 3751, 3753, 3757, 3760, 3761, 3762, 3763, 3764, 3779, 3780, 3781, 3782, 3787, 3789, 3792, 3793, 3796, 3801, 3820, 3823, 3833, 3835, 3838, 3851, 3857, 3858, 3860, 3864, 3865, 3866, 3868, 3873, 3874, 3875, 3876, 3880, 3884, 3896, 3901, 3906, 3931, 3932, 3935, 3936, 3937, 3957, 3963, 3965, 3969, 3970, 3973, 3976, 3982, 3983, 3986, 3990, 3991, 3993, 3999, 4000, 4001, 4002, 4012, 4013, 4014, 4015, 4034, 4041, 4042, 4048, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4187, 4218, 4219, 4220, 4222, 4229, 4246, 4249, 4252, 4255, 4258, 4261, 4264, 4267, 4270, 4273, 4276, 4279, 4282, 4294, 4297, 4298, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4376, 4381, 4383, 4385, 4388, 4389, 4390, 4392, 4394, 4395, 4402, 4404, 4407, 4426, 4429, 4446, 4449, 4465, 4466, 4467, 4468, 4470, 4471, 4473, 4476, 4486, 4487, 4488, 4489, 4490, 4492, 4493, 4494, 4495, 4497, 4498, 4500, 4501, 4503, 4504, 4507, 4514, 4515, 4516, 4517, 4519, 4523, 4525, 4528, 4529, 4531, 4541, 4542, 4554, 4557, 4568, 4571, 4574, 4577, 4579, 4580, 4589, 4591, 4599, 4601, 4603, 4604, 4605, 4607, 4608, 4609, 4614, 4618, 4620, 4623, 4624, 4626, 4636, 4637, 4640, 4646, 4648, 4650, 4654, 4655, 4656, 4658, 4660, 4661, 4667, 4669, 4672, 4688, 4691, 4724, 4733, 4743, 4744, 4746, 4747, 4748, 4749, 4751, 4767, 4768, 4769, 4770, 4771, 4772, 4802, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4814, 4830, 4836, 4839, 4852, 4857, 4858, 4860, 4863, 4868, 4870, 4875, 4877, 4885, 4886, 4892, 4894, 4895, 4897, 4899, 4900, 4901, 4915, 4916, 4918, 4920, 4921, 4922, 4923, 4927, 4928, 4930, 4935, 4964, 4973, 4996, 4999, 5003, 5006, 5011, 5018, 5033, 5065, 5068, 5077, 5096, 5105, 5129, 5134, 5137, 5143, 5147, 5150, 5151, 5152, 5156, 5157, 5158, 5162, 5193, 5202, 5204, 5205, 5208, 5211, 5226, 5228, 5229, 5230, 5239, 5244, 5250, 5252, 5253, 5257, 5263, 5268, 5269, 5271, 5272, 5273, 5274, 5277, 5280, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5293, 5331, 5332, 5333, 5334, 5341, 5342, 5344, 5345, 5352, 5353, 5361, 5372], "may": [3, 8, 10, 16, 28, 31, 35, 39, 44, 48, 64, 81, 103, 104, 125, 136, 143, 147, 165, 172, 197, 368, 527, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 841, 847, 859, 867, 875, 886, 894, 902, 910, 931, 951, 956, 964, 980, 994, 1014, 1030, 1044, 1046, 1058, 1063, 1106, 1271, 1288, 1307, 1327, 1436, 1512, 1644, 1682, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1922, 1930, 2025, 2055, 2063, 2161, 2232, 2277, 2282, 2291, 2323, 2337, 2349, 2363, 2376, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2813, 2876, 2914, 2923, 2932, 3011, 3019, 3388, 3704, 3708, 3796, 3811, 3812, 3813, 3818, 3833, 3904, 3909, 3926, 3935, 3973, 3990, 3993, 3999, 4012, 4026, 4048, 4063, 4086, 4094, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4218, 4219, 4221, 4224, 4241, 4246, 4254, 4272, 4287, 4463, 4552, 4708, 4743, 4810, 4875, 4915, 4922, 4958, 4964, 5003, 5014, 5021, 5023, 5140, 5143, 5146, 5190, 5220, 5235, 5246, 5259, 5262, 5290, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5343, 5344, 5348, 5349, 5350, 5352, 5354, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5372], "contain": [3, 31, 33, 39, 64, 88, 210, 234, 238, 381, 405, 409, 540, 564, 568, 1081, 1097, 1119, 1142, 1145, 1456, 1475, 1642, 1643, 1666, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2277, 2285, 2337, 2914, 2923, 2932, 3762, 3779, 3789, 3905, 4008, 4224, 4254, 4272, 4287, 4996, 4999, 5006, 5226, 5237, 5280, 5332], "single": [3, 10, 16, 25, 29, 31, 35, 39, 44, 48, 51, 59, 64, 86, 118, 142, 147, 162, 299, 300, 324, 328, 342, 343, 344, 345, 470, 471, 495, 499, 513, 514, 515, 516, 629, 630, 654, 658, 672, 673, 674, 675, 926, 936, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1102, 1206, 1207, 1231, 1235, 1249, 1250, 1251, 1252, 1266, 1280, 1296, 1299, 1322, 1360, 1362, 1374, 1376, 1377, 1379, 1389, 1394, 1406, 1421, 1431, 1448, 1453, 1456, 1459, 1481, 1483, 1486, 1491, 1496, 1503, 1507, 1517, 1519, 1522, 1524, 1527, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1560, 1564, 1641, 1674, 1706, 1710, 1757, 1775, 1786, 1789, 1801, 1805, 1815, 1818, 1834, 1850, 1866, 1883, 1928, 1934, 1937, 1938, 1939, 1940, 1970, 1973, 1998, 2024, 2031, 2067, 2122, 2155, 2158, 2160, 2161, 2162, 2195, 2232, 2285, 2290, 2316, 2322, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2392, 2406, 2417, 2420, 2434, 2448, 2462, 2487, 2496, 2504, 2507, 2517, 2520, 2530, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2621, 2624, 2634, 2637, 2647, 2650, 2660, 2663, 2676, 2686, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 2777, 2778, 2798, 2803, 2808, 2817, 2845, 2858, 2859, 2860, 2861, 2867, 2908, 2915, 2924, 2933, 2936, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3484, 3487, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3704, 3706, 3723, 3729, 3730, 3736, 3738, 3739, 3741, 3749, 3757, 3761, 3762, 3779, 3789, 3852, 3870, 3922, 3991, 4042, 4191, 4199, 4229, 4246, 4252, 4261, 4264, 4270, 4273, 4279, 4282, 4335, 4363, 4376, 4385, 4402, 4424, 4433, 4463, 4490, 4493, 4519, 4521, 4523, 4524, 4584, 4614, 4616, 4618, 4619, 4640, 4650, 4686, 4767, 4770, 4803, 4806, 4813, 4819, 4823, 4825, 4827, 4895, 4916, 4922, 4923, 4927, 4930, 4958, 4973, 5003, 5018, 5024, 5033, 5037, 5060, 5129, 5133, 5134, 5228, 5237, 5269, 5270, 5273, 5280, 5290, 5335, 5364, 5366, 5367], "rather": [3, 64, 103, 107, 299, 300, 302, 303, 304, 306, 307, 324, 470, 471, 473, 474, 475, 477, 478, 495, 629, 630, 632, 633, 634, 636, 637, 654, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1231, 1477, 1926, 1932, 1937, 1970, 2024, 2068, 2132, 2323, 2417, 2504, 2517, 2530, 2543, 2556, 2569, 2595, 2608, 2621, 2634, 2647, 2660, 2686, 2777, 2778, 2780, 2781, 2782, 2784, 2785, 3983, 4025, 4026, 4032, 4182, 4225, 4717, 4725, 4930, 4958, 5290, 5353], "number": [3, 8, 10, 16, 29, 30, 31, 35, 39, 44, 48, 51, 53, 57, 64, 69, 75, 79, 92, 95, 97, 99, 100, 103, 107, 110, 113, 115, 118, 120, 123, 130, 136, 139, 140, 142, 147, 165, 172, 183, 184, 185, 186, 193, 198, 207, 212, 214, 231, 234, 235, 255, 256, 262, 264, 266, 269, 270, 271, 272, 299, 300, 321, 326, 327, 342, 343, 344, 345, 348, 354, 355, 356, 359, 360, 361, 364, 369, 378, 383, 385, 402, 405, 406, 426, 427, 433, 435, 437, 440, 441, 442, 443, 470, 471, 492, 497, 498, 513, 514, 515, 516, 519, 523, 528, 537, 542, 544, 561, 564, 565, 585, 586, 592, 594, 596, 599, 600, 601, 602, 629, 630, 651, 656, 657, 672, 673, 674, 675, 678, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 765, 768, 769, 773, 781, 789, 798, 806, 814, 830, 833, 841, 849, 850, 856, 861, 869, 877, 878, 883, 888, 896, 904, 913, 920, 923, 926, 932, 934, 939, 943, 946, 952, 954, 956, 959, 965, 968, 970, 973, 975, 981, 983, 986, 989, 995, 997, 1006, 1009, 1015, 1018, 1020, 1023, 1025, 1031, 1033, 1036, 1039, 1045, 1048, 1050, 1053, 1059, 1061, 1076, 1092, 1102, 1107, 1116, 1122, 1139, 1142, 1143, 1162, 1163, 1169, 1171, 1173, 1176, 1177, 1178, 1179, 1206, 1207, 1228, 1233, 1234, 1249, 1250, 1251, 1252, 1255, 1259, 1263, 1266, 1272, 1275, 1277, 1280, 1282, 1289, 1292, 1296, 1299, 1302, 1308, 1312, 1318, 1319, 1322, 1328, 1330, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1431, 1437, 1439, 1441, 1443, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1507, 1513, 1515, 1517, 1519, 1520, 1522, 1524, 1526, 1527, 1530, 1531, 1533, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1640, 1641, 1644, 1654, 1682, 1690, 1691, 1709, 1717, 1740, 1753, 1757, 1760, 1766, 1768, 1772, 1775, 1782, 1784, 1786, 1789, 1791, 1797, 1799, 1802, 1805, 1811, 1813, 1815, 1818, 1820, 1826, 1828, 1831, 1834, 1836, 1842, 1844, 1847, 1850, 1852, 1858, 1860, 1863, 1866, 1868, 1874, 1876, 1879, 1883, 1886, 1892, 1894, 1898, 1899, 1914, 1922, 1930, 1943, 1945, 1946, 1954, 1974, 1976, 1978, 1979, 1982, 1987, 2033, 2048, 2056, 2070, 2085, 2098, 2113, 2133, 2146, 2163, 2170, 2178, 2196, 2201, 2209, 2214, 2220, 2221, 2226, 2233, 2241, 2244, 2246, 2253, 2258, 2285, 2309, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2389, 2392, 2399, 2401, 2403, 2406, 2413, 2415, 2417, 2420, 2427, 2429, 2431, 2434, 2441, 2443, 2445, 2448, 2455, 2457, 2459, 2462, 2469, 2471, 2482, 2496, 2503, 2504, 2507, 2513, 2515, 2517, 2520, 2526, 2528, 2530, 2533, 2539, 2541, 2543, 2546, 2552, 2554, 2556, 2559, 2565, 2567, 2569, 2572, 2578, 2580, 2582, 2585, 2591, 2593, 2595, 2598, 2604, 2606, 2608, 2611, 2617, 2619, 2621, 2624, 2630, 2632, 2634, 2637, 2643, 2645, 2647, 2650, 2656, 2658, 2660, 2663, 2669, 2671, 2673, 2676, 2682, 2684, 2686, 2689, 2695, 2697, 2699, 2702, 2708, 2710, 2712, 2715, 2721, 2723, 2725, 2728, 2734, 2736, 2738, 2741, 2747, 2749, 2751, 2754, 2760, 2762, 2764, 2767, 2773, 2775, 2777, 2778, 2813, 2822, 2830, 2836, 2847, 2871, 2887, 2890, 2914, 2915, 2923, 2924, 2932, 2933, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3708, 3711, 3718, 3719, 3720, 3722, 3723, 3727, 3730, 3737, 3738, 3739, 3757, 3763, 3764, 3779, 3789, 3814, 3833, 3838, 3845, 3849, 3862, 3874, 3875, 3880, 3882, 3884, 3916, 3927, 3932, 3951, 3963, 3976, 4025, 4036, 4044, 4049, 4050, 4075, 4195, 4239, 4240, 4255, 4273, 4299, 4308, 4311, 4316, 4335, 4354, 4367, 4376, 4384, 4385, 4388, 4389, 4390, 4394, 4395, 4398, 4402, 4424, 4444, 4463, 4470, 4473, 4479, 4481, 4487, 4491, 4494, 4497, 4498, 4500, 4501, 4511, 4513, 4514, 4518, 4519, 4522, 4528, 4537, 4539, 4544, 4552, 4568, 4579, 4586, 4595, 4603, 4604, 4605, 4608, 4609, 4614, 4617, 4623, 4632, 4634, 4639, 4640, 4649, 4650, 4654, 4655, 4656, 4660, 4661, 4664, 4667, 4686, 4705, 4710, 4711, 4713, 4725, 4728, 4729, 4732, 4733, 4734, 4736, 4743, 4744, 4745, 4747, 4749, 4750, 4751, 4764, 4767, 4769, 4771, 4772, 4773, 4774, 4787, 4788, 4803, 4807, 4808, 4813, 4819, 4823, 4825, 4830, 4847, 4848, 4849, 4859, 4894, 4895, 4899, 4916, 4920, 4922, 4928, 4958, 4964, 4966, 5003, 5021, 5099, 5102, 5108, 5117, 5126, 5143, 5175, 5178, 5190, 5193, 5202, 5214, 5217, 5220, 5223, 5226, 5235, 5237, 5239, 5241, 5244, 5246, 5247, 5250, 5259, 5262, 5263, 5267, 5276, 5277, 5280, 5281, 5286, 5287, 5288, 5289, 5290, 5331, 5332, 5333, 5334, 5339, 5341, 5344, 5345, 5347, 5348, 5349, 5372], "shots": [3, 16, 30, 31, 62, 64, 75, 79, 92, 95, 113, 123, 300, 302, 303, 304, 306, 307, 471, 473, 474, 475, 477, 478, 630, 632, 633, 634, 636, 637, 913, 1207, 1209, 1210, 1211, 1213, 1214, 1641, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 2277, 2285, 2311, 2323, 2337, 2349, 2363, 2376, 2517, 2543, 2556, 2569, 2595, 2608, 2778, 2780, 2781, 2782, 2784, 2785, 2915, 2924, 2933, 3708, 3730, 3838, 3932, 3963, 3976, 4255, 4273, 4394, 4395, 4608, 4609, 4660, 4661, 4743, 4744, 4747, 4749, 4750, 4751, 4764, 4769, 4771, 4772, 4773, 4787, 5250, 5337, 5343, 5344, 5347, 5348, 5349, 5362, 5364, 5369], "happens": [3, 64, 1953, 4030, 4946, 4952, 5077, 5143, 5181], "supports": [3, 16, 31, 39, 48, 51, 60, 64, 83, 97, 127, 132, 135, 153, 164, 171, 178, 752, 773, 789, 1443, 1462, 1641, 1644, 1898, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2285, 2286, 2287, 2288, 2289, 2323, 2349, 2363, 2376, 2862, 2886, 2887, 2963, 2964, 2965, 2966, 2967, 2980, 2981, 2982, 2983, 2984, 2997, 2998, 2999, 3000, 3001, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3030, 3031, 3032, 3033, 3034, 3047, 3048, 3049, 3050, 3051, 3064, 3065, 3066, 3067, 3068, 3081, 3082, 3083, 3084, 3085, 3097, 3098, 3099, 3100, 3101, 3114, 3115, 3116, 3117, 3118, 3130, 3131, 3132, 3133, 3134, 3147, 3148, 3149, 3150, 3151, 3163, 3164, 3165, 3166, 3167, 3180, 3181, 3182, 3183, 3184, 3197, 3198, 3199, 3200, 3201, 3214, 3215, 3216, 3217, 3218, 3231, 3232, 3233, 3234, 3235, 3248, 3249, 3250, 3251, 3252, 3265, 3266, 3267, 3268, 3269, 3282, 3283, 3284, 3285, 3286, 3298, 3299, 3300, 3301, 3302, 3315, 3316, 3317, 3318, 3319, 3332, 3333, 3334, 3335, 3336, 3348, 3349, 3350, 3351, 3352, 3365, 3366, 3367, 3368, 3369, 3382, 3383, 3384, 3385, 3386, 3390, 3391, 3392, 3393, 3394, 3407, 3408, 3409, 3410, 3411, 3441, 3442, 3443, 3444, 3445, 3458, 3459, 3460, 3461, 3462, 3474, 3475, 3476, 3477, 3478, 3505, 3506, 3507, 3508, 3509, 3521, 3522, 3523, 3524, 3525, 3538, 3539, 3540, 3541, 3542, 3563, 3564, 3565, 3566, 3567, 3580, 3581, 3582, 3583, 3584, 3597, 3598, 3599, 3600, 3601, 3630, 3631, 3632, 3633, 3634, 3647, 3648, 3649, 3650, 3651, 3663, 3664, 3665, 3666, 3667, 3680, 3681, 3682, 3683, 3684, 3696, 3697, 3698, 3699, 3700, 3730, 3737, 3932, 3957, 3963, 3976, 3993, 4297, 4487, 4922, 4923, 4930, 5150, 5156, 5157, 5162, 5205, 5226, 5237, 5250, 5347, 5348, 5359], "sampling": [3, 16, 64, 69, 75, 101, 761, 768, 849, 1641, 1926, 1985, 1991, 1999, 2000, 2001, 2024, 2165, 2166, 2167, 2168, 2170, 2201, 2214, 2226, 2244, 2258, 2323, 2349, 3708, 3730, 4157, 4162, 4167, 4172, 4177, 4182, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4388, 4394, 4395, 4603, 4607, 4608, 4609, 4654, 4658, 4660, 4661, 4735, 4877, 5250, 5364], "because": [3, 10, 31, 48, 64, 97, 103, 143, 201, 213, 240, 251, 252, 347, 372, 384, 411, 422, 423, 518, 531, 543, 570, 581, 582, 677, 1081, 1097, 1110, 1121, 1147, 1158, 1159, 1254, 1378, 1475, 1533, 1903, 1913, 1957, 1964, 1985, 1996, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2171, 2189, 2202, 2215, 2216, 2245, 2259, 3870, 4002, 4008, 4015, 4177, 4206, 4220, 4254, 4272, 4287, 4946, 4952, 4964, 5021, 5146, 5181, 5244], "it": [3, 4, 8, 10, 11, 12, 16, 25, 28, 29, 31, 35, 39, 44, 48, 51, 53, 54, 57, 60, 64, 66, 71, 82, 86, 97, 110, 126, 127, 130, 131, 134, 135, 140, 142, 143, 144, 147, 148, 153, 165, 166, 172, 173, 178, 180, 182, 191, 193, 197, 198, 211, 235, 238, 239, 240, 251, 252, 276, 289, 323, 324, 325, 326, 327, 347, 353, 358, 364, 368, 369, 382, 406, 409, 410, 411, 422, 423, 447, 460, 494, 495, 496, 497, 498, 518, 523, 527, 528, 541, 565, 568, 569, 570, 581, 582, 606, 619, 653, 654, 655, 656, 657, 677, 682, 683, 689, 709, 734, 752, 773, 789, 798, 806, 833, 841, 849, 877, 896, 904, 914, 923, 927, 928, 929, 933, 934, 936, 943, 947, 948, 949, 953, 954, 956, 960, 961, 962, 967, 968, 970, 974, 976, 982, 983, 990, 991, 996, 997, 1006, 1010, 1011, 1012, 1017, 1018, 1024, 1026, 1027, 1032, 1033, 1036, 1040, 1041, 1042, 1046, 1047, 1048, 1050, 1054, 1055, 1056, 1060, 1061, 1063, 1064, 1065, 1102, 1106, 1107, 1120, 1143, 1145, 1146, 1147, 1158, 1159, 1182, 1183, 1196, 1230, 1231, 1232, 1233, 1234, 1254, 1263, 1267, 1268, 1269, 1274, 1275, 1281, 1283, 1285, 1290, 1292, 1300, 1303, 1304, 1309, 1312, 1318, 1323, 1324, 1329, 1330, 1342, 1360, 1364, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1432, 1433, 1434, 1438, 1439, 1441, 1447, 1448, 1450, 1456, 1457, 1458, 1459, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1496, 1499, 1503, 1508, 1509, 1510, 1514, 1515, 1517, 1524, 1533, 1535, 1537, 1539, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1641, 1642, 1643, 1644, 1706, 1719, 1753, 1758, 1761, 1767, 1768, 1772, 1776, 1777, 1779, 1783, 1784, 1790, 1792, 1798, 1799, 1806, 1807, 1812, 1813, 1819, 1821, 1822, 1827, 1828, 1835, 1837, 1838, 1843, 1844, 1851, 1853, 1854, 1859, 1860, 1867, 1869, 1870, 1875, 1876, 1879, 1884, 1887, 1891, 1893, 1894, 1901, 1906, 1923, 1924, 1926, 1934, 1937, 1945, 1947, 1948, 1953, 1956, 1959, 1983, 1986, 1987, 1990, 1994, 2024, 2028, 2032, 2035, 2039, 2054, 2060, 2064, 2072, 2075, 2089, 2102, 2104, 2117, 2122, 2124, 2135, 2138, 2154, 2176, 2180, 2181, 2182, 2198, 2211, 2218, 2224, 2235, 2236, 2238, 2251, 2255, 2275, 2277, 2280, 2282, 2285, 2291, 2293, 2308, 2311, 2313, 2323, 2333, 2337, 2349, 2359, 2372, 2385, 2389, 2393, 2394, 2400, 2401, 2403, 2407, 2408, 2414, 2415, 2417, 2421, 2422, 2428, 2429, 2431, 2435, 2436, 2442, 2443, 2445, 2449, 2450, 2456, 2457, 2459, 2463, 2464, 2470, 2471, 2486, 2487, 2500, 2508, 2509, 2514, 2515, 2521, 2522, 2527, 2528, 2534, 2535, 2540, 2541, 2547, 2548, 2553, 2554, 2560, 2561, 2566, 2567, 2573, 2574, 2579, 2580, 2586, 2587, 2592, 2593, 2599, 2600, 2605, 2606, 2612, 2613, 2618, 2619, 2625, 2626, 2631, 2632, 2638, 2639, 2644, 2645, 2651, 2652, 2657, 2658, 2664, 2665, 2670, 2671, 2677, 2678, 2683, 2684, 2690, 2691, 2696, 2697, 2703, 2704, 2705, 2709, 2710, 2716, 2717, 2718, 2722, 2723, 2729, 2730, 2731, 2735, 2736, 2742, 2743, 2744, 2748, 2749, 2755, 2756, 2757, 2761, 2762, 2768, 2769, 2770, 2774, 2775, 2798, 2801, 2802, 2803, 2805, 2806, 2807, 2813, 2842, 2862, 2875, 2905, 2912, 2914, 2921, 2923, 2930, 2932, 3011, 3019, 3388, 3704, 3718, 3722, 3730, 3736, 3750, 3757, 3759, 3777, 3779, 3781, 3782, 3789, 3791, 3793, 3796, 3799, 3814, 3823, 3833, 3834, 3852, 3862, 3868, 3890, 3894, 3905, 3906, 3909, 3919, 3922, 3933, 3935, 3939, 3942, 3945, 3952, 3955, 3957, 3958, 3961, 3968, 3974, 3977, 3980, 3993, 4008, 4041, 4084, 4139, 4159, 4162, 4164, 4169, 4174, 4177, 4179, 4182, 4184, 4187, 4219, 4220, 4225, 4229, 4231, 4232, 4244, 4245, 4246, 4247, 4252, 4253, 4262, 4268, 4270, 4271, 4280, 4286, 4289, 4292, 4316, 4332, 4335, 4351, 4376, 4385, 4394, 4395, 4402, 4418, 4424, 4432, 4460, 4463, 4487, 4508, 4509, 4515, 4516, 4534, 4535, 4541, 4542, 4549, 4552, 4568, 4578, 4579, 4584, 4591, 4606, 4608, 4613, 4614, 4617, 4629, 4630, 4634, 4636, 4637, 4640, 4650, 4660, 4661, 4683, 4686, 4702, 4712, 4715, 4767, 4770, 4796, 4803, 4804, 4810, 4811, 4812, 4813, 4819, 4825, 4831, 4839, 4842, 4868, 4873, 4875, 4895, 4900, 4915, 4916, 4921, 4922, 4923, 4928, 4930, 4934, 4935, 4938, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4966, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5016, 5017, 5018, 5020, 5021, 5023, 5024, 5027, 5030, 5033, 5036, 5050, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5149, 5151, 5155, 5157, 5161, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5228, 5233, 5234, 5237, 5239, 5244, 5250, 5257, 5262, 5268, 5270, 5272, 5281, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335, 5340, 5342, 5347, 5350, 5352, 5359, 5361, 5362, 5366], "either": [3, 16, 31, 39, 44, 64, 74, 165, 172, 191, 198, 235, 239, 240, 251, 252, 369, 406, 410, 411, 422, 423, 528, 565, 569, 570, 581, 582, 693, 773, 849, 877, 920, 939, 1036, 1071, 1087, 1102, 1107, 1143, 1146, 1147, 1158, 1159, 1259, 1263, 1342, 1373, 1392, 1401, 1407, 1410, 1471, 1480, 1641, 1644, 1674, 1906, 1928, 1948, 1959, 1973, 2001, 2010, 2013, 2014, 2015, 2017, 2018, 2021, 2023, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2282, 2291, 2323, 2337, 2349, 2363, 2376, 2801, 2813, 2848, 2889, 3011, 3019, 3388, 3761, 3957, 3993, 3995, 3999, 4010, 4012, 4020, 4158, 4162, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4241, 4282, 4354, 4494, 4498, 4501, 4514, 4640, 4718, 4743, 4765, 4767, 4785, 4800, 4806, 4813, 4913, 4922, 4930, 4961, 5023, 5033, 5044, 5137, 5257, 5278, 5281, 5286, 5290, 5305, 5317, 5329, 5331], "ideal": [3, 33, 64, 136, 147, 165, 172, 861, 2323, 2349, 2363, 2376, 2802, 2803, 2805, 2806, 2807, 2819, 2830, 2835, 4746, 4768, 5365, 5366, 5367], "measurements": [3, 10, 28, 48, 64, 72, 74, 75, 93, 111, 266, 267, 285, 437, 438, 456, 596, 597, 615, 877, 1173, 1174, 1192, 1387, 1458, 1640, 1934, 1941, 1983, 1986, 1990, 1992, 1995, 1997, 1998, 2000, 2024, 2032, 2161, 2177, 2181, 2195, 2208, 2220, 2232, 2236, 2252, 2272, 2285, 2323, 2337, 2349, 2808, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3708, 3730, 4219, 4388, 4394, 4395, 4603, 4608, 4609, 4654, 4660, 4661, 4958, 4967, 5033, 5169, 5190], "at": [3, 11, 12, 16, 25, 29, 31, 35, 39, 44, 47, 48, 53, 57, 64, 82, 110, 126, 131, 134, 148, 151, 165, 166, 169, 172, 173, 176, 186, 234, 239, 240, 251, 252, 285, 334, 364, 405, 410, 411, 422, 423, 456, 505, 523, 564, 569, 570, 581, 582, 615, 664, 692, 700, 708, 716, 724, 733, 742, 751, 760, 761, 763, 772, 780, 788, 797, 798, 805, 806, 813, 821, 829, 833, 840, 841, 848, 849, 860, 868, 876, 877, 887, 895, 903, 911, 956, 1036, 1067, 1142, 1146, 1147, 1158, 1159, 1192, 1241, 1316, 1317, 1372, 1376, 1379, 1387, 1401, 1441, 1453, 1456, 1459, 1467, 1469, 1472, 1477, 1489, 1494, 1496, 1499, 1501, 1503, 1537, 1539, 1640, 1644, 1682, 1689, 1700, 1719, 1749, 1815, 1903, 1906, 1910, 1913, 1945, 1957, 1959, 1961, 1964, 1987, 2022, 2027, 2028, 2036, 2039, 2043, 2047, 2064, 2066, 2073, 2075, 2076, 2079, 2087, 2089, 2091, 2093, 2100, 2102, 2104, 2106, 2115, 2117, 2124, 2127, 2136, 2138, 2142, 2145, 2162, 2171, 2182, 2185, 2189, 2198, 2199, 2202, 2211, 2212, 2215, 2224, 2238, 2240, 2245, 2255, 2256, 2259, 2282, 2291, 2323, 2337, 2349, 2817, 2842, 2845, 2858, 2861, 3011, 3019, 3388, 3708, 3730, 3779, 3782, 3789, 3793, 3838, 3876, 3882, 3884, 3904, 3909, 3994, 4000, 4004, 4006, 4008, 4013, 4026, 4027, 4028, 4029, 4030, 4037, 4039, 4041, 4042, 4076, 4081, 4085, 4091, 4094, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154, 4167, 4182, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4201, 4206, 4209, 4212, 4219, 4229, 4299, 4463, 4476, 4506, 4533, 4628, 4811, 4812, 4813, 4829, 4839, 4873, 4881, 4922, 4958, 4964, 5003, 5014, 5016, 5021, 5023, 5080, 5085, 5091, 5143, 5169, 5214, 5217, 5230, 5241, 5250, 5332, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "end": [3, 31, 48, 64, 197, 235, 240, 252, 368, 406, 411, 423, 523, 527, 565, 570, 582, 682, 849, 877, 923, 1106, 1143, 1147, 1159, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1376, 1379, 1387, 1389, 1394, 1401, 1450, 1456, 1459, 1464, 1466, 1468, 1472, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1517, 1519, 1522, 1524, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1640, 1682, 1913, 1943, 1964, 1987, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 2323, 2349, 3723, 3728, 3738, 3739, 3793, 3811, 3904, 3932, 3976, 3993, 3996, 4011, 4030, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4172, 4195, 4386, 4463, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637, 4881, 5023, 5123, 5140, 5143, 5146, 5169, 5175, 5281, 5295, 5319, 5338, 5342, 5345, 5347, 5348, 5350, 5352, 5361, 5362, 5367, 5368, 5372], "noisy": [3, 10, 33, 48, 53, 64, 103, 683, 869, 2323, 2337, 2349, 2363, 2376, 2801, 2830, 2848, 2888, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4714, 4720, 4726, 4746, 4768, 5123, 5365, 5366, 5367], "both": [3, 8, 12, 16, 25, 29, 31, 39, 53, 57, 64, 97, 110, 136, 143, 210, 238, 253, 381, 409, 424, 540, 568, 583, 769, 773, 806, 833, 877, 920, 939, 1063, 1081, 1097, 1119, 1145, 1160, 1259, 1342, 1441, 1462, 1537, 1550, 1644, 1902, 1932, 1935, 1937, 2028, 2039, 2064, 3779, 3789, 3823, 3868, 3887, 3888, 4041, 4084, 4172, 4389, 4463, 4570, 4655, 4751, 4813, 4915, 4922, 4927, 4930, 5123, 5137, 5202, 5205, 5241, 5342], "cases": [3, 28, 31, 48, 53, 57, 64, 103, 142, 180, 918, 1444, 1923, 2060, 2218, 2323, 2349, 4172, 4568, 4712, 4976, 5214, 5217], "shot": [3, 16, 64, 142, 147, 165, 172, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 324, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 654, 852, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1231, 1641, 1994, 2323, 2349, 2363, 2376, 2417, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 3708, 3730, 3761, 3838, 3873, 4075, 4806, 4813], "actually": [3, 28, 31, 44, 53, 64, 103, 197, 368, 527, 1106, 1953, 4394, 4395, 4608, 4660, 4661], "simulated": [3, 33, 64, 1372, 1753, 2323, 2349], "samples": [3, 30, 35, 39, 64, 75, 761, 769, 1929, 1987, 2162, 2165, 2166, 2170, 2201, 2214, 2226, 2244, 2258, 2323, 2349, 4049, 4050, 4080, 4090, 4099, 4103, 4108, 4117, 4126, 4135, 4144, 4153, 4159, 4164, 4169, 4174, 4179, 4184, 4187, 4190, 4192, 4193, 4195, 4196, 4197, 4201, 4202, 4249, 4394, 4395, 4608, 4609, 4660, 4661], "calculated": [3, 64, 90, 165, 169, 179, 185, 186, 191, 356, 361, 1465, 2003, 2337, 3811, 4743, 4744, 4767, 4973], "final": [3, 16, 25, 35, 64, 92, 130, 285, 456, 615, 717, 765, 798, 830, 841, 904, 1192, 1380, 1396, 1441, 1472, 1503, 1644, 2024, 2032, 2302, 2308, 2323, 2479, 2486, 2493, 2500, 2899, 2905, 3708, 3763, 3764, 3806, 3824, 3874, 3875, 3887, 3888, 3919, 3926, 3982, 4219, 4384, 4649, 4807, 4808, 4915, 4966, 4967, 5169, 5175, 5348, 5349, 5352, 5354, 5364, 5365, 5366, 5367, 5368, 5369], "each": [3, 11, 16, 25, 29, 31, 35, 39, 44, 48, 51, 53, 64, 95, 97, 103, 110, 113, 136, 147, 151, 165, 169, 172, 176, 203, 217, 235, 239, 240, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 324, 342, 374, 388, 406, 410, 411, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 513, 533, 547, 565, 569, 570, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 654, 672, 709, 761, 773, 833, 849, 877, 896, 904, 934, 954, 968, 983, 997, 1005, 1018, 1033, 1048, 1061, 1063, 1102, 1112, 1125, 1143, 1146, 1147, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1231, 1249, 1275, 1292, 1312, 1318, 1330, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1439, 1441, 1447, 1456, 1457, 1458, 1462, 1464, 1472, 1475, 1477, 1480, 1503, 1515, 1537, 1550, 1551, 1555, 1640, 1641, 1644, 1682, 1714, 1715, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1901, 1906, 1910, 1923, 1926, 1929, 1936, 1940, 1956, 1959, 1961, 1970, 1974, 1976, 1978, 2024, 2028, 2032, 2035, 2039, 2043, 2054, 2064, 2072, 2075, 2076, 2089, 2091, 2102, 2104, 2117, 2122, 2124, 2135, 2138, 2142, 2154, 2162, 2165, 2166, 2167, 2168, 2180, 2182, 2185, 2198, 2199, 2211, 2212, 2218, 2224, 2235, 2238, 2240, 2255, 2256, 2267, 2272, 2308, 2323, 2333, 2337, 2349, 2359, 2372, 2385, 2401, 2415, 2417, 2429, 2443, 2457, 2471, 2486, 2498, 2500, 2504, 2515, 2517, 2528, 2530, 2541, 2543, 2554, 2556, 2567, 2569, 2580, 2582, 2593, 2595, 2606, 2608, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2808, 2842, 2854, 2862, 2863, 2867, 2877, 2878, 2905, 3704, 3708, 3718, 3722, 3727, 3730, 3757, 3760, 3761, 3779, 3789, 3796, 3821, 3824, 3838, 3865, 3873, 3881, 3908, 3923, 3963, 3993, 4025, 4026, 4032, 4075, 4172, 4187, 4193, 4197, 4206, 4241, 4246, 4252, 4255, 4258, 4270, 4276, 4297, 4354, 4468, 4486, 4487, 4488, 4492, 4494, 4495, 4498, 4501, 4503, 4504, 4507, 4508, 4509, 4514, 4517, 4518, 4519, 4523, 4534, 4535, 4544, 4579, 4580, 4583, 4584, 4614, 4618, 4629, 4630, 4639, 4712, 4767, 4802, 4803, 4805, 4806, 4830, 4851, 4852, 4881, 4900, 4901, 4915, 4921, 4922, 4923, 4938, 4964, 4973, 5003, 5007, 5018, 5020, 5033, 5034, 5042, 5050, 5071, 5080, 5105, 5108, 5117, 5123, 5146, 5178, 5184, 5193, 5196, 5199, 5211, 5214, 5217, 5226, 5230, 5237, 5239, 5244, 5250, 5263, 5272, 5274, 5277, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5294, 5331, 5332, 5333, 5334, 5335], "has": [3, 8, 10, 16, 25, 28, 30, 31, 35, 39, 44, 48, 51, 53, 58, 64, 66, 75, 79, 95, 97, 110, 113, 123, 130, 133, 142, 143, 147, 150, 151, 157, 158, 165, 168, 169, 175, 176, 186, 187, 235, 238, 247, 248, 277, 323, 324, 325, 326, 327, 406, 409, 418, 419, 448, 494, 495, 496, 497, 498, 565, 568, 577, 578, 607, 653, 654, 655, 656, 657, 682, 683, 761, 789, 841, 849, 877, 904, 913, 929, 935, 949, 955, 962, 969, 970, 984, 998, 1004, 1012, 1019, 1027, 1034, 1042, 1049, 1056, 1062, 1081, 1097, 1143, 1145, 1154, 1155, 1184, 1230, 1231, 1232, 1233, 1234, 1269, 1276, 1285, 1294, 1304, 1314, 1331, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1389, 1402, 1412, 1415, 1419, 1421, 1424, 1427, 1434, 1440, 1510, 1516, 1563, 1567, 1641, 1678, 1682, 1769, 1771, 1779, 1785, 1793, 1800, 1801, 1814, 1822, 1829, 1838, 1845, 1854, 1861, 1870, 1877, 1895, 1897, 1902, 1945, 1983, 1990, 2020, 2024, 2032, 2069, 2153, 2177, 2285, 2295, 2300, 2301, 2311, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2389, 2402, 2403, 2416, 2417, 2430, 2431, 2444, 2445, 2458, 2459, 2472, 2476, 2477, 2490, 2491, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2705, 2711, 2718, 2724, 2731, 2737, 2744, 2750, 2757, 2763, 2770, 2776, 2802, 2803, 2805, 2806, 2807, 2810, 2814, 2831, 2833, 2889, 2897, 2898, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3707, 3718, 3723, 3732, 3737, 3738, 3739, 3760, 3779, 3781, 3792, 3800, 3803, 3814, 3824, 3833, 3855, 3862, 3876, 3881, 3890, 3909, 3987, 3988, 3991, 4006, 4031, 4112, 4172, 4182, 4231, 4255, 4273, 4282, 4301, 4318, 4337, 4356, 4390, 4398, 4404, 4426, 4432, 4446, 4467, 4494, 4498, 4519, 4554, 4568, 4571, 4605, 4614, 4652, 4653, 4656, 4664, 4669, 4688, 4706, 4707, 4708, 4712, 4765, 4785, 4800, 4805, 4811, 4813, 4830, 4839, 4913, 4915, 4922, 4946, 4952, 4961, 5033, 5047, 5062, 5137, 5169, 5195, 5202, 5214, 5217, 5228, 5250, 5257, 5264, 5265, 5271, 5274, 5281, 5284, 5285, 5286, 5305, 5317, 5329, 5347, 5357, 5359], "accessing": [3, 53, 64, 140, 3722, 3814, 3862, 4842, 4922, 4928], "duplicate": [3, 64, 211, 382, 541, 1120, 1667, 2057, 2059, 2889, 4841, 5226, 5237], "labels": [3, 48, 64, 235, 253, 276, 406, 424, 447, 565, 583, 606, 1143, 1160, 1183, 1526, 1772, 2862, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4363, 4433, 4508, 4513, 4515, 4519, 4531, 4534, 4539, 4541, 4583, 4591, 4614, 4626, 4629, 4634, 4636, 4860, 5268, 5272, 5280, 5281, 5287, 5289, 5290, 5294, 5331, 5332, 5333, 5334, 5341], "results": [3, 20, 31, 33, 45, 54, 62, 64, 73, 74, 75, 79, 95, 101, 105, 113, 123, 130, 136, 140, 143, 158, 191, 193, 235, 267, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 364, 406, 438, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 523, 565, 597, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 693, 904, 916, 917, 1102, 1143, 1174, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1318, 1342, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1499, 1503, 1537, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1906, 1913, 1926, 1959, 1964, 2024, 2028, 2032, 2039, 2047, 2064, 2066, 2075, 2079, 2089, 2093, 2102, 2106, 2117, 2127, 2138, 2145, 2166, 2167, 2168, 2171, 2182, 2189, 2198, 2202, 2211, 2215, 2224, 2238, 2245, 2255, 2259, 2271, 2274, 2304, 2323, 2337, 2349, 2363, 2376, 2482, 2487, 2496, 2503, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2798, 2842, 2867, 3723, 3738, 3739, 3756, 3757, 3758, 3777, 3779, 3789, 3814, 3834, 3849, 3852, 3862, 3869, 3870, 3876, 3885, 3887, 3888, 3896, 3899, 3909, 3916, 3918, 3922, 3926, 3993, 4008, 4042, 4075, 4264, 4282, 4802, 4803, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5239, 5244, 5255, 5268, 5270, 5272, 5274, 5281, 5347, 5348, 5349, 5368], "being": [3, 35, 48, 57, 64, 86, 165, 169, 172, 235, 266, 267, 406, 437, 438, 565, 596, 597, 833, 1143, 1173, 1174, 1644, 1706, 1906, 1952, 1953, 1959, 2025, 2028, 2039, 2055, 2063, 2064, 2075, 2089, 2102, 2117, 2132, 2138, 2161, 2170, 2182, 2188, 2198, 2201, 2211, 2214, 2224, 2226, 2232, 2238, 2244, 2255, 2258, 2295, 2867, 2889, 3757, 3835, 3926, 4031, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4182, 4218, 4530, 4540, 4746, 4748, 4768, 4770, 4772, 4803, 4900, 4915, 4921, 4973, 5071, 5123, 5143, 5226, 5241, 5246, 5247, 5278, 5281, 5286, 5287, 5288, 5289, 5342], "raised": [3, 35, 53, 64, 984, 1034, 1182, 1294, 1314, 1444, 1718, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 2028, 2039, 2060, 2064, 2276, 2294, 2296, 2311, 2317, 2319, 2349, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2725, 2738, 2751, 2764, 2893, 3712, 3713, 3714, 3715, 3716, 3717, 3734, 3735, 3742, 3743, 3770, 3771, 3772, 3774, 3775, 3776, 3796, 3826, 3827, 3828, 3829, 3840, 3841, 3842, 3843, 3844, 3993, 4187, 4238, 4761, 4782, 4797, 4810, 4910, 4945, 5202, 5302, 5314, 5326], "if": [3, 10, 11, 16, 24, 25, 28, 29, 31, 33, 35, 39, 44, 48, 51, 53, 57, 64, 66, 69, 70, 71, 72, 73, 82, 83, 86, 88, 89, 93, 97, 98, 99, 100, 103, 104, 105, 107, 110, 111, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 134, 135, 138, 142, 143, 144, 147, 148, 150, 151, 153, 157, 158, 163, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 185, 186, 187, 188, 191, 195, 197, 198, 199, 200, 201, 210, 211, 213, 214, 215, 216, 224, 232, 234, 235, 238, 239, 240, 247, 248, 251, 252, 254, 255, 256, 262, 264, 265, 266, 267, 275, 277, 280, 281, 285, 288, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 334, 335, 336, 342, 343, 344, 345, 347, 361, 362, 366, 368, 369, 370, 371, 372, 381, 382, 384, 385, 386, 387, 395, 403, 405, 406, 409, 410, 411, 418, 419, 422, 423, 425, 426, 427, 433, 435, 436, 437, 438, 446, 448, 451, 452, 456, 459, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 505, 506, 507, 513, 514, 515, 516, 518, 525, 527, 528, 529, 530, 531, 540, 541, 543, 544, 545, 546, 554, 562, 564, 565, 568, 569, 570, 577, 578, 581, 582, 584, 585, 586, 592, 594, 595, 596, 597, 605, 607, 610, 611, 615, 618, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 658, 664, 665, 666, 672, 673, 674, 675, 677, 682, 683, 687, 689, 693, 696, 704, 709, 712, 720, 729, 738, 747, 756, 761, 765, 766, 769, 773, 776, 784, 793, 798, 801, 806, 809, 817, 822, 825, 833, 836, 841, 844, 849, 852, 855, 856, 864, 872, 877, 882, 883, 891, 896, 899, 904, 907, 912, 918, 919, 920, 923, 926, 928, 929, 932, 934, 939, 942, 943, 946, 948, 949, 952, 954, 956, 959, 961, 962, 965, 968, 970, 973, 975, 976, 979, 981, 983, 984, 989, 991, 995, 997, 1000, 1002, 1003, 1004, 1006, 1009, 1011, 1012, 1015, 1018, 1023, 1025, 1026, 1027, 1029, 1031, 1033, 1034, 1036, 1039, 1041, 1042, 1045, 1046, 1048, 1050, 1053, 1055, 1056, 1059, 1061, 1063, 1065, 1072, 1081, 1088, 1096, 1097, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1119, 1120, 1121, 1122, 1123, 1124, 1132, 1140, 1142, 1143, 1145, 1146, 1147, 1154, 1155, 1158, 1159, 1161, 1162, 1163, 1169, 1171, 1172, 1173, 1174, 1182, 1184, 1187, 1188, 1192, 1195, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1235, 1241, 1242, 1243, 1249, 1250, 1251, 1252, 1254, 1259, 1262, 1263, 1266, 1268, 1269, 1272, 1275, 1280, 1282, 1283, 1284, 1285, 1287, 1289, 1292, 1293, 1294, 1296, 1299, 1302, 1303, 1304, 1306, 1308, 1312, 1313, 1314, 1318, 1322, 1324, 1328, 1330, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1372, 1373, 1374, 1376, 1377, 1379, 1380, 1387, 1388, 1390, 1392, 1393, 1396, 1398, 1399, 1401, 1403, 1407, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1431, 1433, 1434, 1437, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1450, 1456, 1457, 1460, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1480, 1487, 1492, 1497, 1499, 1503, 1507, 1509, 1510, 1513, 1515, 1520, 1526, 1527, 1531, 1537, 1540, 1545, 1548, 1550, 1551, 1553, 1555, 1556, 1558, 1561, 1563, 1565, 1567, 1640, 1641, 1642, 1643, 1644, 1645, 1648, 1649, 1655, 1661, 1662, 1666, 1667, 1671, 1673, 1674, 1675, 1678, 1679, 1680, 1681, 1689, 1693, 1706, 1710, 1711, 1714, 1715, 1721, 1732, 1746, 1748, 1750, 1752, 1753, 1757, 1760, 1761, 1764, 1766, 1768, 1769, 1772, 1775, 1777, 1779, 1782, 1784, 1789, 1791, 1792, 1795, 1797, 1799, 1800, 1802, 1805, 1807, 1811, 1813, 1818, 1820, 1821, 1822, 1824, 1826, 1828, 1829, 1834, 1836, 1837, 1838, 1840, 1842, 1844, 1845, 1850, 1852, 1853, 1854, 1856, 1858, 1860, 1861, 1866, 1868, 1869, 1870, 1872, 1874, 1876, 1877, 1879, 1883, 1886, 1887, 1890, 1891, 1892, 1894, 1895, 1898, 1901, 1903, 1905, 1906, 1907, 1910, 1912, 1916, 1924, 1925, 1926, 1928, 1929, 1933, 1934, 1935, 1936, 1937, 1943, 1945, 1947, 1948, 1952, 1956, 1957, 1958, 1959, 1961, 1963, 1966, 1973, 1983, 1985, 1986, 1987, 1988, 1990, 1991, 1994, 1996, 1999, 2001, 2003, 2005, 2007, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2030, 2032, 2035, 2036, 2038, 2039, 2043, 2046, 2050, 2054, 2055, 2056, 2058, 2059, 2060, 2063, 2064, 2065, 2072, 2073, 2074, 2075, 2078, 2083, 2087, 2088, 2089, 2091, 2095, 2100, 2101, 2102, 2104, 2109, 2112, 2115, 2116, 2117, 2120, 2122, 2124, 2126, 2129, 2135, 2136, 2137, 2138, 2142, 2144, 2150, 2154, 2160, 2162, 2176, 2177, 2180, 2181, 2182, 2187, 2192, 2194, 2195, 2198, 2204, 2205, 2211, 2217, 2218, 2220, 2223, 2224, 2229, 2235, 2236, 2237, 2238, 2243, 2248, 2249, 2251, 2255, 2261, 2263, 2272, 2277, 2280, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2308, 2309, 2311, 2316, 2318, 2322, 2323, 2328, 2331, 2333, 2334, 2337, 2340, 2343, 2349, 2354, 2357, 2359, 2360, 2363, 2368, 2370, 2372, 2373, 2376, 2381, 2383, 2385, 2386, 2389, 2392, 2394, 2399, 2401, 2403, 2406, 2408, 2413, 2415, 2417, 2420, 2422, 2427, 2429, 2431, 2434, 2436, 2441, 2443, 2445, 2448, 2450, 2455, 2457, 2459, 2462, 2464, 2469, 2471, 2482, 2484, 2485, 2486, 2494, 2496, 2499, 2500, 2501, 2502, 2503, 2504, 2507, 2509, 2513, 2515, 2517, 2520, 2522, 2526, 2528, 2530, 2533, 2535, 2539, 2541, 2543, 2546, 2548, 2552, 2554, 2556, 2559, 2561, 2565, 2567, 2569, 2572, 2574, 2578, 2580, 2582, 2585, 2587, 2591, 2593, 2595, 2598, 2600, 2604, 2606, 2608, 2611, 2613, 2617, 2619, 2621, 2624, 2626, 2630, 2632, 2634, 2637, 2639, 2643, 2645, 2647, 2650, 2652, 2656, 2658, 2660, 2663, 2665, 2669, 2671, 2673, 2676, 2678, 2682, 2684, 2686, 2689, 2691, 2695, 2697, 2699, 2702, 2704, 2705, 2708, 2710, 2715, 2717, 2718, 2721, 2723, 2728, 2730, 2731, 2734, 2736, 2738, 2741, 2743, 2744, 2747, 2749, 2751, 2754, 2756, 2757, 2760, 2762, 2764, 2767, 2769, 2770, 2773, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2812, 2813, 2814, 2816, 2817, 2819, 2822, 2823, 2830, 2831, 2833, 2834, 2835, 2836, 2839, 2842, 2844, 2847, 2848, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2860, 2861, 2862, 2863, 2865, 2883, 2885, 2886, 2887, 2889, 2890, 2891, 2892, 2904, 2905, 2908, 2909, 2912, 2915, 2916, 2918, 2921, 2924, 2925, 2927, 2930, 2933, 2934, 2943, 2952, 2961, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2978, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2995, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3028, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3045, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3062, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3079, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3095, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3128, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3145, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3161, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3178, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3195, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3212, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3229, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3246, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3263, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3280, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3296, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3313, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3330, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3346, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3363, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3380, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3405, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3422, 3431, 3439, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3456, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3472, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3484, 3487, 3494, 3503, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3519, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3536, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3552, 3561, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3578, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3595, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3611, 3619, 3628, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3645, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3661, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3678, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3694, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3706, 3707, 3708, 3709, 3721, 3722, 3723, 3725, 3727, 3728, 3729, 3730, 3731, 3732, 3737, 3738, 3739, 3741, 3746, 3747, 3748, 3749, 3750, 3752, 3753, 3754, 3757, 3760, 3761, 3762, 3763, 3764, 3766, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3796, 3798, 3799, 3801, 3804, 3805, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3816, 3818, 3821, 3822, 3823, 3824, 3833, 3836, 3837, 3838, 3845, 3847, 3848, 3849, 3850, 3852, 3854, 3855, 3857, 3860, 3861, 3862, 3863, 3864, 3865, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3891, 3894, 3896, 3897, 3901, 3905, 3909, 3911, 3913, 3915, 3916, 3918, 3919, 3921, 3922, 3930, 3931, 3932, 3935, 3942, 3943, 3945, 3951, 3957, 3963, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3976, 3979, 3983, 3984, 3985, 3988, 3991, 3993, 3999, 4001, 4006, 4008, 4012, 4013, 4014, 4018, 4020, 4022, 4025, 4026, 4030, 4031, 4032, 4041, 4045, 4075, 4084, 4103, 4148, 4157, 4158, 4161, 4162, 4163, 4166, 4167, 4168, 4171, 4172, 4173, 4176, 4177, 4178, 4181, 4182, 4183, 4186, 4187, 4188, 4191, 4192, 4193, 4195, 4196, 4197, 4199, 4200, 4201, 4203, 4204, 4206, 4207, 4210, 4213, 4216, 4219, 4225, 4229, 4231, 4232, 4241, 4244, 4245, 4246, 4254, 4255, 4264, 4272, 4282, 4287, 4298, 4299, 4301, 4304, 4308, 4309, 4316, 4318, 4321, 4324, 4325, 4326, 4327, 4329, 4330, 4332, 4335, 4337, 4340, 4343, 4344, 4345, 4346, 4348, 4349, 4351, 4354, 4356, 4359, 4361, 4363, 4365, 4367, 4368, 4376, 4381, 4382, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4392, 4394, 4395, 4397, 4398, 4400, 4402, 4404, 4407, 4410, 4411, 4412, 4413, 4415, 4416, 4418, 4421, 4424, 4426, 4429, 4430, 4432, 4433, 4435, 4437, 4438, 4444, 4446, 4449, 4452, 4453, 4454, 4455, 4457, 4458, 4460, 4463, 4465, 4466, 4467, 4470, 4471, 4472, 4473, 4476, 4479, 4480, 4481, 4485, 4487, 4489, 4490, 4491, 4492, 4493, 4494, 4497, 4498, 4500, 4501, 4506, 4509, 4511, 4512, 4513, 4514, 4515, 4516, 4518, 4519, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4531, 4533, 4535, 4537, 4538, 4539, 4540, 4541, 4542, 4544, 4552, 4554, 4557, 4560, 4563, 4568, 4570, 4571, 4574, 4575, 4577, 4578, 4579, 4582, 4584, 4586, 4587, 4588, 4589, 4591, 4592, 4595, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4611, 4613, 4614, 4616, 4617, 4618, 4619, 4620, 4623, 4624, 4625, 4626, 4628, 4630, 4632, 4633, 4634, 4635, 4636, 4637, 4639, 4640, 4645, 4646, 4647, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4658, 4660, 4661, 4663, 4664, 4667, 4669, 4672, 4675, 4676, 4677, 4678, 4680, 4681, 4683, 4686, 4688, 4691, 4694, 4695, 4696, 4697, 4699, 4700, 4702, 4705, 4712, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4723, 4724, 4725, 4726, 4727, 4730, 4731, 4732, 4733, 4735, 4740, 4743, 4744, 4747, 4751, 4755, 4756, 4757, 4761, 4762, 4763, 4765, 4769, 4770, 4771, 4773, 4774, 4778, 4782, 4783, 4784, 4785, 4787, 4788, 4792, 4797, 4798, 4799, 4800, 4802, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4819, 4823, 4825, 4827, 4829, 4830, 4831, 4838, 4839, 4841, 4842, 4843, 4853, 4865, 4872, 4874, 4877, 4878, 4880, 4886, 4893, 4894, 4895, 4896, 4898, 4899, 4900, 4902, 4907, 4910, 4911, 4912, 4913, 4915, 4916, 4917, 4919, 4920, 4921, 4922, 4923, 4924, 4926, 4927, 4928, 4930, 4934, 4935, 4938, 4939, 4941, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4970, 4972, 4973, 4975, 4976, 4979, 4982, 4984, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4997, 5000, 5003, 5004, 5008, 5011, 5014, 5016, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5036, 5037, 5044, 5047, 5050, 5051, 5062, 5065, 5068, 5071, 5073, 5074, 5077, 5079, 5080, 5082, 5083, 5085, 5086, 5089, 5091, 5092, 5093, 5095, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5132, 5134, 5137, 5140, 5143, 5146, 5150, 5151, 5152, 5154, 5156, 5157, 5158, 5160, 5162, 5163, 5166, 5169, 5172, 5175, 5177, 5178, 5180, 5181, 5184, 5187, 5190, 5192, 5193, 5195, 5196, 5198, 5199, 5201, 5202, 5204, 5205, 5207, 5208, 5210, 5211, 5213, 5214, 5217, 5220, 5223, 5226, 5227, 5230, 5231, 5232, 5233, 5234, 5237, 5238, 5244, 5245, 5250, 5252, 5257, 5259, 5262, 5263, 5264, 5265, 5268, 5270, 5271, 5272, 5274, 5275, 5276, 5277, 5278, 5280, 5281, 5282, 5283, 5284, 5285, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5299, 5302, 5303, 5304, 5305, 5311, 5314, 5315, 5316, 5317, 5323, 5326, 5327, 5328, 5329, 5331, 5332, 5333, 5334, 5335, 5339, 5341, 5342, 5343, 5355, 5359], "you": [3, 20, 24, 25, 28, 29, 31, 33, 35, 39, 47, 48, 51, 53, 57, 64, 97, 103, 147, 165, 172, 197, 201, 213, 240, 251, 252, 271, 347, 368, 372, 384, 411, 422, 423, 442, 518, 527, 531, 543, 570, 581, 582, 601, 677, 682, 683, 761, 773, 849, 877, 912, 936, 1106, 1110, 1121, 1147, 1158, 1159, 1178, 1254, 1342, 1388, 1644, 1706, 1898, 1903, 1913, 1926, 1957, 1964, 2024, 2027, 2036, 2047, 2056, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 2275, 2283, 2285, 2292, 2293, 2311, 2313, 2318, 2487, 2805, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3704, 3718, 3722, 3723, 3727, 3728, 3731, 3736, 3738, 3739, 3777, 3789, 3791, 3796, 3798, 3814, 3818, 3824, 3834, 3852, 3876, 3888, 3896, 3897, 3899, 3905, 3906, 3909, 3922, 3923, 3926, 3993, 4006, 4013, 4014, 4025, 4026, 4032, 4041, 4182, 4206, 4219, 4229, 4244, 4245, 4254, 4272, 4287, 4297, 4432, 4813, 4842, 4868, 4878, 4900, 4915, 4921, 4922, 4923, 4928, 4930, 4964, 4973, 5021, 5143, 5227, 5230, 5238, 5283, 5331, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "use": [3, 8, 16, 20, 24, 25, 28, 29, 30, 31, 35, 39, 44, 48, 51, 53, 54, 57, 62, 64, 82, 126, 131, 134, 143, 148, 166, 172, 173, 200, 201, 208, 213, 214, 235, 240, 251, 259, 260, 261, 262, 264, 277, 347, 371, 372, 379, 384, 385, 406, 411, 422, 430, 431, 432, 433, 435, 448, 518, 530, 531, 538, 543, 544, 565, 570, 581, 589, 590, 591, 592, 594, 607, 677, 682, 683, 709, 773, 781, 798, 841, 849, 877, 904, 912, 913, 970, 975, 1025, 1109, 1110, 1117, 1121, 1122, 1143, 1147, 1158, 1166, 1167, 1168, 1169, 1171, 1184, 1254, 1282, 1302, 1318, 1332, 1334, 1336, 1337, 1340, 1346, 1358, 1365, 1376, 1379, 1381, 1382, 1388, 1390, 1398, 1413, 1416, 1417, 1427, 1441, 1447, 1456, 1460, 1470, 1471, 1475, 1477, 1487, 1492, 1497, 1503, 1520, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1644, 1682, 1691, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 1898, 1922, 1926, 1930, 1974, 1976, 1978, 1979, 1983, 1990, 2006, 2008, 2018, 2056, 2122, 2192, 2217, 2275, 2277, 2285, 2293, 2311, 2313, 2323, 2337, 2349, 2363, 2376, 2813, 2848, 2867, 2909, 2918, 2927, 3005, 3013, 3382, 3704, 3708, 3709, 3718, 3723, 3730, 3738, 3739, 3745, 3747, 3748, 3752, 3757, 3766, 3777, 3778, 3779, 3781, 3782, 3788, 3789, 3791, 3792, 3793, 3796, 3798, 3814, 3818, 3819, 3824, 3834, 3838, 3876, 3891, 3896, 3901, 3909, 3922, 3923, 3926, 3932, 3963, 3976, 3993, 3999, 4012, 4025, 4041, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4206, 4241, 4244, 4245, 4254, 4255, 4264, 4272, 4273, 4282, 4287, 4297, 4380, 4432, 4494, 4508, 4509, 4525, 4534, 4535, 4583, 4584, 4620, 4629, 4630, 4644, 4730, 4803, 4873, 4900, 4901, 4915, 4921, 4922, 4923, 4928, 4930, 4961, 4964, 4982, 4985, 4988, 5014, 5093, 5175, 5178, 5181, 5190, 5193, 5202, 5217, 5226, 5227, 5230, 5237, 5238, 5260, 5261, 5281, 5285, 5290, 5294, 5331, 5332, 5333, 5334, 5341, 5347, 5348, 5355, 5359, 5364, 5372], "more": [3, 10, 16, 24, 25, 28, 31, 35, 44, 48, 53, 69, 97, 147, 165, 172, 197, 235, 253, 255, 256, 262, 264, 276, 334, 368, 406, 424, 426, 427, 433, 435, 447, 505, 527, 565, 583, 585, 586, 592, 594, 606, 664, 734, 904, 1106, 1143, 1160, 1162, 1163, 1169, 1171, 1183, 1241, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1365, 1367, 1372, 1374, 1376, 1377, 1379, 1388, 1399, 1401, 1407, 1416, 1441, 1450, 1456, 1462, 1464, 1471, 1472, 1499, 1503, 1537, 1556, 1558, 1563, 1567, 1644, 1753, 1916, 1966, 1970, 1983, 1990, 1994, 2024, 2050, 2083, 2095, 2109, 2129, 2150, 2162, 2192, 2194, 2205, 2217, 2218, 2229, 2249, 2263, 2277, 2285, 2316, 2322, 2323, 2337, 2349, 2363, 2376, 2885, 2908, 3484, 3487, 3705, 3706, 3708, 3718, 3723, 3737, 3748, 3749, 3762, 3811, 3814, 3818, 3854, 3869, 3921, 4020, 4030, 4032, 4172, 4182, 4229, 4299, 4354, 4463, 4515, 4516, 4541, 4542, 4568, 4591, 4636, 4637, 4767, 4825, 4884, 4895, 4899, 4915, 4916, 4920, 4928, 4930, 4970, 4973, 5008, 5014, 5016, 5018, 5077, 5117, 5137, 5143, 5193, 5230, 5235, 5250, 5281, 5290, 5295, 5331, 5333, 5334, 5345, 5354, 5369], "instance": [3, 11, 16, 20, 25, 31, 35, 39, 44, 53, 58, 64, 69, 82, 92, 97, 103, 104, 110, 115, 118, 126, 131, 134, 136, 138, 139, 140, 147, 148, 156, 158, 162, 163, 165, 166, 172, 173, 179, 186, 197, 198, 231, 368, 369, 402, 527, 528, 561, 822, 852, 1001, 1003, 1004, 1005, 1065, 1106, 1107, 1139, 1318, 1388, 1441, 1446, 1447, 1456, 1472, 1642, 1643, 1644, 1710, 1898, 1926, 1953, 1982, 1994, 2021, 2023, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2265, 2269, 2308, 2337, 2474, 2486, 2487, 2494, 2500, 2501, 2503, 2798, 2895, 2905, 3704, 3711, 3718, 3722, 3725, 3732, 3736, 3757, 3769, 3777, 3796, 3811, 3813, 3814, 3824, 3832, 3834, 3838, 3852, 3855, 3862, 3871, 3885, 3902, 3909, 3923, 3935, 3966, 3982, 3995, 4008, 4010, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4086, 4157, 4162, 4167, 4172, 4182, 4244, 4245, 4258, 4276, 4803, 4829, 4836, 4863, 4870, 4883, 4895, 4915, 4916, 4922, 4933, 4936, 4973, 5014, 5017, 5077, 5143, 5214, 5217, 5235, 5237, 5250, 5256, 5268, 5272, 5278, 5284, 5285, 5287, 5289, 5294, 5364], "table": [3, 31, 64, 1102, 1296, 1311, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 2195, 4032, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4224, 4354, 4365, 4386, 4421, 4487, 4491, 4497, 4499, 4506, 4508, 4509, 4513, 4518, 4519, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4533, 4534, 4535, 4539, 4540, 4544, 4568, 4583, 4616, 4617, 4618, 4619, 4620, 4623, 4624, 4625, 4628, 4629, 4630, 4634, 4635, 4639, 4651, 4734, 4736, 5239, 5244], "summarizes": 3, "automatic": [3, 60, 64, 877, 912, 1951, 1952, 1993, 1994, 2018, 2323, 5362, 5364], "mps": [3, 64, 305, 476, 635, 1212, 2323, 2349, 2582, 2783, 5370], "stabilizer": [3, 64, 301, 308, 317, 326, 472, 479, 488, 497, 631, 638, 647, 656, 1208, 1215, 1224, 1233, 1458, 2216, 2323, 2349, 2445, 2530, 2621, 2725, 2779, 2786, 2794, 4354, 4363, 4370, 4519, 4595, 4599, 4600, 4603, 4611, 4613, 4617, 4620, 4623, 4624, 4716, 5364, 5369, 5370], "ext": [3, 5228], "unitary": [3, 8, 10, 11, 44, 48, 64, 66, 86, 93, 103, 104, 105, 111, 115, 116, 117, 136, 137, 138, 139, 143, 145, 193, 211, 269, 271, 272, 275, 276, 313, 320, 328, 342, 346, 382, 440, 442, 443, 446, 447, 484, 491, 499, 513, 517, 523, 541, 599, 601, 602, 605, 606, 643, 650, 658, 672, 676, 970, 979, 984, 998, 1020, 1029, 1034, 1120, 1176, 1178, 1179, 1182, 1183, 1220, 1227, 1235, 1249, 1253, 1287, 1294, 1306, 1314, 1372, 1376, 1397, 1456, 1458, 1644, 1706, 1753, 1755, 1762, 1764, 1769, 1772, 1786, 1795, 1800, 1801, 1824, 1829, 1840, 1845, 1856, 1861, 1872, 1877, 1879, 1881, 1885, 1886, 1888, 1890, 1891, 1895, 1896, 1897, 1922, 1930, 2060, 2323, 2376, 2686, 2764, 2791, 2797, 2808, 2846, 2847, 2848, 2856, 2857, 2861, 2909, 2918, 2927, 2932, 2933, 3757, 3764, 3875, 4162, 4192, 4229, 4299, 4327, 4332, 4333, 4346, 4351, 4352, 4354, 4413, 4418, 4419, 4421, 4422, 4423, 4435, 4455, 4460, 4461, 4560, 4582, 4678, 4683, 4684, 4697, 4702, 4703, 4710, 4713, 4714, 4720, 4726, 4731, 4735, 4738, 4803, 4808, 4821, 4901, 5018, 5020, 5082, 5202, 5204, 5226, 5227, 5228, 5229, 5230, 5234, 5236, 5237, 5238, 5348, 5350, 5353, 5364, 5367], "superop": [3, 64, 312, 319, 483, 490, 642, 649, 1219, 1226, 2323, 2673, 2751, 2790, 2796, 2829, 4317, 4319, 4329, 4334, 4336, 4338, 4348, 4353, 4392, 4403, 4405, 4415, 4420, 4444, 4445, 4447, 4457, 4462, 4668, 4670, 4680, 4685, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4726, 5364, 5366], "saveamplitudes": [3, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516], "saveamplitudessquared": [3, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529], "saveclifford": [3, 64, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542], "saveexpectationvalue": [3, 64, 303, 474, 633, 1210, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2781], "saveexpectationvaluevariance": [3, 64, 304, 475, 634, 1211, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2782], "savematrixproductstate": [3, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594], "saveprobabilities": [3, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607], "saveprobabilitiesdict": [3, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620], "savestabilizer": [3, 64, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633], "savestatevectordict": [3, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672], "savesuperop": [3, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685], "setdensitymatrix": [3, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711], "setstabilizer": [3, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737], "setstatevector": [3, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750], "setunitary": [3, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776], "build": [4, 6, 31, 35, 48, 57, 58, 59, 64, 66, 86, 138, 240, 252, 275, 347, 411, 423, 446, 518, 570, 582, 605, 677, 1147, 1159, 1254, 1448, 1464, 1465, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1952, 1982, 1994, 2015, 2155, 2285, 3831, 3834, 4008, 4031, 4041, 4751, 4757, 4774, 4779, 4788, 4793, 4924, 4964, 5240, 5245, 5352, 5354, 5358, 5367], "simulating": [4, 6, 64, 2323, 2349, 2808, 4299, 4354, 4819, 4825, 5362], "presence": [4, 28, 53, 64, 105, 877, 1922], "errors": [4, 16, 35, 48, 53, 54, 64, 65, 259, 260, 261, 430, 431, 432, 589, 590, 591, 1166, 1167, 1168, 1644, 1718, 1919, 2276, 2294, 2296, 2317, 2319, 2323, 2349, 2798, 2801, 2808, 2848, 2886, 2887, 2888, 2889, 2890, 2891, 2893, 3712, 3713, 3714, 3715, 3716, 3717, 3723, 3733, 3734, 3735, 3739, 3742, 3743, 3752, 3755, 3766, 3770, 3771, 3772, 3774, 3775, 3776, 3796, 3825, 3826, 3827, 3828, 3829, 3839, 3840, 3841, 3842, 3843, 3844, 4238, 4745, 4767, 4810, 4901, 4938, 4964, 5033, 5038, 5053, 5226, 5230, 5237, 5250, 5279, 5288, 5339], "noisemodel": [4, 7, 64, 2323, 2349, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2886, 2888, 2889, 2890, 2891, 5339, 5366, 5367], "class": [4, 10, 20, 25, 30, 31, 35, 39, 48, 51, 53, 54, 57, 64, 66, 67, 69, 75, 77, 79, 81, 84, 86, 88, 90, 92, 95, 97, 101, 103, 105, 108, 110, 113, 115, 118, 123, 125, 128, 130, 133, 136, 140, 143, 147, 154, 156, 160, 162, 165, 172, 181, 186, 189, 191, 193, 207, 253, 276, 352, 357, 362, 364, 378, 424, 447, 523, 537, 583, 606, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 830, 832, 833, 841, 849, 852, 861, 869, 877, 888, 896, 904, 913, 919, 920, 923, 936, 939, 942, 943, 956, 970, 984, 986, 1000, 1006, 1020, 1034, 1036, 1050, 1063, 1067, 1083, 1099, 1102, 1116, 1160, 1183, 1259, 1262, 1263, 1277, 1294, 1296, 1314, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1417, 1419, 1421, 1424, 1427, 1428, 1441, 1446, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1654, 1718, 1719, 1722, 1745, 1747, 1749, 1751, 1753, 1769, 1772, 1786, 1800, 1802, 1815, 1829, 1831, 1845, 1847, 1861, 1863, 1877, 1879, 1895, 1898, 1923, 1926, 1930, 1932, 1934, 1945, 1949, 1951, 1953, 1968, 1970, 1974, 1976, 1978, 1979, 1981, 1984, 1987, 1990, 1993, 1995, 1998, 2002, 2004, 2006, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2024, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2265, 2267, 2269, 2271, 2272, 2274, 2275, 2276, 2277, 2282, 2285, 2291, 2293, 2294, 2295, 2296, 2297, 2309, 2313, 2314, 2317, 2318, 2319, 2320, 2323, 2337, 2349, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2473, 2487, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2798, 2801, 2813, 2814, 2818, 2824, 2825, 2826, 2830, 2837, 2838, 2842, 2862, 2867, 2868, 2893, 2894, 2906, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3011, 3013, 3019, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3388, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3482, 3485, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3711, 3716, 3718, 3735, 3736, 3743, 3744, 3756, 3766, 3770, 3773, 3776, 3777, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3795, 3796, 3826, 3830, 3834, 3839, 3845, 3852, 3869, 3876, 3889, 3891, 3899, 3901, 3905, 3906, 3909, 3920, 3922, 3925, 3926, 3932, 3935, 3951, 3954, 3957, 3960, 3963, 3973, 3976, 3979, 3982, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4086, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4203, 4206, 4209, 4212, 4215, 4229, 4234, 4238, 4239, 4240, 4241, 4244, 4245, 4246, 4249, 4252, 4254, 4255, 4258, 4261, 4264, 4267, 4270, 4272, 4273, 4276, 4279, 4282, 4285, 4287, 4288, 4291, 4294, 4297, 4298, 4299, 4316, 4335, 4354, 4376, 4402, 4421, 4424, 4432, 4442, 4444, 4463, 4487, 4519, 4545, 4552, 4568, 4595, 4612, 4614, 4640, 4667, 4686, 4705, 4712, 4742, 4745, 4751, 4767, 4773, 4787, 4802, 4814, 4817, 4819, 4821, 4823, 4825, 4831, 4834, 4835, 4839, 4861, 4862, 4866, 4867, 4868, 4869, 4873, 4878, 4879, 4894, 4901, 4903, 4915, 4922, 4923, 4930, 4933, 4935, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5228, 5235, 5237, 5238, 5239, 5241, 5244, 5246, 5247, 5250, 5253, 5258, 5268, 5272, 5278, 5295, 5307, 5319, 5332, 5355], "represent": [4, 12, 28, 39, 48, 64, 1296, 1373, 1378, 1392, 1475, 1476, 1480, 1551, 1555, 1677, 1719, 1722, 1745, 1749, 1751, 1898, 2019, 2161, 2232, 2265, 2269, 2318, 2801, 2875, 2882, 3711, 3736, 3768, 4069, 4071, 4205, 4208, 4211, 4214, 4217, 4252, 4258, 4270, 4276, 4291, 4519, 4751, 4773, 4787, 4878, 4879, 4964, 5014, 5226, 5262, 5282, 5290], "construct": [4, 16, 28, 35, 64, 72, 93, 99, 111, 116, 121, 137, 147, 149, 150, 157, 165, 167, 168, 172, 174, 175, 186, 187, 201, 213, 372, 384, 531, 543, 763, 769, 849, 877, 1067, 1102, 1110, 1121, 1377, 1388, 1401, 1456, 1466, 1472, 1537, 1898, 1935, 1937, 1939, 2024, 2119, 2155, 2183, 2184, 2801, 2866, 2884, 2885, 3767, 4502, 4531, 4577, 4578, 4579, 4626, 4819, 4823, 4825, 4874, 4879, 4902, 5039, 5230, 5364, 5365, 5366, 5367, 5370], "generate": [4, 6, 16, 29, 33, 35, 44, 48, 51, 64, 150, 168, 175, 242, 243, 413, 414, 572, 573, 709, 1099, 1149, 1150, 1640, 1644, 2801, 2875, 2876, 3708, 3999, 4008, 4012, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4235, 4380, 4394, 4395, 4547, 4608, 4609, 4644, 4660, 4661, 4732, 4849, 4887, 4924, 5050, 5055, 5230, 5250, 5295, 5307, 5319, 5331, 5333, 5334, 5341, 5364], "basic": [4, 25, 31, 39, 44, 48, 62, 64, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1644, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2068, 2132, 2323, 2349, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2801, 2848, 2849, 2893, 2906, 3708, 3966, 4228, 4241, 4922, 4970, 5035, 5178, 5267, 5355, 5359], "ibmq": [4, 20, 24, 25, 31, 33, 47, 53, 57, 63, 64, 2323, 2349, 2801, 3704, 3718, 3777, 3823, 3834, 3868, 3876, 3922, 4254, 4272, 4287, 4827, 4828, 5265, 5286, 5288, 5289, 5339, 5365], "simplified": [4, 64, 1478, 1479, 2057, 2126, 4588], "approximate": [4, 49, 64, 147, 186, 709, 781, 1396, 1406, 1471, 1922, 1926, 2170, 2201, 2214, 2226, 2244, 2258, 2323, 2349, 2801, 2808, 2886, 2887, 4819, 4825, 4964, 5202, 5235, 5236, 5239, 5244, 5246, 5247, 5341, 5368], "generated": [4, 31, 33, 35, 39, 48, 64, 165, 172, 235, 406, 565, 769, 798, 916, 917, 1096, 1101, 1102, 1143, 1441, 1450, 1537, 1563, 1567, 2001, 2323, 2349, 2363, 2376, 2800, 2801, 2844, 2867, 2936, 3781, 3782, 3783, 4084, 4182, 4232, 4299, 4751, 4839, 4847, 4848, 4896, 4902, 4917, 4973, 5117, 5178, 5281, 5283, 5291, 5292, 5331, 5333, 5334, 5364], "properties": [4, 10, 16, 28, 31, 33, 48, 64, 76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 683, 831, 1644, 1695, 1930, 2277, 2285, 2290, 2309, 2318, 2323, 2331, 2337, 2343, 2349, 2357, 2363, 2370, 2376, 2383, 2798, 2801, 2808, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2912, 2921, 2930, 2936, 2940, 2949, 2958, 2968, 2975, 2985, 2992, 3002, 3010, 3018, 3025, 3035, 3042, 3052, 3059, 3069, 3076, 3086, 3092, 3102, 3109, 3119, 3125, 3135, 3142, 3152, 3158, 3168, 3175, 3185, 3192, 3202, 3209, 3219, 3226, 3236, 3243, 3253, 3260, 3270, 3277, 3287, 3293, 3303, 3310, 3320, 3327, 3337, 3343, 3353, 3360, 3370, 3377, 3387, 3395, 3402, 3412, 3419, 3428, 3436, 3446, 3453, 3463, 3469, 3479, 3491, 3500, 3510, 3516, 3526, 3533, 3543, 3549, 3558, 3568, 3575, 3585, 3592, 3602, 3608, 3616, 3625, 3635, 3642, 3652, 3658, 3668, 3675, 3685, 3691, 3701, 3708, 3725, 3809, 3894, 3935, 3940, 4463, 4519, 4523, 4614, 4618, 4767, 4878, 4901, 4922, 4923, 4928, 4939, 4964, 5033, 5071, 5123, 5202, 5214, 5217, 5230, 5258, 5339, 5355, 5359], "real": [4, 8, 10, 33, 35, 39, 48, 60, 63, 64, 154, 155, 162, 186, 343, 344, 345, 514, 515, 516, 673, 674, 675, 877, 1077, 1093, 1250, 1251, 1252, 1448, 1503, 1815, 1831, 1847, 1863, 1908, 1987, 2042, 2123, 2141, 2155, 2161, 2162, 2169, 2232, 2239, 2337, 2801, 3796, 4031, 4570, 4743, 5056, 5262, 5291, 5292, 5361], ".from": [4, 30, 31, 33, 64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1388, 1462, 1526, 1772, 2323, 2337, 2349, 2801, 2862, 4389, 4398, 4487, 4525, 4529, 4530, 4539, 4540, 4544, 4580, 4620, 4624, 4625, 4634, 4635, 4639, 4655, 4664, 5014, 5284, 5291, 5292, 5293, 5294, 5339, 5341, 5342, 5343, 5347, 5365, 5372], "_backend": [4, 16, 31, 32, 33, 47, 64, 162, 904, 2323, 2337, 2349, 2801, 2862, 3704, 3736, 3834, 4722, 5286, 5288, 5289, 5290, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5348, 5349, 5350, 5352, 5353, 5361, 5362, 5364, 5365, 5372], "()": [4, 10, 11, 12, 16, 20, 25, 29, 30, 31, 33, 35, 39, 44, 47, 48, 51, 53, 56, 57, 62, 63, 64, 70, 119, 181, 186, 198, 200, 201, 213, 231, 235, 240, 251, 252, 253, 276, 277, 324, 325, 326, 334, 347, 357, 362, 364, 369, 371, 372, 384, 402, 406, 411, 422, 423, 424, 447, 448, 495, 496, 497, 505, 518, 523, 528, 530, 531, 543, 561, 565, 570, 581, 582, 583, 606, 607, 654, 655, 656, 664, 677, 849, 877, 914, 920, 939, 970, 1063, 1067, 1102, 1107, 1109, 1110, 1121, 1139, 1143, 1147, 1158, 1159, 1160, 1183, 1184, 1231, 1232, 1233, 1241, 1254, 1259, 1376, 1377, 1379, 1388, 1401, 1410, 1441, 1443, 1448, 1450, 1456, 1462, 1465, 1468, 1471, 1503, 1526, 1537, 1563, 1567, 1641, 1644, 1645, 1650, 1691, 1708, 1717, 1719, 1772, 1879, 1922, 1929, 1948, 1969, 1983, 1990, 2001, 2008, 2024, 2056, 2057, 2122, 2161, 2232, 2265, 2269, 2277, 2285, 2311, 2323, 2337, 2349, 2363, 2376, 2473, 2487, 2556, 2569, 2801, 2808, 2813, 2814, 2831, 2862, 2867, 2886, 2887, 2891, 2892, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3705, 3708, 3711, 3718, 3722, 3730, 3736, 3737, 3759, 3761, 3763, 3764, 3777, 3796, 3814, 3818, 3819, 3821, 3824, 3834, 3838, 3852, 3864, 3871, 3872, 3873, 3874, 3875, 3876, 3891, 3899, 3907, 3908, 3909, 3922, 3923, 3933, 3939, 3952, 3955, 3958, 3961, 3966, 3968, 3974, 3977, 3980, 3983, 3993, 4006, 4008, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4041, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4182, 4192, 4195, 4219, 4220, 4247, 4253, 4254, 4255, 4262, 4268, 4271, 4272, 4273, 4280, 4286, 4287, 4289, 4292, 4297, 4298, 4299, 4301, 4318, 4335, 4337, 4354, 4356, 4380, 4388, 4389, 4394, 4395, 4398, 4404, 4424, 4426, 4446, 4463, 4467, 4484, 4487, 4503, 4508, 4509, 4513, 4518, 4519, 4525, 4529, 4530, 4534, 4535, 4539, 4540, 4544, 4552, 4554, 4570, 4571, 4580, 4583, 4584, 4595, 4603, 4607, 4608, 4609, 4614, 4620, 4625, 4629, 4630, 4634, 4635, 4639, 4644, 4654, 4655, 4658, 4660, 4661, 4664, 4667, 4669, 4688, 4714, 4715, 4720, 4722, 4724, 4726, 4745, 4748, 4751, 4765, 4767, 4770, 4785, 4800, 4804, 4806, 4807, 4808, 4812, 4842, 4873, 4894, 4895, 4897, 4898, 4899, 4902, 4913, 4916, 4918, 4919, 4920, 4922, 4923, 4928, 4958, 4973, 5014, 5054, 5077, 5143, 5163, 5204, 5214, 5217, 5226, 5227, 5229, 5230, 5237, 5238, 5250, 5281, 5282, 5283, 5286, 5288, 5289, 5290, 5305, 5317, 5329, 5331, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "method": [4, 11, 16, 25, 28, 44, 48, 51, 53, 64, 66, 70, 97, 103, 105, 110, 119, 140, 142, 143, 162, 163, 179, 186, 200, 201, 213, 235, 240, 251, 252, 288, 303, 304, 323, 326, 327, 371, 372, 384, 406, 411, 422, 423, 459, 474, 475, 494, 497, 498, 530, 531, 543, 565, 570, 581, 582, 618, 633, 634, 653, 656, 657, 683, 717, 773, 789, 798, 806, 814, 833, 849, 852, 861, 877, 888, 896, 927, 947, 960, 973, 974, 984, 990, 1002, 1010, 1023, 1024, 1034, 1040, 1054, 1065, 1109, 1110, 1121, 1143, 1147, 1158, 1159, 1195, 1210, 1211, 1230, 1233, 1234, 1267, 1280, 1281, 1294, 1299, 1300, 1314, 1323, 1372, 1403, 1407, 1410, 1432, 1442, 1443, 1472, 1508, 1527, 1551, 1642, 1644, 1666, 1706, 1734, 1757, 1758, 1769, 1776, 1789, 1790, 1800, 1806, 1818, 1819, 1829, 1834, 1835, 1845, 1850, 1851, 1861, 1866, 1867, 1877, 1883, 1884, 1895, 1901, 1906, 1922, 1934, 1945, 1952, 1953, 1956, 1959, 1974, 1994, 2001, 2010, 2013, 2014, 2017, 2018, 2020, 2021, 2023, 2028, 2035, 2039, 2064, 2072, 2075, 2089, 2102, 2117, 2122, 2135, 2138, 2154, 2161, 2180, 2182, 2192, 2198, 2211, 2217, 2224, 2232, 2235, 2238, 2255, 2277, 2282, 2283, 2285, 2290, 2291, 2292, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2393, 2403, 2407, 2421, 2435, 2445, 2449, 2463, 2473, 2487, 2508, 2521, 2534, 2547, 2556, 2560, 2569, 2573, 2586, 2599, 2612, 2625, 2634, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 2781, 2782, 2798, 2801, 2814, 2831, 2870, 2872, 2883, 2884, 2909, 2916, 2918, 2925, 2927, 2934, 2936, 2943, 2945, 2952, 2954, 2961, 2963, 2968, 2969, 2970, 2971, 2978, 2980, 2985, 2986, 2987, 2988, 2995, 2997, 3002, 3003, 3004, 3005, 3010, 3011, 3012, 3013, 3018, 3019, 3020, 3021, 3028, 3030, 3035, 3036, 3037, 3038, 3045, 3047, 3052, 3053, 3054, 3055, 3062, 3064, 3069, 3070, 3071, 3072, 3079, 3081, 3086, 3087, 3088, 3089, 3095, 3097, 3102, 3103, 3104, 3105, 3112, 3114, 3119, 3120, 3121, 3122, 3128, 3130, 3135, 3136, 3137, 3138, 3145, 3147, 3152, 3153, 3154, 3155, 3161, 3163, 3168, 3169, 3170, 3171, 3178, 3180, 3185, 3186, 3187, 3188, 3195, 3197, 3202, 3203, 3204, 3205, 3212, 3214, 3219, 3220, 3221, 3222, 3229, 3231, 3236, 3237, 3238, 3239, 3246, 3248, 3253, 3254, 3255, 3256, 3263, 3265, 3270, 3271, 3272, 3273, 3280, 3282, 3287, 3288, 3289, 3290, 3296, 3298, 3303, 3304, 3305, 3306, 3313, 3315, 3320, 3321, 3322, 3323, 3330, 3332, 3337, 3338, 3339, 3340, 3346, 3348, 3353, 3354, 3355, 3356, 3363, 3365, 3370, 3371, 3372, 3373, 3380, 3382, 3387, 3388, 3389, 3390, 3395, 3396, 3397, 3398, 3405, 3407, 3412, 3413, 3414, 3415, 3422, 3424, 3431, 3433, 3439, 3441, 3446, 3447, 3448, 3449, 3456, 3458, 3463, 3464, 3465, 3466, 3472, 3474, 3479, 3480, 3481, 3488, 3494, 3496, 3503, 3505, 3510, 3511, 3512, 3513, 3519, 3521, 3526, 3527, 3528, 3529, 3536, 3538, 3543, 3544, 3545, 3546, 3552, 3554, 3561, 3563, 3568, 3569, 3570, 3571, 3578, 3580, 3585, 3586, 3587, 3588, 3595, 3597, 3602, 3603, 3604, 3605, 3611, 3613, 3619, 3621, 3628, 3630, 3635, 3636, 3637, 3638, 3645, 3647, 3652, 3653, 3654, 3655, 3661, 3663, 3668, 3669, 3670, 3671, 3678, 3680, 3685, 3686, 3687, 3688, 3694, 3696, 3701, 3702, 3703, 3704, 3708, 3711, 3718, 3722, 3730, 3731, 3757, 3784, 3785, 3786, 3796, 3811, 3813, 3814, 3818, 3819, 3824, 3834, 3862, 3876, 3881, 3890, 3891, 3897, 3899, 3902, 3906, 3909, 3923, 3926, 3966, 3985, 4000, 4002, 4013, 4014, 4015, 4023, 4033, 4159, 4164, 4169, 4174, 4182, 4184, 4219, 4231, 4244, 4245, 4299, 4301, 4318, 4337, 4354, 4356, 4376, 4380, 4388, 4394, 4395, 4404, 4426, 4432, 4446, 4463, 4467, 4491, 4494, 4508, 4509, 4513, 4522, 4525, 4529, 4534, 4535, 4539, 4554, 4571, 4583, 4584, 4603, 4607, 4608, 4609, 4614, 4617, 4620, 4629, 4630, 4634, 4644, 4654, 4658, 4660, 4661, 4669, 4688, 4712, 4716, 4728, 4730, 4745, 4765, 4767, 4785, 4796, 4800, 4803, 4817, 4821, 4842, 4901, 4902, 4913, 4923, 4928, 4930, 4978, 5123, 5175, 5202, 5204, 5216, 5219, 5226, 5230, 5241, 5250, 5263, 5278, 5281, 5305, 5317, 5329, 5331, 5333, 5334, 5341, 5358, 5362, 5364, 5369, 5370], "see": [4, 10, 25, 31, 35, 39, 48, 53, 64, 69, 97, 116, 147, 156, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 241, 245, 249, 250, 252, 253, 257, 258, 262, 263, 264, 268, 273, 276, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 406, 407, 412, 416, 420, 421, 423, 424, 428, 429, 433, 434, 435, 439, 444, 447, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 565, 566, 571, 575, 579, 580, 582, 583, 587, 588, 592, 593, 594, 598, 603, 606, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 679, 680, 681, 682, 693, 743, 773, 798, 806, 814, 833, 849, 861, 877, 896, 975, 1025, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1143, 1144, 1148, 1152, 1156, 1157, 1159, 1160, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1183, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1256, 1257, 1258, 1282, 1302, 1376, 1377, 1379, 1388, 1399, 1441, 1448, 1450, 1456, 1462, 1471, 1483, 1503, 1526, 1537, 1563, 1567, 1760, 1772, 1791, 1820, 1836, 1852, 1868, 1879, 1947, 2162, 2333, 2359, 2372, 2385, 2801, 2813, 2867, 2887, 2889, 3708, 3718, 3723, 3727, 3730, 3798, 3811, 3885, 3888, 3999, 4012, 4020, 4032, 4158, 4163, 4168, 4172, 4173, 4178, 4183, 4188, 4316, 4335, 4376, 4380, 4385, 4386, 4402, 4444, 4640, 4644, 4650, 4651, 4667, 4686, 4717, 4825, 4946, 4949, 4952, 4955, 5014, 5050, 5117, 5137, 5140, 5202, 5227, 5235, 5238, 5259, 5262, 5281, 5331, 5333, 5334, 5342, 5359], "documentation": [4, 16, 25, 31, 35, 51, 57, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 257, 258, 262, 263, 264, 268, 273, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 428, 429, 433, 434, 435, 439, 444, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 587, 588, 592, 593, 594, 598, 603, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 679, 680, 681, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1152, 1156, 1157, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1256, 1257, 1258, 1475, 1503, 1641, 1644, 2801, 3838, 3864, 3922, 4380, 4644, 4717, 4923, 5202, 5226, 5227, 5230, 5238, 5339], "details": [4, 16, 28, 39, 44, 48, 51, 53, 64, 97, 116, 147, 693, 798, 814, 841, 877, 1641, 2162, 2290, 2337, 2887, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3804, 3838, 3847, 3854, 3864, 3882, 3999, 4012, 4032, 4158, 4163, 4168, 4172, 4173, 4178, 4183, 4188, 4316, 4335, 4402, 4444, 4667, 4686, 4825, 5117, 5140, 5151, 5193, 5235, 5259, 5262, 5295, 5331, 5332, 5333, 5334], "example": [4, 8, 10, 11, 12, 20, 24, 25, 28, 30, 31, 35, 39, 44, 48, 51, 53, 57, 64, 143, 172, 235, 240, 252, 253, 276, 328, 342, 343, 344, 345, 347, 406, 411, 423, 424, 447, 499, 513, 514, 515, 516, 518, 565, 570, 582, 583, 606, 658, 672, 673, 674, 675, 677, 693, 773, 849, 877, 904, 912, 926, 936, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1102, 1143, 1147, 1159, 1160, 1183, 1235, 1249, 1250, 1251, 1252, 1254, 1266, 1280, 1299, 1322, 1342, 1372, 1373, 1374, 1392, 1393, 1401, 1406, 1407, 1431, 1448, 1450, 1462, 1464, 1472, 1480, 1499, 1503, 1507, 1526, 1527, 1550, 1551, 1556, 1558, 1640, 1641, 1644, 1666, 1706, 1722, 1757, 1772, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 1898, 1906, 1911, 1922, 1930, 1936, 1948, 1959, 1962, 1983, 1990, 2024, 2025, 2028, 2032, 2039, 2045, 2055, 2063, 2064, 2068, 2075, 2077, 2089, 2092, 2102, 2105, 2117, 2125, 2132, 2138, 2143, 2182, 2186, 2198, 2200, 2211, 2213, 2224, 2225, 2238, 2242, 2255, 2257, 2271, 2274, 2277, 2285, 2311, 2323, 2337, 2349, 2363, 2376, 2392, 2406, 2420, 2434, 2448, 2462, 2487, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 2798, 2801, 2813, 2830, 2862, 2867, 2885, 2914, 2923, 2932, 3704, 3705, 3718, 3722, 3723, 3727, 3736, 3737, 3738, 3739, 3757, 3777, 3779, 3789, 3791, 3796, 3801, 3814, 3816, 3821, 3823, 3834, 3852, 3855, 3862, 3868, 3881, 3888, 3899, 3906, 3908, 3909, 3922, 3932, 3976, 4000, 4001, 4008, 4013, 4014, 4030, 4094, 4182, 4206, 4220, 4254, 4272, 4287, 4297, 4298, 4354, 4398, 4463, 4487, 4503, 4513, 4518, 4519, 4525, 4529, 4530, 4539, 4540, 4544, 4570, 4577, 4579, 4580, 4614, 4620, 4624, 4625, 4635, 4639, 4664, 4751, 4803, 4813, 4819, 4825, 4880, 4881, 4882, 4896, 4900, 4915, 4917, 4921, 4922, 4923, 4927, 4928, 4930, 4934, 4935, 4938, 4964, 4973, 5014, 5024, 5033, 5120, 5181, 5226, 5262, 5281, 5283, 5343, 5345, 5357, 5366, 5369], "import": [4, 10, 11, 12, 16, 20, 24, 25, 29, 30, 31, 32, 33, 35, 39, 47, 48, 51, 53, 57, 62, 64, 162, 181, 186, 198, 235, 240, 251, 252, 253, 276, 334, 347, 357, 362, 364, 369, 406, 411, 422, 423, 424, 447, 505, 518, 523, 528, 565, 570, 581, 582, 583, 606, 664, 677, 849, 877, 904, 970, 1067, 1102, 1107, 1143, 1147, 1158, 1159, 1160, 1183, 1241, 1254, 1388, 1410, 1448, 1450, 1465, 1468, 1567, 1640, 1645, 1646, 1649, 1650, 2058, 2801, 3704, 3718, 3777, 3796, 3834, 3876, 3907, 3922, 4006, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4182, 4196, 4201, 4219, 4254, 4272, 4287, 4297, 4298, 4299, 4354, 4389, 4398, 4487, 4503, 4513, 4518, 4525, 4529, 4530, 4539, 4540, 4544, 4595, 4620, 4624, 4625, 4634, 4635, 4639, 4644, 4655, 4664, 4722, 4922, 4923, 5014, 5033, 5077, 5099, 5143, 5163, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "quantumcircuit": [4, 10, 11, 12, 16, 25, 30, 31, 33, 35, 39, 48, 53, 56, 58, 62, 63, 66, 69, 72, 86, 88, 90, 93, 97, 99, 111, 116, 117, 121, 137, 138, 139, 147, 149, 157, 165, 167, 172, 174, 179, 181, 182, 184, 186, 187, 188, 190, 191, 193, 198, 200, 209, 210, 211, 214, 215, 216, 231, 234, 235, 238, 240, 241, 242, 243, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 266, 267, 275, 276, 285, 286, 288, 289, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 334, 337, 342, 343, 344, 345, 347, 353, 355, 357, 358, 360, 363, 364, 369, 371, 380, 381, 382, 385, 386, 387, 402, 405, 406, 409, 411, 412, 413, 414, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 437, 438, 446, 447, 456, 457, 459, 460, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 505, 508, 513, 514, 515, 516, 518, 523, 528, 530, 539, 540, 541, 544, 545, 546, 561, 564, 565, 568, 570, 571, 572, 573, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 596, 597, 605, 606, 615, 616, 618, 619, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 664, 667, 672, 673, 674, 675, 677, 852, 916, 918, 936, 956, 966, 970, 1001, 1003, 1006, 1036, 1046, 1067, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1263, 1293, 1313, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1404, 1406, 1407, 1410, 1441, 1442, 1443, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1778, 1902, 1903, 1913, 1953, 1957, 1964, 2001, 2027, 2031, 2036, 2047, 2049, 2060, 2066, 2067, 2068, 2069, 2073, 2079, 2080, 2084, 2087, 2093, 2097, 2100, 2106, 2107, 2112, 2115, 2127, 2132, 2136, 2145, 2147, 2153, 2171, 2177, 2189, 2190, 2202, 2215, 2232, 2245, 2259, 2265, 2267, 2269, 2272, 2282, 2291, 2333, 2359, 2372, 2385, 2494, 2501, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2813, 2888, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3718, 3730, 3757, 3760, 3761, 3763, 3764, 3801, 3838, 3851, 3855, 3864, 3871, 3872, 3873, 3874, 3875, 3876, 3896, 3982, 4032, 4244, 4245, 4297, 4298, 4299, 4311, 4316, 4335, 4354, 4361, 4370, 4376, 4384, 4402, 4424, 4432, 4444, 4463, 4473, 4500, 4595, 4599, 4640, 4649, 4667, 4686, 4716, 4722, 4803, 4805, 4806, 4807, 4808, 4814, 4816, 4818, 4819, 4820, 4822, 4823, 4824, 4825, 4826, 4900, 4921, 5014, 5077, 5120, 5143, 5163, 5193, 5239, 5244, 5276, 5281, 5282, 5283, 5284, 5286, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335, 5337, 5342, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "execute": [4, 10, 16, 25, 31, 35, 48, 56, 59, 60, 62, 64, 69, 158, 1641, 1644, 2277, 2285, 2473, 2487, 2499, 3708, 3838, 3851, 3864, 3876, 3885, 3909, 3920, 4031, 4722, 4900, 4921, 4958, 5021, 5123, 5146, 5250, 5253, 5288, 5289, 5290, 5347, 5348, 5349, 5365, 5370, 5372], ".visualization": [4, 33, 45, 48, 56, 62, 64, 235, 406, 565, 1143, 1645, 1646, 4380, 4644, 5077, 5143, 5343, 5345, 5347, 5348, 5349, 5350, 5354, 5355, 5364, 5365, 5366, 5367, 5369, 5372], "plot": [4, 10, 33, 48, 62, 64, 235, 406, 565, 1143, 3783, 3786, 3794, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 5281, 5282, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5319, 5343, 5345, 5347, 5348, 5354, 5364, 5365, 5366, 5367, 5369, 5372], "_histogram": [4, 33, 62, 64, 5286, 5343, 5345, 5347, 5348, 5364, 5365, 5366, 5367, 5369, 5372], ".load": [4, 20, 25, 33, 39, 47, 64, 2801, 3718, 3777, 3834, 3876, 3922, 5286, 5288, 5289], "_account": [4, 20, 25, 33, 47, 64, 2801, 3704, 3718, 3777, 3834, 3876, 3922, 5286, 5288, 5289], ".get": [4, 16, 25, 31, 32, 33, 44, 47, 62, 64, 162, 235, 406, 565, 849, 904, 1143, 2801, 3704, 3814, 3834, 3862, 4182, 4722, 5281, 5286, 5288, 5289, 5290, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "('": [4, 10, 11, 16, 24, 25, 31, 32, 33, 35, 39, 47, 48, 57, 64, 198, 253, 276, 369, 424, 447, 528, 583, 606, 904, 920, 939, 1067, 1107, 1160, 1183, 1259, 1388, 1450, 1567, 1898, 1906, 1959, 2001, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2801, 3704, 3834, 4008, 4020, 4032, 4055, 4229, 4297, 4298, 4389, 4398, 4463, 4487, 4513, 4539, 4595, 4634, 4655, 4664, 4722, 4751, 4915, 4922, 5275, 5286, 5288, 5289, 5290, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5358, 5359, 5361, 5362, 5364, 5366, 5369, 5372], "_vigo": [4, 47, 64, 2801, 3655, 3663, 3718, 5286, 5288, 5289, 5339, 5365], "')": [4, 11, 16, 24, 25, 31, 32, 33, 35, 39, 47, 48, 63, 64, 198, 369, 528, 904, 1067, 1102, 1107, 1379, 1388, 1465, 1640, 1645, 1646, 1649, 1650, 1898, 1906, 1959, 2001, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2363, 2376, 2801, 3704, 3777, 3834, 3922, 4008, 4020, 4032, 4033, 4055, 4229, 4297, 4298, 4389, 4398, 4463, 4487, 4513, 4539, 4595, 4634, 4644, 4655, 4664, 4722, 4884, 4922, 5120, 5275, 5282, 5283, 5286, 5288, 5289, 5290, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5364, 5365, 5367, 5369, 5370, 5372], "_model": [4, 64, 2323, 2337, 2349, 2801, 2808, 2862, 2888, 3929, 5250, 5339, 5366, 5367, 5368], "(backend": [4, 25, 31, 33, 35, 48, 64, 162, 904, 2024, 2323, 2349, 2801, 3777, 4021, 4024, 4030, 4032, 4033, 4034, 4035, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060, 5014, 5288, 5289, 5337, 5338, 5339, 5343, 5344, 5356, 5357, 5359, 5361], "get": [4, 10, 25, 31, 33, 35, 39, 48, 51, 60, 62, 64, 66, 69, 82, 86, 92, 97, 110, 118, 126, 131, 134, 148, 151, 166, 169, 173, 176, 186, 198, 244, 357, 369, 415, 528, 574, 684, 694, 702, 710, 718, 726, 727, 735, 736, 744, 745, 753, 754, 762, 774, 781, 782, 790, 791, 799, 807, 815, 823, 834, 842, 849, 852, 853, 862, 870, 877, 880, 889, 897, 905, 919, 920, 923, 939, 942, 943, 956, 970, 986, 1003, 1006, 1020, 1036, 1050, 1076, 1092, 1102, 1107, 1151, 1259, 1262, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1407, 1410, 1412, 1415, 1417, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1441, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1462, 1471, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1538, 1539, 1542, 1544, 1547, 1550, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1644, 1677, 1684, 1686, 1687, 1693, 1716, 1733, 1734, 1735, 1736, 1737, 1738, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1928, 1937, 1938, 1939, 1940, 2002, 2004, 2006, 2008, 2009, 2012, 2016, 2155, 2157, 2168, 2290, 2310, 2322, 2389, 2403, 2417, 2431, 2445, 2459, 2482, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2877, 2878, 2901, 2908, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3484, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3704, 3705, 3706, 3723, 3736, 3737, 3738, 3739, 3749, 3757, 3760, 3761, 3762, 3763, 3764, 3796, 3812, 3814, 3818, 3834, 3862, 3871, 3872, 3873, 3874, 3875, 3876, 3905, 3940, 3941, 3969, 3970, 3983, 3985, 3986, 3993, 4002, 4008, 4015, 4022, 4159, 4164, 4169, 4174, 4179, 4182, 4184, 4232, 4233, 4722, 4755, 4778, 4792, 4803, 4805, 4806, 4807, 4808, 4852, 4875, 4876, 4888, 4889, 4890, 4907, 4922, 4924, 4925, 4926, 4927, 4928, 4933, 4934, 4935, 4936, 4937, 4973, 5033, 5147, 5152, 5158, 5220, 5239, 5244, 5252, 5263, 5290, 5299, 5311, 5323, 5331, 5341, 5345, 5347, 5348, 5350, 5352, 5353, 5361, 5362, 5364, 5365, 5366, 5370, 5372], "coupling": [4, 16, 31, 33, 64, 1644, 2285, 2323, 2349, 2808, 2867, 2909, 2918, 2927, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3720, 3932, 3957, 3963, 3976, 4192, 4839, 4840, 4841, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4857, 4901, 4923, 4924, 4964, 4966, 4970, 4972, 4976, 4982, 4984, 4985, 4988, 4991, 4993, 5014, 5017, 5071, 5089, 5091, 5093, 5095, 5108, 5117, 5119, 5175, 5178, 5180, 5190, 5192, 5199, 5202, 5214, 5217, 5226, 5230, 5231, 5232, 5233, 5234, 5237, 5250, 5287, 5289, 5339, 5355], "map": [4, 12, 16, 31, 33, 35, 39, 48, 53, 62, 64, 86, 103, 143, 1372, 1400, 1444, 1450, 1451, 1537, 1563, 1567, 1644, 1937, 2323, 2349, 2808, 2813, 2860, 2889, 2936, 3720, 3932, 3957, 3963, 3976, 3983, 3988, 4063, 4402, 4667, 4839, 4842, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4857, 4880, 4881, 4882, 4893, 4901, 4915, 4923, 4924, 4929, 4938, 4963, 4964, 4966, 4970, 4972, 4976, 4982, 4984, 4985, 4988, 4991, 4993, 5014, 5017, 5071, 5089, 5093, 5095, 5108, 5117, 5119, 5123, 5146, 5151, 5175, 5178, 5180, 5186, 5190, 5192, 5199, 5202, 5214, 5217, 5226, 5230, 5231, 5232, 5250, 5263, 5277, 5287, 5288, 5289, 5347, 5348, 5355], "_map": [4, 16, 31, 47, 51, 53, 64, 335, 336, 506, 507, 665, 666, 1080, 1083, 1096, 1242, 1243, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1641, 1642, 1643, 1644, 1648, 1649, 1706, 2285, 2808, 2909, 2918, 2927, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3838, 3932, 3957, 3963, 3976, 4042, 4218, 4219, 4814, 4857, 4901, 4964, 4966, 4970, 4976, 4982, 4985, 4988, 4991, 4993, 5071, 5073, 5080, 5089, 5091, 5093, 5108, 5117, 5119, 5146, 5151, 5157, 5175, 5177, 5178, 5180, 5190, 5199, 5201, 5202, 5214, 5217, 5226, 5230, 5237, 5250, 5260, 5286, 5331, 5333, 5334, 5339, 5352, 5355, 5359], ".configuration": [4, 16, 31, 48, 64, 1641, 1644, 2285, 2808, 3705, 3708, 3730, 3737, 3966, 4020, 4255, 4273, 4958, 5143, 5339, 5356, 5359], "basis": [4, 16, 33, 44, 48, 51, 54, 64, 104, 116, 117, 138, 234, 247, 253, 255, 256, 276, 299, 300, 342, 405, 418, 424, 426, 427, 447, 470, 471, 513, 564, 577, 583, 585, 586, 606, 629, 630, 672, 1142, 1154, 1160, 1162, 1163, 1183, 1206, 1207, 1249, 1355, 1364, 1369, 1372, 1381, 1387, 1389, 1398, 1406, 1428, 1466, 1468, 1470, 1483, 1526, 1551, 1644, 1666, 1678, 1753, 1772, 1916, 1918, 1934, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1966, 1970, 1998, 2024, 2032, 2050, 2083, 2095, 2109, 2129, 2150, 2194, 2195, 2204, 2205, 2218, 2229, 2231, 2248, 2249, 2261, 2263, 2323, 2337, 2349, 2777, 2778, 2801, 2804, 2808, 2869, 2887, 2888, 2909, 2918, 2927, 2936, 3720, 3905, 3932, 3963, 3976, 3982, 4241, 4316, 4385, 4386, 4389, 4390, 4394, 4395, 4398, 4421, 4444, 4503, 4568, 4578, 4580, 4604, 4605, 4608, 4609, 4650, 4651, 4655, 4656, 4660, 4661, 4664, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4725, 4744, 4749, 4771, 4901, 4915, 4973, 4975, 5011, 5018, 5096, 5102, 5129, 5134, 5137, 5202, 5204, 5205, 5208, 5210, 5211, 5213, 5214, 5217, 5226, 5230, 5231, 5232, 5233, 5234, 5237, 5250, 5294, 5339, 5353, 5355, 5356, 5359, 5365, 5366, 5367], "gates": [4, 28, 33, 39, 44, 48, 64, 66, 231, 235, 254, 270, 328, 342, 343, 344, 345, 402, 406, 425, 441, 499, 513, 514, 515, 516, 561, 565, 584, 600, 658, 672, 673, 674, 675, 693, 923, 934, 943, 954, 956, 968, 970, 983, 986, 997, 1000, 1001, 1005, 1006, 1018, 1020, 1033, 1036, 1048, 1050, 1061, 1139, 1143, 1161, 1177, 1235, 1249, 1250, 1251, 1252, 1263, 1275, 1277, 1292, 1296, 1312, 1318, 1319, 1330, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1376, 1379, 1388, 1389, 1394, 1396, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1439, 1441, 1448, 1453, 1456, 1459, 1471, 1472, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1515, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1552, 1556, 1558, 1560, 1563, 1564, 1586, 1640, 1644, 1677, 1682, 1706, 1708, 1722, 1740, 1753, 1768, 1772, 1778, 1784, 1786, 1799, 1802, 1813, 1815, 1828, 1831, 1844, 1847, 1860, 1863, 1876, 1879, 1894, 1934, 1939, 2323, 2349, 2363, 2376, 2389, 2401, 2403, 2415, 2417, 2429, 2431, 2443, 2445, 2457, 2459, 2471, 2504, 2515, 2517, 2528, 2530, 2541, 2543, 2554, 2556, 2567, 2569, 2580, 2582, 2593, 2595, 2606, 2608, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2699, 2710, 2712, 2723, 2725, 2736, 2738, 2749, 2751, 2762, 2764, 2775, 2804, 2808, 2813, 2847, 2848, 2855, 2856, 2888, 2909, 2918, 2927, 2936, 3720, 3725, 3932, 3935, 3936, 3963, 3976, 3982, 4035, 4057, 4058, 4059, 4060, 4229, 4241, 4267, 4273, 4279, 4299, 4311, 4354, 4363, 4463, 4705, 4710, 4711, 4712, 4713, 4716, 4814, 4819, 4823, 4825, 4839, 4901, 4915, 4922, 4923, 4934, 4935, 4958, 4964, 4970, 4973, 4979, 4988, 4996, 4999, 5000, 5003, 5006, 5008, 5011, 5013, 5014, 5017, 5018, 5033, 5037, 5042, 5043, 5047, 5068, 5077, 5080, 5082, 5093, 5096, 5099, 5102, 5105, 5117, 5129, 5134, 5137, 5143, 5157, 5166, 5178, 5190, 5202, 5205, 5214, 5217, 5220, 5226, 5230, 5234, 5237, 5244, 5246, 5247, 5250, 5263, 5281, 5332, 5333, 5334, 5335, 5339, 5342, 5355, 5359, 5365, 5366, 5367, 5369], "_gates": [4, 16, 31, 39, 48, 51, 56, 64, 259, 260, 261, 430, 431, 432, 589, 590, 591, 970, 1166, 1167, 1168, 1427, 1644, 1650, 2801, 2808, 2813, 2847, 2848, 2855, 2856, 2857, 2909, 2918, 2927, 2936, 3932, 3963, 3976, 4241, 4901, 5011, 5018, 5096, 5202, 5205, 5208, 5226, 5230, 5237, 5250, 5339, 5353, 5355, 5356, 5359, 5367], ".basis": [4, 64, 2808, 5339, 5355, 5359, 5367], "make": [4, 28, 31, 44, 48, 53, 64, 912, 1970, 2808, 2815, 2832, 3886, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4303, 4320, 4339, 4358, 4378, 4406, 4428, 4448, 4469, 4496, 4527, 4556, 4573, 4597, 4642, 4671, 4690, 4855, 4896, 4917, 4970, 5193, 5196, 5283, 5331, 5341, 5349, 5369, 5372], "circ": [4, 10, 29, 48, 64, 364, 523, 1640, 1645, 1646, 1649, 1650, 2265, 2267, 2269, 2272, 4299, 5014, 5077, 5143, 5282, 5283, 5347, 5348, 5349, 5352, 5353, 5355, 5356, 5358, 5364, 5365, 5366, 5369, 5370], ".h": [4, 10, 16, 25, 29, 30, 33, 39, 48, 62, 63, 64, 235, 240, 251, 252, 347, 406, 411, 422, 423, 518, 565, 570, 581, 582, 677, 1102, 1143, 1147, 1158, 1159, 1254, 1465, 1468, 1645, 1646, 1649, 1650, 2001, 3876, 4297, 4354, 4595, 4722, 5077, 5143, 5163, 5281, 5282, 5284, 5286, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5342, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], ".cx": [4, 10, 16, 25, 29, 30, 33, 35, 39, 48, 62, 63, 64, 209, 240, 251, 252, 347, 380, 411, 422, 423, 518, 539, 570, 581, 582, 677, 1102, 1118, 1147, 1158, 1159, 1254, 1645, 1646, 1649, 1650, 3876, 4032, 4297, 4299, 4354, 4595, 4722, 5077, 5143, 5282, 5286, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5362, 5364, 5365, 5366, 5369, 5370], ".measure": [4, 16, 25, 29, 30, 33, 35, 39, 48, 62, 63, 64, 235, 240, 251, 252, 347, 406, 411, 422, 423, 518, 565, 570, 581, 582, 677, 1067, 1102, 1143, 1147, 1158, 1159, 1254, 1645, 1646, 1649, 1650, 3876, 4297, 4722, 4747, 4769, 5077, 5143, 5281, 5282, 5286, 5290, 5331, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5359, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "([": [4, 10, 11, 29, 30, 35, 48, 62, 63, 64, 253, 276, 364, 424, 447, 583, 606, 973, 1023, 1102, 1160, 1183, 1280, 1299, 1450, 1527, 1567, 1666, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2057, 2813, 2914, 2923, 2932, 3760, 4219, 4229, 4389, 4487, 4503, 4518, 4525, 4529, 4530, 4540, 4544, 4577, 4579, 4580, 4620, 4624, 4625, 4635, 4639, 4644, 4655, 4805, 5014, 5077, 5143, 5275, 5283, 5285, 5290, 5337, 5338, 5340, 5341, 5342, 5345, 5347, 5349, 5350, 5352, 5353, 5355, 5357, 5358, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "],": [4, 16, 29, 30, 31, 35, 48, 53, 62, 63, 64, 82, 84, 88, 90, 97, 101, 118, 120, 126, 128, 130, 131, 133, 134, 147, 148, 166, 173, 179, 188, 190, 198, 211, 234, 251, 252, 253, 262, 264, 276, 342, 343, 344, 345, 347, 363, 364, 369, 382, 405, 422, 423, 424, 433, 435, 447, 513, 514, 515, 516, 518, 528, 541, 564, 581, 582, 583, 592, 594, 606, 672, 673, 674, 675, 677, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 773, 776, 784, 793, 801, 809, 817, 825, 836, 844, 849, 855, 864, 872, 877, 882, 891, 899, 907, 970, 973, 1023, 1102, 1107, 1120, 1142, 1158, 1159, 1160, 1169, 1171, 1183, 1249, 1250, 1251, 1252, 1254, 1280, 1299, 1336, 1376, 1377, 1379, 1380, 1382, 1393, 1399, 1441, 1442, 1450, 1456, 1458, 1465, 1468, 1471, 1475, 1480, 1503, 1526, 1527, 1537, 1550, 1563, 1567, 1641, 1644, 1645, 1646, 1649, 1650, 1666, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1947, 2001, 2003, 2008, 2015, 2016, 2104, 2124, 2333, 2359, 2372, 2385, 2798, 2813, 2845, 2856, 2857, 2858, 2859, 2875, 2876, 2909, 2918, 2927, 2932, 2933, 3705, 3723, 3730, 3737, 3738, 3739, 3757, 3779, 3781, 3864, 3982, 3993, 4041, 4198, 4219, 4229, 4297, 4433, 4463, 4487, 4579, 4580, 4716, 4723, 4803, 4837, 4839, 4864, 4871, 4877, 4884, 4886, 5014, 5068, 5077, 5143, 5226, 5252, 5282, 5285, 5287, 5290, 5338, 5342, 5347, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5361, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "])": [4, 11, 29, 30, 31, 44, 48, 62, 63, 64, 198, 357, 369, 528, 970, 973, 1023, 1102, 1107, 1280, 1299, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1527, 1537, 1563, 1567, 1645, 1646, 1649, 1650, 1663, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2001, 2057, 2802, 2804, 2805, 2806, 2813, 2856, 2857, 2914, 2923, 3760, 4000, 4001, 4013, 4014, 4041, 4219, 4389, 4463, 4487, 4503, 4518, 4580, 4655, 4715, 4805, 4930, 4958, 5014, 5021, 5077, 5120, 5140, 5143, 5275, 5282, 5290, 5333, 5334, 5337, 5338, 5340, 5341, 5342, 5343, 5345, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5358, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "perform": [4, 11, 16, 48, 51, 64, 97, 109, 155, 709, 814, 856, 883, 1342, 1373, 1644, 1976, 2867, 3708, 3754, 3876, 3899, 3994, 4004, 4006, 4007, 4009, 4392, 4607, 4658, 4915, 4958, 4973, 5023, 5181, 5250, 5272], "(circ": [4, 29, 48, 64, 364, 523, 1644, 1646, 1649, 1650, 4299, 5014, 5077, 5143, 5282, 5283, 5347, 5348, 5349, 5353, 5355, 5356, 5358, 5364, 5365, 5366, 5369, 5370], "qasm": [4, 16, 32, 45, 62, 64, 147, 165, 172, 242, 243, 277, 413, 414, 448, 572, 573, 607, 877, 922, 931, 941, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1149, 1150, 1184, 1261, 1271, 1288, 1307, 1327, 1436, 1512, 1641, 1645, 1765, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1891, 1994, 2398, 2403, 2412, 2417, 2426, 2431, 2440, 2445, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2909, 2918, 2927, 3757, 3957, 3976, 4229, 4235, 4236, 4237, 4241, 4242, 4243, 4263, 4270, 4272, 4273, 4275, 4276, 4279, 4281, 4287, 4290, 4293, 4722, 4803, 5290, 5339, 5340, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5364, 5372], "_simulator": [4, 16, 25, 32, 62, 64, 147, 162, 165, 172, 904, 913, 1641, 1994, 2909, 2918, 2927, 3704, 3736, 3834, 3838, 3876, 4255, 4273, 4722, 5250, 5290, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5361, 5362, 5364, 5365, 5369, 5372], "=coupling": [4, 64, 2867, 5339, 5355], "=basis": [4, 64], "=noise": [4, 64, 2323, 2349, 2808, 5339, 5366, 5367], ").": [4, 10, 11, 12, 16, 24, 29, 30, 31, 35, 39, 44, 48, 51, 57, 63, 64, 69, 70, 71, 75, 79, 84, 90, 95, 97, 110, 113, 118, 123, 128, 140, 142, 147, 151, 162, 163, 165, 169, 172, 176, 179, 180, 211, 231, 233, 234, 235, 239, 244, 252, 255, 256, 262, 264, 265, 270, 300, 322, 328, 334, 343, 344, 345, 357, 362, 364, 382, 402, 404, 405, 406, 410, 415, 423, 426, 427, 433, 435, 436, 441, 471, 493, 499, 505, 514, 515, 516, 523, 541, 561, 563, 564, 565, 569, 574, 582, 585, 586, 592, 594, 595, 600, 630, 652, 658, 664, 673, 674, 675, 717, 761, 773, 849, 850, 877, 878, 896, 904, 931, 951, 964, 980, 994, 1001, 1014, 1030, 1044, 1058, 1064, 1102, 1120, 1139, 1141, 1142, 1143, 1146, 1151, 1159, 1162, 1163, 1169, 1171, 1172, 1177, 1207, 1229, 1235, 1241, 1250, 1251, 1252, 1271, 1288, 1307, 1318, 1327, 1339, 1341, 1342, 1343, 1344, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1360, 1362, 1364, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1407, 1410, 1436, 1441, 1447, 1448, 1450, 1454, 1456, 1457, 1458, 1459, 1462, 1465, 1468, 1471, 1472, 1475, 1477, 1480, 1489, 1490, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1512, 1517, 1518, 1521, 1523, 1524, 1525, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1542, 1550, 1551, 1554, 1555, 1556, 1558, 1559, 1563, 1566, 1567, 1641, 1644, 1645, 1666, 1667, 1682, 1722, 1781, 1796, 1810, 1815, 1825, 1831, 1841, 1847, 1857, 1863, 1873, 1899, 1902, 1906, 1922, 1926, 1930, 1935, 1937, 1948, 1954, 1959, 1983, 1990, 2001, 2021, 2023, 2024, 2028, 2032, 2033, 2039, 2040, 2056, 2060, 2064, 2070, 2075, 2085, 2089, 2098, 2102, 2104, 2113, 2117, 2124, 2126, 2133, 2138, 2161, 2163, 2165, 2166, 2167, 2168, 2178, 2182, 2196, 2198, 2209, 2211, 2221, 2224, 2232, 2233, 2238, 2253, 2255, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2517, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2778, 2798, 2801, 2802, 2804, 2805, 2806, 2808, 2813, 2814, 2816, 2822, 2829, 2830, 2836, 2842, 2845, 2848, 2858, 2861, 2867, 2886, 2887, 2889, 3417, 3708, 3723, 3730, 3737, 3760, 3782, 3789, 3793, 3801, 3901, 3902, 3905, 3940, 3941, 3957, 3963, 4071, 4084, 4148, 4162, 4192, 4196, 4201, 4219, 4239, 4240, 4255, 4264, 4273, 4282, 4299, 4301, 4304, 4308, 4311, 4316, 4318, 4321, 4325, 4335, 4337, 4340, 4344, 4354, 4356, 4359, 4367, 4376, 4385, 4386, 4388, 4389, 4390, 4392, 4394, 4395, 4398, 4402, 4404, 4407, 4421, 4422, 4423, 4424, 4426, 4429, 4432, 4444, 4446, 4449, 4453, 4463, 4465, 4466, 4467, 4471, 4479, 4485, 4487, 4489, 4491, 4492, 4494, 4497, 4498, 4506, 4511, 4513, 4515, 4516, 4519, 4522, 4525, 4528, 4529, 4531, 4533, 4537, 4539, 4541, 4542, 4552, 4554, 4557, 4568, 4571, 4574, 4578, 4582, 4583, 4586, 4588, 4591, 4592, 4601, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4613, 4614, 4617, 4620, 4623, 4624, 4626, 4628, 4632, 4634, 4636, 4637, 4640, 4650, 4651, 4654, 4655, 4656, 4658, 4660, 4661, 4664, 4667, 4669, 4672, 4686, 4688, 4691, 4695, 4707, 4712, 4717, 4719, 4722, 4731, 4732, 4733, 4734, 4736, 4739, 4774, 4788, 4796, 4805, 4811, 4813, 4819, 4825, 4831, 4877, 4880, 4884, 4885, 4894, 4900, 4921, 4922, 4923, 4927, 4930, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4963, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5130, 5133, 5134, 5137, 5140, 5143, 5146, 5151, 5152, 5157, 5158, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5237, 5239, 5240, 5244, 5262, 5268, 5272, 5280, 5281, 5287, 5331, 5332, 5335, 5338, 5344, 5345, 5349, 5350, 5355, 5358, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "counts": [4, 31, 33, 48, 54, 62, 64, 74, 75, 79, 95, 101, 107, 113, 120, 123, 136, 142, 160, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1669, 1670, 1926, 2165, 2166, 2168, 2915, 2924, 3757, 3760, 3814, 3834, 3862, 4394, 4395, 4608, 4609, 4660, 4661, 4713, 4721, 4722, 4743, 4744, 4747, 4749, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4769, 4771, 4803, 4805, 4811, 4812, 5276, 5338, 5339, 5341, 5347, 5348, 5349, 5352, 5364, 5365, 5366, 5369, 5370], "_counts": [4, 33, 62, 64, 120, 123, 160, 3814, 3834, 3862, 4518, 4544, 4639, 4722, 4812, 5290, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "(counts": [4, 33, 62, 64, 5338, 5339, 5347, 5348, 5349, 5364, 5365, 5366], "quantumerror": [4, 64, 2798, 2801, 2802, 2805, 2806, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2845, 2846, 2847, 2848, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2887, 2890, 2892, 5366, 5368], "gate": [4, 10, 11, 12, 16, 31, 35, 39, 44, 48, 62, 193, 195, 204, 205, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 241, 245, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 268, 273, 274, 276, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 364, 366, 375, 376, 380, 382, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 412, 416, 420, 421, 428, 429, 430, 431, 432, 433, 434, 435, 439, 444, 445, 447, 453, 454, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 492, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 520, 521, 522, 523, 525, 534, 535, 539, 541, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 571, 575, 579, 580, 587, 588, 589, 590, 591, 592, 593, 594, 598, 603, 604, 606, 612, 613, 614, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 651, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 926, 932, 933, 946, 952, 953, 959, 965, 967, 970, 973, 975, 977, 979, 981, 982, 984, 985, 989, 995, 996, 998, 1001, 1003, 1004, 1005, 1009, 1015, 1017, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1039, 1045, 1047, 1053, 1059, 1060, 1067, 1102, 1104, 1113, 1114, 1118, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1143, 1144, 1148, 1152, 1156, 1157, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1175, 1180, 1181, 1182, 1183, 1189, 1190, 1191, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1228, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1266, 1272, 1274, 1277, 1280, 1282, 1284, 1287, 1289, 1290, 1294, 1295, 1299, 1302, 1306, 1308, 1309, 1314, 1315, 1318, 1322, 1328, 1329, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1426, 1427, 1431, 1437, 1438, 1441, 1442, 1447, 1448, 1449, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1507, 1513, 1514, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1586, 1640, 1644, 1648, 1654, 1655, 1677, 1708, 1722, 1725, 1753, 1757, 1760, 1764, 1766, 1767, 1769, 1772, 1775, 1782, 1783, 1786, 1789, 1791, 1793, 1795, 1797, 1798, 1800, 1801, 1805, 1811, 1812, 1815, 1818, 1820, 1824, 1826, 1827, 1829, 1830, 1831, 1834, 1836, 1840, 1842, 1843, 1845, 1846, 1847, 1850, 1852, 1856, 1858, 1859, 1861, 1862, 1863, 1866, 1868, 1872, 1874, 1875, 1877, 1878, 1879, 1883, 1886, 1890, 1891, 1892, 1893, 1895, 1897, 1937, 1970, 2323, 2392, 2399, 2400, 2406, 2413, 2414, 2420, 2427, 2428, 2434, 2441, 2442, 2448, 2455, 2456, 2462, 2469, 2470, 2507, 2513, 2514, 2520, 2526, 2527, 2533, 2539, 2540, 2546, 2552, 2553, 2559, 2565, 2566, 2572, 2578, 2579, 2585, 2591, 2592, 2598, 2604, 2605, 2611, 2617, 2618, 2624, 2630, 2631, 2637, 2643, 2644, 2650, 2656, 2657, 2663, 2669, 2670, 2676, 2682, 2683, 2689, 2695, 2696, 2702, 2708, 2709, 2715, 2721, 2722, 2728, 2734, 2735, 2741, 2747, 2748, 2754, 2760, 2761, 2767, 2773, 2774, 2801, 2804, 2808, 2848, 2850, 2851, 2852, 2857, 2861, 2889, 2909, 2918, 2927, 3417, 3725, 3935, 3940, 3941, 3942, 3943, 3957, 3982, 3983, 4030, 4063, 4065, 4162, 4219, 4229, 4241, 4246, 4248, 4282, 4299, 4312, 4332, 4351, 4354, 4372, 4418, 4460, 4463, 4683, 4702, 4705, 4706, 4707, 4708, 4712, 4714, 4720, 4818, 4820, 4822, 4824, 4826, 4873, 4874, 4878, 4901, 4915, 4922, 4923, 4924, 4936, 4946, 4952, 4964, 4973, 5016, 5018, 5021, 5033, 5034, 5036, 5041, 5042, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5053, 5054, 5060, 5068, 5070, 5077, 5080, 5099, 5102, 5105, 5117, 5129, 5133, 5134, 5137, 5143, 5146, 5147, 5151, 5157, 5158, 5172, 5178, 5181, 5193, 5202, 5205, 5207, 5211, 5220, 5222, 5226, 5230, 5232, 5233, 5234, 5237, 5239, 5244, 5245, 5250, 5276, 5281, 5288, 5289, 5332, 5333, 5334, 5335, 5342, 5345, 5347, 5348, 5352, 5353, 5355, 5356, 5359, 5365, 5366, 5367, 5369], "reset": [4, 16, 48, 64, 92, 276, 287, 447, 458, 606, 617, 814, 1183, 1194, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1640, 1641, 1772, 2323, 2326, 2338, 2352, 2366, 2379, 2801, 2811, 2860, 2861, 3708, 3730, 3982, 4392, 4607, 4658, 5057, 5077, 5143, 5172, 5232, 5233, 5234, 5255, 5332, 5333, 5334, 5353, 5354, 5355, 5366, 5368], "measure": [4, 10, 29, 30, 31, 35, 48, 62, 64, 86, 265, 266, 267, 436, 437, 438, 595, 596, 597, 931, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1172, 1173, 1174, 1271, 1288, 1307, 1327, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1477, 1512, 1640, 1644, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1983, 1990, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2801, 2803, 3386, 3730, 3834, 3971, 3982, 4041, 4042, 4043, 4067, 4162, 4167, 4172, 4264, 4282, 4388, 4394, 4395, 4603, 4608, 4609, 4654, 4660, 4661, 4735, 4737, 4738, 4813, 4922, 4946, 4952, 4958, 5033, 5077, 5143, 5181, 5202, 5290, 5331, 5332, 5333, 5334, 5339, 5345, 5353, 5355, 5359, 5364, 5366, 5369, 5370, 5372], "readouterror": [4, 64, 2801, 2803, 2807, 2808, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2849, 5366], "includes": [4, 8, 31, 48, 51, 64, 103, 109, 137, 155, 163, 216, 387, 546, 877, 1124, 1342, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1550, 1563, 1567, 1668, 2277, 2808, 3722, 3789, 4241, 4589], "several": [4, 10, 11, 31, 35, 48, 51, 53, 64, 203, 278, 374, 449, 533, 608, 861, 1112, 1185, 1458, 1934, 1987, 2277, 2494, 2501, 2798, 3723, 3738, 3739, 3757, 3855, 3871, 4463, 4487, 4751, 4773, 4787, 4803, 4958, 4973], "helper": [4, 44, 64, 1342, 1550, 2862, 3754, 4873], "generating": [4, 10, 53, 64, 2813, 3985, 3989, 4354], "instances": [4, 25, 28, 35, 39, 64, 193, 197, 198, 207, 278, 364, 368, 369, 378, 449, 523, 527, 528, 537, 608, 920, 939, 1063, 1072, 1083, 1088, 1096, 1101, 1102, 1106, 1107, 1116, 1185, 1259, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1746, 1748, 1750, 1752, 1981, 1982, 2285, 2502, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3738, 3739, 3857, 3993, 3999, 4008, 4012, 4182, 4915, 4922, 4930, 4935, 5239, 5244, 5250, 5331], "canonical": [4, 64, 69, 140, 2845, 2855, 2858, 2859, 4928, 5355], "information": [4, 16, 25, 31, 33, 35, 45, 51, 64, 66, 78, 86, 88, 94, 97, 104, 112, 119, 122, 123, 136, 180, 188, 190, 191, 195, 235, 253, 276, 326, 327, 328, 334, 363, 366, 406, 424, 447, 497, 498, 499, 505, 525, 565, 583, 606, 656, 657, 658, 664, 694, 773, 806, 849, 877, 896, 1081, 1097, 1104, 1143, 1160, 1183, 1233, 1234, 1235, 1241, 1388, 1446, 1458, 1641, 1642, 1643, 1644, 1655, 1719, 1926, 1934, 2001, 2004, 2020, 2021, 2023, 2277, 2333, 2337, 2345, 2359, 2372, 2385, 2445, 2459, 2801, 2802, 2803, 2805, 2806, 2807, 2808, 2850, 2851, 2852, 2853, 2854, 2861, 2862, 2865, 2877, 2878, 2883, 2888, 2889, 2914, 2923, 2932, 3718, 3720, 3722, 3727, 3728, 3730, 3745, 3753, 3796, 3810, 3811, 3813, 3814, 3816, 3818, 3821, 3824, 3830, 3831, 3837, 3869, 3871, 3872, 3873, 3874, 3875, 3881, 3882, 3963, 3965, 3969, 3970, 3999, 4003, 4012, 4016, 4020, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4255, 4273, 4279, 4316, 4335, 4363, 4376, 4385, 4392, 4394, 4395, 4402, 4424, 4433, 4444, 4487, 4519, 4607, 4608, 4609, 4614, 4640, 4650, 4658, 4660, 4661, 4667, 4686, 4717, 4723, 4747, 4769, 4814, 4828, 4895, 4899, 4901, 4916, 4920, 4922, 4949, 4955, 5175, 5178, 5181, 5183, 5217, 5226, 5230, 5234, 5237, 5250, 5267, 5270, 5274, 5281, 5331, 5333, 5334, 5353, 5362], "theory": [4, 28, 97, 2024, 2032, 5342], "simplify": [4, 28, 31, 64, 2056, 2126, 4588, 5157, 5190], "depolarizing": [4, 64, 1926, 2024, 2801, 2808, 2847, 2848, 2857, 5366], "probabilities": [4, 30, 64, 74, 300, 306, 307, 325, 361, 471, 477, 478, 496, 630, 636, 637, 655, 1207, 1213, 1214, 1232, 2001, 2165, 2166, 2167, 2168, 2323, 2349, 2431, 2517, 2595, 2608, 2778, 2784, 2785, 2801, 2813, 2830, 2856, 2857, 2875, 2883, 2884, 2885, 2887, 4389, 4390, 4394, 4395, 4595, 4604, 4605, 4608, 4655, 4656, 4660, 4661, 4749, 4771, 4774, 4779, 5270, 5274, 5366], "prob": [4, 64, 2001, 2801, 2860], "qubit": [4, 10, 11, 16, 28, 31, 33, 35, 39, 44, 48, 53, 62, 64, 82, 86, 115, 126, 131, 134, 148, 149, 150, 166, 167, 168, 173, 174, 175, 193, 197, 204, 205, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 241, 245, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 364, 368, 375, 376, 380, 382, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 407, 412, 416, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521, 522, 523, 527, 534, 535, 539, 541, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 564, 566, 571, 575, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 603, 604, 606, 608, 609, 610, 611, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 919, 923, 936, 943, 956, 970, 1006, 1036, 1050, 1102, 1106, 1113, 1114, 1118, 1120, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1175, 1180, 1181, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1235, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1263, 1318, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1421, 1441, 1442, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1489, 1494, 1499, 1501, 1503, 1504, 1517, 1524, 1526, 1533, 1535, 1537, 1538, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1586, 1641, 1644, 1659, 1661, 1662, 1667, 1682, 1684, 1706, 1716, 1719, 1725, 1727, 1772, 1786, 1815, 1903, 1910, 1913, 1934, 1935, 1945, 1946, 1957, 1961, 1964, 2027, 2036, 2043, 2047, 2066, 2073, 2076, 2079, 2087, 2091, 2093, 2100, 2104, 2106, 2115, 2124, 2127, 2136, 2142, 2145, 2155, 2160, 2171, 2185, 2189, 2199, 2202, 2212, 2215, 2216, 2240, 2245, 2256, 2259, 2286, 2287, 2288, 2289, 2318, 2323, 2337, 2349, 2801, 2808, 2813, 2830, 2842, 2848, 2854, 2860, 2862, 2863, 2867, 2886, 2887, 2889, 2933, 2936, 2964, 2965, 2966, 2967, 2971, 2980, 2981, 2982, 2983, 2984, 2988, 2997, 2998, 2999, 3000, 3001, 3006, 3007, 3008, 3009, 3014, 3015, 3016, 3017, 3021, 3030, 3031, 3032, 3033, 3034, 3048, 3049, 3050, 3051, 3055, 3064, 3065, 3066, 3067, 3068, 3082, 3083, 3084, 3085, 3089, 3097, 3098, 3099, 3100, 3101, 3105, 3114, 3115, 3116, 3117, 3118, 3131, 3132, 3133, 3134, 3138, 3147, 3148, 3149, 3150, 3151, 3155, 3163, 3164, 3165, 3166, 3167, 3171, 3180, 3181, 3182, 3183, 3184, 3188, 3197, 3198, 3199, 3200, 3201, 3205, 3214, 3215, 3216, 3217, 3218, 3232, 3233, 3234, 3235, 3239, 3248, 3249, 3250, 3251, 3252, 3256, 3265, 3266, 3267, 3268, 3269, 3273, 3282, 3283, 3284, 3285, 3286, 3290, 3298, 3299, 3300, 3301, 3302, 3316, 3317, 3318, 3319, 3323, 3332, 3333, 3334, 3335, 3336, 3340, 3348, 3349, 3350, 3351, 3352, 3356, 3365, 3366, 3367, 3368, 3369, 3373, 3383, 3384, 3385, 3386, 3387, 3390, 3391, 3392, 3393, 3394, 3398, 3407, 3408, 3409, 3410, 3411, 3415, 3433, 3441, 3442, 3443, 3444, 3445, 3459, 3460, 3461, 3462, 3475, 3476, 3477, 3478, 3496, 3505, 3506, 3507, 3508, 3509, 3522, 3523, 3524, 3525, 3529, 3538, 3539, 3540, 3541, 3542, 3546, 3564, 3565, 3566, 3567, 3581, 3582, 3583, 3584, 3588, 3597, 3598, 3599, 3600, 3601, 3605, 3613, 3621, 3630, 3631, 3632, 3633, 3634, 3638, 3647, 3648, 3649, 3650, 3651, 3655, 3663, 3664, 3665, 3666, 3667, 3671, 3680, 3681, 3682, 3683, 3684, 3688, 3696, 3697, 3698, 3699, 3700, 3708, 3730, 3760, 3838, 3932, 3935, 3938, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3957, 3963, 3964, 3965, 3967, 3970, 3971, 3973, 3976, 3979, 3982, 3990, 3991, 4020, 4021, 4030, 4034, 4038, 4041, 4042, 4043, 4048, 4057, 4058, 4059, 4060, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4139, 4218, 4219, 4255, 4261, 4273, 4279, 4299, 4311, 4335, 4389, 4394, 4395, 4398, 4402, 4421, 4424, 4463, 4476, 4491, 4497, 4503, 4504, 4506, 4513, 4519, 4522, 4528, 4533, 4539, 4577, 4579, 4580, 4608, 4609, 4614, 4617, 4623, 4628, 4634, 4655, 4660, 4661, 4664, 4686, 4705, 4712, 4715, 4718, 4767, 4770, 4771, 4805, 4819, 4823, 4825, 4840, 4841, 4843, 4856, 4858, 4875, 4886, 4901, 4915, 4922, 4924, 4927, 4928, 4930, 4934, 4935, 4958, 4964, 4973, 4991, 5003, 5013, 5014, 5016, 5033, 5037, 5038, 5071, 5073, 5077, 5091, 5123, 5133, 5143, 5147, 5150, 5151, 5152, 5156, 5157, 5158, 5162, 5172, 5175, 5178, 5184, 5190, 5193, 5199, 5202, 5217, 5226, 5230, 5231, 5232, 5233, 5234, 5237, 5239, 5244, 5252, 5263, 5268, 5271, 5272, 5277, 5286, 5287, 5288, 5289, 5307, 5333, 5334, 5335, 5339, 5341, 5342, 5345, 5347, 5348, 5349, 5350, 5353, 5355, 5359, 5365, 5366, 5367, 5369, 5370, 5372], ".depolarizing": [4, 2801], "_error": [4, 25, 31, 54, 64, 2323, 2349, 2801, 2808, 2848, 2891, 2936, 3708, 3876, 4964, 5214, 5217, 5250, 5268, 5272, 5339, 5359, 5365, 5366, 5367, 5368, 5369], "(prob": [4, 2801], "add": [4, 29, 31, 35, 39, 44, 48, 62, 64, 194, 195, 196, 267, 365, 366, 367, 438, 524, 525, 526, 597, 877, 924, 944, 957, 971, 975, 987, 1001, 1007, 1021, 1025, 1037, 1051, 1064, 1103, 1104, 1105, 1174, 1264, 1278, 1282, 1297, 1302, 1320, 1379, 1429, 1442, 1505, 1655, 1656, 1657, 1658, 1659, 1705, 1723, 1724, 1725, 1726, 1727, 1754, 1760, 1773, 1787, 1791, 1803, 1816, 1820, 1832, 1836, 1848, 1852, 1864, 1868, 1879, 1880, 1886, 1899, 1912, 1954, 1963, 2024, 2025, 2030, 2032, 2033, 2046, 2055, 2056, 2063, 2065, 2070, 2078, 2085, 2098, 2113, 2133, 2144, 2163, 2165, 2178, 2187, 2196, 2209, 2221, 2233, 2243, 2253, 2285, 2318, 2390, 2404, 2418, 2432, 2446, 2460, 2505, 2518, 2531, 2544, 2557, 2570, 2583, 2596, 2609, 2622, 2635, 2648, 2661, 2674, 2687, 2700, 2713, 2726, 2739, 2752, 2765, 2798, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2842, 2888, 3730, 3813, 3983, 3992, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4218, 4230, 4255, 4261, 4273, 4279, 4835, 4836, 4840, 4841, 4862, 4863, 4869, 4870, 4878, 4880, 4881, 4922, 4923, 4967, 5016, 5083, 5089, 5117, 5183, 5196, 5269, 5273, 5295, 5342, 5347, 5348, 5353, 5356, 5357, 5366, 5367, 5369], ".noisemodel": [4, 64, 2801], ".add": [4, 31, 64, 2801, 4895, 4899, 4916, 4920, 4922, 5348, 5352, 5355, 5356, 5358, 5359, 5366, 5367], "_all": [4, 16, 25, 30, 33, 35, 39, 64, 1067, 1102, 1734, 2801, 3876, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4219, 4297, 5077, 5143, 5331, 5364, 5366, 5367], "_qubit": [4, 16, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 258, 262, 263, 264, 283, 284, 337, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 412, 429, 433, 434, 435, 454, 455, 508, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 571, 588, 592, 593, 594, 613, 614, 667, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1148, 1165, 1169, 1170, 1171, 1190, 1191, 1244, 1457, 1555, 1641, 2287, 2323, 2349, 2363, 2376, 2801, 2867, 2936, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034, 4389, 4655, 4843, 4856, 4858, 5355, 5359, 5361, 5366, 5367], "_quantum": [4, 64, 334, 505, 664, 1241, 2801, 2891, 3704, 5350, 5366, 5367, 5368], "(error": [4, 64, 2801, 2890, 5366, 5368], "u1": [4, 64, 1563, 2909, 2918, 2927, 5283, 5333, 5334, 5353, 5355, 5366], "u2": [4, 16, 31, 48, 64, 1543, 1644, 2909, 2918, 2927, 4229, 5230, 5283, 5333, 5334, 5355, 5359, 5366], "u3": [4, 16, 64, 1546, 1644, 2909, 2918, 2927, 4229, 4421, 5230, 5283, 5333, 5334, 5355, 5366], "']": [4, 16, 31, 51, 64, 768, 1376, 1450, 1537, 1641, 1644, 2801, 2909, 2915, 2918, 2924, 2927, 3932, 3976, 3990, 4229, 4233, 4354, 4463, 4487, 4503, 4525, 4529, 4530, 4540, 4544, 4580, 4595, 4625, 4634, 4635, 4900, 4915, 4921, 4928, 4996, 4999, 5006, 5011, 5027, 5030, 5062, 5086, 5126, 5187, 5214, 5217, 5223, 5230, 5283, 5291, 5331, 5338, 5339, 5341, 5342, 5349, 5355, 5364, 5366, 5367, 5369], "cx": [4, 10, 11, 16, 28, 29, 31, 48, 62, 63, 64, 227, 259, 260, 261, 398, 430, 431, 432, 557, 589, 590, 591, 973, 1023, 1135, 1166, 1167, 1168, 1280, 1299, 1339, 1364, 1366, 1376, 1401, 1424, 1450, 1479, 1503, 1527, 1537, 1553, 1567, 1587, 1588, 1589, 1590, 1591, 1592, 1644, 1666, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2801, 2909, 2918, 2927, 3957, 4035, 4229, 4370, 4705, 4712, 4716, 4819, 4823, 4825, 4922, 4923, 4927, 4964, 4970, 4973, 4979, 4984, 5006, 5011, 5033, 5041, 5077, 5095, 5108, 5123, 5129, 5134, 5143, 5151, 5152, 5157, 5158, 5208, 5211, 5226, 5230, 5233, 5234, 5283, 5332, 5333, 5334, 5339, 5347, 5348, 5350, 5355, 5356, 5359, 5361, 5366, 5367], "represented": [4, 10, 31, 39, 64, 136, 142, 1372, 1376, 1380, 1401, 1407, 1450, 1464, 1475, 1563, 1567, 1722, 1898, 1911, 1962, 2045, 2077, 2084, 2092, 2105, 2125, 2143, 2161, 2186, 2200, 2213, 2225, 2232, 2242, 2257, 2813, 2875, 2884, 3757, 4220, 4463, 4803, 4901, 4925, 4937, 4964, 4970, 4982, 5093, 5108, 5230, 5236, 5355], "terms": [4, 28, 31, 35, 44, 64, 103, 104, 130, 144, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1934, 1986, 2024, 2323, 2349, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2810, 2848, 2857, 2862, 2867, 2885, 3927, 3957, 3973, 4075, 4094, 4103, 4157, 4162, 4167, 4172, 4177, 4241, 4299, 4354, 4491, 4513, 4522, 4539, 4568, 4577, 4579, 4591, 4614, 4617, 4634, 4819, 4825, 5014, 5033, 5080, 5082, 5280, 5290, 5355, 5367], "many": [4, 10, 11, 25, 31, 35, 48, 53, 64, 103, 130, 136, 142, 186, 217, 269, 388, 440, 547, 599, 806, 877, 1125, 1176, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1372, 1692, 1922, 1930, 1934, 1970, 2024, 2032, 2277, 2285, 2323, 2349, 2845, 2858, 2859, 3876, 4922, 4958, 5335, 5341], "common": [4, 28, 35, 64, 1406, 1470, 2275, 2293, 2313, 3796, 5280, 5286, 5288, 5289], "types": [4, 6, 12, 20, 31, 35, 39, 64, 147, 180, 877, 936, 1296, 1654, 1898, 2001, 2494, 2501, 2798, 2812, 2813, 2842, 3737, 3757, 3855, 3871, 4148, 4229, 4239, 4240, 4297, 4803, 4868, 4964, 5332], "objects": [4, 7, 16, 28, 30, 31, 35, 39, 45, 53, 121, 144, 198, 200, 369, 371, 528, 530, 1083, 1102, 1107, 1109, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1471, 1475, 1477, 1480, 1503, 1537, 1550, 1555, 1563, 1567, 1898, 1922, 2006, 2155, 2277, 2282, 2285, 2290, 2291, 2333, 2337, 2345, 2359, 2372, 2385, 2482, 2968, 2969, 2985, 2986, 3002, 3003, 3010, 3011, 3018, 3019, 3035, 3036, 3052, 3053, 3069, 3070, 3086, 3087, 3102, 3103, 3119, 3120, 3135, 3136, 3152, 3153, 3168, 3169, 3185, 3186, 3202, 3203, 3219, 3220, 3236, 3237, 3253, 3254, 3270, 3271, 3287, 3288, 3303, 3304, 3320, 3321, 3337, 3338, 3353, 3354, 3370, 3371, 3387, 3388, 3395, 3396, 3412, 3413, 3446, 3447, 3463, 3464, 3479, 3480, 3510, 3511, 3526, 3527, 3543, 3544, 3568, 3569, 3585, 3586, 3602, 3603, 3635, 3636, 3652, 3653, 3668, 3669, 3685, 3686, 3701, 3702, 3730, 3896, 3905, 3932, 3935, 3976, 3983, 4002, 4015, 4241, 4252, 4255, 4258, 4264, 4270, 4276, 4291, 4298, 4299, 4354, 4589, 4751, 4922, 4923, 4930, 4973, 5006, 5228, 5239, 5244, 5269, 5273, 5366], "inclusion": 4, "via": [4, 8, 25, 32, 48, 53, 64, 97, 105, 116, 117, 118, 120, 138, 140, 150, 165, 168, 172, 175, 235, 406, 565, 789, 1083, 1143, 1372, 1388, 1453, 1456, 1459, 1471, 1496, 1537, 1539, 1682, 1722, 1908, 1914, 2042, 2048, 2123, 2141, 2146, 2169, 2239, 2246, 2867, 2875, 3705, 3722, 3727, 3737, 3796, 3932, 3976, 4299, 4354, 4577, 4579, 4821, 4830, 4866, 4867, 4882, 4900, 4921, 4928, 4964, 5117, 5175, 5178, 5281], "transpilation": [4, 16, 33, 48, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 3708, 4894, 4945, 5217, 5220, 5226, 5230, 5239, 5244, 5250], "utility": [4, 7, 26, 35, 64, 5263], "extracting": [4, 35], "backendproperties": [4, 16, 64, 1644, 2277, 2280, 2285, 2323, 2331, 2337, 2343, 2349, 2357, 2363, 2370, 2376, 2383, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2912, 2921, 2930, 3725, 3809, 3894, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 4901, 4964, 5033, 5071, 5123, 5202, 5214, 5217, 5230, 5365], "schedule": [6, 16, 31, 35, 45, 48, 64, 118, 120, 123, 193, 195, 364, 366, 523, 525, 693, 917, 1102, 1104, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1654, 1655, 1722, 2282, 2291, 2337, 2345, 2494, 2501, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3417, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3718, 3730, 3757, 3760, 3761, 3763, 3764, 3801, 3838, 3851, 3855, 3864, 3871, 3872, 3873, 3874, 3875, 3896, 3982, 3983, 3985, 3989, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4012, 4013, 4014, 4015, 4016, 4019, 4025, 4026, 4030, 4031, 4032, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4086, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4121, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4139, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4182, 4203, 4204, 4206, 4207, 4210, 4213, 4216, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4298, 4803, 4805, 4806, 4807, 4808, 4814, 4894, 4895, 4899, 4901, 4916, 4920, 4929, 4938, 4948, 4951, 4954, 4957, 5042, 5061, 5080, 5146, 5147, 5149, 5151, 5152, 5155, 5157, 5158, 5161, 5239, 5244, 5331, 5333, 5334, 5356, 5358, 5359], "systems": [6, 8, 16, 33, 48, 60, 64, 180, 186, 191, 357, 709, 877, 913, 1382, 1383, 1384, 1385, 1386, 1427, 1468, 1542, 1641, 3973, 4041, 4255, 4273, 4316, 4335, 4402, 4424, 4444, 4667, 4686, 4821, 4958, 5250], "modifying": [7, 64, 197, 368, 527, 1106, 4006, 4019, 4923, 5331, 5333, 5334], "quantumcircuits": [7, 360, 956, 966, 1000, 1003, 1005, 1016, 1273, 2025, 2063, 5365], "collection": [8, 10, 11, 28, 47, 48, 53, 64, 240, 411, 570, 1006, 1063, 1102, 1147, 1526, 1772, 2867, 3730, 4075, 4219, 4830], "quantum": [8, 12, 16, 19, 20, 21, 25, 26, 28, 30, 31, 32, 33, 35, 39, 45, 48, 49, 53, 57, 59, 60, 62, 63, 64, 69, 72, 88, 90, 92, 97, 103, 108, 109, 110, 115, 116, 118, 121, 136, 147, 154, 155, 156, 157, 158, 162, 163, 165, 172, 179, 180, 186, 193, 210, 234, 235, 238, 248, 255, 256, 265, 271, 272, 275, 287, 301, 302, 303, 304, 305, 308, 309, 310, 311, 319, 328, 346, 364, 381, 405, 406, 409, 419, 426, 427, 436, 442, 443, 446, 458, 472, 473, 474, 475, 476, 479, 480, 481, 482, 490, 499, 517, 523, 540, 564, 565, 568, 578, 585, 586, 595, 601, 602, 605, 617, 631, 632, 633, 634, 635, 638, 639, 640, 641, 649, 658, 676, 682, 693, 814, 841, 849, 852, 877, 904, 913, 918, 919, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1050, 1053, 1102, 1119, 1142, 1143, 1145, 1155, 1162, 1163, 1172, 1178, 1179, 1194, 1208, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1226, 1235, 1253, 1259, 1262, 1266, 1280, 1293, 1299, 1313, 1318, 1322, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1404, 1406, 1407, 1410, 1428, 1431, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1507, 1526, 1527, 1537, 1542, 1550, 1551, 1555, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1648, 1649, 1654, 1658, 1696, 1697, 1722, 1725, 1726, 1757, 1775, 1789, 1805, 1815, 1818, 1831, 1834, 1847, 1850, 1863, 1866, 1879, 1883, 1903, 1926, 1934, 1957, 1983, 1984, 1987, 1990, 2001, 2002, 2004, 2005, 2006, 2008, 2012, 2016, 2019, 2020, 2021, 2022, 2023, 2024, 2027, 2031, 2036, 2060, 2067, 2073, 2087, 2100, 2115, 2136, 2161, 2165, 2166, 2167, 2218, 2232, 2265, 2267, 2269, 2272, 2323, 2337, 2349, 2363, 2376, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2556, 2559, 2569, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2751, 2754, 2767, 2779, 2780, 2781, 2782, 2783, 2786, 2787, 2788, 2789, 2796, 2801, 2802, 2803, 2805, 2806, 2807, 2813, 2817, 2829, 2845, 2846, 2847, 2848, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2868, 2871, 2875, 2884, 2885, 2887, 2888, 2889, 2890, 2892, 3704, 3708, 3713, 3714, 3718, 3720, 3736, 3737, 3744, 3745, 3746, 3748, 3750, 3752, 3753, 3754, 3757, 3766, 3768, 3777, 3796, 3814, 3834, 3862, 3876, 3993, 4148, 4182, 4241, 4255, 4273, 4299, 4311, 4316, 4317, 4319, 4329, 4332, 4334, 4335, 4336, 4338, 4348, 4351, 4353, 4376, 4381, 4382, 4391, 4396, 4397, 4402, 4403, 4405, 4415, 4418, 4420, 4444, 4445, 4447, 4457, 4460, 4462, 4606, 4610, 4646, 4647, 4652, 4657, 4662, 4663, 4666, 4667, 4668, 4670, 4680, 4683, 4685, 4686, 4687, 4689, 4699, 4702, 4704, 4714, 4715, 4717, 4718, 4719, 4720, 4722, 4724, 4726, 4727, 4735, 4740, 4803, 4819, 4825, 4885, 4886, 4946, 4952, 4958, 4964, 4973, 5014, 5016, 5021, 5102, 5123, 5143, 5146, 5175, 5178, 5181, 5193, 5220, 5235, 5239, 5244, 5245, 5250, 5253, 5256, 5281, 5282, 5284, 5286, 5291, 5292, 5293, 5294, 5335, 5337, 5338, 5339, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5357, 5361, 5362, 5364, 5365, 5369, 5370, 5372], "computers": [8, 60, 64, 1477, 5123], "carry": [8, 47, 64, 97, 1342, 1373, 1398, 1550, 1551, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "out": [8, 28, 31, 59, 60, 64, 97, 142, 198, 233, 321, 335, 336, 369, 404, 492, 506, 507, 528, 563, 651, 665, 666, 814, 1107, 1141, 1228, 1242, 1243, 1388, 1392, 1444, 1480, 1503, 1662, 1674, 1928, 1934, 1935, 2166, 3829, 3842, 3896, 4220, 4470, 4497, 4528, 4623, 4724, 4915, 4991, 5233, 5240, 5245, 5262, 5277, 5333, 5334, 5349, 5355], "research": [8, 28], "investigate": [8, 4182], "how": [8, 10, 12, 16, 25, 30, 31, 35, 51, 53, 57, 59, 64, 97, 130, 191, 217, 269, 286, 388, 440, 457, 547, 599, 616, 773, 849, 852, 877, 912, 1125, 1176, 1193, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1533, 1537, 1563, 1567, 1644, 1692, 1934, 1970, 2024, 2025, 2032, 2055, 2063, 2156, 2168, 2277, 2285, 2311, 2323, 2337, 2349, 2363, 2376, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3708, 3718, 3779, 3789, 3816, 3891, 3966, 4162, 4167, 4172, 4182, 4432, 4819, 4823, 4825, 4922, 5014, 5108, 5178, 5202, 5226, 5230, 5250, 5335, 5341], "solve": [8, 31, 60, 64, 97, 180, 188, 190, 363, 709, 781, 849, 877, 1393, 2018, 2883, 4964, 5061, 5133], "problems": [8, 44, 48, 53, 60, 64, 147, 701, 709, 717, 781, 789, 798, 861, 869, 1372, 1987, 4964, 5341], "different": [8, 11, 20, 31, 35, 39, 48, 60, 64, 81, 82, 97, 118, 125, 126, 131, 134, 147, 148, 166, 173, 209, 210, 238, 241, 262, 264, 337, 380, 381, 409, 412, 433, 435, 508, 539, 540, 568, 571, 592, 594, 667, 762, 849, 904, 931, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1118, 1119, 1145, 1148, 1169, 1171, 1244, 1271, 1288, 1307, 1327, 1342, 1345, 1352, 1357, 1376, 1377, 1379, 1388, 1436, 1441, 1444, 1448, 1450, 1453, 1456, 1466, 1468, 1471, 1503, 1512, 1537, 1550, 1682, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1926, 1929, 1937, 2001, 2058, 2308, 2398, 2412, 2426, 2440, 2454, 2468, 2486, 2500, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2805, 2885, 2905, 3704, 3722, 3727, 3885, 3920, 4002, 4008, 4015, 4182, 4203, 4206, 4215, 4220, 4297, 4614, 4617, 4634, 4652, 4711, 4714, 4720, 4874, 4915, 4922, 4923, 4930, 5023, 5137, 5193, 5226, 5246, 5276, 5364], "domains": 8, "near": [8, 10, 11, 63, 64, 103, 743, 4162, 5190], "-term": [8, 11, 64, 683, 5190], "devices": [8, 10, 31, 48, 64, 913, 2323, 2337, 2349, 2363, 2376, 2808, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 3704, 5175, 5178, 5364], "short": [8, 64, 849, 877, 904, 3852], "depth": [8, 10, 44, 48, 64, 147, 233, 262, 264, 404, 433, 435, 563, 592, 594, 1141, 1169, 1171, 1393, 1456, 1471, 1472, 1477, 1640, 1671, 1682, 1729, 3718, 3834, 4915, 4964, 5075, 5076, 5117, 5178, 5237, 5276, 5355], "configuration": [8, 48, 57, 64, 913, 916, 917, 1641, 1642, 1643, 1644, 2277, 2280, 2285, 2309, 2323, 2327, 2337, 2339, 2349, 2353, 2363, 2367, 2376, 2380, 2866, 2909, 2910, 2912, 2918, 2919, 2921, 2927, 2928, 2930, 2936, 2937, 2946, 2947, 2949, 2954, 2955, 2971, 2972, 2988, 2989, 3021, 3022, 3038, 3039, 3055, 3056, 3072, 3073, 3089, 3090, 3105, 3106, 3122, 3123, 3138, 3139, 3155, 3156, 3171, 3172, 3188, 3189, 3205, 3206, 3222, 3223, 3239, 3240, 3256, 3257, 3273, 3274, 3290, 3291, 3306, 3307, 3323, 3324, 3341, 3356, 3357, 3373, 3374, 3398, 3399, 3415, 3416, 3424, 3425, 3433, 3434, 3449, 3450, 3467, 3488, 3489, 3496, 3497, 3513, 3514, 3529, 3530, 3547, 3554, 3555, 3571, 3572, 3588, 3589, 3606, 3614, 3621, 3622, 3638, 3639, 3655, 3656, 3671, 3672, 3688, 3689, 3705, 3708, 3718, 3720, 3721, 3730, 3737, 3748, 3750, 3752, 3766, 3798, 3838, 3891, 3892, 3894, 3929, 3932, 3957, 3963, 3965, 3969, 3970, 3976, 4255, 4261, 4273, 4279, 4814, 4901, 4902, 5202, 5230, 5231, 5232, 5233, 5234, 5250, 5331, 5333, 5334, 5339, 5367], "were": [8, 31, 33, 57, 64, 193, 197, 285, 364, 368, 456, 523, 527, 615, 912, 1071, 1072, 1087, 1088, 1102, 1106, 1192, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1666, 2016, 2499, 3736, 3864, 3869, 3993, 5117, 5120, 5239, 5244, 5268, 5272], "designed": [8, 39, 64, 3818, 5217], "swappable": 8, "sub": [8, 48, 64, 137, 165, 172, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1274, 1290, 1309, 1329, 1421, 1438, 1441, 1514, 1563, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 1922, 1923, 1924, 1925, 1932, 1934, 1970, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 4025, 4026, 4204, 4206, 4207, 4210, 4213, 4216, 4519, 4614, 4708, 5014, 5352], "-parts": 8, "algorithm": [8, 44, 48, 64, 65, 66, 68, 69, 73, 78, 82, 86, 92, 94, 95, 97, 98, 99, 100, 103, 104, 110, 112, 115, 118, 121, 122, 126, 130, 131, 133, 134, 136, 138, 139, 140, 147, 148, 156, 157, 158, 162, 165, 166, 172, 173, 180, 186, 188, 190, 191, 362, 363, 683, 688, 697, 701, 705, 709, 713, 721, 730, 734, 739, 748, 752, 757, 761, 767, 777, 781, 785, 789, 794, 802, 806, 810, 814, 818, 822, 826, 833, 837, 845, 849, 857, 865, 869, 873, 877, 884, 892, 896, 900, 904, 908, 975, 1025, 1282, 1302, 1380, 1388, 1401, 1458, 1468, 1471, 1526, 1682, 1760, 1791, 1820, 1836, 1852, 1868, 1948, 1951, 1952, 1970, 1983, 1994, 2323, 2349, 3816, 5111, 5117, 5175, 5178, 5190, 5193, 5250, 5257, 5258, 5337, 5338, 5339, 5340, 5341, 5342, 5344, 5345, 5362], "component": [8, 64, 69, 683, 761, 849, 877, 2323, 2337, 2349, 2363, 2376, 2883, 3757, 3773, 3993, 4008, 4019, 4162, 4568, 4803, 4854, 5291, 5292, 5342], "exchanged": [8, 1376, 1377, 1379, 1441, 1471, 1503, 1537], "implementation": [8, 11, 28, 31, 35, 44, 64, 69, 118, 147, 158, 260, 275, 431, 446, 590, 605, 761, 877, 896, 904, 1167, 1182, 1332, 1333, 1336, 1342, 1372, 1397, 1398, 1410, 1419, 1421, 1459, 1475, 1478, 1479, 1496, 1539, 1550, 1586, 1644, 2001, 2020, 2323, 2349, 2909, 2927, 3906, 4246, 4311, 4370, 4716, 4819, 4825, 4830, 4878, 4923, 4958, 5041, 5117, 5178, 5220, 5230, 5235, 5241, 5247], "same": [8, 16, 25, 29, 31, 35, 39, 48, 64, 101, 103, 105, 151, 169, 176, 209, 210, 215, 216, 232, 233, 238, 241, 250, 262, 264, 288, 337, 380, 381, 386, 387, 403, 404, 409, 412, 421, 433, 435, 459, 508, 539, 540, 545, 546, 562, 563, 568, 571, 580, 592, 594, 618, 667, 693, 841, 849, 877, 904, 914, 928, 948, 961, 976, 991, 1011, 1026, 1036, 1041, 1055, 1065, 1118, 1119, 1123, 1124, 1140, 1141, 1145, 1148, 1157, 1169, 1171, 1195, 1244, 1268, 1283, 1303, 1324, 1342, 1373, 1376, 1377, 1379, 1392, 1433, 1441, 1443, 1444, 1456, 1468, 1471, 1480, 1503, 1509, 1537, 1547, 1559, 1644, 1648, 1649, 1668, 1674, 1675, 1682, 1708, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1899, 1901, 1902, 1905, 1923, 1925, 1926, 1943, 1954, 1956, 1958, 1998, 2033, 2035, 2038, 2056, 2058, 2070, 2072, 2074, 2085, 2088, 2098, 2101, 2113, 2116, 2133, 2135, 2137, 2154, 2156, 2163, 2178, 2180, 2196, 2206, 2209, 2221, 2223, 2233, 2235, 2237, 2253, 2290, 2323, 2333, 2337, 2345, 2349, 2359, 2372, 2385, 2394, 2408, 2422, 2436, 2450, 2464, 2482, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2813, 2814, 2885, 2889, 2890, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3704, 3722, 3727, 3730, 3759, 3766, 3769, 3782, 3814, 3862, 3869, 3876, 3887, 3888, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3993, 4002, 4015, 4025, 4029, 4030, 4032, 4037, 4041, 4042, 4139, 4219, 4220, 4231, 4247, 4253, 4262, 4264, 4268, 4271, 4280, 4282, 4286, 4289, 4292, 4301, 4318, 4337, 4356, 4384, 4404, 4426, 4446, 4467, 4487, 4494, 4497, 4498, 4501, 4506, 4514, 4519, 4523, 4528, 4533, 4554, 4571, 4614, 4617, 4618, 4634, 4649, 4669, 4688, 4714, 4720, 4726, 4760, 4804, 4813, 4873, 4893, 4895, 4900, 4916, 4921, 4922, 4930, 4966, 4973, 4996, 4999, 5006, 5018, 5020, 5091, 5132, 5178, 5190, 5275, 5331, 5333, 5334, 5341, 5355], "order": [8, 31, 39, 48, 53, 57, 64, 74, 97, 103, 143, 162, 193, 198, 234, 235, 253, 255, 256, 276, 288, 289, 343, 344, 345, 364, 369, 405, 406, 424, 426, 427, 447, 459, 460, 514, 515, 516, 523, 528, 564, 565, 583, 585, 586, 606, 618, 619, 673, 674, 675, 773, 849, 877, 912, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1102, 1107, 1142, 1143, 1160, 1162, 1163, 1183, 1195, 1196, 1250, 1251, 1252, 1274, 1290, 1309, 1318, 1329, 1342, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1438, 1441, 1443, 1447, 1450, 1456, 1457, 1458, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1499, 1503, 1514, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1663, 1706, 1711, 1714, 1715, 1744, 1767, 1772, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 1926, 1943, 1945, 1976, 1978, 2001, 2003, 2015, 2165, 2168, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 2265, 2269, 2290, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 2831, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3723, 3738, 3739, 3779, 3789, 3823, 3868, 3870, 3993, 4316, 4389, 4393, 4395, 4439, 4444, 4463, 4491, 4513, 4519, 4530, 4540, 4547, 4609, 4614, 4617, 4625, 4634, 4635, 4655, 4659, 4661, 4725, 4762, 4783, 4798, 4812, 4819, 4823, 4825, 4887, 4891, 4911, 4915, 4927, 4973, 4996, 4999, 5003, 5006, 5007, 5014, 5018, 5023, 5123, 5184, 5193, 5199, 5239, 5244, 5281, 5303, 5315, 5327, 5354, 5355, 5361], "potentially": [8, 64, 147, 165, 172, 841, 4241, 4922, 5008, 5018, 5043], "alter": [8, 5077, 5143], "behavior": [8, 31, 35, 48, 64, 683, 761, 849, 877, 1682, 1932, 1994, 2068, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2349, 2482, 3905, 3993, 4008, 4041, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4915, 4946, 4949, 4952, 4955, 4973, 5041, 5143, 5190, 5193], "quantuminstance": [8, 53, 54, 64, 69, 92, 97, 103, 110, 115, 118, 136, 147, 156, 162, 165, 172, 179, 186, 852, 904, 1926, 1994, 2008, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5268, 5272, 5338, 5339, 5340, 5342, 5343, 5344, 5362], "desired": [8, 53, 64, 143, 193, 364, 523, 682, 904, 1388, 1644, 1682, 1778, 1916, 1922, 1930, 1966, 1970, 1982, 2050, 2083, 2095, 2109, 2129, 2150, 2183, 2184, 2194, 2205, 2229, 2249, 2263, 2337, 3704, 3723, 3738, 3739, 3824, 4041, 4219, 4875, 5151, 5154, 5160, 5211, 5231, 5232, 5350], "where": [8, 11, 16, 28, 31, 35, 39, 44, 48, 53, 64, 68, 92, 97, 98, 101, 103, 110, 118, 136, 147, 165, 185, 193, 198, 203, 234, 235, 255, 256, 290, 342, 343, 344, 345, 356, 361, 369, 374, 405, 406, 426, 427, 461, 513, 514, 515, 516, 523, 528, 533, 564, 565, 585, 586, 620, 672, 673, 674, 675, 717, 773, 798, 849, 877, 904, 912, 970, 1064, 1107, 1112, 1142, 1143, 1162, 1163, 1197, 1249, 1250, 1251, 1252, 1296, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1388, 1392, 1393, 1397, 1399, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1444, 1448, 1456, 1462, 1464, 1466, 1468, 1470, 1472, 1475, 1478, 1479, 1480, 1483, 1537, 1538, 1551, 1563, 1567, 1644, 1648, 1649, 1663, 1786, 1910, 1923, 1934, 1937, 1948, 1961, 1987, 2018, 2021, 2022, 2024, 2031, 2043, 2067, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256, 2265, 2269, 2271, 2274, 2298, 2323, 2349, 2488, 2808, 2813, 2817, 2818, 2826, 2830, 2845, 2847, 2848, 2856, 2857, 2858, 2859, 2860, 2867, 2883, 2884, 2887, 2889, 2890, 3723, 3739, 3757, 3789, 3796, 3797, 3833, 3904, 3910, 3982, 3993, 4030, 4048, 4162, 4167, 4172, 4182, 4192, 4193, 4195, 4196, 4197, 4219, 4241, 4282, 4305, 4310, 4316, 4322, 4331, 4335, 4341, 4350, 4360, 4369, 4388, 4390, 4398, 4408, 4417, 4431, 4440, 4444, 4450, 4459, 4463, 4474, 4482, 4487, 4491, 4503, 4504, 4513, 4519, 4522, 4539, 4558, 4564, 4568, 4576, 4579, 4580, 4590, 4603, 4605, 4614, 4617, 4634, 4654, 4656, 4664, 4667, 4673, 4682, 4686, 4692, 4701, 4714, 4715, 4717, 4720, 4722, 4723, 4726, 4739, 4740, 4744, 4749, 4751, 4771, 4773, 4774, 4779, 4787, 4788, 4793, 4803, 4819, 4823, 4825, 4847, 4848, 4888, 4890, 4922, 4924, 4973, 5016, 5017, 5033, 5070, 5079, 5137, 5226, 5227, 5237, 5238, 5244, 5263, 5281, 5285, 5286, 5287, 5288, 5289, 5367], "\u2019s": [8, 12, 16, 24, 25, 28, 31, 35, 39, 44, 51, 53, 64, 97, 99, 100, 110, 130, 147, 150, 156, 168, 172, 175, 180, 277, 328, 448, 499, 607, 658, 683, 798, 912, 919, 923, 936, 942, 943, 956, 1006, 1036, 1050, 1184, 1235, 1262, 1263, 1313, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1372, 1374, 1388, 1398, 1407, 1458, 1462, 1468, 1475, 1499, 1556, 1558, 1641, 1642, 1643, 1644, 1645, 1666, 1706, 1722, 1898, 1900, 1901, 1906, 1908, 1909, 1913, 1916, 1918, 1922, 1925, 1926, 1934, 1935, 1955, 1956, 1959, 1964, 1966, 1975, 1977, 1980, 1984, 1985, 1996, 2002, 2004, 2006, 2024, 2025, 2026, 2028, 2032, 2034, 2035, 2039, 2042, 2047, 2050, 2055, 2063, 2064, 2066, 2069, 2071, 2072, 2075, 2079, 2083, 2084, 2086, 2089, 2093, 2095, 2097, 2099, 2102, 2106, 2109, 2112, 2114, 2117, 2123, 2127, 2129, 2134, 2135, 2138, 2141, 2145, 2150, 2154, 2169, 2170, 2171, 2177, 2179, 2180, 2182, 2189, 2194, 2197, 2198, 2201, 2202, 2205, 2210, 2211, 2214, 2215, 2222, 2224, 2226, 2229, 2231, 2234, 2235, 2238, 2239, 2244, 2245, 2249, 2252, 2254, 2255, 2258, 2259, 2263, 2282, 2285, 2291, 2311, 2484, 2502, 2503, 2813, 2871, 2903, 2963, 2969, 2980, 2986, 2997, 3003, 3005, 3011, 3013, 3019, 3030, 3036, 3047, 3053, 3064, 3070, 3081, 3087, 3097, 3103, 3114, 3120, 3130, 3136, 3147, 3153, 3163, 3169, 3180, 3186, 3197, 3203, 3214, 3220, 3231, 3237, 3248, 3254, 3265, 3271, 3282, 3288, 3298, 3304, 3315, 3321, 3332, 3338, 3348, 3354, 3365, 3371, 3382, 3388, 3390, 3396, 3407, 3413, 3441, 3447, 3458, 3464, 3474, 3480, 3505, 3511, 3521, 3527, 3538, 3544, 3563, 3569, 3580, 3586, 3597, 3603, 3630, 3636, 3647, 3653, 3663, 3669, 3680, 3686, 3696, 3702, 3748, 3779, 3789, 3796, 3814, 3862, 3881, 3886, 3889, 3909, 3922, 3951, 3993, 4023, 4024, 4121, 4139, 4177, 4187, 4231, 4255, 4273, 4380, 4400, 4463, 4465, 4466, 4472, 4489, 4490, 4491, 4492, 4493, 4506, 4513, 4519, 4521, 4522, 4524, 4525, 4529, 4530, 4533, 4539, 4540, 4614, 4616, 4617, 4619, 4628, 4634, 4644, 4813, 4902, 4915, 4922, 4923, 4928, 4930, 4938, 4973, 5024, 5117, 5226, 5235, 5267, 5268, 5272, 5284, 5290, 5345], "executed": [8, 10, 16, 25, 31, 33, 35, 64, 137, 240, 347, 411, 518, 570, 677, 849, 877, 956, 1006, 1036, 1147, 1254, 1263, 1641, 2267, 2272, 2298, 2323, 2345, 2349, 2363, 2376, 2488, 2888, 3730, 3796, 3797, 3838, 3896, 3909, 3910, 4008, 4031, 4802, 4915, 5014, 5033], "configured": [8, 64, 147, 2323, 2337, 2349, 3966, 4432, 5146, 5217], "compile": [8, 44, 53, 62, 64, 1301, 4182, 4922, 5236, 5250, 5257], "runtime": [8, 18, 53, 60, 64, 251, 252, 422, 423, 581, 582, 904, 916, 917, 1036, 1158, 1159, 1641, 1706, 2277, 2285, 2323, 2337, 2349, 3704, 3708, 3737, 3756, 3758, 3838, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3887, 3888, 3891, 3896, 3899, 3901, 3905, 3909, 3916, 3920, 3922, 3925, 5007, 5214, 5217, 5369], "parameters": [8, 12, 25, 30, 31, 35, 39, 44, 53, 88, 89, 116, 147, 149, 150, 151, 165, 167, 168, 169, 172, 174, 175, 176, 179, 193, 195, 198, 200, 277, 322, 335, 336, 364, 366, 369, 371, 448, 493, 506, 507, 523, 525, 528, 530, 607, 652, 665, 666, 686, 689, 693, 773, 806, 841, 849, 850, 852, 856, 869, 877, 878, 883, 904, 923, 934, 935, 943, 954, 955, 956, 968, 969, 970, 983, 985, 997, 1001, 1003, 1005, 1006, 1018, 1019, 1020, 1033, 1035, 1036, 1048, 1049, 1050, 1061, 1062, 1067, 1071, 1072, 1081, 1083, 1087, 1088, 1096, 1097, 1099, 1102, 1104, 1107, 1109, 1184, 1229, 1242, 1243, 1263, 1275, 1276, 1292, 1295, 1312, 1315, 1318, 1330, 1331, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1439, 1440, 1441, 1443, 1447, 1448, 1449, 1450, 1453, 1455, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1515, 1516, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1648, 1649, 1655, 1768, 1784, 1785, 1799, 1802, 1813, 1814, 1815, 1828, 1830, 1831, 1844, 1846, 1847, 1860, 1862, 1863, 1876, 1878, 1894, 1898, 1901, 1908, 1928, 1929, 1953, 1956, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2022, 2024, 2025, 2032, 2035, 2042, 2055, 2063, 2069, 2072, 2084, 2097, 2111, 2112, 2123, 2131, 2132, 2135, 2141, 2153, 2154, 2162, 2169, 2177, 2180, 2195, 2206, 2208, 2218, 2220, 2232, 2235, 2239, 2252, 2265, 2267, 2269, 2271, 2272, 2274, 2277, 2285, 2323, 2333, 2337, 2349, 2359, 2363, 2372, 2376, 2385, 2389, 2401, 2402, 2415, 2416, 2429, 2430, 2443, 2444, 2457, 2458, 2471, 2472, 2515, 2516, 2528, 2529, 2541, 2542, 2554, 2555, 2567, 2568, 2580, 2581, 2593, 2594, 2606, 2607, 2619, 2620, 2632, 2633, 2645, 2646, 2658, 2659, 2671, 2672, 2684, 2685, 2697, 2698, 2710, 2711, 2723, 2724, 2736, 2737, 2749, 2750, 2762, 2763, 2775, 2776, 2798, 2802, 2803, 2805, 2806, 2807, 2808, 2847, 2849, 2855, 2856, 2858, 2860, 2861, 2867, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3718, 3752, 3767, 3823, 3838, 3868, 3876, 3885, 3887, 3888, 3889, 3890, 3891, 3909, 3918, 3922, 3923, 3935, 3957, 3985, 3986, 3989, 3993, 3995, 4008, 4010, 4032, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4086, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4159, 4161, 4162, 4164, 4166, 4167, 4169, 4171, 4172, 4174, 4176, 4177, 4181, 4182, 4184, 4186, 4187, 4264, 4282, 4294, 4421, 4873, 4875, 4922, 4930, 5193, 5226, 5235, 5237, 5239, 5240, 5241, 5242, 5244, 5245, 5246, 5247, 5248, 5250, 5338, 5339, 5356, 5359, 5362, 5367], "controlling": [8, 53, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034], "compilation": [8, 31, 44, 45, 53, 58, 64, 1953, 4370, 4716, 4915, 4973, 5018, 5205, 5230], "ultimately": 8, "uses": [8, 24, 29, 44, 48, 53, 64, 69, 97, 103, 147, 165, 172, 683, 701, 709, 717, 781, 798, 806, 833, 841, 861, 869, 896, 975, 1025, 1282, 1293, 1302, 1313, 1333, 1342, 1373, 1379, 1392, 1398, 1399, 1537, 1760, 1791, 1820, 1836, 1852, 1868, 1934, 2002, 2004, 2006, 2220, 2323, 2337, 2349, 2363, 2376, 3708, 3801, 3993, 4008, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4159, 4164, 4169, 4174, 4184, 4388, 4390, 4398, 4603, 4605, 4654, 4656, 4664, 4705, 4706, 4707, 4708, 4709, 5190, 5333, 5334], "terra": [8, 16, 31, 35, 53, 56, 62, 913, 1641, 1901, 1902, 1903, 1908, 1913, 1929, 1943, 1948, 1956, 1957, 1964, 2027, 2035, 2036, 2042, 2047, 2066, 2068, 2069, 2072, 2073, 2079, 2084, 2087, 2093, 2097, 2100, 2106, 2112, 2115, 2123, 2127, 2132, 2135, 2136, 2141, 2145, 2154, 2169, 2170, 2171, 2177, 2180, 2189, 2201, 2202, 2214, 2215, 2226, 2235, 2239, 2244, 2245, 2252, 2258, 2259, 3005, 3013, 4255, 4273, 4830, 5250, 5337, 5339, 5348, 5350, 5354, 5355, 5361, 5364, 5366], "actual": [8, 10, 48, 53, 64, 143, 1398, 2337, 4946, 4952, 5181, 5267, 5344], "created": [8, 16, 31, 33, 35, 39, 64, 201, 204, 205, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 241, 245, 249, 250, 251, 252, 257, 258, 262, 263, 264, 268, 273, 274, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 372, 375, 376, 380, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406, 407, 412, 416, 420, 421, 422, 423, 428, 429, 433, 434, 435, 439, 444, 445, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 531, 534, 535, 539, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 565, 566, 571, 575, 579, 580, 581, 582, 587, 588, 592, 593, 594, 598, 603, 604, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 1110, 1113, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1143, 1144, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1181, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1675, 2156, 2183, 2184, 2277, 2285, 4182, 4432, 4519, 4614, 4751, 5143, 5146, 5268, 5281, 5290, 5291, 5292, 5293, 5294, 5332], "its": [8, 12, 25, 28, 31, 35, 44, 48, 53, 54, 64, 147, 158, 165, 172, 197, 201, 213, 235, 239, 240, 252, 279, 280, 281, 347, 368, 372, 384, 406, 410, 411, 423, 450, 451, 452, 518, 527, 531, 543, 565, 569, 570, 582, 609, 610, 611, 677, 781, 919, 929, 936, 942, 949, 962, 973, 1012, 1023, 1027, 1042, 1056, 1064, 1081, 1097, 1106, 1110, 1121, 1143, 1146, 1147, 1159, 1186, 1187, 1188, 1254, 1262, 1269, 1280, 1285, 1296, 1299, 1304, 1335, 1338, 1376, 1418, 1420, 1423, 1426, 1434, 1456, 1510, 1527, 1537, 1556, 1558, 1586, 1663, 1757, 1779, 1789, 1818, 1822, 1834, 1838, 1850, 1854, 1866, 1870, 1883, 1948, 1974, 2024, 2032, 2323, 2337, 2349, 2363, 2376, 2494, 2705, 2718, 2731, 2744, 2757, 2770, 2886, 2887, 3720, 3723, 3739, 3777, 3782, 3793, 3833, 3855, 3876, 3881, 3901, 3922, 3965, 3969, 3970, 3983, 3993, 4039, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4086, 4172, 4244, 4245, 4298, 4712, 4875, 4897, 4918, 4964, 5007, 5014, 5068, 5117, 5193, 5252, 5272, 5281, 5284, 5285, 5342, 5345], "components": [8, 10, 60, 269, 440, 599, 1063, 1176, 1648, 1649, 1692, 2020, 3757, 3779, 3781, 3787, 3789, 3993, 4568, 4803, 4958, 5137, 5220, 5291], "variety": [8, 35, 682], "grouped": [8, 64, 685, 690, 695, 698, 703, 706, 711, 714, 719, 722, 728, 731, 737, 740, 746, 749, 755, 758, 764, 770, 775, 778, 783, 786, 792, 795, 800, 803, 808, 811, 816, 819, 824, 827, 835, 838, 843, 846, 850, 854, 858, 863, 866, 871, 874, 878, 881, 885, 890, 893, 898, 901, 906, 909, 1925, 1970, 2112, 5008], "logical": [8, 11, 48, 64, 936, 1277, 1296, 1301, 1318, 1447, 1462, 1464, 3723, 3738, 3739, 3779, 3789, 4182, 4915, 5077, 5143], "function": [8, 12, 28, 29, 31, 35, 39, 44, 48, 51, 53, 57, 64, 66, 75, 79, 86, 95, 97, 101, 113, 118, 120, 123, 147, 151, 165, 169, 172, 176, 186, 188, 190, 209, 233, 240, 241, 250, 252, 321, 347, 363, 380, 404, 411, 412, 421, 423, 492, 518, 539, 563, 570, 571, 580, 582, 651, 677, 682, 683, 685, 687, 691, 692, 693, 695, 696, 699, 700, 701, 703, 704, 707, 708, 711, 712, 715, 716, 717, 719, 720, 723, 724, 725, 728, 729, 732, 733, 734, 737, 738, 741, 742, 743, 746, 747, 750, 751, 752, 755, 756, 759, 760, 761, 763, 764, 765, 766, 771, 772, 773, 775, 776, 779, 780, 781, 783, 784, 787, 788, 789, 792, 793, 796, 797, 798, 800, 801, 804, 805, 806, 808, 809, 812, 813, 814, 816, 817, 820, 821, 824, 825, 828, 829, 830, 833, 835, 836, 839, 840, 841, 843, 844, 847, 848, 849, 850, 851, 852, 854, 855, 856, 859, 860, 861, 863, 864, 867, 868, 869, 871, 872, 875, 876, 877, 878, 879, 881, 882, 883, 886, 887, 890, 891, 894, 895, 896, 898, 899, 902, 903, 906, 907, 910, 911, 1102, 1118, 1141, 1147, 1148, 1157, 1159, 1228, 1254, 1296, 1316, 1317, 1318, 1342, 1372, 1373, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1407, 1410, 1447, 1450, 1457, 1458, 1462, 1465, 1466, 1467, 1468, 1469, 1475, 1477, 1480, 1503, 1550, 1555, 1563, 1567, 1640, 1641, 1644, 1673, 1717, 1720, 1728, 1732, 1898, 1899, 1903, 1906, 1916, 1918, 1926, 1934, 1941, 1942, 1944, 1953, 1954, 1957, 1959, 1960, 1966, 1983, 1987, 1990, 1998, 2001, 2008, 2020, 2024, 2025, 2027, 2028, 2032, 2033, 2036, 2037, 2039, 2041, 2050, 2054, 2055, 2056, 2063, 2064, 2069, 2070, 2073, 2075, 2083, 2084, 2085, 2087, 2089, 2095, 2097, 2098, 2100, 2102, 2109, 2112, 2113, 2115, 2117, 2129, 2132, 2133, 2136, 2138, 2140, 2150, 2153, 2161, 2162, 2163, 2170, 2176, 2177, 2178, 2181, 2182, 2188, 2194, 2195, 2196, 2198, 2199, 2201, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2211, 2212, 2214, 2218, 2220, 2221, 2224, 2226, 2227, 2228, 2229, 2231, 2232, 2233, 2236, 2238, 2240, 2241, 2244, 2248, 2249, 2251, 2252, 2253, 2255, 2256, 2258, 2261, 2262, 2263, 2308, 2473, 2486, 2487, 2500, 2798, 2808, 2862, 2870, 2871, 2872, 2883, 2884, 2888, 2890, 2891, 2892, 2905, 3723, 3725, 3730, 3738, 3739, 3824, 3838, 3885, 3905, 3909, 3918, 4001, 4008, 4014, 4026, 4032, 4042, 4080, 4086, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4159, 4164, 4167, 4169, 4174, 4182, 4184, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4206, 4231, 4244, 4245, 4264, 4282, 4297, 4298, 4299, 4380, 4388, 4392, 4394, 4395, 4473, 4500, 4589, 4603, 4607, 4608, 4609, 4644, 4654, 4658, 4660, 4661, 4717, 4812, 4813, 4819, 4823, 4825, 4830, 4844, 4896, 4900, 4917, 4921, 4930, 4964, 5004, 5007, 5017, 5042, 5053, 5054, 5055, 5058, 5178, 5230, 5235, 5237, 5239, 5243, 5244, 5247, 5249, 5261, 5275, 5282, 5283, 5331, 5333, 5334, 5341], "such": [8, 10, 11, 25, 28, 31, 33, 35, 39, 48, 51, 53, 57, 60, 64, 78, 94, 97, 103, 112, 122, 147, 165, 172, 180, 186, 197, 203, 233, 251, 278, 321, 328, 342, 368, 374, 404, 422, 449, 492, 499, 513, 527, 533, 563, 581, 608, 651, 658, 672, 682, 709, 822, 832, 904, 1106, 1112, 1141, 1158, 1185, 1228, 1235, 1249, 1372, 1376, 1379, 1387, 1401, 1442, 1456, 1458, 1503, 1537, 1786, 1911, 1916, 1922, 1930, 1934, 1936, 1948, 1962, 1966, 1983, 2006, 2024, 2025, 2028, 2032, 2039, 2045, 2049, 2050, 2051, 2052, 2055, 2061, 2062, 2063, 2064, 2077, 2083, 2092, 2095, 2105, 2109, 2125, 2129, 2143, 2150, 2161, 2165, 2166, 2186, 2192, 2194, 2200, 2205, 2213, 2217, 2218, 2225, 2229, 2232, 2242, 2249, 2257, 2263, 2265, 2269, 2302, 2308, 2311, 2337, 2479, 2486, 2493, 2500, 2875, 2876, 2884, 2885, 2899, 2905, 3417, 3704, 3705, 3720, 3725, 3737, 3777, 3781, 3791, 3806, 3823, 3824, 3834, 3868, 3887, 3905, 3906, 3919, 3922, 3926, 3932, 3976, 3982, 3999, 4008, 4012, 4025, 4026, 4029, 4048, 4103, 4172, 4182, 4203, 4206, 4219, 4316, 4402, 4519, 4614, 4667, 4686, 4915, 4930, 4958, 4964, 4996, 4999, 5006, 5018, 5033, 5091, 5151, 5210, 5213, 5233, 5234, 5241, 5331, 5332], "find": [8, 16, 25, 28, 48, 59, 60, 64, 69, 97, 103, 110, 118, 120, 143, 165, 172, 180, 186, 239, 410, 569, 682, 773, 806, 921, 940, 1146, 1260, 1644, 1987, 2018, 2158, 2875, 3723, 3738, 3739, 3789, 3923, 3942, 3943, 4964, 4976, 5003, 5004, 5007, 5008, 5048, 5073, 5117, 5137, 5177, 5201, 5214, 5217, 5262, 5342], "eigenvalues": [8, 64, 81, 82, 84, 103, 104, 105, 107, 130, 131, 133, 138, 143, 144, 145, 146, 165, 166, 187, 237, 408, 567, 4714, 4715, 4720, 4726], "chemistry": [8, 11, 64, 82, 126, 131, 134, 148, 166, 173, 1503, 1945], "excited": [8, 60, 64, 165, 169, 2842, 2845, 2858, 2861, 3708, 3730, 4192], "states": [8, 11, 28, 48, 54, 60, 64, 66, 84, 97, 100, 133, 136, 165, 187, 253, 276, 299, 300, 424, 447, 470, 471, 583, 606, 629, 630, 1160, 1183, 1206, 1207, 1355, 1379, 1387, 1388, 1398, 1471, 1503, 1526, 1551, 1586, 1772, 2181, 2204, 2236, 2248, 2261, 2265, 2269, 2323, 2337, 2349, 2634, 2777, 2778, 3719, 3761, 3873, 4192, 4229, 4607, 4644, 4658, 4715, 4740, 4806, 4915, 5270, 5274, 5335, 5370], "molecule": [8, 64, 172, 904], "-nature": [8, 64, 5358, 5359], "leverage": [8, 59, 64, 147, 165, 172, 4254, 4272, 4287], "knowledge": [8, 35, 97], "do": [8, 10, 16, 28, 31, 48, 51, 53, 64, 240, 252, 347, 411, 423, 518, 570, 582, 677, 682, 773, 912, 936, 986, 1081, 1097, 1101, 1147, 1159, 1254, 1379, 1388, 1421, 1443, 1472, 1641, 1644, 1722, 1910, 1934, 1943, 1961, 2024, 2032, 2043, 2091, 2104, 2124, 2142, 2176, 2218, 2251, 2282, 2323, 2337, 2349, 3718, 3730, 3736, 3823, 3868, 3963, 3993, 4008, 4041, 4519, 4549, 4579, 4589, 4705, 4714, 4720, 4726, 4751, 4767, 4811, 4812, 4813, 4829, 4834, 4843, 4861, 4868, 4922, 4964, 4970, 5014, 5037, 5077, 5117, 5132, 5137, 5143, 5169, 5178, 5190, 5217, 5226, 5307, 5319], "application": [8, 59, 64, 1388, 3766, 3777, 3791, 4930, 5033, 5117], "domain": [8, 734, 1399, 1400], "evolve": [8, 64, 88, 109, 147, 155, 163, 725, 1377, 1448, 1952, 1970, 1973, 1975, 1977, 1980, 4381, 4424, 4473, 4500, 4599, 4607, 4646, 4658, 4922, 5347], "time": [8, 10, 11, 16, 25, 29, 31, 35, 39, 48, 53, 57, 64, 88, 97, 103, 108, 109, 147, 154, 155, 156, 162, 163, 165, 172, 180, 186, 193, 231, 232, 246, 279, 280, 281, 364, 402, 403, 417, 450, 451, 452, 523, 561, 562, 576, 609, 610, 611, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1139, 1140, 1153, 1186, 1187, 1188, 1263, 1277, 1296, 1316, 1317, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1452, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1641, 1642, 1643, 1644, 1706, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1922, 1930, 1970, 1978, 2024, 2277, 2285, 2318, 2323, 2333, 2337, 2345, 2349, 2359, 2372, 2385, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2808, 2842, 2848, 2852, 2861, 2867, 2915, 2924, 2933, 2936, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3708, 3723, 3728, 3730, 3738, 3739, 3782, 3789, 3793, 3796, 3802, 3811, 3814, 3818, 3821, 3830, 3832, 3838, 3852, 3876, 3881, 3882, 3884, 3887, 3888, 3909, 3922, 3927, 3942, 3945, 3948, 3949, 3963, 3973, 3993, 3994, 3996, 3997, 3998, 3999, 4000, 4001, 4004, 4007, 4008, 4009, 4011, 4012, 4013, 4014, 4027, 4028, 4029, 4030, 4037, 4042, 4049, 4050, 4075, 4076, 4078, 4079, 4080, 4081, 4083, 4084, 4085, 4088, 4089, 4090, 4091, 4093, 4094, 4095, 4097, 4098, 4099, 4100, 4102, 4103, 4104, 4106, 4107, 4108, 4109, 4111, 4112, 4113, 4115, 4116, 4117, 4118, 4120, 4121, 4122, 4124, 4125, 4126, 4127, 4129, 4130, 4131, 4133, 4134, 4135, 4136, 4138, 4139, 4140, 4142, 4143, 4144, 4145, 4147, 4148, 4149, 4151, 4152, 4153, 4154, 4156, 4158, 4159, 4163, 4164, 4168, 4169, 4173, 4174, 4178, 4182, 4183, 4184, 4188, 4215, 4219, 4225, 4229, 4255, 4264, 4751, 4813, 4819, 4823, 4825, 4829, 4900, 4901, 4921, 4922, 4946, 4949, 4952, 4955, 4958, 4964, 4973, 4976, 5003, 5016, 5021, 5023, 5077, 5085, 5091, 5102, 5140, 5142, 5143, 5145, 5181, 5193, 5196, 5214, 5217, 5220, 5230, 5235, 5250, 5254, 5331, 5333, 5334, 5350, 5352, 5355, 5358, 5359, 5362, 5366, 5369, 5370], "imaginary": [8, 64, 108, 109, 2020, 4570, 5291, 5361, 5362], "evolution": [8, 64, 88, 90, 103, 104, 108, 109, 147, 154, 155, 162, 163, 180, 193, 246, 364, 417, 523, 576, 725, 789, 1153, 1377, 1404, 1448, 1450, 1452, 1471, 1563, 1567, 1753, 1949, 1950, 1951, 1952, 1953, 1968, 1970, 1972, 1973, 1975, 1976, 1977, 1978, 1980, 2323, 4316, 4335, 4392, 4402, 4444, 4473, 4500, 4667, 4686, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 5361, 5362], "possible": [8, 31, 35, 39, 48, 54, 64, 145, 147, 165, 172, 240, 252, 347, 411, 423, 518, 570, 582, 677, 682, 1147, 1159, 1254, 1362, 1376, 1379, 1388, 1392, 1442, 1462, 1464, 1479, 1480, 1644, 1934, 1987, 2059, 2323, 2349, 2886, 2887, 3704, 3718, 3730, 3736, 3782, 3789, 3793, 3795, 3814, 4008, 4027, 4028, 4041, 4241, 4568, 4815, 4895, 4916, 4946, 4949, 4952, 4955, 4973, 4976, 5077, 5079, 5114, 5117, 5143, 5178, 5226], "support": [8, 25, 29, 35, 39, 48, 60, 64, 147, 683, 684, 687, 693, 694, 696, 701, 702, 704, 709, 710, 712, 717, 718, 720, 725, 727, 729, 734, 736, 738, 743, 745, 747, 752, 754, 756, 761, 762, 766, 773, 774, 776, 781, 782, 784, 789, 791, 793, 798, 799, 801, 806, 807, 809, 814, 815, 817, 822, 823, 825, 832, 833, 834, 836, 841, 842, 844, 849, 853, 855, 861, 862, 864, 869, 870, 872, 877, 880, 882, 888, 889, 891, 896, 897, 899, 904, 905, 907, 1063, 1471, 1908, 2042, 2123, 2141, 2155, 2169, 2239, 2280, 2285, 2286, 2287, 2288, 2289, 2290, 2323, 2328, 2340, 2354, 2368, 2381, 2886, 2887, 2912, 2921, 2930, 2964, 2965, 2966, 2967, 2968, 2981, 2982, 2983, 2984, 2985, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3031, 3032, 3033, 3034, 3035, 3048, 3049, 3050, 3051, 3052, 3065, 3066, 3067, 3068, 3069, 3082, 3083, 3084, 3085, 3086, 3098, 3099, 3100, 3101, 3102, 3115, 3116, 3117, 3118, 3119, 3131, 3132, 3133, 3134, 3135, 3148, 3149, 3150, 3151, 3152, 3164, 3165, 3166, 3167, 3168, 3181, 3182, 3183, 3184, 3185, 3198, 3199, 3200, 3201, 3202, 3215, 3216, 3217, 3218, 3219, 3232, 3233, 3234, 3235, 3236, 3249, 3250, 3251, 3252, 3253, 3266, 3267, 3268, 3269, 3270, 3283, 3284, 3285, 3286, 3287, 3299, 3300, 3301, 3302, 3303, 3316, 3317, 3318, 3319, 3320, 3333, 3334, 3335, 3336, 3337, 3349, 3350, 3351, 3352, 3353, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3391, 3392, 3393, 3394, 3395, 3408, 3409, 3410, 3411, 3412, 3442, 3443, 3444, 3445, 3446, 3459, 3460, 3461, 3462, 3463, 3475, 3476, 3477, 3478, 3479, 3506, 3507, 3508, 3509, 3510, 3522, 3523, 3524, 3525, 3526, 3539, 3540, 3541, 3542, 3543, 3564, 3565, 3566, 3567, 3568, 3581, 3582, 3583, 3584, 3585, 3598, 3599, 3600, 3601, 3602, 3631, 3632, 3633, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3664, 3665, 3666, 3667, 3668, 3681, 3682, 3683, 3684, 3685, 3697, 3698, 3699, 3700, 3701, 3721, 3730, 3737, 3889, 3894, 3901, 3906, 4008, 4013, 4014, 4041, 4182, 4902, 5152, 5158, 5226, 5227, 5237, 5238, 5250, 5253, 5275, 5331, 5359], "them": [8, 11, 12, 29, 31, 48, 51, 53, 60, 64, 89, 92, 262, 264, 433, 435, 592, 594, 861, 1169, 1171, 1318, 1396, 1447, 1464, 1901, 1928, 1956, 1970, 2024, 2032, 2035, 2056, 2072, 2135, 2154, 2161, 2180, 2232, 2235, 3718, 3732, 3855, 4027, 4028, 4032, 4892, 4896, 4917, 4930, 5000, 5014, 5117, 5123, 5129, 5134, 5157, 5178, 5283], "machine": [8, 60, 64, 798, 841, 896, 1376, 1456, 1503, 5267], "learning": [8, 59, 60, 64, 683, 693, 773, 849, 850, 877, 878, 1376, 1450, 1456, 1503], "might": [8, 11, 31, 35, 48, 57, 64, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 806, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907, 912, 1378, 1388, 1417, 1987, 1994, 2285, 2308, 2486, 2500, 2905, 3722, 3723, 3727, 3738, 3739, 3796, 3799, 3814, 3862, 4182, 4973, 5143, 5226, 5262, 5335], "train": 8, "boltzmann": 8, "neural": [8, 60, 1456], "networks": [8, 11, 12, 60, 64, 1342, 1373, 1550, 4316, 4335, 4402, 4444, 4667, 4686, 5362], "factors": [8, 64, 156, 160, 271, 272, 442, 443, 601, 602, 896, 1178, 1179, 5126, 5344, 5359], "equations": [8, 64, 180, 181, 186, 188, 709, 2018], "eigenvalue": [8, 64, 82, 105, 115, 116, 117, 125, 126, 128, 130, 131, 133, 134, 143, 145, 148, 165, 166, 172, 173, 1458, 1935, 4400, 5337, 5339, 5340], "classical": [8, 10, 11, 16, 25, 39, 48, 60, 62, 64, 97, 101, 147, 165, 172, 180, 186, 193, 203, 235, 248, 265, 267, 285, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 362, 364, 374, 406, 419, 436, 438, 456, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 523, 533, 565, 578, 595, 597, 615, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 682, 841, 926, 927, 934, 936, 939, 942, 946, 947, 954, 959, 960, 968, 973, 974, 983, 989, 990, 997, 1009, 1010, 1018, 1023, 1024, 1033, 1036, 1039, 1040, 1048, 1053, 1054, 1061, 1063, 1065, 1102, 1112, 1143, 1155, 1172, 1174, 1192, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1263, 1266, 1267, 1275, 1280, 1281, 1292, 1296, 1299, 1300, 1312, 1318, 1322, 1323, 1330, 1342, 1364, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1431, 1432, 1439, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1507, 1508, 1515, 1527, 1530, 1537, 1550, 1551, 1552, 1555, 1563, 1567, 1657, 1690, 1700, 1701, 1724, 1725, 1757, 1758, 1768, 1775, 1776, 1784, 1789, 1790, 1799, 1802, 1805, 1806, 1813, 1818, 1819, 1828, 1834, 1835, 1844, 1850, 1851, 1860, 1866, 1867, 1876, 1883, 1884, 1894, 1968, 1983, 1990, 2002, 2004, 2006, 2024, 2032, 2161, 2192, 2217, 2218, 2232, 2272, 2389, 2392, 2393, 2401, 2406, 2407, 2415, 2420, 2421, 2429, 2434, 2435, 2443, 2448, 2449, 2457, 2462, 2463, 2471, 2504, 2507, 2508, 2515, 2517, 2520, 2521, 2528, 2533, 2534, 2541, 2543, 2546, 2547, 2554, 2556, 2559, 2560, 2567, 2569, 2572, 2573, 2580, 2582, 2585, 2586, 2593, 2595, 2598, 2599, 2606, 2608, 2611, 2612, 2619, 2621, 2624, 2625, 2632, 2634, 2637, 2638, 2645, 2647, 2650, 2651, 2658, 2660, 2663, 2664, 2671, 2676, 2677, 2684, 2689, 2690, 2697, 2702, 2703, 2710, 2715, 2716, 2723, 2728, 2729, 2736, 2741, 2742, 2749, 2754, 2755, 2762, 2767, 2768, 2775, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 3730, 3757, 3876, 4069, 4071, 4075, 4241, 4299, 4354, 4361, 4463, 4722, 4751, 4773, 4787, 4803, 4946, 4952, 5169, 5181, 5239, 5244, 5276, 5281, 5332, 5333, 5334, 5345, 5347, 5348, 5366, 5370, 5372], "variational": [8, 11, 64, 165, 172, 682, 877, 904, 1376, 1379, 1456, 1503, 1987, 5362], "estimate": [8, 30, 64, 69, 73, 74, 78, 86, 92, 94, 103, 104, 110, 112, 113, 117, 118, 122, 123, 136, 137, 138, 139, 186, 761, 765, 798, 849, 851, 877, 879, 1458, 1988, 2024, 2323, 2349, 5345], "phases": [8, 64, 103, 104, 105, 107, 136, 137, 140, 142, 143, 145, 146, 1478, 1479, 4568, 4617, 4634, 4733, 4915], "eigenstates": [8, 64, 84, 130, 136, 165, 253, 276, 424, 447, 583, 606, 1160, 1183, 1526, 1772, 4386, 4651], "fundamental": [10, 35, 60], "element": [10, 11, 16, 39, 64, 97, 118, 133, 234, 239, 405, 410, 564, 569, 877, 1142, 1146, 1641, 1666, 2024, 2875, 3730, 3993, 4229, 4299, 4311, 4385, 4519, 4578, 4579, 4614, 4650, 4729, 4751, 4880, 4895, 4916, 4928, 5226, 5280, 5331, 5332, 5333, 5334, 5361], "computing": [10, 48, 63, 64, 83, 103, 127, 132, 135, 153, 164, 171, 178, 186, 1380, 1934, 2005, 2015, 2022, 2162, 2165, 2166, 4958, 4964, 5082, 5235, 5342], "computational": [10, 11, 28, 64, 104, 116, 117, 138, 234, 255, 256, 342, 405, 426, 427, 513, 564, 585, 586, 672, 1142, 1162, 1163, 1249, 1355, 1364, 1369, 1428, 2068, 2132, 2323, 2349, 4385, 4394, 4395, 4608, 4609, 4650, 4660, 4661, 5335], "routine": [10, 64, 773, 830, 849, 877, 1407, 1458, 4182, 4370, 4716], "consisting": [10, 44, 64, 1371, 1448, 1456, 1537, 2020, 2808, 4013, 4014, 4398, 4463, 4664, 5231], "coherent": [10, 64, 1556, 1558, 2846, 5366], "data": [10, 12, 16, 25, 31, 35, 39, 48, 60, 64, 89, 147, 165, 172, 186, 193, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 364, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 523, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 914, 1102, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1674, 1735, 1738, 1753, 1802, 1879, 1926, 2002, 2004, 2006, 2024, 2277, 2297, 2323, 2337, 2349, 2363, 2376, 2389, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2915, 2924, 2933, 3725, 3730, 3757, 3758, 3759, 3760, 3761, 3763, 3764, 3781, 3783, 3788, 3789, 3792, 3794, 3821, 3844, 3871, 3872, 3873, 3874, 3875, 3887, 3888, 3899, 3900, 3904, 3907, 3922, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3993, 3999, 4008, 4012, 4020, 4041, 4061, 4075, 4084, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4223, 4224, 4234, 4236, 4247, 4250, 4253, 4256, 4259, 4262, 4265, 4267, 4268, 4271, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4297, 4298, 4299, 4316, 4332, 4335, 4351, 4354, 4376, 4402, 4418, 4424, 4432, 4444, 4460, 4463, 4487, 4502, 4519, 4545, 4568, 4595, 4614, 4640, 4667, 4683, 4686, 4702, 4743, 4744, 4747, 4749, 4751, 4769, 4771, 4773, 4787, 4803, 4804, 4805, 4806, 4807, 4808, 4813, 4946, 4952, 4958, 5003, 5123, 5181, 5220, 5239, 5244, 5269, 5273, 5280, 5290, 5331, 5333, 5334, 5353, 5364, 5370], "ordered": [10, 16, 44, 97, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 1003, 1249, 1250, 1251, 1252, 1342, 1376, 1377, 1379, 1441, 1443, 1450, 1456, 1471, 1503, 1537, 1550, 1563, 1567, 1644, 1945, 3901, 3991, 4034, 4491, 4513, 4519, 4522, 4539, 4614, 4617, 4634, 4715, 4725, 4892, 4896, 4917, 5033, 5272, 5283], "sequence": [10, 35, 44, 48, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 240, 241, 245, 249, 250, 251, 252, 257, 258, 262, 263, 264, 265, 268, 273, 274, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 411, 412, 416, 420, 421, 422, 423, 428, 429, 433, 434, 435, 436, 439, 444, 445, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 570, 571, 575, 579, 580, 581, 582, 587, 588, 592, 593, 594, 595, 598, 603, 604, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 709, 798, 936, 1106, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1371, 1396, 1503, 1643, 2032, 2104, 2124, 2798, 2805, 2806, 2842, 3761, 3873, 3954, 4008, 4025, 4203, 4206, 4215, 4241, 4551, 4806, 4915, 5077, 5143, 5157, 5286, 5288, 5289], "resets": [10, 64, 1640], "conditioned": [10, 48, 64], "-time": [10, 35, 53, 63, 64, 2323, 2349, 2363, 2376, 4187, 5014], "computation": [10, 28, 48, 63, 64, 97, 136, 147, 165, 172, 187, 328, 499, 658, 806, 877, 904, 1235, 1388, 1389, 1458, 1898, 1934, 1983, 1990, 2166, 2204, 2248, 2261, 2349, 4075, 4389, 4390, 4604, 4605, 4655, 4656], "said": [10, 48, 64], "universal": [10, 44], "transformation": [10, 35, 64, 1399, 1400, 1450, 1472, 2798, 2842, 2886, 2887, 2890, 2891, 2892, 4219, 4228, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5355], "efficiently": [10, 64, 1372, 1380, 1926, 2024, 2025, 2032, 2055, 2063, 4220], "approximated": [10, 64, 709, 773, 798, 849, 877, 1400, 1465, 2886, 2887, 5241, 5246, 5247], "arbitrarily": [10, 64], "well": [10, 11, 16, 31, 44, 53, 64, 69, 97, 147, 156, 328, 499, 658, 1063, 1235, 1458, 1462, 1526, 1641, 1934, 2001, 2165, 2166, 2167, 2168, 2181, 2236, 3730, 3789, 4241, 4836, 4863, 4870, 4922, 4964, 5169, 5178, 5250, 5335], "program": [10, 11, 16, 35, 39, 42, 64, 242, 243, 413, 414, 572, 573, 918, 1036, 1149, 1150, 1641, 1645, 2870, 2872, 2876, 2883, 2884, 3730, 3756, 3876, 3878, 3880, 3881, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3899, 3909, 3920, 3922, 3923, 3924, 3925, 3926, 3963, 3993, 3999, 4003, 4008, 4012, 4016, 4031, 4032, 4041, 4084, 4086, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4206, 4220, 4221, 4223, 4224, 4228, 4255, 4297, 4298, 5043, 5123, 5331, 5333, 5334, 5348, 5357], "core": [10, 31, 53, 64, 137, 682, 2068, 2132], "below": [10, 12, 28, 31, 33, 35, 39, 48, 64, 74, 179, 761, 765, 769, 1444, 1537, 1928, 1936, 2867, 3888, 5014, 5226, 5331, 5332, 5333, 5334], "makes": [10, 16, 48, 64, 734, 912, 1503, 1644, 4568, 5093, 5178, 5232], "three": [10, 28, 30, 48, 57, 64, 97, 165, 328, 499, 658, 814, 1235, 1464, 1479, 2867, 3752, 4463, 5285, 5347, 5348, 5350], "-qubit": [10, 16, 28, 44, 48, 64, 136, 328, 342, 343, 344, 345, 499, 513, 514, 515, 516, 658, 672, 673, 674, 675, 1235, 1249, 1250, 1251, 1252, 1360, 1362, 1374, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1394, 1397, 1427, 1453, 1459, 1481, 1483, 1486, 1491, 1496, 1519, 1522, 1537, 1539, 1542, 1544, 1547, 1552, 1560, 1564, 1644, 1753, 1786, 1801, 1879, 1934, 1938, 1939, 1940, 1970, 2155, 2158, 2803, 2808, 2813, 2823, 2830, 2845, 2858, 2859, 2861, 2889, 4034, 4063, 4299, 4309, 4316, 4330, 4332, 4335, 4349, 4351, 4354, 4363, 4368, 4376, 4385, 4398, 4402, 4416, 4418, 4424, 4433, 4438, 4444, 4458, 4460, 4463, 4480, 4487, 4503, 4512, 4519, 4538, 4552, 4563, 4568, 4578, 4580, 4587, 4595, 4614, 4633, 4640, 4650, 4664, 4667, 4681, 4683, 4686, 4700, 4702, 4705, 4725, 4745, 4767, 4923, 4927, 4973, 4988, 4994, 4997, 5014, 5033, 5041, 5060, 5080, 5082, 5117, 5129, 5134, 5234, 5237, 5284, 5291, 5292, 5293, 5294, 5335, 5353, 5366, 5367], "ghz": [10, 16, 48, 64, 1102, 2854, 3963, 3973, 4255, 4261, 4273, 4279, 5286, 5347, 5348, 5359, 5365, 5366], "defined": [10, 12, 28, 31, 35, 39, 44, 51, 64, 162, 181, 186, 247, 288, 301, 308, 310, 311, 312, 313, 418, 459, 472, 479, 481, 482, 483, 484, 577, 618, 631, 638, 640, 641, 642, 643, 1102, 1154, 1195, 1208, 1215, 1217, 1218, 1219, 1220, 1318, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1466, 1468, 1472, 1475, 1477, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1552, 1555, 1556, 1558, 1560, 1564, 1644, 1678, 1765, 1898, 1906, 1923, 1926, 1930, 1932, 1934, 1944, 1945, 1949, 1951, 1953, 1959, 1968, 1970, 1974, 1976, 1979, 1981, 1984, 1987, 1990, 1993, 1995, 1998, 2002, 2004, 2006, 2010, 2014, 2018, 2021, 2024, 2025, 2028, 2032, 2039, 2055, 2063, 2064, 2068, 2069, 2075, 2084, 2089, 2097, 2102, 2112, 2117, 2132, 2138, 2153, 2155, 2160, 2161, 2162, 2164, 2172, 2173, 2174, 2175, 2177, 2181, 2182, 2195, 2198, 2208, 2211, 2220, 2224, 2232, 2236, 2238, 2241, 2252, 2255, 2277, 2285, 2290, 2779, 2786, 2788, 2789, 2790, 2791, 2798, 2814, 2847, 2875, 2885, 2890, 2963, 2968, 2980, 2985, 2997, 3002, 3005, 3010, 3013, 3018, 3030, 3035, 3047, 3052, 3064, 3069, 3081, 3086, 3097, 3102, 3114, 3119, 3130, 3135, 3147, 3152, 3163, 3168, 3180, 3185, 3197, 3202, 3214, 3219, 3231, 3236, 3248, 3253, 3265, 3270, 3282, 3287, 3298, 3303, 3315, 3320, 3332, 3337, 3348, 3353, 3365, 3370, 3382, 3387, 3390, 3395, 3407, 3412, 3441, 3446, 3458, 3463, 3474, 3479, 3505, 3510, 3521, 3526, 3538, 3543, 3563, 3568, 3580, 3585, 3597, 3602, 3630, 3635, 3647, 3652, 3663, 3668, 3680, 3685, 3696, 3701, 3888, 3901, 3984, 3985, 3987, 3989, 3990, 3991, 3992, 4000, 4001, 4008, 4013, 4014, 4026, 4032, 4148, 4172, 4182, 4206, 4229, 4232, 4241, 4301, 4318, 4329, 4337, 4348, 4356, 4404, 4415, 4426, 4444, 4446, 4457, 4467, 4519, 4554, 4571, 4614, 4669, 4680, 4688, 4699, 4715, 4722, 4739, 4748, 4770, 4796, 4875, 4880, 4894, 4897, 4899, 4915, 4918, 4920, 4922, 4927, 4929, 4938, 4966, 4973, 5014, 5102, 5211, 5226, 5230, 5235, 5236, 5237, 5239, 5241, 5244, 5247, 5278, 5287, 5331, 5332, 5333, 5334, 5359], "\\psi": [10, 30, 62, 103, 109, 136, 155, 2005, 2021, 4424, 4655, 4659, 4664, 4714, 4715, 4740, 5347, 5348, 5349, 5350, 5362, 5364, 5370], "\\rangle": [10, 44, 62, 64, 97, 103, 109, 136, 155, 193, 364, 523, 1342, 1355, 1364, 1373, 1378, 1381, 1387, 1388, 1392, 1398, 1399, 1406, 1458, 1465, 1466, 1468, 1470, 1472, 1475, 1480, 1530, 1551, 2556, 2569, 2885, 4335, 4385, 4424, 4444, 4650, 4655, 4664, 4686, 4714, 4715, 4747, 4769, 5332, 5342, 5347, 5348, 5349, 5350, 5362, 5364, 5368, 5370], "left": [10, 12, 48, 62, 64, 165, 172, 235, 347, 406, 518, 565, 677, 970, 1143, 1254, 1481, 1489, 1494, 1501, 1544, 1551, 1586, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2814, 2860, 4027, 4031, 4193, 4194, 4196, 4197, 4198, 4200, 4201, 4209, 4301, 4318, 4335, 4337, 4356, 4404, 4424, 4426, 4444, 4446, 4463, 4467, 4554, 4571, 4623, 4628, 4667, 4669, 4688, 4722, 4833, 4893, 4943, 5023, 5178, 5205, 5281, 5331, 5332, 5333, 5334, 5345, 5347, 5348, 5350, 5354, 5357, 5361, 5362, 5364, 5367, 5368, 5372], "(|": [10, 62, 2885, 4335, 4715, 4915, 5347, 5348], "rangle": [10, 30, 44, 62, 64, 86, 93, 111, 253, 276, 424, 447, 583, 606, 852, 1160, 1183, 1318, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1378, 1379, 1387, 1388, 1389, 1398, 1399, 1406, 1447, 1470, 1475, 1526, 1551, 1552, 1556, 1558, 1560, 1564, 1586, 1772, 1778, 2005, 2021, 2569, 2845, 2858, 2860, 2861, 4162, 4384, 4389, 4398, 4444, 4644, 4649, 4652, 4655, 4659, 4664, 4686, 4740, 4746, 4747, 4768, 4769, 5333, 5334, 5342, 5345, 5347, 5348, 5354, 5356, 5361, 5362, 5365, 5366, 5372], "+|": [10, 62, 4389, 5347, 5348], "\\right": [10, 62, 1450, 1481, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1544, 1547, 1556, 1558, 1586, 4196, 4200, 4421, 4667, 5347, 5348, 5350, 5362, 5364], ")/": [10, 62, 1544, 1547, 1947, 1960, 2041, 2140, 5341, 5345, 5347, 5348, 5350, 5361, 5372], "sqrt": [10, 62, 64, 97, 253, 276, 424, 447, 583, 606, 896, 1160, 1183, 1332, 1343, 1354, 1374, 1389, 1399, 1489, 1494, 1499, 1501, 1519, 1522, 1542, 2845, 2858, 2859, 2875, 2885, 4421, 4433, 4644, 4651, 4715, 4722, 4740, 5332, 5347, 5348, 5361, 5365, 5368], "create": [10, 20, 25, 31, 33, 35, 39, 44, 51, 53, 62, 64, 144, 198, 240, 252, 335, 336, 347, 369, 411, 423, 506, 507, 518, 528, 570, 582, 665, 666, 677, 914, 920, 923, 939, 943, 956, 970, 986, 1000, 1006, 1020, 1036, 1050, 1067, 1083, 1102, 1107, 1147, 1159, 1242, 1243, 1254, 1259, 1263, 1284, 1293, 1313, 1318, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1376, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1393, 1394, 1396, 1398, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1450, 1453, 1459, 1464, 1477, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1641, 1654, 1675, 1722, 1745, 1747, 1749, 1751, 1753, 1772, 1778, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1983, 1990, 2318, 2323, 2349, 2389, 2403, 2417, 2431, 2445, 2459, 2530, 2543, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2813, 2830, 2867, 3759, 3777, 3781, 3782, 3783, 3876, 3899, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3983, 3993, 4003, 4008, 4013, 4014, 4016, 4031, 4073, 4075, 4094, 4103, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4203, 4206, 4209, 4212, 4215, 4234, 4244, 4245, 4247, 4250, 4253, 4256, 4259, 4262, 4265, 4268, 4271, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4298, 4432, 4754, 4777, 4791, 4804, 4839, 4878, 4906, 4922, 4958, 5021, 5039, 5040, 5102, 5140, 5146, 5154, 5160, 5181, 5220, 5298, 5310, 5322, 5331, 5333, 5334, 5347, 5348, 5353, 5355, 5364, 5366, 5367, 5369, 5370], "register": [10, 35, 39, 48, 62, 64, 136, 140, 145, 195, 239, 248, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 366, 410, 419, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 525, 569, 578, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 919, 920, 921, 922, 923, 927, 939, 940, 941, 942, 943, 947, 956, 960, 974, 990, 1006, 1010, 1024, 1036, 1040, 1050, 1054, 1102, 1104, 1146, 1155, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1259, 1260, 1261, 1262, 1263, 1267, 1281, 1293, 1300, 1313, 1323, 1342, 1373, 1392, 1398, 1406, 1432, 1480, 1508, 1550, 1551, 1648, 1649, 1655, 1657, 1658, 1724, 1726, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2504, 2508, 2517, 2521, 2534, 2543, 2547, 2556, 2560, 2569, 2573, 2582, 2586, 2595, 2599, 2608, 2612, 2621, 2625, 2634, 2638, 2647, 2651, 2660, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 3757, 3932, 3957, 3963, 3976, 4020, 4041, 4042, 4075, 4241, 4264, 4282, 4361, 4751, 4803, 4881, 4946, 4952, 5016, 5169, 5181, 5332, 5347, 5348], "# h": 10, "putting": [10, 64, 5347, 5348], "superposition": [10, 64, 97, 5342, 5347, 5348], ">.": 10, "# a": [10, 64, 1102], "cnot": [10, 11, 44, 48, 62, 64, 209, 380, 539, 1118, 1333, 1371, 1374, 1401, 1722, 1934, 4299, 4311, 4708, 4839, 4964, 5033, 5111, 5123, 5235, 5237, 5244, 5246, 5247, 5347, 5348, 5367, 5369], "target": [10, 16, 31, 35, 44, 62, 64, 86, 97, 110, 113, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 241, 258, 259, 260, 261, 262, 263, 264, 283, 284, 337, 342, 343, 344, 345, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 412, 429, 430, 431, 432, 433, 434, 435, 454, 455, 508, 513, 514, 515, 516, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 571, 588, 589, 590, 591, 592, 593, 594, 613, 614, 667, 672, 673, 674, 675, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 798, 805, 813, 821, 829, 840, 841, 848, 850, 860, 868, 876, 878, 887, 895, 903, 911, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1148, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1190, 1191, 1244, 1249, 1250, 1251, 1252, 1343, 1345, 1352, 1355, 1357, 1364, 1369, 1388, 1398, 1406, 1407, 1410, 1412, 1470, 1537, 1644, 1710, 2285, 2287, 2376, 2867, 2887, 2963, 2965, 2980, 2982, 2997, 2999, 3005, 3007, 3013, 3015, 3030, 3032, 3047, 3049, 3064, 3066, 3081, 3083, 3097, 3099, 3114, 3116, 3130, 3132, 3147, 3149, 3163, 3165, 3180, 3182, 3197, 3199, 3214, 3216, 3231, 3233, 3248, 3250, 3265, 3267, 3282, 3284, 3298, 3300, 3315, 3317, 3332, 3334, 3348, 3350, 3365, 3367, 3382, 3384, 3390, 3392, 3407, 3409, 3441, 3443, 3458, 3460, 3474, 3476, 3505, 3507, 3521, 3523, 3538, 3540, 3563, 3565, 3580, 3582, 3597, 3599, 3630, 3632, 3647, 3649, 3663, 3665, 3680, 3682, 3696, 3698, 3781, 3920, 3965, 3983, 4008, 4032, 4034, 4035, 4228, 4706, 4707, 4708, 4709, 4711, 4714, 4720, 4726, 4839, 4877, 4901, 4915, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4973, 4975, 4982, 4985, 4988, 5018, 5071, 5093, 5096, 5117, 5146, 5147, 5150, 5151, 5152, 5156, 5157, 5158, 5162, 5178, 5202, 5204, 5205, 5208, 5211, 5214, 5217, 5226, 5230, 5236, 5237, 5241, 5246, 5247, 5250, 5277, 5286, 5290, 5332, 5347, 5348, 5355, 5362, 5367, 5369], "bell": [10, 30, 35, 39, 64, 1102, 1722, 4297, 4298, 4354, 4595, 4644, 5347, 5348, 5349, 5356, 5358, 5361, 5364, 5367], "draw": [10, 48, 56, 62, 64, 235, 406, 565, 970, 1002, 1143, 1388, 1410, 1537, 1673, 1732, 2865, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 4844, 4896, 4917, 5014, 5281, 5282, 5333, 5334, 5342, 5347, 5352, 5353, 5354, 5356, 5358, 5361], ".draw": [10, 11, 12, 33, 35, 48, 56, 62, 64, 198, 253, 276, 334, 369, 424, 447, 505, 528, 583, 606, 664, 970, 1067, 1102, 1107, 1160, 1183, 1241, 1376, 1379, 1448, 1465, 1468, 1503, 1640, 1650, 4025, 4026, 4182, 5163, 5283, 5337, 5341, 5342, 5345, 5347, 5348, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5372], "\u250c\u2500": [10, 33, 48, 62, 64, 198, 211, 253, 254, 276, 288, 289, 334, 369, 382, 424, 425, 447, 459, 460, 505, 528, 541, 583, 584, 606, 618, 619, 664, 923, 943, 970, 1006, 1036, 1067, 1102, 1107, 1120, 1160, 1161, 1183, 1195, 1196, 1241, 1263, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1360, 1362, 1364, 1367, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1392, 1394, 1407, 1410, 1441, 1448, 1450, 1456, 1459, 1468, 1471, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1503, 1517, 1519, 1524, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1650, 4958, 5021, 5093, 5140, 5163, 5337, 5348, 5350, 5352, 5353, 5354, 5355, 5361, 5362, 5366, 5367], "\u2500\u2500": [10, 12, 33, 48, 62, 64, 198, 211, 253, 254, 276, 288, 289, 334, 369, 382, 424, 425, 447, 459, 460, 505, 528, 541, 583, 584, 606, 618, 619, 664, 923, 943, 970, 1006, 1036, 1067, 1102, 1107, 1120, 1160, 1161, 1183, 1195, 1196, 1241, 1263, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1357, 1360, 1362, 1364, 1367, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1392, 1394, 1397, 1401, 1406, 1407, 1410, 1412, 1441, 1448, 1450, 1456, 1459, 1468, 1471, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1517, 1519, 1524, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1650, 1722, 4958, 5021, 5093, 5120, 5140, 5163, 5337, 5348, 5350, 5352, 5353, 5354, 5355, 5361, 5362, 5366, 5367], "\u2524 h": [10, 33, 62, 64, 254, 288, 289, 425, 459, 460, 584, 618, 619, 970, 1102, 1161, 1195, 1196, 1343, 1388, 1389, 1410, 1450, 1468, 1563, 1567, 1586, 1650, 1722, 5093, 5163, 5348, 5350, 5352, 5354, 5355, 5361, 5362, 5366, 5367], "\u25a0\u2500": [10, 12, 33, 62, 64, 211, 254, 288, 382, 425, 459, 541, 584, 618, 970, 1102, 1120, 1161, 1195, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1360, 1362, 1364, 1367, 1371, 1373, 1376, 1388, 1392, 1397, 1401, 1407, 1410, 1412, 1450, 1456, 1480, 1503, 1537, 1550, 1563, 1567, 1586, 1650, 1722, 5093, 5140, 5348, 5350, 5352, 5354, 5361, 5362, 5366], "\u2500\u25a0": [10, 33, 64, 198, 211, 254, 289, 334, 369, 382, 425, 460, 505, 528, 541, 584, 619, 664, 970, 1102, 1107, 1120, 1161, 1196, 1241, 1345, 1355, 1357, 1369, 1373, 1376, 1379, 1388, 1397, 1406, 1410, 1412, 1450, 1456, 1480, 1501, 1503, 1537, 1563, 1567, 5337, 5348, 5350, 5352, 5354, 5361, 5362], "\u2514\u2500": [10, 12, 33, 48, 62, 64, 198, 211, 253, 254, 288, 289, 334, 369, 382, 424, 425, 459, 460, 505, 528, 541, 583, 584, 618, 619, 664, 923, 1067, 1102, 1107, 1120, 1160, 1161, 1195, 1196, 1241, 1339, 1342, 1343, 1354, 1360, 1362, 1364, 1367, 1373, 1374, 1376, 1377, 1379, 1383, 1384, 1385, 1386, 1388, 1389, 1392, 1394, 1401, 1406, 1410, 1441, 1448, 1450, 1456, 1468, 1471, 1503, 1517, 1519, 1524, 1533, 1535, 1537, 1542, 1544, 1547, 1550, 1551, 1552, 1560, 1563, 1564, 1567, 1586, 1650, 1722, 4958, 5021, 5093, 5140, 5163, 5337, 5350, 5352, 5354, 5355, 5361, 5362, 5367], "\u2518\u250c": [10, 33, 62, 64, 198, 254, 288, 289, 369, 425, 459, 460, 528, 584, 618, 619, 1102, 1107, 1161, 1195, 1196, 1342, 1376, 1503, 1537, 1563, 1567, 1586, 1650, 1722, 5140, 5352, 5354, 5361, 5366], "\u2500\u2534": [10, 12, 33, 62, 64, 198, 211, 288, 289, 369, 382, 459, 460, 528, 541, 618, 619, 1102, 1107, 1120, 1195, 1196, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1360, 1362, 1364, 1367, 1376, 1379, 1388, 1401, 1406, 1407, 1410, 1450, 1503, 1537, 1550, 1567, 1586, 1650, 1722, 5140, 5350, 5352, 5361], "\u2500\u2510": [10, 12, 33, 48, 62, 64, 198, 211, 253, 254, 288, 289, 334, 369, 382, 424, 425, 459, 460, 505, 528, 541, 583, 584, 618, 619, 664, 923, 970, 1102, 1107, 1120, 1160, 1161, 1195, 1196, 1241, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1360, 1362, 1364, 1367, 1371, 1374, 1376, 1377, 1379, 1383, 1384, 1385, 1386, 1388, 1392, 1401, 1406, 1407, 1410, 1441, 1448, 1450, 1456, 1459, 1471, 1480, 1481, 1503, 1519, 1537, 1547, 1550, 1551, 1563, 1567, 1586, 1650, 1722, 4958, 5021, 5093, 5140, 5163, 5337, 5350, 5352, 5353, 5354, 5355, 5361, 5362, 5366, 5367], "\u2500\u2524": [10, 33, 48, 62, 64, 198, 211, 254, 288, 289, 334, 369, 382, 425, 459, 460, 505, 528, 541, 584, 618, 619, 664, 1102, 1107, 1120, 1161, 1195, 1196, 1241, 1342, 1371, 1373, 1376, 1379, 1388, 1406, 1410, 1441, 1450, 1456, 1468, 1503, 1537, 1550, 1563, 1567, 1586, 1650, 1722, 5093, 5140, 5337, 5348, 5350, 5352, 5354, 5361, 5362, 5366, 5367], "\u253c\u2500": [10, 33, 64, 1102, 1342, 1373, 1376, 1388, 1392, 1397, 1406, 1410, 1480, 1503, 1537, 1550, 1563, 5348, 5354], "\u2524 x": [10, 12, 33, 48, 64, 211, 288, 382, 459, 541, 618, 1102, 1120, 1195, 1339, 1342, 1364, 1371, 1376, 1388, 1401, 1410, 1450, 1503, 1537, 1550, 1552, 1567, 4958, 5021, 5093, 5140, 5163, 5348, 5350, 5352, 5354, 5355, 5361, 5366], "constructing": [10, 35, 64, 143, 1968, 2024, 2032, 2862, 2867, 5240], "there": [10, 11, 16, 28, 29, 31, 35, 39, 48, 51, 53, 64, 97, 103, 133, 136, 143, 165, 172, 211, 235, 240, 252, 267, 280, 281, 328, 342, 347, 382, 406, 411, 423, 438, 451, 452, 499, 513, 518, 541, 565, 570, 582, 597, 610, 611, 658, 672, 677, 936, 1046, 1063, 1120, 1143, 1147, 1159, 1174, 1187, 1188, 1235, 1249, 1254, 1387, 1388, 1393, 1641, 1654, 1667, 1722, 1786, 1937, 2161, 2162, 2232, 2277, 2285, 2290, 2323, 2337, 2349, 2363, 2376, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3722, 3727, 3730, 3757, 3760, 3761, 3763, 3764, 3814, 3862, 4032, 4182, 4229, 4298, 4626, 4708, 4760, 4767, 4803, 4805, 4806, 4807, 4808, 4858, 4915, 4922, 4923, 4966, 5016, 5051, 5085, 5091, 5123, 5137, 5178, 5202, 5214, 5217, 5226, 5235, 5257, 5281, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334], "help": [10, 35, 64, 841, 1342, 1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257], "quantify": 10, "size": [10, 11, 12, 16, 33, 35, 39, 44, 48, 62, 64, 130, 165, 180, 186, 235, 255, 256, 266, 315, 317, 318, 319, 320, 321, 326, 327, 406, 426, 427, 437, 486, 488, 489, 490, 491, 492, 497, 498, 565, 585, 586, 596, 645, 647, 648, 649, 650, 651, 656, 657, 709, 717, 761, 765, 769, 773, 798, 861, 896, 904, 920, 939, 975, 1025, 1143, 1162, 1163, 1173, 1222, 1224, 1225, 1226, 1227, 1228, 1233, 1234, 1259, 1282, 1302, 1396, 1457, 1465, 1477, 1550, 1640, 1641, 1645, 1646, 1709, 1740, 1760, 1791, 1820, 1836, 1852, 1868, 2323, 2349, 2363, 2376, 2445, 2459, 2792, 2794, 2795, 2796, 2797, 2813, 2817, 2823, 2862, 2885, 2914, 2923, 2932, 3730, 3783, 3790, 3794, 4025, 4026, 4182, 4196, 4201, 4255, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4470, 4480, 4487, 4497, 4512, 4519, 4523, 4528, 4538, 4563, 4568, 4587, 4614, 4618, 4623, 4633, 4681, 4700, 4733, 4734, 4736, 4745, 4751, 4767, 4859, 5077, 5099, 5143, 5188, 5189, 5226, 5274, 5280, 5281, 5282, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5341, 5354, 5355], "their": [10, 25, 28, 31, 35, 39, 48, 51, 53, 64, 75, 82, 88, 126, 131, 134, 140, 148, 150, 166, 168, 173, 175, 179, 180, 240, 287, 288, 342, 343, 344, 345, 411, 458, 459, 513, 514, 515, 516, 570, 617, 618, 672, 673, 674, 675, 682, 806, 929, 934, 949, 954, 962, 968, 983, 997, 1000, 1001, 1003, 1005, 1012, 1018, 1027, 1033, 1042, 1048, 1056, 1061, 1063, 1072, 1083, 1088, 1147, 1194, 1195, 1249, 1250, 1251, 1252, 1269, 1275, 1285, 1292, 1296, 1304, 1312, 1330, 1380, 1387, 1434, 1439, 1464, 1510, 1515, 1711, 1746, 1748, 1750, 1752, 1768, 1779, 1784, 1799, 1813, 1822, 1828, 1838, 1844, 1854, 1860, 1870, 1876, 1894, 1905, 1922, 1923, 1928, 1929, 1930, 1934, 1935, 1948, 1950, 1958, 1983, 1994, 2024, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 2323, 2349, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2705, 2710, 2718, 2723, 2731, 2736, 2744, 2749, 2757, 2762, 2770, 2775, 2801, 3833, 3876, 3963, 3966, 3999, 4008, 4012, 4219, 4241, 4392, 4607, 4658, 4819, 4821, 4851, 4894, 4922, 5089, 5117, 5169, 5202, 5252, 5335], "ability": [10, 31, 64], "device": [10, 31, 39, 48, 53, 64, 247, 418, 577, 877, 1154, 1678, 2285, 2323, 2349, 2363, 2376, 2801, 2808, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2956, 2958, 2973, 2975, 2990, 2992, 3023, 3025, 3040, 3042, 3057, 3059, 3074, 3076, 3092, 3107, 3109, 3125, 3140, 3142, 3158, 3173, 3175, 3190, 3192, 3207, 3209, 3224, 3226, 3241, 3243, 3258, 3260, 3275, 3277, 3293, 3308, 3310, 3325, 3327, 3343, 3358, 3360, 3375, 3377, 3400, 3402, 3436, 3451, 3453, 3469, 3498, 3500, 3516, 3531, 3533, 3556, 3558, 3573, 3575, 3590, 3592, 3608, 3616, 3623, 3625, 3640, 3642, 3658, 3673, 3675, 3691, 3718, 3773, 3779, 3781, 3787, 3789, 3796, 3932, 3963, 3976, 4042, 4255, 4273, 4745, 4767, 4857, 4922, 4973, 5014, 5117, 5199, 5202, 5205, 5214, 5217, 5226, 5234, 5237, 5289, 5339, 5349, 5355, 5359, 5364, 5365], "like": [10, 28, 30, 31, 35, 39, 44, 48, 51, 53, 60, 64, 66, 147, 165, 172, 322, 493, 652, 798, 1229, 1441, 1456, 1533, 1644, 1684, 1716, 1903, 1913, 1957, 1964, 1983, 1990, 1994, 2002, 2004, 2006, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2171, 2189, 2192, 2202, 2215, 2217, 2245, 2259, 2277, 2285, 2309, 2311, 2846, 2915, 2924, 2933, 3766, 3779, 3789, 3832, 3876, 3906, 4182, 4231, 4297, 4298, 4487, 4519, 4614, 4810, 4829, 4915, 4922, 5166], "straightforward": [10, 28, 39, 2060, 2166, 4815, 4973], "understand": [10, 64, 2024, 2032], "while": [10, 28, 31, 35, 39, 44, 48, 64, 82, 126, 131, 134, 148, 166, 173, 186, 201, 213, 347, 372, 384, 518, 531, 543, 677, 1110, 1121, 1254, 1263, 1379, 1392, 1441, 1464, 2024, 2032, 2068, 2132, 2276, 2285, 2317, 2814, 3005, 3013, 3382, 3730, 3896, 4031, 4193, 4197, 4229, 4238, 4301, 4318, 4337, 4356, 4404, 4426, 4432, 4446, 4463, 4467, 4554, 4571, 4614, 4669, 4688, 4922, 4973, 5117, 5175, 5262], "others": [10, 64, 1537], "tensor": [10, 64, 271, 272, 334, 442, 443, 505, 601, 602, 664, 1178, 1179, 1241, 1374, 1499, 1913, 1914, 1939, 1940, 1964, 2001, 2004, 2005, 2024, 2047, 2048, 2063, 2066, 2079, 2093, 2106, 2127, 2145, 2146, 2171, 2189, 2202, 2215, 2245, 2246, 2259, 2323, 2349, 2818, 2826, 2834, 2839, 4305, 4310, 4316, 4322, 4331, 4335, 4341, 4350, 4360, 4363, 4369, 4382, 4386, 4393, 4397, 4402, 4408, 4417, 4431, 4433, 4439, 4440, 4444, 4450, 4459, 4474, 4482, 4501, 4514, 4519, 4530, 4540, 4552, 4558, 4564, 4576, 4590, 4600, 4611, 4614, 4625, 4635, 4647, 4651, 4659, 4663, 4667, 4673, 4682, 4686, 4692, 4701, 4767, 5126, 5353, 5366, 5367], "bit": [10, 12, 31, 39, 64, 107, 136, 140, 142, 143, 197, 203, 235, 239, 265, 267, 287, 288, 368, 374, 406, 410, 436, 438, 458, 459, 527, 533, 565, 569, 595, 597, 617, 618, 919, 920, 921, 926, 934, 939, 940, 942, 946, 954, 959, 968, 973, 983, 989, 997, 1009, 1018, 1023, 1033, 1039, 1048, 1053, 1061, 1102, 1106, 1112, 1143, 1146, 1172, 1174, 1194, 1195, 1259, 1260, 1262, 1266, 1275, 1280, 1292, 1299, 1312, 1322, 1330, 1342, 1373, 1398, 1401, 1431, 1439, 1475, 1507, 1515, 1527, 1550, 1552, 1560, 1679, 1689, 1711, 1746, 1748, 1750, 1752, 1757, 1768, 1775, 1784, 1789, 1799, 1805, 1813, 1818, 1828, 1834, 1844, 1850, 1860, 1866, 1876, 1883, 1886, 1894, 1913, 1937, 1943, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 2392, 2401, 2406, 2415, 2420, 2429, 2434, 2443, 2448, 2457, 2462, 2471, 2507, 2515, 2520, 2528, 2533, 2541, 2546, 2554, 2559, 2567, 2572, 2580, 2585, 2593, 2598, 2606, 2611, 2619, 2624, 2632, 2637, 2645, 2650, 2658, 2663, 2671, 2676, 2684, 2689, 2697, 2702, 2710, 2715, 2723, 2728, 2736, 2741, 2749, 2754, 2762, 2767, 2775, 2813, 2830, 4182, 4241, 4747, 4751, 4760, 4769, 4773, 4787, 4811, 4812, 4813, 4880, 4881, 4892, 4948, 4951, 4954, 4957, 4973, 5169, 5281, 5333, 5334, 5350, 5354, 5366], "explanation": [10, 64], "here": [10, 28, 30, 33, 35, 39, 44, 48, 64, 82, 103, 126, 131, 134, 143, 147, 148, 165, 166, 172, 173, 186, 235, 255, 256, 271, 406, 426, 427, 442, 565, 585, 586, 601, 682, 877, 904, 1143, 1162, 1163, 1178, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1374, 1376, 1379, 1389, 1394, 1399, 1401, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1441, 1448, 1450, 1453, 1459, 1462, 1466, 1468, 1472, 1475, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1552, 1556, 1558, 1560, 1564, 1644, 1898, 1923, 1926, 1929, 1930, 1932, 1934, 1945, 1949, 1951, 1953, 1968, 1970, 1974, 1976, 1979, 1981, 1984, 1987, 1990, 1993, 1995, 1998, 2002, 2004, 2006, 2010, 2014, 2018, 2021, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2161, 2162, 2177, 2195, 2208, 2216, 2220, 2232, 2252, 2867, 3708, 3730, 4112, 4220, 4915, 5235, 5237, 5239, 5241, 5244, 5247, 5250, 5262, 5281, 5284, 5294, 5331, 5333, 5334, 5347, 5357, 5369], "we": [10, 11, 28, 31, 35, 39, 44, 48, 51, 64, 66, 82, 86, 97, 103, 126, 131, 134, 136, 148, 166, 173, 180, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 773, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 877, 881, 890, 898, 904, 906, 1076, 1092, 1249, 1250, 1251, 1252, 1318, 1374, 1376, 1377, 1379, 1388, 1399, 1421, 1444, 1447, 1456, 1466, 1468, 1470, 1475, 1499, 1503, 1537, 1556, 1558, 1879, 1935, 1937, 1939, 1952, 1953, 1970, 1983, 1985, 1987, 1990, 1994, 1996, 2001, 2003, 2005, 2007, 2008, 2009, 2011, 2012, 2015, 2016, 2019, 2022, 2024, 2032, 2068, 2132, 2165, 2166, 2167, 2168, 2218, 2323, 2349, 2869, 2875, 2883, 2884, 3757, 3993, 4008, 4030, 4031, 4041, 4182, 4389, 4519, 4655, 4803, 4819, 4825, 4915, 4958, 4961, 4973, 5004, 5014, 5016, 5017, 5021, 5033, 5037, 5077, 5143, 5178, 5190, 5193, 5217, 5220, 5235, 5253, 5277, 5342, 5345, 5347, 5348, 5361, 5362, 5369], "explain": 10, "preparation": [10, 35, 64, 66, 78, 86, 94, 104, 112, 116, 117, 122, 136, 138, 255, 256, 276, 426, 427, 447, 585, 586, 606, 1162, 1163, 1183, 1387, 1388, 1526, 1567, 5270, 5274, 5342, 5367], "understanding": [10, 904], "change": [10, 31, 39, 48, 51, 64, 693, 1101, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1644, 1922, 1934, 1937, 1970, 2218, 2277, 2283, 2292, 2297, 2813, 2883, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3897, 3999, 4012, 4264, 4316, 4389, 4525, 4614, 4655, 4831, 4900, 4915, 4921, 4922, 4941, 5003, 5268, 5272, 5295, 5319, 5331, 5333, 5334, 5354, 5355], "highlight": [10, 48, 1388, 4231, 4239, 4240], "conditions": [10, 39, 48, 64, 814, 1710, 1711, 4182, 5046], "under": [10, 47, 51, 64, 88, 109, 155, 186, 682, 2032, 4035, 4057, 4058, 4059, 4060, 4193, 4380, 4644, 4834, 5111, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "consider": [10, 64, 133, 1393, 1987, 2165, 2875, 2883, 4030, 4389, 4513, 4539, 4634, 4655, 4973, 5011, 5037, 5129, 5134, 5178, 5345], "qc": [10, 16, 25, 31, 35, 39, 48, 63, 64, 181, 186, 235, 240, 251, 252, 347, 357, 364, 406, 411, 422, 423, 518, 523, 565, 570, 581, 582, 677, 970, 1067, 1102, 1143, 1147, 1158, 1159, 1254, 1376, 1379, 1465, 1468, 1503, 1537, 2001, 3876, 4032, 4297, 4354, 4595, 4722, 5281, 5284, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5345, 5347, 5348, 5350, 5352, 5355, 5362, 5372], "idx": [10, 116, 3904, 5286, 5357], "range": [10, 16, 31, 44, 48, 60, 64, 143, 186, 203, 278, 357, 374, 449, 533, 608, 683, 1102, 1112, 1185, 1448, 1641, 3708, 3730, 3834, 3901, 3932, 3976, 3999, 4012, 4026, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4196, 4200, 4201, 4255, 4273, 4398, 4664, 4722, 5014, 5077, 5143, 5262, 5277, 5286, 5331, 5333, 5334, 5341, 5345, 5347, 5348, 5352, 5353, 5354, 5355, 5357, 5359, 5364, 5366, 5369, 5370, 5372], "):": [10, 25, 31, 35, 48, 51, 57, 64, 193, 357, 364, 523, 849, 877, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1654, 1673, 1722, 1732, 1934, 2323, 2337, 2349, 2363, 2376, 2867, 2885, 3748, 3752, 3834, 3899, 3906, 3908, 3966, 4021, 4023, 4024, 4025, 4026, 4033, 4034, 4038, 4039, 4043, 4044, 4046, 4048, 4056, 4167, 4182, 4206, 4254, 4272, 4287, 4316, 4335, 4376, 4381, 4402, 4424, 4444, 4595, 4640, 4667, 4686, 4840, 4841, 4860, 4884, 4900, 4921, 4922, 4923, 4938, 5033, 5077, 5143, 5226, 5239, 5244, 5275, 5282, 5286, 5332, 5338, 5339, 5341, 5342, 5345, 5349, 5352, 5353, 5354, 5355, 5357, 5359, 5364, 5366, 5369, 5370, 5372], "(idx": 10, ".x": [10, 48, 63, 64, 251, 252, 334, 422, 423, 505, 581, 582, 664, 1102, 1158, 1159, 1241, 1937, 4030, 4299, 4463, 4519, 5163, 5284, 5342, 5345, 5350, 5354, 5355, 5358, 5372], ".swap": [10, 48, 64, 5350, 5355], "\u251c\u2500": [10, 33, 48, 62, 64, 198, 211, 254, 289, 369, 382, 425, 460, 528, 541, 584, 619, 1067, 1102, 1107, 1120, 1161, 1196, 1376, 1379, 1388, 1406, 1441, 1450, 1456, 1468, 1503, 1537, 1550, 1563, 1567, 1650, 5093, 5337, 5348, 5350, 5352, 5353, 5354, 5361, 5362, 5366, 5367], "\u2500\u253c": [10, 64, 1102, 1373, 1379, 1388, 1397, 1410, 1480, 1503, 1537], "\u2500\u2500x": [10, 64, 5354], "\u2500\u2518": [10, 33, 48, 64, 198, 211, 253, 254, 276, 289, 334, 369, 382, 424, 425, 447, 460, 505, 528, 541, 583, 584, 606, 619, 664, 923, 943, 970, 1006, 1036, 1067, 1102, 1107, 1120, 1160, 1161, 1183, 1196, 1241, 1263, 1342, 1348, 1350, 1352, 1354, 1362, 1371, 1372, 1373, 1374, 1376, 1379, 1382, 1383, 1384, 1385, 1386, 1388, 1392, 1406, 1410, 1441, 1448, 1450, 1456, 1480, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1503, 1519, 1537, 1539, 1547, 1550, 1551, 1556, 1558, 1563, 1567, 1650, 4958, 5021, 5093, 5163, 5337, 5348, 5350, 5352, 5354, 5355, 5361, 5362, 5366, 5367], "\u2534\u2500": [10, 33, 64, 211, 254, 289, 334, 382, 425, 460, 505, 541, 584, 619, 664, 970, 1102, 1120, 1161, 1196, 1241, 1371, 1376, 1388, 1392, 1410, 1412, 1450, 1456, 1503, 1537, 1567, 5093, 5348, 5350, 5352, 5354, 5361, 5366], "\u2500\u2500\u2500": [10, 64], "\u2500x": [10, 64, 1355, 1530, 5350, 5354], "easy": [10, 28, 48, 60, 64, 1387], "hadamard": [10, 64, 66, 1343, 1388, 1389, 1396, 1450, 1471, 1472, 1563, 1567, 1722, 4370, 4716, 4728, 5356, 5358, 5369], "swap": [10, 28, 44, 48, 64, 329, 500, 659, 1236, 1355, 1401, 1458, 1472, 1530, 1532, 1586, 1937, 4229, 4893, 4964, 4970, 5014, 5016, 5017, 5117, 5178, 5190, 5202, 5214, 5217, 5332, 5333, 5334, 5355, 5370], "but": [10, 31, 35, 39, 48, 53, 57, 64, 92, 97, 110, 145, 147, 165, 172, 193, 201, 213, 216, 235, 240, 262, 264, 267, 285, 288, 364, 372, 384, 387, 406, 411, 433, 435, 438, 456, 459, 523, 531, 543, 546, 565, 570, 592, 594, 597, 615, 618, 682, 798, 849, 877, 904, 923, 943, 956, 1006, 1036, 1050, 1065, 1081, 1083, 1097, 1102, 1110, 1121, 1124, 1143, 1147, 1169, 1171, 1174, 1182, 1192, 1195, 1263, 1318, 1342, 1352, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1444, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1668, 1682, 1717, 1898, 1902, 1903, 1913, 1922, 1930, 1932, 1953, 1957, 1964, 1983, 1985, 1987, 1990, 1994, 1996, 2012, 2016, 2018, 2024, 2025, 2027, 2032, 2036, 2047, 2055, 2058, 2060, 2063, 2066, 2068, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2161, 2171, 2181, 2189, 2192, 2202, 2206, 2215, 2216, 2217, 2236, 2245, 2259, 2277, 2282, 2323, 2349, 2798, 2842, 2888, 2889, 3725, 3730, 3732, 3782, 3793, 3798, 3837, 3863, 3876, 3896, 3905, 3909, 3926, 3932, 3942, 3976, 3993, 4008, 4041, 4192, 4193, 4195, 4197, 4220, 4389, 4617, 4634, 4645, 4655, 4705, 4708, 4717, 4831, 4842, 4882, 4922, 4927, 4928, 4930, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5239, 5244, 5250, 5257, 5281, 5289], "programmatically": 10, "simultaneously": [10, 35, 48, 64, 147, 165, 172, 709, 798, 841, 861, 888, 896, 1382, 1383, 1384, 1385, 1386, 1427, 5033], "equal": [10, 44, 64, 97, 143, 211, 266, 382, 437, 541, 596, 918, 934, 954, 968, 970, 983, 997, 1018, 1033, 1048, 1061, 1065, 1120, 1173, 1275, 1292, 1312, 1330, 1398, 1439, 1441, 1450, 1515, 1551, 1563, 1567, 1644, 1667, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1900, 1905, 1935, 1943, 1955, 1958, 1970, 1973, 1985, 1996, 2026, 2034, 2038, 2058, 2071, 2074, 2086, 2088, 2099, 2101, 2114, 2116, 2134, 2137, 2161, 2168, 2179, 2197, 2210, 2222, 2223, 2232, 2234, 2237, 2254, 2323, 2349, 2363, 2376, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2813, 2822, 3722, 3723, 3738, 3739, 3757, 3789, 4008, 4075, 4187, 4308, 4329, 4348, 4367, 4415, 4437, 4457, 4479, 4511, 4537, 4586, 4606, 4613, 4632, 4680, 4699, 4722, 4803, 4813, 5244, 5369], "width": [10, 64, 110, 201, 211, 213, 235, 348, 372, 382, 384, 406, 519, 531, 541, 543, 565, 678, 923, 943, 956, 1006, 1036, 1050, 1110, 1120, 1121, 1143, 1255, 1263, 1382, 1397, 1457, 1555, 1667, 1691, 1717, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2862, 2867, 4172, 4192, 4193, 4194, 4195, 4197, 4198, 5117, 5151, 5224, 5225, 5280, 5281, 5287, 5289, 5331, 5332, 5333, 5334, 5355], ".width": [10, 64, 1691], "just": [10, 12, 25, 31, 35, 39, 48, 57, 64, 147, 165, 172, 201, 213, 253, 276, 372, 384, 424, 447, 531, 543, 583, 606, 849, 877, 986, 1102, 1110, 1121, 1160, 1183, 1909, 1912, 1963, 1987, 2001, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 2283, 2292, 2311, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3789, 3886, 3897, 4008, 4203, 4206, 4208, 4241, 4743, 4744, 4749, 4771, 4928, 4930, 4973, 4984, 5095, 5227, 5238, 5369], ".num": [10, 11, 31, 35, 39, 64, 186, 364, 523, 849, 877, 1450, 1465, 1468, 1567, 1717, 1898, 2285, 5339, 5341, 5357], "_qubits": [10, 11, 16, 30, 31, 35, 39, 44, 51, 64, 66, 69, 73, 75, 86, 100, 103, 120, 136, 138, 139, 140, 142, 181, 183, 184, 185, 186, 193, 214, 258, 262, 263, 264, 354, 355, 356, 357, 359, 360, 361, 364, 385, 429, 433, 434, 435, 523, 544, 588, 592, 593, 594, 923, 943, 956, 970, 975, 986, 1006, 1020, 1025, 1036, 1050, 1102, 1122, 1165, 1169, 1170, 1171, 1263, 1277, 1282, 1296, 1302, 1318, 1319, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1427, 1428, 1441, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1517, 1519, 1520, 1522, 1524, 1526, 1530, 1531, 1533, 1535, 1537, 1538, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1640, 1641, 1649, 1717, 1753, 1760, 1772, 1786, 1791, 1802, 1815, 1820, 1831, 1836, 1847, 1852, 1863, 1868, 1879, 1886, 1898, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2285, 2323, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2801, 2805, 2813, 2823, 2830, 2847, 2889, 2909, 2918, 2927, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3705, 3708, 3718, 3730, 3737, 3757, 3763, 3764, 3834, 3932, 3963, 3976, 4030, 4273, 4299, 4309, 4316, 4330, 4335, 4349, 4354, 4368, 4376, 4386, 4402, 4416, 4424, 4433, 4438, 4444, 4458, 4463, 4480, 4487, 4512, 4519, 4538, 4552, 4563, 4568, 4579, 4587, 4595, 4614, 4633, 4640, 4651, 4667, 4681, 4686, 4700, 4725, 4728, 4729, 4732, 4733, 4734, 4736, 4803, 4807, 4808, 4839, 4845, 4850, 4851, 4881, 4922, 5033, 5077, 5092, 5143, 5193, 5202, 5226, 5237, 5239, 5244, 5246, 5247, 5263, 5277, 5287, 5289, 5337, 5339, 5341, 5342, 5344, 5352, 5355, 5357, 5359, 5364, 5366, 5370], "composed": [10, 39, 64, 211, 334, 382, 505, 541, 664, 1120, 1241, 1401, 1462, 1667, 1934, 1939, 1970, 1976, 2025, 2031, 2044, 2049, 2051, 2052, 2060, 2061, 2062, 2181, 2236, 2814, 2819, 2822, 3834, 4041, 4301, 4308, 4318, 4337, 4356, 4367, 4404, 4426, 4446, 4467, 4479, 4494, 4498, 4511, 4537, 4554, 4571, 4586, 4632, 4669, 4688, 4973, 5017, 5355], "definition": [10, 28, 31, 39, 64, 109, 155, 193, 195, 364, 366, 523, 525, 923, 929, 932, 943, 949, 952, 956, 962, 965, 970, 981, 984, 986, 995, 1006, 1012, 1015, 1020, 1027, 1031, 1034, 1036, 1042, 1045, 1050, 1056, 1059, 1067, 1102, 1104, 1263, 1269, 1272, 1277, 1285, 1289, 1294, 1296, 1304, 1308, 1314, 1318, 1319, 1328, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1434, 1437, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1510, 1513, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1644, 1654, 1655, 1722, 1753, 1766, 1769, 1772, 1779, 1782, 1786, 1797, 1800, 1802, 1811, 1815, 1822, 1826, 1829, 1831, 1838, 1842, 1845, 1847, 1854, 1858, 1861, 1863, 1870, 1874, 1877, 1879, 1891, 1892, 1895, 2161, 2167, 2218, 2232, 2389, 2399, 2403, 2413, 2417, 2427, 2431, 2441, 2445, 2455, 2459, 2469, 2504, 2513, 2517, 2526, 2530, 2539, 2543, 2552, 2556, 2565, 2569, 2578, 2582, 2591, 2595, 2604, 2608, 2617, 2621, 2630, 2634, 2643, 2647, 2656, 2660, 2669, 2673, 2682, 2686, 2695, 2699, 2705, 2708, 2712, 2718, 2721, 2725, 2731, 2734, 2738, 2744, 2747, 2751, 2757, 2760, 2764, 2770, 2773, 3957, 3973, 4182, 4814, 5230, 5236, 5239, 5241, 5244, 5246], "complicated": [10, 64, 1898], "registers": [10, 35, 48, 64, 193, 196, 210, 216, 235, 238, 239, 285, 288, 364, 367, 381, 387, 406, 409, 410, 456, 459, 523, 526, 540, 546, 565, 568, 569, 615, 618, 1063, 1102, 1105, 1119, 1124, 1143, 1145, 1146, 1192, 1195, 1293, 1313, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1668, 1700, 1701, 1772, 3760, 3761, 4041, 4042, 4071, 4241, 4805, 4806, 4885, 4886, 4887, 4889, 5169, 5181, 5239, 5244, 5281, 5332, 5354], "classically": [10, 11, 64, 363, 1291, 1310, 1372, 1387, 1398, 1463, 1467, 1469, 1472], "controlled": [10, 11, 48, 64, 214, 342, 343, 344, 345, 364, 385, 513, 514, 515, 516, 523, 544, 672, 673, 674, 675, 725, 970, 975, 1025, 1122, 1249, 1250, 1251, 1252, 1282, 1302, 1318, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1379, 1381, 1388, 1390, 1399, 1406, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1458, 1460, 1466, 1468, 1470, 1472, 1478, 1480, 1487, 1492, 1497, 1499, 1501, 1520, 1531, 1540, 1545, 1548, 1551, 1553, 1561, 1565, 1760, 1791, 1815, 1820, 1831, 1836, 1847, 1852, 1863, 1868, 1886, 4103, 4895, 4916, 4922, 5331, 5333, 5334, 5345], "equivalence": [10, 31, 64, 1000, 1001, 1002, 1005, 1648, 1649, 4499, 4973, 5208, 5356], "breaks": [10, 5331], "down": [10, 28, 62, 64, 1923, 1932, 4050, 5117, 5369], "now": [10, 12, 16, 39, 44, 64, 912, 1063, 1065, 1691, 2216, 2285, 2875, 2885, 4041, 4182, 5178, 5342, 5345, 5350], "not": [10, 12, 16, 20, 24, 25, 28, 31, 33, 35, 39, 44, 48, 51, 53, 54, 62, 64, 66, 70, 73, 82, 86, 92, 97, 98, 99, 103, 104, 105, 110, 115, 118, 119, 126, 130, 131, 133, 134, 136, 140, 143, 144, 147, 148, 151, 158, 163, 165, 166, 169, 172, 173, 176, 180, 185, 187, 193, 197, 198, 200, 201, 210, 211, 213, 233, 234, 235, 238, 239, 240, 247, 251, 252, 255, 256, 262, 264, 267, 276, 277, 280, 281, 289, 303, 304, 319, 320, 328, 342, 343, 344, 345, 347, 361, 364, 368, 369, 371, 372, 381, 382, 384, 404, 405, 406, 409, 410, 411, 418, 422, 423, 426, 427, 433, 435, 438, 447, 448, 451, 452, 460, 474, 475, 490, 491, 499, 513, 514, 515, 516, 518, 523, 527, 528, 530, 531, 540, 541, 543, 563, 564, 565, 568, 569, 570, 577, 581, 582, 585, 586, 592, 594, 597, 606, 607, 610, 611, 619, 633, 634, 649, 650, 658, 672, 673, 674, 675, 677, 682, 683, 687, 689, 693, 696, 701, 704, 712, 717, 720, 725, 729, 734, 738, 743, 747, 752, 756, 766, 769, 773, 776, 781, 784, 789, 793, 798, 801, 806, 809, 817, 825, 832, 833, 836, 841, 844, 849, 855, 856, 864, 869, 872, 877, 882, 883, 891, 896, 899, 904, 907, 917, 918, 919, 920, 923, 926, 927, 929, 933, 934, 936, 939, 942, 943, 946, 947, 949, 953, 954, 956, 959, 960, 962, 967, 968, 970, 973, 974, 979, 982, 983, 984, 989, 990, 996, 997, 1000, 1002, 1003, 1006, 1009, 1010, 1012, 1017, 1018, 1023, 1024, 1027, 1029, 1032, 1033, 1034, 1036, 1039, 1040, 1042, 1047, 1048, 1050, 1053, 1054, 1056, 1060, 1061, 1063, 1065, 1067, 1071, 1072, 1081, 1083, 1087, 1088, 1097, 1101, 1102, 1106, 1107, 1109, 1110, 1119, 1120, 1121, 1141, 1142, 1143, 1145, 1146, 1147, 1154, 1158, 1159, 1162, 1163, 1169, 1171, 1174, 1182, 1183, 1184, 1187, 1188, 1196, 1210, 1211, 1226, 1227, 1235, 1249, 1250, 1251, 1252, 1254, 1259, 1262, 1263, 1266, 1267, 1269, 1274, 1275, 1280, 1281, 1284, 1285, 1287, 1290, 1292, 1294, 1296, 1299, 1300, 1304, 1306, 1309, 1312, 1314, 1318, 1322, 1323, 1329, 1330, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1403, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1431, 1432, 1434, 1438, 1439, 1441, 1442, 1443, 1444, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1503, 1507, 1508, 1510, 1514, 1515, 1526, 1527, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1648, 1649, 1666, 1667, 1671, 1673, 1675, 1678, 1682, 1700, 1701, 1714, 1715, 1722, 1732, 1753, 1757, 1758, 1764, 1765, 1767, 1768, 1769, 1772, 1775, 1776, 1779, 1783, 1784, 1789, 1790, 1795, 1798, 1799, 1800, 1805, 1806, 1812, 1813, 1818, 1819, 1822, 1824, 1827, 1828, 1829, 1834, 1835, 1838, 1840, 1843, 1844, 1845, 1850, 1851, 1854, 1856, 1859, 1860, 1861, 1866, 1867, 1870, 1872, 1875, 1876, 1877, 1879, 1883, 1884, 1890, 1893, 1894, 1895, 1898, 1910, 1922, 1925, 1926, 1929, 1930, 1935, 1940, 1943, 1948, 1952, 1961, 1982, 1987, 1988, 1994, 2003, 2005, 2007, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2019, 2022, 2024, 2028, 2031, 2032, 2039, 2043, 2056, 2058, 2060, 2064, 2067, 2068, 2091, 2104, 2112, 2121, 2124, 2132, 2142, 2156, 2159, 2161, 2162, 2164, 2172, 2173, 2174, 2175, 2181, 2218, 2220, 2232, 2236, 2241, 2272, 2275, 2277, 2280, 2282, 2283, 2290, 2291, 2292, 2293, 2308, 2311, 2313, 2323, 2328, 2331, 2333, 2337, 2340, 2343, 2349, 2354, 2357, 2359, 2363, 2368, 2370, 2372, 2376, 2381, 2383, 2385, 2392, 2393, 2400, 2401, 2406, 2407, 2414, 2415, 2420, 2421, 2428, 2429, 2434, 2435, 2442, 2443, 2448, 2449, 2456, 2457, 2462, 2463, 2470, 2471, 2485, 2486, 2494, 2500, 2501, 2502, 2507, 2508, 2514, 2515, 2520, 2521, 2527, 2528, 2533, 2534, 2540, 2541, 2546, 2547, 2553, 2554, 2556, 2559, 2560, 2566, 2567, 2569, 2572, 2573, 2579, 2580, 2585, 2586, 2592, 2593, 2598, 2599, 2605, 2606, 2611, 2612, 2618, 2619, 2624, 2625, 2631, 2632, 2637, 2638, 2644, 2645, 2650, 2651, 2657, 2658, 2663, 2664, 2670, 2671, 2676, 2677, 2683, 2684, 2689, 2690, 2696, 2697, 2699, 2702, 2703, 2705, 2709, 2710, 2715, 2716, 2718, 2722, 2723, 2728, 2729, 2731, 2735, 2736, 2738, 2741, 2742, 2744, 2748, 2749, 2751, 2754, 2755, 2757, 2761, 2762, 2764, 2767, 2768, 2770, 2774, 2775, 2781, 2782, 2796, 2797, 2798, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2813, 2822, 2823, 2831, 2833, 2834, 2836, 2839, 2842, 2844, 2850, 2851, 2852, 2853, 2862, 2885, 2886, 2887, 2889, 2905, 2909, 2912, 2916, 2918, 2921, 2925, 2927, 2930, 2934, 2943, 2952, 2961, 2968, 2969, 2970, 2978, 2985, 2986, 2987, 2995, 3002, 3003, 3004, 3010, 3011, 3012, 3018, 3019, 3020, 3028, 3035, 3036, 3037, 3045, 3052, 3053, 3054, 3062, 3069, 3070, 3071, 3079, 3086, 3087, 3088, 3095, 3102, 3103, 3104, 3112, 3119, 3120, 3121, 3128, 3135, 3136, 3137, 3145, 3152, 3153, 3154, 3161, 3168, 3169, 3170, 3178, 3185, 3186, 3187, 3195, 3202, 3203, 3204, 3212, 3219, 3220, 3221, 3229, 3236, 3237, 3238, 3246, 3253, 3254, 3255, 3263, 3270, 3271, 3272, 3280, 3287, 3288, 3289, 3296, 3303, 3304, 3305, 3313, 3320, 3321, 3322, 3330, 3337, 3338, 3339, 3346, 3353, 3354, 3355, 3363, 3370, 3371, 3372, 3380, 3387, 3388, 3389, 3395, 3396, 3397, 3405, 3412, 3413, 3414, 3422, 3431, 3439, 3446, 3447, 3448, 3456, 3463, 3464, 3465, 3472, 3479, 3480, 3481, 3494, 3503, 3510, 3511, 3512, 3519, 3526, 3527, 3528, 3536, 3543, 3544, 3545, 3552, 3561, 3568, 3569, 3570, 3578, 3585, 3586, 3587, 3595, 3602, 3603, 3604, 3611, 3619, 3628, 3635, 3636, 3637, 3645, 3652, 3653, 3654, 3661, 3668, 3669, 3670, 3678, 3685, 3686, 3687, 3694, 3701, 3702, 3703, 3704, 3708, 3709, 3715, 3718, 3721, 3723, 3725, 3730, 3731, 3732, 3738, 3739, 3748, 3750, 3752, 3757, 3763, 3764, 3771, 3778, 3779, 3781, 3782, 3788, 3789, 3790, 3792, 3793, 3794, 3796, 3798, 3809, 3810, 3811, 3812, 3816, 3818, 3819, 3821, 3822, 3823, 3824, 3828, 3833, 3838, 3844, 3845, 3848, 3849, 3852, 3855, 3860, 3865, 3868, 3871, 3872, 3873, 3874, 3875, 3883, 3885, 3886, 3888, 3890, 3891, 3894, 3896, 3897, 3905, 3909, 3919, 3920, 3922, 3923, 3926, 3930, 3932, 3942, 3945, 3957, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3976, 3984, 3985, 3991, 3993, 3999, 4003, 4008, 4012, 4013, 4014, 4016, 4020, 4022, 4031, 4032, 4041, 4063, 4075, 4084, 4086, 4103, 4148, 4159, 4161, 4164, 4166, 4169, 4171, 4172, 4174, 4176, 4181, 4182, 4184, 4186, 4195, 4204, 4207, 4208, 4210, 4213, 4216, 4221, 4224, 4225, 4229, 4241, 4254, 4272, 4287, 4298, 4299, 4308, 4309, 4316, 4329, 4330, 4332, 4335, 4348, 4349, 4351, 4354, 4367, 4368, 4376, 4381, 4382, 4385, 4394, 4395, 4397, 4400, 4402, 4415, 4416, 4418, 4421, 4424, 4437, 4438, 4444, 4457, 4458, 4460, 4479, 4480, 4487, 4494, 4498, 4501, 4511, 4512, 4514, 4519, 4523, 4525, 4526, 4537, 4538, 4543, 4563, 4568, 4578, 4579, 4586, 4587, 4589, 4599, 4600, 4601, 4606, 4608, 4611, 4613, 4614, 4617, 4618, 4621, 4632, 4633, 4634, 4638, 4640, 4645, 4646, 4647, 4650, 4652, 4660, 4661, 4663, 4680, 4681, 4683, 4686, 4699, 4700, 4702, 4705, 4708, 4712, 4714, 4715, 4717, 4718, 4719, 4720, 4723, 4726, 4730, 4745, 4747, 4751, 4761, 4763, 4767, 4769, 4771, 4773, 4782, 4784, 4787, 4797, 4799, 4803, 4807, 4808, 4810, 4811, 4812, 4813, 4817, 4821, 4827, 4829, 4831, 4836, 4838, 4843, 4844, 4847, 4848, 4849, 4863, 4865, 4870, 4872, 4880, 4882, 4886, 4893, 4894, 4895, 4896, 4898, 4899, 4902, 4910, 4912, 4915, 4916, 4917, 4919, 4920, 4922, 4923, 4924, 4928, 4930, 4934, 4935, 4938, 4939, 4941, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4964, 4966, 4967, 4970, 4972, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5013, 5014, 5016, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5037, 5062, 5065, 5068, 5071, 5074, 5077, 5079, 5080, 5083, 5085, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5132, 5134, 5137, 5140, 5142, 5143, 5145, 5146, 5151, 5152, 5154, 5157, 5158, 5160, 5163, 5166, 5169, 5172, 5175, 5178, 5180, 5181, 5184, 5187, 5190, 5192, 5193, 5195, 5196, 5198, 5199, 5202, 5204, 5205, 5207, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5237, 5239, 5244, 5250, 5252, 5253, 5254, 5262, 5263, 5268, 5271, 5272, 5274, 5275, 5277, 5278, 5280, 5281, 5282, 5283, 5284, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5302, 5304, 5307, 5314, 5316, 5319, 5326, 5328, 5331, 5332, 5333, 5334, 5335, 5339, 5341, 5343, 5347, 5352, 5355, 5356, 5359, 5364, 5369], "refer": [10, 16, 25, 28, 31, 39, 51, 64, 701, 709, 717, 725, 734, 743, 752, 781, 789, 798, 806, 814, 833, 841, 861, 869, 877, 888, 896, 912, 1450, 1567, 1641, 1644, 3838, 3864, 3869, 3871, 3872, 3873, 3874, 3875, 5202, 5226, 5227, 5230, 5238, 5250], ".count": [10, 48, 64, 1450, 1567, 5341], "_ops": [10, 48, 64, 90, 357, 1450, 1567, 1689, 2813, 2855, 2856, 2857, 5027, 5030, 5355], "ordereddict": [10, 48, 64, 217, 388, 547, 1125, 1450, 1567, 2863, 5283, 5341, 5355], "',": [10, 31, 39, 48, 51, 64, 198, 235, 369, 406, 528, 565, 1107, 1143, 1318, 1376, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1450, 1457, 1458, 1472, 1477, 1503, 1537, 1555, 1567, 1641, 1911, 1962, 2001, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 2323, 2349, 2801, 2909, 2915, 2918, 2924, 2927, 3932, 3976, 4055, 4229, 4233, 4239, 4240, 4241, 4297, 4298, 4354, 4463, 4487, 4503, 4513, 4518, 4525, 4529, 4530, 4539, 4540, 4544, 4580, 4595, 4620, 4624, 4625, 4634, 4635, 4639, 4751, 4915, 5226, 5275, 5281, 5290, 5291, 5293, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5349, 5352, 5353, 5354, 5356, 5358, 5359, 5362, 5364, 5366, 5367, 5369], "),": [10, 11, 16, 28, 30, 31, 35, 39, 44, 48, 64, 92, 97, 180, 181, 201, 213, 233, 235, 240, 252, 253, 276, 321, 357, 372, 384, 404, 406, 411, 423, 424, 447, 492, 531, 543, 563, 565, 570, 582, 583, 606, 651, 822, 877, 904, 912, 929, 949, 962, 1012, 1027, 1042, 1056, 1102, 1110, 1121, 1141, 1143, 1147, 1159, 1160, 1183, 1228, 1269, 1285, 1304, 1362, 1374, 1382, 1387, 1388, 1396, 1434, 1465, 1499, 1510, 1537, 1556, 1558, 1567, 1644, 1648, 1649, 1753, 1779, 1822, 1838, 1854, 1870, 1900, 1901, 1903, 1905, 1906, 1934, 1937, 1955, 1956, 1957, 1958, 1959, 1983, 1990, 2026, 2027, 2028, 2034, 2035, 2036, 2038, 2039, 2064, 2071, 2072, 2073, 2074, 2075, 2086, 2087, 2088, 2089, 2099, 2100, 2101, 2102, 2114, 2115, 2116, 2117, 2134, 2135, 2136, 2137, 2138, 2154, 2165, 2166, 2167, 2179, 2180, 2182, 2195, 2197, 2198, 2210, 2211, 2222, 2223, 2224, 2234, 2235, 2237, 2238, 2254, 2255, 2337, 2705, 2718, 2731, 2744, 2757, 2770, 2808, 2813, 2830, 2845, 2858, 2867, 2875, 2889, 2914, 2923, 3725, 3901, 3966, 4000, 4001, 4006, 4013, 4014, 4027, 4028, 4029, 4030, 4031, 4039, 4041, 4046, 4047, 4048, 4075, 4162, 4192, 4193, 4196, 4201, 4219, 4229, 4241, 4398, 4421, 4503, 4577, 4579, 4580, 4644, 4664, 4708, 4709, 4712, 4722, 4739, 4751, 4811, 4812, 4813, 4873, 4922, 4923, 4964, 4973, 5014, 5077, 5123, 5143, 5178, 5275, 5277, 5281, 5285, 5286, 5338, 5340, 5341, 5342, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5366, 5367, 5368, 5370], ")]": [10, 30, 31, 48, 64, 118, 253, 276, 424, 447, 583, 606, 1160, 1183, 1450, 1537, 1567, 1644, 2119, 2813, 2830, 2845, 2858, 2859, 2875, 2885, 2887, 3966, 4000, 4001, 4013, 4014, 4034, 4229, 4433, 4577, 4579, 4580, 4644, 4719, 4747, 4751, 4769, 5014, 5077, 5143, 5178, 5338, 5342, 5345, 5348, 5349, 5352, 5354, 5355, 5357, 5358, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "raw": [10, 35, 64, 145, 188, 190, 235, 363, 406, 565, 1081, 1097, 1143, 1926, 3757, 3871, 3904, 4075, 4380, 4644, 4803, 4896, 4917, 5281, 5283, 5295, 5359], "count": [10, 48, 62, 64, 82, 126, 131, 134, 147, 148, 165, 166, 172, 173, 217, 388, 547, 920, 939, 1125, 1259, 1644, 1669, 1670, 3993, 4008, 4712, 4747, 4749, 4757, 4760, 4769, 4771, 4900, 4921, 5027, 5030, 5267, 5338, 5339, 5341, 5345, 5355, 5372], ".size": [10, 64], "particularly": [10, 165, 172, 1923, 2024, 2032, 5117, 5137], "important": [10, 28, 33, 48, 57, 64, 143, 5178], "property": [10, 31, 48, 51, 64, 76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 773, 831, 1471, 1644, 1793, 2276, 2309, 2798, 2842, 3932, 3935, 3942, 3945, 3957, 3963, 3976, 3999, 4012, 4463, 4519, 4614, 4831, 4867, 4900, 4921, 4939, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4963, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5003, 5006, 5008, 5010, 5011, 5014, 5016, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5073, 5074, 5077, 5080, 5083, 5085, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5119, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5228, 5239, 5331, 5333, 5334], "known": [10, 97, 100, 180, 262, 264, 328, 433, 435, 499, 592, 594, 658, 717, 806, 1003, 1004, 1169, 1171, 1235, 1339, 1355, 1558, 1922, 1930, 2025, 2032, 2055, 2063, 3748, 3845, 3983, 4568, 4705, 5196, 5220], "layers": [10, 44, 64, 235, 406, 565, 904, 1143, 1376, 1377, 1379, 1441, 1444, 1450, 1456, 1471, 1477, 1503, 1537, 1563, 1567, 1640, 1682, 1685, 1708, 4964, 5014, 5039, 5048, 5050, 5237, 5281], "parallel": [10, 29, 35, 47, 48, 56, 64, 147, 165, 172, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1644, 2323, 2349, 2363, 2376, 4813, 4830, 4958, 5033], "takes": [10, 25, 35, 51, 64, 66, 118, 136, 165, 172, 1063, 1293, 1935, 1939, 1985, 2008, 3718, 3876, 3887, 3888, 3901, 3905, 3922, 3999, 4012, 4026, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4206, 4796, 4811, 4812, 4964, 5023, 5024, 5143, 5331, 5332, 5333, 5334, 5359], "complete": [10, 31, 64, 1063, 1478, 3830, 4802, 5217, 5226, 5338], "take": [10, 44, 48, 64, 180, 201, 213, 233, 235, 242, 243, 254, 321, 322, 323, 324, 325, 326, 327, 372, 384, 404, 406, 413, 414, 425, 492, 493, 494, 495, 496, 497, 498, 531, 543, 563, 565, 572, 573, 584, 651, 652, 653, 654, 655, 656, 657, 877, 1076, 1092, 1110, 1121, 1141, 1143, 1149, 1150, 1161, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1644, 1675, 1714, 1715, 1719, 1778, 1898, 1930, 1939, 1984, 1987, 2002, 2004, 2009, 2012, 2016, 2068, 2170, 2201, 2214, 2226, 2244, 2258, 4000, 4001, 4013, 4014, 4030, 4032, 4148, 4900, 4921, 4930, 4958, 5017, 5230, 5281, 5335, 5359], "implement": [10, 11, 31, 35, 39, 48, 51, 53, 64, 81, 125, 360, 920, 929, 939, 942, 949, 962, 984, 1003, 1012, 1027, 1034, 1042, 1056, 1259, 1262, 1269, 1285, 1294, 1304, 1314, 1318, 1419, 1421, 1424, 1434, 1447, 1472, 1510, 1769, 1779, 1800, 1822, 1829, 1838, 1845, 1854, 1861, 1870, 1877, 1895, 1970, 2058, 2277, 2705, 2718, 2731, 2744, 2757, 2770, 2909, 2918, 2927, 3005, 3013, 3777, 3791, 3891, 3901, 3906, 4246, 4394, 4395, 4608, 4660, 4661, 4817, 4821, 4946, 4952, 5042, 5181, 5190], "roughly": [10, 64], "corresponds": [10, 64, 140, 145, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1722, 1891, 1987, 2001, 2022, 2162, 2166, 2167, 3979, 4400, 4463, 4857, 5014, 5239, 5244], "amount": [10, 11, 31, 64, 217, 388, 547, 798, 932, 952, 965, 981, 995, 1015, 1031, 1045, 1059, 1102, 1125, 1272, 1289, 1308, 1328, 1437, 1479, 1513, 1555, 1766, 1782, 1797, 1811, 1826, 1842, 1858, 1874, 1892, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 3993, 4039, 4046, 4976, 5077, 5143, 5178, 5355], "computer": [10, 64, 97, 186, 798, 1373, 1393, 1644, 2888], "thus": [10, 35, 44, 48, 64, 92, 147, 165, 1339, 1342, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1377, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1393, 1427, 2001, 3993, 4008, 4182, 4958, 5007, 5023, 5220, 5333, 5334, 5342], "quantity": [10, 1376, 1377, 1379, 1441, 1471, 1503, 1537], "mathematical": [10, 28, 49, 53, 64, 861, 2058, 2068, 2132, 2161], "longest": [10, 64, 1670, 1683, 5030, 5065, 5193], "path": [10, 51, 57, 64, 233, 235, 242, 404, 406, 413, 563, 565, 572, 912, 1002, 1141, 1143, 1149, 1640, 1670, 1673, 1683, 1732, 3887, 3888, 4858, 4896, 4917, 4973, 5030, 5065, 5281, 5282, 5283, 5287, 5289, 5290, 5292, 5335, 5355], "directed": [10, 1644, 1654, 1671, 1722, 4839, 4840, 4901, 4964, 4970, 4976, 4981, 4982, 4984, 4985, 4988, 4991, 5071, 5089, 5093, 5095, 5101, 5107, 5108, 5119, 5175, 5180, 5190, 5199, 5214, 5217, 5230, 5282, 5287, 5289, 5355], "acyclic": [10, 1654, 1671, 1722, 4981, 5101, 5107, 5119, 5180, 5282, 5355], "graph": [10, 53, 64, 269, 440, 599, 1176, 1387, 1654, 1671, 1673, 1674, 1675, 1682, 1722, 1725, 1732, 2867, 4839, 4840, 4841, 4842, 4847, 4848, 4849, 4852, 4853, 4859, 4901, 4964, 4970, 4976, 4981, 4982, 4985, 4988, 4991, 5071, 5089, 5093, 5101, 5107, 5108, 5119, 5175, 5180, 5190, 5199, 5214, 5217, 5230, 5282, 5341, 5355], "dag": [10, 45, 48, 51, 57, 64, 233, 404, 563, 1141, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1654, 1661, 1662, 1667, 1673, 1676, 1677, 1678, 1679, 1682, 1683, 1687, 1689, 1693, 1706, 1707, 1710, 1711, 1721, 1722, 1746, 1748, 1750, 1752, 2798, 2800, 2842, 2844, 4220, 4831, 4833, 4866, 4900, 4921, 4941, 4943, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4969, 4970, 4972, 4973, 4975, 4976, 4978, 4979, 4981, 4982, 4984, 4985, 4987, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5002, 5003, 5006, 5008, 5010, 5011, 5013, 5014, 5016, 5017, 5018, 5020, 5021, 5023, 5024, 5026, 5027, 5029, 5030, 5032, 5033, 5034, 5036, 5039, 5044, 5047, 5058, 5059, 5062, 5064, 5065, 5067, 5068, 5070, 5071, 5073, 5074, 5076, 5077, 5079, 5080, 5082, 5083, 5085, 5086, 5088, 5089, 5091, 5092, 5093, 5095, 5096, 5098, 5099, 5101, 5102, 5104, 5105, 5107, 5108, 5110, 5111, 5113, 5114, 5116, 5117, 5119, 5120, 5122, 5123, 5125, 5126, 5128, 5129, 5132, 5134, 5136, 5137, 5139, 5140, 5142, 5143, 5145, 5146, 5149, 5151, 5155, 5157, 5161, 5163, 5165, 5166, 5168, 5169, 5171, 5172, 5174, 5175, 5177, 5178, 5180, 5181, 5183, 5184, 5186, 5187, 5189, 5190, 5192, 5193, 5195, 5196, 5198, 5199, 5201, 5202, 5204, 5205, 5207, 5208, 5210, 5211, 5213, 5214, 5216, 5217, 5219, 5220, 5222, 5223, 5225, 5227, 5238, 5282], "hard": [10, 11, 35, 48, 64, 1372, 1387], "grasp": 10, "even": [10, 53, 64, 130, 133, 158, 789, 1644, 1905, 1953, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 4008, 4182, 4232, 4298, 5071, 5123, 5230, 5257, 5267], "experts": 10, "fortunately": [10, 48], "easily": [10, 48, 64, 904, 1388, 4182, 4220, 4354, 4915, 5146], "understood": [10, 48, 64, 2024, 2032], "anyone": 10, "familiar": [10, 48], "playing": [10, 4182], "tetris": 10, "lets": [10, 31, 48, 64, 4432, 4922], "compute": [10, 11, 44, 48, 54, 64, 70, 71, 74, 81, 82, 110, 119, 120, 125, 126, 127, 131, 134, 135, 147, 148, 149, 150, 153, 165, 166, 167, 168, 172, 173, 174, 175, 178, 180, 188, 190, 269, 324, 325, 357, 363, 440, 495, 496, 599, 654, 655, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 798, 800, 808, 816, 824, 835, 843, 849, 852, 854, 863, 871, 881, 890, 898, 906, 1176, 1231, 1232, 1377, 1378, 1397, 1471, 1551, 1692, 1920, 1921, 1938, 1939, 1947, 1970, 1973, 1985, 1987, 1988, 1991, 1992, 1996, 1999, 2001, 2005, 2006, 2008, 2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2021, 2022, 2023, 2162, 2165, 2166, 2167, 2168, 2417, 2431, 2870, 2871, 2872, 4383, 4601, 4648, 4739, 4747, 4749, 4769, 4771, 4842, 5337, 5341, 5353, 5362], "graphically": [10, 48], "verify": [10, 53, 64, 3748, 3752, 3766, 3767, 3814, 3862], "our": [10, 28, 31, 35, 44, 48, 64, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 2024, 5361], "graphical": [10, 4316, 4335, 4402, 4444, 4667, 4686], ".depth": [10, 48, 64], "-studied": [11, 64], "valuable": 11, "call": [11, 28, 35, 48, 51, 53, 64, 201, 213, 231, 240, 252, 271, 372, 384, 402, 411, 423, 442, 531, 543, 561, 570, 582, 601, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 773, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 1063, 1110, 1121, 1139, 1147, 1159, 1178, 1388, 1464, 1526, 1666, 1772, 1778, 2028, 2039, 2064, 2216, 2282, 2291, 2496, 2503, 3011, 3019, 3388, 3722, 3723, 3730, 3738, 3739, 3796, 3814, 3838, 3854, 3862, 3909, 3923, 4000, 4001, 4008, 4013, 4014, 4030, 4032, 4035, 4057, 4058, 4059, 4060, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4182, 4224, 4297, 4298, 4976, 5143, 5214, 5217, 5250, 5275, 5331, 5333, 5334], "reasons": [11, 64, 165, 172], "serve": [11, 28, 64, 1898, 1908, 2042, 2068, 2123, 2141, 2165, 2166, 2169, 2239], "building": [11, 28, 44, 48, 58, 60, 64, 172, 1388, 1898, 2886, 2887, 3963, 3993, 4031, 4915, 5250, 5339, 5356, 5357, 5366], "blocks": [11, 28, 39, 44, 48, 60, 64, 252, 423, 582, 956, 966, 1006, 1016, 1036, 1046, 1159, 1263, 1273, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1898, 2886, 2887, 4008, 4519, 4614, 4996, 4999, 5000, 5003, 5006, 5014, 5018, 5234, 5235, 5244], "algorithms": [11, 12, 28, 31, 45, 53, 60, 64, 66, 67, 79, 81, 82, 88, 97, 125, 126, 131, 134, 148, 156, 166, 173, 180, 191, 682, 734, 806, 814, 904, 1376, 1448, 1456, 1458, 1898, 1948, 1949, 1979, 1983, 4817, 4819, 4825, 5337, 5340], "think": [11, 64], "simulate": [11, 64, 1291, 1310, 1311, 1387, 2323, 2337, 2349, 5367], "plugged": 11, ".append": [11, 31, 48, 64, 181, 357, 364, 523, 970, 1448, 1465, 1468, 3834, 4219, 4894, 4899, 4920, 5014, 5077, 5143, 5338, 5339, 5341, 5342, 5352, 5353, 5355, 5356, 5367], "so": [11, 28, 29, 31, 39, 44, 48, 51, 53, 57, 64, 82, 97, 103, 105, 126, 131, 134, 142, 143, 145, 147, 148, 165, 166, 169, 172, 173, 180, 201, 213, 234, 235, 342, 343, 344, 345, 372, 384, 405, 406, 513, 514, 515, 516, 531, 543, 564, 565, 672, 673, 674, 675, 682, 734, 904, 975, 1025, 1110, 1121, 1142, 1143, 1249, 1250, 1251, 1252, 1282, 1302, 1342, 1360, 1388, 1407, 1499, 1501, 1648, 1649, 1760, 1791, 1820, 1836, 1852, 1868, 1934, 1937, 1939, 1943, 1948, 1970, 1995, 2000, 2024, 2025, 2032, 2055, 2063, 2309, 3718, 3796, 3814, 3818, 3862, 3993, 4000, 4013, 4182, 4231, 4390, 4394, 4395, 4398, 4432, 4487, 4519, 4549, 4605, 4607, 4608, 4614, 4656, 4658, 4660, 4661, 4664, 4712, 4732, 4745, 4767, 4915, 4922, 4961, 5017, 5021, 5077, 5143, 5151, 5157, 5178, 5181, 5190, 5270, 5281, 5342, 5364], "allows": [11, 20, 25, 35, 39, 60, 64, 97, 130, 133, 147, 172, 255, 256, 426, 427, 585, 586, 841, 877, 896, 1162, 1163, 1388, 1526, 1772, 2885, 3730, 3736, 3777, 3876, 3923, 4008, 4030, 4112, 4182, 4958, 5003, 5014, 5047, 5077, 5123, 5143, 5146, 5332], "users": [11, 25, 30, 31, 35, 39, 51, 57, 64, 2277, 2297, 3730, 3757, 3789, 3876, 3899, 3925, 4182, 4803, 4873, 4915, 4958, 5146, 5220, 5235], "higher": [11, 16, 31, 48, 64, 104, 165, 781, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1499, 1556, 1558, 1644, 3708, 3730, 3834, 3932, 3976, 4819, 4825, 4958, 5230, 5250], "levels": [11, 16, 24, 48, 64, 762, 1644, 1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 3708, 3730, 3920, 3963, 5230, 5250], "abstraction": [11, 64], "multi": [11, 48, 64, 136, 262, 264, 433, 435, 592, 594, 1169, 1171, 1318, 1382, 1387, 1388, 1390, 1407, 1410, 1412, 1415, 1416, 1419, 1421, 1424, 1447, 1453, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1684, 2323, 2337, 2349, 2363, 2376, 2808, 4034, 4063, 4490, 4493, 4521, 4524, 4616, 4619, 4923, 4927, 4973, 5359], "-controlled": [11, 48, 64, 259, 260, 261, 430, 431, 432, 589, 590, 591, 1166, 1167, 1168, 1318, 1388, 1406, 1407, 1412, 1415, 1416, 1419, 1421, 1424, 1447, 1466, 1468], "mcxgate": [11, 64, 262, 264, 433, 435, 592, 594, 1169, 1171, 1416, 1417, 1418, 1419, 1421, 1424], "(gate": [11, 31, 64, 5178, 5356], "mpl": [11, 48, 56, 62, 64, 235, 406, 565, 1143, 1465, 1640, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5014, 5281, 5283, 5289, 5331, 5332, 5333, 5334, 5342, 5345, 5347, 5348, 5352, 5353, 5354, 5355, 5356, 5358, 5372], "<figure": [11, 33, 35, 48, 62, 64, 235, 406, 565, 1143, 1396, 1457, 1465, 1477, 1640, 4025, 4026, 4182, 4196, 4201, 5077, 5143, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334], "axes": [11, 33, 35, 48, 62, 64, 235, 328, 406, 499, 565, 658, 1143, 1235, 1396, 1457, 1465, 1477, 1640, 1786, 4025, 4026, 4182, 4196, 4201, 5077, 5143, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334], "organized": [11, 64], "sections": [11, 64], "reversible": [11, 12, 1401], "subclass": [11, 31, 35, 39, 51, 64, 984, 1034, 1294, 1314, 1693, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 2028, 2032, 2039, 2064, 2277, 2308, 2318, 2486, 2500, 2905, 2909, 2918, 2927, 3885, 3891, 3899, 3906, 3909, 3916, 3918, 4182, 4220, 4878], "consequence": 11, "methods": [11, 25, 28, 31, 35, 42, 48, 51, 53, 67, 69, 75, 77, 79, 81, 84, 86, 88, 90, 92, 95, 97, 101, 103, 105, 108, 110, 113, 115, 118, 123, 125, 128, 130, 133, 136, 140, 143, 147, 154, 156, 160, 162, 165, 172, 181, 186, 189, 191, 193, 235, 324, 325, 352, 357, 362, 364, 406, 495, 496, 523, 565, 654, 655, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 830, 833, 841, 849, 861, 869, 877, 888, 896, 904, 913, 920, 923, 936, 939, 943, 956, 970, 986, 1000, 1006, 1020, 1036, 1050, 1063, 1067, 1083, 1099, 1102, 1143, 1231, 1232, 1259, 1263, 1277, 1296, 1319, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1374, 1389, 1394, 1399, 1401, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1428, 1441, 1448, 1450, 1453, 1459, 1462, 1466, 1468, 1472, 1475, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1642, 1654, 1719, 1722, 1745, 1747, 1749, 1751, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1898, 1923, 1926, 1930, 1932, 1934, 1945, 1947, 1948, 1949, 1951, 1953, 1968, 1970, 1974, 1976, 1979, 1981, 1984, 1987, 1990, 1992, 1993, 1995, 1998, 2001, 2002, 2004, 2006, 2010, 2014, 2018, 2021, 2025, 2032, 2055, 2063, 2068, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2161, 2162, 2177, 2192, 2195, 2208, 2217, 2220, 2232, 2252, 2265, 2267, 2269, 2272, 2277, 2285, 2297, 2309, 2314, 2320, 2323, 2324, 2325, 2334, 2337, 2349, 2350, 2351, 2360, 2363, 2364, 2365, 2373, 2376, 2377, 2378, 2386, 2389, 2395, 2403, 2409, 2417, 2423, 2431, 2437, 2445, 2451, 2459, 2465, 2473, 2487, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2798, 2801, 2813, 2830, 2842, 2862, 2868, 2894, 2906, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3482, 3485, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3718, 3736, 3744, 3756, 3766, 3777, 3796, 3830, 3834, 3845, 3852, 3869, 3876, 3889, 3891, 3899, 3901, 3905, 3909, 3920, 3922, 3925, 3932, 3935, 3951, 3954, 3957, 3960, 3963, 3973, 3976, 3979, 3982, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4192, 4203, 4206, 4209, 4212, 4215, 4229, 4234, 4241, 4246, 4249, 4252, 4255, 4258, 4261, 4264, 4267, 4270, 4273, 4276, 4279, 4282, 4285, 4288, 4291, 4294, 4299, 4316, 4335, 4354, 4376, 4402, 4421, 4424, 4444, 4463, 4487, 4519, 4545, 4552, 4568, 4595, 4614, 4640, 4667, 4686, 4705, 4712, 4742, 4745, 4751, 4767, 4773, 4787, 4802, 4815, 4817, 4819, 4821, 4823, 4825, 4831, 4834, 4839, 4861, 4868, 4873, 4879, 4894, 4901, 4903, 4915, 4922, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5227, 5235, 5237, 5238, 5239, 5241, 5244, 5247, 5250, 5268, 5272, 5281, 5295, 5307, 5319, 5355, 5364], "_matrix": [11, 44, 51, 64, 193, 328, 364, 499, 658, 979, 1029, 1235, 1287, 1306, 1387, 1393, 1764, 1786, 1795, 1824, 1840, 1856, 1872, 1890, 2024, 2032, 2122, 2206, 2323, 2349, 2543, 2884, 4376, 4463, 4509, 4519, 4535, 4584, 4614, 4630, 4745, 4839, 5236, 5241, 5246, 5247, 5250, 5268, 5269, 5273, 5339, 5341, 5361, 5364, 5370], "power": [11, 64, 92, 93, 97, 99, 111, 118, 123, 275, 364, 446, 523, 605, 979, 1029, 1182, 1287, 1306, 1468, 1470, 1764, 1795, 1824, 1840, 1856, 1872, 1890, 2024, 2044, 2220, 2241, 2822, 2836, 4182, 4308, 4329, 4348, 4367, 4376, 4385, 4415, 4437, 4457, 4479, 4511, 4537, 4562, 4586, 4632, 4640, 4650, 4680, 4699], "control": [11, 16, 24, 29, 31, 35, 44, 48, 62, 64, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 258, 259, 260, 261, 262, 263, 264, 283, 284, 337, 342, 343, 344, 345, 364, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 412, 429, 430, 431, 432, 433, 434, 435, 454, 455, 508, 513, 514, 515, 516, 523, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 571, 588, 589, 590, 591, 592, 593, 594, 613, 614, 667, 672, 673, 674, 675, 877, 956, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1148, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1190, 1191, 1244, 1249, 1250, 1251, 1252, 1282, 1302, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1390, 1392, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1460, 1487, 1492, 1497, 1520, 1531, 1537, 1540, 1545, 1548, 1551, 1553, 1561, 1565, 1641, 1642, 1643, 1644, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 1932, 2277, 2285, 2323, 2337, 2349, 2363, 2376, 2862, 2864, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3384, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3718, 3723, 3796, 3885, 3891, 3896, 3901, 3909, 3963, 3965, 3966, 3999, 4012, 4034, 4035, 4041, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4162, 4192, 4282, 4432, 4839, 4895, 4899, 4916, 4920, 4946, 4949, 4952, 4955, 4958, 5021, 5102, 5143, 5152, 5158, 5181, 5220, 5263, 5295, 5319, 5331, 5333, 5334, 5335, 5342, 5347, 5348, 5367, 5369], "generally": [11, 53, 64, 683, 1003, 1930, 2161, 2192, 2217, 2232, 2885, 4930], "apply": [11, 31, 48, 60, 64, 66, 71, 86, 119, 136, 199, 201, 204, 205, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 236, 241, 245, 246, 249, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 268, 273, 274, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 306, 307, 314, 322, 323, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 346, 349, 350, 351, 370, 372, 375, 376, 380, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 407, 412, 416, 417, 420, 421, 422, 428, 429, 430, 431, 432, 433, 434, 435, 439, 444, 445, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 474, 475, 477, 478, 485, 493, 494, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 517, 520, 521, 522, 529, 531, 534, 535, 539, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 566, 571, 575, 576, 579, 580, 581, 587, 588, 589, 590, 591, 592, 593, 594, 598, 603, 604, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 633, 634, 636, 637, 644, 652, 653, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 676, 679, 680, 681, 970, 1108, 1110, 1113, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1144, 1148, 1152, 1153, 1156, 1157, 1158, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1175, 1180, 1181, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1210, 1211, 1213, 1214, 1221, 1229, 1230, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1253, 1256, 1257, 1258, 1318, 1374, 1376, 1379, 1499, 1503, 1556, 1558, 1661, 1662, 1934, 2054, 2176, 2251, 2323, 2349, 2363, 2376, 2781, 2782, 2784, 2785, 2798, 2814, 2816, 2848, 3708, 3990, 4025, 4026, 4264, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4381, 4383, 4404, 4407, 4426, 4429, 4446, 4449, 4465, 4466, 4467, 4471, 4473, 4489, 4492, 4494, 4498, 4500, 4525, 4529, 4554, 4557, 4571, 4574, 4579, 4599, 4601, 4620, 4624, 4646, 4648, 4669, 4672, 4688, 4691, 4885, 4886, 4927, 4934, 4935, 4961, 5014, 5077, 5143, 5151, 5157, 5178, 5193, 5202, 5250, 5259, 5295, 5307, 5319, 5331, 5345, 5369], "xgate": [11, 48, 64, 349, 520, 679, 1256, 1553, 1554, 2813, 2886, 2887, 4060, 4299, 4354, 4928, 5077, 5140, 5143, 5353], "print": [11, 25, 30, 35, 48, 62, 64, 152, 170, 177, 198, 334, 369, 505, 528, 664, 688, 697, 705, 709, 713, 717, 721, 730, 739, 748, 757, 767, 777, 785, 794, 798, 802, 806, 810, 818, 826, 833, 837, 841, 845, 857, 861, 865, 873, 884, 892, 896, 900, 908, 931, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1107, 1241, 1271, 1288, 1307, 1327, 1376, 1377, 1379, 1436, 1441, 1446, 1448, 1450, 1456, 1471, 1503, 1512, 1537, 1563, 1567, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2801, 3796, 3814, 3862, 3882, 3909, 3922, 4023, 4024, 4033, 4044, 4048, 4056, 4240, 4299, 4354, 4389, 4398, 4463, 4487, 4513, 4518, 4525, 4529, 4530, 4539, 4540, 4544, 4595, 4620, 4624, 4625, 4634, 4635, 4639, 4655, 4664, 4829, 5262, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5352, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5369, 5370, 5372], ".to": [11, 64, 979, 1029, 1287, 1306, 1465, 1468, 1764, 1795, 1824, 1840, 1856, 1872, 1890, 5352, 5361], "# x": 11, ".power": [11, 64, 364, 523], "\u221ax": [11, 33, 64], ".control": [11, 64, 2867, 5331, 5333, 5334], ".+": [11, 64, 4580, 5350, 5353, 5361, 5364, 5367], ".j": [11, 64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1387, 3966, 4316, 4335, 4402, 4444, 4580, 4667, 4686, 5337, 5340, 5347, 5348, 5350, 5353, 5361, 5362, 5364, 5366, 5367, 5370], "]]": [11, 16, 30, 31, 57, 64, 84, 90, 93, 118, 120, 128, 151, 169, 176, 179, 188, 190, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 251, 257, 258, 262, 263, 264, 265, 268, 273, 274, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 363, 364, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 422, 428, 429, 433, 434, 435, 436, 439, 444, 445, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 581, 587, 588, 592, 593, 594, 595, 598, 603, 604, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907, 917, 973, 1023, 1106, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1152, 1156, 1157, 1158, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1256, 1257, 1258, 1280, 1299, 1376, 1377, 1379, 1441, 1444, 1450, 1456, 1468, 1471, 1475, 1476, 1503, 1527, 1537, 1563, 1567, 1641, 1642, 1643, 1644, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1901, 1928, 1929, 1947, 2003, 2285, 2798, 2813, 2845, 2858, 2859, 2932, 2933, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3730, 3757, 3779, 3789, 3851, 3864, 3896, 3982, 3983, 3991, 3993, 4000, 4001, 4013, 4014, 4032, 4084, 4182, 4228, 4433, 4487, 4803, 4839, 4877, 4886, 5003, 5105, 5151, 5157, 5250, 5272, 5287, 5333, 5334, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5359, 5362, 5364, 5366, 5367, 5368, 5370], "5j": [11, 64, 4433, 5350, 5355], "stack": [11, 57, 64, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 4229, 4233], "meant": [11, 28, 35, 64, 105, 2025, 2055, 2063, 2875], "interpreted": [11, 16, 28, 35, 64, 849, 877, 1318, 1376, 1377, 1379, 1441, 1447, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1641, 2161, 2232, 5280], "transpiler": [11, 16, 33, 45, 51, 53, 1644, 2798, 2805, 3708, 4024, 4031, 4056, 4878, 4901, 4922, 4944, 5014, 5071, 5080, 5099, 5117, 5123, 5157, 5166, 5196, 5217, 5230, 5347, 5355], "general": [11, 44, 48, 64, 158, 180, 806, 888, 973, 1023, 1280, 1299, 1399, 1415, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2323, 2349, 2363, 2376, 2813, 2861, 3725, 3935, 4370, 4402, 4667, 4716, 5102], "optionally": [11, 16, 25, 35, 48, 53, 64, 147, 150, 151, 163, 168, 169, 175, 176, 179, 211, 277, 382, 448, 541, 607, 1036, 1120, 1184, 1379, 1471, 1642, 1998, 2122, 2277, 2909, 2918, 2927, 3891, 3935, 3942, 3945, 3957, 4032, 4463, 4491, 4509, 4513, 4522, 4535, 4539, 4584, 4617, 4630, 4634, 4725, 4873, 5151], "ignore": [11, 64, 1679, 1684, 1716, 2216, 4432, 4568, 5033], "non": [11, 28, 35, 48, 64, 88, 118, 142, 186, 197, 201, 213, 214, 235, 266, 269, 270, 279, 368, 372, 384, 385, 406, 437, 440, 441, 450, 527, 531, 543, 544, 565, 596, 599, 600, 609, 683, 701, 789, 798, 806, 1072, 1088, 1106, 1110, 1121, 1122, 1143, 1173, 1176, 1177, 1186, 1352, 1373, 1388, 1392, 1393, 1401, 1448, 1533, 1535, 1551, 1567, 1648, 1664, 1665, 1666, 1703, 1704, 1722, 1886, 1934, 1937, 1975, 1977, 1980, 1986, 1987, 2020, 2028, 2029, 2039, 2060, 2064, 2323, 2349, 2805, 2808, 2848, 2849, 2861, 2889, 3905, 4172, 4201, 4299, 4311, 4329, 4348, 4361, 4370, 4398, 4400, 4415, 4421, 4457, 4491, 4513, 4522, 4539, 4568, 4617, 4634, 4664, 4680, 4699, 4708, 4709, 4714, 4716, 4720, 4726, 4744, 4749, 4771, 4811, 4812, 4819, 4823, 4924, 4927, 4948, 4951, 4954, 4957, 4973, 5080, 5143, 5211, 5250, 5281, 5361, 5366], "-reversible": 11, "changes": [11, 35, 39, 51, 717, 798, 841, 2311, 2814, 3754, 3791, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4614, 4669, 4688, 4922, 5003, 5307, 5331], "involved": [11, 4973, 5178], "instantiation": [11, 64, 4182, 4915], "diagonal": [11, 28, 64, 234, 328, 342, 357, 405, 499, 513, 523, 564, 658, 672, 683, 1142, 1235, 1249, 1345, 1352, 1357, 1380, 1396, 1397, 1412, 1459, 1496, 1539, 1586, 1786, 1934, 1935, 1938, 1939, 1945, 1983, 1987, 1988, 1990, 1998, 2000, 2001, 2162, 2165, 2166, 2167, 2168, 2337, 4389, 4390, 4604, 4605, 4655, 4656, 4722, 4731, 4743, 4747, 4769, 5166, 5274, 5362], "(diagonal": 11, "transformations": [11, 35, 48, 64], "case": [11, 16, 31, 39, 48, 53, 64, 88, 103, 104, 105, 136, 144, 146, 172, 197, 240, 247, 368, 411, 418, 527, 570, 577, 725, 806, 904, 918, 970, 992, 1106, 1147, 1154, 1325, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1399, 1403, 1412, 1415, 1419, 1421, 1424, 1427, 1450, 1457, 1538, 1555, 1644, 1678, 1808, 1901, 1923, 1924, 1953, 1956, 2001, 2024, 2035, 2060, 2072, 2135, 2154, 2167, 2176, 2180, 2192, 2217, 2235, 2251, 2311, 2396, 2410, 2424, 2438, 2452, 2466, 2510, 2523, 2536, 2549, 2562, 2575, 2588, 2601, 2614, 2627, 2640, 2653, 2666, 2679, 2692, 2813, 2885, 3708, 3796, 3814, 3855, 3862, 4030, 4048, 4229, 4231, 4432, 4614, 4712, 4745, 4765, 4767, 4785, 4800, 4811, 4913, 4915, 4930, 4973, 5077, 5143, 5202, 5241, 5244, 5305, 5317, 5329, 5332, 5345, 5372], "fourier": [11, 64, 69, 1373, 1380, 1458, 1472, 1474, 1480], "transform": [11, 64, 69, 1373, 1380, 1397, 1458, 1472, 1474, 1480, 2869, 2875, 2882, 2884, 2885, 2890, 4008, 4221, 4228, 4900, 4921, 4961, 5142, 5145, 5355], "qft": [11, 64, 1373, 1458, 1473, 1474, 1480], "transforms": [11, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2868, 3993, 4008, 4030, 4219, 4961, 5231, 5232, 5233, 5234, 5239, 5244], "between": [11, 16, 28, 39, 44, 45, 48, 64, 97, 110, 193, 210, 238, 279, 364, 381, 409, 450, 523, 540, 568, 609, 806, 927, 934, 947, 954, 960, 968, 974, 983, 990, 997, 1010, 1018, 1024, 1033, 1040, 1048, 1054, 1061, 1065, 1102, 1119, 1145, 1186, 1267, 1275, 1281, 1292, 1300, 1312, 1318, 1323, 1330, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1432, 1439, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1508, 1515, 1519, 1522, 1537, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1640, 1641, 1722, 1734, 1758, 1768, 1776, 1784, 1790, 1799, 1806, 1813, 1819, 1828, 1835, 1844, 1851, 1860, 1867, 1876, 1884, 1894, 1903, 1905, 1913, 1957, 1958, 1964, 1987, 2024, 2027, 2036, 2038, 2047, 2066, 2073, 2074, 2079, 2087, 2088, 2093, 2100, 2101, 2106, 2115, 2116, 2127, 2136, 2137, 2145, 2161, 2162, 2171, 2189, 2202, 2215, 2223, 2232, 2237, 2245, 2259, 2308, 2393, 2401, 2407, 2415, 2421, 2429, 2435, 2443, 2449, 2457, 2463, 2471, 2486, 2500, 2508, 2515, 2521, 2528, 2534, 2541, 2547, 2554, 2560, 2567, 2573, 2580, 2586, 2593, 2599, 2606, 2612, 2619, 2625, 2632, 2638, 2645, 2651, 2658, 2664, 2671, 2677, 2684, 2690, 2697, 2703, 2710, 2716, 2723, 2729, 2736, 2742, 2749, 2755, 2762, 2768, 2775, 2867, 2887, 2905, 3708, 3730, 3814, 3824, 3832, 3916, 3919, 3932, 3973, 3976, 3993, 3994, 4008, 4025, 4026, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 4192, 4215, 4221, 4231, 4255, 4273, 4297, 4390, 4398, 4484, 4519, 4605, 4614, 4656, 4664, 4705, 4717, 4721, 4722, 4726, 4740, 4796, 4811, 4812, 4819, 4823, 4825, 4829, 4843, 4858, 4880, 4884, 4893, 4915, 4922, 4923, 4924, 4964, 5008, 5011, 5014, 5023, 5033, 5037, 5071, 5077, 5123, 5129, 5134, 5140, 5143, 5152, 5158, 5239, 5244, 5250, 5331, 5335, 5341], "addition": [11, 16, 39, 48, 64, 107, 137, 789, 1001, 1342, 1373, 1462, 1550, 1555, 1644, 1899, 1922, 1954, 2024, 2032, 2033, 2055, 2056, 2070, 2085, 2098, 2113, 2133, 2163, 2178, 2196, 2209, 2221, 2233, 2253, 2277, 2909, 2918, 2927, 3824, 3888, 3891, 4008, 5137, 5230, 5348], "multiplication": [11, 64, 852, 1392, 1480, 1908, 1985, 1995, 1996, 2042, 2123, 2141, 2169, 2239, 2323, 2349, 2363, 2376, 2814, 4301, 4318, 4337, 4356, 4404, 4424, 4426, 4446, 4467, 4519, 4552, 4554, 4571, 4614, 4669, 4688, 5008], "blueprintcircuit": [11, 64, 193, 1381, 1398, 1441, 1465, 1472, 1551], "parameterized": [11, 30, 64, 147, 151, 165, 169, 172, 176, 198, 335, 336, 369, 506, 507, 528, 665, 666, 693, 852, 930, 950, 956, 963, 978, 993, 1001, 1003, 1005, 1006, 1013, 1028, 1043, 1057, 1071, 1072, 1087, 1088, 1107, 1242, 1243, 1270, 1286, 1305, 1326, 1376, 1379, 1396, 1435, 1441, 1456, 1471, 1475, 1503, 1511, 1537, 1556, 1558, 1648, 1649, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 1926, 1948, 2001, 2002, 2004, 2006, 2011, 2016, 2019, 2021, 2022, 2023, 2060, 2397, 2411, 2425, 2439, 2453, 2467, 2511, 2524, 2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 2641, 2654, 2667, 2680, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 2798, 4005, 4017, 4032, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4082, 4092, 4101, 4110, 4119, 4128, 4137, 4146, 4155, 4160, 4165, 4170, 4175, 4180, 4185, 4189, 4421, 4922, 4930, 5331, 5352, 5353], ".k": [11, 165, 172], ".a": [11, 165, 172, 5353], "ansatzes": [11, 147], "forms": [11, 44, 64, 201, 213, 240, 252, 347, 372, 384, 411, 423, 518, 531, 543, 570, 582, 677, 1110, 1121, 1147, 1159, 1254, 5080, 5274, 5343], "heavily": [11, 64], ".g": [11, 16, 30, 32, 39, 44, 48, 64, 68, 98, 150, 151, 168, 169, 175, 176, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 274, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 445, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 604, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 822, 825, 836, 844, 849, 855, 864, 872, 877, 882, 891, 899, 907, 929, 931, 949, 951, 962, 964, 970, 975, 980, 994, 1012, 1014, 1025, 1027, 1030, 1042, 1044, 1056, 1058, 1067, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1181, 1269, 1271, 1282, 1285, 1288, 1302, 1304, 1307, 1327, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1390, 1413, 1416, 1434, 1436, 1444, 1456, 1460, 1475, 1487, 1492, 1497, 1510, 1512, 1520, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1641, 1644, 1721, 1746, 1748, 1750, 1752, 1760, 1779, 1781, 1791, 1796, 1810, 1820, 1822, 1825, 1836, 1838, 1841, 1852, 1854, 1857, 1868, 1870, 1873, 1886, 1905, 1912, 1937, 1958, 1963, 1987, 2030, 2032, 2038, 2046, 2057, 2058, 2060, 2065, 2074, 2078, 2088, 2101, 2116, 2137, 2144, 2170, 2187, 2201, 2204, 2214, 2216, 2218, 2223, 2226, 2230, 2237, 2243, 2244, 2248, 2250, 2258, 2261, 2264, 2337, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2705, 2707, 2718, 2720, 2731, 2733, 2744, 2746, 2757, 2759, 2770, 2772, 2813, 2875, 2886, 2887, 3730, 3760, 3901, 3982, 3990, 4075, 4148, 4239, 4240, 4316, 4335, 4402, 4444, 4463, 4667, 4686, 4708, 4773, 4787, 4805, 4839, 4884, 4886, 4923, 4961, 4964, 4973, 5003, 5011, 5021, 5033, 5077, 5129, 5134, 5143, 5202, 5208, 5211, 5230, 5263, 5275, 5335], "physics": [11, 28, 35, 64, 1382], "optimization": [11, 12, 16, 31, 35, 44, 48, 53, 60, 147, 165, 169, 172, 682, 683, 687, 693, 696, 701, 704, 709, 712, 717, 720, 729, 738, 747, 752, 756, 765, 766, 776, 781, 784, 789, 793, 798, 801, 806, 809, 814, 817, 822, 825, 830, 833, 836, 844, 849, 855, 856, 861, 864, 869, 872, 877, 882, 883, 891, 899, 904, 907, 1376, 1379, 1399, 1441, 1448, 1450, 1453, 1456, 1471, 1475, 1503, 1537, 1563, 1567, 1644, 1722, 1987, 2323, 2349, 2363, 2376, 2875, 2883, 3708, 4024, 4032, 4056, 4220, 4222, 4705, 4716, 4915, 4958, 5033, 5035, 5040, 5055, 5059, 5061, 5099, 5137, 5193, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5241, 5242, 5243, 5246, 5247, 5248, 5249, 5250, 5286, 5337, 5338, 5341, 5342, 5355, 5369], "encode": [11, 64, 100, 1399, 1475, 3781, 3782, 3792, 3793, 3905, 3907, 3908], "feature": [11, 35, 53, 57, 64, 163, 165, 172, 877, 1450, 1451, 1563, 1567, 1644, 3704, 3901, 4182, 4900, 4921, 5331, 5333, 5334], "maps": [11, 35, 39, 64, 88, 89, 1537, 1711, 1937, 4075, 4796, 4901, 4915, 4938, 5230, 5237, 5355], "classification": [11, 60, 64, 1376, 1503], "templates": [11, 64, 4716], "identity": [11, 64, 66, 86, 97, 105, 849, 877, 1388, 1394, 1935, 1937, 1973, 2024, 2032, 2376, 2819, 2835, 2847, 2875, 2889, 2932, 4552, 4714, 4720, 4726, 5077, 5143, 5244, 5353], "matching": [11, 64, 244, 415, 574, 1151, 1722, 2315, 2316, 2321, 2322, 2907, 2908, 3483, 3484, 3486, 3487, 3706, 4006, 5073, 5193, 5226], "part": [11, 31, 39, 47, 48, 51, 53, 54, 64, 143, 157, 251, 269, 271, 272, 422, 440, 442, 443, 581, 599, 601, 602, 725, 956, 1158, 1176, 1178, 1179, 1277, 1503, 1537, 1644, 2283, 2292, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3796, 3897, 3964, 3965, 3967, 3971, 4258, 4276, 4519, 4570, 4614, 4724, 5193, 5291, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "compiler": [11, 31, 45, 49, 1316, 1317, 1448, 4030, 4226, 4228, 4922, 5023, 5123, 5235], "replace": [11, 48, 64, 235, 406, 565, 938, 966, 1016, 1046, 1143, 1273, 1706, 1710, 1711, 1901, 1926, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2798, 2886, 3823, 3868, 4006, 4019, 4222, 4898, 4899, 4919, 4920, 4923, 5018, 5020, 5281], "match": [11, 48, 64, 165, 172, 926, 934, 946, 954, 959, 968, 973, 983, 989, 997, 1001, 1005, 1009, 1018, 1023, 1033, 1039, 1048, 1053, 1061, 1266, 1275, 1280, 1292, 1299, 1312, 1322, 1330, 1431, 1439, 1443, 1507, 1515, 1527, 1710, 1757, 1768, 1775, 1784, 1789, 1799, 1805, 1813, 1818, 1828, 1834, 1844, 1850, 1860, 1866, 1876, 1883, 1894, 2170, 2201, 2214, 2226, 2244, 2258, 2315, 2321, 2333, 2359, 2372, 2385, 2392, 2401, 2406, 2415, 2420, 2429, 2434, 2443, 2448, 2457, 2462, 2471, 2507, 2515, 2520, 2528, 2533, 2541, 2546, 2554, 2559, 2567, 2572, 2580, 2585, 2593, 2598, 2606, 2611, 2619, 2624, 2632, 2637, 2645, 2650, 2658, 2663, 2671, 2676, 2684, 2689, 2697, 2702, 2710, 2715, 2723, 2728, 2736, 2741, 2749, 2754, 2762, 2767, 2775, 2907, 3483, 3486, 3705, 3723, 3728, 3737, 3738, 3739, 3751, 3779, 3789, 3835, 3870, 3902, 4013, 4218, 4229, 4381, 4473, 4500, 4589, 4599, 4646, 4892, 4922, 4973, 4984, 5093, 5095, 5151, 5193, 5226, 5231, 5232, 5233, 5234, 5272, 5287, 5289, 5290, 5355], "inverse": [11, 48, 64, 69, 145, 159, 254, 425, 584, 849, 877, 929, 949, 962, 977, 992, 1012, 1027, 1042, 1056, 1066, 1161, 1269, 1285, 1304, 1325, 1335, 1338, 1341, 1344, 1347, 1349, 1351, 1353, 1356, 1359, 1361, 1363, 1366, 1368, 1370, 1391, 1395, 1409, 1411, 1414, 1418, 1420, 1423, 1426, 1434, 1454, 1458, 1461, 1472, 1473, 1474, 1480, 1482, 1484, 1488, 1490, 1493, 1495, 1498, 1500, 1502, 1510, 1518, 1521, 1522, 1523, 1525, 1526, 1528, 1532, 1534, 1536, 1541, 1543, 1546, 1549, 1550, 1554, 1557, 1559, 1562, 1566, 1762, 1779, 1793, 1808, 1822, 1838, 1854, 1870, 1888, 1960, 2001, 2018, 2041, 2140, 2396, 2410, 2424, 2438, 2452, 2466, 2510, 2523, 2536, 2549, 2562, 2575, 2588, 2601, 2614, 2627, 2640, 2653, 2666, 2679, 2692, 2705, 2718, 2731, 2744, 2757, 2770, 4477, 4507, 4748, 4770, 5077, 5105, 5143], "remainder": 11, "constant": [11, 64, 773, 849, 877, 1393, 1465, 1475, 1476, 1641, 2823, 2861, 2872, 2877, 2884, 3932, 3976, 4158, 4159, 4160, 4161, 4190, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700, 5341, 5357], "checked": [11, 53, 64, 97, 347, 518, 677, 1254, 1263, 1710, 3905, 4220, 4930, 4960, 4976, 5142, 5145, 5198, 5205], ".templates": 11, "_nct": 11, "4b": 11, ".quantum": [11, 30, 45, 56, 3748, 3752, 4299, 4354, 4487, 4595, 5284, 5291, 5292, 5293, 5294, 5337, 5341, 5342, 5347, 5350, 5353, 5361, 5364, 5366, 5367], "_info": [11, 30, 45, 53, 56, 3796, 3824, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4299, 4354, 4487, 4595, 5284, 5291, 5292, 5293, 5294, 5331, 5341, 5342, 5347, 5350, 5353, 5361, 5364, 5366, 5367], "numpy": [11, 28, 31, 35, 39, 47, 48, 51, 62, 64, 130, 133, 181, 182, 186, 253, 276, 353, 357, 358, 362, 364, 424, 447, 523, 583, 606, 849, 856, 877, 883, 984, 998, 1034, 1160, 1183, 1294, 1314, 1375, 1401, 1465, 1485, 1769, 1786, 1800, 1829, 1845, 1861, 1877, 1895, 1916, 1966, 2024, 2025, 2032, 2050, 2051, 2055, 2061, 2063, 2083, 2095, 2109, 2122, 2129, 2150, 2192, 2194, 2204, 2205, 2217, 2218, 2229, 2248, 2249, 2252, 2261, 2263, 2854, 3761, 4026, 4196, 4201, 4254, 4272, 4287, 4313, 4335, 4373, 4389, 4398, 4402, 4424, 4463, 4485, 4487, 4502, 4509, 4513, 4515, 4516, 4519, 4535, 4539, 4541, 4542, 4565, 4568, 4584, 4591, 4592, 4604, 4630, 4634, 4636, 4637, 4644, 4655, 4664, 4686, 4747, 4769, 4806, 4813, 5077, 5143, 5227, 5238, 5270, 5274, 5280, 5286, 5338, 5339, 5341, 5342, 5343, 5344, 5347, 5348, 5350, 5352, 5353, 5357, 5361, 5362, 5364, 5366, 5368, 5370], "np": [11, 31, 47, 48, 62, 64, 181, 186, 253, 276, 316, 357, 362, 364, 424, 447, 487, 523, 583, 606, 646, 765, 769, 849, 877, 984, 998, 1034, 1160, 1183, 1223, 1294, 1314, 1465, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 2001, 2218, 2271, 2712, 2793, 2813, 2914, 2923, 2932, 3761, 4026, 4193, 4196, 4201, 4206, 4376, 4389, 4395, 4398, 4422, 4423, 4487, 4499, 4502, 4518, 4544, 4568, 4604, 4609, 4639, 4640, 4652, 4655, 4661, 4664, 4728, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4746, 4748, 4768, 4770, 4806, 5077, 5143, 5286, 5338, 5339, 5341, 5342, 5343, 5344, 5347, 5348, 5350, 5352, 5353, 5357, 5361, 5362, 5364, 5366, 5368, 5370], ".identity": 11, "len": [11, 31, 64, 181, 357, 973, 1023, 1280, 1299, 1527, 1717, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 3957, 4039, 4046, 4813, 5291, 5338, 5341, 5355], "(template": 11, ".qubits": [11, 64, 253, 276, 280, 281, 424, 447, 451, 452, 583, 606, 610, 611, 1160, 1183, 1187, 1188, 1465, 5355], "dtype": [11, 64, 5341], "=complex": [11, 64], ".allclose": 11, "(data": [11, 64, 1645, 2024, 3899, 5349], "true": [11, 16, 25, 31, 39, 48, 51, 53, 56, 64, 66, 71, 83, 92, 97, 101, 107, 119, 120, 127, 132, 135, 142, 147, 150, 151, 153, 164, 165, 168, 169, 171, 172, 175, 176, 178, 187, 198, 211, 235, 240, 247, 248, 251, 252, 266, 267, 275, 277, 285, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 328, 334, 342, 369, 382, 406, 411, 418, 419, 422, 423, 437, 438, 446, 448, 456, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 499, 505, 513, 528, 541, 565, 570, 577, 578, 581, 582, 596, 597, 605, 607, 615, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 658, 664, 672, 683, 709, 717, 761, 798, 806, 833, 849, 861, 877, 896, 930, 950, 963, 978, 993, 1004, 1013, 1028, 1036, 1043, 1057, 1107, 1120, 1143, 1147, 1154, 1155, 1158, 1159, 1173, 1174, 1182, 1184, 1192, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1235, 1241, 1249, 1270, 1286, 1293, 1305, 1313, 1318, 1326, 1376, 1377, 1379, 1380, 1398, 1401, 1435, 1441, 1442, 1447, 1450, 1456, 1463, 1466, 1468, 1471, 1472, 1474, 1475, 1477, 1503, 1511, 1526, 1537, 1563, 1567, 1640, 1641, 1667, 1678, 1689, 1693, 1706, 1710, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 1903, 1905, 1907, 1923, 1924, 1926, 1932, 1933, 1934, 1936, 1937, 1947, 1957, 1958, 1994, 1998, 2027, 2036, 2038, 2058, 2073, 2074, 2087, 2088, 2100, 2101, 2115, 2116, 2120, 2122, 2136, 2137, 2177, 2181, 2195, 2223, 2236, 2237, 2323, 2345, 2349, 2363, 2376, 2397, 2411, 2425, 2439, 2453, 2467, 2504, 2511, 2517, 2524, 2530, 2537, 2543, 2550, 2556, 2563, 2569, 2576, 2582, 2589, 2595, 2602, 2608, 2615, 2621, 2628, 2634, 2641, 2647, 2654, 2660, 2667, 2673, 2680, 2686, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2802, 2803, 2805, 2806, 2807, 2808, 2810, 2812, 2814, 2819, 2830, 2831, 2835, 2845, 2847, 2848, 2857, 2858, 2859, 2889, 2909, 2918, 2927, 3005, 3705, 3708, 3721, 3723, 3725, 3730, 3737, 3738, 3739, 3754, 3766, 3783, 3789, 3791, 3794, 3799, 3812, 3814, 3836, 3837, 3849, 3861, 3862, 3863, 3869, 3876, 3880, 3882, 3883, 3884, 3886, 3901, 3905, 3922, 3932, 3943, 3951, 3957, 3963, 3976, 3987, 3988, 3995, 3999, 4000, 4001, 4005, 4009, 4010, 4012, 4013, 4014, 4017, 4018, 4019, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4080, 4082, 4090, 4092, 4099, 4101, 4108, 4110, 4117, 4119, 4126, 4128, 4135, 4137, 4144, 4146, 4153, 4155, 4157, 4158, 4160, 4162, 4163, 4165, 4167, 4168, 4170, 4172, 4173, 4175, 4177, 4178, 4180, 4182, 4183, 4185, 4187, 4188, 4189, 4192, 4193, 4195, 4197, 4219, 4228, 4232, 4241, 4297, 4299, 4301, 4318, 4325, 4327, 4337, 4344, 4346, 4354, 4356, 4365, 4387, 4404, 4411, 4413, 4426, 4430, 4432, 4435, 4446, 4453, 4455, 4465, 4466, 4467, 4471, 4472, 4485, 4487, 4489, 4491, 4492, 4494, 4497, 4498, 4499, 4506, 4509, 4513, 4515, 4516, 4518, 4522, 4523, 4525, 4528, 4533, 4535, 4539, 4541, 4542, 4544, 4554, 4560, 4568, 4571, 4575, 4579, 4582, 4584, 4591, 4592, 4595, 4602, 4617, 4618, 4620, 4623, 4628, 4630, 4634, 4636, 4637, 4639, 4645, 4653, 4669, 4676, 4678, 4688, 4695, 4697, 4705, 4714, 4720, 4725, 4726, 4727, 4731, 4732, 4733, 4740, 4802, 4811, 4812, 4813, 4829, 4839, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4853, 4896, 4917, 4927, 4928, 4930, 4970, 4976, 4987, 4990, 4991, 4993, 5024, 5077, 5102, 5117, 5137, 5140, 5143, 5150, 5156, 5162, 5178, 5190, 5202, 5214, 5226, 5237, 5250, 5267, 5269, 5273, 5280, 5281, 5283, 5284, 5287, 5288, 5289, 5290, 5294, 5331, 5332, 5333, 5334, 5335, 5340, 5341, 5342, 5343, 5353, 5354, 5356, 5359, 5361, 5366, 5367, 5369], "cxgate": [11, 31, 64, 209, 227, 380, 398, 539, 557, 1118, 1135, 1365, 1366, 1537, 1650, 4035, 4299, 4354, 4922, 4923, 5000, 5353, 5355], "ccxgate": [11, 64, 204, 337, 375, 508, 534, 667, 1113, 1244, 1340, 1341, 5355], "(toffoli": 11, "reference": [11, 57, 64, 103, 136, 239, 410, 569, 1146, 1372, 1380, 1387, 1393, 1396, 1397, 1401, 1457, 1458, 1459, 1477, 1496, 1539, 1555, 1586, 1722, 2285, 2798, 3005, 3013, 3382, 3704, 4246, 4316, 4335, 4354, 4370, 4402, 4444, 4519, 4595, 4614, 4667, 4686, 4716, 4717, 4728, 5169, 5193, 5268, 5338, 5339, 5357, 5362], "maslov": [11, 1336, 1382, 4370, 4716, 4728], "dueck": 11, "miller": 11, ".,": [11, 30, 35, 44, 64, 69, 97, 110, 118, 186, 233, 255, 256, 404, 426, 427, 563, 585, 586, 1141, 1162, 1163, 1332, 1336, 1342, 1372, 1373, 1382, 1388, 1392, 1393, 1399, 1456, 1465, 1466, 1468, 1471, 1475, 1480, 1550, 1641, 1644, 1682, 1721, 1722, 1746, 1748, 1750, 1752, 1987, 2057, 2156, 2323, 2349, 2830, 2875, 2885, 2887, 2915, 2924, 3730, 4148, 4162, 4192, 4316, 4444, 4712, 4739, 4747, 4769, 4796, 4970, 5033, 5117, 5178, 5190, 5341, 5342, 5353], "techniques": [11, 35, 51, 64, 262, 264, 433, 435, 592, 594, 1169, 1171, 2002, 2004, 2006], "synthesis": [11, 12, 39, 44, 45, 64, 234, 405, 564, 1142, 1293, 1313, 1372, 1401, 1448, 1526, 1644, 1815, 1831, 1847, 1863, 3708, 4299, 4311, 4705, 4712, 4716, 4817, 4821, 5202, 5226, 5227, 5228, 5229, 5230, 5234, 5237, 5238, 5355], "toffoli": [11, 48, 64, 337, 508, 667, 1244, 1339, 1478, 1479], "http": [11, 47, 64, 147, 734, 743, 752, 789, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ":/": [11, 39, 47, 48, 53, 57, 58, 64, 97, 116, 147, 156, 234, 235, 255, 256, 342, 343, 344, 345, 405, 406, 426, 427, 513, 514, 515, 516, 564, 565, 585, 586, 672, 673, 674, 675, 693, 701, 709, 717, 725, 734, 743, 752, 761, 781, 789, 798, 806, 814, 833, 841, 861, 869, 888, 896, 904, 1142, 1143, 1162, 1163, 1249, 1250, 1251, 1252, 1332, 1336, 1472, 1475, 1478, 1479, 1526, 1732, 1815, 1831, 1847, 1863, 1974, 1976, 2162, 2482, 2909, 2918, 2927, 3748, 3752, 3993, 4847, 4848, 5099, 5117, 5146, 5151, 5259, 5262, 5281, 5283, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "dx": [11, 4198], ".doi": 11, ".org": [11, 39, 47, 48, 57, 64, 97, 116, 147, 156, 234, 255, 256, 334, 342, 343, 344, 345, 405, 426, 427, 505, 513, 514, 515, 516, 564, 585, 586, 664, 672, 673, 674, 675, 693, 709, 717, 761, 798, 806, 814, 833, 841, 861, 877, 888, 896, 904, 1142, 1162, 1163, 1241, 1249, 1250, 1251, 1252, 1332, 1336, 1472, 1478, 1479, 1526, 1732, 1815, 1831, 1847, 1863, 1974, 1976, 2162, 2482, 3993, 4847, 4848, 5099, 5146, 5151, 5259, 5262, 5283, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "over": [11, 16, 28, 31, 35, 48, 64, 97, 133, 147, 165, 172, 235, 240, 251, 252, 279, 280, 281, 288, 300, 302, 303, 304, 306, 307, 347, 406, 411, 422, 423, 450, 451, 452, 459, 471, 473, 474, 475, 477, 478, 518, 565, 570, 581, 582, 609, 610, 611, 618, 630, 632, 633, 634, 636, 637, 677, 693, 849, 877, 1006, 1143, 1147, 1158, 1159, 1186, 1187, 1188, 1195, 1207, 1209, 1210, 1211, 1213, 1214, 1254, 1397, 1464, 1555, 1641, 1644, 1706, 1737, 1898, 1943, 1984, 1987, 2024, 2032, 2161, 2170, 2201, 2204, 2214, 2218, 2226, 2230, 2232, 2244, 2248, 2250, 2258, 2261, 2264, 2277, 2517, 2543, 2556, 2569, 2595, 2608, 2778, 2780, 2781, 2782, 2784, 2785, 3723, 3730, 3993, 3994, 3996, 3997, 3998, 4001, 4006, 4011, 4014, 4063, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 4195, 4335, 4487, 4519, 4614, 4667, 4724, 4747, 4769, 4811, 4812, 4813, 4900, 4921, 4922, 4927, 4930, 4973, 5003, 5020, 5117, 5178, 5202, 5230, 5250, 5270, 5274, 5281, 5293, 5331, 5335, 5352], "provides": [12, 16, 25, 31, 35, 53, 60, 64, 165, 172, 240, 411, 570, 682, 1147, 1644, 2008, 2318, 2349, 2487, 3704, 3736, 3777, 3852, 3869, 3889, 4003, 4016, 4075, 4182, 4432, 4878, 4902, 5230, 5235], "necessary": [12, 16, 31, 48, 51, 57, 60, 64, 172, 240, 411, 570, 913, 1101, 1147, 1417, 1641, 1644, 1706, 3993, 4003, 4016, 4255, 4273, 4915, 5023, 5230, 5250, 5333, 5334], "tools": [12, 28, 39, 45, 54, 60, 2192, 2217], "irreversible": 12, "simple": [12, 28, 31, 33, 35, 48, 62, 64, 798, 1102, 1978, 3705, 3737, 4041, 4042, 4157, 4182, 5199, 5230, 5232, 5307, 5333, 5334], "synthesize": [12, 1404, 4818, 4820, 4822, 4824, 4826, 5111, 5202, 5227, 5238], "boolean": [12, 39, 53, 64, 72, 93, 97, 99, 111, 116, 121, 130, 133, 157, 347, 518, 677, 1254, 1277, 1372, 1397, 1462, 1464, 1907, 2120, 2888, 2915, 2924, 2933, 4182, 4231, 4264, 4282, 4463, 4487, 4502, 4519, 4523, 4595, 4614, 4618, 5062, 5086, 5294], "python": [12, 25, 28, 29, 39, 45, 47, 51, 56, 57, 58, 59, 64, 235, 406, 565, 904, 912, 1102, 1143, 1296, 1462, 2484, 2903, 2909, 2918, 2927, 3704, 3876, 3902, 3904, 3907, 3928, 4032, 5056, 5281, 5338, 5345, 5348, 5350, 5358, 5359, 5361, 5366, 5372], "int": [12, 16, 35, 39, 44, 62, 64, 66, 69, 74, 75, 79, 86, 92, 93, 95, 97, 99, 100, 101, 103, 111, 113, 115, 116, 118, 120, 123, 130, 136, 139, 140, 147, 157, 158, 159, 160, 165, 169, 172, 181, 183, 184, 185, 193, 195, 204, 205, 207, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 245, 249, 250, 251, 252, 253, 257, 258, 260, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 276, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 314, 321, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360, 361, 364, 366, 375, 376, 378, 380, 382, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 416, 420, 421, 422, 423, 424, 428, 429, 431, 433, 434, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 453, 454, 455, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 485, 492, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 525, 534, 535, 537, 539, 541, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 569, 570, 571, 575, 579, 580, 581, 582, 583, 587, 588, 590, 592, 593, 594, 595, 598, 599, 601, 602, 603, 604, 605, 606, 612, 613, 614, 616, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 644, 651, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 672, 677, 678, 679, 680, 681, 683, 685, 693, 694, 695, 701, 703, 709, 711, 717, 719, 725, 728, 734, 737, 743, 746, 752, 755, 761, 762, 763, 764, 765, 768, 769, 773, 775, 781, 783, 789, 792, 798, 800, 806, 808, 814, 816, 824, 830, 833, 835, 841, 843, 849, 850, 854, 856, 861, 863, 869, 871, 877, 878, 881, 883, 888, 890, 896, 898, 904, 906, 913, 916, 917, 919, 920, 923, 932, 939, 942, 943, 952, 956, 965, 970, 975, 981, 985, 995, 999, 1006, 1015, 1020, 1025, 1031, 1035, 1036, 1045, 1050, 1059, 1065, 1083, 1102, 1104, 1106, 1113, 1114, 1116, 1118, 1120, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1189, 1190, 1191, 1193, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1221, 1228, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1249, 1254, 1255, 1256, 1257, 1258, 1259, 1262, 1263, 1272, 1282, 1289, 1295, 1302, 1308, 1315, 1318, 1328, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1424, 1437, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1450, 1455, 1456, 1457, 1458, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1480, 1487, 1492, 1497, 1503, 1513, 1520, 1526, 1529, 1531, 1537, 1538, 1540, 1545, 1548, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1640, 1641, 1642, 1643, 1644, 1655, 1667, 1671, 1687, 1706, 1729, 1730, 1731, 1734, 1735, 1736, 1738, 1739, 1741, 1760, 1766, 1772, 1782, 1791, 1797, 1802, 1811, 1820, 1826, 1830, 1836, 1842, 1846, 1852, 1858, 1862, 1868, 1874, 1878, 1886, 1892, 1898, 1903, 1910, 1914, 1929, 1945, 1953, 1957, 1961, 1970, 1974, 1976, 1978, 1979, 1982, 2025, 2027, 2032, 2036, 2043, 2048, 2055, 2063, 2069, 2073, 2076, 2084, 2087, 2091, 2097, 2100, 2104, 2112, 2115, 2124, 2132, 2136, 2142, 2146, 2153, 2155, 2162, 2170, 2177, 2181, 2185, 2195, 2199, 2201, 2208, 2212, 2214, 2220, 2226, 2232, 2236, 2240, 2241, 2244, 2246, 2252, 2256, 2258, 2277, 2285, 2287, 2290, 2389, 2399, 2403, 2413, 2427, 2431, 2441, 2445, 2455, 2459, 2469, 2487, 2494, 2501, 2502, 2503, 2504, 2513, 2517, 2526, 2530, 2539, 2543, 2552, 2565, 2578, 2582, 2591, 2595, 2604, 2608, 2617, 2621, 2630, 2634, 2643, 2647, 2656, 2660, 2669, 2673, 2682, 2686, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 2777, 2778, 2798, 2805, 2806, 2807, 2813, 2817, 2822, 2823, 2836, 2847, 2864, 2867, 2936, 2954, 2963, 2965, 2968, 2971, 2980, 2982, 2985, 2988, 2997, 2999, 3002, 3005, 3007, 3010, 3013, 3015, 3018, 3021, 3030, 3032, 3035, 3038, 3047, 3049, 3052, 3055, 3064, 3066, 3069, 3072, 3081, 3083, 3086, 3089, 3097, 3099, 3102, 3105, 3114, 3116, 3119, 3122, 3130, 3132, 3135, 3138, 3147, 3149, 3152, 3155, 3163, 3165, 3168, 3171, 3180, 3182, 3185, 3188, 3197, 3199, 3202, 3205, 3214, 3216, 3219, 3222, 3231, 3233, 3236, 3239, 3248, 3250, 3253, 3256, 3265, 3267, 3270, 3273, 3282, 3284, 3287, 3290, 3298, 3300, 3303, 3306, 3315, 3317, 3320, 3323, 3332, 3334, 3337, 3348, 3350, 3353, 3356, 3365, 3367, 3370, 3373, 3382, 3384, 3390, 3392, 3395, 3398, 3407, 3409, 3412, 3415, 3424, 3433, 3441, 3443, 3446, 3449, 3458, 3460, 3463, 3474, 3476, 3479, 3488, 3496, 3505, 3507, 3510, 3513, 3521, 3523, 3526, 3529, 3538, 3540, 3543, 3554, 3563, 3565, 3568, 3571, 3580, 3582, 3585, 3588, 3597, 3599, 3602, 3621, 3630, 3632, 3635, 3638, 3647, 3649, 3652, 3655, 3663, 3665, 3668, 3671, 3680, 3682, 3685, 3688, 3696, 3698, 3701, 3708, 3711, 3719, 3723, 3727, 3730, 3737, 3738, 3739, 3757, 3760, 3761, 3762, 3763, 3764, 3779, 3783, 3789, 3790, 3794, 3812, 3830, 3833, 3838, 3845, 3855, 3871, 3872, 3873, 3874, 3875, 3880, 3882, 3884, 3887, 3896, 3901, 3905, 3922, 3927, 3932, 3938, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3951, 3963, 3965, 3969, 3973, 3976, 3979, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3991, 3992, 3993, 3996, 3997, 3998, 3999, 4000, 4001, 4004, 4007, 4008, 4011, 4012, 4013, 4014, 4020, 4025, 4026, 4030, 4034, 4036, 4037, 4041, 4044, 4049, 4050, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4077, 4078, 4079, 4081, 4083, 4084, 4087, 4088, 4089, 4091, 4093, 4094, 4096, 4097, 4098, 4100, 4102, 4103, 4105, 4106, 4107, 4109, 4111, 4112, 4114, 4115, 4116, 4118, 4120, 4121, 4123, 4124, 4125, 4127, 4129, 4130, 4132, 4133, 4134, 4136, 4138, 4139, 4141, 4142, 4143, 4145, 4147, 4148, 4150, 4151, 4152, 4154, 4156, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4206, 4218, 4219, 4225, 4228, 4246, 4255, 4264, 4273, 4282, 4299, 4308, 4309, 4330, 4349, 4367, 4368, 4376, 4385, 4389, 4390, 4394, 4395, 4398, 4416, 4438, 4458, 4470, 4476, 4479, 4480, 4481, 4497, 4506, 4511, 4512, 4528, 4533, 4537, 4538, 4552, 4563, 4579, 4586, 4587, 4604, 4605, 4608, 4609, 4623, 4628, 4632, 4633, 4640, 4650, 4655, 4656, 4660, 4661, 4664, 4681, 4700, 4714, 4719, 4723, 4725, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4757, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4787, 4788, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4814, 4819, 4823, 4825, 4829, 4830, 4840, 4841, 4843, 4847, 4848, 4849, 4852, 4858, 4875, 4877, 4880, 4884, 4885, 4893, 4894, 4895, 4898, 4899, 4900, 4901, 4916, 4919, 4920, 4921, 4922, 4928, 4958, 4964, 4976, 5021, 5071, 5077, 5099, 5102, 5117, 5123, 5143, 5154, 5160, 5175, 5178, 5181, 5184, 5190, 5193, 5199, 5202, 5214, 5217, 5220, 5230, 5235, 5237, 5239, 5241, 5244, 5246, 5247, 5250, 5252, 5261, 5262, 5263, 5268, 5272, 5277, 5280, 5281, 5287, 5289, 5290, 5331, 5332, 5333, 5334, 5335, 5341, 5361], "def": [12, 25, 29, 31, 51, 53, 57, 64, 849, 877, 1644, 2798, 3899, 3906, 4026, 4182, 4206, 4254, 4272, 4287, 4900, 4921, 5077, 5143, 5275, 5338, 5339, 5341, 5342, 5345, 5355, 5359, 5372], "grover": [12, 64, 66, 75, 79, 86, 92, 93, 95, 98, 99, 100, 101, 110, 111, 113, 118, 123, 1388, 1475], "_oracle": [12, 64, 75, 79, 95, 113, 123, 1462, 5342, 5343], "(a": [12, 64, 157, 158, 198, 343, 344, 345, 369, 514, 515, 516, 528, 673, 674, 675, 850, 878, 1107, 1250, 1251, 1252, 2814, 2845, 2858, 2867, 2885, 3902, 3904, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4669, 4688, 4707, 5275, 5362, 5366], "->": [12, 48, 64, 931, 951, 964, 973, 980, 994, 1014, 1023, 1030, 1044, 1058, 1271, 1280, 1288, 1299, 1307, 1327, 1436, 1512, 1527, 1757, 1781, 1789, 1796, 1810, 1818, 1825, 1834, 1841, 1850, 1857, 1866, 1873, 1883, 2398, 2412, 2426, 2440, 2454, 2468, 2473, 2487, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2798, 2890, 3963, 4961, 5361], "_circuit": [12, 16, 33, 39, 44, 48, 51, 62, 64, 69, 136, 138, 181, 188, 190, 198, 357, 363, 369, 528, 1001, 1107, 1401, 1642, 1932, 2024, 3718, 3834, 4031, 4033, 4299, 4354, 4866, 5236, 5344, 5354, 5355, 5361], ".synth": [12, 64], "\u2500\u2500o": [12, 64], "little": [12, 64, 288, 334, 459, 505, 618, 664, 683, 1195, 1241, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1401, 1463, 1475, 1499, 1556, 1558, 3760, 4805], "-endian": [12, 64, 288, 334, 459, 505, 618, 664, 1195, 1241, 1401, 1463, 1913, 1943, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 3760, 4805], "ordering": [12, 48, 64, 1003, 1550, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 4393, 4439, 4513, 4519, 4539, 4614, 4634, 4659, 5123, 5268], "convention": [12, 64, 240, 252, 288, 334, 347, 411, 423, 459, 505, 518, 570, 582, 618, 664, 677, 1147, 1159, 1195, 1241, 1254, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1401, 1499, 1556, 1558, 1913, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 3766, 3769, 4200, 4299, 4354, 4595, 5284], "-most": [12, 1551, 4463, 4519, 4614, 4623, 4628], "most": [12, 28, 31, 35, 48, 53, 64, 66, 68, 98, 101, 105, 136, 140, 156, 186, 877, 918, 1373, 1398, 1934, 2024, 2060, 3736, 3757, 3796, 3905, 4182, 4299, 4463, 4760, 4803, 4815, 5014, 5071, 5080, 5232, 5233, 5262, 5286, 5288, 5289, 5331, 5333, 5334, 5341, 5350], "significant": [12, 31, 64, 255, 256, 426, 427, 585, 586, 1162, 1163, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1398, 1470, 1499, 1556, 1558, 1935, 1937, 4048, 4182, 4519, 4614, 4973, 5350], "right": [12, 35, 64, 186, 187, 188, 190, 210, 235, 238, 347, 362, 363, 381, 406, 409, 518, 540, 565, 568, 677, 973, 1023, 1119, 1143, 1145, 1254, 1280, 1299, 1489, 1494, 1501, 1527, 1544, 1547, 1551, 1556, 1558, 1586, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2181, 2236, 2814, 2816, 2860, 3760, 4028, 4031, 4193, 4194, 4196, 4197, 4198, 4200, 4201, 4212, 4301, 4304, 4318, 4321, 4335, 4337, 4340, 4356, 4359, 4404, 4407, 4421, 4424, 4426, 4429, 4444, 4446, 4449, 4463, 4467, 4471, 4519, 4554, 4557, 4571, 4574, 4614, 4623, 4628, 4669, 4672, 4688, 4691, 4722, 4805, 4893, 4958, 4988, 5178, 5195, 5281, 5331, 5332, 5333, 5334, 5338, 5345, 5350, 5354, 5357, 5361, 5362, 5364, 5367, 5368, 5372], "least": [12, 25, 35, 44, 57, 64, 110, 234, 405, 564, 861, 1142, 1470, 1700, 1815, 2001, 2018, 3779, 3789, 3833, 4000, 4013, 4519, 4530, 4540, 4614, 4625, 4635, 5169, 5241, 5350], "tweedledum": [12, 64, 1293, 1313, 1462], "++": [12, 53, 57, 64, 5214, 5217], "header": [12, 16, 64, 193, 364, 523, 916, 917, 918, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 2915, 2924, 2933, 3730, 3756, 3805, 4252, 4258, 4270, 4276, 4285, 4288, 4291, 4802, 5239, 5244], "-only": [12, 53, 64, 4192], "implements": [12, 31, 64, 69, 97, 110, 118, 276, 447, 606, 1183, 1377, 1388, 1399, 1448, 1456, 1465, 1468, 1472, 1475, 1478, 1479, 1499, 1526, 1642, 1643, 3983, 4609, 4834, 4861, 5111, 5123, 5154, 5160], "large": [12, 29, 35, 48, 64, 103, 861, 877, 1475, 1916, 1966, 2024, 2032, 2050, 2083, 2095, 2109, 2129, 2150, 2170, 2192, 2194, 2201, 2204, 2205, 2214, 2217, 2218, 2226, 2229, 2230, 2244, 2248, 2249, 2250, 2258, 2261, 2263, 2264, 2323, 2349, 4398, 4463, 4484, 4515, 4516, 4541, 4542, 4636, 4637, 4664, 4964], "mapping": [12, 16, 35, 48, 53, 64, 66, 86, 198, 335, 336, 369, 506, 507, 528, 665, 666, 1000, 1072, 1083, 1088, 1096, 1107, 1242, 1243, 1399, 1400, 1450, 1563, 1567, 1642, 1643, 1644, 1648, 1649, 1706, 1746, 1748, 1750, 1752, 1928, 1929, 1934, 1935, 1937, 2183, 2285, 2286, 2287, 2288, 2289, 2889, 2964, 2965, 2966, 2967, 2981, 2982, 2983, 2984, 2998, 2999, 3000, 3001, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3031, 3032, 3033, 3034, 3048, 3049, 3050, 3051, 3065, 3066, 3067, 3068, 3082, 3083, 3084, 3085, 3098, 3099, 3100, 3101, 3115, 3116, 3117, 3118, 3131, 3132, 3133, 3134, 3148, 3149, 3150, 3151, 3164, 3165, 3166, 3167, 3181, 3182, 3183, 3184, 3198, 3199, 3200, 3201, 3215, 3216, 3217, 3218, 3232, 3233, 3234, 3235, 3249, 3250, 3251, 3252, 3266, 3267, 3268, 3269, 3283, 3284, 3285, 3286, 3299, 3300, 3301, 3302, 3316, 3317, 3318, 3319, 3333, 3334, 3335, 3336, 3349, 3350, 3351, 3352, 3366, 3367, 3368, 3369, 3382, 3383, 3384, 3385, 3386, 3391, 3392, 3393, 3394, 3408, 3409, 3410, 3411, 3442, 3443, 3444, 3445, 3459, 3460, 3461, 3462, 3475, 3476, 3477, 3478, 3506, 3507, 3508, 3509, 3522, 3523, 3524, 3525, 3539, 3540, 3541, 3542, 3564, 3565, 3566, 3567, 3581, 3582, 3583, 3584, 3598, 3599, 3600, 3601, 3631, 3632, 3633, 3634, 3648, 3649, 3650, 3651, 3664, 3665, 3666, 3667, 3681, 3682, 3683, 3684, 3697, 3698, 3699, 3700, 3982, 3983, 3995, 4010, 4032, 4084, 4218, 4219, 4712, 4830, 4857, 4879, 4884, 4885, 4901, 4922, 4964, 5014, 5017, 5080, 5123, 5146, 5151, 5157, 5175, 5178, 5214, 5217, 5227, 5230, 5231, 5234, 5238, 5250, 5275, 5355], "relies": [12, 64, 118, 683, 5014], "dependencies": [12, 53, 64, 1722, 5282], "logic": [12, 48, 64, 234, 405, 564, 1142, 1293, 1296, 1313, 1371, 1372, 1388, 1526, 1530, 1815, 1831, 1847, 1863, 2025, 2055, 2063, 2068, 2132, 5099], "moment": [12, 64, 165, 4148], "compilers": 12, ".types": [12, 64], ".int": [12, 64], "parse": [12, 39, 64, 1317, 1645, 3901, 4236, 5054], "include": [12, 25, 28, 31, 35, 39, 51, 53, 57, 64, 147, 165, 172, 235, 279, 280, 281, 406, 450, 451, 452, 565, 609, 610, 611, 920, 939, 1001, 1102, 1143, 1186, 1187, 1188, 1259, 1448, 1458, 1472, 1503, 1693, 1710, 1994, 2012, 2016, 2024, 2032, 2162, 2808, 2813, 2848, 2865, 3719, 3782, 3793, 3811, 3838, 3923, 3996, 3997, 3998, 4011, 4182, 4229, 4887, 5011, 5033, 5175, 5281, 5340], "hints": [12, 64, 936, 1296], "sum": [12, 64, 103, 104, 136, 144, 165, 181, 183, 354, 1382, 1383, 1384, 1385, 1386, 1393, 1399, 1448, 1468, 1470, 1472, 1480, 1499, 1501, 1550, 1551, 1899, 1923, 1924, 1954, 1970, 1972, 1976, 1978, 1983, 1990, 2024, 2032, 2033, 2056, 2059, 2068, 2070, 2085, 2098, 2110, 2113, 2130, 2132, 2133, 2152, 2163, 2165, 2166, 2167, 2178, 2196, 2209, 2221, 2233, 2253, 2323, 2349, 2847, 2856, 2857, 2871, 2887, 4316, 4335, 4402, 4589, 4722, 4739, 4743, 4744, 4747, 4769, 4819, 4825, 4964, 5077, 5108, 5143, 5178, 5331, 5333, 5334, 5341, 5349, 5362, 5370], "means": [12, 16, 31, 39, 48, 53, 64, 86, 179, 798, 841, 973, 1023, 1280, 1299, 1527, 1644, 1722, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2218, 2223, 2237, 2798, 2842, 3738, 3796, 3880, 3884, 3909, 4239, 4240, 4241, 4519, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "operate": [12, 31, 35, 64, 3970], "level": [12, 16, 23, 24, 28, 31, 35, 39, 48, 64, 70, 110, 113, 119, 169, 231, 402, 561, 683, 684, 693, 694, 701, 702, 709, 710, 717, 718, 725, 727, 734, 736, 743, 745, 752, 754, 761, 762, 773, 774, 781, 782, 789, 791, 798, 799, 806, 807, 814, 815, 822, 823, 832, 833, 834, 841, 842, 849, 853, 861, 862, 869, 870, 877, 880, 888, 889, 896, 897, 904, 905, 1139, 1641, 1644, 3708, 3730, 3782, 3793, 3796, 3817, 3834, 3838, 3851, 3864, 3881, 3905, 3920, 4041, 4241, 4255, 4264, 4273, 4813, 5230, 5231, 5232, 5233, 5234, 5355], "decorator": [12, 53, 5260, 5275], "returns": [12, 16, 25, 31, 62, 64, 66, 75, 84, 88, 97, 110, 118, 120, 128, 130, 133, 140, 147, 151, 156, 159, 160, 162, 165, 169, 172, 176, 186, 193, 202, 210, 211, 238, 266, 267, 277, 285, 321, 334, 347, 364, 373, 381, 382, 409, 437, 438, 448, 456, 492, 505, 518, 523, 532, 540, 541, 568, 596, 597, 607, 615, 651, 664, 677, 683, 693, 701, 702, 709, 717, 725, 734, 743, 752, 761, 773, 781, 782, 789, 798, 806, 814, 822, 833, 841, 849, 852, 861, 869, 870, 877, 888, 896, 904, 975, 1025, 1063, 1067, 1083, 1096, 1099, 1100, 1102, 1111, 1119, 1120, 1145, 1173, 1174, 1184, 1192, 1228, 1241, 1254, 1282, 1293, 1296, 1302, 1311, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1406, 1407, 1410, 1441, 1446, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1520, 1531, 1537, 1550, 1551, 1553, 1555, 1561, 1563, 1565, 1567, 1641, 1654, 1660, 1663, 1667, 1669, 1670, 1671, 1672, 1683, 1691, 1694, 1696, 1697, 1712, 1713, 1719, 1720, 1728, 1729, 1740, 1742, 1743, 1749, 1760, 1786, 1791, 1820, 1836, 1852, 1868, 1905, 1906, 1907, 1908, 1912, 1915, 1917, 1926, 1929, 1947, 1958, 1959, 1963, 1965, 1967, 1976, 1978, 1988, 2000, 2001, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2024, 2028, 2030, 2031, 2032, 2038, 2039, 2042, 2046, 2049, 2051, 2052, 2053, 2060, 2061, 2062, 2064, 2065, 2067, 2074, 2075, 2078, 2080, 2081, 2082, 2088, 2089, 2094, 2096, 2101, 2102, 2104, 2107, 2108, 2110, 2111, 2112, 2116, 2117, 2120, 2123, 2124, 2128, 2130, 2131, 2137, 2138, 2141, 2144, 2147, 2148, 2149, 2151, 2152, 2153, 2155, 2169, 2170, 2182, 2187, 2188, 2198, 2201, 2206, 2211, 2214, 2218, 2223, 2224, 2226, 2237, 2238, 2239, 2243, 2244, 2247, 2255, 2258, 2280, 2282, 2291, 2823, 2865, 2867, 2890, 2891, 2892, 2912, 2921, 2930, 2956, 2958, 2969, 2973, 2975, 2986, 2990, 2992, 3003, 3011, 3019, 3023, 3025, 3036, 3040, 3042, 3053, 3057, 3059, 3070, 3074, 3076, 3087, 3092, 3103, 3107, 3109, 3120, 3125, 3136, 3140, 3142, 3153, 3158, 3169, 3173, 3175, 3186, 3190, 3192, 3203, 3207, 3209, 3220, 3224, 3226, 3237, 3241, 3243, 3254, 3258, 3260, 3271, 3275, 3277, 3288, 3293, 3304, 3308, 3310, 3321, 3325, 3327, 3338, 3343, 3354, 3358, 3360, 3371, 3375, 3377, 3388, 3396, 3400, 3402, 3413, 3436, 3447, 3451, 3453, 3464, 3469, 3480, 3498, 3500, 3511, 3516, 3527, 3531, 3533, 3544, 3556, 3558, 3569, 3573, 3575, 3586, 3590, 3592, 3603, 3608, 3616, 3623, 3625, 3636, 3640, 3642, 3653, 3658, 3669, 3673, 3675, 3686, 3691, 3702, 3704, 3718, 3725, 3730, 3757, 3834, 3876, 3889, 3894, 3906, 3913, 3923, 3932, 3963, 3975, 3976, 3985, 3993, 4001, 4002, 4008, 4014, 4015, 4026, 4048, 4075, 4084, 4086, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4182, 4205, 4206, 4208, 4211, 4214, 4217, 4231, 4235, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4473, 4480, 4487, 4500, 4512, 4525, 4529, 4530, 4538, 4540, 4563, 4587, 4620, 4624, 4625, 4633, 4635, 4681, 4700, 4724, 4803, 4839, 4843, 4857, 4858, 4868, 4883, 4888, 4889, 4890, 4891, 4922, 4930, 4966, 5068, 5091, 5146, 5226, 5227, 5237, 5238, 5239, 5241, 5244, 5246, 5247, 5250, 5270, 5274, 5335, 5341, 5355, 5361], "none": [16, 29, 31, 35, 39, 51, 53, 64, 66, 69, 75, 76, 79, 80, 82, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 110, 113, 114, 115, 118, 120, 123, 124, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 141, 147, 148, 150, 156, 161, 162, 163, 165, 166, 168, 169, 172, 173, 175, 186, 188, 190, 192, 194, 195, 196, 197, 198, 204, 205, 206, 209, 211, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 235, 240, 246, 251, 252, 253, 255, 256, 260, 262, 264, 276, 277, 285, 291, 293, 302, 306, 307, 309, 322, 323, 334, 335, 336, 346, 347, 349, 363, 365, 366, 367, 368, 369, 375, 376, 377, 380, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 411, 417, 422, 423, 424, 426, 427, 431, 433, 435, 447, 448, 456, 462, 464, 473, 477, 478, 480, 493, 494, 505, 506, 507, 517, 518, 520, 524, 525, 526, 527, 528, 534, 535, 536, 539, 541, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 565, 570, 576, 581, 582, 583, 585, 586, 590, 592, 594, 606, 607, 615, 621, 623, 632, 636, 637, 639, 652, 653, 664, 665, 666, 676, 677, 679, 683, 686, 687, 689, 696, 704, 709, 712, 717, 720, 729, 738, 747, 756, 766, 773, 776, 784, 793, 798, 801, 806, 809, 814, 817, 825, 830, 831, 833, 836, 841, 844, 849, 850, 852, 855, 856, 861, 864, 869, 872, 877, 878, 882, 883, 888, 891, 896, 899, 907, 913, 919, 920, 923, 928, 938, 939, 942, 943, 948, 956, 961, 970, 975, 976, 991, 1000, 1002, 1006, 1011, 1020, 1025, 1026, 1036, 1041, 1046, 1050, 1055, 1063, 1064, 1102, 1103, 1104, 1105, 1106, 1107, 1113, 1114, 1115, 1118, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1143, 1147, 1153, 1158, 1159, 1160, 1162, 1163, 1167, 1169, 1171, 1183, 1184, 1192, 1198, 1200, 1209, 1213, 1214, 1216, 1229, 1230, 1241, 1242, 1243, 1253, 1254, 1256, 1259, 1262, 1263, 1268, 1277, 1282, 1283, 1293, 1296, 1302, 1303, 1313, 1318, 1324, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1376, 1377, 1379, 1381, 1388, 1389, 1390, 1392, 1394, 1398, 1399, 1401, 1406, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1427, 1433, 1441, 1442, 1444, 1447, 1448, 1450, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1509, 1517, 1519, 1520, 1522, 1524, 1526, 1530, 1531, 1533, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1551, 1552, 1553, 1555, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1640, 1641, 1642, 1643, 1644, 1648, 1649, 1655, 1667, 1673, 1674, 1679, 1693, 1711, 1714, 1715, 1719, 1732, 1746, 1748, 1750, 1752, 1753, 1760, 1761, 1772, 1777, 1791, 1792, 1802, 1807, 1820, 1821, 1836, 1837, 1852, 1853, 1868, 1869, 1879, 1886, 1887, 1903, 1906, 1926, 1927, 1928, 1929, 1934, 1952, 1957, 1959, 1970, 1987, 1994, 2003, 2007, 2008, 2010, 2011, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2022, 2027, 2028, 2032, 2036, 2039, 2054, 2064, 2073, 2075, 2087, 2089, 2091, 2100, 2102, 2112, 2115, 2117, 2126, 2136, 2138, 2155, 2160, 2162, 2166, 2167, 2168, 2176, 2177, 2181, 2182, 2195, 2198, 2211, 2224, 2232, 2236, 2238, 2251, 2252, 2255, 2265, 2267, 2269, 2272, 2277, 2280, 2285, 2290, 2308, 2310, 2315, 2316, 2318, 2321, 2322, 2323, 2328, 2331, 2333, 2337, 2340, 2343, 2349, 2354, 2357, 2359, 2363, 2368, 2370, 2372, 2376, 2381, 2383, 2385, 2389, 2394, 2395, 2408, 2409, 2422, 2423, 2436, 2437, 2450, 2451, 2464, 2465, 2473, 2482, 2486, 2487, 2489, 2496, 2498, 2500, 2502, 2503, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2634, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2780, 2784, 2785, 2787, 2798, 2801, 2808, 2813, 2814, 2816, 2820, 2821, 2823, 2842, 2847, 2848, 2850, 2851, 2852, 2853, 2855, 2856, 2857, 2862, 2863, 2864, 2865, 2866, 2886, 2887, 2901, 2905, 2907, 2908, 2909, 2912, 2918, 2921, 2927, 2930, 2936, 2963, 2968, 2980, 2985, 2997, 3002, 3005, 3010, 3013, 3018, 3030, 3035, 3047, 3052, 3064, 3069, 3081, 3086, 3097, 3102, 3114, 3119, 3130, 3135, 3147, 3152, 3163, 3168, 3180, 3185, 3197, 3202, 3214, 3219, 3231, 3236, 3248, 3253, 3265, 3270, 3282, 3287, 3298, 3303, 3315, 3320, 3332, 3337, 3348, 3353, 3365, 3370, 3382, 3387, 3390, 3395, 3407, 3412, 3441, 3446, 3458, 3463, 3474, 3479, 3483, 3484, 3486, 3487, 3505, 3510, 3521, 3526, 3538, 3543, 3563, 3568, 3580, 3585, 3597, 3602, 3630, 3635, 3647, 3652, 3663, 3668, 3680, 3685, 3696, 3701, 3705, 3706, 3708, 3721, 3722, 3723, 3725, 3727, 3728, 3730, 3737, 3738, 3739, 3746, 3747, 3748, 3749, 3751, 3752, 3754, 3756, 3757, 3760, 3761, 3762, 3763, 3764, 3766, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3789, 3790, 3791, 3792, 3793, 3796, 3804, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3816, 3817, 3819, 3821, 3823, 3824, 3830, 3832, 3833, 3835, 3838, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3857, 3860, 3862, 3863, 3864, 3865, 3868, 3874, 3875, 3877, 3878, 3880, 3881, 3882, 3884, 3885, 3886, 3887, 3888, 3890, 3891, 3894, 3896, 3905, 3909, 3911, 3912, 3913, 3916, 3918, 3919, 3920, 3921, 3922, 3926, 3929, 3931, 3932, 3942, 3943, 3945, 3954, 3957, 3963, 3965, 3973, 3976, 3983, 3984, 3992, 3993, 3994, 3999, 4000, 4001, 4003, 4004, 4007, 4008, 4009, 4012, 4013, 4014, 4016, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4036, 4039, 4040, 4041, 4045, 4046, 4047, 4051, 4052, 4053, 4054, 4056, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4121, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4139, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4157, 4158, 4161, 4162, 4163, 4166, 4167, 4168, 4171, 4172, 4173, 4176, 4177, 4178, 4181, 4182, 4183, 4186, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4219, 4225, 4229, 4234, 4239, 4240, 4244, 4252, 4255, 4258, 4261, 4264, 4270, 4273, 4276, 4279, 4282, 4285, 4294, 4297, 4298, 4299, 4301, 4304, 4306, 4307, 4309, 4316, 4318, 4321, 4323, 4324, 4325, 4326, 4327, 4328, 4330, 4335, 4337, 4340, 4342, 4343, 4344, 4345, 4346, 4347, 4349, 4356, 4359, 4364, 4366, 4368, 4376, 4379, 4380, 4381, 4383, 4387, 4388, 4389, 4390, 4392, 4394, 4395, 4396, 4398, 4400, 4402, 4404, 4407, 4409, 4410, 4411, 4412, 4413, 4414, 4416, 4424, 4426, 4429, 4430, 4432, 4434, 4435, 4436, 4438, 4444, 4446, 4449, 4451, 4452, 4453, 4454, 4455, 4456, 4458, 4463, 4465, 4466, 4467, 4471, 4473, 4475, 4478, 4480, 4487, 4489, 4492, 4494, 4498, 4500, 4502, 4505, 4510, 4512, 4519, 4525, 4529, 4532, 4536, 4538, 4552, 4554, 4557, 4559, 4560, 4561, 4563, 4568, 4571, 4574, 4578, 4581, 4582, 4585, 4587, 4588, 4595, 4598, 4599, 4601, 4602, 4603, 4604, 4605, 4607, 4608, 4609, 4610, 4614, 4620, 4624, 4627, 4631, 4633, 4640, 4643, 4644, 4645, 4646, 4648, 4653, 4654, 4655, 4656, 4658, 4660, 4661, 4662, 4664, 4667, 4669, 4672, 4674, 4675, 4676, 4677, 4678, 4679, 4681, 4686, 4688, 4691, 4693, 4694, 4695, 4696, 4697, 4698, 4700, 4705, 4712, 4714, 4716, 4720, 4726, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4751, 4752, 4754, 4755, 4763, 4765, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4777, 4778, 4784, 4785, 4787, 4788, 4789, 4791, 4792, 4799, 4800, 4802, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4819, 4823, 4825, 4834, 4839, 4861, 4873, 4875, 4877, 4878, 4879, 4880, 4886, 4894, 4895, 4896, 4898, 4899, 4900, 4901, 4904, 4906, 4907, 4912, 4913, 4915, 4916, 4917, 4919, 4920, 4921, 4922, 4923, 4924, 4926, 4930, 4938, 4964, 4976, 5014, 5068, 5077, 5143, 5151, 5157, 5193, 5202, 5211, 5226, 5227, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5238, 5239, 5240, 5244, 5245, 5250, 5252, 5254, 5255, 5257, 5262, 5268, 5270, 5271, 5272, 5274, 5275, 5278, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5296, 5298, 5299, 5304, 5305, 5308, 5310, 5311, 5316, 5317, 5320, 5322, 5323, 5328, 5329, 5331, 5333, 5334, 5335, 5337, 5339, 5340, 5343, 5355], "_properties": [16, 31, 64, 1644, 4901, 4922, 4923, 5230], "initial": [16, 48, 64, 88, 92, 109, 117, 147, 155, 162, 163, 165, 172, 186, 235, 406, 565, 683, 687, 693, 694, 696, 701, 704, 709, 712, 717, 720, 725, 729, 734, 738, 743, 747, 752, 756, 761, 765, 766, 773, 776, 781, 784, 789, 793, 798, 801, 806, 809, 814, 817, 822, 825, 832, 833, 836, 841, 844, 849, 850, 851, 855, 856, 861, 864, 869, 872, 877, 878, 879, 882, 883, 888, 891, 896, 899, 904, 907, 1143, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1644, 1662, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2323, 2349, 2363, 2376, 2801, 2909, 2914, 2918, 2923, 2927, 2932, 3708, 3870, 3993, 4039, 4233, 4432, 4513, 4539, 4634, 4839, 4901, 4915, 4964, 5014, 5117, 5120, 5175, 5178, 5217, 5230, 5231, 5232, 5233, 5234, 5236, 5237, 5250, 5281, 5340, 5355, 5364], "_layout": [16, 44, 48, 64, 235, 406, 565, 1143, 1644, 3708, 4432, 4882, 4901, 4961, 4964, 5014, 5017, 5117, 5175, 5178, 5230, 5237, 5250, 5281, 5341, 5345, 5355, 5372], "seed": [16, 64, 683, 761, 849, 877, 913, 1456, 1457, 1477, 1555, 1640, 1641, 1644, 2915, 2924, 2933, 2936, 3708, 3838, 4255, 4273, 4388, 4394, 4395, 4396, 4603, 4607, 4608, 4609, 4610, 4654, 4658, 4660, 4661, 4662, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4901, 4976, 5175, 5178, 5190, 5214, 5217, 5230, 5235, 5237, 5250, 5337, 5339, 5340, 5341, 5355, 5362, 5364], "_transpiler": [16, 64, 1644, 3708, 4031, 4056, 4901, 5230, 5250, 5337, 5339, 5340, 5355, 5362], "_level": [16, 24, 48, 56, 57, 64, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904, 1641, 1644, 2337, 3708, 3730, 3757, 3761, 3777, 3782, 3789, 3793, 3796, 3838, 3851, 3864, 3920, 4020, 4024, 4032, 4056, 4255, 4273, 4803, 4806, 5230, 5250, 5286, 5355], "pass": [16, 25, 31, 35, 51, 53, 64, 172, 197, 231, 368, 402, 527, 561, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 916, 917, 1063, 1106, 1139, 1453, 1644, 1715, 1948, 1970, 1983, 2282, 2283, 2291, 2292, 2798, 2799, 2800, 2805, 2842, 2843, 2844, 2916, 2925, 2934, 2943, 2952, 2961, 2969, 2970, 2978, 2986, 2987, 2995, 3003, 3004, 3011, 3012, 3019, 3020, 3028, 3036, 3037, 3045, 3053, 3054, 3062, 3070, 3071, 3079, 3087, 3088, 3095, 3103, 3104, 3112, 3120, 3121, 3128, 3136, 3137, 3145, 3153, 3154, 3161, 3169, 3170, 3178, 3186, 3187, 3195, 3203, 3204, 3212, 3220, 3221, 3229, 3237, 3238, 3246, 3254, 3255, 3263, 3271, 3272, 3280, 3288, 3289, 3296, 3304, 3305, 3313, 3321, 3322, 3330, 3338, 3339, 3346, 3354, 3355, 3363, 3371, 3372, 3380, 3388, 3389, 3396, 3397, 3405, 3413, 3414, 3422, 3431, 3439, 3447, 3448, 3456, 3464, 3465, 3472, 3480, 3481, 3494, 3503, 3511, 3512, 3519, 3527, 3528, 3536, 3544, 3545, 3552, 3561, 3569, 3570, 3578, 3586, 3587, 3595, 3603, 3604, 3611, 3619, 3628, 3636, 3637, 3645, 3653, 3654, 3661, 3669, 3670, 3678, 3686, 3687, 3694, 3702, 3703, 3708, 3731, 3897, 3899, 3906, 3923, 4001, 4014, 4182, 4222, 4568, 4717, 4831, 4832, 4833, 4868, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4941, 4942, 4943, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4959, 4960, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4974, 4976, 4977, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5005, 5006, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 5016, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5052, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5102, 5103, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 5113, 5114, 5115, 5116, 5117, 5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5131, 5132, 5134, 5135, 5136, 5137, 5138, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5148, 5149, 5151, 5153, 5155, 5157, 5159, 5161, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5217, 5218, 5220, 5221, 5223, 5224, 5225, 5226, 5230, 5235, 5237, 5250, 5257, 5283, 5289, 5355, 5357], "_manager": [16, 48, 64, 3834, 4902, 5250, 5257, 5355], "qobj": [16, 31, 45, 916, 917, 918, 1020, 1453, 1641, 1815, 1831, 1847, 1863, 1926, 2323, 2333, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2473, 2481, 2485, 2487, 2808, 2817, 2848, 2857, 2914, 2915, 2918, 2923, 2924, 2932, 2933, 3718, 3730, 3756, 3796, 3810, 3838, 3848, 3860, 3864, 3929, 4252, 4254, 4255, 4257, 4258, 4261, 4263, 4270, 4272, 4273, 4275, 4276, 4279, 4281, 4286, 4287, 4288, 4290, 4291, 4293, 4802, 5250, 5251, 5253, 5352], "_id": [16, 25, 31, 57, 64, 916, 917, 1641, 1687, 1719, 1730, 1731, 1734, 1735, 1736, 1738, 1739, 1741, 1898, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2297, 2308, 2473, 2486, 2487, 2500, 2503, 2894, 2905, 3718, 3723, 3729, 3730, 3736, 3739, 3741, 3756, 3777, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3788, 3789, 3790, 3792, 3793, 3794, 3796, 3824, 3830, 3834, 3837, 3838, 3852, 3876, 3877, 3878, 3879, 3880, 3883, 3885, 3886, 3887, 3909, 3922, 3960, 4252, 4270, 4285, 4802, 5047, 5250], "_header": [16, 64, 916, 917, 918, 1641, 3838], "memory": [16, 31, 35, 39, 48, 64, 130, 683, 798, 913, 1641, 2323, 2349, 2363, 2376, 2909, 2915, 2918, 2924, 2927, 3730, 3757, 3761, 3838, 3873, 3932, 3963, 3976, 4069, 4071, 4075, 4182, 4218, 4255, 4264, 4273, 4282, 4515, 4516, 4541, 4542, 4591, 4636, 4637, 4751, 4803, 4806, 4811, 4813, 4958, 5220, 5339, 5353, 5364, 5369], "max": [16, 29, 31, 51, 64, 75, 101, 147, 165, 172, 685, 690, 695, 698, 703, 706, 709, 711, 714, 719, 722, 725, 728, 731, 734, 737, 740, 743, 746, 749, 752, 755, 758, 761, 764, 770, 775, 778, 783, 786, 789, 792, 795, 798, 800, 803, 808, 811, 816, 819, 824, 827, 835, 838, 841, 843, 846, 850, 851, 854, 858, 861, 863, 866, 871, 874, 878, 879, 881, 885, 888, 890, 893, 896, 898, 901, 906, 909, 913, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1399, 1410, 1447, 1457, 1458, 1472, 1477, 1555, 1640, 1641, 2285, 2311, 2323, 2337, 2349, 2363, 2376, 2909, 2918, 2927, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3730, 3838, 3887, 3888, 3922, 3932, 3963, 3976, 4219, 4255, 4273, 4481, 4715, 4760, 4810, 4894, 4895, 4899, 4916, 4920, 4964, 5003, 5175, 5178, 5214, 5226, 5235, 5237, 5250, 5280, 5341], "_credits": [16, 64, 913, 1641, 4255, 4273, 4810, 5250], "_los": [16, 1641, 3730, 3838], "_meas": [16, 63, 64, 1641, 5361, 5366], "_lo": [16, 1641, 2337, 2862, 2863, 2865, 3730, 3838, 3963, 3966, 4255, 4261, 4273, 4279], "_range": [16, 64, 1641, 3708, 3730, 3838, 3932, 3963, 3976, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4255, 4273, 5331, 5333, 5334, 5352], "meas": [16, 31, 33, 54, 64, 1067, 1641, 1642, 1643, 2190, 2285, 2337, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3730, 3757, 3761, 3838, 3963, 3973, 4020, 4042, 4218, 4255, 4261, 4273, 4279, 4803, 4806, 4814, 5347, 5348, 5349, 5359, 5366], "_return": [16, 64, 1641, 2337, 3730, 3757, 3761, 3838, 4255, 4273, 4803, 4806, 4813], "_slots": [16, 64, 3730, 3761, 4255, 4273, 4751, 4806], "_slot": [16, 35, 64, 1641, 3730, 3761, 3838, 4075, 4255, 4264, 4806, 5357], "_size": [16, 29, 39, 64, 235, 406, 565, 761, 1143, 1641, 2323, 2337, 2349, 2363, 2376, 3730, 3761, 3838, 4255, 4806, 5003, 5280, 5281, 5287, 5289, 5331, 5333, 5334], "rep": [16, 64, 162, 1444, 1538, 1641, 3708, 3730, 3838, 3932, 3963, 3976, 4255, 4273], "_time": [16, 31, 64, 193, 364, 523, 1641, 2323, 2349, 3708, 3730, 3830, 3838, 3887, 3888, 3922, 3993, 3994, 4004, 4027, 4028, 4029, 4075, 4081, 4084, 4091, 4094, 4100, 4103, 4109, 4112, 4118, 4121, 4127, 4130, 4136, 4139, 4145, 4148, 4154, 4219, 4255, 5023, 5337, 5340, 5361, 5365, 5369], "_delay": [16, 64, 849, 877, 1641, 3708, 3730, 3932, 3976, 4255, 4273, 5024], "parameter": [16, 25, 30, 31, 48, 53, 64, 88, 104, 116, 117, 138, 147, 149, 150, 151, 165, 167, 168, 169, 172, 174, 175, 176, 195, 198, 200, 235, 240, 259, 260, 261, 326, 327, 335, 336, 366, 369, 371, 406, 411, 430, 431, 432, 497, 498, 506, 507, 525, 528, 530, 565, 570, 589, 590, 591, 656, 657, 665, 666, 683, 693, 761, 773, 849, 850, 877, 878, 904, 913, 934, 935, 954, 955, 956, 968, 969, 983, 985, 997, 999, 1006, 1018, 1019, 1033, 1035, 1048, 1049, 1061, 1062, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1087, 1088, 1092, 1096, 1101, 1102, 1104, 1107, 1109, 1143, 1147, 1166, 1167, 1168, 1233, 1234, 1242, 1243, 1275, 1276, 1292, 1293, 1295, 1312, 1313, 1315, 1318, 1330, 1331, 1342, 1360, 1362, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1405, 1407, 1410, 1439, 1440, 1441, 1447, 1449, 1450, 1455, 1456, 1457, 1458, 1462, 1471, 1475, 1477, 1480, 1503, 1515, 1516, 1526, 1529, 1537, 1550, 1555, 1563, 1567, 1641, 1644, 1648, 1649, 1655, 1753, 1768, 1771, 1772, 1784, 1785, 1799, 1801, 1813, 1814, 1828, 1830, 1844, 1846, 1860, 1862, 1876, 1878, 1894, 1897, 1898, 1901, 1928, 1929, 1948, 1956, 2001, 2003, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2016, 2018, 2019, 2024, 2035, 2072, 2135, 2154, 2162, 2180, 2235, 2265, 2267, 2269, 2271, 2272, 2274, 2333, 2359, 2372, 2385, 2401, 2402, 2415, 2416, 2429, 2430, 2443, 2444, 2445, 2457, 2458, 2459, 2471, 2472, 2515, 2516, 2528, 2529, 2541, 2542, 2554, 2555, 2567, 2568, 2580, 2581, 2593, 2594, 2606, 2607, 2619, 2620, 2632, 2633, 2645, 2646, 2658, 2659, 2671, 2672, 2684, 2685, 2697, 2698, 2710, 2711, 2723, 2724, 2736, 2737, 2749, 2750, 2762, 2763, 2775, 2776, 2824, 2825, 2830, 2837, 2838, 2845, 2847, 2852, 2858, 2859, 2878, 3723, 3730, 3738, 3739, 3779, 3789, 3838, 3876, 3887, 3888, 3889, 3896, 3909, 3923, 3926, 3930, 3983, 3995, 4002, 4008, 4010, 4015, 4032, 4084, 4086, 4148, 4157, 4159, 4162, 4164, 4167, 4169, 4172, 4174, 4179, 4182, 4184, 4224, 4231, 4241, 4246, 4255, 4273, 4421, 4473, 4500, 4847, 4848, 4873, 4875, 4895, 4916, 4922, 4923, 4930, 5011, 5024, 5096, 5129, 5134, 5226, 5236, 5237, 5239, 5240, 5242, 5243, 5244, 5245, 5248, 5249, 5250, 5281, 5352, 5356, 5361, 5362, 5366, 5367], "_binds": [16, 64, 913, 1641, 2333, 2359, 2372, 2385, 3730, 3838, 4273], "false": [16, 31, 39, 51, 53, 56, 64, 66, 71, 72, 83, 93, 97, 99, 101, 105, 107, 111, 116, 119, 120, 121, 127, 132, 135, 142, 147, 150, 151, 153, 157, 164, 165, 168, 169, 171, 172, 175, 176, 178, 187, 198, 211, 235, 251, 252, 259, 260, 261, 266, 269, 275, 277, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 324, 325, 328, 334, 342, 369, 382, 406, 422, 423, 430, 431, 432, 437, 440, 446, 448, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 496, 499, 505, 513, 528, 541, 565, 581, 582, 589, 590, 591, 596, 599, 605, 607, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 654, 655, 658, 664, 672, 683, 709, 717, 761, 806, 814, 833, 850, 861, 869, 877, 878, 896, 930, 950, 963, 978, 993, 1004, 1013, 1028, 1036, 1043, 1057, 1107, 1120, 1143, 1158, 1159, 1166, 1167, 1168, 1173, 1176, 1182, 1184, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1231, 1232, 1235, 1241, 1249, 1263, 1270, 1286, 1293, 1305, 1313, 1318, 1326, 1376, 1377, 1378, 1379, 1388, 1398, 1401, 1424, 1435, 1441, 1442, 1443, 1447, 1450, 1456, 1463, 1466, 1468, 1471, 1472, 1474, 1503, 1511, 1526, 1537, 1563, 1567, 1640, 1641, 1667, 1689, 1706, 1710, 1763, 1780, 1786, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 1903, 1916, 1917, 1926, 1947, 1957, 1960, 1965, 1966, 1967, 2025, 2027, 2032, 2036, 2041, 2050, 2051, 2052, 2055, 2058, 2061, 2062, 2063, 2073, 2083, 2087, 2095, 2096, 2100, 2109, 2110, 2115, 2122, 2129, 2130, 2136, 2140, 2150, 2151, 2152, 2170, 2173, 2174, 2175, 2177, 2181, 2188, 2190, 2192, 2194, 2195, 2201, 2204, 2205, 2208, 2214, 2217, 2218, 2219, 2220, 2226, 2229, 2230, 2232, 2236, 2244, 2248, 2249, 2250, 2252, 2258, 2261, 2263, 2264, 2323, 2333, 2349, 2359, 2363, 2372, 2376, 2385, 2397, 2411, 2417, 2425, 2431, 2439, 2453, 2467, 2504, 2511, 2517, 2524, 2530, 2537, 2543, 2550, 2556, 2563, 2569, 2576, 2582, 2589, 2595, 2602, 2608, 2615, 2621, 2628, 2634, 2641, 2647, 2654, 2660, 2667, 2673, 2680, 2686, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2804, 2808, 2812, 2814, 2831, 2847, 2848, 2855, 2857, 2888, 2889, 2909, 2918, 2927, 3705, 3708, 3718, 3721, 3723, 3725, 3730, 3737, 3752, 3754, 3766, 3799, 3812, 3814, 3836, 3837, 3849, 3862, 3863, 3869, 3880, 3882, 3883, 3884, 3886, 3888, 3901, 3905, 3908, 3922, 3932, 3943, 3976, 3994, 4004, 4006, 4007, 4039, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4219, 4225, 4231, 4232, 4239, 4240, 4241, 4301, 4318, 4337, 4356, 4404, 4426, 4432, 4446, 4465, 4466, 4467, 4471, 4485, 4487, 4489, 4491, 4492, 4494, 4497, 4498, 4499, 4503, 4506, 4509, 4513, 4515, 4516, 4518, 4522, 4523, 4525, 4528, 4533, 4535, 4539, 4541, 4542, 4544, 4549, 4554, 4568, 4571, 4580, 4582, 4584, 4591, 4592, 4617, 4618, 4620, 4623, 4628, 4630, 4634, 4636, 4637, 4639, 4669, 4688, 4705, 4714, 4720, 4725, 4731, 4732, 4749, 4771, 4796, 4811, 4812, 4813, 4819, 4823, 4825, 4839, 4853, 4896, 4917, 4927, 4930, 4976, 4987, 4990, 4991, 4993, 5024, 5137, 5202, 5214, 5217, 5226, 5237, 5253, 5277, 5280, 5281, 5283, 5284, 5287, 5289, 5294, 5332, 5335, 5340, 5342, 5343, 5353, 5361, 5369], "inst": [16, 64, 1642, 1643, 1644, 2798, 4219, 4814, 4875, 4877, 4901, 4938, 5146, 5196, 5230], "scheduling": [16, 35, 42, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1642, 1643, 1644, 2285, 2286, 2287, 2288, 2289, 2963, 2964, 2965, 2966, 2967, 2980, 2981, 2982, 2983, 2984, 2997, 2998, 2999, 3000, 3001, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3030, 3031, 3032, 3033, 3034, 3047, 3048, 3049, 3050, 3051, 3064, 3065, 3066, 3067, 3068, 3081, 3082, 3083, 3084, 3085, 3097, 3098, 3099, 3100, 3101, 3114, 3115, 3116, 3117, 3118, 3130, 3131, 3132, 3133, 3134, 3147, 3148, 3149, 3150, 3151, 3163, 3164, 3165, 3166, 3167, 3180, 3181, 3182, 3183, 3184, 3197, 3198, 3199, 3200, 3201, 3214, 3215, 3216, 3217, 3218, 3231, 3232, 3233, 3234, 3235, 3248, 3249, 3250, 3251, 3252, 3265, 3266, 3267, 3268, 3269, 3282, 3283, 3284, 3285, 3286, 3298, 3299, 3300, 3301, 3302, 3315, 3316, 3317, 3318, 3319, 3332, 3333, 3334, 3335, 3336, 3348, 3349, 3350, 3351, 3352, 3365, 3366, 3367, 3368, 3369, 3382, 3383, 3384, 3385, 3386, 3390, 3391, 3392, 3393, 3394, 3407, 3408, 3409, 3410, 3411, 3441, 3442, 3443, 3444, 3445, 3458, 3459, 3460, 3461, 3462, 3474, 3475, 3476, 3477, 3478, 3505, 3506, 3507, 3508, 3509, 3521, 3522, 3523, 3524, 3525, 3538, 3539, 3540, 3541, 3542, 3563, 3564, 3565, 3566, 3567, 3580, 3581, 3582, 3583, 3584, 3597, 3598, 3599, 3600, 3601, 3630, 3631, 3632, 3633, 3634, 3647, 3648, 3649, 3650, 3651, 3663, 3664, 3665, 3666, 3667, 3680, 3681, 3682, 3683, 3684, 3696, 3697, 3698, 3699, 3700, 3796, 3816, 3973, 4008, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4040, 4094, 4814, 4815, 4873, 4894, 4901, 4915, 4946, 4949, 4952, 4955, 4958, 5021, 5033, 5058, 5059, 5077, 5102, 5143, 5181, 5196, 5230, 5239, 5244, 5333, 5334], "_method": [16, 44, 48, 64, 110, 1644, 2001, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2323, 2349, 3708, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4901, 5229, 5230, 5237, 5331, 5333, 5334, 5338, 5362, 5370], "init": [16, 31, 57, 64, 181, 357, 1641, 2801, 2813, 3708, 3730, 4487, 4915, 5016, 5085, 5091, 5355], "_config": [16, 64, 916, 917, 918, 1641, 1644, 3708, 3730, 3838, 3851, 3864, 3896, 4901, 5202, 5230, 5231, 5232, 5233, 5234, 5237, 5250, 5361], "\u30bd\u30fc\u30b9": [16, 35, 44, 53, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 212, 237, 275, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 383, 408, 425, 446, 523, 542, 567, 584, 605, 683, 684, 686, 687, 689, 693, 694, 696, 701, 702, 704, 709, 717, 725, 726, 734, 735, 743, 744, 752, 753, 761, 762, 763, 765, 766, 768, 769, 773, 774, 776, 781, 782, 784, 789, 790, 798, 806, 814, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 841, 844, 849, 852, 861, 869, 870, 872, 877, 878, 879, 880, 882, 883, 888, 889, 891, 896, 904, 905, 907, 913, 914, 915, 916, 917, 918, 919, 920, 923, 936, 937, 938, 939, 941, 942, 943, 956, 966, 970, 977, 986, 989, 990, 992, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1016, 1020, 1023, 1025, 1029, 1034, 1035, 1036, 1040, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1164, 1165, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1228, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1267, 1273, 1277, 1284, 1291, 1293, 1296, 1301, 1310, 1311, 1313, 1316, 1317, 1318, 1319, 1322, 1323, 1325, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1507, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1751, 1753, 1755, 1759, 1762, 1765, 1770, 1771, 1772, 1775, 1778, 1786, 1793, 1801, 1802, 1804, 1806, 1808, 1815, 1831, 1847, 1863, 1879, 1881, 1885, 1886, 1888, 1891, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2327, 2329, 2330, 2334, 2337, 2341, 2345, 2346, 2349, 2350, 2351, 2353, 2355, 2360, 2363, 2364, 2365, 2373, 2376, 2377, 2378, 2386, 2389, 2391, 2395, 2396, 2403, 2417, 2419, 2431, 2445, 2459, 2473, 2474, 2475, 2478, 2481, 2482, 2484, 2485, 2487, 2489, 2492, 2494, 2496, 2498, 2499, 2501, 2502, 2503, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2817, 2818, 2819, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2901, 2903, 2904, 2906, 2907, 2908, 2909, 2914, 2915, 2918, 2927, 2932, 2933, 2936, 2938, 2940, 2945, 2947, 2949, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3011, 3013, 3019, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3343, 3348, 3356, 3365, 3373, 3382, 3387, 3388, 3390, 3398, 3407, 3415, 3417, 3419, 3424, 3426, 3433, 3441, 3449, 3458, 3466, 3469, 3474, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3491, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3608, 3613, 3616, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3705, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 3725, 3727, 3728, 3729, 3730, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3758, 3762, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3798, 3799, 3801, 3802, 3804, 3805, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3896, 3899, 3900, 3901, 3903, 3905, 3906, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4082, 4084, 4086, 4092, 4094, 4101, 4103, 4110, 4112, 4119, 4121, 4128, 4130, 4137, 4139, 4146, 4148, 4155, 4157, 4162, 4167, 4172, 4177, 4179, 4180, 4181, 4182, 4184, 4185, 4186, 4187, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4212, 4213, 4215, 4216, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4288, 4291, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4305, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4322, 4331, 4334, 4335, 4337, 4338, 4341, 4350, 4353, 4354, 4355, 4356, 4357, 4360, 4361, 4362, 4363, 4365, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4389, 4391, 4392, 4393, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4408, 4411, 4417, 4420, 4421, 4422, 4423, 4424, 4426, 4427, 4430, 4431, 4432, 4433, 4435, 4437, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4450, 4459, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4470, 4471, 4472, 4473, 4474, 4476, 4477, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4506, 4507, 4508, 4509, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4521, 4522, 4523, 4524, 4525, 4526, 4528, 4529, 4530, 4531, 4533, 4534, 4535, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4554, 4555, 4558, 4560, 4562, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4575, 4576, 4577, 4578, 4579, 4580, 4582, 4583, 4584, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4609, 4611, 4612, 4613, 4614, 4617, 4620, 4622, 4623, 4624, 4625, 4626, 4628, 4629, 4630, 4634, 4635, 4636, 4637, 4639, 4640, 4641, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4655, 4657, 4658, 4659, 4663, 4664, 4665, 4666, 4667, 4669, 4670, 4673, 4676, 4682, 4685, 4686, 4687, 4688, 4689, 4692, 4701, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4742, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4756, 4757, 4760, 4764, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4779, 4787, 4788, 4793, 4796, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4834, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4915, 4916, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4944, 4945, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4969, 4970, 4972, 4973, 4975, 4976, 4978, 4979, 4981, 4982, 4985, 4988, 4990, 4991, 4993, 4994, 4996, 4997, 4999, 5000, 5002, 5003, 5004, 5006, 5007, 5008, 5010, 5011, 5013, 5014, 5016, 5017, 5018, 5020, 5021, 5023, 5024, 5026, 5027, 5029, 5030, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5064, 5065, 5067, 5068, 5070, 5071, 5073, 5074, 5076, 5077, 5079, 5080, 5082, 5083, 5085, 5086, 5088, 5089, 5091, 5092, 5093, 5095, 5096, 5098, 5099, 5101, 5102, 5104, 5105, 5107, 5108, 5110, 5111, 5113, 5114, 5116, 5117, 5119, 5120, 5122, 5123, 5125, 5126, 5128, 5129, 5130, 5132, 5133, 5134, 5136, 5137, 5139, 5140, 5143, 5146, 5147, 5150, 5151, 5152, 5154, 5156, 5157, 5158, 5163, 5165, 5166, 5168, 5169, 5171, 5172, 5174, 5175, 5177, 5178, 5180, 5181, 5183, 5184, 5186, 5187, 5189, 5190, 5192, 5193, 5195, 5196, 5198, 5199, 5201, 5202, 5204, 5205, 5207, 5208, 5210, 5211, 5213, 5214, 5216, 5217, 5219, 5220, 5222, 5223, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5307, 5319, 5331, 5332, 5333, 5335, 5352], ".circuit": [16, 30, 31, 39, 45, 48, 56, 62, 64, 69, 136, 197, 198, 199, 211, 232, 251, 252, 253, 265, 276, 287, 336, 347, 364, 368, 369, 370, 382, 403, 422, 423, 424, 436, 447, 458, 507, 518, 523, 527, 528, 529, 541, 562, 581, 582, 583, 595, 606, 617, 666, 677, 849, 877, 970, 1067, 1388, 1410, 1427, 1448, 1450, 1456, 1462, 1465, 1468, 1537, 1567, 1650, 1661, 1662, 1693, 1706, 1710, 1725, 1760, 1761, 1766, 1767, 1777, 1779, 1782, 1783, 1791, 1792, 1797, 1798, 1807, 1811, 1812, 1820, 1821, 1822, 1826, 1827, 1836, 1837, 1838, 1842, 1843, 1852, 1853, 1854, 1858, 1859, 1868, 1869, 1870, 1874, 1875, 1887, 1892, 1893, 2394, 2399, 2400, 2408, 2413, 2414, 2422, 2427, 2428, 2436, 2441, 2442, 2450, 2455, 2456, 2464, 2469, 2470, 2509, 2513, 2514, 2522, 2526, 2527, 2535, 2539, 2540, 2548, 2552, 2553, 2561, 2565, 2566, 2574, 2578, 2579, 2587, 2591, 2592, 2600, 2604, 2605, 2613, 2617, 2618, 2626, 2630, 2631, 2639, 2643, 2644, 2652, 2656, 2657, 2665, 2669, 2670, 2678, 2682, 2683, 2691, 2695, 2696, 2704, 2705, 2708, 2709, 2717, 2718, 2721, 2722, 2730, 2731, 2734, 2735, 2743, 2744, 2747, 2748, 2756, 2757, 2760, 2761, 2769, 2770, 2773, 2774, 3718, 3834, 3982, 4297, 4332, 4351, 4376, 4384, 4418, 4460, 4595, 4599, 4640, 4649, 4683, 4702, 4818, 4820, 4822, 4824, 4826, 4922, 4923, 4930, 4933, 4946, 4949, 4952, 4955, 5014, 5077, 5143, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5347, 5348, 5352, 5355, 5356, 5361, 5362, 5369], ".quantumcircuit": [16, 29, 31, 56, 62, 64, 4032], ".schedule": [16, 35, 64, 4219, 4878], "asynchronous": [16, 64, 2297, 2323, 2337, 2349, 2363, 2376, 2473, 2894, 3783, 3794], "handle": [16, 31, 64, 66, 75, 79, 86, 95, 113, 123, 151, 169, 176, 197, 199, 201, 204, 205, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 236, 240, 241, 245, 249, 250, 251, 252, 253, 257, 258, 262, 263, 264, 265, 268, 273, 274, 276, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 368, 370, 372, 375, 376, 380, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 407, 411, 412, 416, 420, 421, 422, 423, 424, 428, 429, 433, 434, 435, 436, 439, 444, 445, 447, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 527, 529, 531, 534, 535, 539, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 566, 570, 571, 575, 579, 580, 581, 582, 583, 587, 588, 592, 593, 594, 595, 598, 603, 604, 606, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 687, 798, 852, 1106, 1108, 1110, 1113, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1183, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1538, 1926, 2002, 2004, 2282, 2291, 2297, 3011, 3019, 3388, 3718, 4041, 4182, 5137, 5250], "\u30d1\u30e9\u30e1\u30fc\u30bfs": [16, 31, 39, 64, 190, 191, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 241, 245, 249, 250, 258, 262, 263, 264, 273, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 330, 331, 332, 333, 337, 338, 339, 340, 341, 349, 350, 351, 362, 363, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 412, 416, 420, 421, 429, 433, 434, 435, 444, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 501, 502, 503, 504, 508, 509, 510, 511, 512, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 571, 575, 579, 580, 588, 592, 593, 594, 603, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 660, 661, 662, 663, 667, 668, 669, 670, 671, 679, 680, 681, 916, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1148, 1152, 1156, 1157, 1165, 1169, 1170, 1171, 1180, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1256, 1257, 1258, 1641, 1643, 1644, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 3708, 3838, 3864, 3940, 3941, 4297, 4900, 4921, 5335, 5355], "options": [16, 25, 29, 30, 44, 51, 57, 60, 64, 235, 406, 565, 688, 691, 697, 699, 705, 707, 709, 713, 715, 717, 721, 723, 730, 732, 739, 741, 748, 750, 757, 759, 762, 767, 768, 771, 777, 779, 785, 787, 794, 796, 798, 802, 804, 806, 810, 812, 814, 818, 820, 822, 826, 828, 833, 837, 839, 841, 845, 847, 857, 859, 861, 865, 867, 873, 875, 884, 886, 888, 892, 894, 896, 900, 902, 908, 910, 1143, 1376, 1379, 1503, 1640, 1641, 1644, 2277, 2282, 2283, 2285, 2291, 2292, 2310, 2311, 2312, 2323, 2326, 2329, 2333, 2334, 2335, 2337, 2338, 2341, 2345, 2346, 2347, 2349, 2352, 2355, 2359, 2360, 2361, 2363, 2366, 2372, 2373, 2374, 2376, 2379, 2385, 2386, 2387, 2909, 2914, 2916, 2918, 2923, 2925, 2927, 2932, 2934, 2936, 2943, 2945, 2952, 2954, 2961, 2963, 2969, 2970, 2971, 2978, 2980, 2986, 2987, 2988, 2995, 2997, 3003, 3004, 3005, 3011, 3012, 3013, 3019, 3020, 3021, 3028, 3030, 3036, 3037, 3038, 3045, 3047, 3053, 3054, 3055, 3062, 3064, 3070, 3071, 3072, 3079, 3081, 3087, 3088, 3089, 3095, 3097, 3103, 3104, 3105, 3112, 3114, 3120, 3121, 3122, 3128, 3130, 3136, 3137, 3138, 3145, 3147, 3153, 3154, 3155, 3161, 3163, 3169, 3170, 3171, 3178, 3180, 3186, 3187, 3188, 3195, 3197, 3203, 3204, 3205, 3212, 3214, 3220, 3221, 3222, 3229, 3231, 3237, 3238, 3239, 3246, 3248, 3254, 3255, 3256, 3263, 3265, 3271, 3272, 3273, 3280, 3282, 3288, 3289, 3290, 3296, 3298, 3304, 3305, 3306, 3313, 3315, 3321, 3322, 3323, 3330, 3332, 3338, 3339, 3340, 3346, 3348, 3354, 3355, 3356, 3363, 3365, 3371, 3372, 3373, 3380, 3382, 3388, 3389, 3390, 3396, 3397, 3398, 3405, 3407, 3413, 3414, 3415, 3422, 3424, 3431, 3433, 3439, 3441, 3447, 3448, 3449, 3456, 3458, 3464, 3465, 3466, 3472, 3474, 3480, 3481, 3488, 3494, 3496, 3503, 3505, 3511, 3512, 3513, 3519, 3521, 3527, 3528, 3529, 3536, 3538, 3544, 3545, 3546, 3552, 3554, 3561, 3563, 3569, 3570, 3571, 3578, 3580, 3586, 3587, 3588, 3595, 3597, 3603, 3604, 3605, 3611, 3613, 3619, 3621, 3628, 3630, 3636, 3637, 3638, 3645, 3647, 3653, 3654, 3655, 3661, 3663, 3669, 3670, 3671, 3678, 3680, 3686, 3687, 3688, 3694, 3696, 3702, 3703, 3708, 3718, 3730, 3731, 3779, 3789, 3798, 3876, 3885, 3891, 3897, 3920, 3921, 3929, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4230, 4432, 4705, 4834, 4836, 4861, 4863, 4868, 4870, 4897, 4902, 4918, 4964, 5117, 5123, 5199, 5227, 5230, 5238, 5250, 5281, 5331, 5332, 5333, 5334, 5369], "grabbed": [16, 1641, 1644, 3708], ".properties": [16, 31, 64, 1644, 5054, 5359], "option": [16, 29, 31, 39, 51, 57, 64, 97, 235, 406, 565, 1143, 1641, 1644, 2018, 2310, 2311, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2487, 2798, 2914, 2923, 2932, 3730, 3779, 3789, 3885, 3921, 4294, 4432, 4473, 4500, 4568, 4813, 4902, 4922, 5143, 5226, 5230, 5237, 5281], "explicitly": [16, 35, 64, 682, 1641, 1644, 2011, 2015, 2016, 2019, 2022, 2024, 4386, 4433, 4651], "override": [16, 53, 64, 82, 126, 131, 134, 148, 166, 173, 927, 931, 947, 951, 960, 964, 974, 980, 990, 994, 1010, 1014, 1024, 1030, 1040, 1044, 1054, 1058, 1065, 1267, 1271, 1281, 1288, 1300, 1307, 1323, 1327, 1432, 1436, 1450, 1508, 1512, 1563, 1641, 1644, 1758, 1776, 1781, 1790, 1796, 1806, 1810, 1819, 1825, 1835, 1841, 1851, 1857, 1867, 1873, 1884, 2277, 2285, 2323, 2333, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2393, 2398, 2407, 2412, 2421, 2426, 2435, 2440, 2449, 2454, 2463, 2468, 2508, 2512, 2521, 2525, 2534, 2538, 2547, 2551, 2560, 2564, 2573, 2577, 2586, 2590, 2599, 2603, 2612, 2616, 2625, 2629, 2638, 2642, 2651, 2655, 2664, 2668, 2677, 2681, 2690, 2694, 2703, 2707, 2716, 2720, 2729, 2733, 2742, 2746, 2755, 2759, 2768, 2772, 2808, 2848, 2909, 2918, 2927, 3005, 3013, 3382, 3891, 3995, 4010, 5146, 5193, 5230], "str": [16, 35, 44, 53, 64, 66, 70, 74, 75, 79, 82, 84, 86, 88, 90, 95, 101, 107, 110, 113, 119, 120, 123, 126, 128, 130, 131, 133, 134, 140, 148, 152, 166, 170, 173, 177, 179, 193, 195, 204, 205, 208, 209, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 235, 240, 242, 243, 244, 251, 252, 253, 262, 264, 274, 276, 277, 291, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 322, 323, 324, 325, 326, 327, 335, 336, 347, 349, 364, 366, 375, 376, 379, 380, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 411, 413, 414, 415, 422, 423, 424, 433, 435, 445, 447, 448, 462, 464, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 494, 495, 496, 497, 498, 506, 507, 518, 520, 523, 525, 534, 535, 538, 539, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 565, 570, 572, 573, 574, 581, 582, 583, 592, 594, 604, 606, 607, 621, 623, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 652, 653, 654, 655, 656, 657, 665, 666, 677, 679, 683, 686, 689, 693, 694, 701, 709, 717, 761, 762, 773, 781, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904, 920, 923, 928, 939, 943, 948, 956, 961, 970, 975, 976, 986, 991, 1002, 1006, 1011, 1020, 1025, 1026, 1036, 1041, 1050, 1055, 1067, 1102, 1104, 1113, 1114, 1117, 1118, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1143, 1147, 1149, 1150, 1151, 1158, 1159, 1160, 1169, 1171, 1181, 1183, 1184, 1198, 1200, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1229, 1230, 1231, 1232, 1233, 1234, 1242, 1243, 1254, 1256, 1259, 1263, 1268, 1277, 1282, 1283, 1284, 1291, 1296, 1302, 1303, 1310, 1311, 1318, 1319, 1324, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1388, 1389, 1390, 1392, 1394, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1427, 1428, 1433, 1441, 1442, 1444, 1446, 1447, 1448, 1450, 1453, 1456, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1509, 1517, 1519, 1520, 1522, 1524, 1526, 1529, 1530, 1531, 1533, 1535, 1537, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1641, 1642, 1644, 1648, 1649, 1655, 1673, 1679, 1732, 1753, 1760, 1761, 1772, 1777, 1786, 1791, 1792, 1802, 1807, 1815, 1820, 1821, 1831, 1836, 1837, 1847, 1852, 1853, 1863, 1868, 1869, 1879, 1886, 1887, 1906, 1911, 1926, 1959, 1962, 1970, 1982, 2010, 2013, 2014, 2017, 2018, 2020, 2021, 2023, 2028, 2039, 2045, 2064, 2075, 2077, 2089, 2092, 2102, 2105, 2112, 2117, 2119, 2125, 2138, 2143, 2153, 2166, 2167, 2168, 2182, 2186, 2195, 2198, 2200, 2201, 2211, 2213, 2224, 2225, 2232, 2238, 2242, 2244, 2255, 2257, 2271, 2274, 2279, 2285, 2297, 2303, 2311, 2315, 2316, 2321, 2322, 2334, 2342, 2356, 2360, 2369, 2373, 2382, 2386, 2389, 2394, 2403, 2408, 2417, 2422, 2431, 2436, 2445, 2450, 2459, 2464, 2473, 2480, 2487, 2494, 2495, 2501, 2504, 2509, 2517, 2522, 2530, 2535, 2543, 2548, 2556, 2561, 2569, 2574, 2582, 2587, 2595, 2600, 2608, 2613, 2621, 2626, 2634, 2639, 2647, 2652, 2660, 2665, 2673, 2678, 2686, 2691, 2699, 2704, 2712, 2717, 2725, 2730, 2738, 2743, 2751, 2756, 2764, 2769, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2798, 2801, 2802, 2804, 2805, 2806, 2808, 2848, 2900, 2907, 2908, 2911, 2920, 2929, 2936, 2939, 2948, 2957, 2963, 2974, 2980, 2991, 2997, 3005, 3013, 3024, 3030, 3041, 3047, 3058, 3064, 3075, 3081, 3091, 3097, 3108, 3114, 3124, 3130, 3141, 3147, 3157, 3163, 3174, 3180, 3191, 3197, 3208, 3214, 3225, 3231, 3242, 3248, 3259, 3265, 3276, 3282, 3292, 3298, 3309, 3315, 3326, 3332, 3342, 3348, 3359, 3365, 3376, 3382, 3390, 3401, 3407, 3418, 3427, 3435, 3441, 3452, 3458, 3468, 3474, 3483, 3484, 3486, 3487, 3490, 3499, 3505, 3515, 3521, 3532, 3538, 3548, 3557, 3563, 3574, 3580, 3591, 3597, 3607, 3615, 3624, 3630, 3641, 3647, 3657, 3663, 3674, 3680, 3690, 3696, 3705, 3706, 3707, 3708, 3709, 3723, 3724, 3729, 3730, 3737, 3738, 3739, 3741, 3745, 3748, 3749, 3751, 3752, 3753, 3757, 3760, 3761, 3763, 3764, 3766, 3767, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794, 3796, 3798, 3804, 3807, 3808, 3816, 3817, 3820, 3822, 3823, 3830, 3831, 3835, 3836, 3837, 3838, 3847, 3851, 3852, 3854, 3855, 3856, 3859, 3861, 3864, 3866, 3867, 3868, 3869, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3880, 3883, 3885, 3886, 3887, 3888, 3893, 3900, 3902, 3904, 3905, 3909, 3913, 3914, 3915, 3920, 3922, 3928, 3930, 3931, 3932, 3935, 3940, 3941, 3942, 3943, 3945, 3951, 3954, 3957, 3960, 3963, 3976, 3982, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3991, 3992, 3993, 3994, 3999, 4002, 4003, 4004, 4007, 4008, 4009, 4012, 4015, 4016, 4023, 4024, 4030, 4031, 4032, 4036, 4047, 4051, 4052, 4053, 4054, 4055, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4121, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4139, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4205, 4208, 4211, 4214, 4217, 4219, 4241, 4245, 4246, 4249, 4252, 4264, 4270, 4273, 4282, 4294, 4380, 4421, 4463, 4484, 4487, 4519, 4546, 4547, 4568, 4577, 4579, 4614, 4644, 4705, 4712, 4716, 4743, 4747, 4760, 4769, 4802, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4817, 4819, 4821, 4823, 4825, 4839, 4875, 4876, 4877, 4896, 4897, 4900, 4901, 4915, 4917, 4918, 4921, 4922, 4923, 4924, 4927, 4930, 4933, 4936, 4939, 4964, 4973, 5011, 5018, 5024, 5068, 5086, 5108, 5129, 5134, 5137, 5143, 5151, 5157, 5178, 5193, 5202, 5208, 5211, 5230, 5237, 5239, 5244, 5250, 5252, 5259, 5261, 5262, 5263, 5268, 5272, 5276, 5278, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5289, 5290, 5291, 5292, 5293, 5331, 5332, 5333, 5334, 5335, 5345, 5349, 5361, 5372], "names": [16, 31, 53, 172, 210, 238, 381, 409, 540, 568, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1119, 1145, 1275, 1292, 1293, 1312, 1313, 1330, 1377, 1439, 1515, 1644, 1666, 1669, 1670, 1679, 1686, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2285, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3704, 3730, 3787, 3821, 3957, 3963, 3976, 3982, 3983, 3986, 3990, 4032, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4901, 4922, 4923, 4927, 4930, 4934, 4973, 5080, 5151, 5157, 5202, 5205, 5208, 5211, 5226, 5229, 5230, 5250, 5260, 5295, 5307, 5319, 5332, 5333, 5334], "unroll": [16, 64, 1644, 4901, 4973, 5206, 5207, 5208, 5210, 5211, 5213, 5230, 5355, 5356], "'u": [16, 64, 1483, 1644, 3982, 4063, 4219, 4241, 4421, 4712, 5011, 5230, 5331, 5332, 5354], "couplingmap": [16, 31, 64, 1644, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4901, 4924, 4964, 4970, 4982, 4985, 4988, 4991, 5014, 5093, 5108, 5117, 5178, 5190, 5202, 5214, 5217, 5226, 5230, 5355], "perhaps": [16, 48, 1644, 2024, 5250], "custom": [16, 29, 48, 51, 64, 86, 147, 165, 172, 193, 195, 364, 366, 523, 525, 970, 1102, 1104, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1654, 1655, 1722, 1891, 1994, 2318, 2323, 2337, 2349, 2363, 2376, 2801, 2804, 2805, 2808, 2848, 2914, 2923, 2932, 3730, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3899, 3901, 3905, 3973, 4182, 4819, 4823, 4825, 4878, 5146, 5208, 5220, 5230, 5239, 5244, 5250, 5331, 5332, 5333, 5334, 5356, 5358, 5367], "multiple": [16, 29, 30, 31, 35, 39, 48, 51, 64, 103, 147, 165, 172, 232, 259, 260, 261, 288, 403, 430, 431, 432, 459, 562, 589, 590, 591, 618, 841, 877, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1140, 1166, 1167, 1168, 1195, 1267, 1281, 1300, 1323, 1382, 1383, 1384, 1385, 1386, 1393, 1427, 1432, 1441, 1453, 1508, 1644, 1661, 1662, 1706, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 1914, 1926, 2024, 2032, 2044, 2048, 2146, 2241, 2246, 2323, 2349, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 3717, 3746, 3750, 3753, 3823, 3834, 3838, 3868, 3990, 4182, 4229, 4244, 4245, 4297, 4487, 4519, 4552, 4614, 4813, 4868, 4896, 4900, 4917, 4921, 4922, 4958, 5137, 5154, 5160, 5226, 5276, 5283, 5290, 5333, 5334, 5355], "formats": [16, 64, 1644, 4751, 4773, 4787, 4811, 4812], "given": [16, 31, 35, 44, 48, 53, 64, 74, 97, 115, 147, 151, 163, 165, 169, 172, 176, 182, 186, 188, 193, 195, 197, 215, 234, 239, 240, 251, 252, 255, 256, 262, 264, 328, 342, 347, 353, 356, 358, 362, 364, 366, 368, 386, 405, 410, 411, 422, 423, 426, 427, 433, 435, 499, 513, 518, 523, 525, 527, 545, 564, 569, 570, 581, 582, 585, 586, 592, 594, 658, 672, 677, 682, 683, 691, 699, 707, 715, 723, 732, 741, 750, 759, 763, 769, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 852, 859, 867, 875, 886, 894, 896, 902, 910, 928, 938, 948, 961, 973, 976, 991, 1001, 1003, 1005, 1011, 1023, 1026, 1036, 1041, 1055, 1063, 1065, 1102, 1104, 1106, 1123, 1142, 1146, 1147, 1158, 1159, 1162, 1163, 1169, 1171, 1235, 1249, 1254, 1263, 1268, 1280, 1283, 1299, 1303, 1318, 1324, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1433, 1441, 1443, 1447, 1450, 1452, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1509, 1527, 1537, 1550, 1551, 1555, 1563, 1567, 1640, 1641, 1644, 1654, 1655, 1666, 1686, 1689, 1693, 1698, 1722, 1730, 1731, 1735, 1738, 1739, 1741, 1757, 1761, 1777, 1786, 1789, 1792, 1807, 1818, 1821, 1834, 1837, 1850, 1853, 1866, 1869, 1883, 1887, 1891, 1906, 1925, 1926, 1936, 1959, 1982, 2001, 2003, 2004, 2008, 2009, 2012, 2016, 2018, 2021, 2023, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2156, 2161, 2162, 2165, 2166, 2167, 2182, 2198, 2211, 2224, 2232, 2238, 2255, 2271, 2274, 2286, 2287, 2288, 2289, 2290, 2310, 2311, 2337, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2556, 2561, 2569, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2830, 2860, 2863, 2871, 2875, 2883, 2885, 2886, 2887, 2964, 2965, 2966, 2967, 2968, 2981, 2982, 2983, 2984, 2985, 2998, 2999, 3000, 3001, 3002, 3006, 3007, 3008, 3009, 3010, 3014, 3015, 3016, 3017, 3018, 3031, 3032, 3033, 3034, 3035, 3048, 3049, 3050, 3051, 3052, 3065, 3066, 3067, 3068, 3069, 3082, 3083, 3084, 3085, 3086, 3098, 3099, 3100, 3101, 3102, 3115, 3116, 3117, 3118, 3119, 3131, 3132, 3133, 3134, 3135, 3148, 3149, 3150, 3151, 3152, 3164, 3165, 3166, 3167, 3168, 3181, 3182, 3183, 3184, 3185, 3198, 3199, 3200, 3201, 3202, 3215, 3216, 3217, 3218, 3219, 3232, 3233, 3234, 3235, 3236, 3249, 3250, 3251, 3252, 3253, 3266, 3267, 3268, 3269, 3270, 3283, 3284, 3285, 3286, 3287, 3299, 3300, 3301, 3302, 3303, 3316, 3317, 3318, 3319, 3320, 3333, 3334, 3335, 3336, 3337, 3349, 3350, 3351, 3352, 3353, 3366, 3367, 3368, 3369, 3370, 3383, 3384, 3385, 3386, 3387, 3391, 3392, 3393, 3394, 3395, 3408, 3409, 3410, 3411, 3412, 3442, 3443, 3444, 3445, 3446, 3459, 3460, 3461, 3462, 3463, 3475, 3476, 3477, 3478, 3479, 3506, 3507, 3508, 3509, 3510, 3522, 3523, 3524, 3525, 3526, 3539, 3540, 3541, 3542, 3543, 3564, 3565, 3566, 3567, 3568, 3581, 3582, 3583, 3584, 3585, 3598, 3599, 3600, 3601, 3602, 3631, 3632, 3633, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3664, 3665, 3666, 3667, 3668, 3681, 3682, 3683, 3684, 3685, 3697, 3698, 3699, 3700, 3701, 3708, 3723, 3728, 3729, 3730, 3737, 3738, 3739, 3741, 3779, 3783, 3789, 3796, 3881, 3901, 3908, 3938, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3991, 3992, 3993, 3999, 4008, 4012, 4034, 4103, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4223, 4316, 4335, 4376, 4385, 4402, 4444, 4487, 4491, 4513, 4519, 4522, 4539, 4546, 4568, 4614, 4617, 4620, 4624, 4634, 4640, 4650, 4667, 4686, 4714, 4715, 4719, 4720, 4723, 4726, 4740, 4761, 4770, 4782, 4797, 4873, 4887, 4892, 4910, 4933, 4936, 4961, 4964, 4973, 5008, 5014, 5016, 5018, 5039, 5051, 5055, 5096, 5147, 5150, 5151, 5154, 5156, 5160, 5162, 5184, 5193, 5202, 5210, 5211, 5213, 5227, 5230, 5231, 5232, 5233, 5234, 5238, 5239, 5242, 5243, 5244, 5248, 5249, 5250, 5257, 5259, 5262, 5270, 5274, 5278, 5286, 5288, 5290, 5302, 5314, 5326, 5331, 5333, 5334, 5335, 5356, 5359, 5366], "adjacency": [16, 1387, 1393, 1644, 4839, 5341], "entry": [16, 25, 39, 51, 53, 64, 234, 239, 405, 410, 523, 564, 569, 1000, 1005, 1142, 1146, 1641, 1644, 1815, 2877, 2878, 3730, 3757, 3774, 3775, 3857, 3860, 3865, 3932, 3976, 4039, 4046, 4255, 4712, 4803, 4922, 4930, 4938, 5220, 5226], "specifies": [16, 24, 39, 64, 66, 198, 234, 326, 327, 369, 405, 497, 498, 528, 564, 656, 657, 849, 877, 1107, 1142, 1233, 1234, 1376, 1379, 1441, 1450, 1456, 1464, 1503, 1537, 1567, 1644, 1987, 2162, 2166, 2167, 2445, 2459, 2914, 2923, 2932, 3750, 3779, 3789, 3932, 3957, 3963, 3976, 4103, 4246, 4376, 4385, 4640, 4650, 5003, 5033, 5280, 5285], "two": [16, 24, 28, 31, 39, 48, 53, 64, 115, 136, 143, 172, 210, 234, 238, 240, 252, 253, 276, 342, 347, 381, 405, 409, 411, 423, 424, 447, 513, 518, 540, 564, 568, 570, 582, 583, 606, 672, 677, 682, 849, 877, 912, 1119, 1142, 1145, 1147, 1159, 1160, 1183, 1249, 1254, 1318, 1342, 1355, 1360, 1362, 1371, 1373, 1379, 1382, 1388, 1392, 1397, 1398, 1427, 1447, 1456, 1475, 1480, 1537, 1539, 1542, 1550, 1553, 1586, 1644, 1716, 1722, 1734, 1936, 1943, 1945, 1987, 2024, 2161, 2165, 2166, 2168, 2232, 2311, 2323, 2349, 2808, 3752, 3757, 3766, 3769, 3993, 4008, 4029, 4220, 4229, 4299, 4311, 4354, 4376, 4385, 4402, 4463, 4525, 4529, 4530, 4540, 4575, 4620, 4624, 4625, 4635, 4640, 4650, 4667, 4705, 4717, 4721, 4722, 4726, 4740, 4741, 4803, 4819, 4879, 4922, 4924, 4988, 4997, 5007, 5014, 5033, 5037, 5041, 5051, 5080, 5082, 5105, 5117, 5120, 5178, 5234, 5235, 5237, 5277, 5287, 5291, 5341, 5342, 5353, 5361, 5362, 5366], "interactions": [16, 48, 64, 1379, 1382, 1396, 1644, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034, 4991, 5233, 5234], "including": [16, 53, 60, 64, 216, 387, 546, 798, 841, 1001, 1005, 1124, 1362, 1401, 1526, 1550, 1644, 1668, 1908, 1948, 1949, 2042, 2123, 2141, 2169, 2239, 3901, 3915, 4182, 4901, 4915, 5077, 5117, 5143, 5166, 5230, 5250, 5280], "readout": [16, 31, 48, 64, 852, 1644, 2803, 2807, 2808, 2830, 2831, 2833, 2834, 2836, 2839, 2849, 2853, 2889, 2936, 3708, 3730, 3946, 3947, 4067, 4075, 4261, 4279, 4742, 4745, 4746, 4748, 4767, 4901, 4946, 4952, 5181, 5214, 5217, 5230, 5270, 5274, 5365], "coherence": [16, 64, 1644, 2936, 4901, 5038, 5054, 5230], "times": [16, 31, 48, 64, 99, 130, 193, 231, 286, 364, 402, 457, 523, 561, 616, 814, 849, 877, 927, 932, 947, 952, 960, 965, 974, 981, 990, 995, 1010, 1015, 1024, 1031, 1040, 1045, 1054, 1059, 1065, 1102, 1139, 1193, 1267, 1272, 1281, 1289, 1300, 1308, 1318, 1323, 1328, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1432, 1437, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1508, 1513, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1758, 1766, 1776, 1782, 1790, 1797, 1806, 1811, 1819, 1826, 1835, 1842, 1851, 1858, 1867, 1874, 1884, 1892, 1914, 1974, 1976, 1978, 1982, 2044, 2048, 2146, 2241, 2246, 2323, 2349, 2393, 2399, 2407, 2413, 2421, 2427, 2435, 2441, 2449, 2455, 2463, 2469, 2508, 2513, 2521, 2526, 2534, 2539, 2547, 2552, 2560, 2565, 2573, 2578, 2586, 2591, 2599, 2604, 2612, 2617, 2625, 2630, 2638, 2643, 2651, 2656, 2664, 2669, 2677, 2682, 2690, 2695, 2703, 2708, 2716, 2721, 2729, 2734, 2742, 2747, 2755, 2760, 2768, 2773, 2808, 2822, 2836, 2842, 2848, 2936, 3757, 3829, 3842, 3896, 3963, 4162, 4167, 4172, 4182, 4299, 4308, 4367, 4479, 4511, 4518, 4537, 4544, 4586, 4614, 4632, 4639, 4803, 4901, 4964, 4976, 5003, 5021, 5042, 5045, 5054, 5175, 5230, 5239, 5244, 5347, 5348, 5350, 5353, 5357, 5366, 5368], "layout": [16, 44, 64, 235, 406, 565, 1143, 1644, 3708, 4432, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4901, 4915, 4961, 4963, 4964, 4966, 4972, 4976, 4978, 5014, 5017, 5071, 5073, 5083, 5085, 5089, 5091, 5092, 5109, 5110, 5117, 5119, 5123, 5175, 5177, 5178, 5180, 5184, 5192, 5199, 5201, 5214, 5216, 5217, 5219, 5230, 5231, 5232, 5233, 5234, 5250, 5281, 5286, 5331, 5333, 5334, 5341, 5355], "dict": [16, 53, 64, 74, 75, 79, 82, 84, 88, 90, 95, 101, 107, 113, 120, 123, 126, 128, 130, 131, 133, 134, 140, 142, 146, 148, 166, 173, 179, 193, 198, 200, 235, 311, 335, 336, 364, 369, 371, 406, 482, 506, 507, 523, 528, 530, 565, 641, 665, 666, 683, 691, 693, 694, 699, 701, 707, 709, 715, 717, 723, 732, 741, 750, 759, 761, 762, 771, 773, 779, 781, 787, 796, 798, 804, 806, 812, 814, 820, 822, 828, 833, 839, 841, 847, 849, 859, 861, 867, 869, 875, 877, 886, 888, 894, 896, 902, 904, 910, 913, 914, 915, 918, 1072, 1083, 1088, 1096, 1102, 1107, 1109, 1143, 1218, 1242, 1243, 1296, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1644, 1648, 1649, 1682, 1706, 1711, 1737, 1746, 1748, 1750, 1752, 1898, 1901, 1906, 1928, 1929, 1953, 1956, 1959, 2010, 2013, 2014, 2017, 2018, 2025, 2028, 2032, 2035, 2039, 2055, 2063, 2064, 2069, 2072, 2075, 2084, 2089, 2097, 2102, 2112, 2117, 2132, 2135, 2138, 2153, 2154, 2155, 2162, 2166, 2167, 2168, 2170, 2177, 2180, 2182, 2183, 2188, 2195, 2198, 2201, 2208, 2211, 2214, 2220, 2224, 2226, 2232, 2235, 2238, 2244, 2252, 2255, 2258, 2271, 2274, 2315, 2316, 2321, 2322, 2323, 2337, 2349, 2363, 2376, 2608, 2660, 2789, 2809, 2812, 2867, 2886, 2887, 2907, 2908, 2914, 2915, 2923, 2924, 2932, 2933, 3483, 3484, 3486, 3487, 3706, 3708, 3710, 3723, 3730, 3739, 3745, 3748, 3752, 3753, 3757, 3759, 3760, 3765, 3766, 3767, 3777, 3778, 3779, 3780, 3781, 3782, 3787, 3788, 3789, 3792, 3793, 3796, 3798, 3805, 3821, 3871, 3872, 3885, 3887, 3888, 3889, 3901, 3909, 3922, 3924, 3929, 3932, 3933, 3934, 3939, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3963, 3966, 3968, 3972, 3974, 3975, 3976, 3977, 3978, 3980, 3981, 3982, 3993, 3995, 3999, 4008, 4010, 4012, 4023, 4024, 4031, 4032, 4084, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4205, 4208, 4211, 4214, 4217, 4229, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4264, 4265, 4266, 4268, 4269, 4271, 4272, 4273, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4295, 4296, 4390, 4394, 4398, 4463, 4519, 4568, 4605, 4608, 4614, 4640, 4656, 4660, 4664, 4712, 4721, 4722, 4743, 4745, 4747, 4751, 4756, 4757, 4762, 4765, 4767, 4769, 4773, 4774, 4779, 4783, 4785, 4787, 4788, 4793, 4798, 4800, 4803, 4804, 4805, 4809, 4810, 4811, 4812, 4817, 4819, 4821, 4823, 4825, 4830, 4836, 4837, 4863, 4864, 4870, 4871, 4879, 4882, 4884, 4896, 4897, 4900, 4903, 4911, 4913, 4917, 4918, 4921, 4923, 4938, 5033, 5193, 5202, 5230, 5239, 5244, 5250, 5252, 5267, 5281, 5283, 5290, 5295, 5303, 5305, 5307, 5315, 5317, 5319, 5327, 5329, 5331, 5332, 5333, 5334, 5341, 5345, 5354, 5361, 5372], "position": [16, 39, 64, 1644, 1706, 1910, 1961, 2022, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256, 2817, 2889, 3708, 3757, 3811, 3812, 3824, 3830, 3855, 3871, 4008, 4026, 4206, 4389, 4519, 4614, 4655, 4803, 4898, 4899, 4901, 4919, 4920, 4958, 5230, 5263], "virtual": [16, 35, 48, 64, 1459, 1496, 1539, 1644, 3708, 4162, 4879, 4880, 4884, 4885, 4886, 4888, 4890, 4891, 4892, 4901, 4915, 4961, 4966, 5014, 5071, 5083, 5089, 5091, 5117, 5123, 5178, 5184, 5199, 5230, 5231, 5232, 5286, 5366], "physical": [16, 28, 35, 48, 64, 235, 406, 565, 1143, 1382, 1644, 2337, 2862, 2867, 3708, 4035, 4037, 4041, 4057, 4058, 4059, 4060, 4219, 4743, 4744, 4745, 4747, 4767, 4769, 4839, 4840, 4841, 4843, 4852, 4856, 4858, 4859, 4879, 4880, 4881, 4884, 4885, 4888, 4890, 4891, 4901, 4915, 4922, 4948, 4951, 4954, 4957, 4961, 4963, 4964, 4966, 5014, 5033, 5071, 5077, 5079, 5089, 5091, 5117, 5123, 5143, 5178, 5184, 5199, 5202, 5230, 5231, 5232, 5281, 5286, 5355, 5362], "constraints": [16, 39, 44, 48, 64, 701, 752, 789, 798, 806, 833, 861, 1644, 2883, 3993, 4042, 4157, 4162, 4167, 4172, 4182, 4922, 4923, 4937, 4946, 4952, 4973, 5021, 5023, 5055, 5059, 5102, 5143, 5181, 5220, 5222, 5233, 5234], "guaranteed": [16, 25, 31, 48, 51, 54, 717, 789, 918, 1644, 3905, 4231], "permute": [16, 64, 1457, 1644, 1910, 1961, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256, 4389, 4432, 4655], "through": [16, 28, 39, 44, 51, 64, 97, 1006, 1466, 1468, 1644, 1734, 1926, 2024, 2337, 3704, 4177, 4182, 4922, 5008, 5011, 5033, 5117], "swaps": [16, 64, 1355, 1457, 1458, 1472, 1644, 2323, 4893, 4964, 4970, 5016, 5017, 5117, 5178, 5190, 5232], ".transpiler": [16, 31, 45, 49, 64, 357, 2285, 2963, 2980, 2997, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4834, 4861, 4868, 4894, 4922, 4982, 4985, 5014, 5077, 5143, 5163, 5283, 5355], ".layout": [16, 64], "{qr": [16, 64, 1644], "]:": [16, 44, 64, 69, 92, 97, 103, 110, 115, 118, 136, 186, 198, 369, 528, 683, 877, 904, 1107, 1388, 1399, 1450, 1456, 1458, 1465, 1468, 1471, 1475, 1644, 1987, 3993, 4819, 4825, 4884, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "qr": [16, 39, 63, 64, 970, 1102, 1644, 1722, 4880, 4881, 4882, 4884, 4886, 5120, 5250, 5352, 5369], "::": [16, 57, 64, 211, 382, 541, 1120, 2932, 3757, 4006, 4803, 4884, 4938], "]}": [16, 64, 198, 369, 528, 1107, 1399, 1450, 1644, 4229, 4463, 4884, 5344, 5366, 5368, 5370], "named": [16, 64, 118, 147, 1067, 1644, 1648, 1649, 1686, 4229, 5275, 5278], "[qr": [16, 1644], "sets": [16, 30, 64, 235, 406, 565, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 849, 859, 867, 875, 886, 894, 902, 910, 1143, 1640, 1642, 1643, 1644, 2323, 2349, 2363, 2376, 3708, 3835, 3886, 4121, 4193, 4197, 4402, 4503, 4504, 4580, 4897, 4901, 4918, 4961, 4973, 4976, 5003, 5007, 5059, 5214, 5217, 5230, 5280, 5281], "random": [16, 60, 64, 97, 147, 165, 172, 683, 725, 761, 849, 877, 1456, 1457, 1477, 1555, 1640, 1641, 1644, 1891, 2323, 2349, 2915, 2924, 2933, 2936, 3708, 3718, 3834, 4388, 4394, 4395, 4513, 4539, 4603, 4608, 4609, 4634, 4654, 4660, 4661, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4901, 5175, 5178, 5190, 5230, 5235, 5237, 5250, 5355, 5364, 5366, 5369], "stochastic": [16, 48, 64, 683, 789, 849, 877, 904, 1644, 3708, 4746, 4768, 4901, 5230, 5355], "parts": [16, 39, 48, 64, 1644, 1986, 2155, 2165, 3708, 4570, 4901, 5230], "much": [16, 44, 48, 64, 147, 165, 172, 773, 849, 877, 904, 1410, 1644, 2323, 2349, 2933, 3708, 4041, 4182, 5217, 5250, 5286, 5288, 5289], "optimized": [16, 31, 44, 48, 64, 856, 883, 1394, 1644, 2323, 2349, 3708, 4915, 4922, 5002, 5013, 5033, 5132, 5136, 5139, 5168, 5171, 5174, 5195, 5230, 5250, 5355, 5369], "expense": [16, 1644, 3708, 5230, 5250], "longer": [16, 31, 48, 64, 262, 264, 433, 435, 592, 594, 1169, 1171, 1644, 2285, 2323, 2349, 3708, 3748, 3801, 4922, 5230, 5250, 5331, 5355], "#.": 16, "light": [16, 64, 1644, 5230, 5232], "heavy": [16, 25, 64, 1644, 4847, 4848, 5230, 5234], "highest": [16, 64, 118, 1468, 5117, 5202, 5234], "chosen": [16, 48, 64, 103, 849, 877, 904, 1450, 1456, 1537, 1644, 1953, 2024, 2032, 2349, 3708, 5196, 5362], "passmanager": [16, 48, 64, 4836, 4863, 4870, 4895, 4896, 4897, 4898, 4899, 4900, 4915, 4917, 5014, 5077, 5143, 5230, 5231, 5232, 5233, 5234, 5283, 5355], "manager": [16, 18, 53, 240, 252, 347, 411, 423, 518, 570, 582, 677, 1147, 1159, 1254, 1644, 3744, 3834, 3836, 3839, 3842, 3845, 3869, 4031, 4894, 4896, 4899, 4900, 4901, 4915, 4917, 4920, 4921, 5014, 5181, 5228, 5230, 5231, 5232, 5233, 5234, 5250, 5257, 5283], "arg": [16, 64, 1644, 2018, 5033, 5275, 5335], "present": [16, 31, 39, 48, 53, 64, 89, 103, 198, 200, 285, 369, 371, 456, 528, 530, 615, 1063, 1107, 1109, 1192, 1393, 1499, 2003, 2005, 2007, 2011, 2012, 2016, 2019, 2282, 2291, 2311, 2318, 2337, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3730, 3767, 4765, 4774, 4785, 4788, 4800, 4811, 4878, 4913, 4924, 5003, 5083, 5205, 5305, 5317, 5329], "auto": [16, 64, 207, 208, 378, 379, 537, 538, 920, 939, 1116, 1117, 1259, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555, 3791, 3889, 3923, 5331], "-selection": 16, "transpile": [16, 31, 33, 44, 48, 51, 56, 62, 64, 1644, 2888, 2891, 2892, 3718, 3834, 4032, 4873, 5229, 5230, 5237, 5250, 5257, 5283, 5286, 5331, 5333, 5334, 5345, 5347, 5350, 5352, 5353, 5355, 5356, 5358, 5364, 5365, 5366, 5367, 5369, 5370], "turned": [16, 48, 1472, 5267], "off": [16, 48, 64, 357, 523, 1472, 1926, 5341], "string": [16, 35, 39, 51, 53, 64, 66, 86, 103, 107, 136, 140, 142, 147, 152, 165, 170, 172, 177, 195, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 240, 243, 251, 252, 253, 260, 274, 276, 277, 291, 293, 328, 347, 349, 366, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 411, 414, 422, 423, 424, 431, 445, 447, 448, 462, 464, 499, 518, 520, 525, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 570, 573, 581, 582, 583, 590, 604, 606, 607, 621, 623, 658, 677, 679, 922, 923, 931, 941, 943, 951, 956, 964, 980, 994, 1006, 1014, 1030, 1036, 1044, 1050, 1058, 1067, 1102, 1104, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1143, 1147, 1150, 1158, 1159, 1160, 1167, 1181, 1183, 1184, 1198, 1200, 1235, 1254, 1256, 1261, 1263, 1271, 1277, 1284, 1288, 1296, 1307, 1327, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1376, 1377, 1378, 1379, 1380, 1390, 1413, 1416, 1436, 1452, 1456, 1460, 1462, 1464, 1487, 1492, 1497, 1503, 1512, 1520, 1526, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1641, 1648, 1649, 1655, 1714, 1715, 1772, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1886, 1906, 1913, 1959, 1964, 1970, 1982, 2028, 2039, 2047, 2064, 2066, 2075, 2079, 2089, 2093, 2102, 2106, 2117, 2127, 2138, 2145, 2161, 2171, 2182, 2189, 2198, 2202, 2211, 2215, 2224, 2232, 2238, 2245, 2255, 2259, 2277, 2285, 2330, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2808, 2813, 2848, 2857, 2886, 2887, 2915, 2924, 2933, 3005, 3013, 3382, 3757, 3760, 3822, 3901, 3904, 3907, 3908, 3913, 3930, 3932, 3963, 3976, 3993, 4002, 4008, 4015, 4032, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4229, 4241, 4243, 4245, 4299, 4354, 4363, 4386, 4388, 4433, 4463, 4473, 4484, 4500, 4508, 4515, 4519, 4531, 4534, 4541, 4568, 4577, 4579, 4591, 4603, 4614, 4626, 4629, 4636, 4651, 4654, 4705, 4712, 4730, 4743, 4751, 4756, 4760, 4773, 4774, 4779, 4787, 4788, 4793, 4803, 4805, 4813, 4819, 4823, 4825, 4829, 4835, 4838, 4839, 4862, 4865, 4869, 4872, 4901, 4922, 5226, 5259, 5276, 5280, 5281, 5284, 5285, 5290, 5291, 5292, 5293, 5331, 5335, 5341, 5359], "identifier": [16, 35, 64, 916, 917, 1641, 1687, 3928, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4252, 4270, 4299, 4354, 4463], "annotate": [16, 1641], "effect": [16, 64, 235, 406, 565, 913, 1143, 1389, 1641, 1644, 2871, 3777, 3791, 4094, 4255, 4273, 4811, 4813, 5077, 5143, 5202, 5230, 5250, 5281, 5284, 5285], "name": [16, 24, 25, 29, 31, 35, 39, 51, 53, 193, 209, 215, 216, 235, 241, 244, 262, 277, 337, 364, 380, 386, 387, 406, 412, 415, 433, 448, 508, 523, 539, 545, 546, 565, 571, 574, 592, 607, 667, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 920, 923, 928, 939, 943, 948, 956, 961, 970, 976, 986, 991, 1006, 1011, 1020, 1026, 1036, 1041, 1050, 1055, 1067, 1096, 1099, 1102, 1118, 1123, 1124, 1143, 1148, 1151, 1169, 1184, 1244, 1259, 1263, 1268, 1277, 1283, 1296, 1303, 1319, 1324, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1388, 1389, 1392, 1394, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1433, 1441, 1446, 1448, 1450, 1453, 1456, 1458, 1459, 1465, 1466, 1468, 1470, 1471, 1472, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1509, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1644, 1648, 1649, 1668, 1669, 1670, 1673, 1686, 1698, 1719, 1732, 1749, 1753, 1761, 1772, 1777, 1786, 1792, 1802, 1807, 1815, 1821, 1831, 1837, 1847, 1853, 1863, 1869, 1879, 1887, 1891, 2011, 2015, 2016, 2019, 2022, 2285, 2311, 2315, 2316, 2321, 2322, 2323, 2330, 2333, 2337, 2342, 2349, 2356, 2359, 2363, 2369, 2372, 2376, 2382, 2385, 2389, 2394, 2403, 2408, 2417, 2422, 2431, 2436, 2445, 2450, 2459, 2464, 2494, 2501, 2504, 2509, 2517, 2522, 2530, 2535, 2543, 2548, 2556, 2561, 2569, 2574, 2582, 2587, 2595, 2600, 2608, 2613, 2621, 2626, 2634, 2639, 2647, 2652, 2660, 2665, 2673, 2678, 2686, 2691, 2699, 2704, 2712, 2717, 2725, 2730, 2738, 2743, 2751, 2756, 2764, 2769, 2799, 2808, 2843, 2848, 2886, 2887, 2907, 2908, 2909, 2911, 2915, 2918, 2920, 2924, 2927, 2929, 2933, 2936, 2939, 2948, 2957, 2974, 2991, 3005, 3013, 3024, 3041, 3058, 3075, 3091, 3108, 3124, 3141, 3157, 3174, 3191, 3208, 3225, 3242, 3259, 3276, 3292, 3309, 3326, 3342, 3359, 3376, 3382, 3401, 3418, 3427, 3435, 3452, 3468, 3482, 3483, 3484, 3485, 3486, 3487, 3490, 3499, 3515, 3532, 3548, 3557, 3574, 3591, 3607, 3615, 3624, 3641, 3657, 3674, 3690, 3704, 3705, 3706, 3707, 3708, 3709, 3720, 3723, 3724, 3730, 3736, 3737, 3738, 3739, 3748, 3749, 3751, 3752, 3757, 3779, 3782, 3783, 3786, 3787, 3789, 3790, 3794, 3796, 3808, 3822, 3832, 3834, 3835, 3838, 3851, 3852, 3855, 3859, 3867, 3869, 3871, 3887, 3888, 3893, 3922, 3928, 3932, 3935, 3942, 3943, 3945, 3951, 3954, 3957, 3963, 3973, 3976, 3982, 3983, 3985, 3986, 3989, 3991, 3992, 3993, 3994, 3999, 4002, 4003, 4004, 4007, 4008, 4009, 4012, 4015, 4016, 4030, 4031, 4032, 4036, 4047, 4051, 4052, 4053, 4054, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4121, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4139, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4208, 4219, 4229, 4246, 4249, 4264, 4282, 4294, 4297, 4299, 4354, 4463, 4751, 4767, 4802, 4803, 4829, 4832, 4835, 4838, 4862, 4865, 4869, 4872, 4873, 4875, 4900, 4915, 4921, 4922, 4923, 4924, 4928, 4930, 4933, 4936, 4938, 4939, 4942, 4947, 4950, 4953, 4956, 4959, 4962, 4965, 4968, 4971, 4974, 4977, 4980, 4983, 4986, 4989, 4992, 4995, 4998, 5001, 5005, 5009, 5012, 5015, 5019, 5022, 5024, 5025, 5028, 5031, 5052, 5063, 5066, 5068, 5069, 5072, 5075, 5078, 5081, 5084, 5087, 5090, 5094, 5097, 5100, 5103, 5106, 5108, 5109, 5112, 5115, 5118, 5121, 5124, 5127, 5131, 5135, 5138, 5141, 5144, 5148, 5153, 5159, 5164, 5167, 5170, 5173, 5176, 5179, 5182, 5185, 5188, 5191, 5193, 5194, 5197, 5200, 5203, 5206, 5209, 5212, 5215, 5218, 5221, 5224, 5230, 5239, 5244, 5250, 5275, 5278, 5281, 5282, 5295, 5307, 5319, 5331, 5332, 5333, 5334, 5338, 5352, 5354, 5355, 5356, 5357, 5358, 5359, 5366, 5367, 5368], "attribute": [16, 20, 31, 35, 39, 48, 64, 140, 193, 364, 523, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1714, 1715, 2277, 2282, 2285, 2291, 2969, 2986, 3003, 3005, 3011, 3013, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3382, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3704, 3730, 3736, 3777, 3796, 3814, 3833, 3862, 3993, 4008, 4182, 4267, 4297, 4298, 4354, 4463, 4568, 4842, 4922, 4923, 4928, 4930, 5226, 5237, 5239, 5244, 5278, 5286], "input": [16, 25, 35, 39, 44, 48, 51, 54, 64, 66, 86, 88, 101, 103, 104, 116, 117, 136, 138, 143, 145, 156, 158, 165, 172, 180, 185, 187, 233, 235, 242, 243, 254, 255, 256, 288, 289, 303, 304, 319, 320, 321, 342, 343, 344, 345, 361, 404, 406, 413, 414, 425, 426, 427, 459, 460, 474, 475, 490, 491, 492, 513, 514, 515, 516, 563, 565, 572, 573, 584, 585, 586, 618, 619, 633, 634, 649, 650, 651, 672, 673, 674, 675, 852, 914, 918, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1141, 1143, 1149, 1150, 1161, 1162, 1163, 1195, 1196, 1210, 1211, 1226, 1227, 1228, 1249, 1250, 1251, 1252, 1266, 1280, 1284, 1299, 1322, 1342, 1373, 1387, 1388, 1392, 1396, 1397, 1401, 1431, 1441, 1450, 1462, 1463, 1465, 1470, 1480, 1507, 1527, 1550, 1555, 1563, 1641, 1642, 1643, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1662, 1667, 1673, 1674, 1675, 1706, 1711, 1732, 1753, 1757, 1775, 1789, 1805, 1815, 1818, 1831, 1834, 1847, 1850, 1863, 1866, 1879, 1883, 2001, 2165, 2168, 2277, 2285, 2333, 2359, 2372, 2385, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2556, 2559, 2569, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2699, 2702, 2715, 2728, 2738, 2741, 2751, 2754, 2764, 2767, 2781, 2782, 2796, 2797, 2802, 2803, 2805, 2806, 2807, 2808, 2813, 2820, 2822, 2823, 2845, 2855, 2856, 2857, 2858, 2859, 2875, 2877, 2878, 2884, 2885, 2886, 2887, 2888, 2889, 2909, 2918, 2927, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3708, 3725, 3730, 3737, 3738, 3739, 3759, 3822, 3823, 3838, 3868, 3885, 3887, 3888, 3889, 3890, 3891, 3896, 3909, 3930, 3931, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3983, 3985, 3989, 3993, 3995, 3999, 4010, 4012, 4032, 4035, 4037, 4046, 4049, 4057, 4058, 4059, 4060, 4158, 4163, 4168, 4173, 4177, 4178, 4183, 4188, 4203, 4206, 4219, 4224, 4225, 4228, 4247, 4250, 4253, 4256, 4259, 4262, 4265, 4268, 4271, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4297, 4299, 4306, 4308, 4309, 4316, 4323, 4329, 4330, 4332, 4335, 4342, 4348, 4349, 4351, 4354, 4361, 4364, 4367, 4368, 4376, 4379, 4384, 4402, 4409, 4415, 4416, 4418, 4421, 4422, 4423, 4424, 4432, 4434, 4437, 4438, 4444, 4451, 4457, 4458, 4460, 4463, 4475, 4479, 4480, 4487, 4505, 4511, 4512, 4519, 4523, 4531, 4532, 4537, 4538, 4546, 4552, 4559, 4563, 4568, 4578, 4579, 4581, 4586, 4587, 4589, 4598, 4606, 4613, 4614, 4618, 4626, 4627, 4632, 4633, 4640, 4643, 4649, 4667, 4674, 4680, 4681, 4683, 4686, 4693, 4699, 4700, 4702, 4710, 4714, 4715, 4717, 4718, 4719, 4720, 4723, 4724, 4726, 4727, 4731, 4735, 4738, 4740, 4746, 4747, 4751, 4768, 4769, 4773, 4787, 4802, 4804, 4812, 4813, 4827, 4879, 4884, 4885, 4900, 4902, 4915, 4921, 4922, 4938, 4958, 4973, 4975, 4984, 5021, 5042, 5070, 5082, 5095, 5102, 5105, 5113, 5116, 5117, 5175, 5178, 5181, 5183, 5190, 5195, 5204, 5207, 5210, 5213, 5217, 5281, 5282, 5284, 5286, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5343, 5353, 5355, 5366, 5367], "should": [16, 28, 31, 35, 39, 44, 48, 51, 53, 54, 57, 64, 66, 72, 93, 97, 99, 103, 111, 116, 121, 157, 165, 179, 231, 233, 235, 240, 251, 252, 271, 286, 321, 326, 327, 347, 402, 404, 406, 411, 422, 423, 442, 457, 492, 497, 498, 518, 561, 563, 565, 570, 581, 582, 601, 616, 651, 656, 657, 677, 683, 761, 849, 852, 877, 912, 918, 985, 1035, 1063, 1065, 1096, 1139, 1141, 1143, 1147, 1158, 1159, 1178, 1193, 1228, 1233, 1234, 1254, 1295, 1296, 1315, 1388, 1394, 1441, 1449, 1455, 1458, 1462, 1465, 1537, 1641, 1644, 1830, 1846, 1862, 1878, 1910, 1934, 1948, 1961, 2024, 2032, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2192, 2199, 2212, 2217, 2240, 2256, 2275, 2277, 2282, 2285, 2291, 2293, 2309, 2313, 2318, 2323, 2333, 2334, 2337, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2445, 2459, 2473, 2487, 2801, 2804, 2805, 2808, 2813, 2848, 2856, 2857, 2883, 2888, 2890, 2909, 2918, 2927, 3011, 3019, 3388, 3718, 3730, 3779, 3789, 3814, 3823, 3862, 3868, 3888, 3891, 3905, 3932, 3963, 3976, 3999, 4008, 4012, 4025, 4026, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4195, 4203, 4206, 4219, 4229, 4241, 4246, 4570, 4606, 4613, 4745, 4767, 4878, 4922, 4958, 4964, 5014, 5023, 5033, 5143, 5220, 5226, 5230, 5237, 5250, 5263, 5278, 5281, 5286, 5288, 5289, 5331, 5333, 5334, 5335, 5367, 5369], "instead": [16, 25, 30, 31, 44, 57, 64, 97, 105, 180, 267, 271, 438, 442, 597, 601, 798, 849, 877, 904, 1063, 1174, 1178, 1342, 1374, 1398, 1399, 1427, 1443, 1470, 1471, 1499, 1556, 1558, 1641, 1666, 1987, 2001, 2054, 2176, 2251, 2282, 2285, 2291, 2309, 2363, 2376, 2814, 2831, 2914, 2923, 2932, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3718, 3730, 3790, 3901, 3993, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4241, 4255, 4301, 4318, 4337, 4356, 4404, 4426, 4432, 4444, 4446, 4467, 4554, 4571, 4669, 4688, 4756, 4757, 4813, 4896, 4917, 4930, 4964, 4982, 4985, 4988, 5014, 5093, 5096, 5226, 5237, 5278, 5280, 5331, 5333, 5334, 5355, 5372], "qobjheader": [16, 64, 916, 917, 1641, 3953, 4252, 4262, 4263, 4270, 4280, 4281, 4288, 4289, 4290, 4292, 4293], "user": [16, 25, 29, 31, 35, 39, 48, 51, 54, 57, 62, 64, 140, 179, 193, 235, 364, 406, 523, 565, 682, 904, 912, 918, 936, 1102, 1143, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1644, 1948, 1983, 2192, 2217, 2218, 2277, 2285, 2309, 2311, 3727, 3730, 3805, 3831, 3881, 3909, 3922, 3926, 3932, 3973, 3976, 3988, 3993, 4008, 4112, 4182, 4802, 4830, 4902, 4922, 5102, 5137, 5146, 5193, 5220, 5230, 5231, 5232, 5233, 5234, 5235, 5239, 5244, 5250, 5268, 5272, 5277, 5281, 5332, 5335, 5336], "inserted": [16, 48, 64, 943, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1472, 1503, 1537, 1563, 1567, 1641, 1648, 1649, 2323, 2888, 3994, 4004, 4025, 4026, 4032, 4037, 4076, 4081, 4085, 4091, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154, 4215, 4390, 4398, 4476, 4506, 4533, 4605, 4628, 4656, 4664, 5077, 5142, 5143, 5145, 5178, 5232, 5244, 5367], "copied": [16, 48, 64, 215, 216, 386, 387, 545, 546, 928, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1123, 1124, 1268, 1283, 1303, 1324, 1433, 1509, 1641, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1901, 1956, 2035, 2068, 2072, 2132, 2135, 2154, 2161, 2180, 2235, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 3730, 4224, 4487, 4519, 4614, 5181], "corresponding": [16, 30, 35, 44, 48, 64, 103, 105, 138, 140, 143, 145, 255, 256, 426, 427, 585, 586, 765, 769, 1003, 1072, 1080, 1088, 1162, 1163, 1372, 1377, 1387, 1393, 1397, 1441, 1444, 1450, 1456, 1458, 1466, 1468, 1471, 1477, 1537, 1563, 1567, 1641, 1719, 1733, 1734, 1735, 1736, 1738, 1749, 1988, 2001, 2005, 2022, 2165, 2168, 2191, 2193, 2216, 2260, 2867, 2877, 2878, 2927, 3730, 3748, 4002, 4015, 4112, 4194, 4388, 4400, 4570, 4603, 4654, 4761, 4782, 4797, 4802, 4839, 4885, 4886, 4910, 4933, 5033, 5082, 5089, 5120, 5146, 5178, 5235, 5244, 5245, 5252, 5294, 5302, 5314, 5326, 5362], ".result": [16, 25, 31, 33, 45, 62, 64, 2503, 3796, 3876, 3899, 3909, 5269, 5273, 5290, 5347, 5348, 5350, 5352, 5353, 5364], "headers": [16, 64, 918, 1641, 3730], "affect": [16, 64, 1641, 1689, 2323, 2337, 2349, 3730, 3993, 4008, 4139, 5235], "anymore": [16, 64, 5062], "metadata": [16, 25, 30, 31, 51, 64, 193, 206, 216, 364, 377, 387, 523, 536, 546, 1102, 1115, 1124, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1668, 2271, 2274, 2297, 2323, 2349, 2363, 2376, 2894, 3730, 3777, 3782, 3793, 3876, 3883, 3884, 3887, 3888, 3889, 3922, 3924, 3993, 4003, 4008, 4016, 4020, 4075, 4297, 4298, 5146, 5196, 5239, 5244], "repetitions": [16, 64, 286, 457, 616, 1193, 1376, 1377, 1379, 1441, 1450, 1456, 1503, 1537, 1563, 1567, 1641, 1970, 1974, 1976, 1978, 1979, 3708, 3730, 5250], "bool": [16, 31, 39, 53, 64, 66, 71, 72, 83, 86, 92, 93, 97, 99, 101, 107, 111, 116, 119, 120, 121, 127, 130, 132, 133, 135, 142, 147, 150, 151, 153, 157, 164, 165, 168, 169, 171, 172, 175, 176, 178, 187, 198, 211, 235, 248, 251, 252, 259, 260, 261, 266, 267, 269, 275, 277, 285, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 324, 325, 328, 334, 342, 369, 382, 406, 419, 422, 423, 430, 431, 432, 437, 438, 440, 446, 448, 456, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 496, 499, 505, 513, 528, 541, 565, 578, 581, 582, 589, 590, 591, 596, 597, 599, 605, 607, 615, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 654, 655, 658, 664, 672, 683, 709, 717, 761, 806, 814, 833, 849, 850, 861, 869, 877, 878, 896, 913, 934, 954, 968, 983, 997, 1004, 1018, 1033, 1036, 1048, 1061, 1107, 1120, 1143, 1155, 1158, 1159, 1166, 1167, 1168, 1173, 1174, 1176, 1182, 1184, 1192, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1231, 1232, 1235, 1241, 1249, 1263, 1275, 1291, 1292, 1293, 1310, 1312, 1313, 1330, 1376, 1377, 1378, 1379, 1388, 1398, 1401, 1402, 1439, 1441, 1442, 1450, 1456, 1463, 1466, 1468, 1471, 1472, 1474, 1475, 1477, 1503, 1515, 1526, 1537, 1563, 1567, 1640, 1641, 1667, 1689, 1693, 1706, 1710, 1721, 1746, 1748, 1750, 1752, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1903, 1905, 1907, 1923, 1926, 1932, 1934, 1947, 1957, 1958, 1994, 1998, 2025, 2027, 2032, 2036, 2038, 2055, 2058, 2063, 2073, 2074, 2087, 2088, 2100, 2101, 2115, 2116, 2121, 2122, 2136, 2137, 2159, 2162, 2170, 2177, 2181, 2195, 2201, 2204, 2208, 2214, 2218, 2220, 2223, 2226, 2230, 2232, 2236, 2237, 2244, 2248, 2250, 2252, 2258, 2261, 2264, 2300, 2301, 2302, 2305, 2333, 2345, 2359, 2372, 2385, 2401, 2415, 2417, 2429, 2431, 2443, 2457, 2471, 2476, 2477, 2479, 2483, 2490, 2491, 2493, 2497, 2504, 2515, 2517, 2528, 2530, 2541, 2543, 2554, 2556, 2567, 2569, 2580, 2582, 2593, 2595, 2606, 2608, 2619, 2621, 2632, 2634, 2645, 2647, 2658, 2660, 2671, 2673, 2684, 2686, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2812, 2813, 2814, 2831, 2845, 2847, 2848, 2855, 2856, 2857, 2858, 2859, 2889, 2897, 2898, 2899, 2902, 3705, 3707, 3708, 3721, 3723, 3725, 3730, 3737, 3738, 3739, 3748, 3752, 3754, 3766, 3768, 3779, 3781, 3783, 3789, 3791, 3792, 3794, 3799, 3800, 3803, 3806, 3812, 3814, 3815, 3836, 3837, 3849, 3861, 3862, 3863, 3869, 3880, 3882, 3883, 3884, 3886, 3922, 3926, 3932, 3943, 3944, 3951, 3957, 3963, 3976, 3987, 3988, 3994, 3995, 3999, 4000, 4001, 4004, 4005, 4006, 4007, 4009, 4010, 4012, 4013, 4014, 4017, 4018, 4019, 4039, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4080, 4082, 4090, 4092, 4099, 4101, 4108, 4110, 4117, 4119, 4126, 4128, 4135, 4137, 4144, 4146, 4153, 4155, 4157, 4158, 4160, 4162, 4163, 4165, 4167, 4168, 4170, 4172, 4173, 4175, 4177, 4178, 4180, 4182, 4183, 4185, 4187, 4188, 4189, 4192, 4193, 4195, 4197, 4203, 4206, 4209, 4212, 4215, 4219, 4225, 4228, 4241, 4273, 4299, 4301, 4318, 4337, 4356, 4404, 4426, 4430, 4432, 4446, 4465, 4466, 4467, 4471, 4472, 4485, 4489, 4491, 4492, 4494, 4497, 4498, 4503, 4506, 4509, 4513, 4515, 4516, 4518, 4522, 4525, 4528, 4533, 4535, 4539, 4541, 4542, 4544, 4549, 4554, 4568, 4571, 4575, 4579, 4580, 4582, 4584, 4591, 4592, 4614, 4617, 4620, 4623, 4628, 4630, 4634, 4636, 4637, 4639, 4645, 4669, 4688, 4705, 4714, 4720, 4725, 4726, 4727, 4731, 4732, 4733, 4740, 4749, 4771, 4796, 4802, 4811, 4812, 4813, 4819, 4823, 4825, 4829, 4847, 4848, 4849, 4896, 4917, 4927, 4930, 4970, 4976, 5018, 5077, 5117, 5137, 5140, 5143, 5150, 5156, 5162, 5178, 5190, 5202, 5214, 5217, 5250, 5253, 5254, 5269, 5270, 5273, 5277, 5280, 5281, 5283, 5284, 5287, 5288, 5289, 5290, 5294, 5331, 5332, 5333, 5334, 5335], "per": [16, 31, 64, 116, 123, 147, 165, 172, 186, 763, 769, 798, 822, 849, 877, 904, 912, 913, 1377, 1448, 1450, 1458, 1468, 1537, 1641, 1926, 2323, 2337, 2349, 3730, 3932, 3963, 3976, 4255, 4273, 4503, 4580, 4819, 4823, 4825, 4958, 5033, 5290, 5331, 5333, 5334, 5335], "-shot": [16, 64, 913, 1641, 3730, 4273], "bitstrings": [16, 30, 64, 136, 1641, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2170, 2182, 2188, 2198, 2201, 2211, 2214, 2224, 2226, 2238, 2244, 2255, 2258, 2267, 2274, 3730, 4747, 4749, 4756, 4757, 4769, 4771, 4774, 4788, 4812], "provided": [16, 25, 31, 48, 53, 64, 66, 71, 73, 88, 89, 97, 98, 109, 120, 147, 150, 155, 158, 162, 163, 165, 168, 169, 172, 175, 179, 193, 234, 251, 252, 255, 256, 342, 343, 344, 345, 364, 405, 422, 423, 426, 427, 513, 514, 515, 516, 523, 564, 581, 582, 585, 586, 672, 673, 674, 675, 682, 773, 849, 877, 919, 920, 921, 923, 928, 939, 940, 942, 943, 948, 956, 961, 976, 991, 1001, 1005, 1006, 1011, 1026, 1036, 1041, 1050, 1055, 1072, 1088, 1102, 1142, 1158, 1159, 1162, 1163, 1249, 1250, 1251, 1252, 1259, 1260, 1262, 1263, 1268, 1283, 1303, 1318, 1324, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1433, 1441, 1447, 1448, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1509, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 1642, 1643, 1644, 1706, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1929, 2290, 2308, 2318, 2394, 2408, 2422, 2436, 2450, 2464, 2486, 2500, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2830, 2905, 2936, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3417, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3718, 3730, 3824, 3935, 3983, 3988, 3993, 3999, 4000, 4001, 4002, 4008, 4012, 4013, 4014, 4015, 4084, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4219, 4225, 4229, 4255, 4297, 4463, 4518, 4544, 4639, 4705, 4712, 4819, 4825, 4895, 4896, 4916, 4917, 4958, 4973, 5143, 5146, 5150, 5156, 5162, 5214, 5217, 5226, 5239, 5244, 5250, 5257, 5276, 5282, 5283, 5290, 5331, 5333, 5334], "openpulse": [16, 35, 64, 1641, 2862, 2865, 3730, 3932, 3963, 3976, 4228, 5356, 5358, 5359], "future": [16, 35, 51, 64, 271, 442, 601, 913, 1001, 1005, 1178, 1641, 2277, 2297, 2482, 2484, 2813, 2903, 3752, 3932, 3963, 3976, 4035, 4041, 4057, 4058, 4059, 4060, 4177, 4255, 4273, 4297, 4915, 4946, 4952, 5004, 5250], "modern": [16, 64, 913, 1641, 4255, 4273, 5250], "ibm": [16, 19, 20, 21, 25, 26, 31, 33, 47, 48, 53, 63, 913, 1542, 1641, 3704, 3708, 3713, 3714, 3718, 3723, 3736, 3739, 3744, 3745, 3746, 3748, 3750, 3752, 3753, 3754, 3766, 3768, 3777, 3796, 3814, 3834, 3862, 3876, 4255, 4273, 5250, 5286, 5288, 5289, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "alternative": [16, 64, 97, 235, 406, 565, 913, 1143, 1641, 2165, 2166, 2323, 2349, 4255, 4273, 5250, 5281, 5347], "optional": [16, 30, 35, 51, 64, 66, 69, 82, 84, 86, 88, 90, 92, 97, 99, 101, 104, 110, 118, 120, 126, 128, 130, 131, 133, 134, 138, 147, 148, 156, 162, 165, 166, 169, 172, 173, 179, 186, 187, 188, 190, 195, 198, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 240, 251, 252, 276, 291, 293, 309, 335, 336, 347, 349, 363, 366, 369, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 411, 422, 423, 447, 462, 464, 480, 506, 507, 518, 520, 525, 528, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 565, 570, 581, 582, 606, 621, 623, 639, 665, 666, 677, 679, 682, 683, 687, 691, 696, 699, 701, 704, 707, 709, 712, 715, 717, 720, 723, 729, 732, 738, 741, 747, 750, 756, 759, 766, 771, 773, 776, 779, 784, 787, 793, 796, 798, 801, 804, 806, 809, 812, 814, 817, 820, 825, 828, 830, 833, 836, 839, 841, 844, 847, 849, 850, 852, 855, 859, 861, 864, 867, 869, 872, 875, 877, 878, 882, 886, 888, 891, 894, 896, 899, 902, 907, 910, 913, 919, 920, 923, 939, 942, 943, 956, 970, 975, 1000, 1002, 1006, 1020, 1025, 1036, 1050, 1063, 1104, 1106, 1107, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1143, 1147, 1158, 1159, 1183, 1198, 1200, 1216, 1242, 1243, 1254, 1256, 1259, 1262, 1263, 1277, 1282, 1293, 1296, 1302, 1313, 1318, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1376, 1377, 1379, 1381, 1388, 1390, 1392, 1398, 1399, 1401, 1406, 1407, 1410, 1413, 1416, 1441, 1443, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1483, 1487, 1492, 1497, 1503, 1520, 1526, 1531, 1537, 1540, 1545, 1548, 1551, 1553, 1555, 1556, 1558, 1561, 1563, 1565, 1567, 1640, 1641, 1642, 1643, 1644, 1648, 1649, 1655, 1710, 1760, 1791, 1815, 1820, 1831, 1836, 1847, 1852, 1863, 1868, 1886, 1903, 1926, 1928, 1929, 1934, 1952, 1957, 1970, 1987, 2008, 2010, 2013, 2014, 2017, 2018, 2020, 2025, 2027, 2032, 2036, 2055, 2063, 2073, 2087, 2091, 2100, 2115, 2126, 2136, 2155, 2162, 2181, 2236, 2285, 2308, 2311, 2318, 2323, 2337, 2349, 2363, 2376, 2486, 2496, 2500, 2503, 2634, 2787, 2798, 2814, 2816, 2842, 2862, 2905, 2936, 3005, 3013, 3382, 3705, 3708, 3721, 3723, 3725, 3727, 3728, 3730, 3737, 3738, 3739, 3745, 3748, 3749, 3750, 3751, 3752, 3754, 3757, 3766, 3779, 3781, 3782, 3783, 3787, 3789, 3790, 3791, 3792, 3793, 3796, 3804, 3808, 3809, 3811, 3812, 3814, 3816, 3821, 3823, 3824, 3830, 3832, 3833, 3835, 3838, 3845, 3847, 3849, 3850, 3851, 3852, 3854, 3855, 3857, 3862, 3864, 3865, 3868, 3874, 3875, 3880, 3885, 3887, 3896, 3909, 3913, 3916, 3918, 3919, 3920, 3922, 3926, 3929, 3931, 3932, 3935, 3942, 3945, 3954, 3957, 3963, 3965, 3973, 3976, 3983, 3993, 3994, 3999, 4000, 4001, 4003, 4004, 4007, 4008, 4009, 4012, 4013, 4014, 4016, 4030, 4031, 4032, 4036, 4047, 4051, 4052, 4053, 4054, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4121, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4139, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4219, 4225, 4282, 4297, 4298, 4299, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4376, 4404, 4407, 4426, 4429, 4446, 4449, 4467, 4471, 4502, 4518, 4544, 4552, 4554, 4557, 4571, 4574, 4578, 4582, 4588, 4614, 4626, 4639, 4640, 4669, 4672, 4688, 4691, 4712, 4716, 4717, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4767, 4768, 4769, 4770, 4771, 4772, 4803, 4811, 4812, 4813, 4819, 4823, 4825, 4830, 4875, 4877, 4878, 4895, 4896, 4899, 4900, 4915, 4916, 4917, 4920, 4921, 4922, 4923, 4924, 4938, 5014, 5068, 5143, 5151, 5157, 5202, 5227, 5230, 5235, 5236, 5238, 5239, 5244, 5250, 5252, 5254, 5257, 5262, 5268, 5272, 5278, 5281, 5286, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334], "float": [16, 30, 35, 39, 64, 70, 71, 74, 75, 79, 86, 87, 88, 92, 95, 97, 101, 104, 105, 107, 110, 113, 116, 118, 119, 120, 123, 130, 133, 140, 142, 143, 145, 146, 147, 149, 150, 151, 165, 167, 168, 169, 172, 174, 175, 176, 179, 182, 185, 186, 188, 190, 191, 193, 195, 212, 218, 219, 220, 221, 224, 225, 226, 232, 235, 237, 255, 256, 258, 259, 260, 261, 263, 268, 273, 279, 280, 281, 282, 290, 291, 292, 293, 294, 295, 296, 297, 316, 338, 339, 340, 341, 353, 356, 357, 358, 361, 363, 364, 366, 383, 389, 390, 391, 392, 395, 396, 397, 403, 406, 408, 426, 427, 429, 430, 431, 432, 434, 439, 444, 450, 451, 452, 453, 461, 462, 463, 464, 465, 466, 467, 468, 487, 509, 510, 511, 512, 523, 525, 542, 548, 549, 550, 551, 554, 555, 556, 562, 565, 567, 585, 586, 588, 589, 590, 591, 593, 598, 603, 609, 610, 611, 612, 620, 621, 622, 623, 624, 625, 626, 627, 646, 668, 669, 670, 671, 683, 685, 687, 693, 695, 696, 703, 704, 709, 711, 712, 717, 719, 720, 728, 729, 737, 738, 746, 747, 755, 756, 761, 763, 764, 765, 766, 773, 775, 776, 783, 784, 792, 793, 798, 800, 801, 806, 808, 809, 816, 817, 824, 825, 830, 833, 835, 836, 841, 843, 844, 849, 850, 851, 852, 854, 855, 856, 861, 863, 864, 871, 872, 877, 878, 879, 881, 882, 883, 890, 891, 896, 898, 899, 904, 906, 907, 923, 943, 956, 979, 985, 999, 1006, 1029, 1035, 1036, 1050, 1071, 1076, 1083, 1087, 1092, 1102, 1104, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1140, 1143, 1162, 1163, 1165, 1166, 1167, 1168, 1170, 1175, 1180, 1182, 1186, 1187, 1188, 1189, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1223, 1245, 1246, 1247, 1248, 1263, 1287, 1295, 1306, 1315, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1406, 1407, 1410, 1441, 1447, 1448, 1449, 1450, 1455, 1456, 1457, 1458, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1475, 1476, 1477, 1480, 1483, 1503, 1529, 1537, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1641, 1642, 1643, 1644, 1655, 1673, 1732, 1753, 1764, 1771, 1795, 1824, 1830, 1840, 1846, 1856, 1862, 1872, 1878, 1890, 1906, 1928, 1929, 1959, 1985, 1987, 1988, 1996, 1999, 2009, 2075, 2089, 2102, 2117, 2126, 2138, 2155, 2162, 2182, 2198, 2201, 2211, 2224, 2238, 2244, 2255, 2308, 2311, 2482, 2486, 2496, 2500, 2503, 2712, 2793, 2824, 2825, 2830, 2837, 2838, 2842, 2862, 2867, 2905, 2936, 3708, 3730, 3737, 3781, 3792, 3814, 3824, 3830, 3832, 3849, 3862, 3901, 3905, 3916, 3919, 3927, 3932, 3938, 3940, 3941, 3946, 3947, 3948, 3949, 3963, 3973, 3976, 3995, 4010, 4026, 4032, 4039, 4046, 4049, 4050, 4051, 4052, 4053, 4054, 4080, 4084, 4090, 4099, 4108, 4112, 4117, 4126, 4130, 4135, 4144, 4153, 4162, 4167, 4172, 4187, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4231, 4255, 4261, 4264, 4273, 4279, 4329, 4348, 4400, 4415, 4430, 4437, 4457, 4546, 4562, 4570, 4578, 4582, 4588, 4645, 4680, 4699, 4705, 4714, 4715, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4726, 4727, 4739, 4740, 4743, 4747, 4750, 4751, 4769, 4772, 4773, 4787, 4796, 4814, 4819, 4823, 4825, 4875, 4877, 4878, 4900, 4901, 4921, 4922, 4964, 5033, 5056, 5077, 5129, 5143, 5154, 5160, 5202, 5214, 5217, 5230, 5239, 5243, 5244, 5249, 5250, 5252, 5254, 5259, 5262, 5281, 5282, 5287, 5289, 5291, 5341, 5361], "drive": [16, 35, 64, 1641, 2287, 2863, 2867, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3385, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3932, 3963, 3965, 3967, 3976, 4034, 4038, 4063, 4065, 4220, 5151, 5331], "lo": [16, 1641, 3730, 3963, 3979, 4255, 4261, 4273, 4279], "frequencies": [16, 136, 140, 142, 1641, 1926, 2337, 2862, 2863, 2867, 3730, 3973, 4255, 4261, 4273, 4279], "hz": [16, 64, 1641, 2318, 3730, 3963, 4039, 4051, 4053, 4112, 4130, 4264, 5359], "overridden": [16, 64, 1641, 2204, 2248, 2261, 3730], "specified": [16, 24, 35, 39, 64, 66, 70, 97, 110, 119, 147, 215, 235, 251, 252, 253, 255, 256, 277, 299, 300, 346, 362, 386, 406, 422, 423, 424, 426, 427, 448, 470, 471, 517, 545, 565, 581, 582, 583, 585, 586, 607, 629, 630, 676, 768, 970, 986, 1002, 1036, 1076, 1092, 1096, 1123, 1143, 1158, 1159, 1160, 1162, 1163, 1184, 1206, 1207, 1253, 1263, 1392, 1399, 1441, 1443, 1444, 1456, 1465, 1470, 1471, 1480, 1537, 1641, 1642, 1644, 1674, 1700, 1706, 1714, 1715, 1879, 1934, 1936, 2165, 2166, 2167, 2282, 2285, 2290, 2291, 2308, 2311, 2315, 2316, 2321, 2322, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2486, 2494, 2496, 2500, 2502, 2503, 2504, 2517, 2777, 2778, 2798, 2808, 2813, 2814, 2820, 2821, 2867, 2868, 2886, 2887, 2889, 2905, 2907, 2908, 2968, 2969, 2985, 2986, 3002, 3003, 3005, 3010, 3011, 3013, 3018, 3019, 3035, 3036, 3052, 3053, 3069, 3070, 3086, 3087, 3102, 3103, 3119, 3120, 3135, 3136, 3152, 3153, 3168, 3169, 3185, 3186, 3202, 3203, 3219, 3220, 3236, 3237, 3253, 3254, 3270, 3271, 3287, 3288, 3303, 3304, 3320, 3321, 3337, 3338, 3353, 3354, 3370, 3371, 3382, 3387, 3388, 3395, 3396, 3412, 3413, 3446, 3447, 3463, 3464, 3479, 3480, 3483, 3484, 3486, 3487, 3510, 3511, 3526, 3527, 3543, 3544, 3568, 3569, 3585, 3586, 3602, 3603, 3635, 3636, 3652, 3653, 3668, 3669, 3685, 3686, 3701, 3702, 3704, 3706, 3707, 3708, 3709, 3723, 3725, 3728, 3730, 3737, 3738, 3739, 3748, 3749, 3751, 3752, 3757, 3760, 3761, 3763, 3764, 3779, 3787, 3789, 3790, 3805, 3823, 3824, 3838, 3849, 3852, 3855, 3862, 3868, 3872, 3873, 3874, 3875, 3885, 3887, 3888, 3901, 3905, 3919, 3920, 3932, 3935, 3942, 3957, 3976, 3985, 3999, 4001, 4008, 4009, 4012, 4014, 4026, 4158, 4163, 4168, 4172, 4173, 4178, 4183, 4187, 4188, 4195, 4203, 4206, 4297, 4298, 4301, 4306, 4307, 4318, 4323, 4328, 4335, 4337, 4342, 4347, 4356, 4364, 4366, 4379, 4381, 4386, 4402, 4404, 4409, 4414, 4424, 4426, 4432, 4433, 4434, 4436, 4446, 4451, 4456, 4467, 4470, 4475, 4478, 4494, 4498, 4505, 4510, 4532, 4536, 4554, 4559, 4561, 4571, 4581, 4585, 4598, 4599, 4627, 4631, 4643, 4646, 4651, 4669, 4674, 4679, 4686, 4688, 4693, 4698, 4743, 4746, 4747, 4748, 4761, 4768, 4769, 4770, 4782, 4797, 4803, 4805, 4806, 4807, 4808, 4812, 4813, 4839, 4878, 4900, 4910, 4915, 4921, 4922, 4923, 4924, 4928, 4930, 4934, 4935, 4938, 4964, 4973, 4982, 4985, 4988, 5033, 5083, 5093, 5096, 5143, 5158, 5202, 5204, 5205, 5214, 5217, 5230, 5245, 5262, 5263, 5281, 5290, 5291, 5292, 5293, 5294, 5302, 5314, 5326, 5331, 5332, 5333, 5334], "length": [16, 31, 39, 64, 165, 172, 198, 233, 235, 369, 404, 406, 528, 563, 565, 693, 765, 970, 1099, 1101, 1107, 1141, 1143, 1380, 1443, 1444, 1640, 1641, 1644, 1901, 1943, 1956, 2035, 2072, 2135, 2154, 2168, 2180, 2235, 2311, 2333, 2359, 2372, 2385, 2808, 2848, 2851, 3725, 3730, 3941, 3947, 4025, 4075, 4094, 4157, 4162, 4167, 4172, 4177, 4264, 4282, 4354, 4376, 4385, 4386, 4433, 4463, 4523, 4549, 4614, 4618, 4640, 4650, 4651, 4733, 4744, 4749, 4771, 4774, 4788, 4880, 4922, 5077, 5143, 5193, 5220, 5226, 5257, 5268, 5281, 5286, 5287, 5288, 5289, 5290, 5331, 5333, 5334, 5354, 5362], "ranges": [16, 1641, 3963], "form": [16, 25, 31, 35, 39, 44, 51, 64, 97, 163, 193, 201, 204, 205, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 240, 241, 245, 249, 250, 251, 252, 257, 258, 262, 263, 264, 268, 273, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 364, 372, 375, 376, 380, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 411, 412, 416, 420, 421, 422, 423, 428, 429, 433, 434, 435, 439, 444, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 523, 531, 534, 535, 539, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 570, 571, 575, 579, 580, 581, 582, 587, 588, 592, 593, 594, 598, 603, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 798, 915, 1102, 1110, 1113, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1640, 1641, 1654, 1722, 1998, 2024, 2032, 2119, 2285, 2287, 2333, 2359, 2372, 2385, 2877, 2878, 2963, 2965, 2980, 2982, 2997, 2999, 3005, 3007, 3013, 3015, 3030, 3032, 3047, 3049, 3064, 3066, 3081, 3083, 3097, 3099, 3114, 3116, 3130, 3132, 3147, 3149, 3163, 3165, 3180, 3182, 3197, 3199, 3214, 3216, 3231, 3233, 3248, 3250, 3265, 3267, 3282, 3284, 3298, 3300, 3315, 3317, 3332, 3334, 3348, 3350, 3365, 3367, 3382, 3384, 3390, 3392, 3407, 3409, 3441, 3443, 3458, 3460, 3474, 3476, 3505, 3507, 3521, 3523, 3538, 3540, 3563, 3565, 3580, 3582, 3597, 3599, 3630, 3632, 3647, 3649, 3663, 3665, 3680, 3682, 3696, 3698, 3730, 3757, 3765, 3885, 3920, 3932, 3934, 3935, 3950, 3951, 3953, 3956, 3957, 3959, 3962, 3963, 3965, 3972, 3975, 3976, 3978, 3981, 4034, 4112, 4121, 4139, 4195, 4241, 4248, 4251, 4255, 4257, 4260, 4261, 4263, 4266, 4269, 4273, 4275, 4278, 4279, 4281, 4282, 4284, 4290, 4293, 4296, 4390, 4398, 4463, 4515, 4541, 4605, 4636, 4656, 4664, 4751, 4773, 4787, 4802, 4803, 4809, 4836, 4863, 4870, 4938, 5003, 5033, 5195, 5226, 5227, 5232, 5233, 5234, 5238, 5239, 5244, 5274, 5332], "[range": [16, 1641], "_min": [16, 1641], "_max": [16, 56, 64, 1641, 2323, 2349, 2363, 2376], "validate": [16, 64, 89, 935, 955, 969, 985, 999, 1019, 1035, 1049, 1062, 1276, 1295, 1315, 1331, 1401, 1405, 1440, 1449, 1455, 1516, 1529, 1641, 1771, 1785, 1801, 1814, 1830, 1846, 1862, 1878, 1897, 2333, 2345, 2359, 2372, 2385, 2402, 2416, 2430, 2444, 2458, 2472, 2485, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2711, 2724, 2737, 2750, 2763, 2776, 3890, 3921, 3931, 3973, 4161, 4166, 4171, 4176, 4177, 4181, 4182, 4186, 4299, 4354, 4595, 4727, 4740, 5092, 5277], "_freq": [16, 64, 1641, 2337, 2863, 3730, 3838, 3973, 4255, 4261, 4273, 4279, 5359], "experiment": [16, 18, 35, 45, 54, 64, 1374, 1499, 1641, 1644, 2323, 2337, 2349, 2363, 2376, 2494, 2501, 2502, 2914, 2915, 2923, 2924, 2932, 2933, 3704, 3723, 3730, 3739, 3757, 3760, 3761, 3762, 3763, 3764, 3774, 3775, 3776, 3777, 3778, 3779, 3781, 3782, 3783, 3785, 3786, 3788, 3789, 3790, 3791, 3793, 3794, 3796, 3814, 3834, 3845, 3855, 3862, 3864, 3871, 3872, 3873, 3874, 3875, 4250, 4252, 4258, 4259, 4260, 4261, 4264, 4265, 4270, 4276, 4277, 4278, 4279, 4282, 4283, 4288, 4295, 4751, 4802, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 5369], "ie": [16, 31, 35, 39, 64, 193, 277, 364, 448, 523, 607, 1102, 1184, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 3932, 3976, 4317, 4319, 4329, 4334, 4336, 4338, 4348, 4353, 4403, 4405, 4415, 4420, 4445, 4447, 4457, 4462, 4668, 4670, 4680, 4685, 4687, 4689, 4699, 4704, 5239, 5244], "frequency": [16, 31, 35, 64, 798, 841, 917, 1641, 1926, 2170, 2201, 2214, 2226, 2244, 2258, 2318, 2808, 2854, 2862, 2867, 2936, 3938, 3979, 3999, 4012, 4039, 4051, 4053, 4103, 4112, 4130, 4162, 4191, 4196, 4199, 4200, 4201, 4264, 4811, 5123, 5295, 5331, 5357, 5359], "configurations": [16, 64, 1641, 3730, 5023, 5137, 5193, 5256], "channels": [16, 64, 1641, 2287, 2862, 2884, 2886, 2887, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3963, 3965, 3966, 3969, 3970, 3993, 3994, 3996, 3997, 3998, 3999, 4000, 4001, 4008, 4011, 4012, 4013, 4014, 4025, 4026, 4030, 4034, 4037, 4039, 4045, 4046, 4048, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4077, 4078, 4079, 4080, 4084, 4085, 4087, 4088, 4089, 4090, 4094, 4095, 4096, 4097, 4098, 4099, 4103, 4104, 4105, 4106, 4107, 4108, 4112, 4113, 4114, 4115, 4116, 4117, 4121, 4122, 4123, 4124, 4125, 4126, 4130, 4131, 4132, 4133, 4134, 4135, 4139, 4140, 4141, 4142, 4143, 4144, 4148, 4149, 4150, 4151, 4152, 4153, 4203, 4206, 4215, 4219, 4225, 4227, 4316, 4444, 4714, 4717, 4720, 4726, 5295, 5307, 5319, 5331, 5357], "values": [16, 25, 28, 30, 31, 35, 39, 48, 53, 54, 64, 82, 84, 88, 89, 90, 97, 103, 110, 126, 128, 131, 134, 140, 142, 143, 144, 145, 146, 147, 148, 162, 165, 166, 172, 173, 179, 186, 198, 200, 235, 240, 285, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 324, 369, 371, 406, 411, 456, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 495, 528, 530, 565, 570, 615, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 654, 691, 693, 699, 707, 715, 723, 732, 741, 750, 759, 763, 771, 773, 779, 787, 796, 798, 804, 812, 820, 828, 839, 847, 849, 850, 859, 861, 867, 875, 877, 878, 886, 894, 902, 904, 910, 1006, 1072, 1088, 1107, 1109, 1143, 1147, 1192, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1231, 1376, 1377, 1378, 1379, 1441, 1450, 1456, 1465, 1471, 1475, 1503, 1537, 1563, 1567, 1641, 1674, 1688, 1901, 1906, 1908, 1928, 1929, 1934, 1956, 1959, 1985, 1987, 1996, 2008, 2024, 2028, 2032, 2035, 2039, 2042, 2064, 2072, 2075, 2089, 2102, 2117, 2123, 2135, 2138, 2141, 2154, 2155, 2156, 2161, 2162, 2169, 2170, 2180, 2182, 2188, 2198, 2201, 2211, 2214, 2224, 2226, 2232, 2235, 2238, 2239, 2244, 2255, 2258, 2265, 2269, 2271, 2274, 2277, 2285, 2306, 2311, 2323, 2326, 2334, 2337, 2338, 2349, 2352, 2360, 2363, 2366, 2373, 2376, 2379, 2386, 2417, 2504, 2517, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2808, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2867, 2886, 2887, 2909, 2918, 2927, 2932, 3005, 3013, 3382, 3723, 3738, 3739, 3757, 3779, 3782, 3787, 3789, 3793, 3795, 3798, 3821, 3885, 3888, 3890, 3891, 3922, 3923, 3995, 4010, 4032, 4159, 4164, 4169, 4174, 4179, 4182, 4184, 4187, 4224, 4231, 4241, 4246, 4249, 4376, 4385, 4386, 4389, 4390, 4398, 4506, 4518, 4519, 4533, 4544, 4604, 4605, 4614, 4617, 4628, 4634, 4639, 4640, 4650, 4651, 4655, 4656, 4664, 4747, 4754, 4766, 4769, 4777, 4786, 4791, 4801, 4803, 4830, 4885, 4888, 4890, 4896, 4906, 4914, 4915, 4917, 4930, 4940, 4964, 4976, 5021, 5102, 5143, 5193, 5202, 5214, 5217, 5226, 5227, 5229, 5230, 5236, 5237, 5238, 5240, 5242, 5243, 5248, 5249, 5250, 5281, 5283, 5290, 5294, 5295, 5298, 5306, 5310, 5318, 5319, 5322, 5330, 5331, 5332, 5333, 5334, 5338, 5339, 5345, 5362, 5366, 5372], "settable": [16, 64, 1456, 1641], "config": [16, 51, 62, 64, 235, 406, 565, 918, 1143, 2282, 2291, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4250, 4252, 4256, 4257, 4258, 4259, 4261, 4265, 4270, 4274, 4275, 4276, 4277, 4283, 4285, 4295, 5231, 5232, 5233, 5234, 5281, 5332, 5359], "except": [16, 39, 54, 64, 798, 841, 3796, 3814, 3862, 3906, 3909, 5342, 5343, 5356, 5364], "sweep": 16, "assumed": [16, 64, 88, 142, 144, 255, 256, 426, 427, 585, 586, 1063, 1162, 1163, 1378, 2165, 2801, 2875, 2877, 2878, 2889, 4568, 4705, 4743, 4744, 4745, 4747, 4767, 4769, 4770, 5033, 5154, 5160, 5178, 5250], "channel": [16, 35, 64, 319, 490, 649, 1226, 1926, 2024, 2286, 2287, 2288, 2289, 2751, 2796, 2813, 2829, 2836, 2845, 2846, 2847, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2863, 2864, 2865, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2875, 2876, 2877, 2878, 2881, 2884, 2885, 2886, 2887, 2964, 2965, 2966, 2967, 2981, 2982, 2983, 2984, 2998, 2999, 3000, 3001, 3006, 3007, 3008, 3009, 3014, 3015, 3016, 3017, 3031, 3032, 3033, 3034, 3048, 3049, 3050, 3051, 3065, 3066, 3067, 3068, 3082, 3083, 3084, 3085, 3098, 3099, 3100, 3101, 3115, 3116, 3117, 3118, 3131, 3132, 3133, 3134, 3148, 3149, 3150, 3151, 3164, 3165, 3166, 3167, 3181, 3182, 3183, 3184, 3198, 3199, 3200, 3201, 3215, 3216, 3217, 3218, 3232, 3233, 3234, 3235, 3249, 3250, 3251, 3252, 3266, 3267, 3268, 3269, 3283, 3284, 3285, 3286, 3299, 3300, 3301, 3302, 3316, 3317, 3318, 3319, 3333, 3334, 3335, 3336, 3349, 3350, 3351, 3352, 3366, 3367, 3368, 3369, 3383, 3384, 3385, 3386, 3391, 3392, 3393, 3394, 3408, 3409, 3410, 3411, 3442, 3443, 3444, 3445, 3459, 3460, 3461, 3462, 3475, 3476, 3477, 3478, 3506, 3507, 3508, 3509, 3522, 3523, 3524, 3525, 3539, 3540, 3541, 3542, 3564, 3565, 3566, 3567, 3581, 3582, 3583, 3584, 3598, 3599, 3600, 3601, 3631, 3632, 3633, 3634, 3648, 3649, 3650, 3651, 3664, 3665, 3666, 3667, 3681, 3682, 3683, 3684, 3697, 3698, 3699, 3700, 3932, 3963, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3976, 3979, 3993, 3999, 4000, 4001, 4008, 4012, 4013, 4014, 4020, 4025, 4026, 4030, 4034, 4036, 4045, 4047, 4048, 4051, 4052, 4053, 4054, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4080, 4084, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4219, 4220, 4225, 4264, 4316, 4317, 4319, 4326, 4327, 4329, 4332, 4333, 4334, 4335, 4336, 4338, 4345, 4346, 4348, 4351, 4352, 4353, 4402, 4403, 4405, 4412, 4413, 4415, 4418, 4419, 4420, 4444, 4445, 4447, 4454, 4455, 4457, 4460, 4461, 4462, 4667, 4668, 4670, 4677, 4678, 4680, 4683, 4684, 4685, 4686, 4687, 4689, 4696, 4697, 4699, 4702, 4703, 4704, 4714, 4717, 4720, 4726, 4735, 5151, 5157, 5295, 5307, 5331, 5357, 5366], "required": [16, 31, 35, 39, 51, 53, 60, 64, 66, 82, 86, 97, 98, 107, 120, 126, 131, 134, 142, 148, 166, 173, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 832, 833, 841, 849, 861, 869, 877, 888, 896, 904, 1067, 1381, 1398, 1406, 1410, 1417, 1422, 1425, 1466, 1468, 1476, 1551, 1641, 1642, 1643, 2285, 2286, 2287, 2288, 2289, 2829, 2842, 2862, 2883, 2963, 2964, 2965, 2966, 2967, 2980, 2981, 2982, 2983, 2984, 2997, 2998, 2999, 3000, 3001, 3005, 3006, 3007, 3008, 3009, 3013, 3014, 3015, 3016, 3017, 3030, 3031, 3032, 3033, 3034, 3047, 3048, 3049, 3050, 3051, 3064, 3065, 3066, 3067, 3068, 3081, 3082, 3083, 3084, 3085, 3097, 3098, 3099, 3100, 3101, 3114, 3115, 3116, 3117, 3118, 3130, 3131, 3132, 3133, 3134, 3147, 3148, 3149, 3150, 3151, 3163, 3164, 3165, 3166, 3167, 3180, 3181, 3182, 3183, 3184, 3197, 3198, 3199, 3200, 3201, 3214, 3215, 3216, 3217, 3218, 3231, 3232, 3233, 3234, 3235, 3248, 3249, 3250, 3251, 3252, 3265, 3266, 3267, 3268, 3269, 3282, 3283, 3284, 3285, 3286, 3298, 3299, 3300, 3301, 3302, 3315, 3316, 3317, 3318, 3319, 3332, 3333, 3334, 3335, 3336, 3348, 3349, 3350, 3351, 3352, 3365, 3366, 3367, 3368, 3369, 3382, 3383, 3384, 3385, 3386, 3390, 3391, 3392, 3393, 3394, 3407, 3408, 3409, 3410, 3411, 3441, 3442, 3443, 3444, 3445, 3458, 3459, 3460, 3461, 3462, 3474, 3475, 3476, 3477, 3478, 3505, 3506, 3507, 3508, 3509, 3521, 3522, 3523, 3524, 3525, 3538, 3539, 3540, 3541, 3542, 3563, 3564, 3565, 3566, 3567, 3580, 3581, 3582, 3583, 3584, 3597, 3598, 3599, 3600, 3601, 3630, 3631, 3632, 3633, 3634, 3647, 3648, 3649, 3650, 3651, 3663, 3664, 3665, 3666, 3667, 3680, 3681, 3682, 3683, 3684, 3696, 3697, 3698, 3699, 3700, 3757, 3885, 3888, 3890, 3920, 3986, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4182, 4273, 4279, 4398, 4664, 4803, 4839, 4958, 4964, 5040, 5050, 5190, 5230, 5235, 5331, 5333, 5334], "measlevel": [16, 64, 1641, 3730], "appropriate": [16, 51, 53, 57, 64, 147, 165, 172, 1641, 2192, 2217, 2323, 2349, 2363, 2376, 3730, 5014, 5048, 5278], "output": [16, 30, 31, 35, 48, 53, 56, 64, 101, 110, 136, 235, 253, 254, 255, 256, 276, 277, 288, 289, 406, 424, 425, 426, 427, 447, 448, 459, 460, 565, 583, 584, 585, 586, 606, 607, 618, 619, 798, 841, 852, 869, 914, 918, 1002, 1143, 1160, 1161, 1162, 1163, 1183, 1184, 1195, 1196, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1480, 1555, 1641, 1642, 1643, 1644, 1645, 1661, 1667, 1674, 1906, 1936, 1959, 2024, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2285, 2323, 2337, 2349, 2363, 2376, 2813, 2821, 2822, 2823, 2877, 2878, 2884, 2885, 2886, 2887, 2932, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3730, 3759, 3779, 3789, 3821, 3832, 3905, 3915, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3985, 3989, 3999, 4012, 4031, 4094, 4103, 4121, 4139, 4148, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4193, 4197, 4241, 4247, 4253, 4254, 4255, 4262, 4268, 4271, 4272, 4280, 4282, 4286, 4287, 4289, 4292, 4297, 4299, 4307, 4308, 4309, 4316, 4328, 4329, 4330, 4335, 4347, 4348, 4349, 4354, 4366, 4367, 4368, 4380, 4381, 4384, 4389, 4402, 4414, 4415, 4416, 4424, 4436, 4437, 4438, 4444, 4456, 4457, 4458, 4463, 4478, 4479, 4480, 4484, 4487, 4491, 4510, 4511, 4512, 4513, 4519, 4522, 4525, 4529, 4530, 4536, 4537, 4538, 4539, 4540, 4552, 4561, 4563, 4568, 4585, 4586, 4587, 4599, 4614, 4617, 4620, 4624, 4625, 4631, 4632, 4633, 4634, 4635, 4644, 4646, 4649, 4655, 4667, 4679, 4680, 4681, 4686, 4698, 4699, 4700, 4714, 4720, 4735, 4744, 4749, 4771, 4804, 4810, 4811, 4812, 4813, 4829, 4847, 4848, 4849, 4896, 4900, 4917, 4921, 4924, 4961, 4973, 5024, 5070, 5113, 5116, 5117, 5137, 5140, 5181, 5195, 5204, 5207, 5210, 5213, 5226, 5227, 5237, 5238, 5244, 5268, 5270, 5274, 5280, 5281, 5283, 5287, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5353, 5354, 5366, 5367], "measreturn": 16, "\"single": [16, 2323, 2349, 2363, 2376], "\"avg": 16, "average": [16, 54, 64, 147, 165, 172, 181, 184, 185, 302, 303, 304, 306, 307, 324, 361, 473, 474, 475, 477, 478, 495, 632, 633, 634, 636, 637, 654, 693, 849, 877, 1209, 1210, 1211, 1213, 1214, 1231, 1396, 1641, 1987, 2417, 2543, 2556, 2569, 2595, 2608, 2780, 2781, 2782, 2784, 2785, 3730, 4714, 4720, 4878, 5270, 5274, 5276, 5367], "averaged": [16, 1641, 3730, 5270], "slots": [16, 64, 3728, 3730, 3757, 3932, 3963, 3976, 4075, 4218, 4255, 4264, 4273, 4282, 4751, 4803, 5333, 5334], "slot": [16, 35, 64, 1641, 3730, 3932, 3963, 3976, 4069, 4071, 4075, 4255, 4264, 4282, 5333, 5334], "seconds": [16, 35, 64, 1641, 1644, 2285, 2308, 2318, 2482, 2486, 2496, 2500, 2503, 2842, 2905, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3708, 3730, 3737, 3814, 3824, 3849, 3862, 3888, 3896, 3916, 3919, 3922, 3927, 3941, 4049, 4050, 4877, 4878, 4922, 4964, 4976, 5054, 5196, 5214, 5217, 5226, 5250, 5335, 5359], "_times": [16, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1641, 3730, 3963, 4255, 5042, 5239, 5244], "defaults": [16, 24, 64, 69, 86, 118, 119, 147, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 275, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 406, 446, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 565, 605, 773, 850, 878, 896, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1143, 1182, 1376, 1377, 1379, 1456, 1465, 1466, 1468, 1470, 1503, 1537, 1563, 1567, 1641, 1642, 1643, 1987, 2265, 2267, 2269, 2272, 2323, 2328, 2337, 2340, 2349, 2354, 2363, 2368, 2376, 2381, 2866, 2938, 2947, 2956, 2973, 2990, 3023, 3040, 3057, 3074, 3107, 3140, 3173, 3190, 3207, 3224, 3241, 3258, 3275, 3308, 3325, 3358, 3375, 3400, 3417, 3426, 3451, 3498, 3531, 3556, 3573, 3590, 3623, 3640, 3673, 3721, 3730, 3782, 3793, 3905, 3932, 3973, 3976, 3993, 3994, 4004, 4007, 4008, 4009, 4045, 4076, 4081, 4083, 4085, 4091, 4093, 4095, 4100, 4102, 4103, 4104, 4109, 4111, 4113, 4118, 4120, 4122, 4127, 4129, 4131, 4136, 4138, 4140, 4145, 4147, 4148, 4149, 4154, 4156, 4191, 4196, 4199, 4200, 4201, 4225, 4229, 4255, 4712, 4829, 4830, 4926, 4946, 4952, 5068, 5151, 5181, 5250, 5261, 5267, 5281, 5290, 5332, 5359], "first": [16, 31, 35, 39, 48, 51, 53, 57, 64, 95, 97, 99, 118, 130, 136, 162, 169, 204, 234, 239, 253, 276, 279, 280, 283, 284, 337, 357, 375, 405, 410, 424, 447, 450, 451, 454, 455, 508, 534, 564, 569, 583, 606, 609, 610, 613, 614, 667, 806, 833, 849, 850, 877, 878, 912, 970, 1100, 1113, 1142, 1146, 1160, 1183, 1186, 1187, 1190, 1191, 1244, 1318, 1342, 1378, 1387, 1388, 1400, 1403, 1447, 1464, 1466, 1468, 1475, 1537, 1550, 1551, 1563, 1641, 1676, 1711, 1722, 1734, 1930, 1945, 2001, 2010, 2013, 2018, 2060, 2165, 2277, 2297, 2323, 2349, 2712, 2875, 3723, 3730, 3738, 3739, 3779, 3789, 3814, 3834, 3862, 3881, 3932, 3976, 3982, 3997, 4055, 4172, 4192, 4219, 4255, 4282, 4463, 4518, 4519, 4544, 4614, 4639, 4721, 4722, 4740, 4762, 4783, 4798, 4911, 4923, 5117, 5120, 5152, 5158, 5175, 5178, 5202, 5226, 5276, 5303, 5315, 5327, 5331, 5333, 5334, 5342, 5347, 5349, 5361], "delay": [16, 35, 39, 48, 64, 232, 403, 562, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1140, 1641, 3708, 3730, 3932, 3976, 4008, 4025, 4026, 4036, 4037, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4225, 4255, 4273, 4946, 4952, 4958, 5021, 5023, 5077, 5102, 5140, 5143, 5181, 5333, 5334], "programs": [16, 35, 39, 918, 1641, 3708, 3730, 3876, 3882, 3884, 3888, 3891, 3922, 3932, 3963, 3976, 4220, 4241, 4255, 4273, 4297, 4298, 4717, 5331, 5333, 5334, 5359], "dynamic": [16, 64, 912, 1641, 2277, 2285, 2323, 2337, 2349, 2363, 2376, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3708, 3718, 3730, 3811, 3830, 3891, 3932, 3976, 4025, 4255, 4273], "_reprate": [16, 64, 1641, 3708, 3730, 3932, 3976, 4255, 4273], "_enabled": [16, 64, 1641, 3708, 3730, 3932, 3976, 4255, 4273], "supplied": [16, 64, 82, 126, 131, 134, 147, 148, 158, 165, 166, 172, 173, 235, 239, 240, 279, 280, 281, 406, 410, 411, 450, 451, 452, 565, 569, 570, 609, 610, 611, 917, 1143, 1146, 1147, 1186, 1187, 1188, 1450, 1563, 1641, 1719, 2337, 2798, 2842, 2890, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3730, 3781, 3782, 3996, 3997, 3998, 4011, 4031, 4034, 4045, 4075, 4077, 4078, 4079, 4087, 4088, 4089, 4096, 4097, 4098, 4105, 4106, 4107, 4114, 4115, 4116, 4123, 4124, 4125, 4132, 4133, 4134, 4141, 4142, 4143, 4150, 4151, 4152, 4225, 4255, 4273, 4712, 5146, 5250, 5277, 5281], "_rep": [16, 64, 1641, 3708, 3730, 3932, 3976, 4255, 4273, 5342], "bindings": [16, 913, 1641, 3730, 4273], "bind": [16, 64, 198, 200, 369, 371, 528, 530, 1067, 1071, 1072, 1087, 1088, 1107, 1109, 1641, 1902, 1908, 1929, 2008, 2042, 2123, 2141, 2169, 2239, 3730, 4032, 5361], "{parameter": [16, 64, 200, 371, 530, 1109], "..": [16, 44, 53, 57, 58, 62, 64, 69, 97, 211, 253, 276, 382, 424, 447, 541, 583, 606, 936, 956, 1120, 1160, 1183, 1372, 1376, 1377, 1379, 1393, 1399, 1406, 1441, 1450, 1456, 1466, 1468, 1471, 1475, 1503, 1537, 1563, 1567, 1644, 1666, 2808, 2830, 2875, 2885, 2887, 2889, 2915, 2924, 3779, 3963, 3983, 3993, 4006, 4008, 4229, 4316, 4393, 4439, 4444, 4463, 4659, 4707, 4708, 4739, 4747, 4769, 4900, 4915, 4921, 4952, 4955, 5199, 5350, 5353, 5366], ".}": 16, "binds": [16, 64, 1072, 1088, 1641, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 3730], "across": [16, 35, 64, 136, 301, 308, 310, 311, 312, 313, 472, 479, 481, 482, 483, 484, 631, 638, 640, 641, 642, 643, 1003, 1208, 1215, 1217, 1218, 1219, 1220, 1641, 2323, 2779, 2786, 2788, 2789, 2790, 2791, 3730, 4030, 4751], "total": [16, 39, 48, 62, 64, 82, 88, 95, 126, 131, 134, 148, 160, 166, 173, 321, 492, 651, 830, 1228, 1376, 1377, 1379, 1397, 1441, 1456, 1471, 1503, 1526, 1537, 1551, 1641, 1682, 1690, 1691, 1717, 1772, 3730, 4025, 4376, 4385, 4595, 4640, 4650, 4743, 4744, 4751, 5117, 5140, 5214, 5217, 5290, 5355], "/bind": [16, 1641, 3730], "pair": [16, 39, 44, 64, 117, 1382, 1641, 1666, 2024, 2712, 2817, 2856, 2857, 2867, 3730, 4388, 4519, 4603, 4614, 4654, 4762, 4783, 4798, 4852, 4911, 4939, 4964, 5080, 5151, 5303, 5315, 5327], "converted": [16, 64, 130, 145, 146, 275, 446, 605, 1182, 1648, 1649, 1922, 1924, 1926, 1928, 1931, 1933, 1934, 1936, 1937, 1948, 1950, 1951, 1952, 1969, 1971, 1986, 1988, 1989, 1992, 1993, 1994, 1997, 2000, 2054, 2060, 2176, 2177, 2251, 2809, 2813, 2814, 2879, 2880, 3928, 4009, 4220, 4231, 4299, 4301, 4318, 4337, 4354, 4356, 4404, 4426, 4446, 4463, 4467, 4494, 4498, 4501, 4514, 4519, 4525, 4529, 4530, 4540, 4552, 4554, 4571, 4614, 4620, 4624, 4625, 4635, 4669, 4688, 4958, 5220, 5259, 5262, 5280], "prior": [16, 31, 39, 48, 64, 97, 347, 518, 677, 1254, 1263, 2283, 2292, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3897, 4006, 5217, 5261], "instructionschedulemap": [16, 64, 1642, 1643, 1644, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 4219, 4814, 4901, 4929, 4938, 5080, 5146, 5151, 5157, 5230, 5359], "operations": [16, 31, 35, 48, 64, 217, 285, 321, 388, 456, 492, 547, 615, 651, 956, 1083, 1125, 1192, 1228, 1342, 1373, 1376, 1383, 1384, 1385, 1386, 1477, 1550, 1640, 1642, 1643, 1654, 1684, 1707, 1709, 1716, 1722, 1922, 1930, 1938, 2024, 2285, 2819, 2842, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3932, 3957, 3963, 3976, 4030, 4063, 4065, 4162, 4192, 4219, 4922, 4927, 4930, 4935, 4967, 4973, 5027, 5030, 5169, 5217, 5276, 5345, 5359, 5372], "schedules": [16, 64, 917, 918, 1641, 1642, 1643, 1644, 2285, 2337, 2345, 3801, 3834, 3838, 3864, 3993, 4204, 4207, 4210, 4213, 4216, 4219, 4222, 4946, 4949, 4952, 4955, 5146, 5152, 5158, 5230, 5356], "_schedule": [16, 31, 64, 118, 123, 1642, 1643, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4008, 4027, 4028, 4029, 5080, 5151, 5157, 5356, 5358, 5359], "measured": [16, 35, 48, 64, 66, 97, 101, 103, 104, 116, 117, 136, 138, 143, 165, 172, 195, 266, 267, 366, 437, 438, 525, 596, 597, 1104, 1173, 1174, 1641, 1642, 1643, 1655, 1998, 2277, 2323, 2349, 3419, 3757, 3935, 3942, 3945, 4020, 4218, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4751, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4787, 4803, 4814, 5033], "together": [16, 39, 64, 103, 1641, 1642, 1643, 1923, 1970, 1976, 1978, 2001, 2024, 2055, 2063, 3838, 4218, 4219, 4814, 5007, 5091, 5120], "specify": [16, 29, 30, 35, 39, 48, 51, 64, 86, 97, 103, 277, 448, 607, 852, 1184, 1377, 1642, 1644, 2311, 2801, 2805, 2808, 2813, 2867, 3704, 3705, 3723, 3737, 3738, 3739, 3789, 3888, 3905, 3942, 3945, 3957, 3993, 4073, 4432, 4747, 4769, 4922, 5333, 5334, 5342, 5353], "particular": [16, 28, 44, 48, 64, 97, 165, 172, 180, 255, 256, 426, 427, 585, 586, 1162, 1163, 1456, 1642, 2867, 3796, 3982, 4063, 4075, 4121, 4139, 4182, 4432, 4898, 4899, 4919, 4920, 4922, 4930, 5033, 5142, 5145], "whether": [16, 35, 39, 51, 53, 64, 66, 83, 86, 92, 101, 127, 130, 132, 133, 135, 153, 164, 171, 178, 187, 211, 267, 382, 438, 541, 597, 682, 849, 850, 877, 878, 913, 1077, 1093, 1120, 1174, 1377, 1378, 1388, 1398, 1402, 1441, 1466, 1468, 1472, 1474, 1641, 1923, 1926, 1932, 1970, 1994, 1998, 2025, 2032, 2055, 2063, 2162, 2170, 2177, 2195, 2201, 2204, 2208, 2214, 2218, 2220, 2226, 2230, 2232, 2244, 2248, 2250, 2252, 2258, 2261, 2264, 2282, 2291, 2300, 2301, 2302, 2305, 2476, 2477, 2479, 2483, 2490, 2491, 2493, 2497, 2897, 2898, 2899, 2902, 3011, 3019, 3388, 3707, 3708, 3718, 3730, 3768, 3779, 3781, 3792, 3800, 3803, 3806, 3814, 3815, 3862, 3869, 3888, 3922, 3926, 3932, 3957, 3963, 3976, 4273, 4503, 4570, 4580, 4819, 4823, 4825, 4847, 4848, 4849, 4930, 5202, 5217, 5226, 5237, 5253, 5254, 5266, 5294, 5335], "ground": [16, 59, 60, 64, 82, 126, 131, 134, 148, 165, 166, 169, 173, 849, 877, 1641, 1644, 3708, 3730, 4392, 4607, 4658, 5077, 5143, 5347], "extra": [16, 28, 29, 39, 48, 53, 64, 1641, 3708, 3730, 3851, 3896, 3963, 4182, 4958, 5021, 5143, 5202], "arguments": [16, 39, 232, 240, 252, 265, 347, 403, 411, 423, 436, 518, 562, 570, 582, 595, 677, 849, 877, 920, 926, 939, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1140, 1147, 1159, 1172, 1254, 1259, 1266, 1280, 1296, 1299, 1322, 1376, 1379, 1406, 1431, 1507, 1527, 1641, 1644, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2308, 2337, 2392, 2406, 2420, 2434, 2448, 2462, 2486, 2500, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 2813, 2905, 3708, 3730, 3824, 3838, 3851, 3864, 3896, 3983, 4001, 4014, 4084, 4195, 4244, 4245, 4288, 4291, 4380, 4463, 4644, 4717, 4830, 4836, 4863, 4870, 4900, 4902, 4915, 4921, 4973, 5080, 5202, 5230, 5250, 5275, 5331, 5333, 5334], "configure": [16, 25, 64, 1641, 2277, 2285, 2323, 2349, 2363, 2376, 3708, 3730, 3851, 3864, 3876, 3896, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 5193, 5364], "configurable": [16, 31, 64, 1641, 2277, 2285, 2323, 2349, 2363, 2376, 2936, 3932, 3963, 3976], "keyword": [16, 48, 64, 105, 1503, 1644, 2337, 2891, 2892, 3723, 3730, 3738, 3739, 3824, 3983, 4244, 4245, 4288, 4291, 4568, 4830, 4900, 4915, 4921, 4973], "passed": [16, 30, 44, 51, 53, 64, 92, 99, 146, 147, 150, 151, 165, 168, 169, 172, 175, 176, 188, 193, 197, 240, 252, 262, 264, 347, 364, 368, 411, 423, 433, 435, 518, 523, 527, 570, 582, 592, 594, 677, 773, 849, 877, 1063, 1065, 1072, 1088, 1102, 1106, 1147, 1159, 1169, 1171, 1254, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1443, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1642, 1643, 1644, 1923, 1929, 1934, 1975, 1977, 1980, 2011, 2015, 2016, 2019, 2022, 2283, 2292, 2311, 2337, 2485, 2808, 2867, 2891, 2892, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3704, 3730, 3731, 3777, 3791, 3885, 3897, 3993, 3999, 4008, 4012, 4158, 4161, 4163, 4166, 4168, 4171, 4173, 4176, 4178, 4181, 4182, 4183, 4186, 4187, 4188, 4252, 4270, 4297, 4380, 4432, 4568, 4644, 4712, 4717, 4813, 4900, 4921, 4924, 4930, 5071, 5123, 5193, 5202, 5226, 5227, 5230, 5235, 5237, 5238, 5239, 5244, 5331, 5333, 5334, 5353], ".run": [16, 25, 29, 31, 33, 62, 64, 2337, 3718, 3796, 3834, 3852, 3876, 3899, 3909, 3923, 5014, 5077, 5143, 5283, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5361, 5364, 5365, 5366, 5367, 5369, 5370], "\u623b\u308a\u5024": [16, 44, 53, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 685, 686, 687, 689, 692, 693, 694, 695, 696, 700, 701, 703, 704, 708, 709, 711, 712, 716, 717, 719, 720, 724, 726, 728, 729, 733, 735, 737, 738, 742, 744, 746, 747, 751, 753, 755, 756, 760, 761, 762, 763, 764, 765, 766, 768, 769, 772, 773, 775, 776, 780, 781, 783, 784, 788, 790, 792, 793, 797, 798, 800, 801, 805, 806, 808, 809, 813, 814, 816, 817, 821, 822, 824, 825, 829, 830, 831, 833, 835, 836, 840, 841, 843, 844, 848, 849, 850, 851, 852, 854, 855, 856, 860, 861, 863, 864, 868, 869, 871, 872, 876, 877, 878, 879, 881, 882, 883, 887, 888, 890, 891, 895, 896, 898, 899, 903, 904, 906, 907, 911, 914, 915, 916, 917, 918, 923, 928, 929, 932, 933, 934, 937, 938, 943, 948, 949, 952, 953, 954, 956, 961, 962, 965, 966, 967, 968, 970, 973, 975, 976, 977, 979, 981, 982, 983, 984, 986, 991, 995, 996, 997, 998, 1002, 1003, 1004, 1006, 1011, 1012, 1015, 1016, 1017, 1018, 1020, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1036, 1041, 1042, 1045, 1046, 1047, 1048, 1050, 1055, 1056, 1059, 1060, 1061, 1065, 1067, 1071, 1072, 1073, 1076, 1083, 1087, 1088, 1089, 1092, 1096, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1263, 1268, 1269, 1272, 1273, 1274, 1275, 1277, 1280, 1282, 1283, 1284, 1285, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1299, 1302, 1303, 1304, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1318, 1319, 1324, 1328, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1404, 1406, 1407, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1424, 1427, 1428, 1433, 1434, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1509, 1510, 1513, 1514, 1515, 1517, 1519, 1520, 1522, 1524, 1526, 1527, 1530, 1531, 1533, 1535, 1537, 1538, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1661, 1662, 1667, 1668, 1673, 1675, 1677, 1687, 1693, 1707, 1710, 1711, 1714, 1715, 1721, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1744, 1746, 1748, 1750, 1752, 1753, 1757, 1760, 1761, 1764, 1766, 1767, 1768, 1769, 1772, 1777, 1778, 1779, 1782, 1783, 1784, 1786, 1789, 1791, 1792, 1795, 1797, 1798, 1799, 1800, 1802, 1807, 1811, 1812, 1813, 1815, 1818, 1820, 1821, 1822, 1824, 1826, 1827, 1828, 1829, 1831, 1834, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1847, 1850, 1852, 1853, 1854, 1856, 1858, 1859, 1860, 1861, 1863, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1879, 1883, 1886, 1887, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1924, 1925, 1926, 1927, 1928, 1929, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1985, 1986, 1988, 1989, 1991, 1992, 1994, 1996, 1997, 1999, 2000, 2003, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2158, 2160, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2267, 2269, 2272, 2277, 2278, 2279, 2280, 2281, 2282, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2298, 2300, 2301, 2302, 2303, 2305, 2308, 2315, 2316, 2321, 2322, 2327, 2328, 2331, 2332, 2333, 2336, 2339, 2340, 2342, 2343, 2344, 2345, 2348, 2353, 2354, 2356, 2357, 2358, 2359, 2362, 2367, 2368, 2369, 2370, 2371, 2372, 2375, 2380, 2381, 2382, 2383, 2384, 2385, 2388, 2389, 2394, 2399, 2400, 2401, 2403, 2408, 2413, 2414, 2415, 2417, 2422, 2427, 2428, 2429, 2431, 2436, 2441, 2442, 2443, 2445, 2450, 2455, 2456, 2457, 2459, 2464, 2469, 2470, 2471, 2476, 2477, 2479, 2480, 2481, 2482, 2483, 2484, 2486, 2488, 2489, 2490, 2491, 2493, 2494, 2495, 2496, 2497, 2498, 2500, 2501, 2502, 2503, 2504, 2509, 2513, 2514, 2515, 2517, 2522, 2526, 2527, 2528, 2530, 2535, 2539, 2540, 2541, 2543, 2548, 2552, 2553, 2554, 2556, 2561, 2565, 2566, 2567, 2569, 2574, 2578, 2579, 2580, 2582, 2587, 2591, 2592, 2593, 2595, 2600, 2604, 2605, 2606, 2608, 2613, 2617, 2618, 2619, 2621, 2626, 2630, 2631, 2632, 2634, 2639, 2643, 2644, 2645, 2647, 2652, 2656, 2657, 2658, 2660, 2665, 2669, 2670, 2671, 2673, 2678, 2682, 2683, 2684, 2686, 2691, 2695, 2696, 2697, 2699, 2704, 2705, 2708, 2709, 2710, 2712, 2717, 2718, 2721, 2722, 2723, 2725, 2730, 2731, 2734, 2735, 2736, 2738, 2743, 2744, 2747, 2748, 2749, 2751, 2756, 2757, 2760, 2761, 2762, 2764, 2769, 2770, 2773, 2774, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2800, 2808, 2809, 2812, 2814, 2816, 2817, 2818, 2822, 2823, 2826, 2831, 2833, 2834, 2836, 2839, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2863, 2864, 2865, 2867, 2869, 2870, 2871, 2872, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2905, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2935, 2937, 2939, 2941, 2944, 2946, 2948, 2950, 2953, 2955, 2957, 2959, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2972, 2974, 2976, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2989, 2991, 2993, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3022, 3024, 3026, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3039, 3041, 3043, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3056, 3058, 3060, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3073, 3075, 3077, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3090, 3091, 3093, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3106, 3108, 3110, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3123, 3124, 3126, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3139, 3141, 3143, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3156, 3157, 3159, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3172, 3174, 3176, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3189, 3191, 3193, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3206, 3208, 3210, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3223, 3225, 3227, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3240, 3242, 3244, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3257, 3259, 3261, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3274, 3276, 3278, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3291, 3292, 3294, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3307, 3309, 3311, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3324, 3326, 3328, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3341, 3342, 3344, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3357, 3359, 3361, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3374, 3376, 3378, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3399, 3401, 3403, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3416, 3418, 3420, 3423, 3425, 3427, 3429, 3432, 3434, 3435, 3437, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3450, 3452, 3454, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3467, 3468, 3470, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3483, 3484, 3486, 3487, 3489, 3490, 3492, 3495, 3497, 3499, 3501, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3514, 3515, 3517, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3530, 3532, 3534, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3547, 3548, 3550, 3553, 3555, 3557, 3559, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3572, 3574, 3576, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3589, 3591, 3593, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3606, 3607, 3609, 3612, 3614, 3615, 3617, 3620, 3622, 3624, 3626, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3639, 3641, 3643, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3656, 3657, 3659, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3672, 3674, 3676, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3689, 3690, 3692, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3732, 3737, 3738, 3739, 3740, 3741, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3767, 3768, 3769, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3830, 3831, 3832, 3833, 3835, 3836, 3837, 3838, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3898, 3900, 3903, 3906, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3921, 3922, 3923, 3924, 3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3977, 3978, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4031, 4033, 4034, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4048, 4049, 4050, 4056, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4244, 4245, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4265, 4266, 4268, 4269, 4271, 4272, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4289, 4290, 4292, 4293, 4295, 4296, 4298, 4301, 4304, 4305, 4308, 4309, 4310, 4311, 4318, 4321, 4322, 4329, 4330, 4331, 4332, 4337, 4340, 4341, 4348, 4349, 4350, 4351, 4356, 4359, 4360, 4361, 4363, 4367, 4368, 4369, 4370, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4388, 4389, 4390, 4392, 4393, 4394, 4395, 4397, 4398, 4400, 4404, 4407, 4408, 4415, 4416, 4417, 4418, 4422, 4423, 4426, 4429, 4430, 4431, 4432, 4433, 4437, 4438, 4439, 4440, 4446, 4449, 4450, 4457, 4458, 4459, 4460, 4463, 4465, 4466, 4467, 4470, 4471, 4472, 4473, 4474, 4476, 4479, 4480, 4482, 4484, 4485, 4489, 4490, 4491, 4492, 4493, 4494, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4506, 4508, 4509, 4511, 4512, 4513, 4514, 4515, 4516, 4518, 4519, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4531, 4533, 4534, 4535, 4537, 4538, 4539, 4540, 4541, 4542, 4544, 4546, 4547, 4549, 4550, 4551, 4554, 4557, 4558, 4562, 4563, 4564, 4568, 4570, 4571, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4582, 4583, 4584, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4599, 4600, 4601, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4611, 4613, 4614, 4616, 4617, 4618, 4619, 4620, 4623, 4624, 4625, 4626, 4628, 4629, 4630, 4632, 4633, 4634, 4635, 4636, 4637, 4639, 4640, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4654, 4655, 4656, 4658, 4659, 4660, 4661, 4663, 4664, 4669, 4672, 4673, 4680, 4681, 4682, 4683, 4688, 4691, 4692, 4699, 4700, 4701, 4702, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4756, 4757, 4760, 4767, 4768, 4769, 4770, 4771, 4772, 4774, 4779, 4788, 4793, 4796, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4811, 4812, 4813, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4830, 4836, 4837, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4857, 4858, 4863, 4864, 4870, 4871, 4874, 4875, 4876, 4877, 4882, 4885, 4886, 4887, 4892, 4895, 4896, 4897, 4898, 4899, 4900, 4902, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4924, 4925, 4927, 4928, 4929, 4930, 4933, 4934, 4935, 4936, 4937, 4948, 4951, 4954, 4957, 4960, 4963, 4966, 4972, 4975, 4981, 4984, 5002, 5013, 5016, 5017, 5068, 5070, 5079, 5082, 5085, 5091, 5095, 5101, 5107, 5113, 5116, 5119, 5132, 5136, 5139, 5142, 5145, 5147, 5149, 5150, 5152, 5154, 5155, 5156, 5158, 5160, 5161, 5162, 5165, 5168, 5171, 5174, 5180, 5186, 5192, 5195, 5198, 5204, 5207, 5210, 5213, 5222, 5227, 5229, 5230, 5231, 5232, 5233, 5234, 5236, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5257, 5259, 5261, 5262, 5263, 5267, 5270, 5271, 5274, 5276, 5277, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335], "derived": [16, 51, 64, 105, 709, 931, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1271, 1288, 1307, 1327, 1436, 1444, 1512, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 2177, 2195, 2287, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 2808, 2848, 2914, 2923, 2932, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 3966, 4773, 4774, 4787, 4788], "\u4f8b\u5916": [16, 35, 44, 53, 69, 70, 73, 76, 80, 85, 88, 89, 91, 96, 97, 98, 99, 102, 104, 106, 107, 110, 114, 115, 118, 119, 124, 129, 141, 144, 150, 151, 158, 161, 163, 168, 169, 175, 176, 179, 185, 187, 188, 192, 193, 195, 197, 198, 200, 201, 210, 211, 213, 214, 232, 234, 235, 238, 239, 240, 251, 252, 254, 255, 256, 259, 260, 261, 262, 264, 265, 267, 277, 280, 281, 299, 300, 303, 304, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 342, 343, 344, 345, 347, 361, 364, 366, 368, 369, 371, 372, 381, 382, 384, 385, 403, 405, 406, 409, 410, 411, 422, 423, 425, 426, 427, 430, 431, 432, 433, 435, 436, 438, 448, 451, 452, 470, 471, 474, 475, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 513, 514, 515, 516, 518, 523, 525, 527, 528, 530, 531, 540, 541, 543, 544, 562, 564, 565, 568, 569, 570, 581, 582, 584, 585, 586, 589, 590, 591, 592, 594, 595, 597, 607, 610, 611, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 672, 673, 674, 675, 677, 693, 701, 725, 734, 743, 752, 765, 769, 781, 789, 831, 869, 877, 917, 919, 920, 923, 926, 929, 932, 939, 942, 943, 946, 949, 952, 956, 959, 962, 965, 970, 973, 975, 979, 981, 984, 989, 995, 1002, 1006, 1009, 1012, 1015, 1023, 1025, 1027, 1029, 1031, 1034, 1036, 1039, 1042, 1045, 1050, 1053, 1056, 1059, 1063, 1065, 1072, 1088, 1096, 1102, 1104, 1106, 1107, 1109, 1110, 1119, 1120, 1121, 1122, 1140, 1142, 1143, 1145, 1146, 1147, 1158, 1159, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1171, 1172, 1174, 1182, 1184, 1187, 1188, 1206, 1207, 1210, 1211, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1249, 1250, 1251, 1252, 1254, 1259, 1262, 1263, 1266, 1269, 1272, 1280, 1282, 1284, 1285, 1287, 1289, 1294, 1296, 1299, 1302, 1304, 1306, 1308, 1314, 1318, 1322, 1328, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1431, 1434, 1437, 1441, 1442, 1443, 1444, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1507, 1510, 1513, 1526, 1527, 1537, 1550, 1551, 1555, 1563, 1567, 1640, 1641, 1642, 1643, 1644, 1645, 1648, 1649, 1655, 1661, 1662, 1667, 1671, 1675, 1679, 1689, 1700, 1701, 1706, 1710, 1711, 1753, 1757, 1760, 1764, 1766, 1769, 1775, 1779, 1782, 1789, 1791, 1795, 1797, 1800, 1802, 1805, 1811, 1818, 1820, 1822, 1824, 1826, 1829, 1834, 1836, 1838, 1840, 1842, 1845, 1850, 1852, 1854, 1856, 1858, 1861, 1866, 1868, 1870, 1872, 1874, 1877, 1879, 1883, 1886, 1890, 1892, 1895, 1910, 1925, 1926, 1928, 1929, 1937, 1952, 1961, 1975, 1977, 1980, 1982, 1987, 1988, 1994, 2003, 2005, 2007, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2020, 2021, 2022, 2023, 2028, 2031, 2039, 2043, 2060, 2064, 2067, 2069, 2084, 2091, 2097, 2104, 2111, 2112, 2124, 2131, 2142, 2153, 2155, 2156, 2160, 2162, 2164, 2165, 2168, 2177, 2181, 2195, 2204, 2206, 2218, 2220, 2236, 2241, 2248, 2261, 2265, 2267, 2269, 2272, 2277, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2292, 2308, 2311, 2316, 2322, 2323, 2333, 2334, 2337, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2389, 2392, 2399, 2403, 2406, 2413, 2417, 2420, 2427, 2431, 2434, 2441, 2445, 2448, 2455, 2459, 2462, 2469, 2482, 2484, 2485, 2486, 2494, 2496, 2499, 2500, 2501, 2502, 2503, 2504, 2507, 2513, 2517, 2520, 2526, 2533, 2539, 2546, 2552, 2556, 2559, 2565, 2569, 2572, 2578, 2585, 2591, 2598, 2604, 2611, 2617, 2624, 2630, 2637, 2643, 2650, 2656, 2663, 2669, 2676, 2682, 2689, 2695, 2699, 2702, 2705, 2708, 2715, 2718, 2721, 2728, 2731, 2734, 2738, 2741, 2744, 2747, 2751, 2754, 2757, 2760, 2764, 2767, 2770, 2773, 2777, 2778, 2781, 2782, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2800, 2802, 2803, 2805, 2806, 2807, 2808, 2809, 2813, 2814, 2817, 2822, 2823, 2830, 2831, 2833, 2834, 2836, 2839, 2844, 2847, 2855, 2856, 2857, 2858, 2860, 2861, 2862, 2863, 2865, 2886, 2887, 2889, 2890, 2891, 2892, 2904, 2905, 2908, 2909, 2915, 2916, 2918, 2924, 2925, 2927, 2933, 2934, 2943, 2952, 2961, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2978, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2995, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3020, 3028, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3045, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3062, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3079, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3095, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3112, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3128, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3145, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3161, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3178, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3195, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3212, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3229, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3246, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3263, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3280, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3296, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3313, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3330, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3346, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3363, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3380, 3382, 3383, 3384, 3385, 3386, 3387, 3389, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3405, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3422, 3431, 3439, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3456, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3472, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3484, 3487, 3494, 3503, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3519, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3536, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3552, 3561, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3578, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3595, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3611, 3619, 3628, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3645, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3661, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3678, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3694, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3706, 3707, 3709, 3722, 3723, 3725, 3727, 3729, 3730, 3731, 3732, 3738, 3739, 3741, 3746, 3747, 3748, 3749, 3750, 3752, 3753, 3757, 3760, 3761, 3762, 3763, 3764, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794, 3799, 3809, 3810, 3813, 3814, 3818, 3819, 3822, 3823, 3824, 3833, 3837, 3838, 3849, 3855, 3862, 3863, 3864, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3883, 3885, 3886, 3887, 3888, 3890, 3891, 3896, 3897, 3911, 3915, 3916, 3918, 3919, 3921, 3922, 3930, 3931, 3942, 3945, 3951, 3964, 3965, 3966, 3967, 3969, 3970, 3971, 3979, 3983, 3984, 3985, 3991, 3993, 4003, 4006, 4008, 4009, 4013, 4014, 4016, 4020, 4022, 4032, 4075, 4084, 4103, 4148, 4159, 4161, 4164, 4166, 4169, 4171, 4172, 4174, 4176, 4181, 4182, 4184, 4186, 4195, 4219, 4220, 4221, 4223, 4224, 4297, 4298, 4299, 4301, 4308, 4309, 4316, 4318, 4329, 4330, 4332, 4335, 4337, 4348, 4349, 4351, 4356, 4361, 4363, 4367, 4368, 4376, 4380, 4381, 4382, 4384, 4386, 4397, 4400, 4402, 4404, 4415, 4416, 4418, 4421, 4424, 4426, 4433, 4437, 4438, 4444, 4446, 4457, 4458, 4460, 4463, 4467, 4470, 4473, 4476, 4479, 4480, 4487, 4494, 4497, 4498, 4500, 4501, 4506, 4511, 4512, 4514, 4519, 4523, 4525, 4528, 4529, 4530, 4531, 4533, 4537, 4538, 4540, 4546, 4552, 4554, 4563, 4568, 4571, 4577, 4578, 4579, 4586, 4587, 4589, 4599, 4600, 4601, 4606, 4611, 4613, 4614, 4618, 4620, 4623, 4624, 4625, 4626, 4628, 4632, 4633, 4635, 4640, 4644, 4646, 4647, 4649, 4651, 4652, 4663, 4667, 4669, 4680, 4681, 4683, 4686, 4688, 4699, 4700, 4702, 4714, 4715, 4717, 4718, 4719, 4720, 4723, 4724, 4726, 4727, 4730, 4735, 4740, 4745, 4751, 4756, 4757, 4760, 4767, 4771, 4773, 4787, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4813, 4817, 4819, 4821, 4823, 4825, 4827, 4830, 4833, 4836, 4838, 4841, 4843, 4844, 4857, 4858, 4863, 4865, 4870, 4872, 4874, 4875, 4877, 4882, 4885, 4886, 4893, 4895, 4896, 4898, 4899, 4902, 4915, 4916, 4917, 4919, 4920, 4922, 4923, 4924, 4934, 4935, 4938, 4939, 4943, 4948, 4951, 4954, 4957, 4960, 4963, 4964, 4966, 4972, 4975, 4984, 5013, 5016, 5023, 5033, 5073, 5079, 5082, 5085, 5091, 5095, 5096, 5099, 5105, 5119, 5123, 5132, 5142, 5143, 5145, 5151, 5152, 5154, 5157, 5158, 5160, 5177, 5180, 5192, 5195, 5198, 5199, 5201, 5204, 5207, 5210, 5213, 5214, 5217, 5222, 5230, 5231, 5232, 5233, 5234, 5239, 5244, 5250, 5253, 5259, 5262, 5263, 5271, 5272, 5274, 5277, 5278, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335, 5350, 5353, 5364], "qiskiterror": [16, 64, 210, 211, 234, 238, 255, 256, 259, 260, 261, 328, 342, 343, 344, 345, 381, 382, 405, 409, 426, 427, 430, 431, 432, 499, 513, 514, 515, 516, 540, 541, 564, 568, 585, 586, 589, 590, 591, 658, 672, 673, 674, 675, 917, 975, 1025, 1119, 1120, 1142, 1145, 1162, 1163, 1166, 1167, 1168, 1235, 1249, 1250, 1251, 1252, 1282, 1296, 1302, 1526, 1641, 1642, 1643, 1645, 1648, 1649, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 2265, 2267, 2269, 2272, 2814, 2822, 2823, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3757, 3760, 3761, 3762, 3763, 3764, 3814, 3862, 3951, 3979, 4298, 4299, 4301, 4308, 4309, 4316, 4318, 4329, 4330, 4332, 4335, 4337, 4348, 4349, 4351, 4356, 4361, 4363, 4367, 4368, 4376, 4381, 4382, 4384, 4386, 4397, 4400, 4402, 4404, 4415, 4416, 4418, 4421, 4424, 4426, 4433, 4437, 4438, 4444, 4446, 4457, 4458, 4460, 4463, 4467, 4470, 4473, 4476, 4479, 4480, 4487, 4494, 4497, 4498, 4500, 4501, 4506, 4511, 4512, 4514, 4519, 4523, 4525, 4528, 4529, 4530, 4531, 4533, 4537, 4538, 4540, 4552, 4554, 4563, 4568, 4571, 4577, 4578, 4579, 4586, 4587, 4589, 4599, 4600, 4601, 4606, 4611, 4613, 4614, 4618, 4620, 4623, 4624, 4625, 4626, 4628, 4632, 4633, 4635, 4640, 4646, 4647, 4649, 4651, 4652, 4663, 4667, 4669, 4680, 4681, 4683, 4686, 4688, 4699, 4700, 4702, 4714, 4715, 4717, 4718, 4719, 4720, 4723, 4724, 4726, 4727, 4730, 4735, 4740, 4745, 4751, 4756, 4757, 4760, 4767, 4771, 4803, 4805, 4806, 4807, 4808, 4811, 4812, 4827, 4830, 5151, 5152, 5154, 5157, 5158, 5160, 5207, 5210, 5213, 5250, 5253, 5271, 5274, 5286, 5287, 5289, 5294, 5352, 5356], "cannot": [16, 39, 48, 53, 64, 89, 103, 201, 213, 214, 254, 372, 384, 385, 425, 531, 543, 544, 584, 1110, 1121, 1122, 1161, 1360, 1407, 1410, 1475, 1641, 1934, 2025, 2055, 2063, 2160, 2181, 2236, 2323, 2349, 2798, 2809, 2814, 2842, 2854, 2888, 3732, 3775, 3782, 3789, 3798, 3801, 3805, 3823, 3837, 3841, 3863, 3868, 3870, 3877, 3911, 3993, 4008, 4025, 4031, 4182, 4206, 4301, 4316, 4318, 4335, 4337, 4356, 4402, 4404, 4424, 4426, 4444, 4446, 4467, 4494, 4498, 4501, 4514, 4525, 4529, 4530, 4540, 4554, 4571, 4620, 4624, 4625, 4635, 4667, 4669, 4686, 4688, 4717, 4819, 4823, 4825, 4831, 4866, 4867, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4975, 4976, 4979, 4982, 4984, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5082, 5083, 5086, 5089, 5093, 5095, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5152, 5157, 5158, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5280, 5356], "\u30b5\u30f3\u30d7\u30eb": [16, 162, 181, 186, 198, 235, 253, 254, 276, 288, 289, 334, 346, 357, 362, 364, 369, 406, 424, 425, 447, 459, 460, 505, 517, 523, 528, 565, 583, 584, 606, 618, 619, 664, 676, 773, 849, 877, 904, 1067, 1102, 1107, 1143, 1160, 1161, 1183, 1195, 1196, 1241, 1253, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1465, 1468, 1471, 1503, 1537, 1563, 1567, 1645, 1646, 1649, 1650, 1879, 2058, 4094, 4196, 4201, 4389, 4398, 4644, 4655, 4664, 4722, 4958, 5021, 5163, 5262, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5339, 5359, 5361, 5369], "basicaer": [16, 45, 62, 64, 162, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4722, 5290, 5348, 5349, 5350, 5352, 5353, 5355], "))": [16, 29, 31, 35, 39, 44, 47, 48, 63, 64, 181, 186, 233, 240, 251, 252, 321, 342, 345, 347, 357, 364, 404, 411, 422, 423, 492, 513, 516, 518, 523, 563, 570, 581, 582, 651, 672, 675, 677, 849, 877, 918, 1102, 1141, 1147, 1158, 1159, 1228, 1249, 1252, 1254, 1399, 1448, 1465, 1468, 1470, 1903, 1957, 1983, 1990, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2165, 2166, 2167, 2181, 2236, 2311, 2808, 2867, 2885, 3796, 3834, 3909, 3966, 3993, 4008, 4026, 4032, 4048, 4182, 4195, 4206, 4220, 4389, 4398, 4463, 4487, 4525, 4529, 4530, 4540, 4595, 4620, 4624, 4625, 4635, 4655, 4664, 4722, 4922, 4928, 5014, 5077, 5143, 5178, 5286, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "(qc": [16, 35, 39, 48, 64, 181, 357, 918, 1468, 1537, 4032, 4297, 4354, 4595, 4722, 5281, 5284, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5345, 5347, 5348, 5350, 5352, 5355, 5372], ".ibmq": [18, 64, 3704, 3718, 3736, 3834, 3876, 3899, 3909], ".job": [18, 31, 64, 3711, 3718, 3834, 3909], ".managed": [18, 64, 3834], "credentials": [18, 31, 64, 3704, 3705, 3712, 3715, 3717, 3718, 3737, 3746, 3748, 3750, 3752, 3753, 3754, 3767, 3768, 3769, 3771, 3772, 3909], ".credentials": 18, ".experiment": [18, 64, 2915, 2924, 2933, 3777], ".runtime": [18, 64, 3876, 3899, 3909, 3922], "working": [19, 28, 31, 48, 53, 57, 2024, 4868, 4928, 5335], "experience": [19, 21, 3704, 3713, 3714, 3718, 3736, 3744, 3745, 3746, 3748, 3750, 3752, 3753, 3754, 3766, 3768, 3777, 3796, 3814, 3834, 3862], "account": [19, 39, 48, 64, 877, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 3704, 3709, 3711, 3716, 3718, 3736, 3744, 3745, 3746, 3747, 3748, 3752, 3753, 3766, 3768, 3777, 3876, 3881, 3886, 3909, 4148, 4811, 4964, 5014, 5202], "modules": [20, 21, 24, 25, 28, 53, 64, 2060, 3735, 3742, 3743, 3776, 3826], "related": [20, 25, 26, 44, 64, 1448, 3736, 3755, 3767, 3777, 4316], "service": [20, 25, 31, 64, 3704, 3707, 3708, 3709, 3776, 3777, 3789, 3791, 3876, 3881, 3901, 3905], "available": [20, 25, 31, 35, 48, 51, 64, 144, 781, 856, 883, 912, 1002, 1081, 1097, 1376, 1377, 1379, 1407, 1441, 1471, 1503, 1537, 1555, 1644, 1912, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 2323, 2324, 2325, 2334, 2337, 2349, 2350, 2351, 2360, 2363, 2364, 2365, 2373, 2376, 2377, 2378, 2386, 2496, 2850, 2851, 2852, 2853, 3704, 3705, 3708, 3710, 3725, 3728, 3736, 3737, 3809, 3811, 3813, 3814, 3816, 3821, 3833, 3844, 3862, 3869, 3876, 3882, 3884, 3885, 3896, 3908, 3909, 3915, 3926, 3932, 3963, 3976, 3999, 4012, 4027, 4028, 4041, 4045, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4209, 4212, 4246, 4717, 4828, 4922, 4923, 4930, 4964, 5077, 5117, 5123, 5143, 5214, 5217, 5234, 5290, 5331, 5332, 5333, 5334, 5364], "accounts": [20, 25, 64, 3708, 3885, 3920], "query": [20, 31, 64, 2308, 2486, 2500, 2905, 3736, 3777, 3796, 3814, 3818, 3824, 3850, 3862, 5254], "upload": [20, 25, 64, 3777, 3783, 3794, 3876, 3881, 3887, 3888], "retrieve": [20, 64, 2487, 2494, 2496, 2501, 2502, 2503, 3704, 3718, 3719, 3723, 3729, 3736, 3738, 3739, 3741, 3777, 3778, 3779, 3788, 3789, 3790, 3796, 3814, 3834, 3837, 3849, 3852, 3855, 3862, 3863, 3871, 3872, 3873, 3874, 3875, 3879, 3880, 3883, 3909, 3922, 4873], "experiments": [20, 25, 45, 60, 64, 103, 904, 1641, 2277, 2285, 2323, 2349, 2363, 2376, 2487, 2503, 2909, 2914, 2915, 2923, 2924, 2932, 2933, 3718, 3730, 3762, 3777, 3780, 3782, 3789, 3793, 3814, 3834, 3838, 3845, 3851, 3852, 3855, 3862, 3864, 3869, 3870, 3876, 3932, 3963, 3976, 4252, 4270, 4285, 4745, 4767, 4802, 5190], "figures": [20, 64, 3777, 3783], "analysis": [20, 48, 53, 60, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2798, 2842, 3777, 3778, 3779, 3781, 3784, 3789, 3792, 3795, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5239, 5244], ".experiments": [20, 64, 3777], "invoked": [20, 64, 2308, 2486, 2500, 2905, 3818, 3824, 3840, 3885, 3918, 5237], "ibmexperimentservice": [20, 64, 3704, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794], "intended": [20, 54, 64, 1083, 2275, 2293, 2309, 2313, 2323, 5016, 5280], "conjunction": [20, 64, 1462, 1464, 4928], "-experiments": [20, 64, 3777, 3791], "package": [20, 25, 31, 51, 53, 57, 64, 682, 904, 912, 1644, 2012, 2016, 3748, 4717, 5282, 5331, 5333, 5334], "_experiments": [20, 31, 64, 2323, 2349, 2363, 2376, 3838, 3932, 3963, 3976], ".characterization": [20, 64], ".t": [20, 64, 1076, 1092, 1987, 2001, 2009, 2010, 2012, 2013, 2014, 2016, 2017, 4299, 5350, 5359, 5362, 5369], "representing": [21, 24, 39, 51, 64, 103, 116, 117, 138, 143, 144, 179, 193, 274, 364, 445, 523, 604, 914, 1076, 1092, 1102, 1181, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1706, 1753, 1922, 1930, 1975, 1977, 1980, 2009, 2025, 2031, 2043, 2055, 2060, 2063, 2067, 2068, 2091, 2104, 2124, 2132, 2155, 2170, 2183, 2184, 2190, 2201, 2204, 2214, 2218, 2226, 2230, 2232, 2244, 2248, 2250, 2258, 2261, 2264, 2862, 2867, 2869, 2872, 2883, 2884, 2885, 3759, 3773, 3838, 3885, 3920, 3922, 3932, 3933, 3935, 3939, 3951, 3952, 3954, 3955, 3957, 3958, 3961, 3968, 3974, 3976, 3977, 3979, 3980, 4247, 4252, 4253, 4262, 4264, 4268, 4270, 4271, 4280, 4282, 4286, 4288, 4289, 4292, 4432, 4545, 4570, 4589, 4787, 4804, 4813, 4841, 4922, 4958, 4976, 4985, 4988, 4991, 5021, 5071, 5089, 5096, 5102, 5146, 5151, 5157, 5175, 5190, 5199, 5214, 5217, 5220, 5226, 5230, 5237, 5239, 5244, 5347, 5362], "high": [23, 31, 39, 48, 53, 60, 64, 97, 235, 406, 565, 798, 1143, 1448, 4162, 4192, 5051, 5281], "mechanism": [23, 39, 64, 3834, 4182, 4232], "handling": [23, 53, 64, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2006, 2334, 2360, 2373, 2386, 3755, 3834, 3925, 4042], "logger": [24, 64], "environment": [24, 64, 912, 916, 917, 3838, 3885, 3920, 4182, 4813], "variables": [24, 28, 64, 687, 696, 704, 712, 717, 720, 729, 738, 747, 756, 765, 766, 769, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 861, 864, 869, 872, 882, 891, 896, 899, 904, 907, 1296, 1462, 1464, 1475, 1644, 4299, 4900, 4921, 4964, 5040, 5057, 5059], "_ibmq": [24, 53, 56, 64], "_provider": [24, 25, 35, 45, 47, 48, 56, 64, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3482, 3485, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3766, 4021, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060, 5286, 5288, 5289, 5331, 5333, 5334, 5364], "_log": [24, 56, 64, 2323, 2349], "log": [24, 64, 97, 186, 1078, 1094, 1551, 1960, 2041, 2140, 3920, 4714, 4719, 4720, 4726, 4739, 5338, 5355], "-provider": [24, 31, 47, 56, 57, 64, 3748, 3823, 3868, 4827, 5339, 5342, 5348, 5349, 5350, 5352, 5353, 5358, 5359, 5361], "invalid": [24, 64, 158, 188, 201, 213, 235, 299, 300, 303, 304, 323, 324, 325, 326, 327, 372, 384, 406, 470, 471, 474, 475, 494, 495, 496, 497, 498, 531, 543, 565, 629, 630, 633, 634, 653, 654, 655, 656, 657, 975, 1025, 1065, 1110, 1121, 1143, 1206, 1207, 1210, 1211, 1230, 1231, 1232, 1233, 1234, 1282, 1302, 1401, 1551, 1640, 1679, 1760, 1791, 1802, 1820, 1836, 1852, 1868, 1886, 2084, 2097, 2111, 2112, 2131, 2153, 2155, 2195, 2206, 2218, 2311, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2556, 2569, 2777, 2778, 2781, 2782, 2798, 2802, 2803, 2805, 2806, 2807, 2813, 2830, 2847, 2855, 2856, 2858, 2860, 2861, 2863, 2865, 2886, 2887, 3712, 3713, 3714, 3746, 3750, 3753, 3772, 3779, 3789, 3823, 3840, 3885, 3901, 3921, 3931, 3951, 3985, 4009, 4148, 4220, 4223, 4297, 4298, 4299, 4363, 4380, 4384, 4386, 4433, 4463, 4476, 4487, 4506, 4519, 4531, 4533, 4546, 4552, 4568, 4614, 4626, 4628, 4644, 4649, 4651, 4724, 4735, 4740, 4811, 4812, 4877, 4885, 4915, 4964, 5123, 5143, 5199, 5220, 5230, 5231, 5232, 5233, 5234, 5253, 5281, 5286, 5331, 5333, 5334, 5364], "warning": [24, 56, 57, 64, 2802, 2803, 2804, 2805, 2806, 2807, 2813, 3920, 4714, 4720, 4726, 5261, 5275, 5355], "debug": [24, 56, 64, 3920, 5355], "info": [24, 47, 56, 64, 2160, 3821, 3920, 4195, 5331, 5338, 5355, 5366], "error": [24, 25, 30, 31, 33, 35, 39, 53, 56, 58, 64, 65, 110, 186, 193, 255, 256, 364, 426, 427, 523, 585, 586, 806, 833, 936, 1063, 1162, 1163, 1316, 1317, 1444, 1459, 1496, 1539, 1718, 1765, 1919, 2162, 2164, 2276, 2294, 2295, 2296, 2302, 2308, 2317, 2319, 2323, 2349, 2363, 2376, 2479, 2486, 2493, 2500, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2813, 2817, 2819, 2827, 2830, 2831, 2833, 2834, 2835, 2836, 2839, 2840, 2845, 2846, 2847, 2848, 2849, 2850, 2852, 2853, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2887, 2890, 2892, 2893, 2899, 2905, 2915, 2924, 2936, 3704, 3708, 3712, 3713, 3714, 3715, 3716, 3717, 3723, 3725, 3730, 3733, 3734, 3735, 3738, 3739, 3741, 3742, 3743, 3755, 3770, 3771, 3772, 3774, 3775, 3776, 3796, 3799, 3804, 3806, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3834, 3839, 3840, 3841, 3842, 3843, 3844, 3847, 3850, 3854, 3865, 3880, 3896, 3913, 3915, 3919, 3920, 3940, 3946, 3984, 4139, 4162, 4182, 4187, 4238, 4720, 4742, 4745, 4748, 4767, 4770, 4810, 4819, 4825, 4878, 4922, 4923, 4938, 4944, 4945, 4958, 4964, 5033, 5041, 5051, 5105, 5196, 5202, 5217, 5220, 5226, 5250, 5253, 5259, 5262, 5279, 5288, 5339, 5352, 5355, 5357, 5359, 5366, 5367, 5368, 5369], "critical": [24, 48, 56, 233, 404, 563, 1141, 1640, 3920, 5355], "(case": 24, "-insensitive": 24, "variable": [24, 64, 240, 411, 570, 765, 769, 856, 883, 896, 1067, 1147, 1296, 1318, 1393, 1399, 1447, 1450, 1464, 1475, 3957, 4094, 4813, 5035], "then": [24, 31, 35, 39, 44, 48, 51, 53, 57, 64, 104, 105, 127, 130, 135, 136, 143, 147, 153, 165, 172, 178, 186, 215, 216, 235, 240, 252, 275, 347, 386, 387, 406, 411, 423, 446, 518, 545, 546, 565, 570, 582, 605, 677, 683, 761, 849, 852, 877, 904, 912, 928, 929, 934, 948, 949, 954, 961, 962, 968, 976, 983, 991, 997, 1011, 1012, 1018, 1026, 1027, 1033, 1041, 1042, 1048, 1055, 1056, 1061, 1123, 1124, 1143, 1147, 1159, 1182, 1254, 1268, 1269, 1275, 1283, 1285, 1292, 1303, 1304, 1312, 1324, 1330, 1387, 1388, 1400, 1433, 1434, 1439, 1466, 1468, 1470, 1471, 1472, 1509, 1510, 1515, 1551, 1644, 1711, 1761, 1768, 1777, 1779, 1784, 1792, 1799, 1807, 1813, 1821, 1822, 1828, 1837, 1838, 1844, 1853, 1854, 1860, 1869, 1870, 1876, 1879, 1887, 1894, 1898, 1923, 1934, 1935, 1937, 1987, 2003, 2008, 2015, 2016, 2018, 2165, 2218, 2282, 2291, 2323, 2337, 2349, 2394, 2401, 2408, 2415, 2422, 2429, 2436, 2443, 2450, 2457, 2464, 2471, 2509, 2515, 2522, 2528, 2535, 2541, 2548, 2554, 2561, 2567, 2574, 2580, 2587, 2593, 2600, 2606, 2613, 2619, 2626, 2632, 2639, 2645, 2652, 2658, 2665, 2671, 2678, 2684, 2691, 2697, 2704, 2705, 2710, 2717, 2718, 2723, 2730, 2731, 2736, 2743, 2744, 2749, 2756, 2757, 2762, 2769, 2770, 2775, 2885, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3722, 3723, 3732, 3738, 3739, 3779, 3789, 3823, 3868, 3901, 3905, 3957, 3966, 4025, 4157, 4162, 4167, 4172, 4177, 4182, 4241, 4299, 4354, 4552, 4765, 4785, 4800, 4811, 4812, 4913, 4922, 4930, 4938, 5007, 5014, 5120, 5151, 5175, 5217, 5226, 5231, 5232, 5233, 5234, 5245, 5250, 5274, 5275, 5280, 5281, 5305, 5317, 5329, 5352], "parent": [24, 35, 64, 1747, 2032, 2275, 2293, 2313, 3782, 3789, 3993, 4040, 4187, 5004, 5007, 5278], "_file": [24, 56, 64, 1462, 5343], "file": [24, 25, 39, 47, 58, 64, 235, 242, 277, 406, 413, 448, 565, 572, 607, 686, 689, 912, 1143, 1149, 1184, 1284, 1464, 1673, 1732, 3750, 3783, 3790, 3794, 3832, 3887, 3888, 4229, 4242, 4244, 4297, 4298, 4829, 4896, 4917, 5281, 5282, 5283, 5287, 5289, 5290, 5292, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "messages": [24, 64, 709, 717, 761, 806, 833, 861, 896, 3832, 3926, 4829], "logged": [24, 51, 64], "otherwise": [24, 35, 39, 48, 64, 66, 83, 127, 132, 135, 153, 164, 171, 178, 198, 201, 202, 211, 213, 235, 262, 264, 334, 369, 372, 373, 382, 384, 406, 433, 435, 505, 528, 531, 532, 541, 543, 565, 592, 594, 664, 1002, 1004, 1036, 1065, 1107, 1110, 1111, 1120, 1121, 1143, 1169, 1171, 1182, 1241, 1277, 1293, 1313, 1388, 1397, 1398, 1399, 1450, 1463, 1466, 1468, 1474, 1667, 1673, 1689, 1710, 1732, 2058, 2122, 2160, 2176, 2251, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2725, 2738, 2751, 2764, 2813, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3708, 3721, 3725, 3748, 3750, 3754, 3783, 3787, 3790, 3794, 3804, 3812, 3814, 3837, 3847, 3849, 3854, 3861, 3862, 3863, 3869, 3882, 3883, 3884, 3905, 3943, 3991, 3994, 4004, 4007, 4009, 4032, 4299, 4316, 4332, 4335, 4351, 4376, 4402, 4418, 4424, 4444, 4460, 4463, 4485, 4487, 4497, 4506, 4509, 4515, 4516, 4519, 4528, 4533, 4535, 4541, 4542, 4552, 4568, 4582, 4584, 4591, 4592, 4595, 4614, 4623, 4628, 4630, 4636, 4637, 4640, 4667, 4683, 4686, 4702, 4725, 4732, 4733, 4761, 4782, 4797, 4839, 4853, 4882, 4910, 4930, 4987, 4990, 4993, 5004, 5014, 5092, 5178, 5196, 5232, 5252, 5270, 5281, 5282, 5302, 5314, 5326, 5335], "standard": [24, 31, 35, 39, 64, 69, 84, 90, 128, 147, 150, 165, 168, 172, 175, 179, 773, 849, 851, 877, 879, 970, 1388, 1453, 1462, 1464, 1537, 1640, 1987, 2162, 2801, 2808, 2813, 2847, 2848, 2855, 2856, 2857, 2869, 2936, 3708, 3730, 3915, 4162, 4192, 4193, 4194, 4195, 4197, 4198, 4712, 4722, 4743, 4744, 4747, 4749, 4750, 4769, 4771, 4772, 4787, 4946, 4952, 5181, 5259, 5319, 5359], "usually": [24, 28, 35, 39, 48, 64, 86, 235, 406, 565, 1143, 1388, 1912, 1922, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 2473, 2487, 3796, 3982, 4182, 4958, 5143, 5281, 5332], "screen": 24, "advanced": [24, 53, 64, 4030, 5352, 5354], "modify": [24, 35, 64, 211, 238, 334, 382, 409, 505, 541, 568, 664, 904, 1120, 1145, 1241, 1667, 2798, 2842, 3973, 4831, 4915, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5017, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5278, 5352], "itself": [24, 31, 51, 64, 198, 369, 528, 849, 852, 1107, 1344, 1356, 1366, 1368, 1370, 1391, 1409, 1411, 1454, 1456, 1532, 1537, 1554, 1566, 1914, 2048, 2060, 2146, 2246, 2277, 2285, 2309, 2323, 2822, 2836, 3005, 3013, 3382, 3777, 3791, 3985, 3993, 4229, 4308, 4367, 4479, 4511, 4537, 4586, 4632], "manually": [24, 64, 682, 1641, 1644, 4432], ".getlogger": [24, 64, 5338, 5355], "setlevel": [24, 64, 5338, 5355], "(logging": [24, 64, 5338], ".warning": [24, 64], "providers": [25, 34, 45, 60, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2277, 2282, 2297, 3704, 3722, 3727, 3751, 3789, 3993, 4008, 5239, 5244], "check": [25, 64, 66, 86, 97, 1004, 1417, 1644, 1706, 1721, 1746, 1748, 1750, 1752, 1924, 2058, 2159, 2798, 2813, 2819, 2842, 2855, 2856, 3707, 3905, 4000, 4001, 4006, 4013, 4014, 4086, 4182, 4570, 4575, 4645, 4714, 4720, 4726, 4727, 4740, 4831, 4900, 4921, 4930, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4987, 4988, 4990, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5023, 5024, 5027, 5030, 5033, 5036, 5037, 5051, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5104, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5147, 5150, 5151, 5156, 5157, 5162, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5264, 5265, 5366], "your": [25, 31, 35, 48, 51, 912, 1706, 2318, 3740, 3789, 3818, 3881, 3886, 3899, 4031, 4182, 4206, 4218, 4810, 4878, 4958, 5021, 5102, 5143, 5202, 5220], "access": [25, 31, 33, 53, 60, 64, 147, 165, 172, 1063, 1065, 1644, 1983, 1990, 2192, 2217, 3704, 3707, 3722, 3727, 3736, 3748, 3750, 3766, 3789, 3881, 4463, 4487, 4519, 4614, 4900, 4921, 4928, 4944, 5257], "(..": [25, 64, 3796, 3909], "_use": [25, 64], "_runtime": 25, ".has": [25, 64, 5359], "_service": [25, 3704], "-partners": 25, "/qiskit": [25, 57, 64, 2909, 2918, 2927, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5117, 5372], "-runtime": [25, 64], "currently": [25, 35, 64, 66, 163, 1376, 1377, 1379, 1380, 1401, 1441, 1471, 1472, 1503, 1537, 1682, 2318, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3719, 3725, 3745, 3747, 3783, 3883, 3884, 3885, 4013, 4014, 4022, 4032, 4033, 4041, 4042, 4044, 4056, 4182, 4705, 4878, 4922, 5033, 5235], "beta": [25, 64, 110, 147, 165, 683, 1399, 1471, 1556, 1558, 1945, 4162, 4192, 5350], "modifications": [25, 47, 2798, 2842, 4831, 4915, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "functionality": [25, 35, 47, 53, 64, 1453, 4008, 4031, 5278], "api": [25, 35, 54, 57, 105, 3718, 3766, 3796, 3909, 3922, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4228, 4810, 5268, 5272, 5331, 5333, 5334, 5355, 5357, 5364], "likely": [25, 31, 48, 64, 66, 68, 98, 101, 105, 140, 172, 918, 3796, 4928, 5142, 5145, 5268, 5272, 5341], "occur": [25, 64, 2876, 3733, 3796, 3825, 4219, 5105, 5190], "backward": [25, 64, 5023, 5193], "compatibility": [25, 271, 442, 601, 918, 1178, 2282, 2285, 2813, 3005, 3013, 4915, 5284], "always": [25, 31, 35, 39, 64, 235, 240, 301, 308, 310, 311, 312, 313, 326, 327, 406, 411, 472, 479, 481, 482, 483, 484, 497, 498, 565, 570, 631, 638, 640, 641, 642, 643, 656, 657, 1081, 1097, 1143, 1147, 1208, 1215, 1217, 1218, 1219, 1220, 1233, 1234, 1388, 1503, 1906, 1922, 1959, 1985, 1996, 2024, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2218, 2224, 2238, 2255, 2445, 2459, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2779, 2786, 2788, 2789, 2790, 2791, 4182, 4241, 4298, 4606, 4613, 4930, 4958, 5257, 5281, 5332], "new": [25, 35, 39, 45, 48, 51, 136, 197, 198, 200, 210, 235, 266, 267, 285, 368, 369, 371, 381, 406, 437, 438, 456, 527, 528, 530, 540, 565, 596, 597, 615, 904, 914, 920, 923, 933, 938, 939, 943, 953, 956, 966, 967, 970, 982, 986, 996, 1000, 1001, 1006, 1016, 1017, 1020, 1032, 1036, 1046, 1047, 1050, 1060, 1063, 1067, 1071, 1072, 1083, 1087, 1088, 1096, 1101, 1102, 1106, 1107, 1109, 1119, 1143, 1173, 1174, 1192, 1259, 1263, 1273, 1274, 1290, 1309, 1318, 1319, 1329, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1376, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1393, 1394, 1398, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1438, 1441, 1447, 1450, 1453, 1456, 1458, 1459, 1472, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1514, 1517, 1519, 1522, 1524, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1675, 1682, 1710, 1711, 1717, 1767, 1772, 1783, 1786, 1798, 1802, 1812, 1815, 1827, 1831, 1843, 1847, 1859, 1863, 1875, 1893, 1900, 1910, 1930, 1946, 1955, 1961, 1986, 1992, 1997, 2000, 2026, 2034, 2043, 2068, 2071, 2076, 2086, 2091, 2099, 2104, 2114, 2124, 2132, 2134, 2142, 2161, 2179, 2185, 2197, 2199, 2210, 2212, 2222, 2228, 2234, 2240, 2254, 2256, 2262, 2277, 2282, 2283, 2292, 2297, 2318, 2389, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2530, 2540, 2543, 2553, 2566, 2579, 2582, 2592, 2605, 2618, 2621, 2631, 2634, 2644, 2647, 2657, 2660, 2670, 2673, 2683, 2686, 2696, 2699, 2709, 2712, 2722, 2725, 2735, 2738, 2748, 2751, 2761, 2764, 2774, 2823, 2888, 2889, 2890, 2891, 2892, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3759, 3777, 3781, 3782, 3783, 3793, 3796, 3813, 3822, 3823, 3867, 3868, 3876, 3887, 3897, 3909, 3923, 3925, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 3983, 3993, 3994, 3995, 4001, 4003, 4004, 4006, 4007, 4009, 4010, 4014, 4016, 4019, 4031, 4073, 4075, 4076, 4080, 4081, 4083, 4084, 4085, 4086, 4090, 4091, 4093, 4094, 4095, 4099, 4100, 4102, 4103, 4104, 4108, 4109, 4111, 4112, 4113, 4117, 4118, 4120, 4122, 4126, 4127, 4129, 4130, 4131, 4135, 4136, 4138, 4140, 4144, 4145, 4147, 4148, 4149, 4153, 4154, 4156, 4157, 4162, 4167, 4172, 4177, 4187, 4203, 4206, 4209, 4212, 4215, 4218, 4219, 4225, 4229, 4230, 4247, 4250, 4252, 4253, 4256, 4259, 4262, 4264, 4265, 4268, 4270, 4271, 4274, 4277, 4280, 4282, 4283, 4286, 4288, 4289, 4291, 4292, 4294, 4295, 4309, 4330, 4349, 4368, 4416, 4432, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700, 4754, 4777, 4791, 4804, 4878, 4880, 4906, 4915, 4922, 4923, 4938, 4946, 4952, 4958, 4961, 4973, 5021, 5039, 5083, 5089, 5091, 5102, 5140, 5146, 5154, 5160, 5178, 5217, 5220, 5269, 5271, 5273, 5275, 5278, 5281, 5283, 5285, 5286, 5290, 5291, 5292, 5293, 5294, 5298, 5310, 5322, 5331, 5354, 5355], "architecture": [25, 64, 3876, 4901, 5071, 5117, 5123, 5230], "offered": [25, 64, 3876, 4148], "streamlines": [25, 3876], "computations": [25, 48, 64, 1396, 3876, 5246, 5370], "requiring": [25, 53, 1934, 3876, 4958], "iterations": [25, 64, 92, 97, 98, 99, 100, 101, 110, 115, 172, 683, 693, 709, 761, 773, 798, 806, 814, 830, 833, 841, 849, 861, 877, 904, 3876, 4894, 4895, 4899, 4916, 4920, 5175, 5190, 5235, 5339], "significantly": [25, 64, 849, 2323, 2349, 3876], "faster": [25, 44, 64, 92, 95, 147, 165, 172, 180, 773, 841, 1987, 3876, 4244, 4245, 4473, 4500, 5008], "within": [25, 30, 35, 53, 64, 88, 165, 172, 201, 213, 240, 279, 280, 281, 364, 372, 384, 411, 450, 451, 452, 523, 531, 543, 570, 609, 610, 611, 682, 693, 761, 769, 869, 921, 940, 943, 1110, 1121, 1147, 1186, 1187, 1188, 1260, 1444, 1641, 1746, 1748, 1750, 1752, 1911, 1929, 1934, 1948, 1962, 1983, 2045, 2068, 2077, 2092, 2105, 2125, 2132, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 3782, 3793, 3812, 3838, 3876, 3932, 3945, 3976, 3996, 3997, 3998, 4008, 4011, 4025, 4026, 4027, 4028, 4029, 4032, 4035, 4040, 4041, 4042, 4057, 4058, 4059, 4060, 4081, 4084, 4091, 4094, 4100, 4109, 4118, 4127, 4136, 4145, 4154, 4182, 4203, 4206, 4241, 4964, 5003, 5333, 5334], "improved": [25, 64, 69, 789, 849, 3876, 4354, 4370, 4519, 4595, 4614, 4716], "hybrid": [25, 814, 3876], "/classical": [25, 3876], "process": [25, 44, 48, 64, 877, 904, 2887, 3876, 4041, 4714, 4726, 4821, 5117, 5220, 5235, 5237, 5266, 5353], "authorized": [25, 64, 3704, 3709, 3876, 3885, 3888, 3920, 5193], "called": [25, 30, 35, 48, 53, 64, 70, 97, 119, 142, 180, 186, 201, 213, 240, 252, 342, 343, 344, 345, 347, 372, 384, 411, 423, 513, 514, 515, 516, 518, 531, 543, 570, 582, 672, 673, 674, 675, 677, 686, 689, 896, 984, 1034, 1063, 1083, 1110, 1121, 1147, 1159, 1249, 1250, 1251, 1252, 1254, 1294, 1314, 1475, 1503, 1517, 1533, 1644, 1769, 1800, 1815, 1829, 1831, 1845, 1847, 1861, 1863, 1877, 1895, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2161, 2182, 2198, 2211, 2224, 2232, 2238, 2255, 2311, 2798, 3876, 3901, 3903, 3905, 3983, 4013, 4014, 4086, 4112, 4182, 4223, 4229, 4830, 4842, 4900, 4921, 4922, 4930, 4958, 4976, 5142, 5145, 5278, 5290, 5359], "piece": [25, 31, 3876], "code": [25, 28, 29, 31, 35, 47, 48, 57, 64, 140, 172, 235, 406, 565, 798, 877, 904, 1143, 1296, 1372, 1419, 1464, 1953, 2012, 2016, 2883, 3876, 4084, 4810, 4847, 4848, 5281, 5331, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "inputs": [25, 30, 48, 51, 64, 1342, 1380, 1392, 1396, 1397, 1480, 1644, 1654, 2165, 2166, 2167, 3737, 3876, 3885, 3909, 3973, 4039, 4740], "performs": [25, 64, 147, 165, 172, 693, 806, 833, 1342, 1373, 1392, 1401, 1480, 1550, 1551, 1935, 1968, 2349, 3876, 5137], "maybe": [25, 64, 2216, 3876, 5253, 5254], "processing": [25, 64, 66, 69, 71, 75, 79, 86, 95, 113, 123, 3732, 3796, 3821, 3876, 3899, 5250], "invoke": [25, 64, 3736, 3777, 3789, 3876, 3881], "simply": [25, 51, 53, 64, 147, 165, 172, 789, 1388, 1922, 1948, 1969, 2068, 2132, 3876, 3905], "passing": [25, 30, 44, 53, 64, 1443, 2891, 2892, 3876, 4923, 5237, 5285, 5333, 5334], "detailed": [25, 31, 64, 1976, 3836, 3861, 3882, 4946, 4949, 4952, 4955, 5099], "tutorials": [25, 59, 62, 64, 97, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ".pprint": [25, 64, 3876], "_programs": [25, 64, 3876], ".program": [25, 64, 3876, 3909, 3922], "-runner": [25, 64, 3756, 3876, 3922], "(program": [25, 64, 3876, 3922], "points": [25, 35, 39, 51, 53, 64, 118, 147, 165, 172, 725, 761, 763, 768, 769, 806, 869, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 3973, 4075, 4915, 5003, 5294, 5331], "ibmruntimeservice": [25, 3704, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3909, 3922], "main": [25, 29, 44, 51, 54, 64, 82, 126, 127, 131, 134, 135, 136, 140, 148, 153, 166, 173, 178, 357, 523, 833, 877, 904, 2942, 2951, 2960, 2977, 2994, 3027, 3044, 3061, 3078, 3094, 3111, 3127, 3144, 3160, 3177, 3194, 3211, 3228, 3245, 3262, 3279, 3295, 3312, 3329, 3345, 3362, 3379, 3404, 3421, 3430, 3438, 3455, 3471, 3493, 3502, 3518, 3535, 3551, 3560, 3577, 3594, 3610, 3618, 3627, 3644, 3660, 3677, 3693, 3704, 3777, 4032, 4241, 4244, 4245, 4915, 5058, 5250, 5253, 5266], "point": [25, 28, 51, 53, 64, 147, 165, 172, 683, 685, 687, 693, 694, 695, 696, 701, 703, 704, 709, 711, 712, 717, 719, 720, 725, 728, 729, 734, 737, 738, 743, 746, 747, 752, 755, 756, 761, 763, 764, 765, 766, 768, 769, 773, 775, 776, 781, 783, 784, 789, 792, 793, 798, 800, 801, 806, 808, 809, 814, 816, 817, 822, 824, 825, 830, 832, 833, 835, 836, 841, 843, 844, 849, 854, 855, 856, 861, 863, 864, 869, 871, 872, 877, 881, 882, 883, 888, 890, 891, 896, 898, 899, 904, 906, 907, 1466, 1468, 2025, 2055, 2063, 2323, 2349, 2363, 2376, 4182, 5062, 5086, 5220, 5331], "prints": [25, 64, 1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2171, 2189, 2202, 2215, 2245, 2259], "consists": [25, 39, 44, 64, 918, 1376, 1379, 1388, 1396, 1456, 1503, 1537, 2712, 3838, 4299, 5237], "id": [25, 31, 57, 64, 105, 145, 146, 250, 421, 580, 1157, 1730, 1731, 1739, 1741, 1898, 1929, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2297, 2303, 2308, 2473, 2480, 2486, 2487, 2495, 2498, 2500, 2501, 2502, 2503, 2801, 2813, 2894, 2900, 2905, 2909, 2918, 2927, 3718, 3723, 3729, 3739, 3741, 3777, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3788, 3789, 3790, 3792, 3793, 3794, 3796, 3807, 3824, 3830, 3834, 3837, 3843, 3852, 3856, 3877, 3878, 3879, 3880, 3883, 3885, 3886, 3887, 3888, 3909, 3914, 3918, 3922, 4032, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4229, 4802, 5006, 5034, 5226, 5332, 5333, 5334, 5339, 5350, 5354, 5355, 5356, 5359, 5366, 5367, 5368], "description": [25, 64, 146, 2285, 2862, 2870, 2872, 2909, 2918, 2927, 3005, 3013, 3382, 3887, 3888, 3922, 3929, 3932, 3957, 3963, 3966, 3973, 3976, 4103, 4839, 4922], "helps": 25, "know": [25, 31, 64, 1952, 1994, 2024, 2032, 4182], "about": [25, 31, 33, 35, 51, 64, 66, 97, 180, 188, 191, 253, 276, 424, 447, 583, 606, 1160, 1183, 1383, 1384, 1385, 1386, 1388, 1389, 1446, 1459, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1524, 1533, 1535, 1539, 1542, 1552, 1560, 1564, 3718, 3720, 3745, 3753, 3782, 3793, 3804, 3847, 3854, 3882, 3963, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4546, 4830, 4878, 4895, 4899, 4916, 4920, 4922, 4964, 5267, 5331, 5342], "runnerresult": [25, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3876], ".backend": [25, 31, 64, 3704, 3718, 3736, 3876, 5359], "_qasm": [25, 64, 3704, 3736, 3834, 3876], "params": [25, 30, 64, 193, 195, 198, 253, 276, 299, 300, 322, 364, 366, 369, 424, 447, 470, 471, 493, 523, 525, 528, 583, 606, 629, 630, 652, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1099, 1102, 1104, 1107, 1160, 1183, 1206, 1207, 1229, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1649, 1654, 1655, 1722, 1753, 1772, 1786, 1793, 1802, 1815, 1831, 1847, 1863, 1879, 1928, 2001, 2003, 2005, 2007, 2011, 2012, 2015, 2016, 2019, 2022, 2271, 2274, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2777, 2778, 3876, 3909, 3985, 3989, 4182, 4229, 4246, 4282, 4294, 5152, 5158, 5239, 5244, 5352, 5362, 5368], "=\"": [25, 48, 64, 1342, 1373, 2323, 3732, 3777, 3779, 3789, 3876, 3888, 4094, 4182, 5285, 5290, 5291, 5292, 5293, 5349, 5357, 5358, 5364, 5365, 5368], "\")": [25, 31, 44, 48, 53, 64, 162, 2830, 3796, 3814, 3862, 3876, 3888, 4094, 4182, 4229, 4487, 4930, 5014, 5262, 5283, 5285, 5290, 5291, 5292, 5293, 5349, 5355, 5357, 5358, 5365, 5366, 5368], ".circuits": [25, 31, 64, 3876], ".measurement": [25, 64, 3876], "_mitigation": [25, 54, 64, 3708, 3876, 5250, 5268, 5272, 5339], "{'": [25, 31, 62, 64, 2909, 2918, 2927, 3723, 3739, 3876, 4023, 4024, 4033, 4056, 4595, 4810, 5354, 5369], "_name": [25, 31, 39, 64, 193, 364, 523, 970, 1102, 1318, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1654, 1722, 2909, 2918, 2927, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3708, 3723, 3730, 3738, 3739, 3756, 3777, 3779, 3782, 3783, 3786, 3787, 3789, 3790, 3794, 3851, 3869, 3876, 3885, 3909, 3920, 3922, 3932, 3935, 3951, 3963, 3976, 4002, 4015, 4802, 4900, 4921, 4930, 4938, 5024, 5108, 5226, 5239, 5244, 5250, 5331, 5333, 5334, 5343, 5359], "':": [25, 29, 31, 39, 51, 62, 64, 235, 406, 565, 1143, 2909, 2918, 2927, 3723, 3739, 3821, 3876, 4023, 4024, 4033, 4056, 4229, 4297, 4398, 4595, 4664, 4810, 4834, 4861, 4868, 5226, 5281, 5331, 5332, 5333, 5334, 5354, 5361, 5369], ".name": [25, 31, 64, 1407, 1410, 3723, 3739, 3876, 3922, 4103, 4229, 4239, 4240, 5278, 5343, 5355], "\",": [25, 30, 31, 44, 53, 57, 64, 2311, 3777, 3779, 3789, 3876, 3907, 3932, 3976, 4182, 4487, 4503, 4577, 4579, 4580, 4930, 5014, 5077, 5143, 5226, 5237, 5349, 5355, 5364, 5366], "=options": [25, 64, 3876], "=params": [25, 64, 2001, 3876, 5362], "(decoder": [25, 3876], "=runnerresult": [25, 3876], "invokes": 25, "compiles": [25, 42, 64, 5236], "executes": [25, 29, 30, 35, 64, 1006, 1036, 1263, 3796], "applies": [25, 64, 110, 199, 232, 370, 403, 529, 562, 1108, 1140, 1343, 1551, 2041, 2802, 2803, 2804, 2805, 2806, 2807, 3777, 3983, 3992, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4232, 4246, 4923, 4936, 5016, 5202, 5231, 5232, 5233, 5234, 5290], "mitigation": [25, 35, 45, 64, 3708, 4745, 4748, 4767, 4770, 5033, 5250, 5253, 5339], "runtimejob": [25, 3708, 3876, 3879, 3880, 3885, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919], ".status": [25, 64, 3718, 3796, 5348, 5369], ".cancel": [25, 64], "does": [25, 31, 44, 53, 64, 92, 97, 107, 110, 118, 165, 235, 247, 251, 276, 289, 342, 343, 344, 345, 406, 418, 422, 447, 460, 513, 514, 515, 516, 565, 577, 581, 606, 619, 672, 673, 674, 675, 687, 696, 704, 712, 720, 729, 738, 747, 752, 756, 766, 776, 784, 793, 798, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907, 926, 927, 933, 946, 947, 953, 959, 960, 967, 970, 973, 974, 982, 984, 989, 990, 996, 1009, 1010, 1017, 1023, 1024, 1032, 1034, 1039, 1040, 1047, 1053, 1054, 1060, 1063, 1065, 1143, 1154, 1158, 1183, 1196, 1249, 1250, 1251, 1252, 1266, 1267, 1274, 1280, 1281, 1290, 1294, 1299, 1300, 1309, 1314, 1322, 1323, 1329, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1376, 1377, 1379, 1388, 1412, 1415, 1419, 1421, 1424, 1431, 1432, 1438, 1441, 1442, 1448, 1471, 1503, 1507, 1508, 1514, 1527, 1537, 1644, 1678, 1722, 1757, 1758, 1767, 1769, 1775, 1776, 1783, 1789, 1790, 1798, 1800, 1805, 1806, 1812, 1818, 1819, 1827, 1829, 1834, 1835, 1843, 1845, 1850, 1851, 1859, 1861, 1866, 1867, 1875, 1877, 1883, 1884, 1893, 1895, 1937, 1988, 1994, 2012, 2016, 2019, 2024, 2156, 2164, 2218, 2280, 2290, 2308, 2323, 2328, 2331, 2340, 2343, 2349, 2354, 2357, 2368, 2370, 2376, 2381, 2383, 2392, 2393, 2400, 2406, 2407, 2414, 2420, 2421, 2428, 2434, 2435, 2442, 2448, 2449, 2456, 2462, 2463, 2470, 2485, 2486, 2500, 2507, 2508, 2514, 2520, 2521, 2527, 2533, 2534, 2540, 2546, 2547, 2553, 2559, 2560, 2566, 2572, 2573, 2579, 2585, 2586, 2592, 2598, 2599, 2605, 2611, 2612, 2618, 2624, 2625, 2631, 2637, 2638, 2644, 2650, 2651, 2657, 2663, 2664, 2670, 2676, 2677, 2683, 2689, 2690, 2696, 2702, 2703, 2709, 2715, 2716, 2722, 2728, 2729, 2735, 2741, 2742, 2748, 2754, 2755, 2761, 2767, 2768, 2774, 2886, 2887, 2905, 2912, 2921, 2930, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3718, 3721, 3730, 3763, 3764, 3778, 3788, 3790, 3792, 3793, 3794, 3810, 3823, 3824, 3833, 3849, 3868, 3883, 3890, 3894, 3919, 3923, 3965, 3969, 3970, 4003, 4016, 4022, 4075, 4381, 4394, 4395, 4402, 4494, 4498, 4501, 4514, 4525, 4599, 4608, 4614, 4617, 4634, 4646, 4660, 4661, 4745, 4765, 4785, 4800, 4807, 4808, 4817, 4821, 4902, 4913, 4964, 4976, 5023, 5024, 5077, 5137, 5143, 5152, 5158, 5175, 5199, 5202, 5211, 5230, 5237, 5250, 5268, 5272, 5281, 5287, 5288, 5294, 5305, 5317, 5329, 5352, 5355, 5359, 5364], "regular": [25, 64, 3723, 3738, 3739, 4229], "ibmqjob": [25, 64, 3718, 3719, 3723, 3729, 3730, 3738, 3739, 3741, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3832, 3845, 3855, 3857, 4829], "provide": [25, 28, 31, 33, 35, 51, 53, 64, 179, 773, 869, 904, 1537, 2308, 2318, 2486, 2500, 2905, 3804, 3847, 3854, 3901, 3965, 3969, 3970, 4003, 4008, 4016, 4041, 4063, 4182, 4432, 4712, 4873, 4878, 5146, 5241, 5288], "inform": [25, 51, 4922], "progress": [25, 57, 64, 5137, 5250], "choose": [25, 35, 44, 64, 235, 406, 565, 682, 912, 1143, 1342, 1379, 2001, 2323, 2349, 3833, 3926, 4182, 5018, 5071, 5089, 5117, 5123, 5175, 5196, 5199, 5226, 5281, 5335], "stream": [25, 3876, 3909, 3918, 4230, 4242, 4244], "callback": [25, 39, 53, 64, 147, 165, 172, 773, 849, 877, 1063, 1644, 2308, 2486, 2500, 2905, 3824, 3876, 3885, 3909, 3918, 4008, 4026, 4206, 4900, 4921, 5250, 5331, 5333, 5334, 5338, 5339], "later": [25, 64, 1908, 1953, 2024, 2025, 2042, 2055, 2063, 2123, 2141, 2169, 2239, 3718, 3834, 3876, 3909, 4297, 4484, 5018, 5268, 5272], ".stream": [25, 3876], "_results": [25, 64, 74, 75, 79, 95, 101, 113, 120, 123, 191, 1926, 3862, 3876, 3888, 3909, 3922, 5269, 5273, 5343, 5369], "_result": [25, 31, 64, 105, 138, 139, 140, 186, 1392, 1475, 1480, 3796, 3909, 5338, 5339, 5349, 5362, 5367, 5369], "_callback": [25, 64, 3909, 5250], "(job": [25, 31, 64, 3718, 3796, 3834, 3855, 3909, 5290], "(interim": 25, "soon": [25, 31, 35, 48, 64, 4013, 4014], "starts": [25, 35, 39, 48, 64, 798, 4026, 4206, 5178], "=program": 25, "_inputs": 25, "=interim": 25, "having": [25, 48, 64, 912, 1916, 1966, 2050, 2083, 2095, 2109, 2129, 2150, 2194, 2205, 2229, 2249, 2263, 3814, 3862, 4182, 4519], "doesn": [25, 31, 48, 64, 822, 1342, 1373, 1644, 1689, 1953, 2285, 2286, 2287, 2288, 2289, 2290, 2963, 2964, 2965, 2966, 2967, 2968, 2980, 2981, 2982, 2983, 2984, 2985, 2997, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3030, 3031, 3032, 3033, 3034, 3035, 3047, 3048, 3049, 3050, 3051, 3052, 3064, 3065, 3066, 3067, 3068, 3069, 3081, 3082, 3083, 3084, 3085, 3086, 3097, 3098, 3099, 3100, 3101, 3102, 3114, 3115, 3116, 3117, 3118, 3119, 3130, 3131, 3132, 3133, 3134, 3135, 3147, 3148, 3149, 3150, 3151, 3152, 3163, 3164, 3165, 3166, 3167, 3168, 3180, 3181, 3182, 3183, 3184, 3185, 3197, 3198, 3199, 3200, 3201, 3202, 3214, 3215, 3216, 3217, 3218, 3219, 3231, 3232, 3233, 3234, 3235, 3236, 3248, 3249, 3250, 3251, 3252, 3253, 3265, 3266, 3267, 3268, 3269, 3270, 3282, 3283, 3284, 3285, 3286, 3287, 3298, 3299, 3300, 3301, 3302, 3303, 3315, 3316, 3317, 3318, 3319, 3320, 3332, 3333, 3334, 3335, 3336, 3337, 3348, 3349, 3350, 3351, 3352, 3353, 3365, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3390, 3391, 3392, 3393, 3394, 3395, 3407, 3408, 3409, 3410, 3411, 3412, 3441, 3442, 3443, 3444, 3445, 3446, 3458, 3459, 3460, 3461, 3462, 3463, 3474, 3475, 3476, 3477, 3478, 3479, 3505, 3506, 3507, 3508, 3509, 3510, 3521, 3522, 3523, 3524, 3525, 3526, 3538, 3539, 3540, 3541, 3542, 3543, 3563, 3564, 3565, 3566, 3567, 3568, 3580, 3581, 3582, 3583, 3584, 3585, 3597, 3598, 3599, 3600, 3601, 3602, 3630, 3631, 3632, 3633, 3634, 3635, 3647, 3648, 3649, 3650, 3651, 3652, 3663, 3664, 3665, 3666, 3667, 3668, 3680, 3681, 3682, 3683, 3684, 3685, 3696, 3697, 3698, 3699, 3700, 3701, 3762, 3877, 3878, 3879, 3887, 4182, 4614, 4922, 5023, 5202, 5217, 5226, 5250, 5253, 5272, 5290, 5331], "\u2019t": [25, 28, 31, 39, 48, 51, 64, 119, 285, 456, 615, 822, 1192, 1342, 1373, 1644, 1689, 1706, 1891, 1953, 2024, 2165, 2168, 2285, 2286, 2287, 2288, 2289, 2290, 2334, 2360, 2373, 2386, 2963, 2964, 2965, 2966, 2967, 2968, 2980, 2981, 2982, 2983, 2984, 2985, 2997, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3030, 3031, 3032, 3033, 3034, 3035, 3047, 3048, 3049, 3050, 3051, 3052, 3064, 3065, 3066, 3067, 3068, 3069, 3081, 3082, 3083, 3084, 3085, 3086, 3097, 3098, 3099, 3100, 3101, 3102, 3114, 3115, 3116, 3117, 3118, 3119, 3130, 3131, 3132, 3133, 3134, 3135, 3147, 3148, 3149, 3150, 3151, 3152, 3163, 3164, 3165, 3166, 3167, 3168, 3180, 3181, 3182, 3183, 3184, 3185, 3197, 3198, 3199, 3200, 3201, 3202, 3214, 3215, 3216, 3217, 3218, 3219, 3231, 3232, 3233, 3234, 3235, 3236, 3248, 3249, 3250, 3251, 3252, 3253, 3265, 3266, 3267, 3268, 3269, 3270, 3282, 3283, 3284, 3285, 3286, 3287, 3298, 3299, 3300, 3301, 3302, 3303, 3315, 3316, 3317, 3318, 3319, 3320, 3332, 3333, 3334, 3335, 3336, 3337, 3348, 3349, 3350, 3351, 3352, 3353, 3365, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3390, 3391, 3392, 3393, 3394, 3395, 3407, 3408, 3409, 3410, 3411, 3412, 3441, 3442, 3443, 3444, 3445, 3446, 3458, 3459, 3460, 3461, 3462, 3463, 3474, 3475, 3476, 3477, 3478, 3479, 3505, 3506, 3507, 3508, 3509, 3510, 3521, 3522, 3523, 3524, 3525, 3526, 3538, 3539, 3540, 3541, 3542, 3543, 3563, 3564, 3565, 3566, 3567, 3568, 3580, 3581, 3582, 3583, 3584, 3585, 3597, 3598, 3599, 3600, 3601, 3602, 3630, 3631, 3632, 3633, 3634, 3635, 3647, 3648, 3649, 3650, 3651, 3652, 3663, 3664, 3665, 3666, 3667, 3668, 3680, 3681, 3682, 3683, 3684, 3685, 3696, 3697, 3698, 3699, 3700, 3701, 3762, 3789, 3877, 3878, 3879, 3887, 3905, 4182, 4231, 4473, 4500, 4614, 4705, 4727, 4751, 4922, 4927, 4930, 4938, 4973, 5023, 5202, 5214, 5217, 5226, 5250, 5253, 5259, 5267, 5272, 5290, 5331], "imply": 25, "usage": [25, 44, 48, 64, 347, 518, 677, 975, 1025, 1063, 1254, 1282, 1302, 1760, 1791, 1820, 1836, 1852, 1868, 3723, 3739, 5268, 5272], "outputs": [25, 44, 64, 235, 406, 565, 1143, 1654, 1661, 5042, 5281], "requirements": [25, 57, 64, 3888, 3922], "consumers": 25, "what": [25, 31, 35, 39, 44, 48, 51, 64, 1475, 1934, 1987, 2282, 2291, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 5196, 5227, 5230, 5238, 5250], "needed": [25, 31, 48, 51, 53, 62, 64, 130, 143, 262, 264, 433, 435, 592, 594, 1169, 1171, 1476, 1551, 2204, 2248, 2261, 4220, 4710, 4712, 4814, 4964, 5214, 5217, 5263, 5268, 5369], "needs": [25, 28, 31, 39, 53, 64, 158, 1182, 1673, 1732, 2323, 2337, 2349, 2363, 2376, 2883, 3723, 3738, 3739, 3779, 3789, 3888, 4844, 4896, 4917, 4922, 4930, 5250, 5283, 5335], "_messenger": 25, "**": [25, 31, 51, 64, 214, 385, 544, 970, 975, 1025, 1122, 1282, 1302, 1372, 1380, 1466, 1468, 1517, 1524, 1533, 1535, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 4026, 4193, 4206, 4335, 4402, 4424, 4686, 4830, 5341, 5345, 5347, 5357, 5372], "kwargs": [25, 31, 51, 64, 233, 235, 321, 404, 406, 492, 563, 565, 651, 691, 699, 707, 709, 715, 717, 723, 732, 741, 750, 759, 771, 779, 787, 796, 798, 804, 806, 812, 814, 820, 828, 833, 839, 841, 847, 859, 861, 867, 875, 886, 888, 894, 896, 902, 910, 913, 1644, 2010, 2013, 2014, 2017, 2018, 2265, 2267, 2269, 2272, 2277, 2285, 2297, 2309, 2312, 2315, 2316, 2321, 2322, 2323, 2333, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2891, 2892, 2894, 2907, 2908, 2909, 2918, 2927, 2942, 2951, 2960, 2977, 2994, 3005, 3013, 3027, 3044, 3061, 3078, 3094, 3111, 3127, 3144, 3160, 3177, 3194, 3211, 3228, 3245, 3262, 3279, 3295, 3312, 3329, 3345, 3362, 3379, 3382, 3404, 3421, 3430, 3438, 3455, 3471, 3483, 3484, 3486, 3487, 3493, 3502, 3518, 3535, 3551, 3560, 3577, 3594, 3610, 3618, 3627, 3644, 3660, 3677, 3693, 3705, 3706, 3711, 3737, 3748, 3752, 3756, 3781, 3782, 3792, 3793, 3796, 3830, 3891, 3901, 3932, 3935, 3954, 3960, 3963, 3973, 3976, 3999, 4012, 4073, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4244, 4245, 4255, 4261, 4273, 4279, 4288, 4291, 4717, 4751, 4771, 4802, 4831, 4900, 4915, 4921, 4941, 4946, 4952, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5018, 5024, 5027, 5030, 5033, 5062, 5065, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5163, 5166, 5169, 5172, 5175, 5178, 5184, 5187, 5190, 5193, 5199, 5205, 5208, 5211, 5214, 5217, 5223, 5226, 5227, 5238, 5256, 5291, 5295, 5307, 5319, 5331, 5333, 5334], "serves": [25, 28, 31, 64, 1448, 2132, 3932, 3963, 3976, 4821], "programbackend": [25, 3892, 3893, 3894, 3895, 3896, 3897, 3898], "whose": [25, 48, 64, 104, 116, 117, 138, 140, 143, 144, 151, 169, 176, 179, 709, 1071, 1087, 1682, 1938, 1939, 1940, 1946, 1988, 1994, 2002, 2003, 2004, 2005, 2007, 2011, 2015, 2019, 2886, 2887, 3723, 3725, 3738, 3739, 3779, 3787, 3789, 4167, 4299, 5017, 5196], "submit": [25, 31, 64, 2473, 2485, 2487, 2494, 2499, 2501, 2502, 2904, 3711, 3718, 3727, 3796, 3819, 3834, 3851, 3852, 3855, 3864, 3891], "usermessenger": [25, 3926], ".publish": 25, "publish": [25, 64, 3926], "/providers": [25, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "/ibmq": [25, 64], "/runtime": 25, "/program": [25, 3888], "_template": 25, ".py": [25, 39, 51, 57, 5372], "template": [25, 44, 64, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 5193, 5195, 5235, 5236], "maximum": [25, 64, 69, 71, 75, 97, 101, 118, 119, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 833, 841, 849, 861, 869, 877, 896, 904, 1640, 2285, 2323, 2349, 2363, 2376, 2813, 3711, 3722, 3727, 3737, 3838, 3882, 3887, 3888, 3922, 3932, 3963, 3976, 3994, 3998, 4076, 4079, 4085, 4089, 4095, 4098, 4104, 4107, 4113, 4116, 4122, 4125, 4131, 4134, 4140, 4143, 4149, 4152, 4182, 4894, 5003, 5123, 5190, 5207, 5214, 5226, 5237, 5250, 5280, 5290, 5331, 5332], "field": [25, 39, 51, 63, 64, 186, 1555, 1926, 2277, 2283, 2285, 2292, 2310, 2311, 2909, 2916, 2918, 2925, 2927, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3005, 3012, 3013, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3382, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3887, 3888, 3891, 3897, 3932, 3963, 3976, 4288, 4291, 4811, 4961, 5014], ".upload": [25, 64], "_program": [25, 64, 4003, 4016, 5357], "fields": [25, 39, 51, 64, 913, 938, 2277, 2283, 2285, 2292, 2312, 2335, 2347, 2361, 2374, 2387, 2909, 2916, 2918, 2925, 2927, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3005, 3012, 3013, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3382, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3888, 3891, 3897, 3932, 3935, 3954, 3963, 3976, 4255, 4261, 4273, 4279, 4873], "individually": [25, 31, 64, 4000, 4001, 4013, 4014, 5290], "json": [25, 31, 39, 56, 235, 406, 565, 822, 1143, 1898, 2485, 2812, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3888, 3901, 3902, 3904, 3905, 3907, 3926, 4254, 4272, 4287, 4297, 4298, 5281, 5332], "dictionary": [25, 39, 51, 53, 64, 75, 79, 88, 89, 95, 101, 113, 123, 179, 193, 198, 235, 364, 369, 406, 523, 528, 565, 684, 691, 694, 699, 702, 707, 709, 710, 715, 717, 718, 723, 727, 732, 736, 741, 745, 750, 754, 759, 762, 771, 774, 779, 782, 787, 791, 796, 798, 799, 804, 806, 807, 812, 814, 815, 820, 822, 823, 828, 833, 834, 839, 841, 842, 847, 849, 853, 859, 861, 862, 867, 870, 875, 877, 880, 886, 888, 889, 894, 896, 897, 902, 905, 910, 914, 915, 1102, 1107, 1143, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1443, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1654, 1669, 1670, 1695, 1706, 1722, 1746, 1748, 1750, 1752, 1898, 1901, 1928, 1929, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2271, 2274, 2333, 2359, 2372, 2385, 2660, 2809, 2812, 2827, 2840, 2863, 2867, 2886, 2887, 2915, 2924, 2933, 3753, 3757, 3759, 3760, 3765, 3767, 3779, 3787, 3789, 3796, 3798, 3805, 3821, 3824, 3887, 3888, 3924, 3932, 3933, 3934, 3939, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3963, 3968, 3972, 3974, 3975, 3976, 3977, 3978, 3980, 3981, 3999, 4012, 4032, 4084, 4158, 4163, 4168, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4205, 4208, 4211, 4214, 4217, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4265, 4266, 4268, 4269, 4271, 4272, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4295, 4296, 4297, 4362, 4371, 4390, 4394, 4398, 4595, 4605, 4608, 4656, 4660, 4664, 4712, 4743, 4744, 4747, 4749, 4751, 4754, 4755, 4756, 4757, 4763, 4769, 4771, 4774, 4777, 4778, 4779, 4784, 4788, 4791, 4792, 4793, 4799, 4803, 4804, 4805, 4809, 4811, 4812, 4817, 4819, 4821, 4823, 4825, 4879, 4884, 4888, 4890, 4901, 4903, 4906, 4907, 4912, 4923, 4938, 5008, 5193, 5196, 5226, 5230, 5237, 5239, 5244, 5252, 5281, 5298, 5299, 5304, 5310, 5311, 5316, 5322, 5323, 5328, 5331, 5332, 5333, 5334], "_metadata": [25, 64, 3888], "_sample": [25, 64, 2323, 2349, 3888], ".json": [25, 64, 235, 406, 565, 1143, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3888, 5281, 5332], "sample": [25, 35, 64, 97, 761, 763, 768, 769, 1642, 1643, 1644, 1926, 1928, 1929, 1983, 1987, 1990, 1993, 1994, 2162, 2165, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 2323, 2349, 2842, 2862, 2867, 3876, 3932, 3963, 3973, 3976, 4172, 4182, 4187, 4193, 4197, 4388, 4394, 4395, 4603, 4608, 4609, 4654, 4660, 4661, 4730, 4814, 5154, 5160, 5341, 5342, 5361], "my": [25, 31, 48, 53, 57, 64, 904, 1948, 1983, 1990, 3740, 3969, 3970, 4182, 4751, 5004, 5331, 5333, 5334, 5349, 5352, 5356, 5357, 5361, 5370], "_vqe": 25, ".delete": [25, 64, 3777], "delete": [25, 64, 1912, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 3746, 3777, 3784, 3785, 3786, 3877, 3878, 4470, 4497, 4506, 4528, 4533, 4623, 4628, 5343], "files": [25, 39, 47, 53, 64, 235, 406, 565, 1143, 2918, 4241, 5281, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "writing": [25, 28, 35, 45, 48, 64, 1937, 3925], "directory": [25, 47, 64, 683, 686, 689, 912, 1922, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "applications": [28, 58, 60, 64, 186, 806, 1388, 1503, 2845, 2858, 2859, 3777, 3791, 4705, 4712], "wrapped": [28, 53, 64, 1953, 2132, 5278, 5342], "layer": [28, 44, 64, 66, 904, 1376, 1379, 1380, 1387, 1388, 1441, 1442, 1456, 1472, 1477, 1503, 1537, 1676, 1682, 1708, 3973, 4964, 5047, 5048, 5178, 5237, 5331, 5333, 5334, 5355, 5369], "providing": [28, 31, 64, 328, 499, 658, 869, 1000, 1235, 1786, 4182, 4758, 4759, 4766, 4780, 4781, 4786, 4794, 4795, 4801, 4908, 4909, 4914, 4923, 4931, 4932, 4940, 5300, 5301, 5306, 5312, 5313, 5318, 5324, 5325, 5330], "language": [28, 57, 64, 877, 4229, 5146], "primitives": [28, 45, 64, 1901, 1905, 1911, 1956, 1958, 1962, 2035, 2038, 2045, 2049, 2051, 2052, 2061, 2062, 2068, 2072, 2074, 2077, 2088, 2092, 2101, 2105, 2116, 2125, 2132, 2135, 2137, 2143, 2154, 2161, 2180, 2186, 2200, 2213, 2223, 2225, 2235, 2237, 2242, 2257, 3957], "qa": [28, 5354], "&a": 28, "flow": [28, 48, 956, 1922, 1939, 2002, 2068, 2132, 3718, 4835, 4836, 4837, 4838, 4862, 4863, 4864, 4865, 4869, 4870, 4871, 4872, 4895, 4899, 4916, 4920, 4946, 4949, 4952, 4955, 5181], "works": [28, 31, 47, 64, 66, 86, 97, 103, 147, 165, 172, 322, 493, 652, 1229, 1674, 1935, 1996, 4182, 4231, 4922, 5077, 5143, 5226, 5335, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "unifying": 28, "way": [28, 31, 51, 64, 103, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 781, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1441, 1922, 1930, 1985, 1996, 2024, 2032, 2166, 2337, 3736, 4032, 5178, 5331, 5333, 5334, 5341, 5347], "preserves": [28, 64, 1379, 5077, 5143], "intuition": 28, "programming": [28, 35, 44, 53, 60, 64, 861, 3993, 4964], "freedom": [28, 64], "binary": [28, 30, 39, 48, 64, 97, 103, 136, 1378, 1393, 1398, 1475, 1898, 1906, 1916, 1918, 1945, 1959, 1966, 2028, 2039, 2050, 2064, 2075, 2083, 2089, 2095, 2102, 2109, 2117, 2129, 2138, 2150, 2161, 2181, 2182, 2194, 2198, 2205, 2211, 2218, 2224, 2229, 2231, 2232, 2236, 2238, 2249, 2255, 2263, 2816, 2826, 3760, 4182, 4297, 4298, 4299, 4304, 4310, 4321, 4331, 4340, 4350, 4359, 4369, 4407, 4417, 4429, 4440, 4449, 4459, 4482, 4557, 4564, 4574, 4590, 4672, 4682, 4691, 4701, 4774, 4788, 4805, 4964, 5341, 5342], "manipulate": [28, 105, 140, 1922, 2798, 2842, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "evaluate": [28, 30, 53, 64, 66, 74, 151, 169, 176, 182, 353, 358, 852, 1291, 1310, 1398, 1463, 1467, 1469, 1905, 1906, 1923, 1958, 1959, 2008, 2028, 2038, 2039, 2058, 2064, 2074, 2075, 2088, 2089, 2101, 2102, 2116, 2117, 2137, 2138, 2182, 2198, 2211, 2223, 2224, 2237, 2238, 2255, 4182, 4383, 4601, 4648, 5108, 5110, 5362], "lingua": 28, "franca": 28, "meaning": [28, 64, 180, 798, 1903, 1913, 1923, 1934, 1957, 1964, 2024, 2027, 2032, 2036, 2047, 2066, 2068, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2161, 2171, 2189, 2202, 2215, 2245, 2259, 5033, 5226], "ultimate": 28, "goal": [28, 48, 97, 798, 861, 896, 1393, 5117, 5341], "theorists": 28, "speak": [28, 103], "speaking": 28, "engineers": 28, "formalism": [28, 2068, 2132], "successful": [28, 160, 709, 3722, 3754, 3869, 3909], "fast": [28, 53, 64, 97, 869, 1388, 1994, 3957, 4075, 5342], "physically": [28, 64, 4991], "formal": [28, 64, 2265, 2269], "enough": [28, 31, 48, 64, 267, 438, 597, 769, 1174, 4195, 4810], "easier": [28, 64, 2875, 3993], "natural": [28, 35, 64, 849, 2001, 2020, 5202, 5226, 5237, 5362], "hacking": [28, 2192, 2217], "matlab": 28, "learn": [28, 35, 53, 59, 64, 97, 180], "typical": [28, 31, 35, 64, 798, 1706, 1934, 4915, 4930, 4958], "software": [28, 4139], "naturally": [28, 186], "effortlessly": 28, "never": [28, 64, 1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237], "say": [28, 31, 64], "hacked": 28, "don": [28, 64, 2024, 3789, 4473, 4500, 4705, 4751, 4922, 4927, 5123], "come": [28, 48, 64, 2001], "stay": 28, "interface": [28, 33, 35, 39, 45, 49, 51, 53, 60, 64, 67, 77, 81, 108, 125, 140, 154, 798, 912, 1948, 1953, 1983, 2068, 2132, 2277, 2282, 2285, 2297, 2813, 3005, 3013, 3382, 3723, 3739, 3777, 4035, 4057, 4058, 4059, 4060, 4244, 4245, 4817, 4821, 4922, 5226, 5237, 5253, 5354], ".\u300d": [28, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4192, 4964, 5175, 5178], "clear": [28, 48, 64, 206, 377, 536, 1115, 1927, 2326, 2338, 2352, 2366, 2379, 3796, 3881, 4752, 4775, 4789, 4904, 5296, 5308, 5320], "learnable": 28, "before": [28, 31, 35, 48, 53, 64, 71, 186, 211, 235, 382, 406, 541, 565, 709, 849, 877, 1101, 1120, 1143, 1388, 1406, 1417, 1537, 1939, 2024, 2308, 2323, 2333, 2337, 2345, 2349, 2359, 2372, 2385, 2482, 2486, 2496, 2500, 2503, 2798, 2905, 2954, 2971, 2988, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3488, 3496, 3513, 3529, 3554, 3571, 3588, 3621, 3638, 3655, 3671, 3688, 3718, 3723, 3727, 3738, 3739, 3784, 3785, 3786, 3789, 3824, 3849, 3862, 3876, 3909, 3919, 4008, 4030, 4224, 4481, 4491, 4513, 4915, 4923, 4958, 4967, 5014, 5017, 5142, 5143, 5145, 5166, 5240, 5253, 5278, 5281, 5347, 5361], "getting": [28, 48, 63, 841, 3876, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 5348], "concepts": 28, "unpin": 28, "derive": 28, "inspiration": 28, "structure": [28, 39, 44, 48, 60, 64, 147, 216, 316, 387, 487, 546, 646, 1124, 1223, 1376, 1379, 1441, 1450, 1456, 1503, 1537, 1567, 1668, 1708, 1912, 1963, 1985, 1996, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 2323, 2349, 2793, 3907, 4223, 4370, 4463, 4614, 4716, 4728, 4897, 4918, 5003, 5120, 5246, 5247], "john": [28, 1401, 4299, 4311], "watrous": [28, 4717], "(but": 28, "follow": [28, 33, 48, 64, 4988, 5077, 5143, 5217], "exactly": [28, 64, 136, 142, 143, 918, 1402, 1644, 1987, 3779, 3789, 4172, 4892, 5077, 5143, 5202], "worthwhile": 28, "review": [28, 1382], "chapters": 28, "ii": [28, 30, 64, 4487, 4513, 4539, 4634], "free": [28, 48, 51, 64, 88, 151, 169, 176, 179, 198, 277, 369, 448, 528, 607, 1102, 1107, 1184, 2266, 2268, 2270, 2273, 3993, 4008, 4025, 4255, 4261, 4273, 4279, 4964, 5033, 5091, 5241, 5250, 5361], "online": [28, 31, 64, 877, 1401, 2285, 3005, 3013, 3382, 3932, 3963, 3976], "feel": 28, "clicking": 28, "complex": [28, 35, 48, 64, 84, 88, 90, 92, 128, 130, 179, 253, 255, 256, 276, 299, 316, 328, 424, 426, 427, 447, 470, 487, 499, 583, 585, 586, 606, 629, 646, 658, 923, 943, 956, 1006, 1036, 1050, 1076, 1092, 1160, 1162, 1163, 1183, 1206, 1223, 1235, 1263, 1379, 1503, 1526, 1529, 1772, 1786, 1898, 1901, 1906, 1908, 1953, 1959, 1991, 2024, 2025, 2028, 2032, 2039, 2042, 2054, 2055, 2063, 2064, 2069, 2075, 2084, 2089, 2097, 2102, 2112, 2117, 2119, 2123, 2132, 2138, 2141, 2153, 2155, 2161, 2162, 2165, 2166, 2167, 2169, 2176, 2177, 2182, 2195, 2198, 2208, 2211, 2220, 2224, 2232, 2238, 2239, 2251, 2252, 2255, 2323, 2337, 2349, 2363, 2376, 2504, 2712, 2777, 2793, 2875, 2876, 3705, 3737, 3757, 3761, 3763, 3764, 3874, 3875, 3966, 3979, 4121, 4139, 4157, 4162, 4167, 4172, 4182, 4187, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4246, 4249, 4254, 4264, 4272, 4287, 4319, 4338, 4383, 4405, 4447, 4463, 4525, 4529, 4568, 4577, 4579, 4601, 4640, 4648, 4670, 4689, 4803, 4806, 4807, 4808, 5280, 5350, 5355, 5361], "often": [28, 31, 35, 48, 64, 97, 286, 457, 616, 709, 1193, 1376, 1379, 1441, 1456, 1503, 1537, 1922, 2024, 2025, 2055, 2063, 2168, 4063, 4086, 4717, 4958, 5220, 5250], "strings": [28, 39, 53, 64, 107, 136, 140, 142, 183, 354, 359, 1450, 1462, 1563, 1567, 1644, 1911, 1916, 1918, 1962, 1966, 2021, 2023, 2045, 2050, 2077, 2083, 2092, 2095, 2105, 2109, 2125, 2129, 2143, 2150, 2161, 2170, 2183, 2186, 2194, 2200, 2201, 2205, 2213, 2214, 2225, 2226, 2229, 2231, 2232, 2242, 2244, 2249, 2257, 2258, 2263, 2323, 2349, 3901, 3932, 3957, 3976, 4229, 4390, 4398, 4487, 4503, 4504, 4531, 4568, 4577, 4579, 4580, 4605, 4626, 4656, 4664, 4751, 4756, 4757, 4774, 4779, 4788, 4793, 4813, 5096, 5137, 5226, 5290, 5342], "traditional": [28, 64], "zero": [28, 35, 48, 64, 115, 162, 234, 253, 255, 256, 276, 342, 343, 344, 345, 405, 424, 426, 427, 447, 513, 514, 515, 516, 564, 583, 585, 586, 606, 672, 673, 674, 675, 1072, 1088, 1142, 1160, 1162, 1163, 1183, 1249, 1250, 1251, 1252, 1388, 1459, 1496, 1526, 1539, 1772, 1778, 1898, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2121, 2126, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2323, 2349, 2363, 2376, 2914, 2923, 2932, 4172, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4241, 4376, 4568, 4578, 4582, 4588, 4640, 5151, 5172, 5190, 5244, 5331, 5333, 5334, 5342, 5361], "linear": [28, 44, 48, 53, 57, 64, 97, 181, 182, 185, 186, 188, 189, 190, 191, 193, 352, 353, 356, 357, 358, 361, 362, 363, 364, 709, 717, 1376, 1379, 1393, 1399, 1401, 1402, 1403, 1404, 1406, 1456, 1466, 1467, 1468, 1470, 1475, 1476, 1503, 1537, 1567, 1903, 1957, 2001, 2006, 2018, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2863, 2869, 4020, 4201, 5000, 5111, 5114, 5263, 5337, 5341, 5362], "pauli": [28, 64, 103, 104, 143, 144, 147, 165, 172, 183, 253, 274, 276, 303, 304, 354, 359, 424, 445, 447, 474, 475, 583, 604, 606, 633, 634, 693, 1160, 1181, 1183, 1210, 1211, 1376, 1381, 1399, 1406, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1466, 1468, 1470, 1517, 1524, 1526, 1533, 1535, 1552, 1560, 1563, 1564, 1567, 1772, 1911, 1923, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1945, 1953, 1962, 1970, 1972, 1973, 1984, 1986, 1997, 1998, 2000, 2045, 2052, 2062, 2069, 2077, 2084, 2092, 2097, 2104, 2105, 2112, 2119, 2124, 2125, 2132, 2143, 2153, 2155, 2158, 2160, 2186, 2200, 2213, 2225, 2242, 2257, 2556, 2569, 2781, 2782, 2822, 2847, 2857, 2875, 2885, 4308, 4316, 4367, 4386, 4444, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4497, 4498, 4499, 4500, 4501, 4503, 4504, 4506, 4507, 4509, 4511, 4513, 4514, 4517, 4521, 4522, 4523, 4524, 4525, 4528, 4529, 4530, 4531, 4533, 4535, 4537, 4539, 4540, 4568, 4570, 4577, 4578, 4579, 4580, 4586, 4591, 4595, 4601, 4614, 4616, 4617, 4618, 4619, 4626, 4628, 4630, 4632, 4634, 4636, 4637, 4651, 4716, 4725, 4732, 4733, 4747, 4769, 4819, 4823, 4825, 5293, 5337, 5340, 5341, 5353, 5361, 5362, 5366, 5368, 5372], "(zero": [28, 1464, 2171, 2189, 2202, 2215, 2245, 2259, 5361], "(one": [28, 5361], "equivalently": [28, 64, 1001, 1003, 1005, 1393, 1939], "sometimes": [28, 33, 53, 64, 97, 143, 1517, 1533, 2323, 3708, 5143], "convenient": [28, 35, 53, 64, 1934, 1951, 1952, 1993, 1994, 3736, 4025, 4026, 4182, 4203, 4206, 5073, 5230], "picture": [28, 64, 4473], "things": [28, 31, 48, 53, 64, 2002, 2004, 2006], "elements": [28, 30, 39, 64, 97, 130, 198, 235, 369, 406, 528, 565, 765, 769, 877, 970, 1101, 1107, 1143, 1376, 1393, 1396, 1448, 1477, 2220, 2271, 2274, 2869, 3905, 4299, 4444, 4614, 4813, 4886, 5077, 5143, 5270, 5274, 5281, 5285, 5291, 5332, 5362], "functional": [28, 64, 357, 360, 361, 877, 1381, 4195], "effort": [28, 64, 202, 373, 532, 1111, 2819, 4970, 5355], "made": [28, 44, 53, 64, 682, 856, 883, 3926, 3963, 4246, 4614, 4922, 5033, 5227, 5238, 5290], "similar": [28, 64, 92, 1364, 3777, 4241, 4923, 4973, 5217], "notation": [28, 64, 4390, 4398, 4605, 4656, 4664, 4686, 5307], "places": [28, 64, 1478, 1479, 3887, 3888, 4389, 4390, 4398, 4604, 4605, 4655, 4656, 4664, 5280], "hands": 28, "tied": [28, 1648, 1649], "design": [28, 64, 1456], "(tensor": 28, "product": [28, 44, 48, 64, 162, 163, 305, 316, 476, 487, 635, 646, 1212, 1223, 1387, 1392, 1397, 1448, 1480, 1908, 1913, 1914, 1940, 1964, 2002, 2004, 2006, 2024, 2042, 2047, 2048, 2063, 2066, 2079, 2093, 2106, 2123, 2127, 2141, 2145, 2146, 2161, 2169, 2171, 2189, 2202, 2204, 2215, 2232, 2239, 2245, 2246, 2248, 2259, 2261, 2323, 2349, 2582, 2712, 2783, 2793, 2816, 2818, 2826, 2834, 2839, 4304, 4305, 4310, 4321, 4322, 4331, 4340, 4341, 4350, 4359, 4360, 4363, 4369, 4382, 4386, 4389, 4393, 4397, 4407, 4408, 4417, 4429, 4431, 4433, 4439, 4440, 4449, 4450, 4459, 4465, 4466, 4467, 4471, 4474, 4482, 4489, 4492, 4494, 4498, 4501, 4514, 4519, 4525, 4529, 4530, 4540, 4557, 4558, 4564, 4574, 4576, 4590, 4600, 4611, 4614, 4620, 4624, 4625, 4635, 4647, 4651, 4652, 4655, 4659, 4663, 4672, 4673, 4682, 4691, 4692, 4701, 4767, 4817, 4819, 4821, 4823, 4825, 5130, 5340, 5364, 5366, 5370], "beware": [28, 64], "precedence": [28, 64, 2886, 2887, 3887, 3888, 5230], "rules": [28, 31, 64, 197, 368, 527, 725, 970, 973, 1023, 1106, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2002, 2004, 2006, 4229, 4973, 5068, 5137, 5210, 5211, 5213, 5233, 5234], "^x": [28, 4463, 4519, 4614, 5361], "^i": [28, 64, 1468, 1470, 5361], "(x": [28, 31, 64, 97, 849, 877, 1388, 1393, 1399, 1406, 1448, 1465, 1466, 1468, 1470, 1475, 1519, 1522, 1567, 1586, 1903, 1957, 2018, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2870, 2872, 2875, 2883, 2884, 4025, 4026, 4157, 4162, 4167, 4172, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4299, 4706, 4707, 4708, 4747, 4769, 5341, 5342, 5361, 5362], "+x": [28, 4363], "^ i": [28, 5361], "parentheses": 28, "(i": [28, 54, 64, 70, 103, 136, 1450, 1470, 1586, 2867, 2875, 4112, 4121, 4139, 4219, 4746, 4768, 5341, 5352, 5357, 5361, 5362, 5364, 5368, 5370], "+ (": [28, 64, 2323, 2349, 5361], "relevant": [28, 64, 197, 368, 527, 1106, 4380, 4644], "calls": [28, 48, 53, 64, 105, 110, 856, 883, 1928, 1936, 3723, 3738, 3739, 3814, 3862, 3906, 5023, 5282], "\u2019ll": [28, 31, 64, 2024, 4182], "immutable": [28, 64, 2277, 2285, 2309, 4915], "global": [28, 33, 39, 44, 53, 64, 147, 193, 216, 224, 328, 364, 387, 395, 499, 523, 546, 554, 658, 725, 734, 743, 752, 789, 912, 1102, 1124, 1132, 1235, 1318, 1342, 1345, 1352, 1357, 1362, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1427, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1519, 1522, 1537, 1544, 1547, 1550, 1551, 1552, 1555, 1560, 1563, 1564, 1567, 1654, 1668, 1722, 1936, 2819, 3730, 3812, 3817, 3838, 4430, 4499, 4645, 4927, 4973, 5077, 5143, 5175, 5239, 5244, 5258, 5361], "construction": [28, 35, 44, 64, 150, 151, 168, 169, 175, 176, 2024, 2485, 4578, 4579, 5274], "groups": [28, 64, 1923, 1925, 1998, 4814, 5003, 5250, 5272, 5274], "operatorbase": [28, 64, 82, 88, 90, 104, 126, 131, 134, 147, 148, 149, 150, 151, 166, 167, 168, 169, 173, 174, 175, 176, 179, 1377, 1471, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1924, 1928, 1931, 1933, 1936, 1939, 1941, 1942, 1944, 1946, 1947, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1964, 1969, 1971, 1975, 1977, 1980, 1985, 1986, 1988, 1989, 1991, 1992, 1994, 1996, 1997, 1999, 2000, 2003, 2005, 2007, 2008, 2011, 2012, 2015, 2016, 2019, 2025, 2026, 2027, 2028, 2029, 2030, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2054, 2055, 2056, 2058, 2059, 2063, 2064, 2065, 2066, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2078, 2079, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2106, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2123, 2127, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2144, 2145, 2146, 2148, 2151, 2152, 2153, 2154, 2156, 2162, 2163, 2166, 2167, 2168, 2169, 2171, 2176, 2178, 2179, 2180, 2181, 2182, 2187, 2189, 2191, 2196, 2197, 2198, 2202, 2203, 2207, 2208, 2209, 2210, 2211, 2215, 2221, 2222, 2223, 2224, 2227, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2243, 2245, 2246, 2247, 2250, 2251, 2253, 2254, 2255, 2259, 2260, 2264, 5361], "enforces": [28, 64, 1922], "consistency": [28, 64, 1691, 1902], "conveniently": [28, 64, 1981, 1982], "_globals": [28, 64, 683, 761, 849, 877, 5337, 5338, 5339, 5340, 5341, 5372], "reach": [28, 841, 1421, 2025, 2055, 2063, 2308, 2486, 2500, 2905, 3824, 3919, 5151], "clifford": [28, 64, 301, 317, 472, 488, 631, 647, 1208, 1224, 1369, 1371, 1387, 1517, 1524, 1530, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1936, 2155, 2323, 2349, 2530, 2725, 2779, 2794, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4473, 4500, 4595, 4599, 4716, 4728, 5364, 5368], "+t": [28, 5343], "-parameterized": 28, "cz": [28, 64, 229, 400, 559, 1137, 1369, 1370, 1387, 1456, 1537, 1565, 1567, 4229, 5011, 5332, 5333, 5334, 5337, 5338, 5339, 5340, 5341], "plus": [28, 30, 64, 348, 519, 678, 1255, 1456, 1537, 2032, 2171, 2189, 2202, 2215, 2245, 2259, 5361], "minus": [28, 64, 118, 143, 145, 1470, 5361], "primitiveop": [28, 64, 1906, 1935, 1937, 1941, 1942, 1944, 1953, 1959, 1972, 1973, 2069, 2075, 2084, 2089, 2097, 2102, 2112, 2117, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2182, 2198, 2211, 2224, 2238, 2255], "listop": [28, 64, 1906, 1925, 1934, 1940, 1941, 1942, 1944, 1956, 1959, 1967, 2022, 2024, 2025, 2028, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2063, 2064, 2075, 2089, 2102, 2117, 2138, 2180, 2182, 2198, 2211, 2224, 2238, 2255, 5362], "statefn": [28, 64, 88, 90, 104, 150, 168, 175, 181, 357, 849, 877, 1898, 1900, 1906, 1929, 1934, 1944, 1955, 1959, 1983, 1988, 1990, 2001, 2012, 2016, 2026, 2028, 2034, 2039, 2064, 2071, 2075, 2086, 2089, 2099, 2102, 2114, 2117, 2134, 2138, 2161, 2162, 2166, 2167, 2168, 2176, 2177, 2179, 2182, 2190, 2191, 2195, 2197, 2198, 2199, 2204, 2208, 2210, 2211, 2212, 2216, 2218, 2220, 2222, 2224, 2228, 2230, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2254, 2255, 2256, 2260, 2261, 2262, 2264, 5341, 5361, 5362], "primary": [28, 31, 48, 51, 64, 4923, 5336], "converter": [28, 53, 64, 104, 147, 150, 151, 165, 168, 169, 172, 175, 176, 186, 852, 1377, 1471, 1930, 1934, 1945, 1948, 1984, 1995, 1998, 2002, 2004, 2006, 2008, 2192, 2217], "recursing": 28, "changing": [28, 39, 64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1389, 1412, 1415, 1419, 1421, 1424, 1934, 1970, 1998, 2002, 2004], "representation": [28, 39, 44, 48, 64, 203, 235, 278, 322, 374, 406, 449, 493, 533, 565, 608, 652, 915, 998, 1067, 1112, 1143, 1185, 1229, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1374, 1389, 1394, 1459, 1462, 1466, 1468, 1475, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1905, 1906, 1916, 1918, 1922, 1958, 1959, 1966, 2001, 2028, 2031, 2038, 2039, 2050, 2053, 2058, 2060, 2064, 2067, 2074, 2075, 2083, 2088, 2089, 2095, 2101, 2102, 2109, 2111, 2116, 2117, 2122, 2129, 2131, 2137, 2138, 2150, 2182, 2194, 2198, 2205, 2206, 2211, 2220, 2223, 2224, 2229, 2231, 2237, 2238, 2249, 2252, 2255, 2263, 2318, 2323, 2349, 2845, 2855, 2858, 2859, 2869, 2870, 2872, 2875, 2879, 2880, 3765, 3796, 3902, 3904, 3905, 3907, 3908, 3909, 3934, 3950, 3953, 3956, 3959, 3962, 3972, 3975, 3978, 3981, 3993, 4008, 4084, 4159, 4164, 4169, 4174, 4182, 4184, 4220, 4248, 4251, 4254, 4257, 4260, 4263, 4266, 4269, 4272, 4275, 4278, 4281, 4284, 4287, 4290, 4293, 4296, 4299, 4316, 4317, 4319, 4329, 4333, 4334, 4335, 4336, 4338, 4348, 4352, 4353, 4354, 4371, 4390, 4398, 4402, 4403, 4405, 4415, 4419, 4420, 4444, 4445, 4447, 4457, 4461, 4462, 4463, 4487, 4508, 4509, 4519, 4534, 4535, 4547, 4552, 4568, 4577, 4578, 4579, 4583, 4584, 4605, 4614, 4629, 4630, 4656, 4664, 4667, 4668, 4670, 4680, 4684, 4685, 4686, 4687, 4689, 4699, 4703, 4704, 4809, 4821, 4878, 4896, 4917, 5041, 5049, 5060, 5227, 5238, 5259, 5262, 5280, 5281, 5283, 5293, 5294, 5331, 5333, 5334], "pauliexpectation": [28, 64, 186, 852, 1983, 1987, 1990, 1999, 2000, 2008, 5340, 5361], "traverses": [28, 1926], "replaces": [28, 64, 1691, 1928, 1936, 3730, 5000], "operatorstatefn": [28, 64, 1941, 1944, 1983, 1990, 2162, 2171, 2176, 2177, 2195, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2251], "containing": [28, 39, 44, 64, 74, 78, 94, 104, 112, 120, 122, 136, 188, 201, 213, 286, 372, 384, 457, 531, 543, 616, 686, 687, 696, 704, 712, 720, 729, 738, 747, 756, 762, 766, 768, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 856, 864, 872, 882, 883, 891, 899, 907, 919, 932, 942, 952, 965, 981, 995, 1015, 1031, 1045, 1059, 1102, 1110, 1121, 1193, 1262, 1272, 1289, 1308, 1318, 1328, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1437, 1447, 1457, 1458, 1462, 1475, 1476, 1477, 1480, 1513, 1550, 1555, 1641, 1682, 1693, 1710, 1746, 1748, 1750, 1752, 1766, 1782, 1797, 1811, 1826, 1842, 1858, 1874, 1892, 1910, 1934, 1936, 1943, 1948, 1961, 1968, 1969, 1971, 2024, 2028, 2039, 2060, 2064, 2076, 2142, 2165, 2170, 2185, 2199, 2201, 2212, 2214, 2218, 2226, 2240, 2244, 2256, 2258, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 2812, 2888, 2890, 2891, 2892, 3482, 3485, 3757, 3760, 3779, 3789, 3887, 3888, 3902, 3927, 3963, 3993, 4177, 4187, 4219, 4264, 4282, 4299, 4354, 4463, 4714, 4720, 4726, 4743, 4744, 4749, 4751, 4771, 4803, 4805, 4817, 4819, 4821, 4823, 4825, 4839, 4886, 4964, 5077, 5143, 5239, 5244, 5290, 5333, 5334], "-diagonal": [28, 64, 1456, 1934, 2001, 5270, 5274, 5361, 5362], "diagonalizing": [28, 1923, 1934, 1939, 1940, 1998], "paulis": [28, 64, 147, 165, 172, 1448, 1450, 1563, 1567, 1923, 1934, 1935, 1940, 1943, 1970, 1983, 1990, 1994, 1998, 2155, 2216, 4463, 4487, 4494, 4498, 4501, 4513, 4514, 4518, 4519, 4525, 4529, 4530, 4539, 4540, 4544, 4568, 4577, 4579, 4617, 4634, 4725], "qiskit": [29, 49, 56, 58, 59, 63, 69, 97, 136, 162, 165, 172, 181, 186, 189, 352, 357, 362, 364, 523, 683, 761, 849, 877, 888, 904, 913, 970, 1063, 1067, 1102, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1388, 1407, 1410, 1427, 1441, 1448, 1450, 1453, 1456, 1458, 1462, 1465, 1468, 1499, 1537, 1556, 1558, 1567, 1772, 2195, 2277, 2285, 2318, 2320, 2323, 2337, 2389, 2403, 2417, 2431, 2445, 2459, 2473, 2487, 2801, 2813, 2830, 2909, 2918, 2927, 2963, 2980, 2997, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3390, 3407, 3441, 3458, 3474, 3482, 3485, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3704, 3718, 3756, 3777, 3796, 3834, 3876, 3891, 3899, 3909, 3922, 3925, 3932, 3963, 3976, 3982, 3993, 4177, 4182, 4252, 4255, 4270, 4273, 4299, 4354, 4376, 4487, 4595, 4640, 4745, 4767, 4834, 4861, 4868, 4894, 4922, 4946, 4949, 4952, 4955, 4958, 4964, 4982, 4985, 5014, 5077, 5117, 5143, 5163, 5181, 5220, 5237, 5250, 5332, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5364, 5365, 5367, 5368, 5369, 5370, 5372], "runs": [29, 31, 48, 64, 136, 193, 364, 523, 849, 877, 904, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1664, 1665, 1666, 2277, 2282, 2285, 2291, 2323, 2349, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3796, 4915, 4923, 5111, 5137, 5239, 5244, 5355], "-worker": 29, "multiprocessing": [29, 56, 64, 1644], "parallelization": [29, 64, 841, 2323, 2349, 2363, 2376], "handled": [29, 31, 64, 251, 422, 581, 1158, 1923, 4842], "low": [29, 35, 62, 64, 195, 235, 366, 406, 525, 565, 798, 1104, 1143, 1644, 1655, 2323, 2349, 2363, 2376, 4071, 5137, 5230, 5281, 5347, 5369], "-level": [29, 35, 60, 62, 64, 195, 366, 525, 1104, 1448, 1644, 1655, 4006, 4204, 4207, 4210, 4213, 4216, 5220, 5230, 5347], "openmp": [29, 64, 2323, 2349, 2363, 2376], "cuda": [29, 64, 2323], "customize": [29, 64, 5331, 5333, 5334], "splitting": [29, 64, 2216, 2323, 2337, 2349, 2363, 2376], "_job": [29, 31, 47, 56, 64, 2323, 2337, 2349, 2363, 2376, 3718, 3722, 3736, 3834, 3838, 5250], "scale": [29, 35, 64, 103, 105, 143, 145, 146, 235, 406, 565, 1143, 1673, 1732, 3966, 3979, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4928, 4964, 5262, 5281, 5282, 5354], "hpc": [29, 64], "clusters": [29, 64], "executors": [29, 64], "distributed": [29, 64, 2323], "clients": 29, "want": [29, 31, 33, 48, 64, 97, 683, 761, 849, 877, 912, 1076, 1092, 1318, 1447, 2001, 2008, 2009, 2024, 2056, 2192, 2217, 2218, 3818, 3993, 4025, 4026, 4030, 4842, 4915, 4922, 4928, 4964, 5014, 5143, 5235, 5283, 5345, 5362], "install": [29, 51, 53, 57, 58, 64, 682, 701, 781, 869, 912, 4182, 4964, 5364], "client": [29, 64, 3718, 3796, 3922], "please": [29, 33, 51, 64, 701, 709, 717, 725, 734, 743, 752, 781, 789, 798, 806, 814, 833, 841, 861, 869, 877, 888, 896, 1427, 1450, 2056, 3819, 3869, 4013, 4014, 4964, 5250], "follows": [29, 39, 48, 64, 147, 165, 172, 682, 1342, 1373, 1379, 1392, 1393, 1466, 1468, 1480, 1550, 1644, 2167, 3966, 4884, 5117], "installs": [29, 912], "pip": [29, 53, 57, 58, 64, 682, 701, 781, 869, 4964, 5355, 5364], "need": [29, 30, 31, 35, 39, 47, 48, 51, 53, 64, 103, 233, 240, 247, 252, 347, 404, 411, 418, 423, 518, 563, 570, 577, 582, 677, 833, 918, 1141, 1147, 1154, 1159, 1254, 1342, 1644, 1678, 1939, 1985, 1996, 2024, 2218, 2283, 2285, 2290, 2292, 2916, 2925, 2934, 2943, 2952, 2961, 2968, 2970, 2978, 2985, 2987, 2995, 3002, 3004, 3010, 3012, 3018, 3020, 3028, 3035, 3037, 3045, 3052, 3054, 3062, 3069, 3071, 3079, 3086, 3088, 3095, 3102, 3104, 3112, 3119, 3121, 3128, 3135, 3137, 3145, 3152, 3154, 3161, 3168, 3170, 3178, 3185, 3187, 3195, 3202, 3204, 3212, 3219, 3221, 3229, 3236, 3238, 3246, 3253, 3255, 3263, 3270, 3272, 3280, 3287, 3289, 3296, 3303, 3305, 3313, 3320, 3322, 3330, 3337, 3339, 3346, 3353, 3355, 3363, 3370, 3372, 3380, 3387, 3389, 3395, 3397, 3405, 3412, 3414, 3422, 3431, 3439, 3446, 3448, 3456, 3463, 3465, 3472, 3479, 3481, 3494, 3503, 3510, 3512, 3519, 3526, 3528, 3536, 3543, 3545, 3552, 3561, 3568, 3570, 3578, 3585, 3587, 3595, 3602, 3604, 3611, 3619, 3628, 3635, 3637, 3645, 3652, 3654, 3661, 3668, 3670, 3678, 3685, 3687, 3694, 3701, 3703, 3730, 3731, 3834, 3897, 3899, 3993, 4026, 4182, 4844, 4922, 4923, 4930, 4964, 4973, 5023, 5033, 5042, 5143, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "_options": [29, 31, 64, 1641, 2277, 2311, 2323, 2333, 2337, 2345, 2349, 2359, 2363, 2372, 2376, 2385, 2909, 2914, 2918, 2923, 2927, 2932, 3708, 3891, 3929, 4902, 5250, 5364], "(default": [29, 48, 64, 1644, 1926, 2323, 2349, 4811, 4812, 4813, 5333, 5334], "splits": [29, 3834], "chunk": [29, 2323, 3908, 4958], "submits": 29, "split": [29, 64, 1421, 2166, 2323, 2337, 2349, 2363, 2376, 3838, 4025, 4233], "concurrent": [29, 64, 2482, 2484, 3711], ".futures": [29, 64, 2482, 2484], "threadpoolexecutor": [29, 64, 2473, 2487, 3851, 3864], "aersimulator": [29, 33, 64, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 5347, 5364, 5365, 5366, 5367, 5369, 5370], "math": [29, 35, 64, 1470, 2556, 2569, 2847, 4030, 4046, 4052, 4054, 4057, 4058, 4059, 4707, 4708, 4747, 4769, 4922, 5344, 5345, 5350, 5355, 5361, 5372], "pi": [29, 44, 64, 69, 103, 140, 143, 145, 165, 172, 850, 878, 1374, 1378, 1388, 1389, 1419, 1450, 1456, 1459, 1489, 1494, 1499, 1501, 1519, 1522, 1533, 1539, 1542, 1543, 1544, 1547, 1552, 1560, 1564, 1567, 1586, 2867, 2909, 2918, 2927, 4112, 4121, 4139, 4191, 4196, 4199, 4200, 4229, 4241, 4421, 4708, 4712, 4922, 4930, 5093, 5154, 5160, 5178, 5345, 5350, 5352, 5355, 5362, 5372], ".u": [29, 35, 64, 1786, 5350, 5352, 5369], "_list": [29, 30, 48, 64, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 970, 1249, 1250, 1251, 1252, 1815, 1831, 1847, 1863, 2001, 2024, 2155, 2862, 2865, 2866, 2875, 2882, 2886, 2887, 3723, 3739, 3864, 4487, 4580, 4725, 4885, 4996, 4999, 5006, 5014, 5018, 5178, 5193, 5268, 5270, 5271, 5272, 5274, 5341, 5368], "circ2": 29, "qbackend": 29, "exc": 29, "(max": [29, 64, 5341], "_workers": 29, ".set": [29, 31, 35, 64, 1641, 2337, 5352, 5357, 5364], "(executor": 29, "=exc": 29, "guard": 29, "__": [29, 31, 53, 57, 64, 4380, 4463, 4484, 4644, 4867, 5338, 5355], "\"__": [29, 64], "\":": [29, 64, 2914, 2915, 2923, 2924, 2932, 2933, 3777, 3888, 3907, 3932, 3976, 4182, 5226, 5342], "block": [29, 31, 39, 44, 64, 172, 240, 252, 347, 411, 423, 518, 570, 582, 677, 943, 1147, 1159, 1254, 1376, 1377, 1379, 1407, 1410, 1441, 1444, 1448, 1450, 1451, 1452, 1456, 1503, 1537, 1538, 1563, 1567, 1706, 1945, 2001, 2282, 2291, 2496, 2886, 2887, 3011, 3019, 3388, 3796, 3854, 3862, 3909, 4008, 4009, 4016, 4019, 4025, 4220, 4221, 4241, 4354, 4519, 4614, 4996, 4999, 5003, 5006, 5018, 5020, 5263, 5342, 5362], ".distributed": [29, 2473, 2487], "localcluster": 29, "_exec": 29, "(address": 29, "=localcluster": 29, "(n": [29, 64, 186, 2323, 2349, 2830, 3705, 3718, 3737, 4463, 5077, 5143, 5341, 5344, 5352, 5366], "processes": [29, 64, 841, 2323, 4830], "'__": [29, 64], "estimates": [30, 64, 683, 798, 814, 2265, 3940, 4744, 4749, 4771], "observables": [30, 64, 90, 179, 352, 357, 1984, 1998, 2265, 2269, 2271], "initialized": [30, 31, 64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1526, 1772, 2295, 4008, 4031, 4299, 4316, 4335, 4354, 4376, 4384, 4385, 4402, 4424, 4444, 4463, 4487, 4640, 4649, 4650, 4667, 4686, 5077, 5143, 5271], "pairs": [30, 44, 64, 239, 410, 569, 1146, 1377, 1382, 1441, 1450, 1456, 1471, 1477, 1537, 1563, 1567, 2170, 2201, 2204, 2214, 2226, 2244, 2248, 2258, 2261, 2712, 2813, 2849, 2856, 2857, 2867, 2889, 3901, 3993, 4232, 4233, 4591, 4744, 4749, 4762, 4771, 4783, 4798, 4842, 4902, 4911, 5033, 5037, 5091, 5303, 5315, 5327], "_i": [30, 64, 110, 181, 342, 513, 672, 1249, 1383, 1384, 1385, 1386, 1393, 1399, 1450, 1466, 1468, 1470, 1948, 1969, 2165, 2166, 2167, 2867, 2871, 2875, 2885, 2887, 4316, 4402, 4444, 4463, 4519, 4614, 4739, 5345, 5362, 5368, 5370], "(\\": [30, 44, 63, 64, 69, 186, 773, 852, 1347, 1348, 1350, 1352, 1357, 1359, 1360, 1361, 1362, 1363, 1379, 1382, 1383, 1384, 1385, 1386, 1399, 1414, 1419, 1450, 1456, 1459, 1461, 1481, 1483, 1486, 1488, 1489, 1491, 1493, 1494, 1496, 1498, 1499, 1501, 1519, 1539, 1541, 1542, 1543, 1544, 1546, 1547, 1549, 1552, 1556, 1558, 1560, 1564, 2005, 4172, 4193, 4194, 4197, 4198, 4200, 4335, 4421, 4519, 4614, 4714, 4715, 4719, 4720, 4722, 4723, 4726, 4739, 4740, 5345, 5350, 5352, 5361, 5362, 5364, 5366, 5367, 5368, 5372], "theta": [30, 31, 44, 63, 64, 95, 113, 123, 218, 219, 220, 221, 224, 225, 226, 259, 260, 268, 273, 282, 291, 292, 293, 294, 296, 297, 338, 339, 341, 389, 390, 391, 392, 395, 396, 397, 430, 431, 439, 444, 453, 462, 463, 464, 465, 467, 468, 509, 510, 512, 548, 549, 550, 551, 554, 555, 556, 589, 590, 598, 603, 612, 621, 622, 623, 624, 626, 627, 668, 669, 671, 852, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1166, 1167, 1175, 1180, 1189, 1198, 1199, 1200, 1201, 1203, 1204, 1245, 1246, 1248, 1345, 1348, 1350, 1352, 1357, 1360, 1361, 1362, 1363, 1379, 1382, 1383, 1384, 1385, 1427, 1459, 1481, 1486, 1489, 1491, 1494, 1499, 1501, 1539, 1544, 1546, 1547, 1549, 1556, 1558, 1587, 1588, 1589, 1590, 1591, 1592, 2909, 2918, 2927, 4057, 4059, 4182, 4421, 4922, 4930, 5130, 5133, 5152, 5154, 5158, 5160, 5285, 5342, 5345, 5350, 5352, 5362, 5372], "_j": [30, 64, 103, 136, 1393, 1450, 1466, 1468, 1470, 1551, 2165, 2166, 2167, 2847, 4112, 4121, 4139, 4316, 4444, 5349], "sparsepauliop": [30, 39, 64, 303, 304, 474, 475, 633, 634, 1210, 1211, 1448, 1953, 2069, 2084, 2097, 2112, 2126, 2132, 2153, 2265, 2269, 2556, 2569, 2781, 2782, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4819, 4823, 4825], "indexes": [30, 64, 203, 253, 276, 278, 374, 424, 447, 449, 533, 583, 606, 608, 1112, 1160, 1183, 1185, 4487, 4490, 4493, 4521, 4524, 4616, 4619, 5263], "observable": [30, 64, 82, 126, 131, 134, 147, 148, 149, 150, 165, 166, 167, 168, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 188, 190, 191, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 849, 877, 1983, 1988, 1990, 2010, 2013, 2014, 2017, 2024, 2162, 2165, 2166, 2167, 2168, 2271, 4747, 4769, 5361, 5362], "parameterview": [30, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244, 5352], "\\theta": [30, 44, 64, 123, 224, 225, 226, 338, 339, 341, 395, 396, 397, 509, 510, 512, 554, 555, 556, 668, 669, 671, 773, 852, 1132, 1133, 1134, 1245, 1246, 1248, 1489, 1494, 1499, 1501, 4182, 4421, 5345, 5350, 5362, 5372], "_k": [30, 850, 878, 2021, 2867, 4463, 5349, 5362], "bound": [30, 64, 89, 103, 104, 143, 144, 165, 172, 198, 240, 369, 411, 528, 570, 701, 717, 752, 765, 781, 789, 798, 822, 849, 869, 877, 1067, 1071, 1072, 1087, 1088, 1102, 1107, 1147, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1908, 2042, 2123, 2141, 2169, 2239, 2265, 2269, 2311, 2473, 2487, 4002, 4015, 4743, 4747, 4750, 4769, 4772, 4787, 5226, 5250, 5257, 5331, 5352, 5361], "estimatorresult": 30, "confidence": [30, 64, 70, 75, 79, 92, 95, 110, 113, 119, 123], "intervals": [30, 64, 95, 103, 110, 113, 1399, 1465, 1466, 1468, 4000, 4001, 4013, 4014, 5143, 5331], "estimation": [30, 48, 64, 66, 69, 70, 71, 72, 73, 75, 77, 78, 79, 86, 87, 92, 93, 94, 95, 97, 103, 104, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 904, 1388, 1458, 1985, 1991, 1996, 1999, 2323, 2349, 5342, 5345, 5372], "\\langle": [30, 44, 64, 1343, 1345, 1348, 1350, 1352, 1354, 1357, 1360, 1362, 1364, 1367, 1369, 2021, 2556, 2569, 2860, 4444, 4652, 4747, 4769, 5349, 5350, 5361, 5362, 5364], ")|": [30, 64, 109, 155, 1378, 1406, 2001, 4706, 4707, 4708, 4711, 4747, 4769, 5361, 5362], "|\\": [30, 44, 64, 103, 136, 852, 1458, 1483, 3994, 4201, 4335, 4398, 4424, 4659, 4714, 4717, 4740, 4915, 5332, 5347, 5348, 5349, 5350, 5361, 5362, 5364], "psi": [30, 64, 103, 109, 136, 155, 1458, 2021, 4424, 4655, 4659, 4664, 4714, 4715, 4740, 5332, 5347, 5348, 5349, 5350, 5362, 5364], ")\\": [30, 44, 1348, 1350, 1352, 1360, 1362, 1499, 1558, 1586, 2005, 4162, 4167, 4198, 4201, 4229, 4444, 4686, 4715, 5341, 5350, 5362], "expected": [30, 31, 51, 64, 90, 158, 165, 172, 193, 364, 523, 852, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1463, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1994, 2014, 2017, 2068, 2132, 3767, 3993, 4008, 4254, 4272, 4287, 4711, 5226, 5237, 5239, 5244, 5368, 5369], "close": [30, 64, 143, 165, 172, 179, 683, 2265, 2266, 2268, 2269, 2270, 2273, 2885, 4241, 4991, 5280], "after": [30, 31, 35, 39, 48, 53, 57, 64, 75, 79, 92, 95, 97, 113, 123, 145, 683, 761, 849, 869, 877, 896, 1067, 1441, 1644, 1912, 1963, 1985, 1991, 1999, 2024, 2025, 2030, 2032, 2046, 2054, 2055, 2063, 2065, 2078, 2144, 2153, 2176, 2187, 2243, 2251, 2308, 2486, 2500, 2798, 2842, 2845, 2858, 2859, 2888, 2905, 3704, 3723, 3738, 3739, 3789, 3811, 3824, 3915, 4006, 4030, 4112, 4182, 4432, 4570, 4900, 4915, 4921, 4946, 4952, 4961, 4996, 4999, 5004, 5006, 5120, 5181, 5217, 5278, 5331, 5335, 5361, 5372], "inside": [30, 64, 235, 406, 565, 1143, 1948, 1949, 3901, 4000, 4001, 4013, 4014, 5281, 5332], "context": [30, 35, 39, 53, 64, 197, 201, 213, 240, 247, 251, 252, 347, 368, 372, 384, 411, 418, 422, 423, 518, 527, 531, 543, 570, 577, 581, 582, 677, 936, 1063, 1064, 1102, 1106, 1110, 1121, 1147, 1154, 1158, 1159, 1254, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 2265, 2269, 2297, 2473, 2894, 3901, 4009, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4048, 4056, 4203, 4206, 4209, 4212, 4215, 4220, 4221, 5239, 5244], "realamplitudes": [30, 64, 1376, 1379, 5361], "(num": [30, 44, 64, 181, 186, 357, 1465, 1468, 3834, 3901, 5287, 5337, 5341, 5342, 5357, 5364, 5370], "reps": [30, 64, 147, 231, 286, 402, 457, 561, 616, 849, 877, 904, 1139, 1193, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1970, 1974, 1976, 1978, 1979, 1982, 4819, 4823, 4825, 5341, 5361], "(\"": [30, 31, 44, 53, 62, 64, 162, 2311, 2830, 3796, 3814, 3862, 3909, 4182, 4487, 4577, 4579, 4580, 4930, 5014, 5077, 5143, 5355, 5358, 5359, 5364, 5367, 5368, 5369, 5370], "iz": [30, 64, 1448, 4354, 4503, 4513, 4539, 4540, 4580, 4634, 4635, 5361, 5364], "xi": [30, 1448, 2878, 4354, 4513, 4539, 4634, 5133], "1)": [30, 64], "h3": 30, "zi": [30, 1448, 4487, 4513, 4530, 4539, 4625, 4634, 5341, 5361], "zz": [30, 64, 1448, 1450, 1501, 4354, 4487, 4513, 4539, 4580, 4595, 4634, 4819, 4825, 5332, 5353, 5361, 5364], "psi2": 30, "h1": [30, 64], "params2": 30, "calculate": [30, 64, 97, 165, 191, 1182, 2349, 2863, 4595, 4715, 4718, 4719, 4723, 4727, 4743, 5074, 5117, 5126, 5187, 5223, 5254], ")>": 30, "theta1": 30, "(result": [30, 31, 64, 5337, 5340, 5341, 5342, 5343, 5348, 5366, 5369, 5370], ", <": [30, 64, 4946, 4949, 4952, 4955], "]*": [30, 64, 1563], "theta2": 30, "theta3": 30, "indices": [30, 35, 44, 64, 66, 86, 197, 280, 281, 368, 451, 452, 527, 610, 611, 1063, 1106, 1187, 1188, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1376, 1379, 1441, 1442, 1444, 1445, 1456, 1464, 1499, 1503, 1537, 1556, 1558, 1906, 1910, 1959, 1961, 2028, 2039, 2043, 2064, 2075, 2089, 2091, 2102, 2104, 2117, 2124, 2138, 2142, 2182, 2198, 2211, 2224, 2238, 2255, 3762, 3969, 3982, 3990, 3991, 4487, 4491, 4518, 4522, 4544, 4579, 4617, 4639, 4811, 4812, 4813, 4875, 4922, 4930, 5147, 5150, 5151, 5156, 5157, 5162, 5226], "overhead": [30, 64, 1998, 4086, 4182, 4589, 4830], "since": [30, 31, 39, 48, 64, 180, 235, 406, 565, 1143, 1342, 1388, 1406, 1419, 1421, 1453, 1468, 1472, 1475, 1503, 1772, 3704, 3814, 3862, 3870, 4032, 4159, 4164, 4169, 4174, 4184, 4218, 4515, 4516, 4541, 4542, 4591, 4606, 4613, 4636, 4637, 4964, 5226, 5237, 5281, 5290, 5291, 5292, 5293, 5294], "searched": 30, "h2": [30, 64, 904, 5339, 5361], "calculates": [30, 64, 179, 353, 2267, 2873], "quasi": [30, 64, 798, 2267, 2274, 4744, 4745, 4749, 4767, 4771, 4787, 4788, 4793], "-probabilities": [30, 2267, 2274, 4744, 4787, 4788, 4793], "samplerresult": 30, "bars": [30, 64, 5290, 5291, 5293], "closed": [30, 64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 5335], "(circuits": [30, 31, 64, 2271, 2274, 5352, 5355], "=[": [30, 48, 64, 211, 342, 343, 344, 345, 382, 513, 514, 515, 516, 541, 672, 673, 674, 675, 1120, 1249, 1250, 1251, 1252, 1376, 1379, 1450, 1503, 1649, 2001, 2104, 2124, 2808, 3723, 3738, 3739, 3779, 3789, 3990, 4519, 4580, 4614, 4930, 5014, 5077, 5143, 5291, 5342, 5349, 5352, 5353, 5355, 5358, 5361, 5364, 5369], "[]": [30, 1679, 5355], "(parameters": 30, ".binary": [30, 5341], "_probabilities": [30, 64, 2323, 2349, 4745, 4767, 5339], ".quasi": [30, 2274], "_dists": [30, 2274], "[[]": 30, "[[": [30, 64, 773, 849, 877, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2845, 2858, 2859, 2933, 3757, 4433, 4487, 4803, 4839, 5348, 5359, 5361, 5362, 5366], "pqc": 30, "pqc2": 30, ".parameters": [30, 64, 198, 369, 528, 1001, 1005, 1107, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 2265, 2267, 2269, 2272, 3922, 4182, 5352], "(theta": [30, 31, 64, 1382, 1383, 1384, 1385, 1427, 2909, 2918, 2927, 4422, 4423, 4922, 5130, 5133, 5151, 5152, 5157, 5158, 5342, 5350, 5352], "].": [30, 31, 44, 64, 69, 87, 92, 103, 110, 118, 253, 276, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 322, 323, 424, 447, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 494, 583, 606, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 652, 653, 877, 904, 1160, 1183, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1229, 1230, 1332, 1336, 1342, 1372, 1380, 1382, 1387, 1388, 1392, 1396, 1401, 1456, 1465, 1470, 1477, 1480, 1550, 1644, 1691, 1753, 1802, 1879, 1910, 1961, 1987, 2021, 2043, 2076, 2091, 2104, 2124, 2142, 2162, 2185, 2199, 2212, 2240, 2256, 2389, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2814, 2823, 2831, 3757, 3993, 4008, 4026, 4112, 4121, 4139, 4192, 4206, 4299, 4301, 4309, 4318, 4330, 4337, 4349, 4354, 4356, 4368, 4370, 4404, 4416, 4426, 4438, 4446, 4458, 4467, 4480, 4494, 4512, 4519, 4525, 4538, 4554, 4563, 4571, 4587, 4595, 4614, 4633, 4669, 4681, 4688, 4700, 4714, 4716, 4717, 4719, 4720, 4722, 4723, 4726, 4728, 4739, 4803, 4964, 5077, 5143, 5268, 5284, 5332, 5341, 5344, 5352, 5355, 5361, 5362], "external": [31, 51, 64], "anything": [31, 64, 211, 235, 382, 406, 541, 565, 1120, 1143, 2164, 4922, 5268, 5272, 5281], "executing": [31, 45, 64, 347, 518, 677, 877, 1254, 1263, 4031, 4958, 5021], "/or": [31, 48, 51, 57, 64, 683, 806, 1102, 3728, 4075, 4751, 5335], "define": [31, 35, 39, 44, 48, 51, 53, 64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 1465, 1466, 1468, 1644, 1910, 1961, 2043, 2091, 2104, 2124, 2142, 2285, 2395, 2409, 2423, 2437, 2451, 2465, 2875, 2885, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4084, 4172, 4182, 4255, 4900, 4915, 4921, 5014, 5220, 5331, 5332, 5333, 5334, 5342, 5362, 5370], "versioned": [31, 64, 2275, 2277, 2282, 2293, 2297, 2313], "backwards": [31, 39, 51, 64, 271, 442, 601, 1178, 2277, 2282, 2285, 2297, 2813, 3005, 3013, 3382, 3932, 4285, 4297, 4915, 4922], "minor": [31, 64], "-terra": [31, 39, 47, 57, 64, 1063, 1691, 2909, 2918, 2927, 4964, 5339, 5342, 5348, 5349, 5350, 5352, 5353, 5355, 5358, 5359, 5361], "increment": 31, "aggregate": [31, 64], "enable": [31, 35, 39, 51, 64, 235, 406, 565, 912, 998, 1083, 1143, 1983, 1990, 2166, 2323, 2349, 2363, 2376, 2829, 3748, 4915, 5281], "adjust": [31, 48, 64, 1399, 5262, 5332], "once": [31, 48, 53, 64, 193, 240, 364, 411, 523, 570, 814, 1063, 1102, 1147, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1453, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2024, 2032, 2323, 2349, 3814, 3862, 4086, 4961, 4964, 5014, 5181, 5239, 5244], "nature": [31, 48, 60, 64, 877, 904, 5337, 5338, 5339], "deprecation": [31, 35, 57], "conservative": 31, "minimum": [31, 48, 57, 64, 82, 107, 118, 120, 125, 126, 127, 128, 131, 133, 134, 135, 142, 147, 148, 153, 165, 166, 172, 173, 178, 761, 773, 798, 806, 814, 841, 877, 904, 1381, 1406, 1466, 1468, 1563, 1644, 2323, 2349, 3737, 4078, 4088, 4097, 4106, 4115, 4124, 4133, 4142, 4151, 4219, 4922, 4958, 4970, 5021, 5023, 5102, 5202, 5220, 5226, 5237, 5331, 5333, 5334, 5337, 5355], "releases": [31, 35, 51, 57, 64, 1644, 2813, 4900, 4915, 4921], "introduced": [31, 64, 69, 118, 147, 255, 256, 342, 426, 427, 513, 585, 586, 672, 1162, 1163, 1249, 1342, 1380, 1388, 1396, 1477, 1550, 1706], "whichever": [31, 64, 1641, 2323, 2349, 3730, 5214], "potential": [31, 57, 64, 4973], "give": [31, 44, 64, 105, 214, 385, 544, 1122, 1901, 1948, 1956, 1983, 2015, 2035, 2072, 2135, 2154, 2180, 2235, 2323, 2349, 4711, 5132, 5178, 5369], "sufficient": [31, 35, 64, 120, 761, 4973], "adapt": [31, 64, 773, 806], "breaking": [31, 35, 51, 64], "deprecate": [31, 64, 5260, 5261, 5275], "still": [31, 35, 48, 57, 64, 849, 877, 1666, 2024, 2323, 2349, 2885, 3796, 4041, 4048, 4254, 4272, 4287, 4491, 4513, 4522, 4539, 4617, 4634, 5077, 5143], "until": [31, 35, 48, 53, 57, 64, 97, 1263, 1421, 2265, 2269, 2282, 2291, 2308, 2486, 2496, 2500, 2905, 3011, 3019, 3388, 3738, 3739, 3796, 3824, 3854, 3862, 3896, 3909, 3919, 3932, 3963, 3976, 4094, 4182, 4225, 4915, 5023, 5117, 5137, 5175, 5178, 5205, 5220], "completes": [31, 48], "worth": [31, 64], "pointing": 31, "mean": [31, 44, 48, 64, 84, 90, 128, 147, 165, 172, 179, 849, 877, 936, 1388, 1987, 4167, 4743, 4744, 4749, 4771, 5338, 5339, 5366], "themselves": [31, 48, 64, 1898, 2060], "story": 31, "arguably": 31, "update": [31, 64, 693, 773, 849, 850, 877, 878, 904, 1725, 2282, 2283, 2292, 2311, 2312, 2334, 2346, 2360, 2373, 2386, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3754, 3777, 3782, 3792, 3793, 3794, 3822, 3823, 3867, 3868, 3886, 3887, 3897, 3922, 3929, 4086, 4139, 4467, 4471, 4494, 4498, 4765, 4785, 4800, 4877, 4913, 4938, 4939, 5178, 5217, 5305, 5317, 5329, 5331, 5333, 5334, 5355], "newer": [31, 39, 64, 918], "window": [31, 235, 406, 565, 693, 1143, 3728, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 5281], "lengthy": [31, 39, 64], "own": [31, 48, 51, 64, 147, 235, 406, 565, 929, 949, 962, 1012, 1027, 1042, 1056, 1143, 1269, 1285, 1304, 1335, 1338, 1418, 1420, 1423, 1426, 1434, 1510, 1779, 1822, 1838, 1854, 1870, 1923, 2705, 2718, 2731, 2744, 2757, 2770, 3782, 3789, 4241, 4712, 5281], "impacting": 31, "facing": [31, 39, 64], "bumping": 31, "let": [31, 44, 64, 852, 1464, 1470, 1987, 2323, 2349, 3906, 4922, 5345], "changed": [31, 39, 1441, 1717, 2800, 2844, 3824, 3881, 4380, 4463, 4644], "signature": [31, 64, 130, 133, 172, 240, 252, 411, 423, 570, 582, 1147, 1159, 2473, 2487, 2798, 5275, 5278], "incompatible": [31, 64, 1710, 2814, 2831, 2833, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4579, 4669, 4688], "could": [31, 39, 44, 64, 97, 150, 168, 175, 239, 410, 569, 769, 1146, 1380, 1444, 1456, 1641, 1938, 1953, 2012, 2016, 2216, 2277, 2316, 2322, 2494, 2501, 2502, 2908, 3484, 3487, 3706, 3722, 3727, 3736, 3750, 3757, 3848, 3849, 3855, 3860, 3865, 3871, 3872, 3873, 3874, 3875, 3906, 3966, 4030, 4094, 4182, 4803, 4915, 4928, 4964, 5117, 5226, 5290], "aerbackend": [31, 2323, 2337, 2349, 2363, 2376, 2473, 2487], "\u2019d": [31, 48, 64], "old": [31, 64, 2889, 3730, 3801, 4006, 4019, 5275], "switching": 31, "changeover": 31, "lockstep": 31, "ensure": [31, 53, 64, 143, 849, 877, 912, 936, 1101, 2218, 2883, 3905, 4229, 4896, 4917, 5283], "cycle": [31, 57, 64, 1394, 1706, 4103, 4187, 4191, 4199, 5333, 5334], "removing": [31, 57, 64, 1526, 3823, 3868, 4588], "making": [31, 48, 64, 143, 998, 2024, 3723, 3738, 3739, 3823, 3868], "mandatory": 31, "/the": 31, "would": [31, 39, 44, 48, 51, 64, 180, 201, 213, 253, 276, 372, 384, 424, 447, 531, 543, 583, 606, 877, 1096, 1110, 1121, 1160, 1183, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1393, 1475, 1526, 1666, 1706, 1772, 1903, 1913, 1926, 1953, 1957, 1964, 1983, 1990, 2027, 2036, 2047, 2066, 2068, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2171, 2189, 2202, 2215, 2218, 2245, 2259, 2277, 2285, 3757, 3814, 3862, 3905, 4182, 4519, 4570, 4614, 4713, 4803, 4813, 4915, 4922, 4927, 4928, 4930, 5008, 5077, 5117, 5143, 5178], "integrate": [31, 64, 4075, 5117], "write": [31, 35, 48, 51, 53, 64, 1002, 1470, 1935, 2798, 2805, 2842, 3832, 3963, 4025, 4026, 4297, 4829, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5010, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "describing": [31, 64, 1401, 1911, 1962, 1987, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 2875, 3922, 5359], "operation": [31, 48, 64, 193, 197, 201, 213, 214, 217, 240, 247, 252, 285, 334, 364, 368, 372, 384, 385, 388, 411, 418, 423, 456, 505, 523, 527, 531, 543, 544, 547, 570, 577, 582, 615, 664, 852, 923, 936, 938, 943, 1006, 1036, 1102, 1106, 1110, 1121, 1122, 1125, 1147, 1154, 1159, 1192, 1241, 1263, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1661, 1662, 1669, 1670, 1678, 1698, 1699, 1702, 1703, 1704, 1705, 1706, 1722, 1725, 1935, 2024, 2032, 2058, 2285, 2323, 2349, 2363, 2376, 2800, 2842, 2844, 2875, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3796, 3823, 3828, 3829, 3840, 3842, 3868, 3877, 3957, 3963, 3973, 3994, 4004, 4007, 4009, 4086, 4299, 4354, 4400, 4463, 4922, 4923, 4927, 4930, 4933, 4934, 4935, 4936, 4946, 4949, 4952, 4955, 4973, 5017, 5169, 5181, 5239, 5244, 5282, 5355, 5359], "compiled": [31, 44, 62, 64, 235, 406, 565, 1143, 2808, 5281, 5352], "something": [31, 39, 48, 51, 64, 251, 422, 581, 1158, 2024, 2277, 2285, 2309, 2915, 2924, 2933, 3796, 4041, 4915, 4922, 5077, 5143], "enables": [31, 35, 64, 1644, 2001, 2311, 2323, 4084, 4915, 5157, 5217, 5230, 5331, 5333, 5334], "apis": [31, 57, 64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], ".algorithms": [31, 45, 54, 64, 162, 181, 186, 357, 362, 364, 523, 849, 877, 904, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5362], "fashion": [31, 64], "regardless": [31, 64, 877, 3736, 3766, 3782, 3793], "implemented": [31, 33, 35, 51, 64, 69, 70, 211, 262, 264, 328, 342, 382, 433, 435, 499, 513, 541, 592, 594, 658, 672, 861, 904, 929, 949, 962, 1012, 1027, 1042, 1056, 1120, 1169, 1171, 1235, 1249, 1269, 1285, 1304, 1374, 1380, 1388, 1392, 1399, 1401, 1407, 1434, 1447, 1457, 1459, 1472, 1474, 1480, 1496, 1510, 1539, 1542, 1667, 1682, 1772, 1779, 1786, 1822, 1838, 1854, 1870, 2285, 2286, 2287, 2288, 2289, 2290, 2333, 2359, 2372, 2385, 2705, 2718, 2731, 2744, 2757, 2770, 2963, 2964, 2965, 2966, 2967, 2968, 2980, 2981, 2982, 2983, 2984, 2985, 2997, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3030, 3031, 3032, 3033, 3034, 3035, 3047, 3048, 3049, 3050, 3051, 3052, 3064, 3065, 3066, 3067, 3068, 3069, 3081, 3082, 3083, 3084, 3085, 3086, 3097, 3098, 3099, 3100, 3101, 3102, 3114, 3115, 3116, 3117, 3118, 3119, 3130, 3131, 3132, 3133, 3134, 3135, 3147, 3148, 3149, 3150, 3151, 3152, 3163, 3164, 3165, 3166, 3167, 3168, 3180, 3181, 3182, 3183, 3184, 3185, 3197, 3198, 3199, 3200, 3201, 3202, 3214, 3215, 3216, 3217, 3218, 3219, 3231, 3232, 3233, 3234, 3235, 3236, 3248, 3249, 3250, 3251, 3252, 3253, 3265, 3266, 3267, 3268, 3269, 3270, 3282, 3283, 3284, 3285, 3286, 3287, 3298, 3299, 3300, 3301, 3302, 3303, 3315, 3316, 3317, 3318, 3319, 3320, 3332, 3333, 3334, 3335, 3336, 3337, 3348, 3349, 3350, 3351, 3352, 3353, 3365, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3390, 3391, 3392, 3393, 3394, 3395, 3407, 3408, 3409, 3410, 3411, 3412, 3441, 3442, 3443, 3444, 3445, 3446, 3458, 3459, 3460, 3461, 3462, 3463, 3474, 3475, 3476, 3477, 3478, 3479, 3482, 3485, 3505, 3506, 3507, 3508, 3509, 3510, 3521, 3522, 3523, 3524, 3525, 3526, 3538, 3539, 3540, 3541, 3542, 3543, 3563, 3564, 3565, 3566, 3567, 3568, 3580, 3581, 3582, 3583, 3584, 3585, 3597, 3598, 3599, 3600, 3601, 3602, 3630, 3631, 3632, 3633, 3634, 3635, 3647, 3648, 3649, 3650, 3651, 3652, 3663, 3664, 3665, 3666, 3667, 3668, 3680, 3681, 3682, 3683, 3684, 3685, 3696, 3697, 3698, 3699, 3700, 3701, 4182, 4526, 4543, 4621, 4638, 4705, 4833, 4943, 4958, 5178, 5220, 5239], "steps": [31, 33, 44, 51, 58, 64, 95, 253, 424, 523, 583, 693, 761, 798, 1160, 1388, 3821, 4819, 4823, 4825, 4973, 5364], "providerv": [31, 64, 2315, 2316, 2320, 2906, 3482, 3485, 3704], "handles": [31, 35, 64, 861], "session": [31, 64, 2265, 2266, 2268, 2269, 2270, 2273, 3745, 3747, 3748, 3814, 3835, 3862], "equivalencelibrary": [31, 64, 1001, 1002, 1003, 1004, 1005, 1648, 1649, 4973, 5208], "jobv": [31, 64, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2473, 2487, 2894, 3796, 3896], "interacting": [31, 64, 3876, 5178], "-aqt": 31, "purpose": [31, 64, 3963, 4964], "authentication": [31, 3748, 3752], "initialization": [31, 64, 253, 424, 583, 904, 1160, 1417, 1526, 1772, 2162, 2323, 2349, 2363, 2376, 4463, 4487, 5123, 5345, 5372], "filter": [31, 64, 107, 130, 133, 140, 142, 233, 321, 404, 492, 563, 651, 1141, 1228, 3705, 3723, 3728, 3730, 3737, 3738, 3739, 3779, 3789, 3835, 3838, 3880, 4000, 4001, 4013, 4014, 4230, 5047, 5268, 5272], "acquire": [31, 35, 39, 64, 1644, 3383, 3964, 4020, 4021, 4041, 4061, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4219, 4264, 4922, 5021, 5102, 5295, 5307, 5319, 5331], "looks": [31, 48, 64, 1533, 1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2915, 2924, 2933], ".providerutils": 31, "_backends": [31, 64], "mybackend": 31, "myprovider": 31, "(provider": 31, "self": [31, 64, 70, 200, 206, 210, 211, 216, 238, 259, 260, 261, 279, 280, 281, 334, 371, 377, 381, 382, 387, 409, 430, 431, 432, 450, 451, 452, 505, 530, 536, 540, 541, 546, 568, 589, 590, 591, 609, 610, 611, 664, 768, 934, 954, 968, 970, 979, 983, 992, 997, 1018, 1029, 1033, 1048, 1061, 1072, 1080, 1088, 1096, 1109, 1115, 1119, 1120, 1124, 1145, 1166, 1167, 1168, 1186, 1187, 1188, 1241, 1275, 1287, 1292, 1293, 1306, 1312, 1325, 1330, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 1439, 1442, 1444, 1450, 1515, 1563, 1667, 1668, 1707, 1711, 1717, 1764, 1768, 1778, 1784, 1795, 1799, 1808, 1813, 1824, 1828, 1840, 1844, 1856, 1860, 1872, 1876, 1890, 1894, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1909, 1912, 1913, 1914, 1936, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1963, 1964, 1969, 2026, 2027, 2028, 2030, 2033, 2034, 2035, 2036, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2054, 2056, 2057, 2058, 2059, 2064, 2065, 2066, 2070, 2071, 2072, 2073, 2074, 2075, 2078, 2079, 2085, 2086, 2087, 2088, 2089, 2093, 2098, 2099, 2100, 2101, 2102, 2106, 2113, 2114, 2115, 2116, 2117, 2123, 2127, 2133, 2134, 2135, 2136, 2137, 2138, 2140, 2141, 2144, 2145, 2146, 2154, 2157, 2163, 2165, 2166, 2167, 2168, 2169, 2171, 2176, 2178, 2179, 2180, 2181, 2182, 2187, 2189, 2196, 2197, 2198, 2202, 2209, 2210, 2211, 2215, 2221, 2222, 2223, 2224, 2228, 2230, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2241, 2243, 2245, 2246, 2250, 2251, 2253, 2254, 2255, 2259, 2262, 2264, 2396, 2401, 2410, 2415, 2424, 2429, 2438, 2443, 2452, 2457, 2466, 2471, 2510, 2515, 2523, 2528, 2536, 2541, 2549, 2554, 2562, 2567, 2575, 2580, 2588, 2593, 2601, 2606, 2614, 2619, 2627, 2632, 2640, 2645, 2653, 2658, 2666, 2671, 2679, 2684, 2692, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2816, 2822, 2823, 2831, 2833, 2834, 2836, 2839, 3992, 3993, 3994, 3996, 3997, 3998, 4000, 4001, 4004, 4007, 4008, 4009, 4011, 4013, 4014, 4076, 4081, 4083, 4085, 4091, 4093, 4095, 4100, 4102, 4104, 4109, 4111, 4113, 4118, 4120, 4122, 4127, 4129, 4131, 4136, 4138, 4140, 4145, 4147, 4149, 4154, 4156, 4231, 4304, 4308, 4309, 4321, 4330, 4340, 4349, 4359, 4367, 4368, 4382, 4397, 4407, 4416, 4429, 4438, 4449, 4458, 4465, 4471, 4479, 4480, 4494, 4511, 4512, 4537, 4538, 4557, 4563, 4574, 4575, 4586, 4587, 4600, 4611, 4632, 4633, 4647, 4652, 4663, 4672, 4681, 4691, 4700, 4770, 4837, 4842, 4860, 4864, 4871, 4877, 4882, 5011, 5073, 5105, 5177, 5201, 5355], "token": [31, 3713, 3748, 3752, 3766, 4229, 4239, 4240], "=none": [31, 64, 3779, 3781, 3782, 3789, 3792, 3793, 3832, 3909, 4829, 5275, 5283, 5355], "super": [31, 64, 3899, 3973, 5355], ".__": [31, 64, 5355], ".token": 31, ".backends": [31, 3704, 3736, 5364], "=self": [31, 64], "(self": [31, 51, 64, 1717, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 3906, 4254, 4272, 4287, 4837, 4864, 4871, 5355], "(backends": 31, "filters": [31, 64, 179, 233, 321, 404, 492, 563, 651, 1141, 1228, 2321, 2907, 3704, 3705, 3723, 3737, 3738, 3739, 3789, 4000, 4001, 4013, 4014, 4232], "=filters": 31, "matches": [31, 39, 64, 1985, 1996, 2316, 2322, 2908, 3484, 3487, 3704, 3706, 3748, 3749, 4006, 4014, 4922, 5193, 5226], "rest": [31, 35, 39, 54, 64, 877, 4895, 4916, 5290, 5349], "up": [31, 48, 53, 59, 64, 110, 130, 186, 328, 342, 499, 513, 658, 672, 849, 877, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1235, 1249, 1275, 1292, 1312, 1330, 1374, 1396, 1439, 1459, 1478, 1479, 1496, 1515, 1539, 1586, 1682, 1768, 1784, 1786, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1936, 1953, 2024, 2032, 2059, 2166, 2323, 2349, 2363, 2376, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2819, 3777, 3791, 3963, 4041, 4094, 4430, 4472, 4499, 4518, 4544, 4639, 4645, 4819, 4915, 4922, 5175], "hardware": [31, 35, 44, 48, 53, 64, 140, 693, 841, 877, 1376, 1459, 1496, 1539, 1642, 1643, 1644, 1934, 1983, 1990, 2024, 3999, 4012, 4084, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4901, 4915, 4958, 5014, 5017, 5021, 5023, 5033, 5093, 5102, 5117, 5123, 5143, 5157, 5230, 5267, 5331], "describe": [31, 35, 64, 912, 1441, 3932, 3935, 3963, 3966, 3976, 4839, 4922, 5359], "embed": [31, 64], "optimize": [31, 35, 48, 64, 773, 856, 883, 904, 4915, 5130, 5131, 5132, 5133, 5135, 5136, 5138, 5139, 5202, 5226, 5235, 5355], "_circuits": [31, 39, 64, 357, 1643, 1928, 2024, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 5033, 5268, 5272, 5352], "limit": [31, 44, 51, 64, 690, 698, 706, 714, 722, 731, 740, 749, 758, 770, 778, 786, 795, 803, 811, 819, 827, 838, 846, 858, 866, 874, 885, 893, 901, 909, 1392, 1480, 2285, 2323, 2349, 2933, 3711, 3719, 3722, 3723, 3727, 3738, 3739, 3779, 3789, 3880, 3882, 3884, 3999, 4012, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4813, 4964, 4976, 5193, 5214, 5217, 5331, 5333, 5334], "batch": [31, 64], "accept": [31, 64, 211, 382, 541, 1081, 1097, 1120, 1922, 1930, 1931, 1986, 1992, 1997, 4182, 4930], "_default": [31, 64, 2277, 2909, 2918, 2927, 3891, 4712], "phasegate": [31, 48, 64, 273, 444, 603, 1180, 1460, 1461], "sxgate": [31, 64, 330, 501, 660, 1237, 1520, 1521], "ugate": [31, 64, 338, 509, 668, 1245, 1548, 1549, 4922], "igate": [31, 64, 249, 250, 420, 421, 579, 580, 1156, 1157, 1395, 2813, 4299, 4354], "._": [31, 39, 64, 70, 768, 1465, 1717, 1936, 2473, 2487, 4741, 4770, 4842], ".instructionproperties": 31, "lam": [31, 64, 224, 226, 258, 261, 263, 338, 340, 341, 395, 397, 429, 432, 434, 509, 511, 512, 554, 556, 588, 591, 593, 668, 670, 671, 1132, 1134, 1165, 1168, 1170, 1245, 1247, 1248, 1360, 1362, 1412, 1542, 1544, 1547, 4058, 4059, 4922], "\u03bb\"": 31, "_props": [31, 64, 4922, 5202], "{(": [31, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1722, 4162, 4172, 4194, 5033, 5226, 5239, 5244, 5341], ",)": [31, 64, 2875, 4922, 4928, 4930, 5226, 5339, 5353, 5366], ")}": [31, 44, 64, 97, 1360, 1362, 1378, 1387, 1388, 1399, 1481, 1542, 1544, 1547, 2018, 4048, 4162, 4167, 4172, 4194, 4398, 4664, 4819, 4825, 4837, 4864, 4871, 5341, 5342, 5350, 5355, 5361, 5362, 5364], "_instruction": [31, 64, 1442, 1465, 1468, 4299, 4354, 4922, 5284, 5291, 5292, 5293, 5294, 5352], "(phasegate": 31, "(lam": [31, 64], "sx": [31, 48, 64, 330, 501, 660, 1237, 1519, 1521, 1523, 2801, 2909, 2918, 2927, 4705, 5226, 5288, 5332, 5333, 5334, 5339, 5350], "(sxgate": [31, 64], ", sx": [31, 64], "phi": [31, 64, 105, 107, 136, 143, 145, 146, 224, 226, 282, 295, 338, 340, 341, 395, 397, 453, 466, 509, 511, 512, 554, 556, 612, 625, 668, 670, 671, 852, 1067, 1132, 1134, 1189, 1202, 1245, 1247, 1248, 1360, 1361, 1362, 1363, 1383, 1386, 1399, 1450, 1481, 1496, 1542, 1543, 1544, 1546, 1547, 1549, 2909, 2918, 2927, 4058, 4059, 4112, 4121, 4139, 4191, 4196, 4199, 4200, 4201, 4421, 4422, 4423, 4922, 5130, 5133, 5285, 5350, 5352, 5361], "\u03c6\"": 31, "\u03b8\"": 31, "(ugate": [31, 64, 4922], "edge": [31, 48, 64, 211, 382, 541, 1120, 1387, 1667, 1674, 1696, 1697, 1722, 1734, 4840, 4852, 4856, 4882, 4923, 5123, 5217, 5331, 5333, 5334, 5341], "(cxgate": [31, 64, 4922, 4923, 5353], ", cx": [31, 64, 4922, 4923], "(measure": [31, 64, 4008], ", meas": 31, "(igate": 31, ", id": 31, "validators": [31, 64], ".options": [31, 64, 1641, 2277, 2909, 2918, 2927, 3798, 3891, 4837, 4864, 4871], "_validator": [31, 64], "classmethod": [31, 83, 127, 132, 135, 144, 153, 164, 171, 178, 207, 208, 378, 379, 537, 538, 914, 1116, 1117, 1284, 1464, 1675, 1925, 2119, 2158, 2277, 2329, 2341, 2355, 2808, 2824, 2825, 2837, 2838, 2865, 2866, 2909, 2918, 2927, 3758, 3759, 3891, 3899, 3900, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 4003, 4016, 4247, 4250, 4253, 4256, 4259, 4262, 4265, 4268, 4271, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4384, 4386, 4432, 4433, 4481, 4502, 4531, 4546, 4547, 4626, 4649, 4651, 4804, 4835, 4836, 4838, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4862, 4863, 4865, 4869, 4870, 4872, 4874, 4902], "(cls": [31, 3899], "(shots": [31, 64], "=false": [31, 57, 64, 266, 267, 277, 285, 437, 438, 448, 456, 596, 597, 607, 615, 1173, 1174, 1184, 1192, 2808, 3781, 3789, 3926, 4219, 4516, 4542, 4592, 4637, 4829, 5340, 5343, 5349, 5354, 5356, 5361], "serialize": [31, 64, 822, 1898, 4244, 4245, 4297, 5050], "hasattr": [31, 64], "(kwarg": 31, "warnings": [31, 35, 57, 64, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2848, 2889], ".warn": [31, 57], "userwarning": 31, "stacklevel": [31, 57, 5261], ".shots": [31, 64, 5361], "_json": 31, "convert": [31, 35, 53, 60, 64, 143, 145, 146, 1462, 1922, 1923, 1924, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1946, 1950, 1953, 1969, 1971, 1975, 1977, 1980, 1983, 1986, 1989, 1990, 1992, 1997, 2000, 2001, 2003, 2005, 2007, 2010, 2011, 2013, 2015, 2018, 2019, 2022, 2024, 2054, 2122, 2176, 2203, 2207, 2227, 2228, 2251, 2828, 2829, 2841, 2845, 2855, 2858, 2859, 2869, 3824, 3924, 3928, 3930, 4049, 4050, 4220, 4221, 4242, 4243, 4313, 4314, 4332, 4333, 4351, 4352, 4373, 4374, 4398, 4399, 4418, 4419, 4441, 4442, 4460, 4461, 4463, 4483, 4484, 4485, 4508, 4509, 4515, 4516, 4534, 4535, 4541, 4542, 4565, 4566, 4583, 4584, 4591, 4592, 4593, 4612, 4629, 4630, 4636, 4637, 4664, 4665, 4683, 4684, 4702, 4703, 4744, 4855, 5056, 5259, 5275, 5352, 5353, 5361, 5362, 5366], "_to": [31, 35, 64, 231, 328, 342, 402, 499, 513, 561, 658, 672, 1139, 1235, 1249, 1786, 4027, 4028, 4029, 4380, 4644, 5068, 5086, 5105, 5137, 5282, 5290, 5347, 5349, 5355, 5368], "_wire": [31, 5355], "_format": [31, 920, 939, 1259, 5342], "(circuit": [31, 33, 62, 64, 198, 369, 528, 1107, 1376, 1448, 1537, 2813, 2817, 3737, 5347, 5348, 5354, 5355], "_handle": 31, "_jsonb": 31, "myjob": 31, "key": [31, 39, 64, 235, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 406, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 565, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 1102, 1143, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1296, 1714, 1715, 2282, 2291, 2297, 2310, 2334, 2346, 2360, 2373, 2386, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2894, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3757, 3779, 3789, 3796, 3905, 3982, 3993, 4008, 4255, 4261, 4273, 4279, 4744, 4749, 4751, 4755, 4761, 4762, 4763, 4771, 4774, 4778, 4782, 4783, 4784, 4788, 4792, 4797, 4798, 4799, 4803, 4907, 4910, 4911, 4912, 5033, 5193, 5226, 5281, 5299, 5302, 5303, 5304, 5311, 5314, 5315, 5316, 5323, 5326, 5327, 5328, 5345, 5372], "describes": [31, 64, 342, 513, 672, 1249, 1450, 3725, 5008], "defines": [31, 35, 39, 44, 51, 64, 88, 162, 179, 1903, 1957, 2027, 2036, 2069, 2073, 2084, 2087, 2097, 2100, 2112, 2115, 2136, 2153, 2162, 2168, 2177, 2181, 2195, 2208, 2220, 2232, 2236, 2252, 2395, 2409, 2423, 2437, 2451, 2465, 4032, 4182, 4915, 4958, 5226], "doing": [31, 64, 3814, 3818, 3862, 4182, 4922], "sygate": 31, "sy": 31, "=label": 31, ".ry": [31, 64, 198, 369, 528, 1107, 1388, 5342, 5350, 5362], "(np": [31, 44, 47, 48, 64, 181, 357, 364, 4026, 4206, 5077, 5143, 5341, 5353, 5357, 5361, 5362], ".pi": [31, 35, 48, 64, 2001, 4026, 4046, 4052, 4054, 4057, 4058, 4059, 4193, 4206, 4922, 5077, 5143, 5352, 5353, 5357, 5362, 5364], ".definition": [31, 64], "thing": [31, 64, 2285], "param": [31, 39, 64, 322, 493, 652, 693, 966, 1016, 1076, 1092, 1229, 1273, 1901, 1902, 1926, 1929, 1956, 2001, 2009, 2035, 2072, 2135, 2154, 2180, 2235, 2333, 2359, 2372, 2385, 2845, 2847, 2858, 2859, 2870, 2872, 2883, 3973, 4182, 5110, 5242, 5243, 5248, 5249, 5362, 5367], "_init": [31, 53, 57, 64, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 2859], "conflict": [31, 64, 1096, 5352], "identify": [31, 64, 798, 1644, 4032, 4148, 4187], "done": [31, 33, 48, 51, 64, 105, 186, 253, 254, 289, 424, 425, 460, 583, 584, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1160, 1161, 1196, 1274, 1290, 1291, 1309, 1310, 1329, 1421, 1438, 1453, 1463, 1472, 1514, 1644, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 1969, 2277, 2295, 2297, 2302, 2308, 2323, 2400, 2414, 2428, 2442, 2456, 2470, 2477, 2479, 2486, 2491, 2493, 2500, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 2887, 2898, 2899, 2905, 3803, 3806, 3816, 3824, 3880, 3919, 4030, 4031, 4299, 4354, 4370, 4389, 4390, 4398, 4487, 4519, 4604, 4605, 4614, 4655, 4656, 4664, 4716, 4922, 5003, 5014, 5017, 5151, 5202], "knows": [31, 64, 191, 4922], "exists": [31, 64, 76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 328, 342, 499, 513, 658, 672, 689, 831, 1235, 1249, 1453, 1519, 1522, 1552, 1560, 1564, 1786, 2285, 2808, 3774, 3888, 4048, 4708, 4930, 5123], "assuming": [31, 64, 912, 1935, 4376, 4640, 4964, 4966], "instructionproperties": [31, 64, 4922, 4923, 4928, 4939], "(duration": [31, 35, 64, 4008, 4025, 4026, 4094, 4182, 4196, 4201, 4922, 5356, 5358], "3e": [31, 64, 5262], "1e": [31, 35, 64, 74, 88, 179, 255, 256, 426, 427, 585, 586, 683, 693, 709, 761, 773, 798, 861, 896, 1162, 1163, 2126, 2155, 2323, 2349, 2363, 2376, 2813, 2830, 2867, 2909, 2918, 2927, 2932, 4039, 4051, 4053, 4187, 4316, 4335, 4376, 4402, 4424, 4444, 4552, 4568, 4570, 4578, 4582, 4588, 4640, 4667, 4686, 5133, 5262, 5331, 5350, 5359, 5361], "5e": [31, 35, 64, 5355, 5357], "2e": [31, 2867, 4938], ".target": [31, 48, 2285, 2963, 2980, 2997, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4030], "(sygate": 31, ", sy": 31, "keys": [31, 53, 64, 107, 142, 146, 198, 369, 528, 1107, 2337, 2867, 2886, 2887, 2889, 3757, 3760, 3767, 3779, 3787, 3789, 3821, 3905, 3985, 4390, 4398, 4605, 4656, 4664, 4751, 4754, 4756, 4757, 4759, 4765, 4773, 4774, 4777, 4779, 4781, 4785, 4787, 4788, 4791, 4793, 4795, 4800, 4803, 4805, 4873, 4888, 4890, 4896, 4906, 4909, 4913, 4917, 4932, 5033, 5226, 5227, 5238, 5277, 5283, 5298, 5301, 5305, 5310, 5313, 5317, 5322, 5325, 5329, 5331, 5332, 5333, 5334, 5341, 5345, 5372], "multiqubit": [31, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 3991, 4927, 5205], "tuple": [31, 35, 39, 64, 70, 74, 75, 79, 84, 90, 93, 95, 113, 118, 119, 120, 123, 128, 150, 168, 175, 179, 195, 203, 212, 233, 237, 239, 244, 251, 252, 260, 316, 321, 347, 366, 374, 383, 404, 408, 410, 415, 422, 423, 431, 487, 492, 518, 525, 533, 542, 563, 567, 569, 574, 581, 582, 590, 646, 651, 677, 687, 692, 696, 700, 704, 708, 712, 716, 720, 724, 729, 733, 738, 742, 747, 751, 756, 760, 765, 766, 768, 769, 772, 776, 780, 784, 788, 793, 797, 801, 805, 809, 813, 817, 821, 825, 829, 836, 840, 844, 848, 850, 855, 856, 860, 864, 868, 872, 876, 878, 882, 883, 887, 891, 895, 899, 903, 907, 911, 917, 926, 936, 946, 956, 959, 966, 973, 989, 1009, 1016, 1023, 1036, 1039, 1053, 1104, 1112, 1141, 1146, 1151, 1158, 1159, 1167, 1223, 1228, 1254, 1263, 1266, 1273, 1280, 1299, 1322, 1376, 1377, 1379, 1399, 1431, 1441, 1450, 1456, 1471, 1503, 1507, 1527, 1537, 1563, 1567, 1644, 1655, 1661, 1662, 1666, 1674, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 1937, 1943, 1945, 2001, 2003, 2008, 2015, 2016, 2020, 2119, 2168, 2285, 2287, 2311, 2392, 2406, 2420, 2434, 2448, 2462, 2494, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2712, 2715, 2728, 2741, 2754, 2767, 2793, 2807, 2813, 2817, 2820, 2821, 2823, 2867, 2963, 2965, 2980, 2982, 2997, 2999, 3005, 3007, 3013, 3015, 3030, 3032, 3047, 3049, 3064, 3066, 3081, 3083, 3097, 3099, 3114, 3116, 3130, 3132, 3147, 3149, 3163, 3165, 3180, 3182, 3197, 3199, 3214, 3216, 3231, 3233, 3248, 3250, 3265, 3267, 3282, 3284, 3298, 3300, 3315, 3317, 3332, 3334, 3348, 3350, 3365, 3367, 3382, 3384, 3390, 3392, 3407, 3409, 3441, 3443, 3458, 3460, 3474, 3476, 3505, 3507, 3521, 3523, 3538, 3540, 3563, 3565, 3580, 3582, 3597, 3599, 3630, 3632, 3647, 3649, 3663, 3665, 3680, 3682, 3696, 3698, 3783, 3794, 3855, 3904, 3905, 3927, 3942, 3945, 3963, 3965, 3982, 3986, 3990, 3991, 3993, 3999, 4000, 4001, 4008, 4012, 4013, 4014, 4034, 4075, 4080, 4084, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4228, 4229, 4282, 4299, 4306, 4307, 4309, 4316, 4323, 4328, 4330, 4335, 4342, 4347, 4349, 4354, 4364, 4366, 4368, 4376, 4379, 4385, 4388, 4402, 4409, 4414, 4416, 4422, 4423, 4424, 4434, 4436, 4438, 4444, 4451, 4456, 4458, 4463, 4475, 4478, 4480, 4487, 4505, 4510, 4512, 4519, 4532, 4536, 4538, 4552, 4559, 4561, 4563, 4568, 4577, 4579, 4581, 4583, 4585, 4587, 4598, 4603, 4614, 4627, 4631, 4633, 4640, 4643, 4650, 4654, 4667, 4674, 4679, 4681, 4686, 4693, 4698, 4700, 4730, 4731, 4735, 4737, 4738, 4743, 4745, 4762, 4767, 4783, 4798, 4852, 4877, 4880, 4884, 4893, 4911, 4915, 4928, 4930, 4934, 4935, 4939, 5033, 5105, 5226, 5227, 5238, 5252, 5262, 5284, 5285, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5303, 5315, 5327, 5331, 5333, 5334], "combinations": [31, 64, 1450, 5117, 5352], ".e": [31, 44, 48, 54, 64, 70, 97, 98, 103, 104, 147, 151, 165, 169, 172, 176, 180, 186, 187, 188, 190, 232, 233, 255, 256, 270, 328, 342, 363, 403, 404, 426, 427, 441, 499, 513, 562, 563, 585, 586, 600, 658, 672, 693, 773, 850, 877, 878, 929, 949, 962, 999, 1012, 1027, 1042, 1056, 1140, 1141, 1162, 1163, 1177, 1235, 1249, 1269, 1285, 1304, 1342, 1349, 1351, 1353, 1373, 1378, 1392, 1434, 1442, 1444, 1447, 1459, 1480, 1490, 1495, 1496, 1500, 1502, 1510, 1521, 1523, 1534, 1536, 1539, 1550, 1559, 1640, 1644, 1682, 1722, 1779, 1786, 1822, 1838, 1854, 1870, 1899, 1906, 1954, 1959, 2001, 2028, 2033, 2037, 2039, 2056, 2064, 2068, 2070, 2075, 2085, 2089, 2098, 2102, 2113, 2117, 2132, 2133, 2138, 2156, 2163, 2165, 2178, 2182, 2196, 2198, 2209, 2211, 2221, 2224, 2233, 2238, 2253, 2255, 2323, 2349, 2705, 2718, 2731, 2744, 2757, 2770, 2887, 3738, 3739, 4001, 4008, 4014, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4194, 4195, 4198, 4224, 4232, 4432, 4712, 4856, 4946, 4949, 4952, 4955, 4958, 4964, 4970, 4973, 5023, 5077, 5091, 5102, 5117, 5120, 5140, 5143, 5151, 5152, 5158, 5178, 5190, 5226, 5233, 5234, 5237, 5331, 5333, 5334, 5340, 5345], "\u2019ve": [31, 2024, 2032], "arbitrary": [31, 35, 39, 64, 115, 147, 255, 256, 290, 328, 426, 427, 461, 499, 585, 586, 620, 658, 789, 1102, 1162, 1163, 1197, 1235, 1407, 1441, 1462, 1483, 1640, 3906, 3993, 3999, 4008, 4012, 4026, 4032, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4288, 4291, 4958, 5082, 5262, 5287, 5331, 5333, 5334, 5352, 5356, 5357], "defining": [31, 64, 163, 165, 172, 364, 1388, 1910, 1953, 1961, 2024, 2025, 2032, 2043, 2055, 2063, 2069, 2076, 2084, 2091, 2097, 2104, 2112, 2124, 2132, 2142, 2153, 2185, 2195, 2199, 2212, 2240, 2256, 2277, 2285, 2323, 2337, 2349, 2363, 2376, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3718, 3891, 3932, 3976, 4177, 4249, 4264, 4463, 4922], "equivalent": [31, 48, 64, 288, 459, 618, 918, 1000, 1001, 1003, 1005, 1195, 1371, 1374, 1382, 1383, 1384, 1385, 1386, 1427, 1453, 1459, 1478, 1479, 1496, 1499, 1501, 1517, 1524, 1530, 1533, 1535, 1539, 1552, 1556, 1558, 1560, 1564, 1586, 1648, 1649, 1682, 1721, 1746, 1748, 1750, 1752, 1899, 1900, 1903, 1908, 1909, 1913, 1914, 1915, 1916, 1917, 1918, 1926, 1932, 1934, 1941, 1944, 1948, 1950, 1954, 1955, 1957, 1960, 1964, 1965, 1966, 1967, 1983, 1987, 1990, 2026, 2027, 2033, 2034, 2036, 2040, 2041, 2042, 2047, 2048, 2049, 2050, 2051, 2052, 2056, 2057, 2061, 2062, 2066, 2070, 2071, 2073, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2090, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2103, 2106, 2107, 2108, 2109, 2110, 2113, 2114, 2115, 2118, 2123, 2127, 2128, 2129, 2130, 2133, 2134, 2136, 2140, 2141, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2161, 2163, 2169, 2171, 2178, 2179, 2181, 2189, 2194, 2196, 2197, 2202, 2205, 2209, 2210, 2215, 2221, 2222, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2236, 2239, 2245, 2246, 2247, 2249, 2250, 2253, 2254, 2259, 2262, 2263, 2264, 2285, 2814, 2816, 2826, 2831, 3766, 3769, 3901, 4301, 4304, 4310, 4317, 4318, 4319, 4321, 4331, 4334, 4336, 4337, 4338, 4340, 4350, 4353, 4356, 4359, 4369, 4393, 4403, 4404, 4405, 4407, 4417, 4420, 4426, 4429, 4430, 4439, 4440, 4445, 4446, 4447, 4449, 4459, 4462, 4463, 4467, 4472, 4482, 4519, 4525, 4529, 4554, 4557, 4564, 4571, 4574, 4575, 4590, 4645, 4659, 4668, 4669, 4670, 4672, 4682, 4685, 4687, 4688, 4689, 4691, 4701, 4704, 4712, 4722, 4726, 4830, 4923, 5020, 5077, 5079, 5143, 5366], "typically": [31, 35, 48, 64, 147, 165, 172, 936, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 3982, 4034, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4716, 4717, 4915, 4923, 4930, 4973], "(if": [31, 1969, 2333, 2359, 2372, 2385], "commonly": [31, 35, 64], "rotation": [31, 44, 64, 218, 219, 220, 221, 224, 225, 226, 258, 259, 260, 261, 263, 268, 273, 282, 290, 291, 292, 293, 294, 295, 296, 297, 328, 338, 339, 340, 341, 343, 344, 345, 389, 390, 391, 392, 395, 396, 397, 429, 430, 431, 432, 434, 439, 444, 453, 461, 462, 463, 464, 465, 466, 467, 468, 499, 509, 510, 511, 512, 514, 515, 516, 548, 549, 550, 551, 554, 555, 556, 588, 589, 590, 591, 593, 598, 603, 612, 620, 621, 622, 623, 624, 625, 626, 627, 658, 668, 669, 670, 671, 673, 674, 675, 1067, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1165, 1166, 1167, 1168, 1170, 1175, 1180, 1189, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1235, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1349, 1351, 1353, 1360, 1362, 1376, 1377, 1379, 1381, 1383, 1384, 1385, 1386, 1389, 1406, 1441, 1448, 1450, 1456, 1459, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1481, 1483, 1486, 1489, 1490, 1491, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1503, 1517, 1524, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1559, 1560, 1563, 1564, 1567, 1786, 1815, 1831, 1847, 1863, 1923, 4121, 4139, 4421, 4546, 4547, 4549, 4550, 4819, 4823, 4825, 5013, 5132, 5151, 5154, 5160, 5244, 5245, 5246, 5247, 5359, 5369], "hgate": [31, 48, 64, 245, 416, 575, 970, 1152, 1390, 1391, 1410, 4354, 5355], "translate": [31, 64, 1642, 4915, 4975], "efficient": [31, 64, 180, 186, 734, 877, 1376, 1382, 1407, 2323, 2349, 4487, 4515, 4516, 4541, 4542, 4568, 4591, 4636, 4637, 4712, 4767, 4819, 4825, 4928, 5370], "translation": [31, 64, 1644, 3708, 4901, 4915, 4973, 5217, 5230, 5355], "although": [31, 48, 57, 64, 103, 143, 147, 165, 172, 180, 5226, 5237], "diminishing": 31, "margin": [31, 5331, 5332, 5333, 5334], "2gate": [31, 64, 340, 511, 670, 1247, 1650, 4058, 5355], ".equivalence": [31, 64], "_library": [31, 64, 912, 1648, 1649, 3973, 4246, 4255, 4273, 4973, 5208], "sessionequivalencelibrary": [31, 64, 923, 924, 943, 944, 956, 957, 970, 971, 986, 987, 1006, 1007, 1020, 1021, 1036, 1037, 1050, 1051, 1263, 1264, 1277, 1278, 1296, 1297, 1319, 1320, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1429, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1505, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1753, 1754, 1772, 1773, 1786, 1787, 1802, 1803, 1815, 1816, 1831, 1832, 1847, 1848, 1863, 1864, 1879, 1880, 2389, 2390, 2403, 2404, 2417, 2418, 2431, 2432, 2445, 2446, 2459, 2460, 2504, 2505, 2517, 2518, 2530, 2531, 2543, 2544, 2556, 2557, 2569, 2570, 2582, 2583, 2595, 2596, 2608, 2609, 2621, 2622, 2634, 2635, 2647, 2648, 2660, 2661, 2673, 2674, 2686, 2687, 2699, 2700, 2712, 2713, 2725, 2726, 2738, 2739, 2751, 2752, 2764, 2765], "zgate": [31, 64, 351, 522, 681, 1258, 1565, 1566, 4299, 4354, 5342], "rzgate": [31, 64, 295, 466, 625, 1202, 1386, 1459, 1497, 1498, 1539, 1590, 1591, 1592], "> z": 31, ".quantumregister": [31, 64], "_sy": 31, "_h": [31, 64, 5350, 5361], "(q": [31, 64, 235, 406, 565, 973, 1023, 1143, 1280, 1299, 1475, 1527, 1645, 1646, 1649, 1650, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2001, 3966, 4722, 5281, 5282, 5345, 5350, 5354, 5355, 5359, 5362, 5368, 5372], "(zgate": [31, 64, 5342], ", [": [31, 64, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 4463, 5352], "[0": [31, 64, 343, 344, 514, 515, 673, 674, 931, 951, 964, 973, 980, 994, 1014, 1023, 1030, 1044, 1058, 1250, 1251, 1271, 1280, 1288, 1299, 1307, 1327, 1372, 1436, 1512, 1527, 1563, 1666, 1757, 1781, 1789, 1796, 1810, 1818, 1825, 1834, 1841, 1850, 1857, 1866, 1873, 1883, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 4463, 5345, 5350, 5355, 5362, 5372], "_equivalence": [31, 64], ", def": [31, 64], ".parameter": [31, 64, 1456, 1537, 4032], "lambda": [31, 64, 103, 261, 432, 591, 1141, 1168, 1228, 1347, 1352, 1357, 1359, 1360, 1361, 1362, 1363, 1414, 1459, 1461, 1465, 1488, 1493, 1496, 1498, 1539, 1541, 1542, 1543, 1544, 1546, 1547, 1549, 1551, 1563, 2018, 2032, 2037, 2909, 2918, 2927, 3705, 3737, 4192, 4335, 4421, 4422, 4423, 4715, 4726, 4922, 5130, 5133, 5350, 5370], "_u": [31, 64, 4726, 5350, 5366], "(rzgate": [31, 64], "(phi": [31, 64, 1067, 1386, 2909, 2918, 2927, 5130, 5133, 5352], "imported": [31, 53, 64, 5280], "basistranslator": [31, 64, 4974, 4975, 5208, 5230, 5355], "noting": [31, 64, 2323], "depending": [31, 51, 64, 211, 232, 239, 240, 252, 382, 403, 410, 411, 423, 541, 562, 569, 570, 582, 904, 1120, 1140, 1146, 1147, 1159, 1345, 1352, 1357, 1398, 1412, 1472, 1641, 1644, 2282, 2291, 2311, 2323, 3011, 3019, 3388, 3799, 4182, 5073, 5226], "\u2019re": [31, 51, 64, 2024, 4842, 4928], "passes": [31, 45, 51, 53, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 2323, 2349, 2363, 2376, 4834, 4836, 4837, 4861, 4863, 4864, 4868, 4870, 4871, 4894, 4895, 4897, 4898, 4899, 4900, 4915, 4916, 4918, 4919, 4920, 4921, 4944, 4958, 4961, 5014, 5021, 5071, 5104, 5123, 5181, 5196, 5217, 5239, 5244, 5355], "1qgatesdecomposition": [31, 64, 5137], "able": [31, 35, 39, 48, 64, 683, 904, 3718, 3736, 4915], "onequbiteulerdecomposer": [31, 64, 1483, 4422, 4423, 4705, 4712], "work": [31, 39, 48, 53, 57, 64, 904, 1081, 1097, 1948, 1974, 2024, 2318, 2875, 4751, 4878, 4964, 5137, 5214, 5217], "updated": [31, 39, 64, 76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 831, 833, 904, 928, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1071, 1087, 1268, 1283, 1303, 1324, 1433, 1509, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 2277, 2311, 2323, 2349, 2363, 2376, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 3796, 3922, 3929, 3935, 3995, 4010, 4032, 4086, 4463, 4487, 4877, 5178, 5355], "decomposing": [31, 35, 48, 64, 4299, 4354, 4421, 4705, 5016], "term": [31, 64, 105, 165, 693, 1974, 2018, 2122, 2817, 2867, 4583, 4584, 5294], "better": [31, 39, 48, 143, 798, 806, 904, 1472, 1537, 1926, 2323, 2349, 3881, 4716, 4810, 5007, 5108, 5217], "direction": [31, 64, 773, 798, 833, 849, 877, 1377, 1441, 1450, 1456, 1471, 1537, 1563, 1567, 2323, 3779, 3789, 4856, 4927, 4976, 4987, 4988, 4990, 5041, 5093, 5108, 5157, 5158, 5202, 5214, 5217, 5237, 5285], "contributing": [31, 64], "definitions": [31, 39, 64, 1345, 1352, 1357, 1519, 1522, 1552, 1560, 1564, 3922, 3973, 3982, 4239, 4240, 4241, 5146, 5208], "continues": [31, 57, 64], "moving": [31, 39, 64, 4030, 4915], "forward": [31, 39, 64, 4007, 4083, 4093, 4102, 4111, 4120, 4129, 4138, 4147, 4156, 4915, 5175], "importance": [31, 64], "submitting": [31, 64, 3718, 3730, 3896], "returning": [31, 64, 71, 849, 877, 1376, 1379, 1456, 1503, 1537, 1674, 2024, 2032, 2323, 2954, 2971, 2988, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3488, 3496, 3513, 3529, 3554, 3571, 3588, 3621, 3638, 3655, 3671, 3688, 4008, 4225, 4243, 4487], "involves": [31, 48, 64, 1380, 1934, 4578], "serializing": [31, 64, 3926, 4177, 4254, 4272, 4287], "-ibmq": [31, 47, 56, 57, 64, 3748, 4827, 5339, 5342, 5348, 5349, 5350, 5352, 5353, 5358, 5359, 5361], "converting": [31, 64, 288, 459, 618, 861, 1195, 1926, 1934, 1937, 1969, 2842, 4515, 4516, 4541, 4542, 4591, 4636, 4637], "payload": [31, 39, 64, 1641, 2914, 2923, 2932, 4252, 4270, 4298], "local": [31, 35, 64, 701, 725, 734, 789, 841, 869, 877, 1376, 1379, 1503, 2337, 2862, 2889, 2909, 2918, 2927, 3723, 3728, 3738, 3739, 3782, 3789, 3790, 3793, 3802, 3821, 3830, 3833, 3909, 3930, 3932, 3963, 3976, 4182, 4579, 4705, 4973, 5250, 5267], "simulators": [31, 45, 53, 64, 2319, 2473, 2487, 2801, 3704, 4073, 4148, 5250], "serialization": [31, 35, 45, 64, 2485, 4182, 4244, 4245], "conversion": [31, 60, 64, 130, 1912, 1932, 1934, 1963, 2025, 2030, 2046, 2055, 2063, 2065, 2078, 2144, 2187, 2243, 4008, 4299, 4354, 4958, 5359, 5366], "initially": [31, 64, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 4229, 4973], "look": [31, 44, 48, 51, 64, 165, 172, 1456, 3945, 3984, 3987, 4241, 5342], "@classmethod": 31, "limits": [31, 64, 3727, 5214], "validation": [31, 64, 926, 935, 946, 955, 959, 969, 973, 989, 1009, 1019, 1023, 1039, 1049, 1053, 1062, 1266, 1276, 1280, 1299, 1322, 1331, 1401, 1405, 1431, 1440, 1507, 1516, 1527, 1757, 1775, 1785, 1789, 1805, 1814, 1818, 1834, 1850, 1866, 1883, 2323, 2349, 2363, 2392, 2402, 2406, 2416, 2420, 2430, 2434, 2444, 2448, 2458, 2462, 2472, 2507, 2516, 2520, 2529, 2533, 2542, 2546, 2555, 2559, 2568, 2572, 2581, 2585, 2594, 2598, 2607, 2611, 2620, 2624, 2633, 2637, 2646, 2650, 2659, 2663, 2672, 2676, 2685, 2689, 2698, 2702, 2711, 2715, 2724, 2728, 2737, 2741, 2750, 2754, 2763, 2767, 2776, 3889, 3890, 4182, 5102, 5104, 5222, 5250], "acceptable": [31, 806, 833, 1994], "\"shots": [31, 2311], "validator": [31, 64, 2309, 2311], "full": [31, 39, 44, 51, 59, 64, 147, 180, 186, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 257, 258, 262, 263, 264, 268, 273, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 362, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 428, 429, 433, 434, 435, 439, 444, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 473, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 587, 588, 592, 593, 594, 598, 603, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 632, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 693, 943, 998, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1152, 1156, 1157, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1209, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1342, 1376, 1379, 1444, 1456, 1465, 1503, 1537, 1550, 1985, 1991, 1996, 1999, 2001, 2015, 2016, 2024, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2780, 2877, 4041, 4182, 4193, 4463, 4487, 4515, 4516, 4519, 4541, 4542, 4577, 4591, 4614, 4636, 4637, 4712, 4730, 4743, 4842, 4915, 4961, 4963, 5137, 5175, 5268, 5362], "sync": [31, 64, 2282, 2291, 3011, 3019, 3388, 3783, 3794], "async": [31, 64, 2282, 2291, 3011, 3019, 3388], "considered": [31, 39, 51, 64, 255, 256, 285, 426, 427, 456, 585, 586, 615, 904, 1162, 1163, 1192, 1382, 1721, 1730, 1731, 1735, 1736, 1738, 1739, 1741, 1746, 1748, 1750, 1752, 1987, 3766, 3769, 3833, 4927, 4964, 4967, 5011, 5044, 5108, 5169, 5244, 5331], "represents": [31, 39, 48, 64, 66, 86, 130, 936, 1102, 1378, 1706, 1916, 1918, 1943, 1953, 1966, 2001, 2012, 2016, 2018, 2050, 2083, 2095, 2109, 2129, 2150, 2194, 2205, 2229, 2231, 2249, 2263, 2265, 2269, 2502, 2813, 2875, 2883, 2884, 2885, 3718, 3834, 3857, 3999, 4012, 4084, 4159, 4164, 4169, 4174, 4179, 4184, 4195, 4424, 4463, 4549, 4712, 4946, 4952, 4964, 5181, 5235, 5239, 5244, 5262, 5284, 5285, 5291, 5292, 5293, 5294, 5331, 5362], "submitted": [31, 64, 2323, 2337, 2349, 2363, 2376, 2481, 2499, 2502, 3718, 3719, 3723, 3727, 3729, 3736, 3796, 3837, 3857, 3863, 3864, 5250], "cancel": [31, 64, 1374, 2475, 2487, 2489, 2896, 3799, 3846, 3852, 3853, 3911, 3912, 4979, 5011, 5105], "finished": [31, 48, 64, 2282, 2291, 3011, 3019, 3388, 3796, 3834, 3909, 3918, 4830], "mainly": [31, 64, 4958], "synchronous": [31, 64, 3896], "elsewhere": [31, 64, 4157], "inner": [31, 44, 64, 1397, 2024, 2161, 2232, 2323, 2349, 4578, 4652, 4751, 5099], "joberror": [31, 2294, 2484, 2485, 2494, 2496, 2501, 2502, 2503, 2904, 3796], "jobtimeouterror": [31, 2296, 2308, 2486, 2500, 2905, 3919], ".jobstatus": [31, 64, 2903, 3796], "jobstatus": [31, 64, 2306, 2484, 2498, 2903, 3719, 3723, 3738, 3739, 3796, 3818, 3850, 3865, 3909, 3917, 3961, 3962], "wait": [31, 64, 1394, 2482, 2486, 2496, 2500, 2503, 2905, 2954, 2971, 2988, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3488, 3496, 3513, 3529, 3554, 3571, 3588, 3621, 3638, 3655, 3671, 3688, 3737, 3814, 3818, 3824, 3849, 3862, 3896, 3916, 3919, 4219, 5250], "_for": [31, 64, 255, 256, 426, 427, 585, 586, 1162, 1163, 3818], "timeout": [31, 64, 2296, 2308, 2482, 2484, 2486, 2496, 2500, 2503, 2901, 2905, 3737, 3814, 3824, 3849, 3862, 3896, 3916, 3919, 5250], "start": [31, 35, 39, 48, 59, 64, 193, 255, 256, 279, 280, 364, 426, 427, 450, 451, 523, 585, 586, 609, 610, 725, 849, 877, 1102, 1162, 1163, 1186, 1187, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 3723, 3728, 3738, 3739, 3782, 3789, 3811, 3830, 3845, 3918, 3993, 3997, 3998, 4004, 4008, 4027, 4028, 4029, 4075, 4078, 4079, 4081, 4084, 4088, 4089, 4091, 4094, 4097, 4098, 4100, 4103, 4106, 4107, 4109, 4112, 4115, 4116, 4118, 4121, 4124, 4125, 4127, 4130, 4133, 4134, 4136, 4139, 4142, 4143, 4145, 4148, 4151, 4152, 4154, 4264, 4813, 4829, 4830, 4915, 4922, 4952, 4955, 5021, 5023, 5042, 5045, 5117, 5236, 5237, 5239, 5244, 5352], ".time": [31, 5331, 5333, 5334, 5352, 5369, 5370], "elapsed": 31, "timed": 31, "waiting": [31, 48, 64, 5220], "_status": [31, 64, 2308, 2486, 2500, 2905, 3796, 3824, 5250], "['": [31, 51, 64, 768, 1644, 2909, 2918, 2927, 4487, 4513, 4530, 4539, 4540, 4900, 4921, 4928, 4996, 4999, 5006, 5027, 5030, 5062, 5086, 5126, 5187, 5214, 5217, 5223, 5331, 5338, 5339, 5341, 5349, 5355], "= '": [31, 64], "break": [31, 48, 64, 201, 372, 531, 923, 1110, 1715, 3834, 5331], ".sleep": 31, "(wait": 31, "(timeout": 31, "success": [31, 48, 64, 95, 188, 190, 363, 2915, 2924, 2933, 3756, 3814, 3862, 3869, 4802, 5342], "}]": [31, 64, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 1249, 1250, 1251, 1252, 1393, 1466, 1468, 1815, 1831, 1847, 1863, 4182, 4316, 4402, 4444, 4519, 4614, 4651, 4714, 4720, 4726, 4739], "_dict": [31, 64, 88, 325, 496, 655, 1232, 1901, 1902, 1956, 2001, 2035, 2072, 2135, 2154, 2180, 2235, 2608, 2660, 2867, 2886, 2887, 3824, 3995, 4010, 4032, 4084, 4354, 4595, 4879, 4938, 5193, 5339, 5362], "({": [31, 64, 198, 369, 528, 1067, 1107, 3907, 5352, 5355, 5361], "_version": [31, 39, 47, 64, 2285, 2909, 2918, 2927, 3005, 3013, 3382, 3756, 3796, 3932, 3935, 3951, 3963, 3976, 4802, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ", '": [31, 48, 1537, 2909, 2918, 2927, 4229, 4463, 4834, 4861, 4868, 5352], ".join": 31, "})": [31, 39, 64, 97, 198, 369, 528, 773, 798, 841, 1067, 1107, 1382, 1450, 1483, 1499, 1542, 3907, 3994, 4032, 4172, 4182, 4297, 4335, 4723, 4726, 4739, 4747, 4769, 5290, 5341, 5350, 5352, 5361, 5366, 5368], ".running": [31, 64, 3723, 3738, 3739, 3796], "elif": [31, 5341], ".done": [31, 64], "else": [31, 53, 64, 235, 251, 252, 285, 406, 422, 423, 456, 565, 581, 582, 615, 930, 950, 963, 978, 993, 1013, 1028, 1043, 1046, 1057, 1143, 1158, 1159, 1192, 1270, 1286, 1305, 1326, 1398, 1435, 1442, 1511, 1719, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 2397, 2411, 2425, 2439, 2453, 2467, 2511, 2524, 2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 2641, 2654, 2667, 2680, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 3730, 3799, 3906, 4755, 4763, 4778, 4784, 4792, 4799, 4907, 4912, 4926, 5275, 5280, 5281, 5299, 5304, 5311, 5316, 5323, 5328, 5341, 5342, 5355, 5359], ".error": [31, 64, 3723, 3739, 4239, 4240], "notimplementederror": [31, 64, 70, 119, 1392, 1987, 2028, 2039, 2064, 2285, 2286, 2287, 2288, 2289, 2290, 2964, 2965, 2966, 2967, 2968, 2981, 2982, 2983, 2984, 2985, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3031, 3032, 3033, 3034, 3035, 3048, 3049, 3050, 3051, 3052, 3065, 3066, 3067, 3068, 3069, 3082, 3083, 3084, 3085, 3086, 3098, 3099, 3100, 3101, 3102, 3115, 3116, 3117, 3118, 3119, 3131, 3132, 3133, 3134, 3135, 3148, 3149, 3150, 3151, 3152, 3164, 3165, 3166, 3167, 3168, 3181, 3182, 3183, 3184, 3185, 3198, 3199, 3200, 3201, 3202, 3215, 3216, 3217, 3218, 3219, 3232, 3233, 3234, 3235, 3236, 3249, 3250, 3251, 3252, 3253, 3266, 3267, 3268, 3269, 3270, 3283, 3284, 3285, 3286, 3287, 3299, 3300, 3301, 3302, 3303, 3316, 3317, 3318, 3319, 3320, 3333, 3334, 3335, 3336, 3337, 3349, 3350, 3351, 3352, 3353, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3391, 3392, 3393, 3394, 3395, 3408, 3409, 3410, 3411, 3412, 3442, 3443, 3444, 3445, 3446, 3459, 3460, 3461, 3462, 3463, 3475, 3476, 3477, 3478, 3479, 3506, 3507, 3508, 3509, 3510, 3522, 3523, 3524, 3525, 3526, 3539, 3540, 3541, 3542, 3543, 3564, 3565, 3566, 3567, 3568, 3581, 3582, 3583, 3584, 3585, 3598, 3599, 3600, 3601, 3602, 3631, 3632, 3633, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3664, 3665, 3666, 3667, 3668, 3681, 3682, 3683, 3684, 3685, 3697, 3698, 3699, 3700, 3701, 3819, 4817, 4819, 4821, 4823, 4825, 4833, 4943], "mysyncjob": 31, "re": [31, 44, 64, 920, 939, 1101, 1259, 1444, 1472, 1926, 2001, 2023, 2485, 2904, 3721, 3725, 3812, 3814, 3837, 3849, 3862, 3863, 3882, 3883, 3884, 3902, 4112, 4121, 4139, 4713, 4751, 4915, 5137, 5350], "-defined": [31, 64, 1503, 1644, 2021, 2023, 4902, 4915, 4922], "native": [31, 48, 1382, 1383, 1384, 1385, 1386, 1427, 4254, 4272, 4287, 4712], "structures": [31, 35, 2002, 2004, 2006], "flatter": 31, "patterns": [31, 64], "upgrades": [31, 64], "existing": [31, 39, 51, 64, 198, 267, 335, 336, 369, 438, 506, 507, 528, 597, 665, 666, 1001, 1107, 1174, 1242, 1243, 1648, 1649, 1710, 3752, 3790, 3792, 3793, 3794, 4229, 4915, 4922, 4938, 4961, 5331, 5333, 5334], "adjusted": [31, 64, 1472, 4432, 5143, 5151], "graceful": 31, "migration": [31, 57, 64], "eventually": [31, 4177], "biggest": [31, 64], "accesible": 31, "contained": [31, 35, 64, 180, 201, 213, 248, 372, 384, 419, 531, 543, 578, 920, 939, 1065, 1110, 1121, 1155, 1259, 1377, 1898, 1911, 1948, 1949, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 2277, 2337, 4001, 4014, 4298, 4432, 5014, 5016, 5230, 5333, 5334], "attributes": [31, 35, 39, 64, 66, 69, 75, 79, 84, 86, 88, 92, 95, 97, 101, 105, 110, 113, 118, 123, 128, 130, 133, 140, 143, 147, 156, 160, 162, 165, 172, 186, 191, 193, 364, 523, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 830, 832, 833, 841, 849, 861, 869, 877, 888, 896, 904, 919, 920, 923, 936, 939, 942, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1063, 1067, 1083, 1099, 1102, 1259, 1262, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1446, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1654, 1719, 1722, 1745, 1749, 1751, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1898, 1926, 1934, 1953, 1970, 1974, 1976, 1978, 1979, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2265, 2267, 2269, 2271, 2272, 2274, 2275, 2277, 2285, 2293, 2295, 2297, 2309, 2313, 2314, 2318, 2320, 2323, 2337, 2349, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2473, 2487, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2798, 2801, 2813, 2830, 2842, 2894, 2906, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3482, 3485, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3711, 3718, 3722, 3766, 3777, 3781, 3782, 3792, 3793, 3795, 3796, 3813, 3830, 3837, 3863, 3889, 3891, 3905, 3909, 3920, 3922, 3932, 3963, 3973, 3976, 3982, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4203, 4206, 4209, 4212, 4215, 4229, 4239, 4240, 4288, 4291, 4299, 4316, 4335, 4354, 4376, 4402, 4421, 4424, 4444, 4463, 4487, 4519, 4552, 4568, 4595, 4614, 4640, 4667, 4686, 4745, 4751, 4767, 4787, 4817, 4819, 4821, 4823, 4825, 4831, 4834, 4839, 4861, 4868, 4878, 4915, 4922, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5230, 5237, 5239, 5241, 5244, 5246, 5247, 5250, 5268, 5272], ".coupling": [31, 64, 5073, 5177, 5201, 5355], "constructed": [31, 35, 39, 53, 64, 66, 72, 99, 136, 691, 699, 707, 715, 723, 732, 741, 750, 759, 763, 768, 769, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 1401, 1472, 1526, 1640, 1644, 1682, 1722, 2015, 2016, 2119, 2798, 2865, 4376, 4502, 4531, 4568, 4577, 4579, 4595, 4626, 4640, 4645, 4873, 4874, 4964], "links": [31, 5333, 5334], "won": [31, 64, 1706, 4231], "deeper": [31, 5146], "notes": [31, 57, 798, 3782, 3793, 5123, 5341], "view": [31, 48, 64, 1682, 3782, 3793, 3834, 4519, 4614, 4758, 4759, 4766, 4780, 4781, 4786, 4794, 4795, 4801, 4908, 4909, 4914, 4931, 4932, 4940, 5286, 5300, 5301, 5306, 5312, 5313, 5318, 5324, 5325, 5330], ".operation": 31, "_names": [31, 51, 64, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4922, 4973, 5204], "expressed": [31, 48, 64, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1390, 1413, 1416, 1460, 1464, 1471, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1983, 1990, 2861, 5202], "dt": [31, 48, 64, 232, 403, 562, 923, 943, 956, 1006, 1036, 1050, 1140, 1263, 1642, 1643, 1644, 2285, 2842, 2862, 2867, 2936, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3932, 3963, 3973, 3976, 3999, 4012, 4075, 4080, 4090, 4094, 4099, 4103, 4108, 4117, 4126, 4135, 4144, 4153, 4157, 4158, 4162, 4163, 4167, 4168, 4172, 4173, 4177, 4178, 4182, 4183, 4187, 4188, 4191, 4196, 4199, 4200, 4201, 4264, 4814, 4873, 4874, 4875, 4877, 4901, 4922, 4946, 4952, 4958, 5021, 5102, 5140, 5143, 5181, 5196, 5220, 5230, 5331, 5333, 5334, 5357, 5358, 5359], ".dt": [31, 64, 5359], "dtm": [31, 64, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3932, 3963, 3976, 4874, 5359], ".dtm": [31, 5359], ".max": [31, 5331], "_date": [31, 64, 2285, 3005, 3013, 3382, 3796, 3909, 3922, 3932, 3935, 3963, 3976], ".online": 31, "instructiondurations": [31, 64, 1644, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4874, 4875, 4876, 4877, 4901, 4925, 4949, 4955, 5077, 5143, 5196, 5230], ".instruction": [31, 39, 64, 211, 253, 276, 336, 382, 424, 447, 507, 541, 583, 606, 666, 928, 929, 932, 933, 948, 949, 952, 953, 961, 962, 965, 967, 976, 981, 982, 991, 995, 996, 1011, 1012, 1015, 1017, 1026, 1027, 1031, 1032, 1041, 1042, 1045, 1047, 1120, 1160, 1183, 1243, 1268, 1269, 1272, 1274, 1283, 1285, 1289, 1290, 1303, 1304, 1308, 1309, 1324, 1328, 1329, 1433, 1434, 1437, 1438, 1509, 1510, 1513, 1514, 1649, 1661, 1662, 1693, 1706, 1710, 1725, 1761, 1766, 1767, 1777, 1779, 1782, 1783, 1792, 1797, 1798, 1807, 1811, 1812, 1821, 1822, 1826, 1827, 1837, 1838, 1842, 1843, 1853, 1854, 1858, 1859, 1869, 1870, 1874, 1875, 1887, 1892, 1893, 2394, 2399, 2400, 2408, 2413, 2414, 2422, 2427, 2428, 2436, 2441, 2442, 2450, 2455, 2456, 2464, 2469, 2470, 2509, 2513, 2514, 2522, 2526, 2527, 2535, 2539, 2540, 2548, 2552, 2553, 2561, 2565, 2566, 2574, 2578, 2579, 2587, 2591, 2592, 2600, 2604, 2605, 2613, 2617, 2618, 2626, 2630, 2631, 2639, 2643, 2644, 2652, 2656, 2657, 2665, 2669, 2670, 2678, 2682, 2683, 2691, 2695, 2696, 2704, 2705, 2708, 2709, 2717, 2718, 2721, 2722, 2730, 2731, 2734, 2735, 2743, 2744, 2747, 2748, 2756, 2757, 2760, 2761, 2769, 2770, 2773, 2774, 3982, 4332, 4351, 4376, 4384, 4418, 4460, 4595, 4599, 4640, 4649, 4683, 4702, 4922, 4923, 4933, 5359], "_durations": [31, 48, 64, 1644, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4873, 4877, 4901, 5196, 5230], ".defaults": [31, 64, 1641, 5357, 5359], "t1": [31, 64, 5359], ".qubit": [31, 64, 4037, 5359], "t2": [31, 5359], "[\"": [31, 64, 3907, 5226, 5355], "\"]": [31, 53, 64, 3779, 3789, 3907, 4487, 5355, 5366], "[(": [31, 64, 2813, 2887, 4229, 4928, 5339, 5341, 5366, 5370], "rate": [31, 33, 64, 683, 773, 849, 850, 877, 878, 1642, 1643, 3963, 4878, 4964, 5033, 5217], "separately": [31, 48, 64, 197, 368, 527, 1063, 1106, 4297], "_length": [31, 64, 1644, 2808, 2848, 2852, 4842, 4922, 5220, 5331, 5354, 5359, 5365], "duration": [31, 35, 39, 64, 232, 279, 403, 450, 562, 609, 923, 943, 956, 970, 986, 999, 1006, 1020, 1036, 1050, 1140, 1186, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1644, 1668, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2798, 2842, 3927, 3941, 3993, 4008, 4020, 4025, 4026, 4036, 4037, 4075, 4077, 4084, 4087, 4094, 4096, 4103, 4105, 4112, 4114, 4121, 4123, 4130, 4132, 4139, 4141, 4148, 4150, 4157, 4159, 4162, 4164, 4167, 4169, 4172, 4174, 4177, 4182, 4184, 4187, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4206, 4221, 4264, 4751, 4814, 4873, 4875, 4877, 4878, 4901, 4922, 4923, 4925, 4958, 4960, 5102, 5104, 5140, 5143, 5196, 5198, 5202, 5222, 5230, 5331, 5333, 5334, 5358, 5359], ".:": [32, 2337, 4884, 4886], "classes": [33, 35, 44, 54, 64, 1380, 2024, 2032, 2068, 2204, 2248, 2261, 2275, 2277, 2285, 2293, 2313, 2334, 2360, 2373, 2386, 2487, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4896, 4917, 5235, 5250, 5283, 5331, 5333, 5334], "built": [33, 35, 45, 51, 53, 64, 523, 682, 814, 912, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1936, 1941, 1942, 1944, 3902, 4031, 4915, 5006], "mimic": [33, 2323, 2349], "behaviors": [33, 48], "snapshots": [33, 64, 3757, 4148, 4803, 5331], "useful": [33, 53, 64, 140, 142, 143, 150, 151, 165, 168, 169, 172, 175, 176, 207, 235, 288, 378, 406, 459, 537, 565, 618, 841, 849, 877, 1116, 1143, 1195, 1372, 1923, 3905, 3963, 4042, 4712, 5033, 5278, 5281, 5350], "testing": [33, 53, 64, 1380, 2813], "performing": [33, 64, 852, 1392, 1935, 2323, 2349, 2867, 2875, 4568], "fakemanilav": [33, 3333, 3334, 3335, 3336, 3337, 3338, 3339], "\u2500\u2591": [33, 64, 1102, 1376, 1379, 1388, 1441, 1456, 1503, 1537, 1563, 5120, 5348, 5352, 5354, 5366], "\u2500\u2524m": [33, 48, 62, 64, 1102, 1650, 5348, 5350, 5353, 5354, 5367], "\u2514\u2565": [33, 48, 62, 64, 1102, 1650, 4958, 5021, 5350, 5353, 5354, 5366], "\u2591\u2500": [33, 64, 1102, 1376, 1379, 1388, 1503, 1537, 5120, 5348, 5352, 5354, 5366], "\u2500\u256b": [33, 48, 62, 64, 1102, 1650, 5348, 5352, 5353, 5354, 5366, 5367], "\u256b\u2500": [33, 64, 1102, 1650, 5348, 5352, 5354, 5366], "/\u2550": [33, 48, 62, 64, 1067, 1102, 1650, 4958, 5021, 5348, 5350, 5352, 5353, 5366, 5367], "\u2550\u2550": [33, 48, 62, 64, 211, 382, 541, 1067, 1102, 1120, 1650, 4958, 5021, 5348, 5350, 5352, 5353, 5354, 5366, 5367], "\u2569\u2550": [33, 62, 64, 1102, 1650, 5348, 5350, 5352, 5353, 5354, 5366, 5367], "\u2550\u2569": [33, 48, 62, 64, 1067, 1102, 4958, 5021, 5348, 5350, 5353, 5354, 5366, 5367], "transpiled": [33, 35, 64, 1644, 1926, 2888, 2890, 2891, 2892, 3718, 4432, 5253, 5257, 5286, 5333, 5334, 5352, 5358], "phase": [33, 35, 39, 44, 48, 64, 66, 69, 86, 92, 97, 103, 104, 105, 110, 115, 116, 117, 118, 136, 137, 138, 139, 140, 142, 143, 145, 193, 216, 224, 328, 364, 387, 395, 499, 523, 546, 554, 658, 877, 1102, 1124, 1132, 1235, 1318, 1336, 1342, 1345, 1352, 1357, 1362, 1369, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1412, 1441, 1447, 1450, 1456, 1457, 1458, 1459, 1461, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1496, 1503, 1517, 1519, 1522, 1524, 1533, 1535, 1537, 1539, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1559, 1560, 1563, 1564, 1567, 1586, 1654, 1668, 1722, 1926, 1936, 2819, 2858, 2859, 3999, 4012, 4039, 4046, 4052, 4054, 4103, 4121, 4139, 4162, 4191, 4196, 4199, 4200, 4201, 4264, 4299, 4421, 4423, 4430, 4463, 4472, 4487, 4491, 4499, 4502, 4513, 4519, 4525, 4529, 4568, 4614, 4617, 4626, 4634, 4636, 4637, 4645, 4732, 4733, 4915, 4958, 5021, 5077, 5143, 5217, 5239, 5244, 5294, 5295, 5307, 5319, 5331, 5345, 5353, 5357, 5361, 5366, 5372], "\u03c0/": [33, 64, 5350], "ancilla": [33, 64, 193, 255, 256, 262, 264, 364, 426, 427, 433, 435, 523, 585, 586, 592, 594, 920, 1102, 1162, 1163, 1169, 1171, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1415, 1417, 1419, 1421, 1422, 1424, 1425, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5014, 5083, 5089, 5199, 5231, 5232, 5239, 5244], "\u2510\u250c": [33, 48, 64, 211, 382, 541, 1102, 1120, 1342, 1374, 1376, 1379, 1388, 1450, 1456, 1468, 1503, 1537, 1550, 1563, 1567, 1586, 4958, 5021, 5093, 5163, 5352, 5361, 5362, 5367], "\u252c\u2500": [33, 64, 288, 459, 618, 970, 1195, 1339, 1343, 1354, 1360, 1362, 1364, 1367, 1376, 1410, 1586, 5361, 5362], "rz": [33, 48, 63, 64, 295, 345, 466, 516, 625, 675, 1202, 1252, 1345, 1352, 1357, 1376, 1379, 1386, 1450, 1456, 1459, 1496, 1498, 1501, 1533, 1537, 1539, 1542, 1556, 1558, 1564, 1650, 1970, 2801, 2909, 2918, 2927, 4229, 5130, 5133, 5166, 5226, 5237, 5332, 5333, 5334, 5335, 5339, 5350, 5352, 5354, 5355, 5361, 5362], "(\u03c0": [33, 64, 1373, 1456, 1480, 5350], "\u251c\u2524": [33, 64, 211, 382, 541, 1120, 1342, 1374, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1503, 1537, 1550, 1563, 1567, 4958, 5021, 5093, 5353, 5361, 5362, 5367], "\u2591\u2500\u2524": [33, 64, 1067, 5354, 5366], ".tools": [33, 45, 235, 406, 565, 1143, 5281, 5286, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "(transpiled": [33, 64, 3718, 5358], "obtained": [33, 64, 103, 144, 145, 191, 904, 1472, 1551, 1642, 1643, 2031, 2808, 2816, 2826, 2842, 2884, 2915, 2924, 2933, 4304, 4310, 4321, 4331, 4340, 4350, 4354, 4359, 4369, 4407, 4417, 4429, 4440, 4449, 4459, 4482, 4519, 4557, 4564, 4574, 4590, 4672, 4682, 4691, 4701, 5236], "past": [33, 64, 683, 5335], "few": [33, 48, 64, 103, 262, 264, 433, 435, 592, 594, 734, 1169, 1171, 1922, 5178], "years": [33, 64], "ago": 33, "representative": [33, 64, 2001], "latest": [33, 64, 1003, 3812, 3813, 3818, 4008, 4028, 4212], "behaviours": 33, "mimicking": 33, "simulations": [33, 64, 75, 79, 95, 113, 120, 123, 2323, 2349], "compare": [33, 64, 1398, 1468, 1721, 1746, 1748, 1750, 1752, 1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 4282], "mimics": [33, 64, 5355], "calibration": [33, 39, 54, 60, 64, 186, 193, 247, 364, 418, 523, 577, 877, 1102, 1154, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1654, 1678, 1722, 4219, 4246, 4248, 4878, 5123, 5146, 5149, 5150, 5151, 5152, 5155, 5156, 5157, 5158, 5161, 5162, 5220, 5230, 5234, 5239, 5244, 5250, 5252, 5253, 5268, 5269, 5270, 5271, 5272, 5273, 5274], "_manila": [33, 64, 3323, 3332], "_sim": [33, 64, 2337, 5347, 5348], "backendv": [33, 64, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2808, 2909, 2927, 3005, 3013, 3382, 3718, 3891, 4902, 4923], "purposes": [33, 1453, 4075, 4094, 4103, 4148, 5217], "schema": [34, 35, 64, 2485, 3720, 3721, 3725, 3757, 3888, 4803], "-conformant": 34, "-pulse": [35, 64], "kit": 35, "lower": [35, 48, 64, 165, 172, 212, 237, 383, 408, 542, 567, 683, 717, 765, 769, 896, 1342, 1373, 1377, 1441, 1450, 1456, 1471, 1537, 1550, 1563, 1567, 2311, 2933, 3932, 3976, 4712, 5108, 5226], "offers": [35, 64], "greatest": [35, 48], "performance": [35, 48, 64, 130, 147, 165, 172, 806, 1462, 1706, 2323, 2349, 2363, 2376, 3881, 5235], "requires": [35, 48, 51, 53, 64, 165, 172, 186, 235, 262, 264, 406, 433, 435, 565, 592, 594, 683, 849, 877, 1072, 1088, 1143, 1169, 1171, 1407, 1410, 1475, 1479, 2012, 2016, 2323, 2349, 3784, 3785, 3786, 3932, 3963, 3976, 4021, 4030, 4034, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4084, 4195, 4717, 4961, 5281, 5284, 5285, 5291, 5292, 5293, 5294], "answers": 35, "physicist": 35, "exact": [35, 64, 181, 186, 357, 362, 849, 877, 1378, 1644, 1722, 1985, 1996, 2001, 2805, 3993, 4103, 4708, 4709, 4821, 4873, 4900, 4921, 4922, 5226, 5250], "dynamics": [35, 2337, 4103], "especially": [35, 48, 53, 64, 806, 4032, 4182, 4928], "powerful": [35, 64, 2024, 2032], "-ordered": [35, 64, 3993, 4008], "signals": [35, 64, 147, 165, 172, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4065, 4922, 4958, 5091, 5220], "scheduled": [35, 48, 64, 193, 280, 281, 364, 451, 452, 523, 610, 611, 1102, 1187, 1188, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1642, 1643, 2842, 3816, 3993, 4008, 4025, 4026, 4027, 4028, 4029, 4075, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4221, 4894, 4948, 4951, 4954, 4957, 4958, 4960, 5021, 5023, 5077, 5079, 5142, 5143, 5145, 5239, 5244, 5333, 5334], "resources": [35, 64, 201, 213, 372, 384, 531, 543, 1063, 1110, 1121, 2265, 2266, 2268, 2269, 2270, 2273], "recover": [35, 64, 103, 105, 143, 145, 1393], "explore": [35, 64, 5193], "correct": [35, 48, 54, 64, 105, 185, 187, 255, 256, 361, 426, 427, 585, 586, 920, 923, 939, 943, 956, 1006, 1036, 1050, 1162, 1163, 1259, 1263, 1465, 2914, 2923, 2932, 3725, 4973, 4987, 4990, 5340], "holds": [35, 53, 64, 1922, 2008, 2025, 2055, 2063, 2168, 2265, 2269, 3935, 5014, 5250], "various": [35, 48, 53, 64, 682, 936, 1911, 1948, 1949, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 5338], "operands": [35, 39, 64, 97, 347, 518, 677, 936, 1254, 1640, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 5003], "included": [35, 64, 72, 93, 99, 111, 116, 121, 142, 157, 163, 253, 270, 424, 441, 583, 600, 789, 1102, 1160, 1177, 1644, 1929, 2056, 3723, 3738, 3739, 3779, 3789, 3880, 4229, 4896, 4917, 5006, 5033, 5230, 5283], "operand": [35, 64, 4121, 4139, 5295, 5319], "implicitly": [35, 39, 64, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 1464, 1466, 1468, 1906, 1935, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4008, 4103, 4552, 4922, 5143], "shiftphase": [35, 39, 64, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 5357, 5359], "instantiated": [35, 64, 105, 140, 144, 1083, 2862, 4075, 4182], "(phase": [35, 64, 5357, 5366], "hand": [35, 64, 187, 188, 190, 210, 238, 363, 381, 409, 540, 568, 1119, 1145, 1475, 3760, 4805], "explicit": [35, 64, 2813, 4218, 5231], "base": [35, 39, 53, 58, 64, 191, 193, 343, 344, 345, 514, 515, 516, 673, 674, 675, 822, 970, 977, 984, 1000, 1001, 1003, 1034, 1250, 1251, 1252, 1294, 1314, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1381, 1412, 1415, 1419, 1421, 1424, 1480, 1718, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 1898, 1949, 1979, 1990, 2006, 2013, 2017, 2023, 2024, 2032, 2265, 2267, 2275, 2276, 2293, 2294, 2296, 2309, 2313, 2314, 2317, 2319, 2893, 3716, 3735, 3743, 3770, 3776, 3826, 3839, 3891, 3906, 3925, 4238, 4719, 4723, 4739, 4742, 4823, 4868, 4946, 4952, 5239, 5241, 5246, 5331], "smallest": [35, 48, 64, 133, 143, 1472, 2323, 2349], "schedulable": 35, "unit": [35, 64, 232, 279, 280, 281, 403, 450, 451, 452, 562, 609, 610, 611, 769, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1140, 1186, 1187, 1188, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1644, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 3999, 4012, 4041, 4158, 4163, 4168, 4173, 4178, 4183, 4187, 4188, 4549, 4550, 4551, 4875, 5196, 5235, 5244, 5246, 5259, 5262, 5331], "fixed": [35, 39, 849, 877, 1067, 1342, 1373, 1398, 1550, 1563, 3720, 4103, 4394, 4395, 4608, 4609, 4660, 4661, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4839, 4915, 4922, 4930, 5062, 5086, 5233, 5234, 5362], "initializer": [35, 64, 773, 877, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3474, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 4946, 4949, 4952, 4955, 4964, 4970, 4985, 4988, 4991, 5011, 5018, 5024, 5033, 5068, 5071, 5077, 5086, 5089, 5108, 5117, 5123, 5129, 5134, 5143, 5175, 5178, 5184, 5190, 5196, 5199, 5211, 5257], "argument": [35, 48, 51, 53, 64, 66, 76, 80, 85, 91, 92, 96, 97, 99, 102, 103, 105, 106, 114, 118, 124, 129, 141, 161, 172, 192, 232, 240, 403, 411, 562, 570, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 831, 836, 844, 849, 855, 864, 872, 877, 882, 891, 899, 907, 920, 939, 1063, 1140, 1147, 1259, 1342, 1399, 1526, 1644, 1926, 2008, 2337, 2830, 2867, 2886, 2887, 3704, 3725, 3999, 4012, 4086, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4463, 4568, 4811, 4830, 4873, 4915, 4930, 4973, 5202, 5230, 5250, 5260, 5331, 5335, 5342], "display": [35, 64, 761, 1448, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2848, 2889, 3932, 3963, 3976, 4075, 4094, 4103, 4121, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4481, 5262, 5280, 5335, 5342, 5343], "pulseerror": [35, 64, 3983, 3984, 3985, 3991, 3993, 4003, 4006, 4009, 4013, 4014, 4016, 4075, 4084, 4103, 4148, 4159, 4161, 4164, 4166, 4169, 4171, 4172, 4174, 4176, 4181, 4182, 4184, 4186, 4195, 4219, 4220, 4221, 4223, 4224], "negative": [35, 39, 64, 103, 187, 773, 1349, 1351, 1353, 1378, 1388, 1475, 1490, 1495, 1500, 1502, 1559, 4219, 4714, 4720, 4726, 4964], "waveforms": [35, 64, 3999, 4008, 4012, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4246, 5295, 5307, 5319, 5331], "programmer": [35, 4182], "symbolicpulse": [35, 64, 4157, 4162, 4167, 4172, 4177, 4183, 4184, 4185, 4186, 5331], "stores": [35, 64, 3791, 4182, 4873], "flexibility": [35, 48, 64, 1388, 4177], "express": [35, 64, 5133, 5345], "rapid": 35, "prototyping": 35, "inefficient": [35, 48, 2216, 4241], "-size": 35, "processors": [35, 4958], "instantiate": [35, 64, 2337, 3718, 4121, 4139, 4182, 4249, 4252, 4255, 4258, 4261, 4264, 4270, 4276, 4282, 4288, 4291, 4294, 5362], "array": [35, 39, 51, 64, 82, 126, 131, 134, 140, 147, 148, 165, 166, 172, 173, 182, 253, 255, 256, 276, 328, 342, 353, 358, 364, 424, 426, 427, 447, 499, 513, 583, 585, 586, 606, 658, 672, 763, 877, 1160, 1162, 1163, 1183, 1235, 1249, 1372, 1387, 1396, 1401, 1444, 1475, 1476, 1563, 2122, 2204, 2248, 2252, 2261, 2271, 3757, 3905, 3932, 3957, 3963, 3976, 4159, 4164, 4169, 4174, 4184, 4187, 4241, 4335, 4380, 4389, 4422, 4423, 4424, 4463, 4470, 4485, 4487, 4490, 4491, 4493, 4497, 4499, 4502, 4509, 4515, 4516, 4518, 4519, 4521, 4522, 4523, 4524, 4528, 4535, 4541, 4542, 4544, 4547, 4551, 4568, 4584, 4591, 4592, 4604, 4614, 4616, 4617, 4618, 4619, 4623, 4630, 4636, 4637, 4639, 4644, 4655, 4686, 4717, 4739, 4743, 4747, 4769, 4802, 4803, 4813, 4830, 5242, 5244, 5248, 5263, 5277, 5280, 5285, 5286, 5288, 5289, 5337, 5340, 5341, 5347, 5350, 5353, 5361, 5364, 5368, 5370], "kind": [35, 64, 70, 119, 217, 388, 547, 1125, 1342, 1373, 1381, 1406, 1466, 1468, 1470, 1550, 2798, 2842, 3796, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "-like": [35, 64, 912, 1102, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 2084, 2813, 4244, 4390, 4398, 4605, 4656, 4664, 4758, 4759, 4773, 4780, 4781, 4787, 4794, 4795, 4903, 4908, 4909, 4931, 4932, 5239, 5244, 5300, 5301, 5312, 5313, 5324, 5325], "contrast": [35, 798], "greater": [35, 39, 64, 115, 145, 158, 1398, 2323, 2349, 2363, 2376, 2817, 2857, 2933, 3723, 3738, 3739, 3789, 3838, 3991, 4187, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4390, 4398, 4605, 4656, 4664, 5003], "efficiency": [35, 64, 1401], "price": 35, "less": [35, 64, 92, 235, 262, 264, 406, 433, 435, 565, 592, 594, 709, 773, 877, 1143, 1169, 1171, 1342, 1398, 1441, 1753, 2323, 2857, 3723, 3738, 3739, 3789, 4182, 4187, 4964, 5077, 5143, 5178, 5202, 5244, 5245, 5262, 5281], "small": [35, 64, 103, 143, 773, 849, 877, 904, 1406, 2323, 2349, 2363, 2376, 2932, 4568, 4821, 4964, 5151, 5244, 5369], "superconducting": [35, 64, 1499, 4946, 4952, 4958, 5181], "serialized": [35, 39, 64, 2809, 3905, 4182, 4206, 4297, 4298, 4819, 4823, 4825, 5042], "qpy": [35, 45, 64, 4182, 4206, 4297, 4298], "keeping": [35, 64, 1644, 3993], "-efficient": [35, 64, 877], "expression": [35, 39, 51, 64, 1067, 1071, 1072, 1076, 1077, 1081, 1083, 1087, 1088, 1092, 1093, 1096, 1097, 1277, 1291, 1310, 1462, 1551, 1989, 2009, 2010, 2013, 2018, 3995, 4010, 4157, 4159, 4162, 4164, 4167, 4169, 4172, 4174, 4182, 4184, 5342, 5343], "version": [35, 53, 69, 92, 97, 214, 385, 544, 725, 734, 841, 912, 975, 1025, 1122, 1282, 1302, 1334, 1336, 1337, 1340, 1346, 1358, 1360, 1362, 1365, 1388, 1390, 1408, 1413, 1416, 1460, 1487, 1492, 1497, 1520, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 2059, 2275, 2277, 2285, 2293, 2297, 2313, 2314, 2320, 2323, 2337, 2349, 2363, 2376, 2473, 2487, 2888, 2894, 2906, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3482, 3485, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3718, 3721, 3725, 3748, 3796, 3891, 3905, 3932, 3935, 3951, 3963, 3976, 4589, 4802, 4964, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "agnostic": [35, 64, 5235], "underlying": [35, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 257, 258, 262, 263, 264, 268, 273, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 428, 429, 433, 434, 435, 439, 444, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 587, 588, 592, 593, 594, 598, 603, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 679, 680, 681, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1152, 1156, 1157, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1256, 1257, 1258, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1701, 1898, 1899, 1905, 1906, 1916, 1918, 1939, 1953, 1954, 1958, 1959, 1966, 2018, 2024, 2025, 2028, 2031, 2032, 2033, 2038, 2039, 2050, 2055, 2056, 2060, 2063, 2064, 2067, 2068, 2069, 2070, 2074, 2075, 2083, 2084, 2085, 2088, 2089, 2095, 2097, 2098, 2101, 2102, 2109, 2112, 2113, 2116, 2117, 2129, 2132, 2133, 2137, 2138, 2150, 2153, 2161, 2162, 2163, 2177, 2178, 2182, 2194, 2195, 2196, 2198, 2205, 2208, 2209, 2211, 2220, 2221, 2223, 2224, 2229, 2231, 2232, 2233, 2237, 2238, 2249, 2252, 2253, 2255, 2263, 2482, 4487, 4497, 4506, 4519, 4528, 4533, 4614, 4623, 4628, 5235], "allowing": [35, 64], "therefore": [35, 44, 48, 64, 69, 180, 849, 877, 1376, 1377, 1379, 1388, 1441, 1471, 1503, 1537, 1911, 1935, 1962, 2025, 2045, 2055, 2063, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 3811, 3823, 3868, 4182, 4873, 5014, 5108], "signal": [35, 48, 2285, 2867, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3963, 3993, 4052, 4054, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4094, 4103, 4121, 4139, 4946, 4952, 4958, 5181], "responsible": [35, 64, 2281, 2285, 2323, 2332, 2337, 2344, 2349, 2358, 2363, 2371, 2376, 2384, 2913, 2922, 2931, 2941, 2950, 2959, 2963, 2976, 2980, 2993, 2997, 3005, 3013, 3026, 3030, 3043, 3047, 3060, 3064, 3077, 3081, 3093, 3097, 3110, 3114, 3126, 3130, 3143, 3147, 3159, 3163, 3176, 3180, 3193, 3197, 3210, 3214, 3227, 3231, 3244, 3248, 3261, 3265, 3278, 3282, 3294, 3298, 3311, 3315, 3328, 3332, 3344, 3348, 3361, 3365, 3378, 3382, 3390, 3403, 3407, 3420, 3429, 3437, 3441, 3454, 3458, 3470, 3474, 3492, 3501, 3505, 3517, 3521, 3534, 3538, 3550, 3559, 3563, 3576, 3580, 3593, 3597, 3609, 3617, 3626, 3630, 3643, 3647, 3659, 3663, 3676, 3680, 3692, 3696, 3726, 3895, 4103, 5089], "proper": [35, 39, 57, 64, 1906, 1959, 2028, 2039, 2041, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4182, 4895, 4899, 4916, 4920], "characterized": [35, 64], "index": [35, 39, 48, 57, 64, 86, 193, 239, 253, 276, 364, 410, 424, 447, 523, 569, 583, 606, 919, 921, 940, 942, 1063, 1100, 1102, 1146, 1160, 1183, 1260, 1262, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1444, 1447, 1450, 1456, 1457, 1458, 1462, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1563, 1567, 1644, 1682, 1746, 1748, 1750, 1752, 1772, 1910, 1961, 2043, 2076, 2091, 2104, 2124, 2142, 2165, 2166, 2167, 2185, 2199, 2212, 2240, 2256, 2494, 2501, 2864, 2867, 3723, 3738, 3739, 3757, 3760, 3761, 3763, 3764, 3845, 3855, 3880, 3904, 3990, 4008, 4026, 4041, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4206, 4218, 4229, 4282, 4476, 4490, 4493, 4497, 4506, 4521, 4524, 4528, 4533, 4616, 4619, 4623, 4628, 4770, 4803, 4805, 4806, 4807, 4808, 4885, 4898, 4899, 4900, 4919, 4920, 4921, 4922, 4928, 5004, 5239, 5244, 5252, 5263, 5270, 5274, 5277, 5295, 5307, 5319, 5331, 5332, 5333, 5334, 5342, 5357, 5361], "transmit": [35, 4065, 4067], "pulsechannel": [35, 64, 1641, 3730, 4039, 4046, 4047, 4051, 4052, 4053, 4054, 4063, 4065, 4067, 4103, 4112, 4121, 4130, 4139, 5357], "receive": [35, 57, 3730, 3885, 3918, 3926, 5226], "acquirechannel": [35, 39, 64, 2286, 2964, 2981, 2998, 3006, 3014, 3031, 3048, 3065, 3082, 3098, 3115, 3131, 3148, 3164, 3181, 3198, 3215, 3232, 3249, 3266, 3283, 3299, 3316, 3333, 3349, 3366, 3383, 3391, 3408, 3442, 3459, 3475, 3506, 3522, 3539, 3564, 3581, 3598, 3631, 3648, 3664, 3681, 3697, 3964, 4000, 4001, 4013, 4014, 4020, 4021, 4048, 4062, 4075, 4219, 5357, 5359], "-signal": 35, "snapshotchannel": [35, 64, 4074, 4148], "memoryslot": [35, 39, 64, 4020, 4041, 4042, 4070, 4075, 5357], "registerchannel": 35, "novel": [35, 4182], "utilize": 35, "controlchannel": [35, 39, 64, 2287, 2862, 2864, 2867, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 3966, 4034, 4048, 4064, 5357, 5359], "pulseqobj": [35, 64, 917, 1641, 2282, 2337, 3730, 3796, 3810, 3848, 3860, 3896, 3929, 4253, 4254, 4264], "assembler": [35, 45, 64], "children": [35, 64, 3993, 4223], "abstract": [35, 51, 53, 64, 68, 78, 82, 109, 126, 155, 189, 190, 212, 237, 275, 352, 353, 354, 355, 356, 823, 825, 956, 966, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1931, 1950, 1980, 1991, 1992, 2003, 2005, 2007, 2266, 2268, 2275, 2277, 2282, 2285, 2291, 2293, 2297, 2304, 2306, 2307, 2309, 2313, 2315, 2909, 2918, 2927, 3005, 3013, 3382, 3891, 3896, 3932, 4177, 4179, 4181, 4743, 4744, 4818, 4824, 4833, 4915, 4943, 5226, 5227, 5235, 5240, 5242, 5243], "-side": 35, "responsibility": [35, 936], "drivechannel": [35, 39, 64, 2288, 2337, 2966, 2983, 3000, 3008, 3016, 3033, 3050, 3067, 3084, 3100, 3117, 3133, 3150, 3166, 3183, 3200, 3217, 3234, 3251, 3268, 3285, 3301, 3318, 3335, 3351, 3368, 3385, 3393, 3410, 3444, 3461, 3477, 3508, 3524, 3541, 3566, 3583, 3600, 3633, 3650, 3666, 3683, 3699, 3966, 3967, 3993, 4038, 4048, 4061, 4063, 4066, 4067, 4069, 4071, 4073, 5357, 5359], "line": [35, 44, 53, 64, 235, 406, 565, 761, 765, 798, 841, 1143, 1464, 2286, 2287, 2289, 2964, 2965, 2967, 2981, 2982, 2984, 2998, 2999, 3001, 3006, 3007, 3009, 3014, 3015, 3017, 3031, 3032, 3034, 3048, 3049, 3051, 3065, 3066, 3068, 3082, 3083, 3085, 3098, 3099, 3101, 3115, 3116, 3118, 3131, 3132, 3134, 3148, 3149, 3151, 3164, 3165, 3167, 3181, 3182, 3184, 3198, 3199, 3201, 3215, 3216, 3218, 3232, 3233, 3235, 3249, 3250, 3252, 3266, 3267, 3269, 3283, 3284, 3286, 3299, 3300, 3302, 3316, 3317, 3319, 3333, 3334, 3336, 3349, 3350, 3352, 3366, 3367, 3369, 3383, 3384, 3386, 3391, 3392, 3394, 3408, 3409, 3411, 3442, 3443, 3445, 3459, 3460, 3462, 3475, 3476, 3478, 3506, 3507, 3509, 3522, 3523, 3525, 3539, 3540, 3542, 3564, 3565, 3567, 3581, 3582, 3584, 3598, 3599, 3601, 3631, 3632, 3634, 3648, 3649, 3651, 3664, 3665, 3667, 3681, 3682, 3684, 3697, 3698, 3700, 3964, 3971, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4239, 4240, 4380, 4644, 4829, 4850, 5014, 5281, 5287, 5289, 5331, 5332, 5333, 5334, 5354], "driving": [35, 4061, 4063, 4065, 4067, 4069, 4071, 4073], "labeled": [35, 64, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 5268, 5272], "indexed": [35, 1682, 4839, 4922], "identified": [35, 64, 2804, 5068, 5152, 5158], "<prefix": 35, "><": [35, 2875], "prefix": [35, 39, 64, 193, 208, 364, 379, 523, 538, 920, 939, 1102, 1117, 1259, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4084, 5239, 5244, 5259, 5262, 5280, 5345, 5372], "concrete": [35, 44, 53, 64, 97, 1063, 1065, 1421, 1478, 1479], "prevented": [35, 64], "inherit": [35, 64, 4823], "unique": [35, 39, 51, 64, 210, 238, 381, 409, 540, 568, 920, 939, 1119, 1145, 1259, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1898, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2168, 2177, 2195, 2208, 2220, 2232, 2252, 2297, 2303, 2473, 2480, 2495, 2813, 2894, 2900, 3718, 3730, 3769, 3914, 4032, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4246, 4299, 4354, 4463, 4518, 4544, 4639, 4802, 4922, 4923], "sequences": [35, 64, 2936, 3708, 3730, 4026, 4203, 4206, 5003, 5018], "tracks": [35, 64, 5228], "occuring": 35, "routines": [35, 45, 48, 64], "reallocate": [35, 4204, 4207, 4210, 4213, 4216], "alignment": [35, 39, 48, 64, 1644, 4008, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4203, 4205, 4206, 4208, 4211, 4214, 4217, 4219, 4221, 4901, 4922, 4958, 4960, 5021, 5023, 5102, 5143, 5230], "policies": [35, 64], "scheduleblock": [35, 39, 64, 917, 1641, 2291, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3983, 3985, 3989, 3993, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4031, 4032, 4084, 4086, 4220, 4221, 4224, 4228, 4297, 4298, 5147, 5331], "subtypes": 35, "alignmentkind": [35, 39, 64, 4008, 4025, 4026, 4028, 4029, 4031, 4203, 4206, 4209, 4212, 4215], "_params": [35, 39, 64, 2008, 4032], "amenable": [35, 64, 1983, 1990], "equality": [35, 64, 251, 252, 347, 422, 423, 518, 581, 582, 677, 789, 861, 927, 947, 960, 974, 990, 1010, 1024, 1036, 1040, 1054, 1065, 1158, 1159, 1254, 1263, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 1905, 1958, 2038, 2058, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 4006, 4086, 4220, 5353], "checks": [35, 64, 86, 89, 97, 1401, 1403, 1680, 1681, 5062, 5086, 5092, 5102, 5146, 5250, 5266], "dsl": [35, 4031], "imperative": [35, 4031], "syntax": [35, 64, 3777, 3993], "active": [35, 64, 798, 841, 1477, 2323, 3711, 3719, 3722, 3727, 3745, 4021, 4022, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4049, 4050, 4056], "development": [35, 59, 64, 4035, 4057, 4058, 4059, 4060], "indicated": [35, 64, 172, 877], "difficulty": [35, 48], "contextually": 35, "constructs": [35, 64, 97, 1462, 2323, 2337, 2349, 4735, 4836, 4863, 4870, 5240, 5245], "emits": 35, "play": [35, 39, 64, 3993, 3999, 4008, 4012, 4030, 4041, 4047, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 5154, 5160, 5331], "series": [35, 48, 64, 1392, 1472, 4159, 4164, 4169, 4174, 4184], "pulses": [35, 64, 1539, 1542, 3973, 4025, 4026, 4067, 4112, 4121, 4139, 4177, 4182, 4206, 4219, 4222, 4255, 5151, 5154, 5157, 5160, 5202, 5226, 5237, 5366], "dc": [35, 64], ".drivechannel": [35, 39, 64, 4006, 4008, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4036, 4038, 4039, 4046, 4047, 4051, 4052, 4053, 4054, 4219, 4220, 5358], ".build": [35, 39, 64, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4041, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4220, 5356, 5357, 5358], "(name": [35, 64, 1649, 2848, 2850, 2851, 2852, 4094, 5352, 5357, 5359], "='": [35, 39, 44, 47, 48, 64, 235, 406, 565, 1143, 1318, 1376, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1465, 1472, 1477, 1503, 1555, 1640, 1649, 2001, 2323, 2349, 2363, 2376, 3737, 3777, 3779, 3789, 3832, 3834, 3909, 3922, 4033, 4297, 4463, 4644, 4829, 4922, 5281, 5283, 5286, 5288, 5289, 5290, 5293, 5331, 5333, 5334, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5349, 5352, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5364, 5365, 5367, 5369, 5370, 5372], "_programming": 35, "_in": [35, 53, 56, 64, 3718, 5349], "_prog": [35, 64, 4020, 4027, 4028, 4029, 4030, 4031, 4032, 4035, 4036, 4037, 4039, 4041, 4042, 4046, 4047, 4051, 4052, 4053, 4054, 4055, 4057, 4058, 4059, 4060], ".play": [35, 39, 64, 4006, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4039, 4041, 4046, 4219, 4220, 5154, 5160, 5356, 5357, 5358], "d0": [35, 64, 4006, 4027, 4028, 4029, 4030, 4031, 4039, 4046, 4047, 4219], "d1": [35, 2876, 4027, 4028, 4029, 4030], "d2": 35, "d3": 35, "d4": 35, "begin": [35, 64, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1379, 1389, 1394, 1450, 1459, 1466, 1468, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1522, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1939, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4172, 4195, 4386, 4463, 4519, 4614, 5342, 5345, 5347, 5348, 5350, 5355, 5361, 5367, 5368, 5372], "initialize": [35, 64, 253, 276, 424, 447, 583, 606, 822, 913, 1160, 1183, 1526, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 2277, 2285, 2323, 2329, 2337, 2341, 2349, 2355, 2363, 2376, 2798, 2801, 2842, 2862, 2909, 2918, 2927, 3005, 3013, 3382, 3891, 3932, 3935, 3951, 3954, 3957, 3963, 3973, 3976, 3979, 3982, 4003, 4016, 4246, 4267, 4285, 4299, 4316, 4335, 4354, 4361, 4376, 4402, 4421, 4424, 4444, 4463, 4487, 4519, 4552, 4568, 4595, 4614, 4640, 4645, 4667, 4686, 4745, 4767, 4894, 4901, 4915, 4973, 5096, 5105, 5205, 5214, 5217, 5268, 5272, 5332, 5350, 5355, 5364, 5369], "statements": [35, 64, 252, 423, 582, 1159], "(pulse": [35, 39, 64, 2337, 4006, 4023, 4024, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4039, 4041, 4044, 4046, 4047, 4048, 4056, 4219, 5357, 5358], ".constant": [35, 64, 4006, 4027, 4028, 4029, 4030, 4031, 4039, 4041, 4046, 4047, 4219, 4229, 4239, 4240], "initializes": [35, 64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1526, 1772, 2297, 2473, 2894, 5151, 5157], "begins": 35, "survive": 35, "exited": [35, 2265, 2269], "normal": [35, 64, 904, 1462, 1464, 5268, 5272, 5343, 5354, 5366], ".execute": [35, 45, 48, 57, 64, 3718, 4031], "style": [35, 57, 64, 235, 406, 565, 1143, 1673, 1732, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4239, 4240, 4896, 4917, 5281, 5282, 5283, 5331, 5332, 5333, 5334, 5354], "leaves": 35, "worry": [35, 64], "experimental": [35, 64, 3796, 4008, 5190], "cumbersome": 35, "enhanced": [35, 64, 1450], "prepare": [35, 54, 64, 136, 147, 165, 172, 253, 255, 256, 276, 424, 426, 427, 447, 583, 585, 586, 606, 1160, 1162, 1163, 1183, 1376, 1377, 1379, 1387, 1441, 1450, 1456, 1470, 1471, 1503, 1537, 1563, 1567, 2881, 2882, 5342], "compiling": [35, 44, 64, 2801, 4229, 5202, 5352], "representations": [35, 44, 48, 60, 64, 203, 278, 374, 449, 533, 608, 1112, 1185, 1372, 1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 2830], "long": [35, 39, 51, 64, 683, 1537, 1644, 1994, 2323, 2349, 4182, 5263, 5331], "decoupling": [35, 48, 64, 4025, 4026, 4203, 4206, 5077, 5143], "neighboring": [35, 64, 143, 682, 5077, 5143], "terminate": [35, 64], "observe": [35, 64, 1987], "prepared": [35, 104, 1387, 1388, 1503, 1526], "mixes": [35, 64], "lowered": [35, 64], ".fake": [35, 45, 48, 64, 3482, 3485, 4021, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060, 5331, 5333, 5334], "fakeopenpulse": [35, 64, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 4021, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060], "3q": [35, 64, 4037, 5205, 5207], "todo": [35, 814, 1441, 1682, 1970, 2162, 2216, 5008, 5253, 5295], "mock": [35, 64, 3005, 3013, 4031], "_prep": 35, "decoupled": [35, 64], "_bell": 35, "_and": [35, 64, 5355, 5361], "_measure": [35, 64, 2323, 2349, 3708, 3730, 5366, 5369], ".align": [35, 64, 4030, 4220, 5357], "_right": [35, 64, 2323, 4030], ".call": [35, 64], "(bell": [35, 5349, 5361, 5367], ".duration": [35, 64, 4219, 4225, 5357, 5359], ".barrier": [35, 48, 63, 64, 1102, 5120, 5163, 5331, 5333, 5334, 5345, 5347, 5348, 5352, 5354, 5372], "blend": 35, "demonstrate": 35, "features": [35, 53, 57, 832, 918, 1563, 1567, 4902, 5359], "2q": [35, 64, 3424, 4021, 4023, 4024, 4030, 4031, 4032, 4033, 4034, 4035, 4038, 4041, 4042, 4043, 4044, 4048, 4056, 4057, 4058, 4059, 4060, 4964, 4966, 5014, 5044, 5137, 5166, 5205, 5214, 5217], "gaussian": [35, 39, 64, 761, 4094, 4162, 4168, 4169, 4170, 4171, 4172, 4192, 4193, 4194, 4195, 4731, 5151, 5157, 5356, 5357], "_pulse": [35, 39, 51, 64, 2909, 2918, 2927, 3932, 3963, 3976, 4008, 4030, 4182, 5077, 5143, 5226, 5237, 5356, 5357, 5359], ".gaussian": [35, 39, 64, 4008, 4025, 4026, 4032, 5357, 5358], "'s": [35, 39, 62, 64, 4073, 4229, 4758, 4759, 4766, 4780, 4781, 4786, 4794, 4795, 4801, 4908, 4909, 4914, 4931, 4932, 4940, 5300, 5301, 5306, 5312, 5313, 5318, 5324, 5325, 5330, 5332, 5333, 5334, 5342, 5344, 5348, 5354], ".drive": [35, 64, 4041, 5331, 5356, 5357, 5359], "_channel": [35, 64, 2862, 2865, 2867, 2882, 2885, 3963, 3966, 4020, 4041, 5151, 5157, 5331, 5339, 5356, 5357], "(gaussian": [35, 64, 3993, 5356, 5357], "another": [35, 48, 54, 64, 97, 143, 158, 822, 1036, 1071, 1087, 1376, 1379, 1380, 1441, 1442, 1456, 1503, 1537, 1648, 1649, 1898, 1901, 1906, 1923, 1956, 1959, 1998, 2024, 2025, 2028, 2032, 2035, 2039, 2055, 2063, 2064, 2072, 2075, 2089, 2102, 2117, 2135, 2138, 2154, 2161, 2180, 2182, 2198, 2211, 2224, 2232, 2235, 2238, 2255, 2814, 2818, 2826, 2868, 2883, 3814, 3862, 3901, 3995, 4003, 4010, 4016, 4030, 4048, 4220, 4301, 4305, 4310, 4318, 4322, 4331, 4337, 4341, 4350, 4356, 4360, 4369, 4404, 4408, 4417, 4426, 4431, 4440, 4446, 4450, 4459, 4465, 4466, 4467, 4474, 4482, 4489, 4492, 4494, 4498, 4501, 4514, 4525, 4529, 4530, 4540, 4554, 4558, 4564, 4571, 4576, 4590, 4620, 4624, 4625, 4635, 4640, 4669, 4673, 4682, 4688, 4692, 4701, 4843, 4858, 4882], "previous": [35, 48, 64, 82, 126, 131, 134, 148, 165, 166, 169, 172, 173, 693, 709, 773, 904, 1101, 1379, 2001, 3923, 5018, 5083, 5353], "statement": [35, 64, 240, 252, 411, 423, 570, 582, 1147, 1159], "plays": 35, "align": [35, 64, 4008, 4025, 4026, 4027, 4028, 4029, 4030, 4203, 4204, 4207, 4209, 4210, 4212, 4213, 4215, 4216, 4219], "_left": [35, 64, 2323, 4220], "sequential": [35, 814, 833, 861, 4029, 4031, 4215], "sequentially": [35, 1453, 4008, 4029, 4215], "due": [35, 48, 64, 92, 136, 918, 1345, 1352, 1357, 3814, 3862, 3865, 4030, 4162, 4810, 4958, 5023, 5210, 5213, 5259, 5262], "_sequential": [35, 64, 4030, 4203, 4206, 4209, 4212, 4215], "nest": [35, 64], "child": [35, 64, 2204, 2248, 2261, 3782, 3993], "-schedule": [35, 48, 4026, 4206], "internal": [35, 39, 54, 64, 322, 493, 652, 936, 970, 1229, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1401, 1412, 1415, 1419, 1421, 1424, 1466, 1468, 1932, 2054, 2176, 2220, 2251, 2323, 3732, 4298, 4354, 4388, 4463, 4595, 4603, 4654, 5259, 5262], "timing": [35, 48, 64, 1644, 4006, 4008, 4219, 4901, 4922, 4937, 4958, 4960, 5143, 5198, 5222, 5230], "relative": [35, 64, 833, 896, 1336, 1345, 1352, 1357, 1478, 1479, 2126, 2825, 2830, 2838, 4008, 4075, 4080, 4084, 4090, 4094, 4099, 4103, 4108, 4112, 4117, 4121, 4126, 4130, 4135, 4139, 4144, 4148, 4153, 4192, 4219, 4400, 4430, 4578, 4582, 4588, 4645, 4915], "ends": [35, 64, 4192, 4193, 4195, 4197], "aligned": [35, 64, 4008, 4030, 4204, 4207, 4210, 4213, 4216, 4218, 4219], "late": [35, 48, 64, 1644, 4028, 4815, 4946, 4949], "shift": [35, 64, 143, 145, 328, 499, 658, 1235, 1372, 2001, 4007, 4008, 4039, 4046, 4053, 4054, 4083, 4093, 4102, 4111, 4120, 4129, 4130, 4138, 4139, 4147, 4156, 4219, 4220, 4958, 5021, 5263, 5341, 5348, 5362], ".shift": [35, 64, 4220, 5357], "_phase": [35, 39, 64, 105, 140, 143, 146, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1722, 2858, 2859, 4039, 4220, 4568, 4732, 5239, 5244, 5331], "(math": [35, 64, 4046, 4052, 4054, 4922, 5344], ".delay": [35, 48, 64, 4946, 4949, 4952, 4955, 5357], "store": [35, 39, 48, 64, 105, 140, 267, 285, 438, 456, 597, 615, 689, 1174, 1192, 1392, 1480, 1926, 2323, 2349, 2363, 2376, 3752, 3783, 3794, 3932, 3963, 3976, 4020, 4041, 4075, 4264, 4282, 4297, 4751, 5338, 5339, 5345, 5372], ".acquire": [35, 64, 4219, 5331, 5357, 5359], ".memoryslot": [35, 64, 4020, 4041, 4219], "belong": [35, 64, 904], "cycles": [35, 4036, 4037, 4075], "lazily": [35, 2025, 2055, 2063], "inserting": [35, 48, 64, 1503, 2798, 4506, 4533, 4628, 4958, 5157, 5178], "correspond": [35, 64, 140, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 1249, 1250, 1251, 1252, 1342, 1550, 1654, 1722, 1988, 2271, 2274, 4037, 4219, 4363, 4402, 4433, 4747, 4749, 4769, 4771, 4839, 5003, 5089], "calling": [35, 64, 231, 240, 252, 253, 347, 402, 411, 423, 424, 518, 561, 570, 582, 583, 677, 927, 947, 960, 974, 977, 990, 1010, 1024, 1040, 1054, 1065, 1139, 1147, 1159, 1160, 1182, 1254, 1267, 1281, 1300, 1323, 1432, 1472, 1508, 1551, 1641, 1758, 1772, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 1932, 1969, 1989, 2024, 2032, 2337, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 2867, 3796, 3909, 4030, 4035, 4057, 4058, 4059, 4060, 4084, 4354, 4958, 5261], "preexisting": [35, 64], "tmp": [35, 64], "_sched": [35, 64, 4026, 4219], "(tmp": 35, "_frequency": [35, 64, 2936], "0e": [35, 2867, 5350, 5361, 5362], "offset": [35, 64, 1399, 1406, 1475, 1476, 3999, 4012, 4039, 4046, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5263, 5331, 5333, 5334, 5341, 5357], ".phase": [35, 64, 138, 139, 1462, 5331, 5342, 5343, 5357], "_offset": [35, 64, 5331, 5333, 5334, 5357], "taste": 35, "capabilities": [35, 64, 5226], "respective": [35, 64, 74, 101, 1472, 2008, 4192, 4224, 5362], "fakearmonk": [35, 64, 2337, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979], "(d": [35, 44, 1934, 4027, 4028, 4029, 4030, 4195], "temp": 35, "(temp": 35, "aware": [35, 64, 103, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4915, 4958, 5033, 5220, 5331], "mem": [35, 64, 4020, 4041, 4075, 4219, 5357], "(mem": 35, "versions": [35, 45, 64, 1003, 2277, 2297, 4297], "calibrate": [35, 850, 878], "sched": [35, 64, 3993, 4006, 4032, 4094, 4219, 4220, 4228, 5331, 5357, 5359], "gather": 35, "{}": [35, 1399, 4389, 4655, 5338, 5368, 5369, 5370], "'.": [35, 4389, 4655, 5338, 5369], ".samples": 35, "_seconds": 35, ".'": [35, 57, 64, 4810, 5340], ".seconds": 35, "_samples": [35, 64, 2323, 2349, 5357], "message": [35, 53, 57, 64, 65, 1316, 1317, 1718, 1919, 2276, 2294, 2296, 2317, 2319, 2893, 3712, 3713, 3714, 3715, 3716, 3717, 3733, 3734, 3735, 3742, 3743, 3755, 3770, 3771, 3772, 3774, 3775, 3776, 3825, 3826, 3827, 3828, 3829, 3839, 3840, 3841, 3842, 3843, 3844, 3913, 3926, 3960, 4238, 4810, 4944, 4945, 5261, 5279, 5355, 5369], "mirror": [39, 64], "serializers": 39, "pickle": [39, 64], "_serialization": [39, 64], ".dump": [39, 64, 4244], "dump": [39, 64, 4242, 4297, 4837, 4864, 4871], "load": [39, 64, 235, 406, 565, 686, 912, 1143, 2809, 3750, 4298, 4362, 5281], "respectively": [39, 53, 64, 119, 147, 912, 1102, 1381, 1406, 1444, 1466, 1468, 1470, 2024, 2867, 3718, 4299, 4354, 4463, 4519, 4614, 4726, 4839, 5230], "={": [39, 64, 235, 406, 565, 1143, 3777, 3888, 4032, 4182, 4297, 5281], "test": [39, 53, 64, 248, 419, 578, 1155, 3005, 3013, 3415, 4297, 4324, 4326, 4343, 4345, 4410, 4412, 4452, 4454, 4675, 4677, 4694, 4696, 4839, 4853, 5137, 5366], "open": [39, 51, 57, 64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 2909, 2918, 2927, 3748, 3750, 3932, 3963, 3976, 4297, 4298, 4316, 4335, 4402, 4444, 4667, 4686, 5151, 5157, 5356], "wb": [39, 64, 4297], "fd": [39, 64, 4297, 4298], "rb": [39, 64, 4298], "_qc": [39, 64, 5352], "(fd": [39, 64, 4298], ")[": [39, 64, 5341], "loading": [39, 64, 186, 235, 406, 565, 1143, 5281], "older": [39, 64, 3725], "hypothetical": 39, "portable": [39, 64], "cross": [39, 64, 1477, 1499, 2867, 4299, 4311, 5080, 5082, 5151, 5157, 5277], "-platform": 39, "byte": 39, "utf": [39, 64, 3832, 4829], "immediately": [39, 48, 53, 64, 3796, 3811, 3909, 3926, 3993, 4008, 4915, 5077, 5143, 5278], "followed": [39, 48, 64, 235, 253, 285, 406, 424, 456, 565, 583, 615, 781, 1143, 1160, 1192, 1342, 1376, 1379, 1380, 1480, 1503, 1550, 2808, 3838, 4765, 4785, 4800, 4821, 4913, 4967, 5169, 5190, 5281, 5305, 5317, 5329], "overall": [39, 64, 147, 165, 172, 1934, 1994, 2323, 2349, 4239, 4240, 5235], "contents": [39, 64, 97, 235, 406, 565, 1143, 3993, 4008, 4298, 5281], "struct": 39, "uint": 39, "_major": 39, "_minor": 39, "_patch": 39, "num": [39, 44, 56, 64, 69, 75, 79, 95, 100, 103, 113, 115, 120, 123, 136, 138, 139, 140, 142, 181, 183, 184, 185, 186, 193, 214, 269, 270, 271, 272, 354, 355, 356, 357, 359, 360, 361, 364, 385, 440, 441, 442, 443, 523, 544, 599, 600, 601, 602, 768, 769, 856, 883, 923, 943, 956, 970, 975, 986, 1006, 1020, 1025, 1036, 1050, 1102, 1122, 1176, 1177, 1178, 1179, 1263, 1277, 1282, 1296, 1302, 1318, 1319, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1427, 1428, 1441, 1444, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1494, 1496, 1497, 1499, 1501, 1503, 1504, 1517, 1519, 1520, 1522, 1524, 1526, 1530, 1531, 1533, 1535, 1537, 1538, 1539, 1540, 1542, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1558, 1560, 1561, 1563, 1564, 1565, 1567, 1586, 1640, 1649, 1690, 1691, 1692, 1753, 1760, 1772, 1786, 1791, 1802, 1815, 1820, 1831, 1836, 1847, 1852, 1863, 1868, 1879, 1886, 1898, 1945, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2285, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2813, 2823, 2847, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3757, 3763, 3764, 3932, 3963, 3976, 4044, 4299, 4309, 4316, 4330, 4335, 4349, 4354, 4368, 4376, 4386, 4402, 4416, 4424, 4433, 4438, 4444, 4458, 4463, 4480, 4487, 4512, 4519, 4538, 4552, 4563, 4568, 4579, 4587, 4595, 4614, 4633, 4640, 4651, 4667, 4681, 4686, 4700, 4710, 4713, 4725, 4728, 4729, 4732, 4733, 4734, 4736, 4774, 4788, 4803, 4807, 4808, 4830, 4845, 4846, 4850, 4851, 4922, 5126, 5239, 5241, 5244, 5246, 5247, 5263, 5277, 5287, 5289, 5337, 5341, 5342, 5344, 5352, 5357, 5364, 5370], "network": [39, 44, 64, 1293, 1296, 1313, 1456, 3796, 3915, 5237], "(big": 39, "endian": [39, 64, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1374, 1499, 1556, 1558], "platform": [39, 64, 4182], "payloads": [39, 64, 1641], "individual": [39, 44, 64, 1383, 1384, 1385, 1386, 1656, 1659, 1723, 1727, 1970, 2282, 2291, 2503, 2808, 2867, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3730, 3814, 3862, 3887, 3888, 3896, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4239, 4240, 4241, 4258, 4294, 4463, 4487, 4620, 4624, 4915, 5335], "dictated": 39, "padding": [39, 48, 64, 1943, 5140, 5142, 5145], "controlledgate": [39, 64, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1025, 1282, 1302, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1390, 1412, 1413, 1415, 1416, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1760, 1791, 1820, 1836, 1852, 1868], "_item": 39, "calibrations": [39, 54, 64, 193, 206, 216, 364, 377, 387, 523, 536, 546, 1102, 1115, 1124, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1722, 3982, 4267, 4269, 4273, 4279, 5146, 5149, 5151, 5155, 5157, 5161, 5239, 5244, 5359], "packed": 39, "char": 39, "stored": [39, 64, 267, 438, 597, 1063, 1102, 1174, 1376, 1379, 1401, 1441, 1448, 1450, 1456, 1503, 1537, 1563, 1567, 2160, 2168, 2177, 2195, 2208, 2252, 2323, 2349, 2363, 2376, 3750, 3753, 3754, 3778, 3781, 3788, 3792, 3983, 3993, 4008, 4041, 4042, 4224, 4299, 4354, 4568, 4614, 4915, 4958, 5137, 5220, 5252], "==": [39, 57, 64, 211, 334, 382, 505, 541, 664, 973, 1023, 1120, 1241, 1280, 1299, 1527, 1667, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2814, 4000, 4013, 4021, 4027, 4028, 4029, 4034, 4038, 4039, 4043, 4046, 4193, 4197, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4669, 4688, 4707, 5202, 5342, 5353, 5366], "saved": [39, 64, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 2323, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 3746, 3777, 3783, 3791, 3794, 4182, 4206, 5027, 5030, 5062, 5086, 5126, 5187, 5223, 5364, 5370], "deserialized": [39, 64], "analyzed": 39, "bytes": [39, 2323, 2349, 2363, 2376, 3783, 3790, 3794], "attached": [39, 64, 234, 255, 256, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 342, 343, 344, 345, 405, 426, 427, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 513, 514, 515, 516, 564, 585, 586, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 672, 673, 674, 675, 1036, 1063, 1064, 1065, 1142, 1162, 1163, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1249, 1250, 1251, 1252, 1263, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 3730, 3796, 4084, 4086, 5220, 5222], "associated": [39, 48, 64, 93, 111, 193, 251, 364, 422, 523, 581, 1102, 1158, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1661, 1662, 3762, 3781, 3782, 3792, 3793, 3822, 3823, 3867, 3868, 3983, 3993, 4008, 4026, 4034, 4042, 4048, 4063, 4075, 4946, 4952, 5014, 5023, 5033, 5181, 5239, 5244, 5331], "mapped": [39, 48, 64, 103, 143, 1400, 1466, 1468, 1667, 1945, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4880, 4948, 4951, 4954, 4957, 4963, 4964, 4966, 4972, 4984, 4987, 4990, 4991, 4993, 5079, 5095, 5117, 5119, 5123, 5180, 5192, 5232, 5234, 5355], "alignleft": [39, 4008, 4210, 4211], "alignright": [39, 64, 4008, 4213, 4214], "alignsequential": [39, 4008, 4216, 4217], "alignequispaced": [39, 4008, 4204, 4205], "alignfunc": [39, 4008, 4207, 4208], "becasue": 39, "further": [39, 60, 64, 66, 86, 262, 264, 433, 435, 592, 594, 693, 701, 709, 717, 725, 734, 743, 752, 781, 789, 798, 806, 833, 841, 861, 869, 877, 888, 896, 1169, 1171, 1387, 1466, 1468, 1537, 1641, 2025, 2055, 2063, 2162, 2337, 4316, 4335, 4402, 4444, 4667, 4686, 5003, 5143, 5214, 5217], "consist": [39, 44, 64, 1477, 2888], "nested": [39, 64, 1468, 2025, 2032, 2055, 2063, 3993, 4204, 4207, 4210, 4213, 4216, 4223, 4751, 5287], "unified": [39, 64, 3834], "uniquely": [39, 64, 3769, 4922], "determied": 39, "setfrequency": [39, 64, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 5357], "shiftfrequency": [39, 64, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138], "setphase": [39, 64, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129], "relativebarrier": 39, "special": [39, 48, 51, 53, 64, 929, 949, 962, 992, 1012, 1027, 1042, 1056, 1269, 1285, 1304, 1318, 1325, 1376, 1380, 1434, 1447, 1510, 1538, 1779, 1808, 1822, 1838, 1854, 1870, 1898, 2001, 2334, 2360, 2373, 2386, 2396, 2410, 2424, 2438, 2452, 2466, 2510, 2523, 2536, 2549, 2562, 2575, 2588, 2601, 2614, 2627, 2640, 2653, 2666, 2679, 2692, 2705, 2718, 2731, 2744, 2757, 2770, 3993, 4084, 4239, 4240, 4712, 5077, 5143], "appear": [39, 44, 57, 64, 1372, 1943, 5169, 5342], "_param": [39, 88, 163, 693, 5193], "pack": 39, "subtype": 39, "measurechannel": [39, 64, 2289, 2967, 2984, 3001, 3009, 3017, 3034, 3051, 3068, 3085, 3101, 3118, 3134, 3151, 3167, 3184, 3201, 3218, 3235, 3252, 3269, 3286, 3302, 3319, 3336, 3352, 3369, 3386, 3394, 3411, 3445, 3462, 3478, 3509, 3525, 3542, 3567, 3584, 3601, 3634, 3651, 3667, 3684, 3700, 3971, 4043, 4068, 4219, 5357, 5359], "registerslot": [39, 64, 4020, 4041, 4072, 4075, 5357], "double": [39, 64, 1371, 1526, 1947, 2323, 2712, 2808, 2813, 2830, 2845, 2847, 2848, 2856, 2857, 2858, 2859, 2860, 2861, 2932, 4606, 4613, 4686, 5285, 5364], "epsilon": [39, 64, 110, 113, 186, 255, 256, 426, 427, 585, 586, 683, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 798, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1162, 1163, 2010, 2013, 2014, 2017, 4187, 5362], "amp": [39, 64, 4008, 4032, 4094, 4157, 4162, 4167, 4172, 4182, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 5356, 5357, 5358], "_limited": 39, "ndarray": [39, 44, 64, 74, 75, 79, 84, 95, 101, 113, 120, 123, 128, 130, 133, 140, 147, 149, 150, 151, 165, 167, 168, 169, 172, 174, 175, 176, 187, 188, 190, 191, 255, 256, 328, 342, 363, 364, 426, 427, 499, 513, 523, 585, 586, 658, 672, 685, 687, 695, 696, 703, 704, 711, 712, 719, 720, 728, 729, 737, 738, 746, 747, 755, 756, 763, 764, 765, 766, 768, 769, 775, 776, 783, 784, 792, 793, 800, 801, 808, 809, 816, 817, 824, 825, 830, 835, 836, 843, 844, 849, 850, 852, 854, 855, 863, 864, 871, 872, 877, 878, 881, 882, 890, 891, 898, 899, 906, 907, 923, 943, 956, 1006, 1036, 1050, 1162, 1163, 1235, 1249, 1263, 1382, 1393, 1401, 1450, 1475, 1476, 1563, 1567, 1771, 1801, 1897, 1906, 1916, 1959, 1966, 1991, 1999, 2008, 2020, 2028, 2039, 2050, 2064, 2075, 2083, 2084, 2089, 2095, 2102, 2109, 2117, 2129, 2138, 2150, 2166, 2167, 2168, 2182, 2184, 2192, 2194, 2198, 2204, 2205, 2211, 2217, 2224, 2229, 2232, 2238, 2248, 2249, 2252, 2255, 2261, 2263, 3873, 4047, 4049, 4050, 4187, 4550, 4551, 4743, 4745, 4747, 4767, 4769, 4813, 5236, 5237, 5239, 5240, 5241, 5242, 5243, 5244, 5246, 5247, 5248, 5249, 5252, 5280, 5284, 5291, 5292, 5293, 5294], ".save": [39, 64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 5364, 5370], "iq": [39, 64, 2337, 4075], "played": [39, 103, 4029, 4103, 4112, 4139, 4182, 4187, 4203, 4206, 4215], "symbolic": [39, 53, 64, 1081, 1097, 2870, 2872, 2875, 2876, 2877, 2878, 2884, 4157, 4162, 4167, 4172, 4182, 4552, 4716], "envelope": [39, 64, 4103, 4157, 4158, 4159, 4162, 4163, 4164, 4167, 4168, 4169, 4172, 4173, 4174, 4177, 4178, 4182, 4183, 4184, 4187, 4188, 5295, 5307, 5319, 5331], "_amp": [39, 2845, 2858, 4008, 4157, 4162, 4167, 4172, 4182], "_conditions": [39, 4157, 4162, 4167, 4172, 4182, 4895, 4899, 4916, 4920], "_type": [39, 44, 64, 322, 493, 652, 1229, 1802, 2112, 2153, 2389, 2403, 2417, 2431, 2445, 2459, 3777, 3779, 3781, 3782, 3789, 3932, 3976, 4055, 4148, 4157, 4162, 4167, 4172, 4182, 4282, 5237, 5263, 5285], "gaussiansquare": [39, 64, 4173, 4174, 4175, 4176, 5154, 5160, 5357], "\u300d.": [39, 64, 328, 499, 658, 1067, 1235, 1641, 2024, 2032, 2323, 3779, 3789, 3814, 3862, 4229, 4712, 4882], "expressions": [39, 64, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1081, 1083, 1097, 1275, 1292, 1312, 1330, 1439, 1462, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1927, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 3723, 3738, 3739, 4182, 4229], ".envelope": [39, 4182], ".constraints": [39, 4182], ".valid": [39, 4182], "zlib": 39, "compression": [39, 64], "dumped": [39, 64, 4241, 5333, 5334], "lastly": 39, "-value": [39, 4902], "serializable": [39, 64, 822, 2812, 3906], "_cals": 39, "entries": [39, 64, 186, 234, 405, 523, 564, 1003, 1142, 1372, 1393, 2001, 2504, 2517, 4476, 4497, 4506, 4528, 4533, 4623, 4628, 4731, 4923, 5220, 5274, 5277, 5287, 5290], "_def": [39, 64, 2909, 2918, 2927, 3957, 3973, 4182], "integers": [39, 48, 64, 66, 75, 86, 193, 240, 280, 281, 364, 411, 451, 452, 523, 570, 610, 611, 1006, 1102, 1147, 1187, 1188, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2813, 3901, 3957, 4376, 4385, 4390, 4398, 4605, 4640, 4650, 4656, 4664, 4757, 4813, 4839, 4885, 5226, 5239, 5244, 5280], "indicates": [39, 53, 64, 1377, 1441, 1450, 1456, 1471, 1475, 1526, 1537, 1563, 1567, 1772, 2025, 2032, 2055, 2063, 2311, 3779, 3789, 3816, 4231, 4923], "pricinple": 39, "finally": [39, 48, 64, 118, 2867, 5014, 5232, 5233, 5234, 5343], "was": [39, 44, 48, 53, 57, 64, 70, 101, 145, 169, 185, 201, 213, 234, 239, 253, 255, 256, 276, 342, 356, 361, 372, 384, 405, 410, 424, 426, 427, 447, 513, 531, 543, 564, 569, 583, 585, 586, 606, 672, 763, 849, 877, 904, 928, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1110, 1121, 1142, 1146, 1160, 1162, 1163, 1183, 1249, 1268, 1283, 1303, 1324, 1433, 1509, 1661, 1662, 1710, 1717, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1926, 2162, 2277, 2285, 2297, 2298, 2323, 2394, 2408, 2422, 2436, 2450, 2464, 2488, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2830, 3005, 3013, 3382, 3722, 3757, 3797, 3808, 3814, 3910, 3935, 3942, 3945, 4231, 4432, 4773, 4787, 4803, 4838, 4865, 4872, 4873, 4896, 4917, 4930, 4976, 5016, 5070, 5086, 5108, 5178, 5204, 5214, 5217, 5227, 5238, 5283, 5361], "modified": [39, 47, 48, 64, 97, 165, 198, 238, 369, 409, 528, 568, 1107, 1145, 1537, 1710, 3823, 3868, 4006, 4019, 4193, 4197, 4394, 4395, 4608, 4660, 4661, 4866, 5014, 5062, 5082, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "_ctrl": [39, 64, 214, 385, 544, 970, 975, 1025, 1122, 1282, 1302, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1390, 1407, 1408, 1410, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1424, 1425, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1760, 1791, 1820, 1836, 1852, 1868, 1886], "ctrl": [39, 64, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1282, 1302, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1390, 1408, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1760, 1791, 1820, 1836, 1852, 1868, 1886], "_state": [39, 64, 66, 86, 88, 90, 95, 97, 98, 120, 147, 162, 163, 179, 181, 186, 193, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 357, 364, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 523, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1143, 1282, 1302, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1373, 1376, 1377, 1378, 1379, 1381, 1388, 1390, 1392, 1398, 1399, 1406, 1408, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1441, 1450, 1456, 1460, 1465, 1466, 1468, 1470, 1471, 1480, 1487, 1492, 1497, 1503, 1520, 1531, 1537, 1540, 1545, 1548, 1550, 1551, 1553, 1561, 1563, 1565, 1567, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 1983, 1990, 2024, 2323, 2349, 2582, 2712, 2842, 2845, 2858, 2861, 2909, 2918, 3818, 4229, 4380, 4644, 5281, 5339, 5340, 5343, 5348, 5349, 5350, 5355, 5364, 5370], ".ctrl": [39, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "_parameters": [39, 64, 193, 364, 523, 849, 877, 1067, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1908, 2001, 2042, 2123, 2141, 2169, 2239, 4182, 5239, 5244, 5337, 5340, 5352, 5361, 5362], "_qargs": [39, 64], "_cargs": 39, "_conditional": 39, "conditional": [39, 48, 64, 252, 270, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 423, 441, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 582, 600, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 1159, 1177, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1640, 1987, 2504, 2517, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2909, 2918, 2927, 3932, 3957, 3963, 3976, 4264, 4282, 4946, 4948, 4949, 4951, 4952, 4954, 4955, 4957, 5033, 5051, 5181], "_reg": [39, 4751], "_value": [39, 64, 88, 763, 1400, 2311, 2419, 2556, 2569, 4595, 4745, 4767, 5337, 5338, 5339, 5340, 5341, 5362], "adds": [39, 64, 235, 266, 267, 406, 437, 438, 565, 596, 597, 1143, 1173, 1174, 4835, 4862, 4869, 4880, 4881, 4967, 5146, 5281], "_gate": [39, 48, 51, 64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 4219, 4720, 4924, 5014, 5018, 5042, 5226, 5237, 5286, 5333, 5334, 5352, 5356, 5366, 5367], ".base": [39, 64], "becomes": [39, 64, 187, 1387, 3813, 4725, 5244, 5331, 5333, 5334], "_clbits": [39, 64, 193, 364, 523, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1102, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1649, 1717, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4299, 4354, 4463, 5239, 5244, 5333, 5334], "_definition": [39, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "encoded": [39, 64, 1475, 3905], "opaque": [39, 64, 1394, 5331], "determines": [39, 48, 64, 328, 499, 658, 849, 877, 1235, 1471, 1786, 1934, 2155, 2166, 3782, 3793, 4964, 5008, 5331, 5333, 5334], "'g": [39, 5341], "'i": [39, 4463, 4518, 4544], "next": [39, 64, 172, 849, 877, 943, 2060, 3833, 4819, 4823, 4825, 4868, 5263], "additionally": [39, 64, 235, 406, 565, 877, 1143, 4491, 4513, 4522, 4539, 4617, 4634, 4844, 5227, 5238, 5281, 5290, 5291, 5292, 5293, 5294], "'c": [39, 939, 4071, 5275], "indicate": [39, 64, 72, 93, 99, 111, 116, 121, 130, 133, 157, 2025, 2055, 2063, 3926, 4813, 4923], "identical": [39, 64, 4222, 4946, 4952, 5143, 5181], "(which": [39, 64], "standalone": [39, 64, 4915, 5230], "stop": [39, 57, 64, 279, 281, 450, 452, 609, 611, 806, 833, 1186, 1188, 3993, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4946, 4949], "step": [39, 48, 51, 64, 95, 169, 683, 693, 709, 761, 798, 849, 850, 861, 877, 878, 896, 1948, 1983, 2060, 3796, 3821, 4229, 5123, 5335, 5355], "reprentation": 39, "containers": 39, "fully": [39, 64, 1377, 1441, 1450, 1456, 1471, 1537, 1563, 1567, 4001, 4008, 4014, 4845, 4923], "typecasted": 39, "afterwards": [39, 44, 64, 1464, 4182], "paulievolutiongate": [39, 64, 1449, 4818, 4820, 4822, 4824, 4826, 5014], "natively": [39, 48, 64, 1934, 5158], "accomplish": [39, 5117], "'p": [39, 64, 4229, 5332], "enties": 39, "tables": [39, 64, 1380, 4487, 4519, 4525, 4529, 4530, 4540, 4614, 4620, 4624, 4625, 4635], "##": 39, "_\"": 39, "uuid": [39, 3781, 3782], "reservered": 39, "_count": [39, 64, 3845, 5338, 5339], "encoding": [39, 64, 86, 277, 448, 607, 1184, 1398, 1450, 3832, 3905, 4829], "determined": [39, 48, 64, 118, 140, 165, 172, 201, 213, 372, 384, 531, 543, 970, 1110, 1121, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1383, 1393, 1412, 1415, 1419, 1421, 1424, 1475, 2813, 2884, 3730, 4139, 4316, 4335, 4402, 4424, 4444, 4667, 4686, 5202, 5267, 5331], "'f": [39, 1381, 1399], "'e": 39, "parameterexpression": [39, 64, 193, 200, 218, 219, 220, 221, 224, 225, 226, 232, 258, 263, 268, 273, 282, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 340, 341, 364, 371, 389, 390, 391, 392, 395, 396, 397, 403, 429, 434, 439, 444, 453, 461, 462, 463, 464, 465, 466, 467, 468, 509, 510, 511, 512, 523, 530, 548, 549, 550, 551, 554, 555, 556, 562, 588, 593, 598, 603, 612, 620, 621, 622, 623, 624, 625, 626, 627, 668, 669, 670, 671, 923, 934, 943, 954, 956, 968, 983, 985, 997, 999, 1006, 1018, 1033, 1035, 1036, 1048, 1050, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1102, 1109, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1140, 1165, 1170, 1175, 1180, 1189, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1245, 1246, 1247, 1248, 1263, 1275, 1292, 1295, 1312, 1315, 1318, 1330, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1439, 1441, 1447, 1448, 1449, 1450, 1455, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1515, 1537, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1768, 1784, 1799, 1813, 1828, 1830, 1844, 1846, 1860, 1862, 1876, 1878, 1894, 1901, 1908, 1953, 1969, 2003, 2005, 2007, 2008, 2009, 2011, 2012, 2015, 2016, 2019, 2022, 2025, 2032, 2042, 2054, 2055, 2063, 2069, 2084, 2097, 2112, 2119, 2123, 2132, 2141, 2153, 2162, 2169, 2176, 2177, 2195, 2208, 2220, 2232, 2239, 2251, 2252, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 3995, 4010, 4025, 4026, 4032, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4157, 4162, 4167, 4172, 4177, 4182, 4203, 4206, 5239, 5244, 5259, 5362], "evolutionsynthesis": [39, 64, 1448, 4818, 4821, 4823], "paulisumop": [39, 64, 104, 163, 1448, 1925, 1941, 1942, 1944, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2153, 2155, 2156, 2160, 5014, 5341], "npy": 39, "parametervectorelement": [39, 64, 5337, 5340], "distinct": [39, 64, 936, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 2002, 2004, 2006], "'v": [39, 1425], "vector": [39, 44, 64, 147, 165, 172, 180, 181, 186, 187, 188, 190, 191, 253, 276, 299, 300, 306, 307, 353, 357, 362, 363, 424, 447, 470, 471, 477, 478, 583, 606, 629, 630, 636, 637, 765, 769, 833, 1101, 1160, 1183, 1206, 1207, 1213, 1214, 1393, 1475, 1526, 1772, 1778, 1905, 1906, 1916, 1958, 1959, 1966, 1994, 2024, 2028, 2038, 2039, 2050, 2064, 2074, 2075, 2083, 2088, 2089, 2095, 2101, 2102, 2109, 2116, 2117, 2129, 2137, 2138, 2150, 2182, 2184, 2194, 2198, 2205, 2211, 2218, 2220, 2223, 2224, 2229, 2237, 2238, 2249, 2252, 2255, 2263, 2323, 2349, 2363, 2376, 2504, 2517, 2595, 2712, 2777, 2778, 2784, 2785, 2872, 2874, 2883, 2884, 2914, 2923, 4182, 4299, 4376, 4389, 4463, 4490, 4493, 4519, 4521, 4523, 4524, 4568, 4604, 4614, 4616, 4618, 4619, 4640, 4655, 4686, 4718, 4739, 4747, 4769, 5239, 5240, 5242, 5243, 5244, 5248, 5249, 5284, 5285, 5341, 5370], "];": [39, 64, 931, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1271, 1288, 1307, 1327, 1436, 1512, 1666, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772], "distinguishes": 39, "distinguish": [39, 64, 4032], "mostly": [39, 64, 130, 1932, 2068, 2132, 2277, 2297], "modifies": [39, 64, 4984, 5082, 5095], "_elements": [39, 5362], "symbol": [39, 64, 923, 943, 1006, 1036, 1083, 1263, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1374, 1382, 1383, 1384, 1385, 1386, 1389, 1394, 1412, 1459, 1464, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 2878, 5295, 5319, 5331, 5333, 5334], "expr": [39, 64, 1083, 4157, 4162, 4167, 4172, 4182], "sympy": [39, 53, 64, 1081, 1083, 1097, 2869, 4182], "srepr": 39, "imediately": 39, "(both": 39, "dependent": [39, 64, 682, 2842, 4875, 5036], "similarly": [39, 64, 165, 172, 1906, 1923, 1959, 1987, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255], "precision": [39, 64, 110, 798, 861, 896, 2323, 2349, 2363, 2376, 5262, 5280, 5364, 5369], "integer": [39, 64, 97, 99, 118, 147, 156, 157, 158, 165, 197, 232, 253, 275, 276, 347, 368, 403, 424, 446, 447, 518, 527, 562, 583, 605, 606, 677, 761, 849, 877, 923, 943, 956, 970, 1006, 1036, 1050, 1063, 1065, 1106, 1140, 1160, 1182, 1183, 1254, 1263, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1348, 1350, 1352, 1354, 1355, 1357, 1358, 1360, 1362, 1364, 1365, 1367, 1369, 1376, 1379, 1390, 1398, 1412, 1413, 1415, 1416, 1419, 1421, 1424, 1456, 1460, 1471, 1475, 1487, 1492, 1497, 1503, 1520, 1526, 1531, 1537, 1540, 1545, 1548, 1551, 1553, 1555, 1561, 1565, 1644, 1772, 2290, 2311, 2501, 2822, 2830, 2836, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3905, 4026, 4264, 4308, 4367, 4376, 4385, 4398, 4463, 4479, 4487, 4502, 4511, 4537, 4586, 4632, 4640, 4650, 4664, 4751, 4757, 4773, 4787, 4841, 4847, 4848, 4860, 4922, 4958, 4964, 5021, 5027, 5030, 5102, 5126, 5143, 5146, 5147, 5150, 5156, 5162, 5187, 5220, 5223, 5262, 5263, 5274, 5342], "section": [39, 48, 64, 97, 682, 877, 1376, 1379, 1380, 1456, 1503, 1537, 4949, 4955, 5331, 5333, 5334, 5345, 5372], "slightly": [39, 64, 5370], "_registers": [39, 64, 3932, 3957, 3963, 3976, 4241], "_instructions": [39, 64, 2801, 3932, 3976], "_custom": [39, 64, 147, 165, 172, 1994, 5340, 5356], "content": [39, 64, 347, 518, 677, 1254, 3790, 4229], "reading": [39, 64, 136, 180, 4946, 4952, 5181], "read": [39, 48, 64, 142, 145, 2001, 2798, 2842, 3814, 3862, 4298, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "structs": 39, "'q": [39, 64, 1259, 1388], "\u300fs": 39, "bits": [39, 62, 64, 103, 136, 193, 194, 203, 251, 252, 267, 285, 347, 364, 365, 374, 422, 423, 438, 456, 518, 523, 524, 533, 581, 582, 597, 615, 677, 920, 936, 939, 1036, 1063, 1102, 1103, 1112, 1158, 1159, 1174, 1192, 1254, 1259, 1263, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1690, 1700, 1701, 1802, 1935, 1937, 1939, 2272, 2389, 4241, 4282, 4299, 4354, 4463, 4743, 4744, 4747, 4749, 4769, 4771, 4774, 4788, 4811, 4892, 4922, 5023, 5169, 5239, 5244, 5276, 5333, 5334, 5342, 5345, 5347, 5348, 5372], "solely": [39, 54, 64, 118, 4973, 5268, 5272], "quantumregister": [39, 63, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 241, 245, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 273, 274, 276, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 412, 416, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 439, 444, 445, 447, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 571, 575, 579, 580, 581, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 598, 603, 604, 606, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 919, 920, 970, 1102, 1106, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1143, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1183, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1235, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1260, 1261, 1262, 1645, 1646, 1649, 1650, 2001, 4880, 4881, 4884, 4889, 5120, 5281, 5282, 5345, 5350, 5352, 5353, 5354, 5355, 5362, 5372], "(qr": [39, 63, 64, 970, 1102, 5120, 5352, 5369], ", qubit": [39, 251, 252, 347, 422, 423, 518, 581, 582, 677, 1158, 1159, 1254], "(bits": [39, 64, 251, 252, 347, 422, 423, 518, 581, 582, 677, 1158, 1159, 1254], "=bits": 39, "falls": [39, 4896, 4917, 5283], "back": [39, 44, 64, 335, 336, 506, 507, 665, 666, 1242, 1243, 1371, 1400, 1442, 1970, 3896, 4229, 4299, 4354, 4463, 4810, 4979, 5014, 5105, 5202, 5355, 5366], "prefixed": [39, 51, 64, 4751, 5024], "null": 39, "character": [39, 64, 1464, 3901, 4463, 4519, 4614, 4626, 4829], "condition": [39, 64, 186, 212, 251, 252, 347, 383, 422, 423, 518, 542, 581, 582, 677, 923, 927, 943, 947, 956, 960, 970, 974, 986, 990, 1006, 1010, 1020, 1024, 1036, 1040, 1046, 1050, 1054, 1063, 1065, 1158, 1159, 1254, 1263, 1267, 1277, 1281, 1296, 1300, 1319, 1323, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1398, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1432, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1508, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1719, 1753, 1758, 1772, 1776, 1786, 1790, 1802, 1806, 1815, 1819, 1831, 1835, 1847, 1851, 1863, 1867, 1879, 1884, 2389, 2393, 2403, 2407, 2417, 2421, 2431, 2435, 2445, 2449, 2459, 2463, 2504, 2508, 2517, 2521, 2530, 2534, 2543, 2547, 2556, 2560, 2569, 2573, 2582, 2586, 2595, 2599, 2608, 2612, 2621, 2625, 2634, 2638, 2647, 2651, 2660, 2664, 2673, 2677, 2686, 2690, 2699, 2703, 2712, 2716, 2725, 2729, 2738, 2742, 2751, 2755, 2764, 2768, 4013, 4014, 4182, 4282, 4490, 4493, 4521, 4524, 4616, 4619, 4834, 4894, 5355], "_arg": 39, "'n": 39, "dictate": [39, 64], "tweak": 39, "follwing": 39, "imag": 39, "https": [39, 48, 53, 57, 58, 64, 97, 116, 147, 156, 234, 255, 256, 342, 343, 344, 345, 405, 426, 427, 513, 514, 515, 516, 564, 585, 586, 672, 673, 674, 675, 693, 701, 709, 717, 725, 761, 781, 798, 806, 814, 833, 841, 861, 869, 888, 896, 904, 1142, 1162, 1163, 1249, 1250, 1251, 1252, 1332, 1336, 1472, 1475, 1478, 1479, 1526, 1732, 1815, 1831, 1847, 1863, 1974, 1976, 2162, 2482, 2909, 2918, 2927, 3993, 4847, 4848, 5099, 5117, 5146, 5151, 5259, 5262, 5283, 5342, 5355, 5370], ".ietf": 39, "/html": [39, 57], "/rfc": 39, "/doc": [39, 57, 64, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896], "/stable": [39, 64], "/reference": [39, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896], "/generated": [39, 709, 717, 806, 814, 833, 841, 861, 888, 896], "/numpy": 39, ".lib": 39, ".format": [39, 64], ".html": [39, 47, 57, 64, 334, 505, 664, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896, 1241, 2482, 5259, 5262, 5335, 5355], "docs": [39, 57, 64, 334, 505, 664, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896, 1241, 2482, 5259, 5262, 5355], ".python": [39, 57, 64, 2482, 5259, 5262, 5355], "-api": 39, "/complex": 39, "#c": 39, "_complex": 39, "described": [44, 48, 64, 146, 761, 1372, 2165, 2166, 2167, 2845, 2858, 2859, 4162, 4167, 4847, 4848, 4964, 5117], "paper": [44, 64, 147, 165, 1471, 5178, 5235], "public": [44, 64, 913, 2277, 2909, 2918, 2927, 3730, 3782, 3789, 3793, 3886, 3888, 3891, 3922, 5268, 5272, 5354], "reached": [44, 64, 97, 806, 833, 869, 2012, 2016, 2496, 3727, 3738, 3739, 3862, 4915, 4975, 4976, 5062, 5086], "_synthesis": [44, 51, 64, 1644, 4901, 5204, 5230, 5237], "aqc": [44, 64, 5236, 5237], "aqcsynthesisplugin": [44, 5238], "interested": [44, 64, 1987], "formalize": 44, "finding": [44, 48, 64, 147, 877, 1960, 2041, 2140, 4819, 4825, 4964, 5004, 5061, 5071], "best": [44, 48, 64, 74, 103, 144, 202, 373, 532, 904, 1111, 1952, 1987, 1994, 2162, 2808, 2819, 4922, 4964, 5033, 5061, 5071, 5073, 5117, 5123, 5178, 5233, 5234, 5235], "\\in": [44, 186, 1450, 4463, 4747, 4769], "constrained": [44, 64, 147, 717, 789, 1475, 4157, 4162, 4167, 4172, 4177, 4182, 5342], "connectivity": [44, 48, 64, 1444, 5073, 5226, 5237], "recall": [44, 145], "combination": [44, 64, 188, 789, 861, 1916, 1918, 1966, 2001, 2006, 2024, 2025, 2032, 2050, 2055, 2063, 2083, 2095, 2109, 2129, 2150, 2194, 2205, 2229, 2231, 2249, 2263, 3749, 4463, 4525, 4529, 4530, 4540, 4620, 4624, 4625, 4635, 4961, 4976, 5053, 5362], "su": [44, 1376, 1477], "properly": [44, 64, 2006, 3732, 3932, 3963, 3976, 5017], "metric": [44, 64, 1477, 2001, 2004, 2005, 2018, 4730], "frobenius": 44, "norm": [44, 64, 191, 357, 693, 709, 761, 765, 773, 877, 2323, 2349, 2884, 4182, 4187, 4548, 4653, 4717, 4796], "|v": [44, 290, 461, 620, 1197, 1483], "\\|": [44, 4915], "_{\\": 44, "mathrm": [44, 1393, 2001, 2021, 5347, 5349, 5350], "{f": [44, 64, 1399, 1400, 4159, 4164, 4167, 4169, 4172, 4174, 4184, 4726, 5368], "}}": [44, 64, 193, 364, 523, 1102, 1318, 1342, 1343, 1348, 1350, 1352, 1360, 1362, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1519, 1522, 1537, 1542, 1544, 1547, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1654, 1722, 4172, 4317, 4319, 4329, 4334, 4336, 4338, 4348, 4353, 4403, 4405, 4415, 4420, 4445, 4447, 4457, 4462, 4644, 4668, 4670, 4680, 4685, 4687, 4689, 4699, 4704, 4714, 4715, 4720, 4722, 4726, 4740, 4938, 5033, 5226, 5239, 5244, 5347, 5350, 5364], "choice": [44, 48, 64, 262, 264, 433, 435, 592, 594, 877, 1169, 1171, 1948, 1983, 2323, 2349, 5175, 5193, 5235], "motivated": [44, 1379], "considerations": 44, "formulations": [44, 5341], "literature": [44, 64, 1456], "problem": [44, 53, 64, 66, 68, 72, 73, 78, 86, 87, 88, 92, 93, 94, 97, 98, 99, 103, 109, 111, 112, 120, 121, 122, 147, 155, 163, 186, 364, 682, 709, 761, 763, 765, 768, 769, 806, 877, 1377, 1380, 1393, 1441, 1450, 1456, 1458, 1462, 1464, 1471, 1537, 1563, 1567, 1987, 2018, 2883, 4224, 4964, 5014, 5175, 5178, 5214, 5217, 5236, 5241, 5242, 5243, 5246, 5248, 5249, 5342, 5343], "ct": [44, 5345, 5372], "angles": [44, 64, 95, 113, 343, 344, 345, 514, 515, 516, 673, 674, 675, 1250, 1251, 1252, 1382, 1406, 1470, 1472, 1503, 1544, 1547, 1815, 1831, 1847, 1863, 4422, 4423, 4547, 4551, 5132, 5236, 5237, 5244, 5245, 5246, 5247], "parametric": [44, 64, 904, 1489, 1494, 1499, 1501, 1641, 3932, 3976, 4008, 4177, 4182, 4264, 5357], "vct": 44, "forming": 44, "argmax": 44, "_{": [44, 64, 110, 113, 181, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 773, 1249, 1250, 1251, 1252, 1372, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1399, 1450, 1466, 1468, 1470, 1472, 1475, 1489, 1494, 1499, 1501, 1551, 1556, 1558, 1586, 1815, 1831, 1847, 1863, 2871, 4316, 4317, 4319, 4329, 4334, 4335, 4336, 4338, 4348, 4353, 4393, 4402, 4403, 4405, 4415, 4420, 4439, 4444, 4445, 4447, 4457, 4462, 4463, 4519, 4614, 4659, 4668, 4670, 4680, 4685, 4687, 4689, 4699, 4704, 4714, 4720, 4722, 4723, 4726, 4739, 4747, 4769, 5178, 5332, 5341, 5345, 5347, 5348, 5349, 5350, 5361, 5362, 5364, 5367, 5370, 5372], "}\\": [44, 69, 181, 186, 1354, 1360, 1362, 1372, 1450, 1483, 1489, 1494, 1501, 1544, 1547, 1551, 1556, 1558, 1586, 1778, 4159, 4162, 4164, 4169, 4172, 4174, 4184, 4193, 4194, 4197, 4198, 4200, 4335, 4384, 4386, 4421, 4444, 4519, 4614, 4649, 4717, 4722, 4740, 5178, 5342, 5345, 5347, 5348, 5350, 5359, 5362, 5364, 5366, 5367, 5368, 5372], "frac": [44, 64, 181, 850, 878, 1343, 1348, 1350, 1360, 1362, 1374, 1382, 1389, 1399, 1472, 1481, 1486, 1489, 1491, 1494, 1499, 1501, 1519, 1522, 1542, 1544, 1547, 1556, 1558, 1586, 2847, 4162, 4167, 4172, 4192, 4193, 4194, 4196, 4197, 4198, 4200, 4421, 4644, 4714, 4726, 4847, 5178, 5345, 5350, 5352, 5362, 5364, 5368, 5372], "}{": [44, 64, 181, 850, 878, 1343, 1348, 1350, 1352, 1360, 1362, 1374, 1379, 1389, 1393, 1396, 1399, 1450, 1472, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1519, 1522, 1542, 1544, 1547, 1556, 1558, 1586, 2847, 4162, 4167, 4172, 4192, 4193, 4194, 4196, 4197, 4198, 4200, 4386, 4421, 4519, 4614, 4714, 4847, 5178, 5341, 5345, 5347, 5350, 5352, 5362, 5364, 5365, 5368, 5372], "}|": [44, 186, 798, 841, 1362, 1483, 4915, 5345, 5372], "langle": [44, 64, 852, 1339, 1355, 1388, 2021, 2569, 2885, 4335, 4385, 4389, 4398, 4714, 4715, 4740, 4746, 4747, 4768, 4769, 5347, 5348, 5361, 5362], "leq": [44, 64, 86, 130, 1466, 1468, 4182, 5350], "unitaries": [44, 64, 255, 256, 313, 342, 343, 344, 345, 426, 427, 484, 513, 514, 515, 516, 585, 586, 643, 672, 673, 674, 675, 1162, 1163, 1220, 1249, 1250, 1251, 1252, 1456, 2001, 2006, 2068, 2132, 2155, 2686, 2791, 4421, 4705, 4712, 5202, 5226, 5362], "objective": [44, 64, 66, 73, 78, 86, 94, 112, 122, 151, 169, 176, 683, 687, 693, 701, 717, 763, 765, 789, 806, 849, 856, 861, 869, 877, 883, 1987, 2162, 2870, 2872, 2883, 2884, 4964, 5033, 5053, 5235, 5241, 5243, 5246, 5247, 5249, 5341], "strategy": [44, 64, 789, 1376, 1377, 1379, 1441, 1448, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 1926, 1976, 4182, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 5014, 5016, 5017, 5023, 5178], "maximize": 44, "\\frac": [44, 64, 1352, 1396, 1496, 4162, 4193, 4194, 4197, 4386, 4644, 5362, 5365], "gradient": [44, 53, 64, 147, 165, 172, 186, 683, 685, 687, 693, 694, 695, 696, 701, 703, 704, 709, 711, 712, 717, 719, 720, 725, 728, 729, 734, 737, 738, 743, 746, 747, 752, 755, 756, 761, 763, 764, 765, 766, 773, 775, 776, 781, 783, 784, 789, 792, 793, 798, 800, 801, 806, 808, 809, 814, 816, 817, 822, 824, 825, 830, 832, 833, 835, 836, 841, 843, 844, 849, 854, 855, 856, 861, 863, 864, 869, 871, 872, 877, 881, 882, 883, 888, 890, 891, 896, 898, 899, 904, 906, 907, 1076, 1092, 2001, 2002, 2003, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2032, 2055, 2063, 5235, 5241, 5242, 5246, 5248, 5338, 5340], "discuss": [44, 51], "specifics": [44, 64], "going": [44, 64, 172, 1277, 4229, 4856], "{\\": [44, 64, 69, 181, 1348, 1350, 1352, 1360, 1361, 1362, 1363, 1379, 1382, 1387, 1388, 1399, 1450, 1459, 1481, 1483, 1486, 1488, 1489, 1491, 1494, 1496, 1499, 1501, 1522, 1539, 1542, 1543, 1544, 1546, 1547, 1549, 1556, 1558, 1562, 1586, 4172, 4182, 4192, 4194, 4319, 4329, 4338, 4348, 4405, 4415, 4421, 4447, 4457, 4644, 4670, 4680, 4689, 4699, 4715, 4717, 4740, 5345, 5350, 5352, 5362, 5368, 5370, 5372], "exp": [44, 64, 103, 136, 1075, 1091, 1382, 1383, 1384, 1385, 1386, 1448, 1450, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1556, 1558, 1586, 1753, 1948, 1960, 1985, 1988, 1991, 1996, 1999, 2040, 2041, 2090, 2103, 2118, 2139, 2140, 4112, 4121, 4139, 4162, 4167, 4172, 4194, 5350], "/d": [44, 5349], "det": 44, "(u": [44, 64, 328, 342, 499, 513, 658, 672, 1235, 1249, 1786, 2856, 4711, 5355, 5366], ")^": [44, 64, 97, 850, 878, 1361, 1363, 1388, 1397, 1482, 1488, 1543, 1546, 1549, 2867, 2887, 4162, 4193, 4194, 4463, 4519, 4614, 4722, 5342, 5361], "text": [44, 56, 62, 64, 235, 406, 565, 1143, 1450, 1483, 2847, 2860, 4162, 4167, 4172, 4200, 4201, 4231, 4232, 4233, 4242, 4380, 4644, 4714, 4720, 4726, 5281, 5331, 5332, 5333, 5334, 5339, 5350, 5354, 5362], "\\{": [44, 4747, 4769, 5361, 5362], ",\\": [44, 97, 1360, 1361, 1362, 1363, 1450, 1546, 1549, 4384, 4421, 4649, 5350, 5368], "ldots": [44, 97, 1551, 1778, 4384, 4649, 5370], "\\}": [44, 97, 1399, 1537, 1551, 4463, 4747, 4769, 5350, 5361, 5362], "normalize": [44, 4549], "approximately": [44, 64, 1399, 1472, 5236], "normalized": [44, 64, 145, 2165, 2170, 2188, 2201, 2214, 2218, 2226, 2244, 2258, 2830, 4182, 4549, 4726, 5270], "denote": [44, 64, 1444, 1466, 1468, 2887], "un": [44, 64], "-normalized": 44, "nesterov": 44, "optimizer": [44, 53, 64, 147, 151, 165, 169, 172, 176, 683, 687, 691, 693, 696, 699, 701, 704, 707, 709, 712, 715, 717, 720, 723, 725, 726, 729, 732, 734, 735, 738, 741, 743, 744, 747, 750, 752, 753, 756, 759, 761, 766, 771, 773, 776, 779, 781, 784, 787, 789, 790, 793, 796, 798, 801, 804, 806, 809, 812, 817, 820, 823, 824, 825, 826, 827, 828, 829, 833, 836, 839, 841, 844, 847, 849, 852, 855, 859, 861, 864, 867, 869, 872, 875, 877, 882, 886, 888, 891, 894, 896, 899, 902, 904, 907, 910, 5235, 5237, 5337, 5338, 5339, 5340, 5341, 5362], "'\\": [44, 4229, 5332, 5350], "|}": [44, 5178, 5350], "convergence": [44, 64, 683, 693, 709, 717, 761, 789, 806, 833, 849, 861, 877, 896, 1987, 5235, 5338, 5339, 5340], "guarantees": [44, 64, 97, 4708, 4709], "speed": [44, 64, 186, 849], "practice": [44, 64, 136, 2808], "-bfgs": [44, 64, 798, 841], "(round": 44, ".log": [44, 64, 181, 357, 5341, 5344], ".shape": [44, 64, 5341], "``": [44, 57, 58, 64, 1975, 1977, 1980, 3999, 4012, 4225, 4751, 4922, 5361], "spin": [44, 1945], "targeted": [44, 64, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 258, 262, 263, 264, 283, 284, 337, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 412, 429, 433, 434, 435, 454, 455, 508, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 571, 588, 592, 593, 594, 613, 614, 667, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1148, 1165, 1169, 1170, 1171, 1190, 1191, 1244, 4148], "units": [44, 64, 232, 403, 562, 1140, 1644, 2808, 2848, 2851, 2854, 2867, 3941, 3963, 3973, 4182, 4191, 4196, 4199, 4200, 4201, 4264, 4876, 4922, 4958, 5021, 5102, 5143, 5196, 5198, 5220, 5226, 5244, 5246, 5247, 5259, 5331, 5333, 5334, 5359], "(options": 44, "cnots": [44, 64, 1371, 1526, 1934, 1935, 1937, 5123, 5244, 5246, 5247], "_cnot": [44, 64], "_network": 44, "=num": [44, 64, 5357], "=layout": [44, 64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555, 5341], "=connectivity": 44, "=depth": 44, "_bfgs": [44, 64, 5235, 5338], "_b": [44, 64, 841, 1920, 1921, 1947, 2333, 2359, 2372, 2385, 4723, 4739, 5235, 5338, 5341, 5353, 5354], "(optimizer": [44, 5338, 5341], "cnotunitcircuit": [44, 5235, 5245], "=cnots": 44, "approximating": [44, 64, 136, 849, 1948, 1949, 1975, 1977, 1979, 1980, 2885, 5236], "_objective": [44, 64, 5236], "defaultcnotunitobjective": [44, 5235, 5248, 5249], ".compile": [44, 64, 920, 939, 1259, 4751, 4915], "_unitary": [44, 64, 138, 139, 271, 442, 601, 1178, 2376, 2927, 2932, 5348, 5350, 5353, 5364, 5366], "=unitary": 44, "=approximate": 44, "=approximating": 44, "approximates": [44, 798, 2887, 4819], "degree": [44, 64, 1376, 1465, 1468, 1470, 1472, 4299], "original": [44, 48, 64, 69, 110, 118, 143, 147, 198, 369, 528, 904, 970, 1107, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1400, 1401, 1412, 1415, 1419, 1421, 1424, 1471, 1648, 1649, 1682, 1922, 1941, 1942, 1944, 1970, 2823, 2888, 2890, 3993, 4182, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4513, 4518, 4538, 4539, 4544, 4563, 4587, 4617, 4633, 4634, 4639, 4681, 4700, 4811, 4961, 4966, 5186, 5271, 5352, 5366], "'spin": 44, "'full": [44, 1342, 1376, 1379, 1450, 1503, 1537, 1550, 1567], "generates": [44, 64, 104, 140, 2323, 2349, 2808, 2875, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 5331, 5333, 5334], "possibly": [44, 64, 137, 1456, 1943, 4712], "ones": [44, 64, 709, 2886, 4041, 4218, 4229, 5253, 5263, 5275], "question": 44, "chain": [44, 48, 64, 4819, 4823, 4825], "shared": [44, 48, 64, 912, 3730, 3782, 3789, 3793, 3796, 3994, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 5181], "row": [44, 64, 186, 763, 769, 1393, 1402, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2874, 4487, 4508, 4509, 4519, 4523, 4534, 4535, 4614, 4618, 4629, 4630, 5137], "geometry": [44, 5237], "\"sequ": [44, 5237], "cart": 44, "cyclic": 44, "_spin": [44, 5237], "_line": [44, 64, 5014, 5237], "\"}": [44, 64, 3888, 3932, 3976], "inter": [44, 64, 5237], "\"full": [44, 5237], "star": 44, "-network": [44, 2323, 2349, 5237], "-block": [44, 64, 5237], "selected": [44, 64, 110, 235, 406, 565, 904, 1143, 1379, 1503, 4041, 4380, 4644, 4857, 5196, 5250, 5281], "valueerror": [44, 53, 64, 69, 73, 88, 89, 97, 99, 104, 107, 110, 115, 118, 144, 158, 163, 179, 185, 187, 188, 198, 262, 264, 361, 369, 433, 435, 528, 592, 594, 765, 877, 1107, 1169, 1171, 1342, 1373, 1379, 1441, 1444, 1475, 1550, 1567, 1926, 1937, 1952, 1982, 1988, 1994, 2003, 2005, 2007, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2019, 2020, 2021, 2022, 2023, 2084, 2111, 2131, 2162, 2165, 2168, 2181, 2204, 2206, 2218, 2220, 2236, 2241, 2248, 2261, 2311, 2333, 2359, 2372, 2385, 2863, 3779, 3789, 3905, 4380, 4546, 4644, 4773, 4787, 4813, 4915, 4922, 4924, 4938, 5230, 5244, 5259, 5262, 5263, 5272, 5277, 5278, 5280, 5291], "unsupported": [44, 64, 2016, 2069, 2177, 3819, 5244], "\u53c2\u7167": [44, 57, 58, 63, 69, 92, 97, 110, 118, 186, 683, 814, 849, 877, 904, 1332, 1336, 1388, 1399, 1450, 1456, 1465, 1468, 1471, 1475, 1987, 3993, 4162, 4192, 4311, 4316, 4335, 4354, 4370, 4402, 4444, 4519, 4595, 4614, 4667, 4686, 4716, 4721, 4722, 4819, 4825, 5339, 5340, 5341, 5342, 5344, 5345, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5372], "[1": [44, 64, 69, 92, 97, 103, 110, 115, 118, 136, 186, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 683, 849, 877, 904, 973, 1023, 1249, 1250, 1251, 1252, 1280, 1299, 1332, 1336, 1342, 1372, 1373, 1380, 1382, 1387, 1388, 1392, 1393, 1396, 1399, 1401, 1448, 1450, 1456, 1458, 1465, 1468, 1471, 1475, 1477, 1480, 1526, 1527, 1550, 1567, 1645, 1646, 1649, 1650, 1666, 1722, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1987, 3993, 4463, 4819, 4825, 4964, 5146, 5175, 5178, 5282, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "liam": 44, "madden": 44, "andrea": 44, "simonetto": 44, "arxiv": [44, 48, 64, 69, 92, 97, 103, 110, 115, 116, 118, 147, 156, 186, 234, 255, 256, 342, 343, 344, 345, 405, 426, 427, 513, 514, 515, 516, 564, 585, 586, 672, 673, 674, 675, 683, 693, 761, 814, 849, 877, 1142, 1162, 1163, 1249, 1250, 1251, 1252, 1332, 1336, 1342, 1372, 1373, 1380, 1382, 1387, 1388, 1392, 1393, 1396, 1399, 1448, 1450, 1456, 1465, 1468, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1526, 1550, 1722, 1815, 1831, 1847, 1863, 1974, 1976, 1987, 2162, 2887, 3993, 4316, 4335, 4354, 4370, 4402, 4444, 4519, 4595, 4614, 4667, 4686, 4716, 4717, 4728, 4819, 4825, 4964, 5099, 5123, 5146, 5151, 5175, 5178, 5342, 5369, 5370], ".compiler": [45, 48, 64, 3838, 3864, 5283, 5352, 5353, 5355], "_function": [45, 64, 233, 321, 404, 492, 563, 651, 687, 773, 856, 883, 1141, 1228, 5337, 5340], "visualizations": [45, 53, 64, 1448], "classicalfunction": [45, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317], ".classicalfunction": [45, 64], "converters": [45, 64, 1930, 1948, 1949, 1983, 1990, 2002, 2004, 2006, 2176, 2251, 4958, 5220, 5359], ".converters": [45, 64, 5282, 5355], ".assembler": [45, 64], ".dagcircuit": [45, 57, 64, 1646, 1650, 5227, 5238, 5282, 5355], "-based": [45, 53, 64, 69, 75, 79, 95, 113, 123, 142, 683, 852, 1399, 1986, 1995, 2024, 2032, 2049, 2051, 2052, 2061, 2062, 3723, 3739, 4182, 5008, 5178, 5237, 5361, 5362], ".basicaer": [45, 62, 64], "migrating": [45, 64, 2282, 2285, 3754], "fake": [45, 64, 2936, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2963, 2969, 2971, 2980, 2986, 2988, 2997, 3003, 3021, 3030, 3036, 3038, 3047, 3053, 3055, 3064, 3070, 3072, 3081, 3087, 3089, 3097, 3103, 3105, 3114, 3120, 3122, 3130, 3136, 3138, 3147, 3153, 3155, 3163, 3169, 3171, 3180, 3186, 3188, 3197, 3203, 3205, 3214, 3220, 3222, 3231, 3237, 3239, 3248, 3254, 3256, 3265, 3271, 3273, 3282, 3288, 3290, 3298, 3304, 3306, 3315, 3321, 3323, 3332, 3338, 3340, 3348, 3354, 3356, 3365, 3371, 3373, 3382, 3390, 3396, 3398, 3407, 3413, 3415, 3433, 3441, 3447, 3449, 3458, 3464, 3466, 3474, 3480, 3482, 3485, 3488, 3496, 3505, 3511, 3513, 3521, 3527, 3529, 3538, 3544, 3546, 3554, 3563, 3569, 3571, 3580, 3586, 3588, 3597, 3603, 3605, 3613, 3621, 3630, 3636, 3638, 3647, 3653, 3655, 3663, 3669, 3671, 3680, 3686, 3688, 3696, 3702, 4970, 5117, 5178, 5190, 5359], ".models": [45, 64], "scheduler": [45, 48, 64, 4023, 4031, 4033, 4816, 4898, 4899, 4919, 4920, 4946, 4949, 4952, 4955, 5023, 5181], ".scheduler": [45, 64, 1642], ".synthesis": [45, 49, 64, 4741], ".primitives": [45, 64], ".qasm": [45, 64, 1645], ".qobj": [45, 64, 2282], ".qpy": [45, 64, 4177, 4182], "jupyter": [45, 57, 58, 235, 253, 276, 406, 424, 447, 565, 583, 606, 1002, 1143, 1160, 1183, 1673, 1732, 3704, 4006, 4239, 4240, 4380, 4644, 5281, 5282, 5335, 5348, 5349, 5354], ".jupyter": [45, 64, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ".passes": [45, 48, 64, 357, 4982, 4985, 5014, 5077, 5143, 5163, 5283, 5355], "preset": [45, 48, 64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5230, 5331, 5333, 5334], "passmanagers": [45, 64], ".preset": [45, 48, 64], "_passmanagers": [45, 48, 64], "plugins": [45, 64, 1644, 4895, 4899, 4901, 4916, 4920, 5204, 5226, 5228, 5230], ".plugin": [45, 64], "-in": [45, 51, 64, 1342, 1550, 1936, 1941, 1942, 1944, 3902, 4762, 4783, 4798, 4911, 5303, 5315, 5327], "utils": [45, 53, 64], ".mitigation": [45, 64, 5250, 5339], "operators": [45, 64, 82, 83, 88, 99, 126, 127, 130, 131, 132, 134, 135, 144, 148, 151, 153, 163, 164, 166, 169, 171, 173, 176, 178, 179, 359, 1377, 1380, 1448, 1462, 1471, 1898, 1905, 1906, 1911, 1912, 1922, 1923, 1926, 1932, 1934, 1936, 1942, 1945, 1948, 1958, 1959, 1962, 1963, 2002, 2004, 2025, 2028, 2030, 2031, 2032, 2038, 2039, 2045, 2046, 2055, 2057, 2059, 2060, 2063, 2064, 2065, 2067, 2069, 2074, 2075, 2077, 2078, 2084, 2088, 2089, 2092, 2097, 2101, 2102, 2105, 2112, 2116, 2117, 2125, 2132, 2137, 2138, 2143, 2144, 2155, 2182, 2186, 2187, 2198, 2200, 2211, 2213, 2223, 2224, 2225, 2237, 2238, 2242, 2243, 2255, 2257, 2814, 2847, 2857, 2867, 2869, 2871, 2875, 2881, 2882, 2884, 2885, 2886, 2887, 4299, 4301, 4318, 4337, 4354, 4356, 4404, 4426, 4430, 4433, 4446, 4467, 4487, 4503, 4504, 4554, 4571, 4575, 4580, 4591, 4669, 4688, 4819, 4821, 4825, 5353, 5368], ".opflow": [45, 54, 64, 162, 181, 357, 849, 877, 904, 1448, 5014, 5337, 5338, 5339, 5340, 5341, 5361, 5362], "magic": [47, 64], "extend": [47, 64, 238, 409, 568, 1145, 2808, 5083, 5085, 5091], "matplotlib": [47, 48, 53, 62, 64, 235, 406, 565, 1143, 1645, 1646, 1650, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4196, 4201, 4380, 4644, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5335, 5345, 5349, 5350, 5352, 5354, 5372], "inline": [47, 64, 1645, 1646, 1650, 4040, 4084, 4223, 4224, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294], "_overview": [47, 5353], "(hub": [47, 64, 5286, 5288, 5289], "-q": [47, 3723, 3739, 5286, 5288, 5289], "_watcher": 47, ".parallel": [47, 64], "_progress": [47, 64], "_bar": [47, 64], ".sin": [47, 64, 4026, 4206, 5077, 5143], ".linspace": [47, 64, 5352], "vbox": [47, 64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "(children": [47, 64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "=(": [47, 48, 64, 181, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555, 4398, 4664, 5349, 5352, 5353, 5361, 5366, 5367], "html": [47, 57, 4239], "(value": [47, 64, 2001, 4830, 5362], ", intprogress": 47, "bar": [47, 57, 64, 3907, 5290, 5291, 5349], "_style": [47, 56, 64, 235, 406, 565, 1143, 4239, 4240, 4896, 4917, 5281, 5283, 5331, 5333, 5334], "_table": [47, 64, 1296, 5137, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "<ipython": [47, 64, 4644], ".core": [47, 64, 4644, 5335], ".display": [47, 64, 1002, 1673, 1732, 4380, 4644, 5280, 5335], "informationqiskit": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "softwareversionqiskit": [47, 5339, 5342, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5358, 5359, 5361, 5364, 5365, 5366, 5367, 5369, 5370, 5372], "0qiskit": [47, 5339, 5342, 5348, 5349, 5352, 5358, 5359], "4qiskit": [47, 5339, 5342, 5350, 5353, 5358, 5359], "2qiskit": [47, 5342, 5348, 5349, 5350, 5352, 5353, 5358, 5359], "0system": [47, 5342, 5350, 5354, 5355], "informationpython": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "compilergcc": [47, 5339, 5342, 5353, 5358, 5359], "0python": [47, 5339, 5342, 5353, 5358, 5359], "builddefault": [47, 5342, 5358, 5359, 5361], "jun": [47, 5341, 5345, 5347, 5353], "oslinuxcpus": [47, 5339, 5342, 5347, 5353, 5355, 5358, 5359, 5370], "2memory": [47, 5337, 5338, 5340, 5341, 5343, 5344, 5347, 5356, 5357, 5362], "gb": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "wed": [47, 5353], "jul": [47, 5348, 5349, 5352, 5355, 5358, 5359, 5372], "utc": [47, 64, 3830, 3909, 3930, 5370], "_copyright": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "&copy": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "licensed": [47, 64, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "apache": [47, 57, 64, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "license": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "mayobtain": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "copy": [47, 64, 198, 200, 215, 216, 369, 371, 386, 387, 528, 530, 545, 546, 928, 937, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1107, 1109, 1123, 1124, 1268, 1283, 1303, 1324, 1433, 1443, 1509, 1668, 1713, 1720, 1728, 1742, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1904, 2157, 2323, 2349, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2815, 2823, 2832, 4303, 4309, 4320, 4330, 4339, 4349, 4358, 4368, 4378, 4406, 4416, 4428, 4438, 4448, 4458, 4469, 4480, 4496, 4497, 4512, 4513, 4527, 4528, 4538, 4539, 4556, 4563, 4568, 4573, 4587, 4597, 4614, 4622, 4623, 4633, 4634, 4642, 4671, 4681, 4690, 4700, 4753, 4776, 4790, 4883, 4905, 5297, 5309, 5321, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ".txt": [47, 57, 64, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "root": [47, 58, 64, 4229, 5004, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "source": [47, 64, 235, 406, 565, 1143, 1296, 1674, 4182, 4380, 4644, 4839, 4840, 4973, 5230, 5277, 5280, 5281, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "tree": [47, 1948, 1949, 1983, 1990, 4006, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4223, 5117, 5193, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "www": [47, 1732, 5283, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], ".apache": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "/licenses": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "/license": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "derivative": [47, 64, 717, 725, 734, 743, 752, 789, 798, 869, 1076, 1092, 2001, 2003, 2009, 2015, 4162, 4194, 4198, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "retain": [47, 64, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "thiscopyright": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "notice": [47, 64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1526, 1772, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "indicatingthat": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "altered": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "originals": [47, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "_output": [47, 64, 255, 256, 426, 427, 585, 586, 1162, 1163], "rewriting": 48, "day": [48, 3905], "undergo": [48, 5077, 5143], "reduce": [48, 64, 172, 1472, 1912, 1963, 1998, 2029, 2030, 2046, 2059, 2065, 2078, 2126, 2144, 2187, 2243, 2323, 2349, 2363, 2376, 4162, 4857, 4964, 5347, 5361, 5364], "effects": [48, 64, 5011, 5129, 5134], "optimizing": [48, 64, 877, 1392, 1465, 1468], "far": [48, 64], "trivial": [48, 64, 1644, 2889, 3424, 3708, 4227, 4463, 4887, 5231, 5232, 5331, 5333, 5334, 5355], "tool": [48, 53, 64], "iterative": [48, 64, 69, 92, 110, 115, 709, 773, 798, 5123, 5175], "-loops": [48, 64], "branches": 48, "four": [48, 64, 147, 165, 172, 1421, 2869, 5014, 5117, 5276], "pre": [48, 64, 920, 939, 1259, 1318, 1374, 1983, 1990, 2021, 2023, 2886, 2887, 4182, 4842, 4915, 5102, 5137], "-built": 48, "pipelines": 48, "unless": [48, 64, 235, 240, 406, 411, 565, 570, 1143, 1147, 1922, 1930, 3708, 5281], "reader": 48, "ready": 48, "-made": [48, 2886, 2887], "along": [48, 64, 69, 833, 2282, 3982, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 5178, 5331, 5333, 5334], "-gate": [48, 64, 4964, 4966], "limitations": [48, 64, 918, 5137], "implementing": [48, 64, 111, 184, 275, 355, 446, 605, 970, 1001, 1005, 1182, 1293, 1313, 1318, 1388, 1399, 1404, 1447, 1470, 1555, 2275, 2282, 2293, 2313, 3982, 4311, 4312, 4370, 4372, 4818, 4820, 4822, 4824, 4826, 4835, 4862, 4869, 5241], "electronics": [48, 1642, 1643, 4958, 5021, 5102, 5220], "handful": 48, "found": [48, 53, 64, 103, 118, 165, 239, 328, 410, 499, 569, 658, 904, 1000, 1146, 1235, 1284, 1644, 1786, 1934, 2316, 2322, 2494, 2501, 2502, 2854, 2908, 3484, 3487, 3706, 3715, 3717, 3720, 3721, 3725, 3746, 3750, 3753, 3771, 3775, 3837, 3841, 3855, 3863, 3871, 3872, 3873, 3874, 3875, 3886, 3942, 3945, 3969, 3970, 3991, 4220, 4717, 4761, 4782, 4797, 4898, 4899, 4910, 4919, 4920, 4938, 4963, 4973, 4976, 5013, 5143, 5151, 5204, 5214, 5217, 5220, 5230, 5233, 5234, 5302, 5314, 5326, 5356], "querying": [48, 64, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2285, 2286, 2287, 2288, 2289, 2290, 2484, 2903, 2964, 2965, 2966, 2967, 2968, 2981, 2982, 2983, 2984, 2985, 2998, 2999, 3000, 3001, 3002, 3005, 3006, 3007, 3008, 3009, 3010, 3013, 3014, 3015, 3016, 3017, 3018, 3031, 3032, 3033, 3034, 3035, 3048, 3049, 3050, 3051, 3052, 3065, 3066, 3067, 3068, 3069, 3082, 3083, 3084, 3085, 3086, 3098, 3099, 3100, 3101, 3102, 3115, 3116, 3117, 3118, 3119, 3131, 3132, 3133, 3134, 3135, 3148, 3149, 3150, 3151, 3152, 3164, 3165, 3166, 3167, 3168, 3181, 3182, 3183, 3184, 3185, 3198, 3199, 3200, 3201, 3202, 3215, 3216, 3217, 3218, 3219, 3232, 3233, 3234, 3235, 3236, 3249, 3250, 3251, 3252, 3253, 3266, 3267, 3268, 3269, 3270, 3283, 3284, 3285, 3286, 3287, 3299, 3300, 3301, 3302, 3303, 3316, 3317, 3318, 3319, 3320, 3333, 3334, 3335, 3336, 3337, 3349, 3350, 3351, 3352, 3353, 3366, 3367, 3368, 3369, 3370, 3382, 3383, 3384, 3385, 3386, 3387, 3391, 3392, 3393, 3394, 3395, 3408, 3409, 3410, 3411, 3412, 3442, 3443, 3444, 3445, 3446, 3459, 3460, 3461, 3462, 3463, 3475, 3476, 3477, 3478, 3479, 3506, 3507, 3508, 3509, 3510, 3522, 3523, 3524, 3525, 3526, 3539, 3540, 3541, 3542, 3543, 3564, 3565, 3566, 3567, 3568, 3581, 3582, 3583, 3584, 3585, 3598, 3599, 3600, 3601, 3602, 3631, 3632, 3633, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3664, 3665, 3666, 3667, 3668, 3681, 3682, 3683, 3684, 3685, 3697, 3698, 3699, 3700, 3701, 3733, 3796, 3824, 3825], "looking": [48, 64, 147, 165, 172, 2276, 2317], "'id": [48, 64, 4229, 5354, 5367], "'x": [48, 64, 1450, 1466, 1468, 1563, 1567, 2801, 2909, 2918, 2927, 4229, 4463, 4518, 4525, 4529, 4530, 4540, 4544, 4928, 5226, 5332, 5333, 5334, 5354], "cx'": [48, 64, 5353], "suppose": [48, 64, 1466, 1468, 2001], "wants": [48, 4231], ".cp": [48, 5345, 5350, 5372], "(output": [48, 64, 235, 406, 565, 1143, 1465, 1640, 4644, 5281, 5283, 5342, 5345, 5354, 5355, 5372], "expanded": [48, 64, 197, 368, 527, 1106, 1382, 1383, 1384, 1385, 1386, 1396, 1410, 1457, 1477, 4915, 5070, 5342], "expansion": [48, 1399, 1400, 1450, 1563, 1567, 1976, 1978], "taken": [48, 53, 64, 95, 833, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1439, 1444, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 1994, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 2933, 3814, 3833, 3862, 3986, 4148, 4712, 5202, 5250, 5370], "care": [48, 64, 201, 213, 372, 384, 531, 543, 1110, 1121, 4030, 4084, 5190, 5342], "us": [48, 64, 232, 403, 562, 1140, 1464, 2808, 2848, 4182, 5359], "decompose": [48, 64, 231, 328, 402, 499, 561, 658, 1139, 1235, 1537, 1692, 4706, 4707, 4708, 4709, 4716, 5017, 5069, 5070, 5342, 5352, 5355, 5370], "show": [48, 64, 235, 406, 565, 1143, 1379, 2909, 2918, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5181, 5281, 5288, 5294, 5295, 5307, 5319, 5331, 5332, 5333, 5334, 5347, 5348], "_basis": [48, 51, 64, 259, 260, 261, 430, 431, 432, 589, 590, 591, 1166, 1167, 1168, 1934, 2801, 4705, 4712, 4973, 5018, 5226, 5237, 5367], "gotten": 48, "respect": [48, 64, 145, 159, 179, 253, 276, 424, 447, 583, 606, 936, 1160, 1183, 1526, 1772, 1983, 1990, 2002, 2004, 2005, 2007, 2008, 2011, 2015, 2019, 2024, 4039, 4335, 4389, 4390, 4444, 4604, 4605, 4614, 4655, 4656, 4927, 4964, 4988, 5235, 5242, 5248], "verified": [48, 64, 197, 368, 527, 1106, 3779, 3781, 3792], "checking": [48, 53, 64, 936, 1316, 1380, 1401, 1706, 2056, 2126, 2275, 2293, 2313, 2323, 2349, 2363, 2376, 2830, 3876, 4400, 4578, 4579, 4582, 4588, 4930, 4991, 5202, 5205], ":'": [48, 64, 198, 369, 528, 1107, 5342, 5353, 5362], "decomposed": [48, 64, 231, 328, 335, 336, 342, 402, 499, 506, 507, 513, 561, 658, 665, 666, 672, 1139, 1235, 1242, 1243, 1249, 1410, 1753, 1786, 1986, 5014, 5068, 5178, 5352], ", qc": 48, "second": [48, 51, 53, 64, 118, 136, 204, 234, 239, 283, 284, 337, 375, 405, 410, 454, 455, 508, 534, 564, 569, 613, 614, 667, 798, 806, 850, 877, 878, 1113, 1142, 1146, 1190, 1191, 1244, 1342, 1464, 1550, 1567, 1680, 1681, 1722, 1734, 1945, 2001, 2015, 2165, 2712, 3757, 3814, 3862, 3932, 3976, 3982, 4192, 4282, 4721, 4722, 4740, 4803, 4819, 4825, 4923, 4973, 5152, 5158, 5178, 5226, 5250, 5270, 5349], "had": [48, 64, 5253], "fact": [48, 84, 90, 128, 806, 1388, 5190], "unrolling": [48, 64], "leads": [48, 64, 849, 1550, 2161, 2232], "increase": [48, 64, 849, 877, 4139, 5178, 5364], "_circ": [48, 64, 357, 364, 523, 5283, 5286, 5345, 5352, 5355, 5358, 5367, 5369, 5372], ".decompose": [48, 64, 357, 1388, 1537, 5342, 5352], "expensive": [48, 53, 64, 1401, 4930], "embedding": [48, 64, 4915], "limited": [48, 64, 158, 798, 841, 4103, 4182, 5008, 5214], "entangling": [48, 1374, 1379, 1489, 1494, 1499, 1501, 1563, 4705], "connectivities": [48, 1450], "minimizing": [48, 64, 2887], "-not": [48, 64], "ccx": [48, 64, 204, 375, 534, 1113, 1339, 1341, 1410, 1479, 1553, 4229, 5332], "obvious": 48, "decomposition": [48, 64, 231, 234, 255, 256, 328, 342, 343, 344, 345, 402, 405, 426, 427, 499, 513, 514, 515, 516, 561, 564, 585, 586, 658, 672, 673, 674, 675, 924, 944, 957, 971, 987, 1004, 1007, 1021, 1037, 1051, 1139, 1142, 1162, 1163, 1235, 1249, 1250, 1251, 1252, 1264, 1278, 1297, 1320, 1407, 1429, 1505, 1648, 1649, 1754, 1773, 1786, 1787, 1803, 1815, 1816, 1831, 1832, 1847, 1848, 1863, 1864, 1880, 2323, 2349, 2390, 2404, 2418, 2432, 2446, 2460, 2505, 2518, 2531, 2544, 2557, 2570, 2583, 2596, 2609, 2622, 2635, 2648, 2661, 2674, 2687, 2700, 2713, 2726, 2739, 2752, 2765, 4299, 4354, 4370, 4421, 4705, 4708, 4709, 4710, 4712, 4716, 4823, 4825, 5018, 5068, 5080, 5082, 5210, 5211, 5213], "quite": [48, 64, 904, 918], "costly": [48, 64, 130], ".ccx": [48, 64, 337, 508, 667, 1244, 5283, 5342, 5350, 5355, 5369], "six": [48, 5080], "appreciably": 48, "affected": [48, 64], "entities": [48, 912], "-to": [48, 60, 97, 1371, 3905, 4887, 4979, 5105, 5359], "-one": [48, 4887], "manner": [48, 51, 64, 2156, 2875, 4008, 4209, 4212, 4922], "depends": [48, 64, 235, 406, 565, 1143, 2323, 2349, 2634, 3757, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4421, 4803, 4873, 4958, 4964, 5196, 5220, 5226, 5281, 5331, 5333, 5334], "targeting": [48, 64], "strategies": [48, 64, 1537, 5014], "numbered": [48, 64], "dense": [48, 64, 1372, 1644, 2323, 2349, 3708, 4463, 4485, 4516, 4542, 4579, 4592, 4637], "-graph": 48, "extremely": [48, 64, 798], "onto": [48, 64, 211, 382, 541, 1120, 1393, 1421, 1667, 1935, 4241, 4964, 4970, 5117, 5178, 5190, 5199, 5214, 5217, 5284, 5285, 5355], "difference": [48, 64, 147, 165, 172, 773, 849, 850, 877, 878, 896, 904, 1345, 1352, 1357, 1519, 1522, 1552, 1560, 1564, 2001, 2165, 2884, 4484, 4717, 5140, 5254, 5338, 5362], "nothing": [48, 64, 986, 2176, 2251, 2376, 3823, 3868], "layouts": [48, 64, 4961, 5117, 5217, 5333, 5334], "picked": 48, ".transpile": [48, 64, 5355], "selection": [48, 64, 904, 1644, 1951, 1952, 1993, 1994, 3708, 5108, 5233], ".plot": [48, 64, 4196, 4201, 5338, 5339, 5352], "fakevigo": [48, 64, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 5339, 5352, 5365], "(range": [48, 63, 64, 181, 186, 240, 357, 364, 411, 523, 570, 1147, 1465, 1468, 4196, 4201, 4722, 5286, 5347, 5348, 5352, 5354, 5361, 5369, 5370], "_lv0": 48, "(ghz": [48, 5286], "=backend": [48, 64, 162, 904, 2337, 2808, 3718, 3834, 5286, 5337, 5339, 5355, 5357, 5359], "(new": [48, 64, 4006, 5286, 5355], "_lv3": [48, 5286], "completely": [48, 64, 2847, 4187, 4324, 4325, 4343, 4344, 4410, 4411, 4452, 4453, 4675, 4676, 4694, 4695, 4714, 4717, 4720, 4726, 5331, 5333, 5334], "_ghz": 48, "(my": [48, 64, 1983, 1990, 4220, 5352], "connected": [48, 64, 269, 440, 599, 1176, 1448, 1654, 1661, 1662, 1696, 1697, 4819, 4823, 4825, 4845, 4846, 4850, 4851, 4853, 4854, 4857, 5071, 5169, 5190, 5232, 5233, 5355], "move": [48, 64, 1388, 4915], "around": [48, 64, 103, 290, 461, 620, 685, 695, 703, 711, 719, 728, 737, 746, 755, 763, 764, 768, 769, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1197, 1388, 1481, 1483, 1922, 2323, 2349, 3869, 4915, 4958, 5071, 5123, 5332], "adjacent": [48, 4996, 4999, 5006, 5120, 5232], "whole": [48, 60, 64, 1388, 1976, 3990, 4241, 4503, 4580, 5178, 5331, 5333, 5334], "life": [48, 64], "optimal": [48, 64, 66, 97, 100, 172, 682, 798, 1401, 2018, 2884, 4299, 4311, 4354, 4370, 4705, 4706, 4707, 4708, 4712, 4716, 4964, 5018, 5337, 5340, 5342], "-hard": 48, "prohibitively": 48, "heuristic": [48, 64, 725, 806, 1376, 1379, 1503, 1644, 4901, 5178, 5230], ".stochasticswap": 48, "good": [48, 57, 64, 66, 86, 87, 97, 120, 123, 904, 1388, 1463, 3795, 3973, 5108], "necessarily": [48, 1466, 1468, 1551, 2885, 4299, 4354, 5120], "minimal": [48, 57, 64, 110, 814, 936, 1381, 1406, 1466, 1468, 1479, 2337, 4705, 5341], "(or": [48, 64, 1398, 1935, 2025, 2032, 2055, 2063, 2177, 2345, 5108], "internally": [48, 53, 64, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 1401, 1641, 1922, 1930, 3823, 3868, 3999, 4012, 4086, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4614, 4842, 4922, 5331, 5333, 5334], "repeated": [48, 64, 99, 240, 286, 411, 457, 570, 616, 932, 952, 965, 981, 995, 1015, 1031, 1045, 1059, 1147, 1193, 1272, 1289, 1308, 1328, 1376, 1377, 1379, 1388, 1437, 1441, 1450, 1456, 1458, 1503, 1513, 1537, 1563, 1567, 1766, 1782, 1797, 1811, 1826, 1842, 1858, 1874, 1892, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 4923, 5190], "indeed": [48, 64], "repeatedly": [48, 240, 347, 411, 518, 570, 677, 1006, 1147, 1254, 1263, 3818, 4182], "distribution": [48, 64, 904, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 2323, 2349, 3762, 4746, 4768, 4773, 4787, 4796, 5366], "depths": 48, "bad": [48, 64, 66, 232, 234, 265, 403, 405, 436, 562, 564, 595, 1140, 1142, 1172, 1372, 1388, 1644, 3795, 5210, 5213], "disconnected": 48, ".pyplot": [48, 64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4196, 4201, 5286, 5331, 5333, 5334, 5345, 5350, 5352, 5372], "plt": [48, 64, 4196, 4201, 5286, 5345, 5350, 5352, 5372], "fakeboeblingen": [48, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046], "(transpile": [48, 64, 5345, 5348, 5349, 5350, 5352, 5365], ".figure": [48, 64, 235, 406, 565, 1143, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 5281, 5284, 5290, 5291, 5292, 5293, 5331, 5333, 5334, 5349, 5352, 5354], "(figsize": [48, 5352], ".hist": 48, "(depths": 48, "bins": 48, "=list": 48, ", align": 48, "color": [48, 64, 235, 406, 565, 1143, 1673, 1732, 4239, 4240, 5281, 5282, 5287, 5289, 5290, 5291, 5293, 5294, 5331, 5332, 5333, 5334, 5349, 5354], "ac": 48, ".xlabel": [48, 5338, 5339], "fontsize": [48, 5332, 5352, 5354], ".ylabel": [48, 5338, 5339], ");": [48, 64, 334, 505, 664, 1241, 1468, 5341, 5354, 5355], "wide": [48, 64, 186, 4162, 4167, 4172], "signaling": 48, "difficultly": 48, "mapper": [48, 3982, 4964, 4970, 5117, 5190, 5250, 5355], "course": [48, 849, 877, 4030], "failure": [48, 64, 3804, 3847, 5342], "lowest": [48, 64, 165, 1987, 2162, 5202], "mode": [48, 64, 240, 260, 262, 264, 328, 347, 411, 431, 433, 435, 499, 518, 570, 590, 592, 594, 658, 677, 975, 1025, 1147, 1167, 1169, 1171, 1235, 1254, 1282, 1302, 1318, 1379, 1388, 1417, 1422, 1425, 1447, 1645, 1646, 1760, 1786, 1791, 1820, 1836, 1852, 1868, 1982, 3796, 3816, 3832, 4829, 5282], "procedure": [48, 64, 1374, 1480, 4182, 5235, 5236, 5246, 5247], "relatively": [48, 64, 143], "speedy": 48, "conspire": 48, "combining": [48, 64, 4588, 5129, 5134], "eliminating": 48, "exist": [48, 64, 1689, 3778, 3782, 3788, 3790, 3792, 3793, 3794, 3877, 3878, 3879, 3883, 3887, 4843, 5089, 5092], "effective": [48, 1960, 2041, 2140], "difficult": [48, 64, 4220], "optimizations": [48, 64, 147, 1526, 5232, 5233, 5234], "benefits": [48, 64], "gained": 48, "setting": [48, 64, 103, 147, 152, 165, 170, 172, 177, 253, 276, 424, 447, 583, 606, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904, 1160, 1183, 1342, 1388, 1446, 1526, 1644, 1772, 2311, 2323, 2334, 2337, 2349, 2360, 2363, 2373, 2376, 2386, 2808, 2814, 2885, 2932, 3966, 4121, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4463, 4467, 4554, 4571, 4669, 4688, 4813, 4991, 5175, 5230, 5250, 5332], "varies": 48, "numbers": [48, 64, 262, 264, 344, 345, 433, 435, 515, 516, 592, 594, 674, 675, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1169, 1171, 1251, 1252, 1275, 1292, 1312, 1330, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2024, 2025, 2032, 2055, 2063, 2337, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2712, 2723, 2736, 2749, 2762, 2775, 3901, 4254, 4272, 4287, 4463, 4484, 4589, 5280, 5287, 5332], "kk": 48, "=kk": 48, "}'": [48, 64, 1556, 1558, 2909, 2918, 2927, 3907, 5332, 5333, 5334, 5338, 5339, 5341, 5344, 5361, 5364, 5369], "(kk": 48, ", circ": 48, "translated": [48, 64, 105, 107, 247, 418, 577, 1154, 1643, 1678, 4975], "idle": [48, 64, 235, 285, 406, 456, 565, 615, 1143, 1192, 1679, 1700, 4946, 4952, 4964, 5014, 5077, 5089, 5140, 5142, 5143, 5145, 5181, 5217, 5281, 5331, 5333, 5334, 5356], "thought": [48, 2885], "delays": [48, 64, 232, 279, 280, 281, 403, 450, 451, 452, 562, 609, 610, 611, 1140, 1186, 1187, 1188, 3932, 3976, 4037, 4045, 4958, 5079, 5140, 5196], "asap": [48, 64, 4952, 4955, 5140, 5358], "idea": [48, 54, 64], "timeline": [48, 64, 5077, 5143, 5181, 5333, 5334], ".timeline": [48, 64], "_draw": [48, 5282], "constraint": [48, 53, 64, 69, 2882, 3993, 4008, 4182, 4958, 4976, 5023, 5143], "alapschedulinganalysis": 48, "asapschedulinganalysis": 48, "analyzes": 48, "records": [48, 97, 5276], "constrainedreschedule": [48, 64, 5022, 5023], "contraints": 48, "adjustments": 48, "/rescheduling": 48, "paddelay": [48, 64, 5141, 5142], "paddynamicaldecoupling": [48, 64, 5144, 5145], "insert": [48, 64, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1472, 1503, 1537, 1563, 1567, 1640, 2798, 2888, 3704, 3905, 4004, 4008, 4037, 4081, 4091, 4100, 4109, 4118, 4127, 4136, 4145, 4154, 4221, 4476, 4506, 4533, 4628, 4763, 4784, 4799, 4819, 4823, 4825, 4912, 4915, 4970, 5014, 5077, 5117, 5143, 5178, 5304, 5316, 5328, 5342, 5355], "anaylsis": 48, "covers": [48, 1526, 1539, 1542, 1772, 4915], "policy": [48, 64, 4040, 4204, 4207, 4210, 4213, 4216], "topological": [48, 64, 1714, 1715, 1744, 4996, 4999, 5003, 5006, 5018, 5023], "node": [48, 64, 1645, 1654, 1660, 1661, 1662, 1663, 1672, 1674, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1693, 1694, 1696, 1697, 1699, 1702, 1703, 1704, 1705, 1706, 1710, 1711, 1712, 1714, 1715, 1719, 1721, 1722, 1730, 1731, 1734, 1735, 1736, 1738, 1739, 1741, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 2054, 4841, 4860, 4973, 4996, 4999, 5014, 5017, 5018, 5021, 5023, 5142, 5145, 5146, 5147, 5150, 5152, 5156, 5158, 5162, 5207, 5214, 5217, 5341, 5355], "respects": [48, 64, 4812], "wires": [48, 64, 211, 235, 288, 382, 406, 459, 541, 565, 618, 1120, 1143, 1195, 1640, 1654, 1656, 1657, 1658, 1659, 1667, 1679, 1711, 1717, 1723, 1725, 1727, 5020, 5217, 5227, 5238, 5281, 5355], "though": [48, 51, 64, 158, 789, 1953, 2282, 4001, 4008, 4014, 5071, 5123, 5257], "theoretically": 48, "commute": [48, 64, 1722, 1923, 1998, 2025, 2032, 2055, 2063, 2156, 4465, 4466, 4489, 4490, 4492, 4493, 4521, 4523, 4524, 4616, 4618, 4619, 5008, 5137], "-access": [48, 64, 4075], "_if": [48, 63, 64, 240, 411, 570, 1063, 1147, 1645, 1646, 1649, 1650, 4946, 4949, 4952, 4955, 5282, 5350, 5355], "comply": 48, "accordingly": [48, 64, 4991], "-scheduled": [48, 5140], "become": [48, 64, 285, 456, 615, 970, 1192, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1379, 1412, 1415, 1419, 1421, 1424, 2496, 3862, 4961, 5140, 5169, 5262], "\u2500\u2565": [48, 64, 1650, 5350], "\u2510\nq": [48, 64, 254, 276, 289, 334, 425, 447, 460, 505, 584, 606, 619, 664, 943, 1006, 1036, 1161, 1183, 1196, 1241, 1263, 1339, 1343, 1348, 1350, 1352, 1354, 1360, 1362, 1364, 1367, 1372, 1374, 1376, 1379, 1382, 1389, 1394, 1450, 1468, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1503, 1517, 1524, 1533, 1535, 1537, 1539, 1542, 1544, 1552, 1556, 1558, 1560, 1563, 1564, 1567, 5093, 5337, 5348, 5352, 5353, 5354, 5355, 5361, 5367], "\u2500\u2568": 48, "\u2568\u2500": [48, 64, 1650, 5350], "\u2550\u2561": [48, 64, 5350], "0x": [48, 64, 364, 523, 1650, 2915, 2924, 3757, 4196, 4201, 4751, 4773, 4779, 4787, 4793, 4803, 5347, 5348, 5350, 5352, 5355, 5369, 5370], "\u2561 c": 48, "\u2518\u2514": [48, 64, 211, 382, 541, 1102, 1120, 1342, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1503, 1537, 1550, 1563, 1567, 5093, 5163, 5350, 5352, 5354, 5361, 5362, 5367], "realistic": [48, 64], "respecting": 48, "microarcitecture": 48, "dispersive": [48, 4946, 4952, 5181], "qnd": [48, 4946, 4952, 5181], "scheme": [48, 64, 773, 1970], "microwave": [48, 4958], "stimulus": [48, 64, 2289, 2967, 2984, 3001, 3009, 3017, 3034, 3051, 3068, 3085, 3101, 3118, 3134, 3151, 3167, 3184, 3201, 3218, 3235, 3252, 3269, 3286, 3302, 3319, 3336, 3352, 3369, 3386, 3394, 3411, 3445, 3462, 3478, 3509, 3525, 3542, 3567, 3584, 3601, 3634, 3651, 3667, 3684, 3700, 3971, 4041, 4067, 4219, 4946, 4952, 4958, 5181, 5220], "resonator": 48, "ring": [48, 4299, 4851], "-down": 48, "depopulation": 48, "recorded": [48, 136, 3608, 3616, 5366], "buffer": [48, 64, 3973, 4215], "kernel": [48, 53, 2024, 4020, 4075, 5357], "discriminated": [48, 2337, 4946, 4952, 5181, 5359], "moved": [48, 64], "interval": [48, 64, 70, 75, 79, 86, 92, 95, 110, 113, 119, 123, 143, 761, 1399, 1465, 1468, 3832, 4008, 4025, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4203, 4829, 4946, 4952, 5143, 5181, 5193], "modeled": 48, "\u2592\u2592": 48, "\u2592\u2591": 48, "\u2591\u2592": 48, "\u2591\u2591": 48, "accurate": [48, 806, 2323, 2349], "occupied": 48, "half": [48, 64, 110, 113, 1342, 1373, 1392, 1397, 1550, 2162, 2349], "clbit": [48, 64, 193, 197, 203, 211, 251, 252, 265, 347, 364, 368, 374, 382, 422, 423, 436, 518, 523, 527, 533, 541, 581, 582, 595, 677, 923, 936, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1063, 1065, 1102, 1106, 1112, 1120, 1147, 1158, 1159, 1172, 1254, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1656, 1661, 1662, 1667, 1700, 1723, 1725, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4241, 4771, 4946, 4952, 5181, 5239, 5244, 5333, 5334], "very": [48, 57, 64, 97, 103, 904, 2216, 4182, 4964], "precise": [48, 4032], "induce": [48, 1372, 1556, 1558, 5259, 5262], "weird": [48, 1953], "\u2518\nc": [48, 62, 64, 1102, 4958, 5021, 5353], "/\u2561": [48, 5350], "intend": [48, 1644, 4900, 4921], "interpretation": [48, 64], "viewpoint": 48, "front": [48, 64, 211, 382, 541, 1120, 1376, 1377, 1379, 1441, 1442, 1450, 1456, 1503, 1537, 1563, 1567, 1667, 1676, 1903, 1906, 1957, 1959, 2027, 2028, 2036, 2039, 2064, 2073, 2075, 2087, 2089, 2100, 2102, 2115, 2117, 2136, 2138, 2165, 2166, 2167, 2168, 2181, 2182, 2198, 2211, 2224, 2236, 2238, 2255, 2814, 2831, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4494, 4525, 4554, 4571, 4620, 4669, 4688, 4946, 4952, 4970, 5178, 5181, 5331, 5333, 5334, 5347, 5353], "according": [48, 64, 103, 118, 197, 342, 343, 344, 345, 368, 513, 514, 515, 516, 523, 527, 672, 673, 674, 675, 920, 939, 1003, 1106, 1249, 1250, 1251, 1252, 1259, 1441, 1465, 1537, 1642, 1644, 1945, 2001, 3760, 3761, 3995, 4010, 4159, 4164, 4167, 4169, 4174, 4179, 4182, 4184, 4193, 4197, 4204, 4207, 4210, 4213, 4216, 4805, 4806, 4892, 5077, 5080, 5117, 5143, 5178, 5202, 5250, 5268, 5272], "unchanged": [48, 64, 146, 198, 369, 528, 1107], "nodes": [48, 64, 1654, 1662, 1664, 1665, 1666, 1673, 1674, 1676, 1677, 1682, 1686, 1688, 1689, 1693, 1698, 1699, 1702, 1703, 1704, 1706, 1714, 1715, 1721, 1722, 1732, 1734, 1737, 1744, 1746, 1748, 1750, 1752, 4223, 4839, 4842, 4960, 4984, 4996, 4999, 5006, 5008, 5014, 5016, 5023, 5089, 5095, 5193, 5198, 5222, 5282], "operated": [48, 64, 3963, 3969, 3970], "alap": [48, 64, 4023, 4033, 4946, 4949, 5333, 5334, 5358], "wire": [48, 64, 235, 406, 565, 1143, 1679, 1689, 1706, 1745, 1751, 4254, 4272, 4287, 5008, 5023, 5140, 5281], "flipped": [48, 64, 288, 459, 618, 1195, 1318, 1447, 5233, 5234], "considering": [48, 103, 5202, 5226], "-measure": [48, 4388, 4603, 4654], "overlap": [48, 64, 165, 1063, 2001, 3728, 3993, 4006, 4008, 5023, 5046, 5047, 5059, 5333, 5334, 5362], "preserved": [48, 64, 2823, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700, 4915, 5091], "dagopnode": [48, 64, 1661, 1662, 1674, 1677, 1693, 1710, 1711, 1714, 1715, 1746, 1747, 1748, 1750, 1752, 4946, 4952, 5017, 5023, 5181, 5355], "durations": [48, 64, 1644, 2842, 4018, 4873, 4874, 4876, 4877, 4925, 4946, 4949, 4952, 4955, 5054, 5077, 5104, 5143, 5196], "inverted": [48, 254, 425, 584, 929, 949, 962, 1012, 1027, 1042, 1056, 1161, 1269, 1285, 1304, 1341, 1344, 1347, 1359, 1361, 1363, 1366, 1368, 1370, 1391, 1414, 1434, 1454, 1461, 1473, 1488, 1493, 1498, 1510, 1528, 1541, 1543, 1546, 1549, 1554, 1562, 1566, 1779, 1822, 1838, 1854, 1870, 2705, 2718, 2731, 2744, 2757, 2770], "anyways": 48, "_write": [48, 64, 4946, 4952, 5181], "_latency": [48, 64, 3963, 4946, 4952, 5181], "former": [48, 64, 1691, 1717], "beginning": [48, 64, 235, 406, 565, 1143, 1444, 1934, 1943, 3904, 5023, 5143, 5281], "comes": [48, 64, 1706, 2277, 2909, 2918, 2927, 3891, 4518, 4544, 4639, 4810, 5331, 5333, 5334], "latencies": [48, 64, 5181], "microarchitecture": [48, 64], "smart": 48, "insertion": [48, 64, 1003, 4476, 4506, 4533, 4628, 5077, 5117, 5143, 5178, 5355], "yields": [48, 64, 849, 877, 973, 1023, 1280, 1299, 1441, 1456, 1472, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 1988, 2002, 2003, 2004, 2005, 2007, 2011, 2015, 2019, 4473, 4500, 4716], "unnecessary": [48, 64, 2323, 2349], "-xgate": 48, "latency": [48, 64, 3957, 3963, 4946, 4952, 5023, 5181, 5183], "intuitive": [48, 64], "finite": [48, 64, 147, 165, 172, 683, 773, 849, 877, 896, 1555, 2001, 5362], "\u2565\u2500": 48, "\u2510\u2514": [48, 64, 254, 425, 584, 1161, 1371, 1450, 1503, 1537, 5354, 5361], "\u2565\u2518": [48, 64, 1067, 5348, 5350, 5352, 5353, 5354, 5367], "\u2591\nc": 48, "/abs": [48, 64, 97, 147, 156, 255, 256, 426, 427, 585, 586, 693, 814, 1162, 1163, 1336, 1472, 1478, 1479, 1526, 1974, 3993, 5099, 5146, 5151, 5342, 5370], "passmangers": 48, "_preset": [48, 64], "_pass": [48, 64, 2798, 2842, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5250, 5257], "_passmanager": [48, 5355], "fakelagosv": [48, 3266, 3267, 3268, 3269, 3270, 3271, 3272], "stagedpassmanager": [48, 64, 4916, 4917, 4918, 4919, 4920, 4921, 5230, 5231, 5232, 5233, 5234], "targetting": 48, "=fakelagosv": 48, "compose": [48, 64, 211, 382, 541, 1120, 1442, 1667, 1903, 1957, 2024, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2241, 2814, 2822, 2831, 2836, 4301, 4308, 4318, 4337, 4356, 4367, 4404, 4426, 4446, 4467, 4479, 4494, 4511, 4519, 4525, 4529, 4537, 4552, 4554, 4571, 4586, 4614, 4620, 4624, 4632, 4669, 4688, 4882, 5130, 5347, 5353, 5361, 5366], "stages": [48, 64, 4915], "pipeline": [48, 64, 4915, 5217], "wanted": [48, 64, 1689, 4232, 4930], "stage": [48, 64, 4873, 4915], "dynamical": [48, 64, 4026, 4203, 4206, 5077, 5143], "routing": [48, 64, 1644, 3708, 4901, 4915, 4964, 4970, 5117, 5175, 5178, 5190, 5214, 5217, 5230], "rxgate": [48, 64, 291, 462, 621, 1198, 1384, 1487, 1488, 1588, 4922, 4930, 5353], "tgate": [48, 64, 332, 503, 662, 1239, 1534, 4299], "tdggate": [48, 64, 333, 504, 663, 1240, 1536, 4299], "alapscheduleanalysis": [48, 64, 4946, 4950, 4951, 5021, 5143], "cxcancellation": [48, 64, 4980, 4981, 5355], "inversecancellation": [48, 64, 5106, 5107], ".durations": 48, "dd": [48, 64, 5077, 5079, 5143], "_sequence": [48, 64, 5077, 5143], ", xgate": [48, 64, 5077, 5143], "_pm": [48, 64, 5362], "(-": [48, 64, 109, 155, 254, 425, 584, 904, 1161, 1347, 1359, 1361, 1363, 1374, 1382, 1383, 1384, 1385, 1386, 1388, 1397, 1414, 1448, 1450, 1461, 1482, 1486, 1488, 1489, 1491, 1493, 1494, 1496, 1498, 1499, 1501, 1522, 1541, 1542, 1543, 1546, 1549, 1556, 1558, 1586, 1753, 4162, 4172, 4201, 4220, 4421, 4463, 4519, 5093, 5337, 5338, 5339, 5340, 5345, 5350, 5357, 5359, 5361, 5362, 5372], ", tdggate": 48, "_opt": [48, 2323, 2349], ", (": [48, 1644, 2875, 2885, 4229, 4928, 5339, 5366], "-layout": [48, 64], ".pre": 48, ".scheduling": [48, 64], ".aqc": [49, 64], "detail": [49, 64, 69, 701, 709, 717, 725, 734, 743, 752, 781, 789, 798, 806, 833, 841, 861, 869, 888, 896, 1376, 1377, 1379, 1399, 1441, 1450, 1456, 1471, 1472, 1503, 1537, 1563, 1567], "interfaces": [51, 64], "hook": [51, 64, 4915], "packages": [51, 53, 64, 4182, 4964, 5350], "seamlessly": [51, 64], "exposed": [51, 64, 798, 4922], "opt": [51, 64, 904, 5337], "setuptools": [51, 57, 64], "advertise": [51, 64], "unitarysynthesisplugin": [51, 64, 5227, 5237, 5238], "contract": 51, "positional": [51, 64, 2308, 2486, 2500, 2905, 3824, 3885, 3918], "dagcircuit": [51, 53, 57, 64, 1644, 1645, 1646, 1650, 1651, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1745, 1749, 1751, 2800, 2844, 4833, 4900, 4921, 4943, 4948, 4951, 4954, 4957, 4958, 4960, 4961, 4963, 4964, 4966, 4970, 4972, 4975, 4981, 4984, 4987, 4990, 4991, 4993, 5002, 5013, 5016, 5017, 5023, 5030, 5065, 5070, 5073, 5079, 5082, 5085, 5091, 5095, 5101, 5104, 5107, 5110, 5113, 5116, 5119, 5132, 5136, 5139, 5142, 5145, 5149, 5155, 5161, 5165, 5168, 5171, 5174, 5177, 5180, 5183, 5186, 5190, 5192, 5195, 5198, 5201, 5204, 5207, 5210, 5213, 5217, 5222, 5227, 5238, 5282, 5355], "synthesized": [51, 64, 1401, 1448, 5113, 5116, 5202, 5204, 5226], "_coupling": [51, 64, 5226, 5237], "_plugin": [51, 64, 1644, 4901, 5204, 5230, 5237], "_pkg": 51, "_dag": [51, 64, 1650, 5227, 5238, 5282, 5355], "_from": [51, 64, 97, 136, 5342], "specialunitarysynthesis": 51, "(plugin": 51, ".unitarysynthesisplugin": 51, "_natural": [51, 5226, 5237], "_direction": [51, 64, 2323, 4927, 4976, 4987, 4990, 5202, 5214, 5217, 5226, 5237], "_optimize": [51, 64, 4705, 5202, 5226, 5237], "_lengths": [51, 64, 2808, 2848, 5226, 5237], "_errors": [51, 64, 2808, 5226, 5237, 5365], "min": [51, 64, 110, 130, 157, 158, 761, 841, 1399, 1567, 1644, 2018, 2311, 3737, 3963, 4922, 5202, 5220, 5226, 5237, 5366], "_bases": [51, 5226, 5237], "(unitary": [51, 64, 5364, 5367], "reason": [51, 64, 3804, 3847, 3913, 5214, 5217], "insufficient": [51, 64, 1063, 5369], "issue": [51, 57, 64, 147, 165, 172, 1717, 1987, 4013, 4014], "expanding": 51, "stable": [51, 53, 57, 64, 120, 849, 869, 877, 4915, 5268, 5272, 5354], "expand": [51, 64, 203, 278, 374, 449, 533, 608, 1112, 1185, 2029, 2818, 2834, 4232, 4305, 4322, 4341, 4360, 4382, 4408, 4431, 4450, 4474, 4501, 4530, 4540, 4552, 4558, 4576, 4600, 4625, 4647, 4673, 4692, 5068, 5211, 5353, 5356, 5366], "reserved": [51, 64], "_*": [51, 64, 5227, 5238], "expose": [51, 64, 1644, 4370, 4716, 4728, 4900, 4921], "_points": [51, 769, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 5361], ".setup": 51, "setup": [51, 53, 57, 64, 2867, 5040, 5061], ".unitary": [51, 64, 5367], "namespace": [51, 64, 3736, 3889, 3890, 3923, 4035, 4057, 4058, 4059, 4060], ".module": 51, ":specialunitarysynthesis": 51, "},": [51, 850, 878, 1399, 1401, 1544, 1547, 2886, 2887, 2909, 2915, 2918, 2924, 2927, 2933, 4182, 4193, 4197, 4463, 4519, 4614, 4651, 4714, 4720, 4726, 5033, 5347, 5348, 5350, 5359, 5361, 5368], "(note": 51, "isn": [51, 64, 2165, 2168, 2334, 2360, 2373, 2386, 4727, 4930, 4938, 4973], "tunables": 51, "clearly": [51, 64], "document": [51, 2282, 3902, 3904], "discover": [51, 64], "installed": [51, 53, 64, 277, 448, 607, 682, 701, 725, 734, 743, 752, 781, 789, 869, 912, 1002, 1184, 1441, 1644, 1673, 1675, 1732, 2012, 2016, 2323, 2886, 2887, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 4182, 4717, 4827, 4844, 4896, 4901, 4917, 4964, 5204, 5228, 5229, 5230, 5253, 5264, 5265, 5283, 5287, 5288, 5289, 5331, 5333, 5334, 5335], "constructors": [51, 64], "loaded": [51, 64, 235, 406, 565, 1143, 4182, 4297, 4298, 5281], "/imported": 51, "logging": [51, 64, 2323, 2349, 3920, 5338, 5355], "enabled": [53, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2323, 2349, 2363, 2376, 2865, 3963, 5226, 5239, 5244, 5331, 5339], "satisfied": [53, 64, 5190], "missingoptionallibraryerror": [53, 64, 277, 448, 607, 701, 725, 734, 743, 752, 781, 789, 869, 1002, 1184, 1675, 2012, 2016, 2886, 2887, 4827, 4844, 4964, 5099, 5253, 5280, 5281, 5283, 5284, 5285, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335, 5342, 5343], "_aer": [53, 57], "-performance": [53, 64], "cloud": [53, 5364], "_ignis": 53, "ignis": [53, 5253], "verification": [53, 60, 64], "characterization": [53, 60, 64], "correction": [53, 64, 4162, 4192, 5250, 5268, 5272, 5345, 5372], "_toqm": 53, "toqm": [53, 64, 1644], "-optimal": [53, 64, 4370, 4708, 4716], "_constraint": 53, "-constraint": [53, 64], "github": [53, 57, 64, 156, 701, 781, 869, 904, 1732, 2909, 2918, 2927, 5283], ".com": [53, 57, 64, 156, 701, 781, 869, 904, 1475, 1732, 2909, 2918, 2927, 3748, 3752, 5117, 5283], "/python": [53, 57, 912, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5372], ">_": [53, 64, 5086, 5357], "satisfaction": 53, "solver": [53, 64, 180, 362, 709, 717, 798, 806, 814, 833, 841, 849, 861, 877, 888, 896, 2001, 2018, 2337, 2884, 4717, 4964, 5033, 5099], ":`": [53, 57, 64, 4922], "~.": 53, "csplayout": [53, 64, 4977, 4978, 5355], "_cplex": 53, "cplex": [53, 64, 4964], "mixed": [53, 64, 2028, 2039, 2064, 2856, 2857, 2861, 4297, 5293, 5366], "-integer": [53, 64, 4329, 4348, 4415, 4457, 4680, 4699], "quadratic": [53, 64, 97, 701, 1393, 1475, 1476, 2872, 2876, 2883, 2884], "bipmapping": [53, 64, 4965, 4966], "_cvxpy": 53, "cvxpy": [53, 64, 2883, 2886, 2887, 4717], "solving": [53, 64, 186, 798, 4964, 5236], "convex": 53, "calculating": [53, 64, 162, 179, 798, 1987, 4821], "diamond": [53, 64, 4717], "norms": [53, 4717], ".diamond": [53, 64], "_norm": [53, 64, 191, 761, 2323, 2349], "_docplex": [53, 64], "decision": [53, 64, 765, 769, 877], "modelling": 53, "prescriptive": 53, "_fixtures": 53, "suite": [53, 60, 64], "fixtures": 53, "_testtools": 53, "developers": 53, "_ipython": 53, "ipython": [53, 64, 1002, 1673, 1732, 4380, 4644, 5280, 5335], "visualisations": 53, "magics": [53, 64], "_ipywidgets": 53, "monitoring": [53, 5340], "widgets": [53, 64], "ipywidgets": 53, "_jax": 53, "calculation": [53, 64, 186, 849, 877, 1717, 1987, 1988, 2165, 2166, 4473, 4500], "opflow": [53, 64, 1377, 1919, 2004, 2006, 5338], ".gradients": [53, 64, 5338, 5362], "jax": [53, 2012, 2016], "autodifferentiation": 53, "_matplotlib": [53, 64], "visualisation": 53, "visualization": [53, 214, 235, 385, 406, 544, 565, 1122, 1143, 1472, 1537, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 5181, 5279, 5281, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334], "almost": [53, 64], "_networkx": [53, 64, 5341], "retworkx": [53, 64, 1743, 5282], "dependency": [53, 64, 1647, 1651, 1652, 1653, 1722, 3966, 4182, 5037, 5047, 5193], "networkx": [53, 64, 1675, 1713, 1742, 5341], "_nlopt": 53, "nlopt": [53, 682, 725, 726, 734, 735, 743, 744, 752, 753, 789, 790], "nonlinear": [53, 701, 752, 789, 4162, 4192], "optimisation": 53, "optimizers": [53, 64, 165, 172, 683, 725, 877, 912, 2001, 2008, 5241, 5338], ".optimizers": [53, 64, 849, 877, 904, 5337, 5338, 5339, 5340, 5341, 5362], "installation": [53, 58, 64, 682, 912], "installing": [53, 64], "_pil": [53, 64], "pil": [53, 235, 406, 565, 1002, 1143, 4844, 5281, 5282, 5283, 5354], "image": [53, 64, 235, 406, 565, 1002, 1143, 1399, 1645, 1646, 1673, 1732, 3885, 3909, 3920, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4896, 4917, 5281, 5282, 5283, 5287, 5289, 5290, 5292, 5331, 5332, 5333, 5334], "-manipulation": 53, "pillow": [53, 64, 1002, 4844, 4896, 4917], "fork": [53, 64], "modes": [53, 64, 262, 264, 328, 433, 435, 499, 592, 594, 658, 1169, 1171, 1235], "_pydot": 53, "pydot": [53, 1002, 1673, 1732, 4844, 4896, 4917, 5283, 5355], "graphviz": [53, 64, 1673, 1732, 4844, 4896, 4917, 5282, 5283, 5355], "_graphviz": 53, "_pylatex": [53, 64], "latex": [53, 56, 62, 64, 235, 406, 565, 1143, 4380, 4644, 5280, 5281, 5295, 5307, 5319, 5331, 5332, 5333, 5334, 5347, 5354], "drawers": [53, 64], "pylatexenc": [53, 64], "project": [53, 64, 3704, 3730, 3748, 3749, 3750, 3751, 3752, 3766, 3769, 3782, 3789, 3793, 3811, 3817, 3830, 3838], "correctly": [53, 64, 4802], "_seaborn": 53, "seaborn": [53, 64, 5288], "_sklearn": 53, "regularisation": 53, "scikit": [53, 57, 64, 682, 701, 781, 869], "_skquant": 53, "optimisers": 53, "quant": [53, 64, 1458, 4316, 4335, 4370, 4402, 4444, 4667, 4686, 4716, 4717, 4728, 5347], "_sqsnobfit": 53, "sqsnobfit": [53, 869], "branch": [53, 252, 423, 582, 869, 1159], "fit": [53, 64, 235, 406, 565, 869, 1143, 3781, 3792, 5232, 5281], "snobfit": [53, 870, 871, 872, 873, 874, 875, 876], "_symengine": 53, "symengine": [53, 64, 1081, 1097, 4182], "accelerate": [53, 64, 2323], "testtools": 53, "_z": [53, 64, 1483, 1564, 4421, 4519, 4614, 5332, 5350, 5352, 5354], "theorem": [53, 234, 405, 564, 1142, 1372], "prover": 53, "crosstalkadaptiveschedule": [53, 64, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5355], "hoareoptimizer": [53, 64, 5100, 5101, 5355], "_pdflatex": 53, "pdflatex": 53, "qcircuit": [53, 64, 5354], ".tex": 53, "_pdftocairo": [53, 64], "-generated": [53, 64, 920, 939, 1101, 1259, 4802], "rasterised": 53, "images": [53, 64, 235, 406, 565, 1143, 5281], "pdftocairo": 53, "poppler": 53, "pdf": [53, 57, 64, 116, 234, 342, 343, 344, 345, 405, 513, 514, 515, 516, 564, 672, 673, 674, 675, 761, 1142, 1249, 1250, 1251, 1252, 1332, 1336, 1815, 1831, 1847, 1863, 1976, 2162], "lazydependencymanager": 53, "lazyimporttester": 53, "lazysubprocesstester": 53, "msg": [53, 1718, 3951, 4238, 5261], "mananger": 53, "existence": 53, "booleans": 53, "tested": [53, 64, 101, 251, 252, 422, 423, 581, 582, 1036, 1158, 1159, 1263], "evaluated": [53, 64, 82, 83, 88, 126, 127, 131, 132, 134, 135, 147, 148, 153, 163, 164, 165, 166, 171, 172, 173, 178, 251, 252, 422, 423, 581, 582, 849, 877, 1036, 1158, 1159, 1467, 1469, 1905, 1906, 1958, 1959, 1995, 2000, 2001, 2024, 2028, 2032, 2038, 2039, 2064, 2074, 2075, 2088, 2089, 2101, 2102, 2116, 2117, 2137, 2138, 2182, 2198, 2204, 2211, 2223, 2224, 2237, 2238, 2248, 2255, 2261, 3993, 4008, 4182, 4830, 4836, 4863, 4870, 5178], "encapsulate": [53, 64, 956], "lazyimportmanager": 53, ".require": 53, "_call": [53, 64], "_visualisation": 53, "...": [53, 64, 181, 343, 344, 514, 515, 673, 674, 973, 1023, 1250, 1251, 1280, 1299, 1376, 1379, 1382, 1388, 1399, 1406, 1450, 1468, 1503, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2875, 2885, 2889, 2909, 2915, 2918, 2924, 2927, 4229, 4402, 4519, 4614, 4747, 4769, 5350, 5353, 5366, 5369], "_other": [53, 64], "_now": 53, "_third": 53, "pyplot": [53, 64], "entered": [53, 64, 235, 240, 406, 411, 565, 570, 912, 1143, 1147, 2830, 5281, 5332], "third": [53, 64, 283, 454, 613, 1190, 4928], "loader": 53, "attempts": [53, 64, 682, 761, 849], "management": [53, 64, 3716, 3770], "symbols": [53, 64, 1462, 2876, 2877, 5331, 5333, 5334], "importable": [53, 64], "availability": 53, "_install": [53, 64], "_is": 53, "_available": 53, "ever": 53, "disable": [53, 58, 64, 3747, 3754, 3999, 4012, 4241, 5331, 5333, 5334], "_locally": 53, "behave": [53, 64, 1994, 2024, 2032, 5227, 5238], "raising": [53, 64], "already": [53, 64, 82, 126, 131, 134, 136, 148, 166, 173, 251, 267, 422, 438, 581, 597, 689, 904, 1158, 1174, 1377, 1906, 1959, 2028, 2039, 2056, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2311, 2499, 2802, 2803, 2805, 2806, 2807, 2808, 3748, 3774, 3781, 3782, 3783, 3814, 3845, 3862, 3864, 3888, 3918, 4568, 4579, 4923, 4939, 4961, 4973, 4991, 5033, 5091, 5092, 5178], "tests": [53, 64, 3905], "_or": [53, 64, 4020, 4030], "_callable": 53, "callable": [53, 64, 66, 75, 79, 86, 95, 113, 118, 123, 130, 133, 147, 151, 165, 169, 172, 176, 188, 190, 233, 321, 363, 404, 492, 563, 651, 687, 696, 704, 712, 720, 729, 738, 747, 756, 765, 766, 773, 776, 784, 793, 801, 809, 817, 825, 836, 844, 849, 850, 852, 855, 856, 864, 872, 877, 878, 882, 883, 888, 891, 899, 907, 1063, 1141, 1228, 1293, 1313, 1376, 1377, 1379, 1407, 1410, 1441, 1444, 1450, 1456, 1462, 1465, 1471, 1503, 1537, 1563, 1567, 1644, 1714, 1715, 1934, 2001, 2008, 2025, 2032, 2054, 2055, 2063, 2176, 2251, 2308, 2473, 2486, 2487, 2500, 2798, 2890, 2905, 3705, 3736, 3737, 3824, 3885, 3909, 3918, 3983, 4000, 4001, 4013, 4014, 4026, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4206, 4712, 4743, 4747, 4769, 4819, 4823, 4825, 4900, 4921, 5250, 5261, 5278, 5342, 5362], "callables": [53, 64, 822, 4000, 4001, 4013, 4014, 5278], "decorated": [53, 64, 5261], "@has": 53, "_x": [53, 64, 763, 1448, 1465, 1483, 1552, 4421, 4519, 4614, 5332, 5347, 5348, 5350, 5354], "opposed": [53, 64, 2867], "_instance": [53, 64, 69, 92, 97, 103, 110, 115, 118, 136, 147, 156, 162, 165, 172, 179, 186, 904, 1926, 4866, 4867, 5250, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5361, 5362], "_class": [53, 64, 4930], "initialised": 53, "ensures": [53, 5077, 5143], "eagerly": 53, "attempt": [53, 64, 1924, 1925, 2299, 2475, 2896, 3799, 3814, 3846, 3849, 3862, 3905, 4705, 4973, 5190, 5202, 5214, 5217], "_modules": 53, "tester": 53, "union": [53, 64, 66, 69, 74, 75, 79, 82, 84, 86, 88, 90, 92, 93, 95, 97, 101, 103, 107, 110, 113, 115, 118, 120, 123, 126, 128, 130, 131, 133, 134, 136, 140, 146, 147, 148, 149, 150, 151, 156, 162, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 202, 204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 251, 252, 257, 258, 262, 263, 264, 265, 268, 273, 274, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 366, 373, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 422, 423, 428, 429, 433, 434, 435, 436, 439, 444, 445, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 523, 525, 532, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 581, 582, 587, 588, 592, 593, 594, 595, 598, 603, 604, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 687, 693, 696, 704, 712, 720, 729, 738, 747, 756, 766, 773, 776, 784, 793, 801, 809, 817, 825, 830, 836, 844, 849, 852, 855, 864, 872, 877, 882, 888, 891, 899, 907, 917, 918, 970, 975, 1025, 1036, 1065, 1071, 1076, 1087, 1092, 1102, 1104, 1106, 1111, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 1263, 1282, 1302, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1442, 1447, 1448, 1449, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1476, 1477, 1480, 1503, 1526, 1537, 1550, 1551, 1555, 1556, 1558, 1563, 1567, 1641, 1642, 1643, 1644, 1655, 1760, 1791, 1820, 1836, 1852, 1868, 1901, 1906, 1908, 1914, 1925, 1926, 1928, 1934, 1937, 1939, 1941, 1942, 1944, 1945, 1953, 1954, 1956, 1959, 1967, 1970, 1985, 1988, 1991, 1994, 1996, 1999, 2003, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2025, 2028, 2032, 2039, 2042, 2048, 2053, 2054, 2055, 2063, 2064, 2069, 2075, 2079, 2084, 2085, 2089, 2093, 2097, 2102, 2112, 2117, 2119, 2123, 2127, 2130, 2132, 2138, 2141, 2146, 2153, 2162, 2166, 2167, 2168, 2169, 2171, 2176, 2177, 2180, 2182, 2189, 2195, 2198, 2208, 2209, 2211, 2215, 2220, 2224, 2232, 2238, 2239, 2246, 2251, 2252, 2255, 2290, 2494, 2498, 2501, 2502, 2503, 2798, 2842, 2936, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3708, 3718, 3720, 3723, 3730, 3737, 3738, 3739, 3762, 3779, 3781, 3782, 3783, 3787, 3789, 3790, 3792, 3793, 3794, 3796, 3801, 3810, 3830, 3838, 3848, 3851, 3855, 3860, 3864, 3871, 3872, 3873, 3874, 3875, 3885, 3887, 3888, 3896, 3929, 3930, 3940, 3941, 3942, 3943, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 4000, 4001, 4004, 4006, 4008, 4009, 4010, 4013, 4014, 4019, 4020, 4025, 4026, 4030, 4031, 4032, 4037, 4041, 4047, 4049, 4050, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4076, 4081, 4084, 4085, 4086, 4091, 4094, 4095, 4100, 4103, 4104, 4109, 4112, 4113, 4118, 4121, 4122, 4127, 4130, 4131, 4136, 4139, 4140, 4145, 4149, 4154, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4203, 4206, 4218, 4219, 4224, 4228, 4297, 4298, 4743, 4747, 4769, 4770, 4811, 4813, 4819, 4823, 4825, 4875, 4877, 4878, 4894, 4895, 4899, 4900, 4916, 4920, 4921, 4973, 5003, 5007, 5068, 5105, 5147, 5239, 5244, 5250, 5252, 5253, 5257, 5259, 5331, 5333, 5334], "iterable": [53, 64, 198, 200, 240, 369, 371, 411, 528, 530, 570, 966, 1006, 1046, 1107, 1109, 1147, 1644, 2008, 2020, 2265, 2267, 2269, 2272, 2287, 2502, 2503, 2798, 2813, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3906, 3940, 3941, 3942, 3943, 3965, 3983, 3984, 3985, 3986, 3987, 3989, 3990, 3992, 4000, 4001, 4013, 4014, 4034, 4037, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4219, 4225, 4228, 4232, 4376, 4385, 4577, 4579, 4640, 4650, 4743, 4744, 4745, 4747, 4754, 4767, 4769, 4777, 4791, 4877, 4906, 4915, 5055, 5298, 5310, 5322], "iterables": 53, "try": [53, 64, 66, 86, 235, 406, 565, 1143, 1912, 1963, 2030, 2046, 2059, 2065, 2078, 2144, 2187, 2243, 3796, 3814, 3862, 3906, 3909, 4333, 4352, 4419, 4461, 4684, 4703, 4705, 4976, 5137, 5178, 5217, 5281, 5342, 5343, 5356, 5364, 5369], "\"pdflatex": 53, "empty": [53, 64, 82, 126, 130, 131, 133, 134, 148, 166, 173, 199, 216, 255, 256, 343, 344, 345, 370, 387, 426, 427, 514, 515, 516, 529, 546, 585, 586, 673, 674, 675, 822, 1003, 1108, 1124, 1162, 1163, 1250, 1251, 1252, 1654, 1668, 1706, 1719, 1722, 1793, 1928, 1929, 2159, 2160, 2801, 3798, 3801, 3805, 3833, 3983, 3993, 4008, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4172, 4241, 4299, 4490, 4493, 4521, 4524, 4531, 4577, 4579, 4589, 4616, 4619, 4626, 4760, 4762, 4783, 4798, 4894, 4911, 4915, 5226, 5303, 5315, 5327, 5361, 5366], "-facing": [54, 5268, 5272], "stability": [54, 64, 850, 878, 5268, 5272], "completemeasfitter": [54, 64, 5250, 5269, 5270, 5271, 5339], "tensoredmeasfitter": [54, 64, 5250, 5253, 5273, 5274], "_cls": [54, 64, 5250, 5268, 5272, 5339], "treated": [54, 64, 2889, 4930], "private": [54, 57, 64, 2277, 2909, 2918, 2927, 3782, 3793, 3891], "relied": [54, 64], "upon": [54, 64, 140, 781, 1648, 1649, 1989, 3819, 4045, 5003, 5260], "mitigate": [54, 64, 5250], "measuring": [54, 64, 188, 190, 363, 2161, 2232, 4389, 4655, 5270, 5274], "interest": [54, 64, 143, 1399, 4811, 4812, 4813], "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb": [56, 58, 62, 5355, 5364], "\u5b9f\u884c": [56, 57, 58, 59, 62, 63, 5338, 5339, 5340, 5341, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5354, 5356, 5357, 5358, 5359, 5362, 5364, 5368, 5369, 5370, 5372], "\u3067\u304d\u308b": [56, 57, 59, 60, 63, 5338, 5339, 5340, 5342, 5343, 5347, 5348, 5349, 5354, 5355, 5357, 5358, 5361, 5364, 5367, 5368, 5369, 5370], "\u3088\u3046": [56, 57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5357, 5358, 5359, 5361, 5362, 5365, 5366, 5367, 5368, 5370, 5372], "\u306a\u3063": [56, 57, 63, 5337, 5339, 5340, 5341, 5342, 5343, 5345, 5350, 5354, 5356, 5359, 5372], "\u7279\u5b9a": [56, 57, 62, 5337, 5342, 5352, 5355, 5357, 5358, 5361], "\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9": [56, 57, 5355], "\u5408\u308f\u305b": [56, 63], "\u30c7\u30d5\u30a9\u30eb\u30c8": [56, 57, 62, 5337, 5339, 5340, 5342, 5347, 5348, 5354, 5355, 5356, 5357, 5358, 5361, 5364, 5367, 5369], "\u52d5\u4f5c": [56, 57, 58, 63, 5337, 5340, 5345, 5350, 5354, 5355, 5356, 5358, 5359, 5361, 5364, 5366, 5370, 5372], "\u5909\u66f4": [56, 57, 59, 62, 5338, 5340, 5347, 5348, 5350, 5354, 5355, 5357, 5361], "\u3059\u308b": [56, 58, 59, 62, 63, 5338, 5339, 5340, 5341, 5343, 5344, 5345, 5347, 5348, 5350, 5352, 5354, 5356, 5357, 5358, 5359, 5362, 5364, 5368, 5369, 5372], "\u305f\u3081": [56, 57, 58, 59, 60, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5369, 5370, 5372], "\u30aa\u30d7\u30b7\u30e7\u30f3": [56, 5337, 5338, 5342, 5352, 5354, 5355, 5359, 5367, 5369], "\u624b\u9806": [56, 57, 62, 63, 5350, 5361], "\u3044\u304f\u3064\u304b": [56, 57, 58, 60, 62, 63, 5340, 5342, 5349, 5353, 5357, 5361, 5364, 5366, 5368, 5369, 5370], "\u3042\u308a": [56, 57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u307e\u3059": [56, 57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5365, 5366, 5367, 5368, 5370, 5372], "\u8a2d\u5b9a": [56, 57, 62, 5338, 5339, 5340, 5342, 5343, 5347, 5348, 5349, 5352, 5353, 5354, 5357, 5359, 5361, 5365, 5366, 5369, 5370], "\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3": 56, "\u3067\u3059": [56, 57, 58, 60, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u3053\u308c": [56, 57, 58, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5370, 5372], "\u4f7f\u7528": [56, 57, 60, 62, 63, 5338, 5339, 5340, 5343, 5345, 5347, 5348, 5350, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5362, 5365, 5366, 5368, 5370, 5372], "ini": 56, "\u5f62\u5f0f": [56, 57, 62, 5337, 5339, 5340, 5342, 5343, 5347, 5348, 5350, 5355, 5357, 5364, 5370], "[default": [56, 62, 64, 4380, 4644, 4714, 4720, 4726], "_drawer": [56, 62, 64, 235, 406, 565, 1143, 1645, 1646, 4380, 4644, 5077, 5143, 5350, 5355], "_mpl": [56, 64, 235, 406, 565, 1143, 5281], "_path": [56, 64, 235, 406, 565, 912, 1143, 4842, 5030, 5281, 5355], ":~": [56, 64, 852], "/.": [56, 62, 64, 235, 406, 565, 1143, 4380, 4644, 5281, 5332], "hinton": [56, 64, 4380, 4644, 5292, 5347, 5349], "_optimization": [56, 64, 4915], "_processes": [56, 64, 841, 4830], "\u3053\u306e": [56, 57, 58, 60, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "/settings": [56, 62, 64, 235, 406, 565, 1143, 4380, 4644, 5281, 5332], ".conf": [56, 62, 64, 235, 406, 565, 1143, 4380, 4644, 5281, 5332], "\u306b\u3042\u308a": [56, 57], "\u308c\u308b": [56, 57, 59, 62, 63, 5337, 5339, 5340, 5342, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u30d1\u30b9": [56, 57, 5349, 5354, 5357, 5358], "_settings": [56, 64, 4031], "\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9": [56, 5356, 5366], "\u3067\u304d": [56, 57, 58, 59, 60, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u3044\u308b": [56, 57, 58, 59, 62, 63, 5337, 5339, 5340, 5341, 5342, 5343, 5344, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5368, 5370], "\u5834\u5408": [56, 57, 58, 59, 62, 63, 5337, 5338, 5340, 5341, 5342, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "\u305d\u306e": [56, 57, 62, 63, 5337, 5338, 5339, 5340, 5341, 5345, 5347, 5348, 5353, 5355, 5356, 5357, 5358, 5359, 5362, 5364, 5365, 5369, 5372], "\u3068\u3057\u3066": [56, 57, 58, 59, 63, 5337, 5338, 5339, 5340, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5370, 5372], "\u5229\u7528": [56, 57, 58, 59, 60, 62, 63, 5340, 5349, 5350, 5354, 5355, 5357, 5359, 5362, 5364, 5369], "\u53ef\u80fd": [56, 57, 58, 59, 63, 5337, 5339, 5340, 5341, 5342, 5343, 5350, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5367, 5368, 5369, 5370], "\u56de\u8def": [56, 58, 60, 5337, 5340, 5342, 5343, 5344, 5345, 5349, 5350, 5355, 5357, 5358, 5359, 5361, 5366, 5369, 5370, 5372], "\u30c9\u30ed\u30ef\u30fc": [56, 5354], "\u304a\u3088\u3073": [56, 57, 58, 59, 63, 5342, 5349, 5350, 5355, 5358, 5359, 5362, 5364, 5365, 5366, 5367, 5370], "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": [56, 57, 62, 5337, 5339, 5340, 5342, 5343, 5349, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5361, 5364, 5365], "\u307e\u305f": [56, 57, 59, 5338, 5339, 5340, 5341, 5345, 5347, 5348, 5349, 5353, 5354, 5356, 5357, 5358, 5359, 5361, 5364, 5366, 5368, 5370, 5372], "_source": [56, 62, 64, 235, 406, 565, 1143, 4380, 4644, 5281], "ouptut": 56, "\u660e\u793a": [56, 5340, 5342, 5353, 5355, 5357, 5368], "\u306a\u3044": [56, 57, 58, 59, 63, 5338, 5340, 5342, 5345, 5349, 5350, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5364, 5365, 5367, 5368, 5369, 5370, 5372], "\u51fa\u529b": [56, 57, 58, 62, 63, 5337, 5340, 5342, 5347, 5348, 5350, 5355, 5356, 5357, 5358, 5361, 5365, 5368, 5369, 5370], "\u30b9\u30bf\u30a4\u30eb\u30b7\u30fc\u30c8": 56, "bw": [56, 64, 5332], "\u30e2\u30fc\u30c9": [56, 57, 5340, 5354], "\u72b6\u614b": [56, 57, 62, 63, 5340, 5345, 5347, 5352, 5355, 5356, 5358, 5359, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u53ef\u8996": [56, 5338, 5341], "\u63cf\u753b": [56, 5337, 5349, 5356, 5357, 5361], "\u30e1\u30bd\u30c3\u30c9": [56, 57, 62, 5337, 5340, 5342, 5347, 5348, 5349, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5364, 5369], ".statevector": [56, 64, 5342], ".densitymatrix": [56, 64], "\u4f7f\u3048": [56, 5340, 5345, 5347, 5348, 5349, 5361, 5372], "repr": [56, 4380, 4463, 4487, 4644], "qsphere": [56, 64, 4380, 4644, 5294, 5347], "bloch": [56, 64, 4380, 4644, 5284, 5285, 5349], "\u30bb\u30c3\u30c8": [56, 63, 5337, 5338, 5339, 5352, 5354, 5355, 5356, 5364, 5365, 5366], "\u4f7f\u308f": [56, 57, 63, 5337, 5347, 5348, 5350, 5353, 5354, 5357, 5362], "\u6574\u6570": [56, 5342, 5344, 5345, 5350, 5357, 5372], "\u53d6\u308a": [56, 63, 5337, 5349, 5354, 5357, 5361], "\u6700\u9069": [56, 57, 63, 5337, 5338, 5340, 5342, 5355, 5356, 5358, 5368, 5369], "\u30ec\u30d9\u30eb": [56, 57, 60, 5338, 5355, 5356, 5357, 5359], "\u30d6\u30fc\u30eb": [56, 5361], "\u3068\u308a": [56, 57, 5350, 5355, 5357], "\u4e26\u5217": [56, 57, 5357], "\u30b5\u30dd\u30fc\u30c8": [56, 57, 63, 5340, 5342, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5365, 5367], "\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3": 56, "\u6709\u52b9": [56, 57, 62, 5354, 5356, 5358, 5359, 5364, 5369], "\u3069\u3046": [56, 57, 58, 5337, 5342, 5345, 5350, 5372], "\u306e\u306b": [56, 57, 58, 63, 5342, 5350, 5352, 5354, 5355, 5357, 5361, 5368, 5369], "\u4f8b\u3048": [56, 57, 58, 62, 63, 5337, 5340, 5342, 5343, 5345, 5347, 5348, 5350, 5353, 5355, 5357, 5359, 5361, 5362, 5366, 5370, 5372], "\u8907\u6570": [56, 57, 63, 5345, 5347, 5348, 5349, 5352, 5354, 5355, 5356, 5357, 5358, 5361, 5369, 5372], "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8": [56, 62, 5340, 5347, 5348, 5349, 5353, 5354, 5355, 5356, 5361, 5362, 5366, 5368], "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb": [56, 5337, 5355, 5356, 5365], ")\u3002": [56, 5345, 5348, 5349, 5350, 5354, 5355, 5356, 5359, 5361, 5364, 5369, 5370, 5372], "\u304a\u308a": [56, 57, 58, 59, 63, 5337, 5340, 5342, 5343, 5347, 5348, 5355, 5357, 5359, 5364, 5366], "_parallel": [56, 64, 2323, 2349, 2363, 2376], "\u4e0a\u66f8\u304d": [56, 5364], "\u3042\u308b": [56, 57, 59, 60, 62, 63, 5337, 5338, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5368, 5369, 5370, 5372], "\u30d7\u30ed\u30bb\u30c3\u30b5": [56, 57], "\u6700\u5927": [56, 5354, 5357, 5369], "\u6307\u5b9a": [56, 57, 62, 5340, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5364, 5366, 5367], "_num": [56, 64, 97, 1444, 1538, 3737, 4813, 5342], "_procs": [56, 64], "\u306e\u3044\u304f\u3064\u304b": [56, 5369], "\u64cd\u4f5c": [56, 62, 63, 5337, 5347, 5348, 5353, 5354, 5355, 5358, 5361, 5364, 5366, 5370], "\u306a\u308a": [56, 57, 58, 59, 62, 63, 5337, 5338, 5340, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5364, 5365, 5368, 5369, 5370, 5372], "\u51e6\u7406": [56, 57, 63, 5337, 5350, 5355, 5369, 5370], "\u8d77\u52d5": [56, 58], "rayon": [56, 64, 4813], "_threads": [56, 64, 2323, 2349, 2363, 2376, 4813], "\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9": 56, "\u30b9\u30ec\u30c3\u30c9": 56, "\u30b3\u30fc\u30c9": [56, 58, 62, 63, 5338, 5345, 5354, 5355, 5368, 5372], "\u8ad6\u7406": [56, 5342, 5356], "cpu": [56, 64, 2323, 2349, 2363, 2376, 5267, 5364], "\u3054\u3068": [56, 57, 5337, 5338, 5340, 5356, 5357, 5359, 5364, 5369], "\u8abf\u6574": [56, 57, 5339, 5342, 5345, 5354, 5357], "\u5fc5\u8981": [56, 57, 58, 59, 62, 63, 5337, 5339, 5340, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5369, 5370, 5372], "\u95a2\u6570": [56, 57, 62, 5337, 5338, 5345, 5347, 5348, 5350, 5353, 5355, 5362, 5365, 5366, 5367, 5368, 5370, 5372], "4\u3064": [56, 62, 5345, 5361], "\u306e\u307f": [56, 57, 59, 5345, 5348, 5350, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5364, 5368, 5370, 5372], "_force": [56, 64, 5341], "\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30b3\u30fc\u30c9": 56, "\u3059\u3067": [56, 60], "\u30d7\u30ed\u30bb\u30b9": [56, 57, 59, 5355, 5356], "\u30bb\u30af\u30b7\u30e7\u30f3": [56, 57, 62, 5339, 5342, 5350, 5355, 5357, 5359, 5361, 5372], "\u4ee3\u308f\u308a": [56, 57, 62, 5340, 5342, 5350, 5362, 5368], "\u30b7\u30ea\u30a2\u30eb": 56, "\u9650\u3089\u308c": [56, 5355], "\u30ea\u30bd\u30fc\u30b9": [56, 62, 63, 5349, 5358], "\u904e\u8ca0": 56, "\u306a\u308b": [56, 57, 59, 62, 63, 5337, 5339, 5340, 5341, 5342, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5356, 5357, 5359, 5361, 5362, 5364, 5367, 5372], "\u56de\u907f": [56, 5340, 5357, 5361, 5369], "\u884c\u308f": [56, 57, 59, 63, 5350, 5355, 5361], "\u305f\u3060\u3057": [56, 57, 59, 5340, 5342, 5348, 5350, 5354, 5356, 5361, 5369], "\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8": 56, "\u5f37\u5236": 56, "\u305f\u3044": [56, 57, 62, 63, 5337, 5340, 5341, 5345, 5347, 5348, 5350, 5354, 5355, 5357, 5362, 5364, 5369, 5372], "\u884c\u3046": [56, 57, 62, 63, 5337, 5338, 5341, 5345, 5350, 5355, 5362, 5367, 5369, 5370, 5372], "\u30e2\u30b8\u30e5\u30fc\u30eb": [56, 57, 5337, 5339, 5341, 5347, 5353, 5355, 5365, 5366], "\u30ed\u30b0\u30ec\u30d9\u30eb": 56, "\u7121\u52b9": [56, 57], "\u5927\u6587\u5b57": 56, "\u5c0f\u6587\u5b57": 56, "\u533a\u5225": [56, 57, 5357], "\u30ed\u30ac\u30fc": 56, "\u304b\u3089": [56, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u767a\u4fe1": 56, "\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8": [56, 5355], "\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb": 56, "\u540d\u524d": [56, 57, 5356, 5357, 5358, 5359, 5368], "\u30e1\u30c3\u30bb\u30fc\u30b8": 56, "\u8a18\u9332": [56, 5365], "\u305d\u308c": [56, 57, 63, 5337, 5339, 5340, 5342, 5343, 5345, 5349, 5350, 5353, 5355, 5357, 5361, 5365, 5369, 5370, 5372], "\u4ee5\u5916": [56, 57, 59, 63, 5342, 5343, 5349, 5353, 5364, 5369, 5370], "\u6a19\u6e96": [56, 57, 5347, 5348, 5349, 5352, 5353, 5356, 5357, 5362, 5364, 5366, 5367, 5368], "\u30a8\u30e9\u30fc": [56, 57, 58, 63, 5352, 5356, 5364, 5365, 5367, 5368, 5369], "\u901a\u5e38": [56, 57, 62, 5340, 5343, 5348, 5350, 5355, 5356, 5357, 5358, 5359, 5361, 5370], "\u753b\u9762": 56, "_aqua": [56, 64], "_per": [56, 64, 3796, 3838], "\u30b2\u30fc\u30c8": [56, 58, 63, 5342, 5347, 5348, 5353, 5354, 5355, 5356, 5357, 5359, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "\u57fa\u3065\u3044": [56, 63, 5339, 5340, 5343, 5345, 5364, 5370, 5372], "aqua": [56, 57, 1441, 5250], "\u751f\u6210": [56, 57, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5369, 5370, 5372], "\u9001\u4fe1": [56, 57, 5347, 5348, 5357, 5361], "\u30b8\u30e7\u30d6": [56, 58, 5347, 5348, 5355, 5357], "\u5206\u5272": [56, 57, 5341, 5353], "\u3057\u304d\u3044": 56, "\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc": [56, 5337, 5338, 5340, 5356, 5357, 5361, 5366], "\u306f\u3069": 57, "\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9": 57, "\u3082\u3063": [57, 5337, 5340, 5348], "\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0": [57, 5366], "\u3082\u305f\u3089\u3059": 57, "\u3053\u3068": [57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u30b3\u30df\u30c3\u30c8": 57, "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8": 57, "\u30da\u30fc\u30b8": [57, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5356, 5357, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc": 57, "\u3069\u306e": [57, 62, 5339, 5345, 5347, 5348, 5350, 5354, 5355, 5357, 5361, 5366, 5369, 5372], "\u53c2\u52a0": 57, "\u8aac\u660e": [57, 62, 63, 5337, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5356, 5357, 5359, 5361, 5362, 5364, 5367, 5369, 5370, 5372], "\u69cb\u6210": [57, 62, 63, 5338, 5340, 5345, 5347, 5348, 5350, 5357, 5361, 5362, 5365, 5366, 5368, 5369, 5372], "\u4ee5\u4e0b": [57, 58, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5358, 5361, 5362, 5366, 5367, 5368, 5370, 5372], "\u500b\u5225": [57, 5357], "\u30d7\u30ed\u30b8\u30a7\u30af\u30c8": 57, "\u78ba\u8a8d": [57, 58, 59, 5337, 5339, 5340, 5343, 5344, 5345, 5347, 5348, 5350, 5355, 5356, 5357, 5359, 5361, 5367, 5372], "\u51fa\u6765": [57, 5353, 5355], "\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb": [57, 58, 5337, 5339, 5340, 5342, 5345, 5347, 5348, 5349, 5354, 5355, 5365, 5369, 5370, 5372], "\u30fb\u30e1\u30f3\u30d0\u30fc": 57, "\u6d3b\u52d5": 57, "\u901a\u308a": [57, 58, 62, 5341, 5345, 5350, 5354, 5361, 5368, 5372], "\u4ed6\u8005": 57, "\u304b\u304b\u308f\u308a": 57, "\u30a2\u30a4\u30c7\u30a2": [57, 5369], "\u4ea4\u63db": [57, 5340, 5342, 5350, 5355, 5356], "\u30d8\u30eb\u30d7": 57, "\u6700\u65b0": [57, 5358, 5369], "\u60c5\u5831": [57, 58, 62, 63, 5337, 5338, 5340, 5342, 5347, 5348, 5349, 5350, 5353, 5355, 5356, 5357, 5361, 5365, 5366, 5370], "\u53d7\u3051": [57, 63, 5354, 5357, 5361, 5364, 5368], "\u53d6\u308b": [57, 5339, 5343, 5347, 5348, 5354, 5357, 5361, 5362], "\u30b9\u30bf\u30a4\u30eb": [57, 5354, 5359], "\u30d1\u30c3\u30b1\u30fc\u30b8": [57, 58, 59, 63, 5348, 5354, 5355], "\u554f\u984c": [57, 62, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5345, 5347, 5348, 5355, 5359, 5362, 5368, 5372], "\u767a\u898b": [57, 5368], "\u305f\u3089": [57, 58, 62, 5347, 5348, 5364, 5365], "\u9069\u5207": [57, 62, 5340, 5342, 5350, 5365, 5368], "\u8ab2\u984c": 57, "\u30b7\u30b9\u30c6\u30e0": [57, 58, 62, 63, 5347, 5348, 5349, 5355, 5359, 5364], "\u958b\u3044": 57, "\u3060\u3055\u3044": [57, 63, 5342, 5345, 5347, 5348, 5349, 5350, 5356, 5357, 5359, 5361, 5368, 5369, 5370, 5372], "\u30a8\u30ec\u30e1\u30f3\u30c8": 57, "/issues": [57, 64], "qiskit\u30e1\u30bf\u30d1\u30c3\u30b1\u30fc\u30b8": 57, "\u8a72\u5f53": [57, 5361, 5370], "tracker": [57, 64], "enhancement": 57, "\u958b\u304f": [57, 5354], "\u30c1\u30fc\u30e0": 57, "\u3042\u306a\u305f": [57, 62, 5342, 5347, 5348, 5355, 5369], "\u9069\u5408": [57, 5340, 5355], "\u5b9f\u88c5": [57, 63, 5338, 5341, 5342, 5344, 5345, 5348, 5350, 5356, 5357, 5358, 5359, 5361, 5362, 5367, 5369, 5372], "\u306a\u3069": [57, 60, 62, 63, 5337, 5338, 5340, 5349, 5354, 5355, 5356, 5357, 5359, 5361, 5364, 5369, 5370], "\u8b70\u8ad6": [57, 5365], "\u59cb\u307e\u308a": [57, 5357], "\u4e00\u8cab": 57, "\u30b3\u30fc\u30c9\u30b9\u30bf\u30a4\u30eb": 57, "\u9069\u7528": [57, 62, 5337, 5339, 5341, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5357, 5364, 5365, 5366, 5368, 5370], "pylint": [57, 58, 64], "pycodestyle": 57, "\u6e96\u62e0": 57, "\u5c0a\u91cd": [57, 5356], "\u30b3\u30de\u30f3\u30c9": [57, 5355, 5366], "tox": 57, "elint": 57, "\u5b9f\u969b": [57, 5339, 5340, 5343, 5344, 5345, 5347, 5348, 5356, 5359, 5361, 5364, 5365, 5368, 5370, 5372], "\u63d0\u51fa": 57, "\u3078\u306e": [57, 63, 5357], "\u540c\u610f": 57, "\u3002cla": 57, "\u5185\u5bb9": [57, 58], "\u8457\u4f5c": 57, "\u8a3c\u660e": 57, "\u898f\u7d04": 57, "\u81ea\u7531": [57, 63, 5357], "\u610f\u5473": [57, 5353, 5355, 5356, 5357, 5369], "\u6319\u3052": 57, "\u6e08\u307f": [57, 58, 59], "\u5426\u304b": 57, "bot": 57, "\u5224\u5b9a": 57, "\u610f\u6e08": 57, "\u30ea\u30f3\u30af": [57, 5337, 5339, 5355], "\u3068\u3068\u3082": [57, 5339], "\u306b\u5bfe\u5fdc": [57, 5342, 5361], "\u4fc3\u3059": [57, 5357], "\u30b3\u30e1\u30f3\u30c8": [57, 5355], "\u8fd4\u3057": [57, 5338, 5347, 5348, 5354, 5361, 5365, 5366], "\u306e\u3067": [57, 5337, 5338, 5339, 5340, 5341, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5355, 5356, 5357, 5361, 5367, 5372], "\u5bfe\u5fdc": [57, 62, 5341, 5343, 5347, 5348, 5350, 5355, 5358, 5359, 5361, 5364], "\u304a\u9858\u3044": 57, "\u696d\u52d9": 57, "\u4e00\u74b0": [57, 59], "\u96c7\u7528": 57, "\u6240\u6709": 57, "\u4f4d\u7f6e": 57, "\u3065\u3051": [57, 5350], "\u3089\u308c\u308b": [57, 5337, 5339, 5340, 5347, 5348, 5350, 5355, 5361, 5362, 5365, 5366], "corporate": 57, "\u7f72\u540d": 57, "\u3044\u305f": 57, "\u3060\u3044": [57, 62], "@us": 57, ".ibm": [57, 3748, 3752], "\u307e\u3067": [57, 5337, 5338, 5349, 5350, 5355, 5357, 5359], "\u9001\u3063": 57, "\u305f\u3060\u304f": 57, "\u5165\u308c\u308b": [57, 5357], "pull": [57, 64], "requests": [57, 3767], "\u5fc5\u9808": 57, "\u307e\u305b": [57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5341, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5364, 5368, 5370, 5372], "\u4f5c\u6210": [57, 62, 5337, 5338, 5339, 5340, 5341, 5343, 5347, 5348, 5354, 5355, 5357, 5358, 5359, 5361, 5364, 5365, 5369, 5370], "\u4fee\u6b63": [57, 5355], "\u4f5c\u696d": [57, 5337, 5339, 5340, 5347, 5348], "\u30b3\u30df\u30e5\u30cb\u30c6\u30a3": [57, 5350], "\u59cb\u3081\u308b": [57, 5342, 5345, 5355, 5372], "\u91cd\u8981": [57, 63, 5342, 5350, 5353, 5356, 5357, 5359, 5361, 5365, 5366, 5369], "\u30b9\u30c6\u30c3\u30d7": [57, 63, 5338, 5340, 5355, 5361, 5369], "\u306b\u3069": [57, 5357], "\u5354\u529b": 57, "\u8a71\u3059\u5834": 57, "\u63d0\u4f9b": [57, 62, 63, 5337, 5338, 5339, 5342, 5347, 5348, 5349, 5354, 5355, 5356, 5357, 5359, 5370], "\u53d6\u308a\u7d44\u3093": 57, "\u3082\u306e": [57, 58, 62, 63, 5337, 5338, 5339, 5340, 5342, 5345, 5349, 5350, 5354, 5355, 5356, 5357, 5359, 5361, 5365, 5366, 5369, 5372], "\u77e5\u308b": [57, 5350, 5355, 5357], "\u52a9\u3051": [57, 5354], "\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc": 57, "\u3068\u304d": [57, 58, 5337, 5340, 5342, 5345, 5347, 5348, 5350, 5353, 5355, 5358, 5364, 5365], "\u4f55\u3089\u304b": 57, "\u66f8\u3044": [57, 63, 5355], "\u5b8c\u6210": 57, "\u305b\u308b": [57, 63, 5337, 5340, 5343, 5355, 5359, 5361, 5362, 5364, 5366, 5369], "\u3060\u3063": 57, "\u305f\u308a": [57, 63, 5341, 5354, 5355, 5366], "\u521d\u671f": [57, 63, 5340, 5342, 5353], "\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af": [57, 5357], "\u6b32\u3057\u304b\u3063": 57, "\u5b8c\u4e86": [57, 5355, 5356], "\u5171\u6709": [57, 63, 5352, 5354, 5355, 5361], "\u305f\u304b\u3063": 57, "[wip": 57, "\u30bf\u30b0": 57, "\u30bf\u30a4\u30c8\u30eb": [57, 5349], "\u5148\u982d": 57, "\u306b\u3064\u3051\u3066": 57, "\u4e0b\u3055\u3044": 57, "\u30ec\u30d3\u30e5\u30fc\u30ef\u30fc": 57, "\u306b\u5bfe\u3057": [57, 63, 5345, 5349, 5350, 5352, 5354, 5355, 5356, 5357, 5361, 5362, 5365, 5367, 5368, 5369, 5372], "pr": [57, 62, 64], "\u6700\u7d42": [57, 63, 5345, 5353, 5355, 5372], "\u306a\u304f": [57, 58, 5337, 5339, 5340, 5342, 5345, 5350, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5366, 5369, 5370, 5372], "\u793a\u5506": [57, 5368], "\u3002\u307e\u305f": [57, 63, 5337, 5345, 5372], "\u30de\u30fc\u30b8": 57, "\u5b8c\u5168": [57, 59, 63, 5343, 5348, 5356, 5357, 5359, 5361, 5368, 5370], "\u30ec\u30d3\u30e5\u30fc": 57, "\u6e96\u5099": [57, 63, 5345, 5359, 5365, 5367, 5372], "\u81ea\u5206": [57, 5359], "\u81ea\u8eab": [57, 5347, 5348, 5358], "\u3082\u3057\u304f": [57, 5353, 5354, 5355], "\u524a\u9664": 57, "\u30aa\u30fc\u30d7\u30f3": 57, "\u306a\u3055": [57, 5350], "\u3067\u3082": [57, 62, 63, 5339, 5355, 5357, 5359, 5361, 5362, 5364, 5366], "\u898b\u308b": [57, 5337, 5338, 5339, 5340, 5347, 5348, 5354, 5370], "\u30e1\u30f3\u30c6\u30ca\u30fc": 57, "\u3060\u3051": [57, 59, 63, 5337, 5339, 5340, 5342, 5344, 5345, 5348, 5353, 5354, 5355, 5356, 5357, 5358, 5361, 5362, 5366, 5372], "\u30a2\u30af\u30bb\u30b9": [57, 63, 5350, 5353, 5359, 5361, 5369], "\u6301\u3061": [57, 5350, 5355, 5357, 5359, 5361], "\u672c\u5f53": [57, 63], "\u8cb4\u91cd": [57, 63], "\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9": 57, "\u5b66\u3076": [57, 5337, 5356, 5357], "\u826f\u3044": [57, 5340, 5342, 5368], "\u4ed5\u7d44": 57, "\u30ea\u30b9\u30c8": [57, 5340, 5342, 5345, 5349, 5353, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5372], "/pulls": 57, "\u81ea\u4f53": [57, 5349, 5353, 5356, 5370], "\u540c\u3058\u304f\u3089\u3044": 57, "git\u30ed\u30b0": 57, "\u5c65\u6b74": 57, "\u524d\u5f8c": 57, "\u95a2\u4fc2": [57, 58, 59, 5349, 5350, 5353, 5355, 5357, 5361, 5370], "\u8a73\u7d30": [57, 62, 63, 5337, 5339, 5340, 5342, 5344, 5345, 5355, 5356, 5357, 5359, 5361, 5364, 5365, 5366, 5368, 5369, 5370, 5372], "\u306b\u3088\u3063": [57, 63, 5337, 5338, 5339, 5340, 5341, 5342, 5345, 5347, 5348, 5349, 5350, 5354, 5355, 5358, 5359, 5361, 5362, 5365, 5368, 5370], "\u5bb9\u6613": [57, 5338, 5350, 5355], "\u5c06\u6765": [57, 63, 5357], "\u8ab0\u304b": 57, "\u80cc\u666f": [57, 5354], "\u5206\u304b\u308a": [57, 5350, 5359], "\u66f8\u304f": [57, 5362, 5370], "\u899a\u3048": 57, "\u304a\u3044": [57, 63, 5338, 5348, 5349, 5350, 5354], "\u30ec\u30d3\u30e5\u30a2\u30fc": 57, "\u7406\u89e3": [57, 5337, 5341, 5345, 5349, 5354, 5355, 5356, 5369, 5372], "\u601d\u3044\u8fbc\u307e": 57, "\u3067\u304f": [57, 5356], "\u30a4\u30b7\u30e5\u30fc": 57, "\u8aad\u3093": [57, 63], "\u4f55\u5ea6": 57, "\u3084\u308a": [57, 5355], "\u6839\u672c": 57, "\u539f\u56e0": [57, 5340], "\u304b\u304c": [57, 5355, 5357], "\u660e\u3089\u304b": [57, 5350, 5355], "\u3088\u304f": [57, 63, 5344, 5354, 5355], "\u5143\u3005": [57, 5338], "\u660e\u78ba": [57, 5355, 5357, 5358], "\u8a18\u8ff0": [57, 62, 63, 5349, 5350, 5355, 5358, 5361, 5366, 5368, 5370], "\u3002\u30d0\u30b0": 57, "\u3068\u3044\u3046": [57, 62, 63, 5337, 5339, 5340, 5341, 5342, 5345, 5350, 5353, 5354, 5355, 5356, 5365, 5368, 5369, 5372], "\u6b74\u53f2": 57, "\u8208\u5473": [57, 63, 5341, 5359, 5369], "\u6df1\u3044": [57, 5341, 5359], "\u30d0\u30b0\u30c1\u30b1\u30c3\u30c8": 57, "\u8aad\u307e": 57, "\u63d0\u6848": [57, 59, 5342, 5350, 5362, 5370], "\u6b63\u3057\u3044": [57, 5342, 5361, 5365, 5367], "\u306b\u3059": [57, 5352], "\u3079\u304d": [57, 5357, 5361, 5367, 5369], "\u81ea\u660e": [57, 5357], "\u81ea\u5df1": [57, 5354, 5361], "\u60f3\u5b9a": [57, 5349, 5353], "\u306b\u3068\u3063": [57, 5340, 5359], "\u306b\u3068\u3063\u3066": 57, "\u304b\u3082": [57, 58, 62, 63, 5341, 5361], "\u3057\u308c": [57, 62, 63, 5341, 5361], "\u660e\u767d": 57, "\u30bf\u30a4\u30d7\u30df\u30b9": 57, "\u7a7a\u767d": 57, "\u9664\u304f": [57, 5355], "\u3059\u3079": [57, 5339, 5348, 5350, 5354, 5357, 5359, 5364, 5367, 5369, 5370], "\u3042\u3063": [57, 5337, 5355], "\u305f\u304b": [57, 5359, 5361], "\u6587\u66f8\u5316": 57, "\u7406\u7531": [57, 5340, 5347, 5348, 5359], "\u304f\u3060": [57, 58, 5338, 5339, 5340, 5342, 5343, 5345, 5347, 5348, 5350, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5372], "\u3055\u3044": [57, 58, 5338, 5339, 5340, 5342, 5343, 5345, 5347, 5348, 5350, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5372], "\u9593\u9055\u3044": 57, "\u9078\u629e": [57, 58, 63, 5338, 5339, 5340, 5348, 5350, 5353, 5354, 5355, 5357, 5358, 5361, 5362, 5364, 5368], "\u305a\u306b": [57, 5361], "\u78ba\u304b": [57, 5343], "\u7279\u306b": [57, 5342, 5343], "\u5927\u898f\u6a21": 57, "\u5168\u4f53": [57, 62, 5337, 5342, 5345, 5357, 5370, 5372], "\u3055\u3089\u306b": [57, 59, 60, 63, 5342, 5347, 5348, 5362, 5365], "\u80cc\u5f8c": [57, 5361], "\u610f\u56f3": 57, "\u52d5\u6a5f": [57, 5345, 5372], "\u5fc5\u305a": 57, "\u6539\u5584": 57, "\u304b\u3069": [57, 5354, 5355, 5361], "\u591a\u304f": [57, 58, 59, 62, 63, 5337, 5338, 5339, 5340, 5342, 5347, 5348, 5349, 5350, 5355, 5357, 5361, 5366, 5369, 5370], "\u5927\u304d\u306a": [57, 5353], "2\u3064": [57, 5342, 5345, 5347, 5348, 5350, 5354, 5359, 5361, 5367, 5369, 5370, 5372], "\u4ee5\u4e0a": [57, 63, 5337, 5341, 5355, 5356], "\u90e8\u5206": [57, 63, 5339, 5343, 5345, 5359, 5361, 5369, 5372], "\u623b\u3063": 57, "\u30ea\u30d9\u30fc\u30b9": 57, "\u6050\u308c": 57, "\u6c7a\u5b9a": [57, 5350, 5355, 5357, 5358, 5370], "\u5341\u5206": [57, 5337, 5340, 5361], "\u78ba\u4fdd": 57, "\u30e1\u30fc\u30eb\u30a2\u30e9\u30fc\u30c8": 57, "\u6700\u5c0f\u9650": [57, 63], "\u3057\u304b": [57, 63, 5349, 5361, 5368, 5370], "\u542b\u307e": [57, 62, 5339, 5342, 5343, 5348, 5350, 5353, 5355, 5356, 5357, 5358, 5359, 5364, 5365, 5366, 5370], "\u66f4\u65b0": [57, 5339, 5357, 5358, 5364], "\u30d5\u30a1\u30a4\u30eb": [57, 58, 62, 5349], "\u591a\u3044": [57, 5339, 5340], "\u62c5\u5f53": [57, 5357], "\u898b\u3064\u3051\u308b": [57, 5338, 5342, 5343, 5350, 5368, 5372], "\u6700\u3082": [57, 5342, 5344, 5354, 5355, 5357, 5359, 5361, 5365, 5368], "git": 57, "\u7279\u5225": [57, 5355, 5361, 5362, 5369], "\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u30bf\u30a4\u30c8\u30eb": 57, "\u96fb\u5b50": [57, 5337, 5357], "\u30e1\u30fc\u30eb": 57, "\u901a\u77e5": 57, "\u4ef6\u540d": 57, "\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30e1\u30c3\u30bb\u30fc\u30b8": 57, "gitk": 57, "\u30d3\u30e5\u30fc\u30a2\u30fc\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3": 57, "\u30de\u30fc\u30b8\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8": 57, "\u30b9\u30da\u30fc\u30b9": [57, 5355], "\u306a\u305d\u306e": 57, "\u5834\u6240": [57, 5349, 5357, 5364], "\u8981\u7d04": 57, "\u5f71\u97ff": [57, 63, 5339, 5340, 5347, 5348, 5350, 5355, 5357, 5359, 5364, 5365, 5368], "\u53d7\u3051\u308b": [57, 5339, 5370], "\u6ce8\u610f": [57, 5338, 5340, 5342, 5343, 5347, 5348, 5350, 5353, 5356, 5357, 5358, 5361, 5364, 5365, 5366, 5367, 5368, 5369], "\u30ed\u30b0": 57, "\u4ed8\u3051": [57, 5345, 5347, 5348, 5366, 5372], "\u30a8\u30f3\u30c8\u30ea": 57, "\u7c21\u6f54": [57, 5354], "\u975e\u5e38": [57, 63, 5338, 5340, 5343, 5355, 5356, 5359, 5370], "\u73fe\u5728": [57, 59, 63, 5338, 5340, 5342, 5361, 5364, 5368, 5370], "\u5236\u9650": [57, 59, 5355, 5357, 5358, 5368], "\u4f59\u5730": 57, "\u65e2\u77e5": 57, "\u305d\u308c\u3089": [57, 58, 63, 5337, 5342, 5350, 5357, 5358, 5361, 5364], "\u89e6\u308c": 57, "\u305d\u3046": [57, 58, 5340, 5342, 5362], "\u30ec\u30d3\u30e5\u30fc\u30a2": 57, "\u3088\u308a": [57, 62, 63, 5337, 5340, 5341, 5342, 5345, 5349, 5350, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5365, 5366, 5368, 5369, 5370, 5372], "\u5927\u5c40": 57, "\u8996\u70b9": 57, "\u8003\u616e": [57, 63, 5342, 5355, 5365], "\u9577\u671f": 57, "\u5c55\u671b": 57, "\u77ed\u671f": 57, "\u76ee\u6a19": [57, 60, 62, 5337], "\u89b3\u70b9": 57, "\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5": 57, "\u793a\u3059": [57, 63, 5340, 5341, 5343, 5347, 5348, 5350, 5358, 5368], "\u542b\u3081": [57, 5357], "\u5fd8\u308c": 57, "\u6ce8\u91c8": 57, "\u69cb\u6587": [57, 62, 5357], "fixes": 57, "\uff08pr": 57, "\u30af\u30ed\u30fc\u30ba": 57, "\uff09\u3002": [57, 59, 5347, 5350, 5353, 5354, 5357], "\u5b88\u308b": 57, "\u30eb\u30fc\u30eb": [57, 5357, 5358], "\u6b63\u78ba": [57, 63, 5340, 5353, 5354, 5356, 5357, 5361, 5369], "\u306a\u3059\u3079\u3066": 57, "\u52a0\u3048\u308b": 57, "\u95a2\u9023": [57, 5353, 5355, 5359], "docstrings": [57, 64, 2282], "\u30ea\u30dd\u30b8\u30c8\u30ea": 57, "apidocs": 57, "\u4e00\u90e8": [57, 58, 59, 63, 5337, 5338, 5354, 5355], "\u56fa\u6709": [57, 60, 5337, 5345, 5354, 5356, 5359, 5362, 5364, 5372], "\u30ed\u30fc\u30ab\u30eb": [57, 62, 5345, 5370, 5372], "edocs": 57, "\u30b3\u30f3\u30d1\u30a4\u30eb": [57, 58, 59, 62, 63, 5348, 5352, 5358, 5365], "\u4fdd\u5b58": [57, 63, 5338, 5339, 5345, 5349, 5350, 5354, 5357, 5359, 5361, 5365, 5368, 5372], "azure": 57, "\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3": [57, 5355], "ci\u30b8\u30e7\u30d6": 57, "\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9": 57, "\u8868\u793a": [57, 62, 5337, 5341, 5344, 5347, 5348, 5349, 5350, 5354, 5356, 5357, 5361, 5364, 5370], "zip": [57, 5366], "\u30db\u30b9\u30c8": 57, "repo": [57, 64], "\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9": 57, "combined": [57, 64, 1706, 2024, 2028, 2032, 2039, 2064, 2823, 2858, 3834, 3870, 4229, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700], "\u3064\u307e\u308a": [57, 5337, 5345, 5348, 5355, 5357, 5359, 5368, 5372], "\u65b0\u6a5f\u80fd": 57, "\u65e2\u5b58": [57, 5355], "\u8cc7\u6599": [57, 63, 5337], "\u8d77\u3053\u3059": 57, "\u305f\u3044\u3051\u308c": [57, 5361], "\u3082\u3069\u3053": 57, "\u59cb\u3081": [57, 5347, 5348, 5350, 5356], "\u3088\u3044": [57, 58, 5337], "\u304b\u308f": 57, "\u306b\u3064\u3044": 57, "\u30e9\u30d9\u30eb": [57, 5347, 5348, 5349, 5357, 5364, 5367], "\u65b0\u898f": 57, "\u793a\u3057": [57, 62, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5353, 5355, 5356, 5357, 5359, 5361, 5365, 5367, 5368, 5369, 5372], "\u3053\u308c\u3089": [57, 59, 62, 63, 5337, 5342, 5343, 5348, 5350, 5353, 5354, 5355, 5357, 5358, 5359, 5361, 5364, 5365, 5366, 5367, 5368, 5369], "\u8a00\u3044": 57, "\u63db\u3048\u308b": [57, 62, 5352, 5358, 5361], "\u89e3\u6c7a": [57, 63, 5342, 5368], "\u9032\u3081\u308b": 57, "\u306b\u3088\u304f": 57, "\u7cbe\u901a": 57, "\u8981\u6c42": [57, 5357, 5361], "\u308f\u3051": [57, 59, 5354, 5368], "\u30e6\u30fc\u30b6": 57, "\u4f9d\u5b58": [57, 58, 59, 5353, 5355, 5357, 5359, 5362], "\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2": 57, "\u5f15\u304d\u7d9a\u304d": 57, "\u3002\u3069": [57, 5355], "\u6761\u4ef6": [57, 5339, 5340, 5342, 5353, 5364], "\u3082\u3068": 57, "\u5f8c\u65b9": 57, "\u4e92\u63db": [57, 59, 5348, 5355, 5364], "\u306a\u3084\u308a": 57, "\u3057\u3066": [57, 58, 5341, 5345, 5357, 5372], "\u3068\u3057": [57, 5341, 5345, 5349, 5350, 5353, 5361, 5362, 5365, 5366, 5372], "\u3002qiskit": [57, 58, 5347, 5348, 5350, 5357], "\u671f\u5f85": [57, 58, 59, 63, 5340, 5345, 5349, 5352, 5359, 5361, 5362, 5367, 5369, 5372], "\u304c\u3063": [57, 63, 5344, 5345, 5355, 5370, 5372], "\u5ec3\u6b62": 57, "\u6271\u3063": 57, "marked": [57, 64, 1001, 1005], "deprecationwarning": [57, 64, 5355, 5372], "sent": [57, 64], "frozen": 57, "maintenance": 57, "-is": [57, 1475, 2024, 2032, 3993], "documented": [57, 64, 1642], "outlined": 57, "completion": [57, 140], "feasible": [57, 64, 130, 133, 147, 4964], "\u300d,": [57, 64, 233, 321, 404, 492, 563, 651, 849, 1141, 1228, 1934, 3723, 3730, 3738, 3739, 3779, 4717, 4819, 4823, 4825], "judge": 57, "widely": 57, "determine": [57, 64, 761, 1398, 1399, 2323, 2884, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4973, 5014, 5091, 5150, 5156, 5162], "reasonable": [57, 717], "obsolescence": 57, "2a": [57, 64, 5366], "\u79fb\u884c": 57, "\u5c11\u306a\u304f": [57, 5357], "\u3068\u3082": [57, 63, 5345, 5357, 5372], "\u4ee5\u524d": [57, 5345, 5355, 5357, 5364, 5367, 5368, 5372], "\u30ea\u30ea\u30fc\u30b9": [57, 5369], "\u5b58\u5728": [57, 58, 60, 5352, 5355, 5366, 5370], "\u3068\u3048": [57, 5342, 5350, 5357, 5361], "\u7f6e\u304d": [57, 62, 5352, 5355, 5361], "\u63db\u3048": [57, 5355, 5361], "foo": [57, 64, 3779, 3789, 3834, 3907], "\u5c0e\u5165": [57, 58, 5350], "\u540c\u3058": [57, 58, 63, 5337, 5338, 5339, 5340, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5356, 5357, 5359, 5361, 5366, 5368, 5369, 5370, 5372], "\u72ec\u81ea": [57, 5339, 5340, 5349, 5357, 5359], "\u30e9\u30a4\u30d6\u30e9\u30ea": [57, 58], "\u7dad\u6301": 57, "\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc": 57, "\u4e00\u5ea6": [57, 5339, 5345, 5369, 5372], "1\u3064": [57, 62, 5345, 5347, 5348, 5350, 5355, 5357, 5359, 5366, 5369], "\u8d85\u3048\u308b": [57, 63], "\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0": 57, "pendingdeprecationwarning": 57, "\u5968\u671f\u9593": 57, "\u767a\u884c": 57, "\u958b\u59cb": [57, 5340, 5342, 5357, 5358, 5369], "remain": [57, 64, 4915, 5169], "intact": [57, 1397], "emitted": [57, 64, 4241, 4713, 4829], "pushed": [57, 4229], "continue": [57, 64, 213, 384, 543, 943, 1121, 1666, 5341], "released": [57, 64], "august": [57, 64], "november": 57, "\u9045\u5ef6": [57, 5357, 5361], "\u6700\u5c0f\u5024": [57, 5337], "\u767a\u751f": [57, 58, 63, 5353, 5355, 5357, 5364, 5365, 5366], "\u4e0d\u9069": 57, "3a": 57, "\u975e\u63a8\u5968": 57, "\u6700\u5c0f": [57, 5337, 5338, 5339, 5341, 5357, 5358, 5362, 5368], "\u5968\u671f": 57, "\u7d4c\u904e": 57, "\u306a\u3089": [57, 5339, 5340, 5342, 5359, 5365, 5369], "\u9650\u308a": [57, 59, 63, 5350, 5354, 5357, 5358, 5361], "1\u6708": 57, "6\u6708": 57, "\u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u30ea\u30ea\u30fc\u30b9": 57, "3\u304b\u6708": 57, "\u30dd\u30a4\u30f3\u30c8": 57, "\u7834\u640d": 57, "\u30e6\u30fc\u30b6\u30fc": [57, 62, 63, 5338, 5340, 5358, 5359], "\u9069\u5fdc": [57, 5355, 5370], "\u6a5f\u4f1a": 57, "\u4e0e\u3048\u308b": [57, 5337, 5340, 5344, 5355, 5368], "\u30b9\u30ad\u30c3\u30d7": [57, 5365], "\u591a\u6570": [57, 63, 5369], "\uff09\u3001": 57, "\u3059\u3079\u3066": [57, 59, 63, 5342, 5349, 5350, 5354, 5355, 5356, 5357, 5364, 5368, 5370], "\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9": 57, "\u5358\u4e00": [57, 63, 5345, 5349, 5355, 5362, 5370, 5372], "\u898b\u9003": 57, "\u51fa\u3059": [57, 5357], "`warnings": 57, "/warnings": 57, "`_": [57, 64, 5355], "warn": [57, 64, 1916, 1966, 2050, 2083, 2095, 2109, 2129, 2150, 2192, 2194, 2205, 2217, 2218, 2229, 2249, 2263, 5260], "\u30ab\u30c6\u30b4\u30ea\u30fc": [57, 5337], "\u30af\u30e9\u30b9": [57, 5349, 5354, 5355, 5361, 5366, 5367, 5369], "\u3067\u306a\u3051\u308c": [57, 5364], "\u306a\u3082\u306e": [57, 5340, 5342, 5350, 5357, 5364, 5369, 5370], "(input": [57, 64, 5343, 5353], ".foo": 57, ".bar": 57, ", deprecationwarning": 57, "\u3053\u3053": [57, 62, 5337, 5338, 5339, 5340, 5341, 5342, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5369, 5372], "\u6ce8\u76ee": [57, 5353], "\u3059\u3079\u304d": 57, "\u5f15\u6570": [57, 62, 5345, 5349, 5352, 5353, 5354, 5357, 5361, 5364, 5367, 5372], "\u547c\u3073\u51fa\u3057": [57, 5338, 5342, 5349, 5355, 5365], "\u30b9\u30bf\u30c3\u30af": 57, "\u306b\u3088\u308a": [57, 58, 5339, 5342, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5370], "\u51fa\u3055": 57, "\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8": 57, "\u547c\u3073\u51fa\u3059\u884c": 57, "\u4e0a\u8a18": [57, 62, 63, 5337, 5338, 5339, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5350, 5353, 5355, 5357, 5359, 5361, 5368, 5372], "\u547c\u3073\u51fa\u3057\u5143": 57, "\u306a\u304b\u3063": 57, "\u8d77\u70b9": 57, "\u5224\u5225": 57, "\u3057\u3088": [57, 58, 5349, 5352, 5356, 5361], "\u7acb\u3061": 57, "\u30b3\u30fc\u30eb": 57, "\u547c\u3073\u51fa\u3055": [57, 5338, 5348, 5370], "\u3064\u306e": [57, 5343, 5345, 5347, 5350, 5358, 5359, 5361, 5366, 5368, 5372], "\u6301\u3064": [57, 5350, 5355, 5357, 5361, 5364, 5367], "\u30de\u30b9\u30bf\u30fc": 57, "\u5927\u304d\u3044": 57, "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc": 57, "\u5b89\u5168": 57, "\u76ee\u7684": [57, 63, 5338, 5339, 5341, 5344, 5345, 5347, 5348, 5349, 5350, 5355, 5361, 5372], "(pr": 57, "\u4e0e\u3048": [57, 63, 5337, 5339, 5340, 5343, 5347, 5348, 5350, 5352, 5355, 5359, 5361, 5362, 5366, 5368, 5369], "\u3089\u308c": [57, 63, 5337, 5339, 5340, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5355, 5357, 5359, 5361, 5362, 5366, 5368, 5370, 5372], "\u30ea\u30b9\u30af": 57, "\u4fa1\u5024": 57, "\u30d0\u30e9\u30f3\u30b9": 57, "\u7d44\u307f\u8fbc\u3080": 57, "\u9650\u5b9a": [57, 5344], "\u9069\u3057": [57, 5361], "\u306b\u5bfe\u3059\u308b": [57, 62, 63, 5340, 5356, 5361, 5362], "\u5927\u304d\u304f": [57, 5345, 5350, 5372], "\u9ad8\u3044": [57, 5343, 5356, 5369], "\u3042\u307e\u308a": [57, 5356], "\u76ee\u7acb": 57, "\u4e9b\u7d30": 57, "\u540c\u69d8": [57, 63, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5359, 5362, 5366, 5369], "\u304b\u306a\u3063": 57, "\u8981\u56e0": 57, "\u691c\u8a0e": [57, 62, 5367], "\u30ea\u30b0\u30ec\u30c3\u30b7\u30e7\u30f3": 57, "\u5c0f\u3055": [57, 5337, 5338, 5339, 5344, 5349, 5353, 5355, 5367, 5369], "\u4f55\u304b": 57, "\u58ca\u3059": 57, "\u907f\u3051": 57, "\u898b\u3048\u308b": [57, 5358], "\u5229\u76ca": [57, 5370], "\u4ed8\u304f": 57, "\u307e\u3059\u304b": 57, "\u3042\u308c": [57, 62, 63], "\u306e\u304f\u3089\u3044": 57, "\u5b8c\u7d50": [57, 5354], "\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0": 57, "\u4f4e\u3044": [57, 5370], "\u8003\u3048": [57, 62, 5340, 5345, 5349, 5357, 5359, 5366, 5372], "\u304c\u3059": [57, 5355], "\u3067\u306b": [57, 5352, 5355], "\u30de\u30b9\u30bf\u30fc\u30d6\u30e9\u30f3\u30c1": 57, "\u304b\u3069\u3046": [57, 5342, 5350, 5355, 5356, 5359], "\u6301\u3063": [57, 5340, 5343, 5349, 5354, 5357], "\u306a\u3051\u308c": [57, 5340, 5342, 5345, 5350, 5355, 5364, 5365, 5372], "\u4fdd\u6301": [57, 63, 5353, 5361], "cherry": 57, "-pick": 57, "master": 57, "_commit": 57, "\u5927\u304d": [57, 5355, 5357, 5369], "\u30b5\u30d6\u30bb\u30c3\u30c8": [57, 5353], "squash": 57, "\u624b\u52d5": [57, 5353, 5361, 5367], "\u884c\u3044": [57, 5345, 5356, 5358, 5365, 5372], "backported": 57, "\u305d\u3046\u3059\u308c": 57, "\u53b3\u683c": 57, "\u5206\u304b\u3089": 57, "\u304c\u304d\u308c\u3044": 57, "\u7af6\u5408": 57, "\u7d50\u679c": [57, 58, 63, 5337, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5357, 5359, 5361, 5365, 5367, 5368, 5369, 5372], "\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8": 57, "\u7af6\u5408\u884c": 57, "backport": 57, "\u4e00\u6642": 57, "\u30bf\u30fc\u30b2\u30c3\u30c8": [57, 62, 63, 5347, 5350, 5352, 5355], "[stable": 57, "\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0": 57, "\u756a\u53f7": 57, "philosophy": [57, 64], "\u5247\u308a": 57, "\u57fa\u3065\u304f": [57, 63, 5355], "\u30b3\u30fc\u30c9\u30b3\u30e1\u30f3\u30c8": 57, "\u5f62\u6210": [57, 62, 63, 5350], "/docs": 57, "sphinx": 57, "\u69cb\u7bc9": [57, 59, 60, 63, 5337, 5339, 5342, 5343, 5344, 5345, 5350, 5353, 5354, 5355, 5358, 5359, 5361, 5368, 5372], "\u5927\u90e8": 57, "docstring": [57, 64, 773, 1388, 1448, 4162, 4167, 4172], "\u30d7\u30c3\u30b7\u30e5": 57, "\u8fd1\u304f": [57, 5338, 5340, 5355], "\u7c21\u5358": [57, 60, 63, 5339, 5340, 5342, 5343, 5345, 5353, 5355, 5356, 5357, 5359, 5361, 5364, 5372], "3\u3064": [57, 59, 5342, 5347, 5348, 5354, 5359, 5366, 5372], "/apidocs": 57, ".rst": 57, "\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0": [57, 5349, 5354], "\u542b\u3081\u308b": [57, 5355, 5364], "\u4f1d\u3048\u308b": 57, "\u5185\u90e8": [57, 5337, 5340, 5342, 5355, 5361, 5370], "\u76f8\u4e92": [57, 5337, 5355, 5361], "\u633f\u5165": [57, 5355, 5357], "\u89e3\u6790": [57, 58, 5342, 5343, 5361, 5368], "\u81ea\u52d5\u30e2\u30b8\u30e5\u30fc\u30eb": 57, "\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6": 57, "\u305f\u3068\u3048": [57, 5361, 5369], "-dagcircuit": 57, "automodule": 57, "-members": 57, "-inherited": 57, "-special": 57, "\u552f\u4e00": 57, "\u76ee\u6b21": 57, "toctree": 57, "\u30fb\u30ec\u30d9\u30eb": [57, 5338], "rst": 57, "\u30c7\u30a3\u30ec\u30af\u30c8\u30ea": 57, "\u7a7a\u9593": [57, 5349, 5350], "py": [57, 64, 3993, 4000, 4013], "\u30d1\u30d6\u30ea\u30c3\u30af": 57, "\u6982\u8981": [57, 5347, 5348, 5364], "autosummary": 57, "\u5358\u7d14": [57, 5337, 5340, 5355, 5357, 5366], "autodoc": 57, "\u76f4\u63a5": [57, 5337, 5340, 5353, 5354, 5355, 5357, 5359, 5361, 5364, 5366, 5367, 5368], "\uff09\u3057": 57, "\u3055\u307e\u3056\u307e": 57, "\u305d\u308c\u305e\u308c": [57, 63, 5337, 5341, 5342, 5343, 5348, 5350, 5354, 5355, 5356, 5357, 5358, 5359, 5362, 5364, 5370], "\u547c\u3073\u51fa\u3059": [57, 5349, 5353, 5355, 5361], "\u30e2\u30b8\u30e5\u30fc\u30eb\u30ec\u30d9\u30eb": 57, "\u3055\u307e\u3056\u307e\u306a": [57, 62, 63, 5347, 5348, 5349, 5354, 5357, 5359, 5364], "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8": [57, 5343, 5349, 5355], "\u30b5\u30d6\u30bb\u30af\u30b7\u30e7\u30f3": 57, "\u30b0\u30eb\u30fc\u30d7": [57, 5337, 5340, 5355, 5361], "\u306b\u3088\u3063\u3066": [57, 62, 63, 5338, 5345, 5354, 5355, 5361, 5362, 5364, 5366, 5368], "/dagcircuit": 57, "/_": [57, 58, 64], "\"\"": [57, 64, 4229, 5341, 5345, 5355, 5359, 5372], "mod": [57, 64, 1475], "`)": [57, 5333, 5334, 5342], "currentmodule": 57, "../": 57, "stubs": 57, "dagnode": [57, 64, 1663, 1682, 1706, 1714, 1715, 1744, 1745, 1748, 1749, 1751, 5006], "exceptions": [57, 64, 4020, 4022, 4032, 4810, 4945], "dagcircuiterror": [57, 1661, 1662, 1667, 1671, 1675, 1679, 1689, 1700, 1701, 1706, 1710, 1711, 1718], "\u5358\u306a\u308b": 57, "\u7570\u306a\u308b": [57, 58, 5339, 5343, 5349, 5352, 5353, 5355, 5359, 5367, 5369], "\u5fdc\u3058": [57, 5337, 5345, 5347, 5348, 5350, 5352, 5355, 5372], "\u4f7f\u3063": [57, 62, 5340, 5345, 5350, 5353, 5357, 5358, 5359, 5361, 5364, 5372], "\u516c\u958b": [57, 59, 5359], "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9": [57, 5356], "\u5fb9\u5e95": 57, "\u52aa\u3081\u308b": 57, "google": 57, "napoleon": 57, "extension": [57, 64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 3424, 5239, 5244, 5335], "\u30d5\u30a9\u30fc\u30de\u30c3\u30c8": [57, 5355, 5357], "\u63b2\u8f09": [57, 5369], "\u4efb\u610f": [57, 5343, 5355, 5356, 5357, 5359, 5364, 5367, 5368], "\u4e00\u822c": [57, 63, 5340, 5342, 5347, 5348, 5349, 5350, 5352, 5353, 5357, 5361, 5366, 5368], "\u62e1\u5f35": [57, 63, 5340, 5355, 5366], "\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af": 57, "\u4e21\u65b9": [57, 5345, 5350, 5355, 5358, 5361, 5364, 5372], "-execute": [57, 253, 276, 424, 447, 583, 606, 1160, 1183, 4006], "\u8996\u899a": [57, 5347, 5349], "\u5f79\u7acb\u3061": [57, 5339, 5342, 5350, 5355, 5361], "/documentation": [57, 64, 334, 505, 664, 1241], "\u30ab\u30d0\u30fc": [57, 5358], "\u3059\u304e\u307e\u305b": 57, "\u30fb\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc": 57, "\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8": 57, "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9": 57, "\u6642\u70b9": [57, 5337], "\u53d6\u308a\u8fbc\u3080": [57, 63], "\u30b3\u30d4\u30fc": 57, "\u53d6\u5f97": [57, 62, 5339, 5345, 5347, 5348, 5353, 5355, 5357, 5361, 5364, 5369, 5372], "\u9593\u9055\u3063": 57, "\u4e0b\u8a18": 57, "\u30d3\u30eb\u30c9\u30d7\u30ed\u30bb\u30b9": 57, "\u5404\u8981": 57, "\u30b3\u30f3\u30c6\u30f3\u30c4": 57, "\u3068\u3068\u3082\u306b": [57, 63, 5365], "doc": 57, "\u518d\u5e30": [57, 5350, 5361], "\u30eb\u30fc\u30c8": 57, "/apidoc": 57, "crowdin": 57, "\u30ed\u30fc\u30ab\u30e9\u30a4\u30ba": 57, "\u3002crowdin": 57, "\u7d44\u7e54": 57, "web": [57, 877, 4239, 4240], "\u30ed\u30fc\u30ab\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3": 57, "\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0": 57, "\u6295\u8cc7": 57, "\u985e\u4f3c": [57, 63, 5350, 5362], "\u81ea\u52d5": [57, 58, 5339, 5342, 5349, 5353, 5354, 5357, 5362, 5364, 5365, 5366], "\u518d\u5229": 57, "\u79fb\u52d5": 57, "\u539f\u6587": 57, "\u7a2e\u985e": [57, 5355, 5357, 5359, 5361, 5362, 5366], "\u5fa9\u5143": 57, "\u9ad8\u3081": [57, 5339], "\u30fb\u30ea\u30af\u30a8\u30b9\u30c8": 57, "translations": [57, 64, 4973], "\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc": 57, "\u5f93\u3063": [57, 5345, 5350, 5353, 5366, 5372], "localization": 57, "_contributors": 57, "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8": 57, "\u30b5\u30de\u30ea\u30fc": 57, "\u8a00\u8a9e": 57, "\u8a18\u8f09": [57, 5356, 5369], "\u3067\u307e\u3060": 57, "\u307e\u307e": [57, 5339, 5345, 5358, 5372], "contributors": 57, "\uff08cla": 57, "\u6c42\u3081": [57, 5339, 5340, 5341, 5344, 5362], "\u81f4\u3057": 57, "\u516c\u5f0f": [57, 5355], "\u3064\u304d": 57, "\u9023\u643a": [57, 63], "\u3068\u308b": [57, 5345, 5350, 5372], "\u30ea\u30fc\u30c0\u30fc": 57, "\u30a2\u30b5\u30a4\u30f3": 57, "e\u30e1\u30fc\u30eb": 57, "yurik": 57, "@jp": 57, "\u9023\u7d61\u304f": 57, "-docs": 57, "\u30d6\u30ed\u30b0": 57, "\u6295\u7a3f": 57, "\u8ff0\u3079": [57, 5345, 5350, 5372], "\u305f\u3061": [57, 63, 5358, 5368, 5369], "\u6821\u6b63": 57, "\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c1\u30fc\u30e0": 57, "\u4f1a\u8a71": 57, "\u30e1\u30f3\u30d0\u30fc": 57, "\u52df\u96c6": 57, "\u30dc\u30bf\u30f3": 57, "\u30af\u30ea\u30c3\u30af": 57, "\u5c0b\u306d\u308b": 57, "\u30c0\u30a4\u30a2\u30ed\u30b0\u30dc\u30c3\u30af\u30b9": 57, "url": [57, 64, 2909, 2918, 2927, 3714, 3748, 3752, 3766, 4229], "\u8cbc\u308a": 57, "\u7533\u8acb": 57, "\u65e9\u304f": [57, 5340, 5354, 5357, 5358], "\u4ed8\u4e0e": 57, "\u30af\u30ed\u30fc\u30f3": 57, "clone": 57, ".git": 57, "\u30ec\u30dd\u30b8\u30c8\u30ea": 57, "\u30fb\u30d5\u30a9\u30eb\u30c0": 57, "cd": 57, "\u7aef\u672b": 57, "\u30a6\u30a3\u30f3\u30c9\u30a6": [57, 5349, 5354], "\u7121\u3044": 57, "\u30fb\u30ea\u30dd\u30b8\u30c8\u30ea": 57, "pypi": [57, 59, 64], "\u4f7f\u3046": [57, 5337, 5340, 5345, 5347, 5348, 5353, 5354, 5357, 5362, 5370, 5372], "\u8abf\u67fb": [57, 5370], "\u52b9\u679c": [57, 5361, 5368], "\u306f\u306a\u304f": 57, "\u9805\u76ee": [57, 5349, 5355, 5369], "\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc": [57, 5367], "\u3002ignis": 57, "\u30bd\u30fc\u30b9\u30d0\u30fc\u30b8\u30e7\u30f3": 57, "\u53e4\u3044": 57, "\u3057\u307e\u3046": [57, 5347, 5348], "\u9632\u3050": 57, "\u9806\u756a": [57, 5347, 5348, 5349, 5355], "\u5b9f\u65bd": [57, 5355], "(ibm": 57, "\u30c7\u30d0\u30a4\u30b9": [57, 58, 63, 5337, 5339, 5340, 5355, 5356, 5357, 5358, 5359, 5364], "\u30aa\u30f3\u30e9\u30a4\u30f3": 57, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": [57, 58, 60, 62, 63, 5337, 5340, 5347, 5348, 5350, 5353, 5366, 5367, 5368], "\u63a5\u7d9a": [57, 5355], "\u540c\u6642": [57, 63, 5350], "\u3082\u3057": [57, 5350, 5352, 5353, 5364, 5365], "\u30ac\u30a4\u30c9": [57, 5368], "\u6df7\u5728": 57, "/pypa": 57, "/sample": 57, "-namespace": 57, "-packages": [57, 912, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5372], "/blob": 57, "/master": 57, "/table": 57, ".md": 57, "\u7d44\u307f\u5408\u308f\u305b": [57, 5340, 5362, 5369], "\u5206\u96e2": [57, 5350], "\u4e0d\u6ce8\u610f": 57, "\u4fdd\u5b88": 57, "rust": [57, 64], "\u30b3\u30f3\u30d1\u30a4\u30e9": [57, 59], "\u3002rust": 57, "\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0": 57, "\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9": 57, "rustup": [57, 64], "\u304a\u52e7\u3081": [57, 5357], "\u3002rustup": 57, ".rs": [57, 64], "\u6574\u3044": 57, "\u30c6\u30b9\u30c8": [57, 59, 5366], "\u6587\u6cd5": [57, 58], "\u30c1\u30a7\u30c3\u30af": [57, 58, 5342, 5345, 5353, 5372], "\u5411\u3051": [57, 58, 59, 63], "\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc": 57, "-dev": 57, "\u7de8\u96c6": 57, "\u306a\u3057": [57, 5347, 5348], "\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9": 57, "\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9": [57, 5355, 5369], "_rust": 57, "inplace": [57, 64, 198, 211, 266, 267, 285, 334, 369, 382, 437, 438, 456, 505, 528, 541, 596, 597, 615, 664, 1107, 1120, 1173, 1174, 1192, 1241, 1376, 1379, 1443, 1503, 1550, 1667, 1710, 3994, 3995, 4004, 4006, 4007, 4009, 4010, 4019, 4219, 4225, 4467, 4471, 4494, 4498, 4549, 4811], "\u30ea\u30ea\u30fc\u30b9\u30e2\u30fc\u30c9": 57, "\u30d0\u30a4\u30ca\u30ea": [57, 59, 5342, 5343, 5345, 5348], "\u518d\u69cb": 57, "\u305f\u3073": [57, 5347, 5348], "\u52a0\u3048": [57, 5339, 5342, 5345, 5355, 5362, 5367, 5368, 5372], "\u53cd\u6620": [57, 5342, 5361], "\u308c\u307e\u305b": [57, 5354, 5361, 5365], "-release": [57, 64], "\u6709\u7121": [57, 5362], "\u304b\u304b\u308f\u3089": [57, 5366], "\u3069\u3061\u3089": [57, 5347, 5348], "\u304b\u306b": [57, 5357], "\u57fa\u3065\u304d": [57, 5340], "\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8": 57, "examples": [57, 64, 97, 211, 382, 541, 877, 970, 1120, 1376, 1379, 1410, 1448, 1456, 1459, 1489, 1494, 1499, 1501, 1503, 1537, 1539, 1542, 1544, 1547, 2001, 2337, 2813, 3723, 3739, 3838, 4020, 4021, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4042, 4043, 4044, 4046, 4047, 4048, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4182], "/using": 57, "_qiskit": [57, 64, 5348, 5349], "_terra": 57, "cmake": [57, 64], "-build": 57, "\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0": 57, "\u3002aer": 57, "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9": [57, 5337], "\u30d7\u30ed\u30b0\u30e9\u30e0": [57, 59, 62, 63, 5347, 5348, 5356, 5357, 5359], "\u666e\u904d": 57, "\u4e0d\u8981": [57, 63], "\u30d0\u30a4\u30ca\u30ea\u30fc": [57, 58, 5347, 5372], "\u624b\u6cd5": [57, 5338, 5339, 5340, 5341], "bdist": 57, "_wheel": 57, "phyton": 57, "\u5f8caer": 57, "dist": [57, 4721, 4722, 4842], "\u4f9d\u308a": 57, "-*": 57, "whl": 57, "\u30ed\u30fc\u30ab\u30eb\u30b7\u30b9\u30c6\u30e0": 57, "\u8907\u96d1": [57, 63, 5339, 5340, 5342, 5355, 5357, 5361], "\u6e21\u3059": [57, 62, 63, 5337, 5340, 5354, 5357, 5361], "\u5909\u6570": [57, 63, 5337, 5343, 5356], "\u3068\u304a\u308a": [57, 5349, 5350, 5354, 5361, 5366], "skbuild": 57, "_opts": [57, 64], "[-": [57, 64, 1468, 4398, 4664, 5341, 5352, 5353, 5364], "- [": 57, "_tool": 57, "\u89d2\u62ec": 57, "\u306f\u3042\u306a\u305f": 57, "\u30d5\u30e9\u30b0": [57, 5340, 5361], "\u3053\u3061\u3089": [57, 5340, 5357, 5359, 5368, 5372], "/cmake": 57, "/help": 57, "/v": 57, "manual": [57, 64, 240, 411, 570, 1147, 4182], "#options": 57, "--": [57, 64, 1441], "\u57fa\u790e": [57, 62, 63, 5356, 5361], "automake": 57, "-j": 57, "\u6e21\u3057": [57, 5340, 5355, 5357, 5368], "\u4f1d\u3048": 57, "linux": [57, 58, 59, 64, 4182], "\u53e4\u3059\u304e\u308b": 57, "\u3042\u3052": [57, 5364, 5370], "- -": 57, "dcmake": 57, "_cxx": 57, "_compiler": 57, "=g": 57, "\u9759\u7684": [57, 5342, 5359], "plat": 57, "-name": [57, 1407, 1410], "macosx": 57, "dstatic": 57, "_linking": 57, "j8": 57, "-plat": 57, "\u30e1\u30bf\u30c7\u30fc\u30bf": 57, "-dstatic": 57, "\u5171\u901a": [57, 5350], "\u30c4\u30fc\u30eb": [57, 5365], "\u5f8c\u308d": [57, 5355, 5358], "\u6570\u5b57": [57, 5355], "\u7d9a\u304f": [57, 5357, 5365], "-dcmake": 57, "\u3057\u3070\u3057\u3070": 57, "osx": 57, "\u8a73\u3057\u304f": [57, 5361], "\u72ec\u7acb": [57, 5347, 5348, 5355, 5356], "\u6709\u7528": [57, 5342, 5359, 5362], "\u5358\u72ec": [57, 63, 5350, 5355], "\u4fbf\u5b9c": 57, "\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8": 57, "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d7\u30ed\u30bb\u30b9": [57, 59], "\u7c21\u7d20": [57, 5365], "\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc": 57, "\u7d71\u4e00": 57, "\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3": 57, "\u6b8b\u308a": [57, 5345, 5362, 5372], "\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af": [57, 5355], "\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0": 57, "\u547d\u540d": 57, "\u898f\u5247": [57, 5361], "major": [57, 64], ".minor": 57, ".patch": 57, "\u63a1\u7528": [57, 5362], "\u305d\u3057\u3066": [57, 62, 5343, 5345, 5347, 5348, 5350, 5357, 5358, 5362, 5372], "\u5bfe\u8c61": [57, 5370], "\u305f\u3073\u306b": 57, "\u30bf\u30a4\u30df\u30f3\u30b0": [57, 5357, 5370], "\u5897\u3084\u3059": [57, 5339], "\u4e88\u5b9a": [57, 5359], "-ignis": [57, 64, 5339, 5342, 5348, 5349, 5350, 5352, 5353, 5358, 5359, 5361], "\u5897\u3084": [57, 5357, 5370], "\u4e0a\u3052": 57, "\u3044\u3066": [57, 5350, 5356], "\u3060\u3068": 57, "\u306b\u3059\u308b": [57, 5347, 5348], "\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0": 57, "\u6642\u3005": 57, "\u304a\u304d": [57, 5338, 5339, 5340, 5345, 5365, 5372], "\u3044\u304b\u306a\u308b": 57, "\u72b6\u6cc1": [57, 5338, 5349, 5355], "\u58ca\u308c": 57, "\u5897\u3084\u3057": 57, "\u7570\u306a\u308a": [57, 5347, 5348, 5356, 5359, 5362, 5364, 5366], "\u30ed\u30c3\u30af\u30b9\u30c6\u30c3\u30d7": 57, "\u30d0\u30f3\u30d7": 57, "\u3067\u3042\u308a": [57, 5340, 5345, 5361, 5372], "\u30e1\u30bf\u30ea\u30dd\u30b8\u30c8\u30ea": 57, "\u5404\u8ffd": 57, "\u8de1\u8981": 57, "\u30de\u30fc\u30af": [57, 5342], "\u307e\u3060": [57, 5353, 5357], "\u3044\u307e\u305b": [57, 59, 5337, 5355, 5359], "-optimization": [57, 64, 147, 5350], "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ea\u30dd\u30b8\u30c8\u30ea": 57, "\u4fbf\u5b9c\u4e0a": [57, 5361], "\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8": 57, "\u56fa\u5b9a": [57, 5337, 5362, 5364], "\u89e3\u9664": 57, "\u30c8\u30ea\u30ac\u30fc": [57, 5357], "\u3068\u3053\u308c\u3089": 57, "\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0": 57, "\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30ea\u30ea\u30fc\u30b9": 57, "\u30d1\u30c3\u30c1\u30d0\u30fc\u30b8\u30e7\u30f3\u30ea\u30ea\u30fc\u30b9": 57, "\u53b3\u5bc6": [57, 5338, 5364, 5365], "\u30c7\u30d0\u30c3\u30b0": [57, 5349, 5355], "\u5f79\u7acb\u3064": 57, "\u306b\u308f\u305f\u308b": [57, 5356], "\u900f\u660e": 57, "\u7814\u7a76": [58, 60, 62, 5355, 5357, 5362, 5365, 5366, 5370], "\u5f15\u7528": 58, "bibtex": 58, "\u542b\u307e\u308c\u308b": [58, 5359], "\u8ffd\u52a0": [58, 59, 63, 5339, 5342, 5345, 5347, 5348, 5352, 5353, 5355, 5356, 5357, 5359, 5361, 5364, 5367, 5368, 5372], "\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8": 58, "\u51fa\u308b": 58, "member": [58, 64, 4225], "\u30c1\u30a7\u30c3\u30ab\u30fc": 58, "\u6f5c\u5728": 58, "\u8a72\u5f53\u3057": 58, "\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9": 58, "\u898b\u3064\u3051": 58, "\u59a8\u3052\u308b": 58, "\u7121\u8996": [58, 5342, 5358], "\u76f4\u524d": 58, "\u6291\u6b62": 58, "#pylint": 58, "=no": 58, "-member": 58, "\u306a\u305c": [58, 5339, 5340, 5345, 5357, 5372], "\u7406\u60f3": [58, 5339, 5340, 5347, 5348, 5364, 5365], "\u3059\u306a\u308f\u3061": [58, 63, 5342, 5345, 5361, 5372], "\u30ce\u30a4\u30ba": [58, 63, 5340, 5345, 5355, 5359, 5372], "\u30c7\u30b3\u30d2\u30fc\u30ec\u30f3\u30b9": [58, 63, 5345, 5372], "\u74b0\u5883": [58, 59, 62, 63, 5340, 5355, 5366], "\u91cf\u5b50": [58, 62, 5337, 5338, 5339, 5340, 5342, 5343, 5344, 5347, 5348, 5349, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5365, 5367, 5368, 5369, 5370], "\u30d3\u30c3\u30c8": [58, 59, 62, 63, 5338, 5339, 5340, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5367, 5368, 5369, 5370, 5372], "\u632f\u308b": [58, 5353, 5354], "\u821e\u308f": 58, "notebook": [58, 64, 1002, 1673, 1732, 3704, 5282, 5339, 5349], "anaconda": [58, 5355], "\u4eee\u60f3": [58, 5355], "\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7": 58, "\u3067\u308b": 58, "\u3042\u308b\u3044": [58, 63, 5340, 5343, 5349, 5350, 5353, 5354, 5361], "\u3044\u3070\u3044": 58, "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30b9\u30c6\u30c3\u30d7": 58, "\u30d5\u30a9\u30ed\u30fc": 58, "\u30a4\u30f3\u30dd\u30fc\u30c8": [58, 5348, 5364, 5368], "\u3002jupyter": [58, 5349], "-navigator": 58, "\u3002anaconda": 58, "\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc": 58, "\u30e1\u30cb\u30e5\u30fc": 58, "\u5168\u3066": [58, 5340, 5342, 5350, 5352, 5353, 5355, 5361, 5362], "\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc": 58, "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9": 58, "\u624b\u6301\u3061": 58, "\u30b7\u30b9\u30c6\u30e0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0": 58, "\u30d3\u30eb\u30c9": [58, 59, 62, 5355, 5359, 5365], "wheel": [58, 64], "\u77e5\u308c": [58, 5370], "\u8a66\u884c": [58, 5337, 5355], "\u30de\u30cb\u30e5\u30a2\u30eb": [58, 5364], "failed": [58, 64, 2886, 2887, 2890, 2891, 2892, 3729, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794, 3804, 3814, 3818, 3827, 3847, 3854, 3855, 3857, 3862, 3870, 3877, 3878, 3879, 3883, 3886, 3887, 3888, 3909, 3913, 3916, 5369], "_package": 58, "/temp": 58, ".linux": 58, "-x": [58, 64, 1318, 1332, 1364, 1365, 1381, 1406, 1416, 1466, 1468, 1470, 1552, 1553, 4363, 4614, 4620, 4624, 4626, 4636, 4637, 5077, 5143], "openssl": 58, ".c": [58, 64, 4473, 4500], "fatal": 58, "terminated": [58, 64, 849, 877, 3922], "command": [58, 64, 322, 493, 652, 1229, 3955, 3956, 3973, 3985, 3989, 4075, 4187], "-gnu": 58, "-gcc": 58, "exit": [58, 347, 518, 677, 1254, 4039, 4046], "status": [58, 64, 2295, 2308, 2336, 2348, 2362, 2375, 2388, 2484, 2486, 2498, 2500, 2903, 2905, 2915, 2917, 2924, 2926, 2933, 2935, 2944, 2953, 2962, 2979, 2996, 3029, 3046, 3063, 3080, 3096, 3113, 3129, 3146, 3162, 3179, 3196, 3213, 3230, 3247, 3264, 3281, 3297, 3314, 3331, 3347, 3364, 3381, 3406, 3423, 3432, 3440, 3457, 3473, 3495, 3504, 3520, 3537, 3553, 3562, 3579, 3596, 3612, 3620, 3629, 3646, 3662, 3679, 3695, 3705, 3718, 3719, 3723, 3732, 3737, 3738, 3739, 3756, 3796, 3816, 3818, 3824, 3830, 3832, 3833, 3850, 3865, 3876, 3898, 3909, 3917, 3919, 3943, 3944, 3951, 3960, 4802, 4810, 4829], "\u5931\u6557": [58, 5354], "\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8": [58, 5355, 5361, 5364, 5369], "\u3001(": 58, "cryptography": 58, ".io": [58, 725, 734, 743, 752, 789], "/en": [58, 725, 734, 743, 752, 789], "/latest": [58, 725, 734, 743, 752, 789], "/installation": 58, "/#": [58, 725, 734, 743, 752, 789], "-cryptography": 58, "-on": [58, 64], "-linux": 58, "\u52aa\u3081": 59, "\u30c6\u30b9\u30c8\u30ea\u30bd\u30fc\u30b9": 59, "\u53ef\u7528": 59, "\u5206\u304b": [59, 5359], "\u5404\u5c64": 59, "\u30b5\u30dd\u30fc\u30c8\u30ec\u30d9\u30eb": 59, "\u304a\u305d\u3089\u304f\u307e\u3060": 59, "\u304a\u305d\u3089\u304f": [59, 5340, 5361], "cpython": [59, 64], "\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf": [59, 5355], "\u958b\u767a": [59, 63, 5355], "\u30a2\u30c3\u30d7\u30b9\u30c8\u30ea\u30fc\u30e0": 59, "\u6b63\u3057\u304f": 59, "\u6a5f\u80fd": [59, 63, 5337, 5338, 5340, 5341, 5345, 5347, 5349, 5354, 5355, 5356, 5357, 5359, 5361, 5368, 5369, 5372], "\u30ea\u30ea\u30fc\u30b9\u30d7\u30ed\u30bb\u30b9": 59, "\u306f\u3059\u3079\u3066": 59, "manylinux": [59, 64], "\u4ed5\u69d8": 59, "\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3": 59, "macos": [59, 64, 4182], "\u4ee5\u964d": [59, 5355, 5361], "windows": [59, 64, 912, 4182, 4830], "\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb": 59, "aarch": [59, 64, 4182], "\u307e\u3063": 59, "\u305f\u304f": 59, "\u6700\u5584": 59, "\u52aa\u529b": 59, "arm": [59, 64, 4182], "post": [59, 64, 66, 69, 71, 75, 79, 86, 95, 101, 113, 119, 123, 185, 188, 190, 356, 361, 363, 1318, 1400, 1998, 2000, 3757, 4388, 4603, 4607, 4654, 4658, 4803, 4915, 4961, 5117], "-process": 59, "dive": 59, "everything": [59, 64], "-circuits": [59, 64, 137, 2323], "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc": [60, 5347, 5348, 5349, 5350, 5359], "\u30d1\u30eb\u30b9": [60, 5356, 5358, 5359], "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0": [60, 63, 5338, 5339, 5340, 5355, 5356, 5361, 5362, 5370], "\u6271\u3046": [60, 5350, 5366, 5370], "\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2": 60, "\u30b3\u30a2\u30e2\u30b8\u30e5\u30fc\u30eb": 60, "\u30c9\u30e1\u30a4\u30f3": 60, "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3api": 60, "\u4e2d\u5fc3": 60, "\u30b9\u30ad\u30eb\u30ec\u30d9\u30eb": 60, "\u5206\u91ce": [60, 63, 5365], "\u95a2\u308f\u3089": 60, "\u8ab0\u3082": 60, "\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b9\u30bf\u30c3\u30af": 60, "\uff1bqiskit": 60, "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3": [60, 63, 5337, 5345, 5354, 5355, 5372], "\u53e4\u5178": [60, 62, 63, 5337, 5338, 5339, 5341, 5345, 5347, 5348, 5350, 5354, 5357, 5361, 5362, 5364, 5365, 5366, 5369, 5372], "\u4e16\u754c": [60, 63], "\u521d\u5fc3": 60, "\u611b\u597d": 60, "\u6559\u80b2": [60, 5344], "\u5546\u696d": 60, "\u4f01\u696d": 60, "partners": 60, "services": [60, 64, 3704, 3710, 3736, 3766, 3777], "framework": [60, 64, 814, 1448, 2001, 4177, 4473, 4500, 5340], "effectively": [60, 64, 1909, 4970, 5117, 5178, 5190], "workloads": 60, "started": [60, 63, 64, 3782], "electronic": [60, 64, 4958, 5220], "/vibronic": 60, "calculations": [60, 64, 179, 255, 256, 426, 427, 585, 586, 896, 1162, 1163], "protein": 60, "folding": [60, 64, 235, 406, 565, 1143, 5281], "codes": [60, 3901, 5332], "finance": [60, 64], "illustrative": [60, 64], "ising": [60, 64, 5341], "translators": [60, 64], "portfolio": 60, "implementations": [60, 64, 180, 1000, 1407, 1948, 1949, 2282, 4220, 5146, 5235], "pricing": [60, 64], "financial": [60, 186], "credit": [60, 64], "risk": [60, 64, 1399, 1987], "kernels": [60, 1448, 3963, 3973, 4264], "qnns": 60, "tasks": [60, 3876, 4830], "regression": [60, 64, 3905], "connect": 60, "pytorch": 60, "enhance": 60, "workflows": [60, 64], "modeling": [60, 64, 877], "-use": 60, "\u5927\u307e\u304b": 62, "\u8868\u3059": [62, 5347, 5348, 5349, 5350, 5353, 5357, 5361, 5362, 5370], "\u8a2d\u8a08": [62, 5340, 5352, 5355], "\u30b5\u30fc\u30d3\u30b9": 62, "\u30af\u30e9\u30a6\u30c9\u30d9\u30fc\u30b9": 62, "\u69cb\u3044": 62, "\u5206\u6790": [62, 5355, 5362, 5368], "\u7d71\u8a08": [62, 5347, 5348], "\u8a08\u7b97": [62, 63, 5338, 5339, 5340, 5341, 5344, 5345, 5347, 5348, 5350, 5353, 5361, 5362, 5367, 5368, 5369, 5372], "acting": [62, 64, 234, 328, 405, 499, 564, 658, 1142, 1235, 1401, 1407, 1475, 1953, 5003, 5018, 5181, 5347, 5348], "(compiled": [62, 5352], "grab": [62, 3762, 5347, 5348], "ntotal": 62, ":\"": [62, 64, 5368], "histogram": [62, 64, 3760, 3872, 4805, 5290], "6\u3064": 62, "\u5206\u89e3": [62, 63, 5350, 5352, 5353, 5362, 5367, 5369], "\u57fa\u672c": [62, 63, 5341, 5350, 5355, 5359, 5361, 5364, 5365, 5369], "\u8981\u7d20": [62, 5342, 5347, 5348, 5349, 5350, 5353, 5354, 5362], "\u547d\u4ee4": [62, 63, 5340, 5361, 5366, 5367, 5370], "\u8003\u3048\u308b": [62, 5350, 5357], "\u3002\u3059\u3079\u3066": 62, "\u6f14\u7b97": [62, 63, 5342, 5343, 5345, 5347, 5348, 5350, 5356, 5357, 5358, 5370, 5372], "\u306b\u3088\u308b": [62, 63, 5337, 5339, 5340, 5342, 5350, 5355, 5361, 5364, 5365], "\u9ad8\u6027": [62, 5361, 5364], "\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0": [62, 5345, 5372], "\u4e8c\u3064": [62, 63, 5348, 5353, 5362], "\u30bc\u30ed": [62, 5342, 5349, 5350, 5361, 5369], "\u4ee3\u5165": [62, 5362, 5366], "(int": [62, 64, 2323, 2337, 2349, 2363, 2376, 4282, 5345, 5354, 5369, 5372], "\u30ec\u30b8\u30b9\u30bf": [62, 5345, 5347, 5348, 5350, 5354, 5357, 5364, 5372], "\u307f\u307e\u3057\u3087": [62, 5337, 5339, 5340, 5345, 5350, 5355, 5357, 5361, 5366, 5367, 5372], "\u305a\u3064": [62, 5347, 5348, 5350], "\u30d9\u30eb": [62, 5349, 5361, 5364, 5367], "}.": [62, 64, 523, 1380, 1448, 1641, 1682, 2323, 2349, 3730, 4421, 4463, 4819, 4825, 5340, 5347, 5348, 5350, 5359, 5362], "\u30a2\u30c0\u30de\u30fc\u30eb\u30b2\u30fc\u30c8": [62, 63, 5342, 5345, 5347, 5356, 5358, 5367, 5372], "\u91cd\u306d\u5408\u308f\u305b": [62, 63, 5342, 5347, 5350], "\u306b\u3057": 62, "\u5236\u5fa1": [62, 63, 5347, 5348, 5356, 5357, 5359, 5361, 5362, 5369, 5370], "\u30a8\u30f3\u30bf\u30f3\u30b0\u30eb": [62, 63, 5370], "\u756a\u76ee": [62, 5345, 5347, 5348, 5350, 5353, 5355, 5357, 5358, 5361, 5362, 5372], "\u6e2c\u5b9a": [62, 63, 5342, 5343, 5347, 5348, 5357, 5358, 5359, 5365, 5366, 5367, 5369, 5370], "\u683c\u7d0d": [62, 5345, 5355, 5366, 5372], "\u6559\u79d1": [62, 5342, 5347, 5348], "\u8a18\u4e8b": 62, "\u8aad\u307f": [62, 5342, 5347, 5348], "\u3002user": 62, ".ini": 62, "drawer": [62, 64, 235, 406, 565, 1143, 4380, 4644, 5281, 5331, 5333, 5334], "settings": [62, 64, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904, 917, 1898, 1948, 1953, 1983, 1987, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 3417, 3748, 3757, 3973, 4023, 4024, 4031, 4033, 4056, 4075, 4316, 4335, 4376, 4402, 4424, 4444, 4463, 4487, 4519, 4568, 4614, 4640, 4667, 4686, 4745, 4767, 4803, 4817, 4819, 4821, 4823, 4825], "\u3070\u3069\u308c": 62, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af": 62, "\u69d8\u3005": [62, 63, 5337, 5343, 5355, 5362, 5364], "\u9054\u6210": [62, 5355, 5361], "\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc": [62, 5337, 5357, 5359], "\u3002basic": 62, "\u542b\u307e\u308c": [62, 5370], "qasmsimulatorpy": [62, 64, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918], "\u30b7\u30df\u30e5\u30ec\u30fc\u30c8": [62, 5347, 5348, 5364, 5365, 5367, 5368, 5369], "\u6587\u5b57": [62, 5342, 5343, 5347, 5348, 5349, 5350, 5361, 5367, 5368], "\u3057\u304f": [62, 5350], "\u671f\u5f85\u901a\u308a": 62, "\u56de\u6570": [62, 5338, 5347, 5348], "\u7dcf\u8a08": 62, "\u5f97\u308b": [62, 63, 5337, 5338, 5341, 5342, 5343, 5345, 5347, 5348, 5359, 5361, 5370, 5372], "\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3": 62, "\u89b3\u6e2c": [62, 5361, 5362], "\u78ba\u7387": [62, 5343, 5345, 5347, 5348, 5350, 5361, 5362, 5364, 5365, 5366, 5368, 5369, 5372], "\u4e8b\u8c61": 62, "\u5168\u5b9f": 62, "\u5272\u3063": 62, "\u6570\u5024": [62, 5357, 5362], "\u63a8\u5b9a": [62, 5337, 5345, 5347, 5348, 5362, 5372], "\u5909\u5316": [62, 5340, 5347, 5348], "\u3066\u307f\u307e\u3057\u3087": [62, 5356, 5358, 5359, 5361, 5369], "\u5b66\u7fd2": [62, 63, 5362], "\u7d42\u308f\u308a": 62, "\u307e\u3057": [62, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "textbook": [62, 63, 64, 97, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1458, 5332, 5342, 5356], "\u30d3\u30c7\u30aa": 62, "\u30b7\u30ea\u30fc\u30ba": [62, 5337], "coding": [62, 64], "\u529b\u5b66": 63, "\u539f\u7406": 63, "\u65b0\u3057\u3044": [63, 5349, 5352, 5353, 5354, 5355, 5356, 5357, 5364, 5366, 5368, 5369], "\u30d1\u30e9\u30c0\u30a4\u30e0": 63, "\u7d20\u56e0": 63, "\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3": [63, 5339, 5349, 5361, 5368, 5369], "\u63a2\u7d22": [63, 5342, 5343, 5362], "\u6a5f\u68b0": [63, 5362], "\u4ee3\u6570": 63, "\u3068\u3044\u3063": [63, 5338, 5350, 5353, 5355], "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf": [63, 5350], "\u80fd\u529b": [63, 5362], "\u30bf\u30b9\u30af": [63, 5337, 5348], "\u52b9\u7387": [63, 5340, 5342, 5361, 5368, 5369, 5370], "\u805e\u3044": 63, "\u3067\u3057\u3087": [63, 5340, 5341, 5349, 5355, 5361, 5368], "\u5f37\u307f": 63, "\u6ce2\u52d5": [63, 5337, 5362], "\u7c92\u5b50": 63, "\u5074\u9762": [63, 5359], "\u5f37\u8abf": [63, 5345, 5369, 5372], "interference": [63, 2024], "\u67a0\u7d44": 63, "\u3067\u3053\u3046": 63, "\u6d3b\u7528": [63, 5354], "sdk": [63, 64, 4958, 5220], "\u30ed\u30b8\u30c3\u30af": 63, "\u62bd\u8c61": [63, 5359], "\u8868\u73fe": [63, 5337, 5342, 5345, 5348, 5349, 5350, 5355, 5357, 5361, 5362, 5367, 5368, 5369, 5370, 5372], "\u4e2d\u6838": [63, 5355], "\u306a\u3059": 63, "\u30a8\u30f3\u30b8\u30f3": 63, "\u30ec\u30a4\u30e4\u30fc": [63, 5355], "\u306a\u304c\u3089": [63, 5352, 5353, 5355, 5357], "\u5316\u5b66": [63, 5337, 5340], "\u7269\u7406\u5b66": 63, "\u91d1\u878d": [63, 5337], "\u89e3\u304d": [63, 5347, 5348], "\u6982\u7565": 63, "\u304c\u3069": [63, 5355, 5358, 5361], "\u6df1\u304f": [63, 5337, 5345, 5356, 5372], "\u77e5\u308a": [63, 5357], "\u8aad\u8005": 63, "\u53c2\u7167\u304f": 63, "\u3002\u3057\u304b\u3057": [63, 5340, 5342, 5345, 5347, 5355, 5372], "\u5024\u304a": 63, "\u3088\u3073": 63, "\u7dda\u5f62": [63, 5337, 5355], "\u7d50\u5408": [63, 5350, 5352, 5355, 5361], "(\b": 63, "\u547c\u3070": [63, 5339, 5342, 5348, 5349, 5350, 5355, 5356, 5357, 5361, 5369], "\u3067\u3069": [63, 5367], "\u307f\u308b": 63, "\u307e\u305a": [63, 5338, 5339, 5340, 5341, 5342, 5358, 5361, 5362, 5368], "\u30a2\u30ca\u30ed\u30b0": [63, 5359], "\u30ce\u30a4\u30ba\u30ad\u30e3\u30f3\u30bb\u30ea\u30f3\u30b0": 63, "\u30d8\u30c3\u30c9\u30d5\u30a9\u30f3": 63, "\\pi": [63, 64, 103, 1458, 1472, 1517, 1524, 1533, 1535, 1552, 1560, 1564, 2867, 5345, 5350, 5352, 5362, 5372], "\u5947\u6570": 63, "\u4f4d\u76f8": [63, 5342, 5349, 5353, 5361, 5366], "\u305a\u308c": [63, 5368], "\u307b\u307c": 63, "\u5468\u6ce2": [63, 5361], "\u632f\u5e45": [63, 5349, 5350, 5357, 5366, 5367, 5369, 5370], "\u97f3\u6ce2": 63, "\u5c0f\u3055\u304f": [63, 5355, 5357], "\u304a\u3088": 63, "\u7b49\u3057\u3044": [63, 5361], "\u4fe1\u53f7": [63, 5356, 5357, 5359], "\u8fd1\u4f3c": [63, 5353, 5361, 5365, 5369], "\u6253\u3061\u6d88\u3057\u5408\u3044": 63, "\u8fd1\u3044": [63, 5340, 5353, 5368], "\u3082\u305f\u3089\u3057": 63, "\u6bd4\u3079": [63, 5339, 5352, 5355], "\u5927\u5e45": [63, 5352], "\u6e1b\u5c11": [63, 5339], "\u30c7\u30b8\u30bf\u30eb": 63, "\u4e00\u81f4": [63, 5340, 5341, 5343, 5353], "\u9023\u7d9a": [63, 5342, 5357, 5370], "\u88dc\u6b63": [63, 5357], "\u3002\u307e\u305a": [63, 5347, 5348, 5362], "\u6240\u5b9a": 63, "\u6210\u5206": [63, 5350], "\u5165\u529b": [63, 5339, 5342, 5343, 5344, 5347, 5349, 5352, 5353, 5355, 5356, 5357, 5358, 5362, 5364, 5365], "\u76f8\u5bfe": [63, 5357], "\u6253\u3061\u6d88\u3057": 63, "\u6b8b\u308b": 63, "\u89e3\u3068": 63, "\u904e\u7a0b": [63, 5338], "\u73fe\u8c61": 63, "\u542b\u3093": [63, 5338, 5359, 5361, 5364, 5366], "\u5727\u5012": 63, "\u30c6\u30ec\u30dd\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3": 63, "\u7528\u3044\u308b": [63, 5337, 5339, 5340, 5341, 5342, 5344, 5350, 5362], "\u7269\u7406": [63, 5347, 5348, 5350, 5355, 5356], "\u304a\u3051\u308b": [63, 5338, 5342, 5343, 5347, 5348, 5355, 5357], "\u8fd1\u3055": 63, "\u306b\u3088\u3089": 63, "\u4e00\u65b9": [63, 5341, 5347, 5348, 5353, 5354, 5355, 5357, 5358, 5359], "\u3082\u3046": [63, 5345, 5359, 5361, 5369, 5372], "\u8ee2\u9001": 63, "\u81ea\u7136": 63, "\u6b63\u771f": 63, "\u6b63\u9298": 63, "\u4e71\u6570": [63, 5337], "\u3055\u3048": 63, "\u7528\u610f": [63, 5338, 5339, 5340, 5341, 5342, 5347, 5349, 5350, 5355, 5361], "\u67a0\u7d44\u307f": 63, "\u304b\u3064": 63, "\u30c7\u30fc\u30bf": [63, 5338, 5339, 5347, 5348, 5349, 5350, 5355, 5357, 5359, 5365], "\u30b3\u30d2\u30fc\u30ec\u30f3\u30c8": [63, 5366], "\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0": 63, "\u30eb\u30fc\u30c1\u30f3": [63, 5358], "\u5404\u6c34": 63, "\u5e73\u7dda": 63, "\u8868\u3057": [63, 5342, 5343, 5350, 5361, 5362], "\u5de6\u7aef": [63, 5350], "\u53f3\u7aef": [63, 5350], "\u7dda\u4e0a": 63, "\u914d\u7f6e": [63, 5344, 5347, 5348], "\u8868\u3055": [63, 5340, 5350, 5361], "\u518d\u8a2a": 63, "\u53d6\u308a\u8fbc\u3093": 63, "\u5178\u578b": [63, 5361], "\u30ef\u30fc\u30af\u30d5\u30ed\u30fc": [63, 5347, 5348], "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2": [63, 5357, 5361], "\u30d7\u30ea\u30df\u30c6\u30a3\u30d6": [63, 5361], "\u6f14\u7b97\u5b50": [63, 5337, 5338, 5339, 5340, 5341, 5342, 5345, 5347, 5349, 5350, 5353, 5359, 5368, 5372], "\u84c4\u3048": 63, "\u53ef\u9006": 63, "\u5909\u63db": [63, 5340, 5341, 5342, 5350, 5352, 5355, 5358, 5361, 5365, 5370], "\u30e6\u30cb\u30bf\u30ea\u30fc": [63, 5350, 5353, 5366, 5367], "\u30b3\u30a2": 63, "\\oplus": [63, 5350], "\u66f8\u304b": [63, 5343], "\u306e\u3088\u3046": [63, 5342, 5350, 5361, 5367], "\u30d3\u30c3\u30c8\u30d5\u30ea\u30c3\u30d7": [63, 5345, 5372], "xor": [63, 64, 1364, 1462, 5343], "\u5fc5\u305a\u3057": [63, 5337], "\u4ed8\u304d": [63, 5353, 5356], "\u56de\u8ee2": [63, 5352, 5357, 5362], "rx": [63, 64, 198, 254, 289, 291, 343, 369, 425, 460, 462, 514, 528, 584, 619, 621, 673, 1067, 1107, 1161, 1196, 1198, 1250, 1348, 1374, 1376, 1384, 1450, 1456, 1486, 1488, 1499, 1519, 1522, 1537, 1542, 1544, 1547, 1552, 4229, 4922, 4930, 5226, 5332, 5333, 5334, 5335, 5350, 5352, 5354, 5362], "ry": [63, 64, 198, 293, 334, 344, 369, 464, 505, 515, 528, 623, 664, 674, 1107, 1200, 1241, 1251, 1350, 1376, 1377, 1379, 1385, 1388, 1406, 1441, 1450, 1456, 1471, 1491, 1493, 1503, 1537, 1542, 1544, 1547, 1560, 1563, 1567, 4229, 5093, 5130, 5133, 5237, 5332, 5333, 5334, 5335, 5337, 5338, 5339, 5340, 5341, 5350, 5354], "\u4e00\u7dd2": [63, 5355, 5361], "\u4f5c\u308a": [63, 5340, 5345, 5349, 5359, 5362, 5365, 5372], "\u4f7f\u3048\u308b": [63, 5340, 5368], "\u30d3\u30c3\u30c8\u30b2\u30fc\u30c8": [63, 5357, 5361, 5366, 5367, 5370], "\u30d3\u30c3\u30c8\u30da\u30a2": 63, "\u30ad\u30c3\u30af": 63, "\u5bfe\u7167": [63, 5369], "\u3001\u300d": 63, "\u306b\u3064\u306a\u304c\u3063": 63, "\u30e1\u30fc\u30bf\u30fc": 63, "\u3057\u3070\u3057": 63, "\u5931\u3044": 63, "\u5f15\u304d\u51fa\u3057": 63, "\u306a\u304c\u3063": 63, "\u66f8\u304d\u8fbc\u307f": 63, "\u30ef\u30a4\u30e4\u30fc": 63, "\u65b9\u6cd5": [63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5365, 5366, 5367, 5368, 5369, 5372], "\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u30b2\u30fc\u30c8\u30bb\u30c3\u30c8": 63, "\u542b\u3080": [63, 5347, 5348, 5355, 5357, 5359, 5361, 5364, 5367, 5368, 5370], "\u3069\u3093\u306a": 63, "\u4f5c\u308b": [63, 5347, 5348], "\u30ef\u30fc\u30af\u30ed\u30fc\u30c9": 63, "\u4ea4\u4e92": [63, 5361], "\u30b7\u30fc\u30b1\u30f3\u30b9": [63, 5357], "\u5909\u5206": [63, 5337, 5338, 5339], "\u30eb\u30fc\u30d7": 63, "\u9077\u79fb": 63, "\u6027\u80fd": [63, 5359, 5364], "\u5411\u4e0a": [63, 5364, 5369], "\u305d\u3053": 63, "\u6642\u9593": [63, 5339, 5344, 5345, 5352, 5355, 5356, 5357, 5358, 5359, 5365, 5366, 5369, 5370, 5372], "\u9ad8\u901f": [63, 5357, 5370], "\u7528\u3044": [63, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5353, 5362], "\u7e70\u308a\u8fd4\u3057": [63, 5340, 5342, 5345, 5347, 5348, 5350, 5355, 5358, 5372], "\u5b9a\u7fa9": [63, 5339, 5340, 5341, 5345, 5349, 5350, 5353, 5355, 5356, 5357, 5361, 5362, 5368, 5372], "\u30b3\u30d2\u30fc\u30ec\u30f3\u30b9": 63, "\u9577\u3044": [63, 5357, 5358], "\u30b9\u30b1\u30fc\u30eb": [63, 5338], "\u52b4\u529b": 63, "\u8c4a\u5bcc": [63, 5361], "\u5f93\u6765": 63, "\u307b\u3093": 63, "\u6570\u884c": 63, "\u3002:": [63, 5349, 5354], "ref": [63, 64, 103, 4825, 5338, 5339], "cr": [63, 64, 1102, 1499, 3760, 4805, 5350], "classicalregister": [63, 64, 235, 251, 252, 265, 266, 267, 347, 406, 422, 423, 436, 437, 438, 518, 565, 581, 582, 595, 596, 597, 677, 940, 941, 942, 1036, 1063, 1065, 1102, 1106, 1143, 1147, 1158, 1159, 1172, 1173, 1174, 1254, 1263, 1645, 1646, 1649, 1650, 1701, 4241, 5281, 5282, 5345, 5350, 5353, 5354, 5355, 5372], "zx": [63, 64, 1374, 1499, 4513, 4539, 4568, 4579, 4625, 4634, 5332], ".reset": [63, 64, 5345, 5350, 5372], ".z": [63, 64, 252, 423, 582, 1159, 1388, 1937, 3932, 3935, 3951, 3963, 3976, 4463, 4519, 4802, 5133, 5350], "(cr": 63, "\u5185\u5074": 63, "\u7d20\u5b50": 63, "\u6280\u8853": 63, "\u9ad8\u7cbe": 63, "\u8d85\u4f1d": 63, "\u5c0e\u56de": 63, "\u30c8\u30e9\u30c3\u30d7\u30a4\u30aa\u30f3": 63, "\u534a\u5c0e": 63, "\u4f53\u91cf\u5b50": 63, "\u30c9\u30c3\u30c8": 63, "\u5149\u5b50": 63, "\u4e2d\u6027": 63, "\u539f\u5b50": [63, 5337, 5340], "\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc": 63, "\u7a4d\u6975": [63, 5355], "\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8": 63, "\u4ecb\u3057": [63, 5340, 5361], "\u3068\u3089\u308f": 63, "\u30a8\u30f3\u30bf\u30f3\u30b0\u30eb\u30b2\u30fc\u30c8\u30c8\u30dd\u30ed\u30b8\u30fc": 63, "\u30cd\u30a4\u30c6\u30a3\u30d6\u30b2\u30fc\u30c8\u30bb\u30c3\u30c8": 63, "\u30de\u30c3\u30d4\u30f3\u30b0": [63, 5342, 5348, 5355, 5356, 5357, 5359, 5368], "\u5fe0\u5b9f\u5ea6": [63, 5339, 5350, 5356], "\u9ad8\u3081\u308b": 63, "\u4e0a\u8ff0": [63, 5340], "\u30b2\u30fc\u30c8\u30a8\u30e9\u30fc": [63, 5365, 5366], "\u7f6e\u304b": 63, "\u6bb5\u968e": 63, "\u53f0\u7121": 63, "\u3084\u3059\u3044": [63, 5343], "\u9ad8\u5fe0": 63, "\u5b9f\u5ea6": 63, "\u7de9\u548c": [63, 5366], "\u6226\u7565": 63, "\u8f03\u6b63": [63, 5339, 5358, 5359], "\u6307\u6a19": 63, "\u4e0b\u56f3": 63, "\u5fe0\u5b9f": [63, 5356, 5365, 5367, 5368], "\u30c6\u30af\u30cb\u30c3\u30af": [63, 5340], "\u96c6\u3081": 63, "_manhattan": [63, 3306, 3315], "\u30c8\u30dd\u30ed\u30b8\u30fc": [63, 5355], "\u7686\u3055\u3093": 63, "\u4f53\u9a13": 63, "\u3082\u3089\u3044": 63, "\u601d\u3063": 63, "\u3082\u3089\u3048": 63, "\u3082\u3057\u305d\u306e": 63, "\u98db\u3073\u8fbc\u3093": 63, "\u3067\u307f\u307e\u3057\u3087": 63, "guide": [63, 64], "\u5275\u59cb": 63, "\u5bfe\u8a71": 63, "\u30b3\u30f3\u30dd\u30fc\u30b6\u30fc": 63, "\u6613\u3057\u3044": 63, "\u5165\u9580": [63, 5338], "\u5927\u5b66": 63, "\u30b3\u30fc\u30b9": 63, "\u88dc\u52a9": [63, 5342, 5345, 5372], "\u6559\u6750": 63, "meta": 64, "-package": 64, "metapackage": 64, "-aqua": [64, 5342, 5358, 5359], "\u7ba1\u7406": 64, "formalized": 64, "yet": [64, 70, 119, 163, 211, 382, 541, 849, 877, 1120, 1376, 1377, 1379, 1441, 1471, 1503, 1537, 1667, 2969, 2986, 3003, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3821, 5083], "officially": 64, "marks": [64, 1464, 5342], "originally": [64, 92, 861, 904, 1376, 1377, 1379, 1441, 1471, 1503, 1537], "packaging": 64, "remove": [64, 82, 126, 131, 134, 148, 166, 173, 285, 456, 615, 1192, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 2162, 3989, 3992, 4223, 4224, 4226, 4227, 4228, 4752, 4761, 4762, 4775, 4782, 4783, 4789, 4797, 4798, 4811, 4838, 4865, 4866, 4872, 4898, 4904, 4910, 4911, 4919, 4922, 5166, 5169, 5172, 5178, 5296, 5302, 5303, 5308, 5314, 5315, 5320, 5326, 5327], "-existing": [64, 4915, 5137], "upgrading": 64, "recommended": [64, 877, 896, 4182], "uninstall": 64, "fresh": [64, 929, 949, 962, 1012, 1027, 1042, 1056, 1269, 1285, 1304, 1434, 1510, 1779, 1822, 1838, 1854, 1870, 2705, 2718, 2731, 2744, 2757, 2770], "supersceded": 64, "switch": 64, "managers": [64, 201, 213, 372, 384, 531, 543, 1110, 1121, 5230], "refactor": 64, ".data": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244, 5347, 5353, 5364, 5370], "previously": [64, 165, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1508, 1641, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2323, 2349, 2363, 2376, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 3778, 3788, 3837, 3863, 3909, 5021, 5050, 5083, 5123], "tuples": [64, 84, 90, 118, 128, 179, 265, 436, 595, 970, 1172, 1644, 1663, 2015, 2285, 2808, 2848, 2850, 2851, 2852, 2854, 2875, 2882, 2885, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3991, 4577, 4579, 4751, 4922, 4928, 4996, 4999, 5006, 5033], "(instruction": [64, 2285, 2813, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696], "clbits": [64, 193, 211, 216, 239, 240, 251, 252, 347, 348, 364, 382, 387, 410, 411, 422, 423, 518, 519, 523, 541, 546, 569, 570, 581, 582, 677, 678, 923, 936, 938, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1102, 1120, 1124, 1146, 1147, 1158, 1159, 1254, 1255, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1656, 1667, 1668, 1691, 1700, 1717, 1723, 1724, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4743, 4744, 4747, 4749, 4769, 4771, 4946, 4952, 5181, 5223, 5239, 5244], "circuitinstruction": [64, 197, 368, 527, 937, 938, 1102, 1106, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 5239, 5244], "cost": [64, 165, 1471, 1987, 4370, 4578, 4716, 5175, 5178, 5193, 5337, 5340], "quality": [64, 147, 3779, 3781, 3792, 3795], "introduction": [64, 904, 5336, 5340], "vf": [64, 5215, 5216, 5218, 5219], "2postlayout": 64, "toqmswap": 64, ".stagedpassmanager": 64, "rxx": [64, 292, 463, 622, 1199, 1379, 1489, 1490, 4229, 5332], "unitarysynthesis": [64, 4901, 5203, 5204, 5226, 5230, 5355], "(basis": 64, "3qormore": [64, 5355], "collect": [64, 1664, 1665, 1666, 3993, 4061, 4995, 4996, 4998, 4999, 5000, 5003, 5018, 5355], "2qblocks": [64, 5018, 5355], "consolidateblocks": [64, 4713, 5019, 5020, 5355], "staged": [64, 4915], "(stages": 64, ", init": 64, "=init": 64, "=translate": 64, "paulilist": [64, 4466, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4568, 4584, 4588, 4591, 4725, 4733], ".group": 64, "_commuting": 64, "partition": [64, 1682, 4503, 4504, 4580], "sublists": 64, "commutes": [64, 1947, 4466, 4492, 4493, 4523, 4524, 4614, 4618, 4619], "xx": [64, 274, 445, 604, 1181, 1379, 1382, 1427, 1489, 1556, 1558, 1559, 1586, 4354, 4487, 4503, 4513, 4539, 4580, 4595, 4634, 4712, 4819, 4825, 5332, 5353, 5361], "yy": [64, 1448, 1450, 1494, 4503, 4513, 4539, 4579, 4580, 4634, 5332, 5353, 5361], "zz\"": [64, 4503, 4580], "group": [64, 1376, 1925, 1970, 1998, 3704, 3730, 3748, 3749, 3751, 3752, 3766, 3769, 3777, 3782, 3789, 3793, 3811, 3817, 3830, 3838, 4299, 4354, 4370, 4463, 4472, 4503, 4504, 4519, 4580, 4614, 4716, 4728, 4732, 5003, 5250, 5274, 5361, 5370], "zz'": [64, 1450, 4487, 4503, 4513, 4539, 4580], ", paulilist": [64, 4503], "yy'": [64, 4503], "op": [64, 193, 324, 364, 495, 523, 654, 904, 943, 1102, 1231, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1661, 1662, 1664, 1665, 1666, 1676, 1686, 1693, 1706, 1710, 1715, 1719, 1749, 1898, 1906, 1920, 1921, 1947, 1959, 1972, 1975, 1977, 1980, 2001, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2139, 2182, 2198, 2211, 2218, 2224, 2238, 2255, 2417, 2798, 2842, 4503, 4562, 4577, 4579, 4580, 4960, 4973, 4996, 4999, 5006, 5014, 5196, 5198, 5222, 5239, 5244, 5337, 5338, 5339, 5340, 5342, 5353, 5355, 5362], "2j": [64, 4580], "1j": [64, 1753, 2914, 2923, 3757, 4162, 4433, 4463, 4580, 4803, 5353, 5361, 5364, 5367], "coeffs": [64, 850, 878, 1468, 1470, 2025, 2032, 2055, 2063, 2112, 2119, 2153, 4568, 4580, 5361], ",\n#": 64, "marginal": [64, 904, 4811, 4812, 4813], "_distribution": [64, 5143], "marginalize": [64, 4743, 4744, 4747, 4749, 4769, 4771, 4811, 4812, 4813], "differences": [64, 683, 4008], "written": [64, 136, 288, 459, 618, 814, 1195, 1318, 1379, 1399, 1447, 1475, 2277, 2297, 4402, 4667, 4867, 4884], "streamlined": 64, "marginalizing": 64, "_matmul": 64, "baseoperator": [64, 188, 190, 363, 2813, 2823, 4299, 4309, 4316, 4330, 4335, 4349, 4354, 4368, 4402, 4416, 4424, 4438, 4444, 4458, 4480, 4512, 4519, 4538, 4563, 4587, 4633, 4667, 4681, 4686, 4700], "shorthand": [64, 119, 4061, 4063, 4065, 4067, 4069, 4071, 4073], "dot": [64, 2814, 2816, 2833, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4404, 4407, 4426, 4429, 4446, 4449, 4465, 4466, 4467, 4471, 4489, 4492, 4494, 4498, 4519, 4525, 4529, 4552, 4554, 4557, 4571, 4574, 4614, 4620, 4624, 4669, 4672, 4688, 4691, 4896, 4917, 5283, 5333, 5334], "= a": [64, 1399, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2814, 4190, 4191, 4193, 4194, 4197, 4199, 4200, 4201, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4669, 4688], ".dot": [64, 328, 342, 499, 513, 658, 672, 1235, 1249, 1786, 2814, 2831, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4554, 4571, 4614, 4669, 4688], "(b": [64, 198, 369, 528, 1107, 1471, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2161, 2181, 2232, 2236, 2814, 2816, 2826, 2858, 2859, 4301, 4304, 4310, 4318, 4321, 4331, 4337, 4340, 4350, 4356, 4359, 4369, 4404, 4407, 4417, 4426, 4429, 4440, 4446, 4449, 4459, 4467, 4482, 4554, 4557, 4564, 4571, 4574, 4590, 4620, 4624, 4669, 4672, 4682, 4688, 4691, 4701, 5353, 5362], "(reps": 64, "(gates": 64, "_decompose": [64, 231, 402, 561, 1139, 5068], "'r']": 64, ", reps": 64, "replacement": [64, 1096, 1710, 1928, 1929, 1934, 1936, 1941, 1942, 1944, 3823, 3868, 4006, 4973], "conventional": 64, "parametricpulse": [64, 4178, 4179, 4180, 4181, 5331], "-envelope": 64, "-validation": 64, "-expression": 64, "-contained": 64, "libraries": [64, 235, 406, 565, 912, 1143, 5281], "-hermitian": [64, 1986], "aerpauliexpectation": [64, 1985, 1986, 5340, 5361], "qeom": 64, "drawing": [64, 235, 406, 565, 1143, 1550, 4380, 4644, 5281, 5331, 5333, 5334, 5347, 5348, 5354], ".op": [64, 1719, 5355], "_start": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 3830, 4027, 4029, 5023, 5239, 5244], "populated": [64, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 4712], "obtain": [64, 103, 105, 181, 357, 3704, 3813, 4049, 4050, 4743, 4744, 4821, 5021], "fakemontreal": [64, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364], "qct": 64, ", scheduling": [64, 5333, 5334], "_insts": 64, "(zip": [64, 5345, 5372], "(qct": 64, ".clear": 64, ".copy": [64, 5355], "_empty": [64, 5331], "_like": [64, 2376, 2914, 2923, 2932, 4376, 4547, 4739, 4743, 4830], "cleared": 64, "logically": [64, 682], "_supported": [64, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 832, 833, 841, 849, 861, 869, 877, 888, 896, 904, 4946, 4949, 4952, 4955], "(operation": 64, "=rxgate": 64, "trotterization": [64, 162, 163, 1377, 1948, 1949, 1970, 1974, 1976, 1978, 1979, 1982, 5361], ".trotterqrte": 64, "compliant": [64, 3905], "productformula": [64, 162, 4819, 4824, 4825], "evolutionproblem": [64, 89, 109, 155, 162, 163, 164], ".evolvers": 64, ".trotterization": 64, "trotterqrte": [64, 163, 164], "summedop": [64, 104, 144, 163, 1906, 1912, 1922, 1923, 1924, 1930, 1954, 1959, 1963, 1975, 1977, 1980, 2024, 2025, 2030, 2032, 2046, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2075, 2078, 2085, 2089, 2102, 2117, 2130, 2138, 2144, 2163, 2182, 2187, 2198, 2209, 2211, 2224, 2238, 2243, 2255, 5362], "_problem": [64, 68, 72, 73, 78, 93, 94, 98, 109, 111, 112, 120, 121, 122, 155, 162, 163], "(operator": [64, 162, 904, 1448, 2001, 5337, 5338, 5339, 5340, 5362], "trotter": [64, 162, 186, 362, 523, 1970, 1976, 1982, 5361], "_qrte": [64, 162], ".evolve": [64, 162, 5347], "(evolution": [64, 162, 5361], "evolved": [64, 88, 90, 109, 155, 162, 163, 1377, 1471, 1934, 1952, 4384, 4649], ".evolved": 64, "quickly": [64, 201, 213, 372, 384, 531, 543, 1099, 1110, 1121, 1379, 3796, 4928, 5003, 5230, 5369], "mirrors": [64, 4252, 4270, 5230], "fakewashingtonv": [64, 3681, 3682, 3683, 3684, 3685, 3686, 3687], "_memory": [64, 2323, 2349, 2363, 2376, 2909, 2918, 2927, 4811, 5364], "arrays": [64, 769, 1943, 2024, 2025, 2032, 2055, 2063, 4254, 4272, 4287, 4402, 4463, 4485, 4497, 4506, 4516, 4528, 4533, 4542, 4623, 4628, 4637], "maginized": 64, "differs": [64, 110, 896, 1544, 1547, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2285, 3005, 3013, 3382, 4922], "extended": [64, 2323, 2334, 2349, 2360, 2373, 2386, 3818, 5085, 5178, 5369, 5370], "_values": [64, 130, 133, 1072, 1088, 2155, 2160, 3888, 3922, 5242, 5243, 5248, 5249], "openqasm": [64, 277, 448, 607, 920, 922, 931, 939, 941, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1184, 1259, 1261, 1271, 1288, 1307, 1327, 1436, 1512, 1544, 1547, 1645, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 4229, 4234, 4238, 4239, 4240, 4241, 4244, 4245, 4270, 5146], "exporter": [64, 4244, 4245], "exporting": 64, "\u300ctime": 64, "'toqm": 64, "-toqm": [64, 1644], "[toqm": 64, ".qsd": 64, "shannon": [64, 4739], "isometry": [64, 255, 256, 426, 427, 585, 586, 1162, 1163, 4735], "approach": [64, 120, 1392, 1987, 5250], "unitarygate": [64, 1706, 1753, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 4332, 4351, 4418, 4441, 4460, 4683, 4702, 5353], "matrices": [64, 193, 302, 312, 364, 473, 483, 523, 632, 642, 709, 769, 1209, 1219, 1376, 1450, 1922, 1930, 2025, 2055, 2084, 2104, 2122, 2376, 2543, 2673, 2712, 2780, 2790, 2813, 2845, 2855, 2856, 2858, 2859, 2870, 2872, 2875, 2876, 2879, 2880, 2882, 2884, 2885, 4402, 4433, 4463, 4485, 4509, 4516, 4519, 4535, 4542, 4584, 4614, 4630, 4637, 4667, 4715, 4722, 4723, 4726, 4767, 5252, 5272, 5274, 5293, 5366], "scalar": [64, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 798, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907, 1475, 1901, 1908, 1948, 1953, 1956, 2025, 2032, 2035, 2042, 2055, 2063, 2069, 2072, 2084, 2097, 2112, 2123, 2132, 2135, 2141, 2153, 2154, 2169, 2180, 2235, 2239, 4552, 4562], "multiplied": [64, 143, 761, 849, 877, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2816, 4304, 4321, 4340, 4359, 4407, 4429, 4449, 4471, 4557, 4574, 4672, 4691, 5178, 5331], "multipliers": 64, "lookaheadswap": [64, 5118, 5119, 5230, 5355], "(used": 64, "lookahead": [64, 1644, 3708, 5117, 5178, 5355], "seen": [64, 1372, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 3982, 4896, 4917, 5283, 5340], "purely": [64, 235, 406, 565, 1143, 1644, 4568, 5281], "complexity": [64, 180, 186, 904, 1396, 2323, 2349, 4745, 4767], "sabreswap": [64, 5179, 5180, 5230, 5355], "sabre": [64, 1644, 3708, 5178], "vastly": 64, "performant": [64, 4182], "commuting": [64, 1396, 1448, 1923, 1924, 1998, 4493, 4503, 4504, 4524, 4580, 4619, 5015, 5016, 5017, 5137], "2qgaterouter": 64, "route": [64, 5014, 5017], "qaoa": [64, 148, 149, 150, 151, 152, 153, 904, 1471, 1948, 5338, 5341], "dealt": 64, "predefined": [64, 904, 1503, 2021, 2023], "furthermore": [64, 145, 180, 683, 1537, 2337, 4229], "findcommutingpaulievolutions": [64, 5014], "identifies": [64, 2864, 3769, 4922], "evolutions": [64, 180, 1922, 1923, 1949, 1953, 1971, 4819, 4823, 4825], "swapstrategy": [64, 5014, 5017], "tailored": 64, "ideally": [64, 5014, 5226, 5237], "univariate": [64, 904], "umda": [64, 905, 906, 907, 908, 909, 910, 911], "toy": [64, 904], "(maxiter": [64, 877, 904, 5337, 5338, 5339, 5340, 5362], "_gen": [64, 904], "vqe": [64, 147, 152, 173, 174, 175, 176, 177, 178, 682, 904, 1983, 5341], "(opt": [64, 904], "=quantuminstance": [64, 904, 5338, 5343], "=p": [64, 904], ".compute": [64, 904, 5337, 5338, 5339, 5340, 5341, 5362], "_minimum": [64, 904, 5337, 5338, 5339, 5340, 5341, 5362], "_eigenvalue": [64, 105, 904, 5337, 5338, 5339, 5340, 5341, 5362], "=h": [64, 904, 5337, 5338, 5339, 5340], "constructor": [64, 136, 1471, 2487, 2862, 3704, 3711, 3718, 3736, 3744, 3766, 3777, 3796, 3830, 3834, 3845, 3852, 3869, 3876, 3889, 3905, 3909, 3922, 4182, 4244, 4245, 4380, 4432, 4644, 5268, 5272], "unrolled": [64, 1394, 1644, 4973, 5205, 5208, 5210, 5213, 5233, 5234], "upgraded": 64, "(schedule": 64, "_block": [64, 1441, 1444, 1538, 2018, 2021, 2023, 5003, 5362], "/function": 64, "behind": [64, 97], "finish": [64, 3818, 3854, 3896, 5045], "loop": [64, 201, 213, 240, 347, 372, 384, 411, 518, 531, 543, 570, 677, 833, 923, 943, 956, 1006, 1110, 1121, 1147, 1254, 1263, 3818, 4861, 4915], "-performing": 64, "search": [64, 92, 97, 118, 123, 165, 172, 235, 406, 565, 725, 734, 761, 765, 781, 806, 904, 1143, 1388, 1475, 2018, 4901, 4973, 5117, 5178, 5233, 5234, 5235, 5281, 5342, 5355, 5362], "isomorphic": [64, 1922, 1930, 1941, 1942, 1944], "subgraph": [64, 4857, 4860, 5214, 5217, 5232], "2layout": 64, "vf2": [64, 5214, 5217], "deisgned": 64, "routed": [64, 5014], "perfect": [64, 3708, 4976, 5108, 5214, 5217, 5233, 5234], "applylayout": [64, 4962, 4963, 5014, 5355], "_set": [64, 763, 1644, 3834, 3855, 3869, 4432, 4867, 4900, 4921, 4961, 4963, 4996, 4999, 5003, 5006, 5008, 5010, 5027, 5030, 5062, 5071, 5086, 5108, 5119, 5123, 5126, 5178, 5187, 5214, 5217, 5223, 5355], "rates": [64, 773, 849, 877, 5033, 5041, 5051, 5226], "iteratively": [64, 110, 165, 798], "computes": [64, 82, 119, 126, 127, 130, 131, 134, 135, 148, 153, 165, 166, 169, 173, 178, 271, 272, 362, 442, 443, 601, 602, 856, 883, 1178, 1179, 1296, 1397, 1475, 1551, 1989, 2021, 4710, 4717, 4721, 4722, 4747, 4769, 5242, 5243, 5248, 5249], "eigenstate": [64, 82, 115, 126, 127, 128, 131, 133, 134, 135, 143, 148, 153, 166, 173, 178, 1458, 4386, 4651, 5337, 5340], "starting": [64, 147, 165, 172, 1644, 2177, 3723, 3738, 3739, 3823, 3845, 3868, 3880, 3973, 3993, 4031, 4839, 4922, 4973, 5117, 5175], "computed": [64, 97, 103, 104, 105, 130, 140, 142, 143, 145, 146, 147, 165, 172, 179, 180, 275, 446, 605, 685, 693, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 852, 854, 863, 871, 881, 890, 898, 904, 906, 1182, 1318, 1447, 1551, 1934, 2001, 2015, 2032, 2165, 2166, 2167, 2168, 2883, 4842, 5341, 5344, 5362], "optimising": [64, 165], "tries": [64, 97, 188, 1644, 2059, 4964, 5175, 5250, 5262], "eigen": [64, 84, 128, 165], "orthogonal": [64, 165], "energy": [64, 151, 165, 169, 176, 709, 904, 1987, 2162, 2165, 2168, 5338, 5339, 5362], "ansatz": [64, 147, 149, 150, 151, 165, 167, 168, 169, 172, 174, 175, 176, 849, 852, 877, 1376, 1377, 1379, 1456, 1471, 1503, 1537, 2001, 5337, 5338, 5339, 5340, 5341, 5362], "vqd": [64, 166, 167, 168, 169, 170, 171], "twolocal": [64, 1376, 1379, 1456, 1503, 1538, 5337, 5338, 5339, 5340, 5341], "cobyla": [64, 718, 719, 720, 721, 722, 723, 724, 5338, 5341], "(z": [64, 1448, 4463, 4487, 4706, 4707, 4708, 5361, 5362], "(k": [64, 850, 878, 5077, 5143], "(rotation": [64, 5337, 5338, 5339, 5340], "_blocks": [64, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 5337, 5338, 5339, 5340], "entanglement": [64, 1376, 1377, 1379, 1382, 1387, 1441, 1442, 1444, 1450, 1456, 1471, 1503, 1537, 1538, 1563, 1567, 4718, 5263, 5337, 5338, 5339, 5340, 5341], ", shots": [64, 5340, 5343], "_res": 64, "_eigenvalues": [64, 84, 128, 5337, 5340], "(op": [64, 2001, 5014, 5353, 5355, 5362], "snippet": 64, "1st": [64, 2003, 5280], "drag": [64, 4163, 4164, 4165, 4166, 4192, 5357], "loss": [64, 849, 850, 851, 877, 878, 879, 4811], "whereas": [64, 103, 1393, 2218, 4570], "iterate": [64, 765, 4868, 4922, 4930, 5020], "casting": 64, "lists": [64, 1099, 1102, 1387, 1393, 1468, 1641, 1682, 1901, 1928, 1929, 1956, 1985, 1991, 1996, 1999, 2024, 2032, 2035, 2072, 2135, 2154, 2168, 2180, 2235, 3787, 3905, 3935, 3957, 4218, 4252, 4270, 4463, 4487, 5274, 5287], "assist": 64, "preferred": [64, 165, 172, 806, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 3766], "developments": 64, "constantly": 64, "planned": 64, "reduction": [64, 761, 1912, 1945, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243], "deep": [64, 1904, 4303, 4320, 4339, 4358, 4406, 4428, 4448, 4469, 4496, 4527, 4556, 4573, 4671, 4690], "-contraint": 64, "csp": [64, 4976], "[csp": 64, "]\"": 64, "increased": [64, 4139], "trying": [64, 201, 213, 372, 384, 531, 543, 1110, 1121, 1912, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243, 2485, 2904, 3814, 3862, 4841, 4915], "deserializer": 64, "fix": [64, 3993, 4958, 4964], "-default": [64, 2808, 2848], "msrv": 64, "oldest": 64, "upstream": 64, "too": [64, 262, 264, 433, 435, 592, 594, 1169, 1171, 1376, 1379, 1475, 2282, 2323, 2349, 2363, 2376, 3979, 4297, 5340], "basebackend": [64, 2285, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188], "basejob": [64, 2308, 2486, 2500, 2905, 2914, 2923, 2932, 4829], "baseprovider": 64, "rzxcalibrationbuilder": [64, 5152, 5153, 5154, 5155, 5156, 5157], "_mapping": [64, 5151, 5157], "fakemumbai": [64, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381], "cal": [64, 4219, 5268, 5272, 5274, 5366], "=inst": 64, "=channel": 64, "fakemumbaiv": [64, 3391, 3392, 3393, 3394, 3395, 3396, 3397], "(bit": [64, 5342, 5366], "qargs": [64, 197, 199, 244, 368, 370, 415, 527, 529, 574, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1063, 1064, 1106, 1108, 1151, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1661, 1662, 1710, 1711, 1719, 1725, 1749, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 2813, 2814, 2816, 2820, 2821, 4299, 4301, 4304, 4306, 4307, 4316, 4318, 4321, 4323, 4328, 4335, 4337, 4340, 4342, 4347, 4354, 4356, 4359, 4364, 4366, 4379, 4381, 4383, 4388, 4389, 4390, 4392, 4394, 4395, 4402, 4404, 4407, 4409, 4414, 4424, 4426, 4429, 4434, 4436, 4444, 4446, 4449, 4451, 4456, 4463, 4465, 4466, 4467, 4471, 4473, 4475, 4478, 4487, 4489, 4492, 4494, 4498, 4500, 4505, 4510, 4519, 4525, 4529, 4532, 4536, 4552, 4554, 4557, 4559, 4561, 4568, 4571, 4574, 4581, 4585, 4598, 4599, 4601, 4603, 4604, 4605, 4607, 4608, 4609, 4614, 4620, 4624, 4627, 4631, 4643, 4646, 4648, 4654, 4655, 4656, 4658, 4660, 4661, 4667, 4669, 4672, 4674, 4679, 4686, 4688, 4691, 4693, 4698, 4724, 4922, 4927, 4930, 4934, 4935, 4936, 4938, 4939, 5023, 5353, 5355], "cargs": [64, 197, 244, 368, 415, 527, 574, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1063, 1064, 1106, 1151, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1661, 1662, 1710, 1711, 1719, 1725, 1749, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 5023, 5355], "daginnode": [64, 1674, 1714, 1746, 1747, 1748, 1750, 1752], "dagoutnode": [64, 1674, 1714, 1746, 1747, 1748, 1750, 1752], "_group": 64, "sgn": 64, "_prod": 64, ".compose": [64, 1376, 1379, 1450, 1503, 4614, 5347, 5348, 5349, 5353, 5355, 5366], "_spmatrix": 64, "sparse": [64, 683, 1918, 1922, 1930, 2053, 2111, 2122, 2131, 2206, 2220, 2231, 2323, 2349, 4463, 4485, 4509, 4516, 4535, 4542, 4568, 4584, 4592, 4630, 4637, 4819, 4825], "kron": 64, ".expand": [64, 5353], "mutating": [64, 4225], "_paulis": [64, 1970, 1998, 2155, 5340, 5361], ".insert": 64, "_single": 64, "_label": [64, 253, 276, 424, 447, 583, 606, 1160, 1183, 1388, 1526, 1772, 4389, 4398, 4463, 4655, 4664, 5331, 5333, 5334, 5341, 5342, 5372], "\"i": [64, 4363, 4515, 4516, 4519, 4541, 4542], "* (": [64, 92], "(pauli": [64, 4463, 4487, 4595, 5341, 5353, 5361, 5372], ".random": [64, 683, 761, 849, 877, 3718, 3834, 4513, 4539, 4634, 5337, 5338, 5339, 5340, 5341, 5353, 5364, 5366], "_pauli": [64, 1468, 1935, 1941, 1942, 1944, 2216, 4568], "superseded": [64, 323, 324, 325, 326, 327, 494, 495, 496, 497, 498, 653, 654, 655, 656, 657, 1230, 1231, 1232, 1233, 1234, 2389, 2403, 2417, 2431, 2445, 2459, 4177, 4946, 4952], "minimize": [64, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 798, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 896, 899, 907, 2883, 2884, 5178, 5362], "direct": [64, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 936, 1383, 1384, 1385, 1386, 1499, 1501, 1730, 1731], "spsa": [64, 172, 849, 850, 856, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 5339, 5340], "triggered": [64, 5102], "kept": [64, 5193], "-memory": [64, 235, 406, 565, 798, 841, 1143, 4896, 4917, 5281, 5283], "leveraging": 64, "-checked": 64, "creation": [64, 2867, 3723, 3738, 3739, 3779, 3796, 3802, 3909, 3922, 5252], ".calibrations": 64, "xxplusyygate": [64, 1559], "ms": [64, 232, 268, 403, 439, 562, 598, 1140, 1175, 1382, 1427, 2808, 2848, 5332, 5338, 5355], "sec": [64, 3947, 4255, 4273, 5370], "reproducibility": 64, "wish": [64, 2884, 4006, 4041, 4219], "_limit": [64, 3711, 3718, 4964, 4976, 5214, 5217], "unscheduled": 64, "dagdependency": [64, 1647, 1651, 1652, 1653, 1719, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744], "lossy": [64, 5117, 5178], "matured": 64, "tightly": [64, 5235], "coupled": [64, 2867, 3957, 5117, 5235], "toggles": 64, "paths": [64, 5355], ".optionals": 64, "testers": 64, ".test": [64, 5339, 5352, 5355, 5356, 5357, 5358, 5359, 5365], ".mock": [64, 5339, 5352, 5355, 5356, 5357, 5358, 5359, 5365], "accessible": [64, 2285, 3705, 3737], "commitment": 64, "side": [64, 187, 188, 190, 210, 238, 347, 363, 381, 409, 518, 540, 568, 677, 1119, 1145, 1254, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 3760, 4805, 5137], "estimator": [64, 69, 71, 1985, 1987, 1991, 1996, 1999, 2166, 2167, 2265, 2270, 2271, 4747, 4750, 4769, 4772, 4787], "sampler": [64, 2267, 2273, 2274, 2323, 2349, 4159, 4164, 4169, 4174, 4184, 5361], "renamed": 64, "_indices": [64, 1746, 1748, 1750, 1752, 4518, 4544, 4639, 5226, 5369], "shown": [64, 1393, 1479, 1544, 1547, 1987, 3999, 4012, 4421, 4519, 4614, 5014, 5331, 5333, 5334], "positionally": 64, "((": [64, 251, 252, 347, 357, 422, 423, 518, 581, 582, 677, 849, 877, 1158, 1159, 1254, 1948, 2813, 2867, 4398, 4463, 5341, 5357, 5359, 5361, 5368], "xyz": [64, 4463, 5347, 5348, 5361], ".optimize": [64, 709, 717, 773, 798, 806, 814, 833, 841, 849, 861, 877, 888, 896, 5362], "favor": [64, 3932, 3963, 3976, 4035, 4057, 4058, 4059, 4060], ".minimize": [64, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896], "replaced": [64, 938, 966, 1003, 1016, 1046, 1096, 1273, 1706, 1710, 1901, 1928, 1934, 1936, 1950, 1956, 1986, 1992, 1997, 2000, 2035, 2072, 2135, 2154, 2180, 2235, 3932, 3963, 3976, 4006, 4019, 4218, 4229, 5080, 5355, 5358], "diagonalgate": 64, "modulus": [64, 159], "_sparse": 64, "silently": [64, 235, 406, 565, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1143, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2311, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 5281], "overwriting": [64, 4877], "_checks": [64, 4579], "misalign": 64, "consistent": [64, 1003, 1468, 2156, 3905, 3932, 3963, 3976, 4960, 5023, 5196, 5198, 5222], "fakemontrealv": [64, 3366, 3367, 3368, 3369, 3370, 3371, 3372], "tridiagonaltoeplitz": [64, 186, 362, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681], ".eigs": 64, "_bounds": [64, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 856, 861, 869, 877, 883, 888, 896, 904, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "caused": 64, "incorrect": [64, 240, 252, 315, 316, 317, 318, 319, 320, 347, 411, 423, 486, 487, 488, 489, 490, 491, 518, 570, 582, 645, 646, 647, 648, 649, 650, 677, 920, 939, 1147, 1159, 1222, 1223, 1224, 1225, 1226, 1227, 1254, 1259, 2792, 2793, 2794, 2795, 2796, 2797, 4773, 4787], "bounds": [64, 97, 118, 165, 172, 212, 237, 383, 408, 542, 567, 683, 687, 693, 694, 696, 701, 704, 709, 712, 717, 720, 725, 729, 734, 738, 743, 747, 752, 756, 761, 765, 766, 769, 773, 776, 781, 784, 789, 793, 798, 801, 806, 809, 814, 817, 822, 825, 832, 833, 836, 841, 844, 849, 855, 861, 864, 869, 872, 877, 882, 888, 891, 896, 899, 904, 907, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 2271, 2274, 2311, 4470, 4497, 4528, 4623, 5035, 5342], "ignored": [64, 127, 135, 147, 153, 178, 235, 240, 406, 411, 565, 570, 683, 687, 693, 694, 696, 701, 704, 709, 712, 717, 720, 725, 729, 734, 738, 743, 747, 752, 756, 761, 766, 773, 776, 781, 784, 789, 793, 798, 801, 806, 809, 814, 817, 822, 825, 832, 833, 836, 841, 844, 849, 855, 861, 864, 869, 872, 877, 882, 888, 891, 896, 899, 904, 907, 1143, 1147, 1538, 2010, 2013, 2014, 2017, 3779, 3781, 3782, 3789, 3792, 3793, 3823, 3868, 4040, 4182, 4219, 4432, 4568, 4895, 4916, 4930, 5202, 5278, 5281, 5331], "passmanagerconfig": [64, 4902, 5231, 5232, 5233, 5234], "wasn": 64, "fail": [64, 2323, 2349, 3814, 3862, 3890, 4667], "deserialization": 64, "reconstruct": [64, 781, 1706, 4817, 4819, 4821, 4823, 4825], "mcphasegate": [64, 258, 429, 588, 1165, 1413, 1414], "lost": 64, "reconstructed": [64, 822], ".reverse": 64, "_bits": [64, 235, 267, 406, 438, 565, 597, 923, 943, 956, 970, 986, 1006, 1020, 1036, 1050, 1143, 1174, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4774, 4788, 5281, 5284, 5333, 5334, 5354, 5355], "registerless": [64, 1293, 1313], ", clbit": [64, 251, 252, 347, 422, 423, 518, 581, 582, 677, 1158, 1159, 1254], ".clbits": [64, 5355], "configurablefakebackend": [64, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944], "incorrectly": [64, 1063], "cause": [64, 1063, 3814, 3818, 3862, 3905, 4040], "_keep": [64, 5290, 5349], "smaller": [64, 69, 97, 118, 130, 158, 734, 773, 849, 877, 1101, 1441, 1567, 1641, 2323, 2349, 3730, 4589, 4882, 5007, 5347], "throw": [64, 1063], "11": [64, 214, 385, 544, 970, 975, 1025, 1122, 1282, 1302, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1376, 1390, 1413, 1416, 1456, 1460, 1487, 1492, 1497, 1520, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1567, 1760, 1791, 1820, 1836, 1852, 1868, 2830, 2954, 2963, 3038, 3047, 3122, 3130, 3222, 3231, 3340, 3449, 3458, 3466, 3546, 3571, 3580, 3613, 3761, 3873, 4806, 5339, 5340, 5342, 5347, 5348, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5369, 5372], "share": [64, 3730, 3777, 3782, 3789, 3793, 3796, 3817, 3851, 3864, 4182, 4487, 4519, 4614], "produce": [64, 69, 918, 1666, 1903, 1913, 1948, 1957, 1964, 2024, 2025, 2027, 2032, 2036, 2047, 2055, 2063, 2066, 2068, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2132, 2136, 2145, 2171, 2189, 2202, 2215, 2245, 2259], "-standard": 64, "getter": [64, 1063, 1377, 1471, 5250], "optimizerresult": [64, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 831, 836, 844, 855, 864, 872, 882, 891, 899, 907], ".nit": 64, "jacobian": [64, 861, 896], "evaluations": [64, 120, 147, 165, 172, 701, 709, 717, 725, 734, 743, 752, 761, 765, 781, 789, 798, 806, 814, 830, 833, 841, 849, 850, 861, 869, 877, 878, 888, 896, 2024, 2032], "listed": [64, 255, 256, 426, 427, 585, 586, 1162, 1163, 1444, 1464, 2025, 2032, 2055, 2063, 4182, 4930], "didn": 64, "restrictions": [64, 936, 1644, 3834, 4901, 5230], ".marginal": 64, "experimentresult": [64, 4802], "qobjexperimentheader": [64, 4289, 4290], "experimentheaders": 64, "lack": [64, 147, 165, 172, 1722], "creg": [64, 1657, 1701, 1724, 4751, 5355], "_sizes": [64, 4751, 5272], "-variables": 64, "came": 64, "-variable": [64, 798], "skips": 64, "-none": 64, "vary": 64, "upcoming": [64, 3740, 5117, 5178], "candidate": [64, 682, 5047, 5178], "tagged": 64, "blocked": 64, "prelease": 64, "suffix": [64, 3838], "parsing": [64, 1317, 1462, 4238], "regex": [64, 4229], "pypa": 64, "/packaging": 64, "pep": 64, "versioning": [64, 2285, 3005, 3013, 3382, 4922], "suffixes": 64, "0rc": 64, "tag": [64, 3823, 3868], "threading": 64, ".currentthread": 64, "notifyall": 64, "october": 64, ".current": 64, "_thread": 64, "notify": 64, "bugfix": 64, "addressing": 64, "last": [64, 279, 281, 450, 452, 609, 611, 798, 841, 849, 877, 1186, 1188, 1318, 1447, 1466, 1468, 1537, 1926, 1945, 2001, 2308, 2486, 2500, 2905, 3723, 3739, 3824, 3922, 3935, 3996, 4011, 4229, 4762, 4783, 4798, 4911, 5254, 5303, 5315, 5327, 5331, 5333, 5334, 5342], "patch": 64, "succeed": [64, 100, 3796, 5202], "asked": 64, "-zero": [64, 97, 104, 116, 117, 138, 142, 186, 1393, 2323, 2349, 2848, 2849, 4400, 4568, 4744, 4749, 4771, 5250], "hexadecimal": [64, 4751, 4756, 4773, 4779, 4787, 4793, 4813], "sufficiently": [64, 103, 4568], "declarations": [64, 4241], "antlr": 64, "grammar": 64, "team": 64, "scaled": [64, 105, 107, 145, 1400, 5262], "-resonance": [64, 1499, 2867, 5080, 5082, 5151, 5157], "amplitude": [64, 66, 69, 70, 71, 72, 73, 75, 77, 78, 79, 86, 87, 92, 94, 95, 97, 110, 112, 113, 118, 119, 121, 122, 123, 299, 300, 470, 471, 629, 630, 1206, 1207, 1372, 1388, 1399, 1458, 1526, 1772, 2504, 2517, 2777, 2778, 2845, 2858, 3757, 4157, 4162, 4167, 4172, 4177, 4182, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4803, 5151, 5337, 5342, 5366, 5367, 5368], "parametrized": [64, 4203, 4206], "assignment": [64, 101, 200, 371, 530, 1071, 1081, 1087, 1097, 1109, 2830, 4086, 4224, 4745, 4746, 4748, 4767, 4768, 4770, 4964, 5270, 5274], "numeric": [64, 198, 200, 369, 371, 528, 530, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1071, 1072, 1087, 1088, 1107, 1109, 1879, 2311, 2877, 2878, 3995, 4010, 4241, 4930], "lead": [64, 201, 213, 372, 384, 531, 543, 1110, 1121, 1987], "causing": 64, "sporadically": 64, "drop": 64, "successors": [64, 1663, 1681, 1697, 1705, 1712, 1719, 1722, 1731, 1741, 5006, 5178, 5193], "iteration": [64, 95, 97, 110, 113, 116, 686, 687, 689, 761, 773, 798, 833, 841, 849, 850, 877, 878, 904, 943, 3824, 4487, 4519, 4614, 5120, 5178, 5342], "coefficient": [64, 105, 693, 849, 877, 1448, 1468, 1470, 1953, 2012, 2016, 2025, 2032, 2054, 2055, 2063, 2069, 2084, 2097, 2112, 2119, 2132, 2153, 2155, 2162, 2176, 2177, 2195, 2208, 2220, 2232, 2251, 2252, 4463, 4552, 4570, 4579, 4732], "report": [64, 322, 323, 324, 325, 326, 327, 493, 494, 495, 496, 497, 498, 652, 653, 654, 655, 656, 657, 1229, 1230, 1231, 1232, 1233, 1234, 1644, 3804, 3831, 3836, 3847, 3854, 3861, 5102], "-of": [64, 198, 369, 528, 1107, 1392, 1444, 1480, 1923, 1934], "-bounds": [64, 1444], "primarily": [64, 2068, 2132], "resolving": 64, "ucpaulirotgate": [64, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1847, 1863], "axis": [64, 282, 290, 453, 461, 612, 620, 1189, 1197, 1383, 1389, 1456, 1459, 1481, 1483, 1486, 1491, 1496, 1517, 1524, 1533, 1535, 1539, 1542, 1552, 1560, 1564, 1815, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4546, 5284, 5285, 5290, 5331, 5333, 5334], "place": [64, 197, 265, 368, 436, 527, 595, 1106, 1172, 1701, 2883, 3901, 3905, 5205, 5352], "workaround": 64, "ucrxgate": [64, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846], "ucrygate": [64, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862], "ucrzgate": [64, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878], "(based": 64, "\"x": [64, 4363, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637], "\"y": [64, 4363, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637], "\"z": [64, 4363, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637], "embeds": 64, "angle": [64, 116, 123, 218, 219, 220, 221, 224, 225, 226, 258, 259, 260, 261, 263, 268, 273, 282, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 340, 341, 343, 344, 345, 389, 390, 391, 392, 395, 396, 397, 429, 430, 431, 432, 434, 439, 444, 453, 461, 462, 463, 464, 465, 466, 467, 468, 509, 510, 511, 512, 514, 515, 516, 548, 549, 550, 551, 554, 555, 556, 588, 589, 590, 591, 593, 598, 603, 612, 620, 621, 622, 623, 624, 625, 626, 627, 668, 669, 670, 671, 673, 674, 675, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1165, 1166, 1167, 1168, 1170, 1175, 1180, 1189, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1349, 1351, 1353, 1383, 1384, 1385, 1386, 1406, 1470, 1472, 1483, 1490, 1495, 1500, 1502, 1556, 1558, 1559, 1815, 1831, 1847, 1863, 4121, 4139, 4421, 4546, 4922, 4930, 5151, 5154, 5160, 5244, 5285, 5359], "compared": [64, 97, 251, 252, 422, 423, 581, 582, 773, 849, 904, 934, 954, 968, 983, 997, 1018, 1033, 1036, 1048, 1061, 1158, 1159, 1263, 1275, 1292, 1312, 1330, 1398, 1439, 1515, 1550, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2161, 2232, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 3905, 4716], "corrected": 64, "nor": [64, 66, 86, 877, 936, 1342, 1550, 2021, 2023, 5044], "xxminusyygate": [64, 1557], "cnotdihedral": [64, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4729], "identities": [64, 1943, 5093], "eval": [64, 179, 181, 357, 849, 877, 1906, 1959, 1983, 1989, 1990, 2001, 2024, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2161, 2166, 2167, 2182, 2198, 2211, 2224, 2232, 2238, 2255, 5338, 5339, 5361, 5362], "_observables": 64, "denoted": [64, 1471], "attempting": [64, 798, 1937, 2028, 2029, 2039, 2064, 3814, 3862], "sensitive": [64, 4008], "signs": 64, "resulted": [64, 2160], "waveform": [64, 4008, 4080, 4090, 4099, 4103, 4108, 4117, 4126, 4135, 4144, 4153, 4157, 4158, 4159, 4162, 4163, 4164, 4167, 4168, 4169, 4172, 4173, 4174, 4177, 4178, 4179, 4182, 4183, 4184, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4958, 5220, 5295, 5307, 5319, 5331, 5357], "exceeding": [64, 3922], "-coding": 64, "sleep": 64, "looped": [64, 4894], "callers": 64, "exponential": [64, 118, 180, 186, 1075, 1091, 1922, 1930, 1948, 1949, 4578, 4819, 4821, 4825], "nontermination": 64, "occasionally": 64, "-ordering": [64, 1401, 1472], "invalidly": 64, "wrote": 64, "-order": [64, 683, 849, 877, 1563, 1567, 2010, 2013, 2018, 2818, 4305, 4322, 4341, 4360, 4408, 4431, 4450, 4474, 4558, 4576, 4673, 4692], "-equivalent": 64, "behaviour": [64, 2323, 4241, 5278], "appeared": 64, "reliably": [64, 103], "sabrelayout": [64, 5176, 5177, 5230, 5355], "escape": [64, 789], "guarantee": [64, 1706, 5143], "stuck": [64, 841], "infinite": [64, 861, 3905, 5250], "great": 64, "luck": 64, "space": [64, 147, 806, 850, 878, 1372, 1922, 1930, 2869, 5178, 5231, 5232], "force": [64, 1916, 1966, 2050, 2083, 2095, 2109, 2129, 2150, 2192, 2194, 2205, 2217, 2218, 2229, 2249, 2263, 3754, 3881, 5018, 5353], "detects": 64, "recently": [64, 5178], "updates": [64, 691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 773, 779, 787, 796, 804, 812, 820, 828, 839, 847, 849, 859, 867, 875, 877, 886, 894, 902, 910, 4139, 5021], "_busy": 64, "unsafe": 64, "floating": [64, 861, 2323, 2349, 2363, 2376, 4241], "-point": [64, 1342, 4241], "optimisations": 64, "localised": 64, "aspects": 64, "subnormal": 64, "leaked": 64, "flush": 64, "happen": [64, 4195], "cache": [64, 1926, 1927, 3881, 5099], "blocking": [64, 849, 877, 2323, 3796, 3909, 4094], "recognize": 64, "parallelized": [64, 841], "_noise": [64, 5339, 5365, 5366, 5367, 5368], ".testnoise": 64, "_kraus": [64, 2845, 2855, 2858, 2859, 2885, 5366, 5368], "_on": 64, "_qft": 64, "_cache": 64, "_blocking": 64, "discovered": [64, 5010], "chunks": 64, "truncate": [64, 4463, 4484, 5366], "truncates": 64, "truncated": [64, 896, 4167, 5143, 5331], "=thrust": 64, "slow": [64, 3957], "threads": [64, 4813, 4964], "=cpu": 64, "_threshold": [64, 88, 2323, 2349, 2363, 2376, 2909, 2918, 2927, 2932, 4813], "downstream": 64, ".float": [64, 2271, 4239, 4240], "\u300f>": 64, ".metadata": [64, 2271, 2274, 4297, 4298], "occurs": [64, 693, 3704, 4001, 4014, 4946, 4952, 5023, 5091, 5181], "livedata": 64, "specifically": [64, 752, 1970], "tab": [64, 3704], "-related": [64, 3417, 3704, 3767], "widget": [64, 4239], ".ibmqbackend": [64, 3798], "live": [64, 3730], "_data": [64, 1734, 2323, 2349, 3730, 3781, 3792, 4813, 5289, 5349], "allowed": [64, 280, 281, 328, 451, 452, 499, 610, 611, 658, 725, 734, 743, 752, 789, 806, 833, 841, 849, 877, 1187, 1188, 1235, 1715, 2218, 2798, 2842, 3711, 3838, 3901, 3932, 3976, 3993, 4386, 4421, 4568, 4651, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5278, 5333, 5334], ".ibmruntimeservice": [64, 3899, 3923], "dropped": [64, 1472], "dec": [64, 5353], "cqc": 64, "randomness": 64, "extractor": 64, ".runtimeencoder": [64, 3926], ".runtimedecoder": 64, "ndarrays": 64, "multithreaded": [64, 4813], "portions": 64, "improve": [64, 147, 165, 172, 849, 869, 877, 1706, 1970, 4825], "scaling": [64, 87, 103, 143, 185, 186, 356, 361, 896, 1378, 1673, 1732, 1922, 1930, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4167, 4172, 5282, 5319, 5331], "larger": [64, 97, 103, 130, 142, 143, 693, 2323, 2349, 3932, 3976, 4025, 4026, 4203, 4206, 4258, 4276, 4386, 4433, 4570, 4651, 4928, 4964, 4973, 5007, 5214, 5331, 5333, 5334, 5347, 5352], "robust": [64, 806, 869], "baseestimator": [64, 2266, 2269], "estimating": [64, 103, 136], "adhering": 64, "likewise": [64, 4182], "basesampler": [64, 2268, 2272], "-probability": [64, 2323, 2349, 4744, 4749, 4771], "distributions": [64, 904, 2323, 2349, 2936, 3762, 4721, 4722, 4773, 4796], "creating": [64, 240, 252, 411, 423, 570, 582, 1083, 1147, 1159, 1379, 1417, 1981, 1982, 2170, 2201, 2204, 2214, 2218, 2226, 2230, 2244, 2248, 2250, 2258, 2261, 2264, 2265, 2269, 4182, 5023, 5278], "normally": [64, 683, 761, 849, 877, 1644, 4842, 4930], "cmap": [64, 5289], "=cmap": 64, "(out": 64, "permuted": [64, 1910, 1961, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256], "_copy": 64, "supersedes": 64, "linearfunction": [64, 1402, 1403, 1404, 1405, 5000], "encodes": [64, 1987], "swapgate": [64, 329, 500, 659, 1236, 1531, 1532, 4299, 4354, 5000, 5355], "collectlinearfunctions": [64, 5001, 5002], "collects": [64, 3834], "consecutive": [64, 4220, 5018, 5140], "linearfunctionssynthesis": [64, 5112, 5113], "synthesizes": [64, 1404, 5237], "patel": [64, 1401, 5111], "-markov": 64, "-hayes": 64, "-synthesize": 64, "linearfunctionstopermutations": [64, 5115, 5116], "permutation": [64, 1402, 1403, 1903, 1910, 1957, 1961, 2027, 2036, 2043, 2073, 2076, 2087, 2091, 2100, 2104, 2115, 2124, 2136, 2142, 2181, 2185, 2199, 2212, 2236, 2240, 2256], "whenever": [64, 2311], "flowcontroller": [64, 4834, 4835, 4836, 4861, 4862, 4863, 4869, 4870, 4871, 4872, 4895, 4916], "conditionalcontroller": [64, 4835, 4836, 4837, 4838], "gatesinbasis": [64, 5097, 5098], "fixedpoint": [64, 5087, 5088, 5355], "sel": 64, "pm": [64, 5014, 5077, 5143, 5283, 5355], "_control": [64, 1551], "(property": 64, "_fixed": [64, 5062], "_point": [64, 147, 165, 172, 683, 687, 693, 701, 709, 717, 725, 734, 743, 752, 761, 765, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 850, 851, 856, 861, 869, 877, 878, 879, 883, 888, 896, 904, 1373, 5062, 5086, 5236, 5237, 5337, 5340], "_condition": 64, "_check": [64, 1706, 5086], ", fixedpoint": 64, "(sel": 64, "_unroll": 64, "(unroll": 64, "=unroll": 64, "(depth": 64, "_while": [64, 4834, 4861, 4868], "=opt": [64, 5337], "met": [64, 693, 1711, 4182, 4894], "zfeaturemap": [64, 1450], "zzfeaturemap": [64, 1450], "_prefix": [64, 1376, 1377, 1379, 1441, 1450, 1456, 1503, 1537, 1563, 1567], "(feature": 64, "_dimension": [64, 1450, 1563, 1567, 2323, 2349], "\"my": [64, 5356], "templateoptimization": [64, 5194, 5195], "contributions": 64, ".calibration": 64, "rzx": [64, 296, 467, 626, 1203, 1374, 1499, 1500, 1587, 1588, 1589, 1590, 1591, 1592, 5093, 5332], "_templates": 64, "fakecasablanca": [64, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146], "\u03c6'": 64, ".p": [64, 2001, 4473, 4500, 5345, 5350, 5372], "(*": [64, 822, 1644, 4900, 4921, 5331, 5333, 5334, 5355], ".rzx": 64, "_cz": 64, "(pass": [64, 5283, 5355], "_)": [64, 5283, 5355], ".bind": [64, 849, 877, 1067, 5352, 5361], "_qct": 64, "(cal": 64, ", backend": [64, 5331], "\u2524 p": [64, 1412, 1459, 5350], "*\u03c6": [64, 1567], "\u00bb\nq": [64, 5355], "\u2500\u00bb": [64, 5361], "\u2502\u250c": [64, 1342, 1388, 1441, 1550, 5361], "\u2510\u00bb": [64, 1388, 5361], "\u251c\u00bb": [64, 5361], "\u2518\u00bb": [64, 1388, 5361], "\u00abq": [64, 5355, 5361], "\u2510\n\u00ab": [64, 1388, 5355, 5361], "_repr": [64, 4380, 4644, 5341], ".simplify": [64, 4570], "greatly": [64, 2323, 4182], "replacing": [64, 1706, 1717, 1934, 1948, 1949, 1950, 1969, 1970, 1971, 1983, 1990, 4915, 5077, 5143, 5278], ".unique": 64, "-sort": 64, "equiv": [64, 4430, 4472, 4499, 4575, 4645, 4739, 5350], "unlike": [64, 147, 276, 447, 606, 877, 1183, 1342, 3718, 4812, 5217], "compares": [64, 1398], "-wise": [64, 1448, 4025, 4026, 4504], "(\"x": 64, "op2": 64, "op3": 64, "(\"y": 64, ".equiv": 64, "(op2": 64, "(op3": 64, "fakerueschlikon": [64, 3547, 3548, 3549, 3550, 3551, 3552, 3553], "faketenerife": [64, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 5355], "faketokyo": [64, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 5355], "improving": [64, 709, 1974, 1976, 1978, 1979, 4241], "-yy": [64, 1556], "interaction": [64, 1382, 1427, 1489, 1494, 1499, 1501, 1556, 1558, 1586, 4712, 5214, 5217], "bswap": 64, "powers": [64, 97, 101, 113, 118, 123, 275, 446, 605, 1396], "arises": 64, "fermionic": [64, 1945], "+yy": [64, 1379, 1558, 1559, 1586], "xy": [64, 1383, 1558, 4513, 4539, 4540, 4634, 4635, 5361], "fakebogota": [64, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063], "fakemanila": [64, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331], "fakerome": [64, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537], "fakesantiago": [64, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562], "pulsedefaults": [64, 2323, 2328, 2337, 2340, 2349, 2354, 2363, 2368, 2376, 2381, 3721, 3974, 3975, 5359], "deciding": [64, 5178], "consolidate": [64, 1706, 5018], "modelled": 64, "_serializer": [64, 4297], "jsonencoder": [64, 3781, 3782, 3792, 3793, 3905, 3906, 3907, 3908, 3926, 4297], "dual": 64, "_deserializer": [64, 4298], "jsondecoder": [64, 3778, 3779, 3788, 3789, 3901, 4298], "deserialize": [64, 4298], "stdlib": [64, 277, 448, 607, 1184, 2812, 4298], "encoder": [64, 1898, 3781, 3782, 3792, 3793, 3905, 3926, 4254, 4272, 4287], "decoder": [64, 3778, 3779, 3788, 3789, 3899, 3901, 3916, 3918], "paired": [64, 4930, 5217], "decode": [64, 3758, 3778, 3779, 3788, 3789, 3885, 3899, 3900, 3902, 3903, 3904, 3909, 3916, 3918], "encodings": 64, "io": [64, 3832, 4829, 5183], "customobject": 64, "\"\"\"": 64, "container": [64, 4267, 4814], ".\"": [64, 4192, 5344, 5355, 5359], ".string": [64, 4229, 4239, 4240], "eq": 64, "customserializer": 64, "(json": [64, 4254, 4272, 4287], ".jsonencoder": [64, 3781, 3782, 3792, 3793, 4254, 4272, 4287], "isinstance": [64, 4254, 4272, 4287, 5341], "(o": [64, 1983, 1990, 3906, 5361], ".default": [64, 4254, 4272, 4287, 5333, 5334], "customdeserializer": 64, ".jsondecoder": [64, 3778, 3779, 3788, 3789], "args": [64, 233, 235, 321, 404, 406, 492, 563, 565, 651, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 1296, 1950, 2265, 2267, 2269, 2272, 2498, 3901, 4073, 4229, 4831, 4941, 4946, 4952, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5018, 5024, 5027, 5030, 5033, 5062, 5065, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5163, 5166, 5169, 5172, 5175, 5178, 5184, 5187, 5190, 5193, 5199, 5205, 5208, 5211, 5214, 5217, 5223, 5341, 5355], "_hook": [64, 3901], ".object": 64, "obj": [64, 346, 517, 676, 765, 1253, 3903, 3906, 4254, 4272, 4287, 4362, 4463, 4577, 4578, 4579, 5341], "= \"": 64, "=theta": 64, "{\"": [64, 3907], ".bytesio": 64, "_buf": 64, "=customserializer": 64, ".seek": 64, "(qpy": 64, "=customdeserializer": 64, "denselayout": [64, 5072, 5073, 5230, 5355], "_prop": [64, 4964, 5033, 5071, 5123], "lookup": [64, 2195, 4930], "dynamicaldecouplingpadding": 64, "dynamicaldecoupling": [64, 5078, 5079], "basepadding": [64, 5140, 5143], "_alignment": [64, 1644, 4031, 4922, 5021, 5102, 5143], "spacing": [64, 4025, 5077, 5143, 5332], "comprising": [64, 1648, 1649, 5143], "satisfy": [64, 814, 2861, 4490, 4493, 4521, 4524, 4616, 4619, 5023, 5143, 5220], "backendconfiguration": [64, 2277, 2278, 2285, 2323, 2327, 2337, 2339, 2349, 2353, 2363, 2367, 2376, 2380, 2909, 2910, 2918, 2919, 2927, 2928, 2937, 2946, 2954, 2955, 2971, 2972, 2988, 2989, 3021, 3022, 3038, 3039, 3055, 3056, 3072, 3073, 3089, 3090, 3105, 3106, 3122, 3123, 3138, 3139, 3155, 3156, 3171, 3172, 3188, 3189, 3205, 3206, 3222, 3223, 3239, 3240, 3256, 3257, 3273, 3274, 3290, 3291, 3306, 3307, 3323, 3324, 3341, 3356, 3357, 3373, 3374, 3398, 3399, 3415, 3416, 3424, 3425, 3433, 3434, 3449, 3450, 3467, 3488, 3489, 3496, 3497, 3513, 3514, 3529, 3530, 3547, 3554, 3555, 3571, 3572, 3588, 3589, 3606, 3614, 3621, 3622, 3638, 3639, 3655, 3656, 3671, 3672, 3688, 3689, 3891, 3892, 3933, 3934, 5357], ".timing": 64, "_constraints": [64, 1644, 4901, 4958, 5143, 5230], "_slack": [64, 5143], "distribute": 64, "slack": [64, 5077, 5143], "shorter": [64, 1943, 4203, 4206, 4221, 5143, 5202], "fill": [64, 5140, 5143], "middle": [64, 1640, 4182, 5143, 5350], "_edges": [64, 1674], "evenly": [64, 4025, 5143], "divide": [64, 5143], "cancellation": [64, 5011, 5233, 5234], "2symmetries": [64, 2153], "exposes": 64, "threshold": [64, 74, 88, 179, 761, 773, 1472, 2155, 2323, 2349, 2363, 2376, 2813, 2830], "tolerances": 64, "chop": [64, 2932, 4570, 5341], "coefficients": [64, 103, 144, 165, 1448, 1468, 1470, 1475, 1476, 1901, 1905, 1906, 1948, 1956, 1958, 1959, 2002, 2004, 2006, 2025, 2028, 2032, 2035, 2038, 2039, 2055, 2063, 2064, 2072, 2074, 2075, 2088, 2089, 2101, 2102, 2112, 2116, 2117, 2126, 2135, 2137, 2138, 2153, 2154, 2180, 2182, 2198, 2211, 2223, 2224, 2235, 2237, 2238, 2255, 2323, 2349, 4299, 4568, 4570, 4577, 4578, 4579, 4582, 4588, 4591, 5362], "tapered": [64, 1946, 2156], "symmetries": [64, 1946, 2153, 2155, 2159, 2160], "z2symmetries": 64, "iizi": 64, ", pauli": [64, 5341], "iziz": [64, 4463], "ziii": 64, "sq": [64, 2155], "iixi": 64, "iiix": 64, "xiii": 64, "tapering": [64, 2153, 2155, 2156, 2160], "tol": [64, 683, 693, 709, 717, 773, 806, 833, 861, 896, 2155, 4570, 5244], "chopped": [64, 4570], "tolerance": [64, 186, 193, 255, 256, 364, 426, 427, 523, 585, 586, 683, 693, 709, 806, 833, 861, 896, 1162, 1163, 2126, 2155, 2824, 2825, 2830, 2837, 2838, 4187, 4400, 4430, 4570, 4578, 4582, 4588, 4645, 5245], "removes": [64, 285, 456, 615, 1192, 2323, 2349, 4838, 4865, 4872, 4898, 4919, 5169], "absolute": [64, 103, 104, 143, 144, 181, 184, 185, 361, 567, 806, 2126, 2824, 2830, 2837, 3993, 4182, 4264, 4400, 4430, 4570, 4578, 4582, 4588, 4645, 5023, 5245], ">>": [64, 1141, 1228, 1376, 1377, 1379, 1388, 1410, 1441, 1450, 1456, 1468, 1471, 1503, 1537, 1563, 1567, 2058, 3907, 3966, 4503, 4580, 5262], ", coeffs": [64, 4580], "'y": [64, 1376, 1381, 1406, 1466, 1468, 1470, 4229, 4463, 4518, 4525, 4529, 4544, 5332, 5333, 5334, 5341, 5354], "0j": [64, 3757, 4398, 4664, 4803, 5350, 5361, 5362, 5364], ".chop": 64, "accumulate": 64, "coefficents": 64, "determining": 64, "outside": [64, 92, 251, 252, 422, 423, 581, 582, 1072, 1088, 1096, 1158, 1159, 2285, 2311, 3005, 3013, 3382, 4030, 4842, 5014, 5181, 5268, 5272], "partial": [64, 186, 2021, 3814, 3849, 3862, 4335, 4667, 4714, 4715, 4720, 4724, 4726, 4834, 4836, 4861, 4863, 4868, 4870, 5362], "ppc": [64, 4182], "le": [64, 186, 2847, 2861, 2885, 4162, 4167, 4172, 4182, 5366, 5368], "platforms": [64, 4182], "publishing": 64, "-compiled": [64, 4182], "binaries": 64, "/c": 64, "prevent": [64, 103, 849, 877, 3905], "wheels": 64, "qfi": [64, 2001, 2004, 2005, 2007, 2008, 2018, 2022, 2023], "gradients": [64, 683, 693, 773, 849, 877, 2002, 2004, 2010, 2013, 2014, 2017, 5340, 5362], "-y": [64, 282, 453, 612, 1189, 1367, 1399, 1560, 1561, 4193, 4197, 4614, 4620, 4624, 4626, 4636, 4637], "aux": [64, 82, 83, 84, 88, 90, 126, 127, 128, 130, 131, 132, 133, 134, 135, 148, 153, 164, 166, 171, 173, 178, 1392, 5337, 5340], "_op": [64, 181, 904, 1388, 1925, 1932, 1940, 1941, 1942, 1943, 1944, 1973, 1985, 1988, 1991, 1996, 1999, 2024, 4866, 5147, 5150, 5152, 5156, 5158, 5162, 5341, 5342, 5361, 5367], "5re": 64, "\u27e8\u03c8": [64, 2001], "(\u03c9": [64, 2001], ")|)": 64, "(\u03b8": [64, 1348, 1350, 1360, 1362, 1376, 1377, 1379, 1383, 1384, 1385, 1441, 1450, 1456, 1471, 1481, 1482, 1486, 1489, 1491, 1494, 1499, 1501, 1503, 1537, 1544, 1547, 1563, 1567, 2001, 5337, 5340, 5352, 5361], ")|d": 64, "\u03c9\u03c8": 64, ")\u3009": [64, 2001], "5im": 64, "qfis": 64, "4re": 64, "\u03c9\u27e8": 64, "<\u03c8": 64, ")(d": 64, "\u03c9|": 64, "\u03c8(": [64, 2001, 2022], "\u03c9)": 64, "\u3009)": 64, "4im": 64, "circuitstatefn": [64, 1905, 1926, 1929, 1958, 2001, 2019, 2022, 2024, 2038, 2049, 2074, 2088, 2101, 2116, 2137, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2203, 2223, 2227, 2237, 5362], "_gradients": 64, "lincomb": 64, "[a": [64, 343, 344, 514, 515, 673, 674, 1250, 1251, 1399, 1468, 1947, 2885, 4198, 4402, 4667, 5362, 5367], ".rz": [64, 1645, 1646, 1649, 1650, 5282, 5350, 5352, 5355, 5362], "(params": [64, 198, 369, 528, 1107, 2001, 5362], ".rx": [64, 1067, 5350, 5362, 5364], "(primitive": [64, 2001, 5362], "=qc": [64, 2001, 5362], "coeff": [64, 1953, 2001, 2025, 2032, 2054, 2055, 2063, 2069, 2084, 2097, 2112, 2119, 2132, 2153, 2162, 2176, 2177, 2195, 2208, 2220, 2232, 2251, 2252, 4552, 4562, 4583, 4591, 5361, 5362], "_grad": [64, 798, 2001, 5362], "(aux": 64, "=aux": 64, "=op": [64, 2001, 5362], "(inst": [64, 2798], "iqx": [64, 235, 406, 565, 1143, 5281, 5332], "_dark": 64, "dark": 64, "composer": 64, "-dark": [64, 5332], "lazy": [64, 2024, 2122, 4008, 4508, 4509, 4534, 4535, 4583, 4584, 4629, 4630], "checkers": 64, "ask": [64, 1948, 1983], "detected": 64, "asking": 64, "queried": [64, 68, 98, 1551, 4875, 5204], "affecting": [64, 5120], ".results": [64, 3834], ".memory": 64, "(marginal": 64, "internals": [64, 1644, 3005, 3013, 4900, 4921, 5268, 5272], "stochasticswap": [64, 5191, 5192, 5230, 5355], "reimplemented": 64, "increases": [64, 69, 849, 877, 904, 5023, 5178], "cpus": [64, 4813], "env": [64, 4239, 4240], "threaded": 64, "variant": [64, 92, 683, 734, 743, 1407, 2323, 2349, 4930], "avoid": [64, 841, 1926, 1937, 4224, 4830], "oversubscribing": 64, "mocked": 64, "_cairo": [64, 3105, 3114], "_hanoi": [64, 3188, 3197], "_kolkata": [64, 3239, 3248], "_nairobi": [64, 3398, 3407], "_washington": [64, 3671, 3680], "statepreparation": [64, 1527, 1528, 1529], "/ \\": [64, 253, 276, 424, 447, 583, 606, 1160, 1183], ".prepare": 64, ".sqrt": [64, 253, 276, 424, 447, 583, 606, 1160, 1183, 2813, 2914, 2923, 4193, 4664, 5342, 5350, 5355, 5361, 5368], "1qgates": [64, 5355], "1gate": [64, 225, 263, 339, 396, 434, 510, 555, 593, 669, 1133, 1170, 1246, 1352, 1496, 4057], "unbound": [64, 1067, 1083, 1377, 1441, 1443, 1450, 1456, 1471, 1537, 1563, 1567, 3985, 5250], "unroller": [64, 1644, 3708, 5212, 5213, 5230, 5283, 5355], "alpha": [64, 70, 110, 113, 119, 850, 878, 904, 1399, 1450, 1563, 1567, 1945, 1987, 2162, 2867, 4712, 5291, 5350], "\u03b1'": 64, "nqc": 64, "frame": [64, 2337, 3999, 4012, 4039, 4139, 4264, 4473, 4500, 5295, 5307, 5319, 5331, 5333, 5334], "heisenberg": [64, 4473, 4500], "= c": 64, "^\\": [64, 852, 2867, 4317, 4336, 4402, 4403, 4424, 4445, 4473, 4500, 4667, 4668, 4687, 4714, 4726, 5332, 5345, 5350, 5354, 5364, 5372], "dagger": [64, 97, 852, 1347, 1359, 1361, 1363, 1388, 1414, 1461, 1482, 1488, 1493, 1498, 1522, 1541, 1543, 1546, 1549, 1562, 2867, 2887, 4317, 4319, 4336, 4338, 4402, 4403, 4405, 4424, 4445, 4447, 4473, 4500, 4667, 4668, 4670, 4687, 4689, 4714, 4726, 5332, 5333, 5334, 5342, 5354, 5364], "schr": [64, 4473, 4500], "\u00f6dinger": [64, 4473, 4500], "latter": [64, 136], "greedy": [64, 1682, 4716], "_clifford": [64, 5364], "abstractions": 64, "abstracts": 64, "away": [64, 4130, 5117], "concentrate": 64, "standardized": 64, "performed": [64, 103, 147, 165, 172, 211, 326, 327, 342, 343, 344, 345, 382, 497, 498, 513, 514, 515, 516, 541, 656, 657, 672, 673, 674, 675, 709, 798, 841, 861, 888, 896, 904, 1120, 1233, 1234, 1249, 1250, 1251, 1252, 1392, 1480, 1644, 1667, 2337, 2445, 2459, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4008, 4025, 4026, 4203, 4206, 4463, 5117, 5232, 5233, 5234, 5250], "consumed": [64, 3814, 3862], "primitive": [64, 1911, 1953, 1962, 2024, 2045, 2069, 2077, 2084, 2092, 2097, 2104, 2105, 2112, 2119, 2124, 2125, 2126, 2132, 2143, 2153, 2162, 2166, 2167, 2168, 2176, 2177, 2186, 2193, 2195, 2199, 2200, 2208, 2212, 2213, 2220, 2225, 2232, 2240, 2242, 2251, 2252, 2256, 2257, 4255], "(see": 64, "offer": [64, 3704, 3708, 3730], "protocol": 64, "today": 64, "qubitproperties": [64, 2290, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 4922], "authors": 64, "overriding": 64, "fine": [64, 147], "specialized": [64, 2162, 4589], "maintain": [64, 4219, 5003], ".eval": [64, 1898, 2024, 5361], "originates": 64, "_eval": [64, 69, 761], "_aux": 64, ".vqe": [64, 5338], "dijkstra": [64, 4973], "improves": [64, 683], "unreachable": 64, ".expectation": [64, 4595], "densitymatrix": [64, 315, 486, 645, 1222, 1388, 2699, 2792, 4316, 4335, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4424, 4444, 4667, 4686, 4715, 4718, 4719, 4723, 4724, 4727, 4730, 4740, 5284, 5291, 5292, 5293, 5294, 5364], ">=": [64, 970, 973, 1023, 1280, 1299, 1380, 1468, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 5341], "spawn": [64, 4830], "thread": [64, 3851, 3864, 4813], "pool": [64, 3851, 3864, 4813], "\"xiiiiiiiiiiiiiiix": 64, "\"xx": 64, "xz": [64, 4513, 4539, 4634, 4635, 5353, 5361, 5364], ", num": [64, 4579], "iziix": 64, "yiiyi": 64, "facilitates": 64, "hamiltonians": [64, 163, 165, 1945, 4819, 4825], "supersede": [64, 4930, 5202, 5214, 5217], "plugin": [64, 1644, 5202, 5226, 5228, 5229, 5230, 5237], "_target": [64, 110, 113, 259, 260, 261, 342, 343, 344, 345, 430, 431, 432, 513, 514, 515, 516, 589, 590, 591, 672, 673, 674, 675, 1166, 1167, 1168, 1249, 1250, 1251, 1252, 1407, 1410, 5226, 5237], "analysispass": [64, 2798, 2842, 4832, 4833, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5355], "item": [64, 99, 3905, 4249, 4251, 4487, 4518, 4544, 4639, 4893], "opnode": 64, "separate": [64, 1081, 1097, 2024, 4030, 4103, 5089, 5341], "transformationpass": [64, 2798, 2842, 4831, 4942, 4943, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5355], "subsequently": [64, 3730, 3823, 3838, 3868, 4946, 4952], "recreated": 64, "occured": 64, "who": [64, 3782, 3793, 5146], "involve": [64, 3723, 3738, 3739], "reflected": [64, 1388], "timeunitconversion": [64, 5197, 5198], "alapschedule": [64, 4947, 4948, 4951, 4958, 5077], "validatepulsegates": [64, 5221, 5222], "alignmeasures": [64, 4959, 4960], "(granularity": 64, "=timing": 64, ".granularity": 64, ".min": 64, "(alignment": 64, "(scheduling": 64, "(acquire": 64, "considers": [64, 4976, 5178, 5214], "definied": 64, "previosuly": 64, "asapscheduleanalysis": [64, 4952, 4956, 4957, 5021], "superscede": 64, "asapschedule": [64, 4953, 4954, 4957, 4958], "reworked": 64, "schedling": 64, "relying": 64, "aligns": 64, "-case": [64, 97, 1388, 1396], "reproduce": [64, 683, 761, 849, 877], "\u2524m": [64, 5350, 5352], "setiolatency": [64, 5182, 5183], "(clbit": [64, 233, 321, 404, 492, 563, 651, 1141, 1228], "(durations": [64, 5077, 5143], "(pm": [64, 5283], "seems": [64, 904], "opposite": [64, 288, 459, 618, 1195, 4519, 4530, 4540, 4614, 4625, 4635], "timeslot": 64, "captured": 64, "assumes": [64, 1063, 4219, 4922, 4961, 5018, 5041, 5054, 5102, 5237], "paticular": 64, "locked": 64, "throughout": [64, 3932, 3963, 3976], "simultaneous": [64, 849, 877], "prohibited": 64, "top": [64, 101, 334, 505, 664, 1003, 1241, 1397, 1441, 1715, 4006, 4204, 4207, 4210, 4213, 4216, 4229, 5331, 5332, 5333, 5334, 5342], "_coordinates": [64, 5286, 5287, 5288, 5289], "2d": [64, 763, 769, 1393, 3932, 3976, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4196, 4201, 4502, 4847, 4848, 5286, 5288, 5289, 5331, 5333, 5334, 5361], "coordinates": [64, 5286, 5287, 5288, 5289], "plotting": [64, 5349], "visualized": 64, "spring": 64, "worked": 64, "/o": [64, 121, 5023], "subsequent": [64, 252, 423, 582, 1159, 3814, 3862, 5017, 5033, 5196, 5263], "presice": 64, "fills": 64, "priority": [64, 3830, 3901, 4229, 4896, 4917, 4930, 5283], "_optimizer": [64, 4712], "(fun": 64, "jac": [64, 172, 687, 696, 704, 709, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 798, 801, 809, 817, 825, 830, 836, 844, 855, 864, 872, 882, 891, 899, 907], "fun": [64, 172, 687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 830, 836, 844, 855, 864, 872, 882, 891, 899, 907], "x0": 64, ".ndarray": [64, 856, 883, 984, 998, 1034, 1294, 1314, 1769, 1786, 1800, 1829, 1845, 1861, 1877, 1895, 2218, 2271, 3761, 4254, 4272, 4287, 4376, 4422, 4423, 4487, 4499, 4502, 4518, 4544, 4568, 4639, 4746, 4748, 4768, 4770, 4806, 5227, 5238, 5341, 5361], ".fun": 64, "scipy": [64, 130, 165, 172, 709, 717, 798, 806, 814, 833, 841, 861, 888, 896, 1918, 2053, 2111, 2131, 2220, 2231, 2337, 5362], "minimizer": [64, 118, 123, 147, 165, 172], "functools": 64, "(minimize": 64, "-b": [64, 798, 2884, 4707], "assemble": [64, 916, 917, 925, 945, 958, 972, 988, 1008, 1022, 1038, 1052, 1265, 1279, 1298, 1321, 1430, 1506, 1641, 1756, 1774, 1788, 1804, 1817, 1833, 1849, 1865, 1882, 2337, 2391, 2405, 2419, 2433, 2447, 2461, 2506, 2519, 2532, 2545, 2558, 2571, 2584, 2597, 2610, 2623, 2636, 2649, 2662, 2675, 2688, 2701, 2714, 2727, 2740, 2753, 2766, 3718, 5251, 5352, 5372], "subprocess": 64, "launched": 64, "dispatch": 64, "hang": 64, "launch": [64, 4813], "subprocesses": 64, "bugs": 64, "/issue": 64, "encounter": [64, 2024], "\"spawn": 64, "\"forkserver": 64, "ancillaqubit": [64, 193, 239, 364, 410, 523, 569, 1102, 1146, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "unlikely": 64, "requirement": [64, 701, 2161, 2232], "bumped": 64, "reliability": [64, 5123], "resolved": [64, 197, 278, 368, 449, 527, 608, 956, 1063, 1065, 1106, 1185], "revert": 64, "track": [64, 240, 252, 347, 411, 423, 518, 570, 582, 677, 1147, 1159, 1254, 2024], "msgate": [64, 268, 439, 598, 1175], "gms": [64, 1427], "_ancilla": [64, 1381, 1398, 1406, 1407, 1410, 1415, 1419, 1421, 1424, 1466, 1468, 1470, 1551], ".piecewiselinearpaulirotations": 64, ".weightedadder": 64, "piecewiselinearpaulirotations": [64, 1467], "_ancillas": [64, 193, 255, 256, 364, 426, 427, 523, 585, 586, 1102, 1162, 1163, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1424, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "weightedadder": 64, "reverse": [64, 235, 288, 289, 406, 459, 460, 565, 618, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1143, 1195, 1196, 1274, 1290, 1309, 1329, 1438, 1514, 1707, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 1939, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 2818, 2831, 4305, 4322, 4341, 4360, 4393, 4408, 4431, 4439, 4450, 4474, 4558, 4576, 4659, 4673, 4692, 5175, 5281, 5284, 5354], "polynomialpaulirotations": 64, "3sxgate": 64, "3xgate": [64, 283, 454, 613, 1190], "fractional": [64, 4008, 4026, 4206], "overloading": [64, 1538], "_parameter": [64, 198, 240, 369, 411, 528, 570, 761, 1006, 1107, 1147, 5331], "-pass": 64, "downgraded": 64, "optionals": 64, "amplitudeestimator": [64, 69, 78, 92, 110, 118], "inherits": [64, 147, 3957], "abc": [64, 67, 77, 81, 108, 125, 154, 189, 193, 352, 822, 956, 1381, 1898, 1930, 1949, 2265, 2267, 2277, 2285, 2297, 2314, 3773, 3891, 4742, 4817, 5226, 5239, 5241, 5246], "intent": [64, 4922], "transpilererror": [64, 1644, 2798, 2800, 2844, 4836, 4863, 4870, 4874, 4875, 4877, 4895, 4898, 4899, 4916, 4919, 4920, 4945, 4948, 4951, 4954, 4957, 4960, 4963, 4964, 4966, 4972, 4975, 4984, 5013, 5016, 5023, 5073, 5079, 5082, 5085, 5091, 5095, 5096, 5105, 5119, 5123, 5132, 5142, 5143, 5145, 5177, 5180, 5192, 5195, 5198, 5199, 5201, 5204, 5220, 5222, 5231, 5232, 5233, 5234, 5355], "importerror": [64, 235, 406, 565, 1143, 1441, 4896, 4917, 5033], "vm": 64, "meaningful": 64, "glibc": 64, "marginalized": [64, 4811, 4812, 4813], "restored": 64, "rewrite": [64, 5080, 5082], "ran": [64, 2888, 3757, 3782, 4803], "\"paulievolution": 64, ".label": [64, 4239, 4240, 5331, 5333, 5334], "drawn": [64, 1002, 1551, 4844, 5283], "_optimal": 64, "_cost": [64, 5193], "_vector": [64, 5341, 5350], ".optimal": [64, 97, 5340, 5342, 5362], ".hamiltonianphaseestimationresult": 64, ".most": 64, "_likely": [64, 105, 140, 5341], ".phaseestimationresult": [64, 138, 139], ".variationalalgorithm": 64, "variationalalgorithm": [64, 165, 172], ".initial": [64, 5355], "setter": [64, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1471, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768], "parametrizedschedule": 64, "parametrize": [64, 3993, 4008], ".probability": 64, "_distributions": 64, "apr": [64, 5337, 5338, 5340, 5341, 5343, 5344, 5356, 5357, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "uniformdistribution": 64, "normaldistribution": 64, "lognormaldistribution": 64, "-finance": 64, "_finance": 64, "_mumbai": [64, 3373, 3390], "_v": [64, 2963, 2980, 2997, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3298, 3315, 3332, 3348, 3365, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 5341], "fakemumbaifractionalcx": [64, 3383, 3384, 3385, 3386, 3387, 3388, 3389], "differentiate": [64, 2002, 2004, 2006, 4923], "mumbai": [64, 3382], ".fakemumbaiv": 64, "resolver": 64, "consequently": 64, "specifiers": [64, 197, 368, 527, 1106], "reliable": 64, ".array": [64, 316, 364, 487, 646, 984, 998, 1034, 1223, 1294, 1314, 1375, 1485, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 2712, 2793, 2813, 2914, 2923, 2932, 4389, 4395, 4487, 4518, 4544, 4604, 4609, 4639, 4640, 4655, 4661, 5270, 5274, 5341, 5362, 5366, 5368], "pathological": 64, "(e": [64, 5356, 5364], "erroneously": 64, "succeeded": [64, 3870, 5369], "noticeable": 64, "-up": 64, "semi": 64, "-public": 64, "duplicates": [64, 936, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 4588], "skipping": [64, 1376, 1379, 1503], "resolves": [64, 1063, 1753], "broadcasts": 64, "correctness": [64, 2311], "triviallayout": [64, 4961, 5200, 5201, 5230, 5355], "explictly": 64, "request": [64, 913, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794, 3818, 3877, 3878, 3879, 3883, 3887, 4273], "transpiling": [64, 2891, 2892, 4873], "attempted": 64, "qasmqobjconfig": [64, 4274, 4275], "pulseqobjconfig": [64, 4252, 4256, 4257], "omit": [64, 235, 240, 347, 406, 411, 518, 565, 570, 677, 1143, 1147, 1254, 5281], "odd": [64, 157, 158, 4847, 4848], "suzukitrotter": [64, 4823, 4826], "formulae": 64, "suzuki": [64, 118, 1970, 1977, 1978, 1982, 4819, 4825, 5361], "symmetric": [64, 357, 523, 709, 773, 849, 877, 1345, 1357, 1369, 1382, 1387, 1393, 1396, 1412, 1489, 1494, 1501, 1530, 1586, 1644, 1947, 4839], "qregs": [64, 193, 364, 523, 1296, 1376, 1377, 1379, 1381, 1398, 1406, 1441, 1450, 1456, 1465, 1466, 1468, 1470, 1471, 1472, 1503, 1537, 1551, 1563, 1567, 4885, 4886, 5092], "cregs": [64, 1063, 1701, 4811, 4812], "matplotlibdrawer": 64, "textdrawing": [64, 235, 406, 565, 1143, 5281], "qcircuitimage": 64, "body": [64, 201, 213, 240, 251, 252, 347, 372, 384, 411, 422, 423, 518, 531, 543, 570, 581, 582, 677, 943, 1006, 1110, 1121, 1147, 1158, 1159, 1254, 1263], "-flow": 64, "builder": [64, 201, 213, 372, 384, 531, 543, 1110, 1121, 4008, 4021, 4022, 4023, 4024, 4030, 4031, 4032, 4034, 4035, 4037, 4038, 4041, 4042, 4043, 4044, 4048, 4057, 4058, 4059, 4060, 5151, 5157], "successfully": [64, 2295, 2301, 2477, 2491, 2898, 3796, 3803], "qreg": [64, 1658, 1726, 4229, 5355], "(qreg": [64, 5355], ".if": 64, "_test": [64, 201, 213, 251, 372, 384, 422, 531, 543, 581, 1110, 1121, 1158], "_else": [64, 201, 213, 252, 372, 384, 423, 531, 543, 582, 1036, 1110, 1121, 1159], "_,": 64, "_body": [64, 251, 252, 422, 423, 581, 582, 1036, 1158, 1159], ".params": [64, 1001, 1003, 1005, 1778], "missing": [64, 2290, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 3888, 4712], "cphasegate": [64, 218, 389, 548, 1126, 1346, 1347, 1412], "crzgate": [64, 221, 392, 551, 1129, 1345, 1353, 1357], "amplitudeamplifier": [64, 68, 97], "-exported": 64, ".amplitude": [64, 5342], "_amplifiers": [64, 5342], "fold": [64, 235, 406, 565, 1143, 5281, 5354], "hhl": [64, 180, 187, 188], ".construct": [64, 5344], "rounding": [64, 3874, 3875, 4389, 4390, 4398, 4604, 4605, 4655, 4656, 4664], "endianness": [64, 1475, 1939, 2170, 2201, 2214, 2226, 2244, 2258], "basereadoutmitigator": [64, 4743, 4744, 4745, 4767], "big": [64, 288, 459, 618, 852, 904, 1195, 1401, 1556, 1558, 1913, 1943, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2170, 2171, 2189, 2192, 2201, 2202, 2214, 2215, 2217, 2226, 2244, 2245, 2258, 2259], ".partial": 64, "_trace": [64, 4335, 4667, 4715], "trace": [64, 4325, 4326, 4344, 4345, 4387, 4401, 4411, 4412, 4453, 4454, 4613, 4666, 4676, 4677, 4695, 4696, 4706, 4707, 4708, 4714, 4717, 4720, 4724, 4726, 5270, 5335], "subsystems": [64, 2814, 2816, 2820, 2821, 2862, 4301, 4304, 4306, 4307, 4318, 4321, 4323, 4328, 4337, 4340, 4342, 4347, 4356, 4359, 4364, 4366, 4376, 4379, 4383, 4385, 4388, 4389, 4390, 4392, 4393, 4394, 4395, 4398, 4404, 4407, 4409, 4414, 4426, 4429, 4434, 4436, 4439, 4446, 4449, 4451, 4456, 4467, 4475, 4478, 4505, 4510, 4532, 4536, 4552, 4554, 4557, 4559, 4561, 4571, 4574, 4581, 4585, 4598, 4601, 4603, 4604, 4605, 4607, 4608, 4609, 4627, 4631, 4640, 4643, 4648, 4650, 4654, 4655, 4656, 4658, 4659, 4660, 4661, 4664, 4669, 4672, 4674, 4679, 4688, 4691, 4693, 4698, 4724], "dimensions": [64, 765, 849, 877, 2323, 2349, 2814, 2822, 2823, 2831, 2833, 2867, 4301, 4308, 4309, 4316, 4318, 4329, 4330, 4335, 4337, 4348, 4349, 4356, 4367, 4368, 4376, 4381, 4385, 4398, 4402, 4404, 4415, 4416, 4424, 4426, 4437, 4438, 4444, 4446, 4457, 4458, 4467, 4479, 4480, 4511, 4512, 4537, 4538, 4552, 4554, 4563, 4571, 4586, 4587, 4599, 4632, 4633, 4640, 4646, 4650, 4664, 4667, 4669, 4680, 4681, 4686, 4688, 4699, 4700, 4714, 4720, 4726, 4730, 4735, 4737, 4738, 5244, 5294, 5353], "remaining": [64, 1378, 1526, 1772, 3718, 3727, 5178], "throwing": 64, "rzzgate": [64, 297, 468, 627, 1204, 1502], "did": 64, "localreadoutmitigator": [64, 4768, 4769, 4770, 4771, 4772], ".assignment": [64, 5343], "reject": [64, 3818], "accepted": [64, 849, 877, 1898, 2337, 2494, 2501, 3757, 3855, 3871, 4803], "stabilizerstate": [64, 308, 479, 638, 1215, 2621, 2725, 2786, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613], "oper": [64, 4383, 4601, 4648], "-trivial": 64, ".i": [64, 250, 421, 580, 1157], "produces": [64, 1903, 1913, 1941, 1942, 1944, 1957, 1960, 1964, 2027, 2036, 2041, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2140, 2145, 2171, 2189, 2202, 2215, 2245, 2259], "expect": [64, 1994, 2277, 2297], "pauligate": [64, 274, 445, 604, 1181, 1454, 1455], "inserts": [64, 4958, 4970, 5033, 5042, 5077, 5143], "items": [64, 235, 240, 406, 411, 565, 570, 936, 1143, 1147, 3905, 4752, 4758, 4775, 4780, 4789, 4794, 4904, 4908, 4931, 5004, 5281, 5296, 5300, 5308, 5312, 5320, 5324, 5332], "pauliop": [64, 104, 144, 163, 1448, 1922, 1925, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1973, 2052, 2062, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2130, 2152, 5361], "= i": [64, 1489, 1494, 1499, 1501, 2847], "evaluates": [64, 151, 169, 176, 182, 185, 356, 358, 361, 1036, 1263, 2028, 2039, 2064, 2166, 5193], "thse": 64, "paramaters": 64, "stopped": 64, "parser": [64, 1645, 3901], "_str": [64, 1645, 2119, 3901, 4484], "accepting": [64, 3732], "clash": 64, "keywords": [64, 3779, 3789, 4229], "naming": [64, 207, 208, 378, 379, 537, 538, 1116, 1117], "clashes": 64, "predominantly": 64, "precompiled": 64, "tier": 64, "tiers": 64, "/getting": 64, "_started": [64, 5348], "#platform": 64, "-support": 64, "unable": [64, 2496, 2503, 3862, 3911, 5033, 5099, 5137, 5210, 5213], "cvarmeasurement": [64, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], ".algorithm": [64, 683, 761, 849, 877], ".massive": 64, "filename": [64, 235, 277, 406, 448, 565, 607, 1002, 1143, 1184, 1284, 1464, 1673, 1732, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4234, 4237, 4896, 4917, 5281, 5282, 5283, 5284, 5287, 5289, 5290, 5291, 5292, 5293, 5294, 5333, 5334, 5335, 5354], "_register": [64, 5348, 5355], "references": [64, 251, 252, 422, 423, 581, 582, 1158, 1159, 1342, 1373, 1382, 1387, 1392, 1396, 1401, 1448, 1458, 1477, 1480, 1526, 1550, 1700, 3905, 4299, 4964, 5146, 5175, 5178], "ancillaregister": [64, 921, 922], "formula": [64, 162, 163, 1448, 4159, 4164, 4169, 4174, 4179, 4184, 4817, 4819, 4821, 4823, 4825], "iiz": 64, "izi": 64, "izz": [64, 4487], "(paulievolutiongate": [64, 5014], "produced": [64, 2067], "underscores": 64, "decimal": [64, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1282, 1302, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424, 1555, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 3781, 3792, 3901, 4389, 4390, 4398, 4604, 4605, 4655, 4656, 4664, 5262, 5280, 5361], "fractions": 64, "huge": 64, "numerators": 64, "denominators": 64, "positive": [64, 103, 275, 446, 605, 709, 849, 877, 1182, 1378, 1475, 2822, 2836, 4308, 4367, 4387, 4479, 4511, 4537, 4586, 4632, 4847, 4848, 4958, 5250], "ratio": [64, 1379, 4172], "_non": [64, 4973], "_global": [64, 4973], "_operation": [64, 4973, 5355], "targets": [64, 97, 1407, 1410, 1644, 4706, 4707, 4928, 5190], "globally": 64, "treating": 64, "spheres": [64, 5349], "attributeerror": [64, 193, 262, 264, 364, 433, 435, 523, 592, 594, 1102, 1169, 1171, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1443, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2277, 2283, 2285, 2292, 2909, 2916, 2918, 2925, 2927, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3005, 3012, 3013, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3382, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3891, 3897, 4902, 4915, 4923, 5239, 5244], "crop": 64, "crash": 64, "arrow": 64, "3d": [64, 4848, 5291], "_bloch": [64, 4380, 4644], "savefig": [64, 5349], ".png": [64, 5349], "bbox": 64, "_inches": 64, "tight": [64, 97, 4035, 4057, 4058, 4059, 4060, 5342], ".permute": 64, "-place": [64, 198, 200, 369, 371, 528, 530, 1107, 1109, 1342, 1373, 1392, 1480, 2068, 2132, 2161, 4467, 4471, 4494, 4498, 4973], "permutations": [64, 1477, 4923, 5114], ".inverse": 64, "inverting": [64, 254, 425, 584, 1161, 1400], "led": 64, "mutate": 64, "serialisation": 64, "-op": 64, "round": [64, 3763, 3764, 4389, 4390, 4398, 4604, 4605, 4655, 4656, 4664, 4807, 4808, 4946, 4952, 5181, 5199, 5262, 5280, 5333, 5334], "-trip": [64, 4946, 4952, 5181], "(empty": 64, "(opaque": 64, "distinction": 64, "ascii": [64, 235, 406, 565, 1143, 4380, 4644, 5281], "-sorted": 64, "resized": 64, "mismatched": 64, "occurred": [64, 2482, 2484, 2915, 2924, 3730, 3741, 3799, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3850, 3896, 3915], "chose": [64, 5014], "ifelseop": [64, 251, 252, 422, 423, 581, 582, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1158, 1159], "whileloopop": [64, 347, 518, 677, 1254, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276], "forloopop": [64, 240, 411, 570, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1147], "subsets": [64, 4463, 4487, 4519, 4614, 4973, 5055], "tried": [64, 101, 5289], "treat": [64, 5217], "lose": 64, "overflowerror": [64, 3905], "approximation": [64, 147, 186, 193, 364, 523, 701, 709, 717, 761, 763, 773, 849, 861, 877, 896, 1399, 1400, 1465, 1470, 1472, 1475, 1644, 1970, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 2323, 2349, 2886, 2887, 4708, 4825, 4901, 5202, 5230, 5362], "indistinguishable": 64, "-precision": [64, 2363, 2376, 5364], "fixing": 64, "howver": 64, "introduces": [64, 1706, 4182], "published": [64, 3926, 4162, 4252, 4270], "relaxationnoisepass": [64, 2843, 2844], "isntruction": 64, "localnoisepass": [64, 2799, 2800, 2842, 2844], "appended": [64, 197, 210, 240, 252, 368, 381, 411, 423, 527, 540, 570, 582, 689, 1036, 1106, 1119, 1147, 1159, 1441, 1442, 2556, 2569, 2801, 3994, 4008, 4009, 4025, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 4897, 4918], "composes": [64, 1442], "cirucit": 64, "-threaded": 64, "transpilations": 64, "exceeds": [64, 1555, 2323, 2337, 2349, 2363, 2376, 4182, 4187, 5226, 5250], "fusion": [64, 2323, 2349, 2363, 2376], "_parallelization": 64, "fuse": 64, "truncation": [64, 88, 2323, 2867, 2932, 4463, 4481], "qobjs": [64, 3860], "wrongly": 64, "unused": [64, 5169, 5231, 5232], "unmeasured": 64, "loops": 64, ".for": 64, "_loop": [64, 923, 943, 1006, 1263], "(method": [64, 2323, 2349, 4033, 5340, 5364, 5369, 5370], "assembled": 64, "patches": 64, "regressions": 64, "unintended": [64, 2012, 2016], "gpu": [64, 2323, 2349, 2363, 2376], "relaxation": [64, 2808, 2842, 2848, 2861, 2875, 2885, 5365], "-created": [64, 5332], "continueloopop": [64, 213, 384, 543, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 1121], "breakloopop": [64, 201, 372, 531, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 1110], "batched": [64, 2323], "gpus": [64, 2323], "intermediate": [64, 147, 165, 172, 1987, 2323, 3932, 3963, 3976, 5014, 5123, 5137], "\"statevector": [64, 2323, 2349, 2363, 2376, 5364], "\"density": [64, 2323, 2349, 5364], "disabled": [64, 235, 406, 565, 1143, 2323, 2349, 2363, 2376, 4481, 5281], "_shots": [64, 1641, 2323, 2349, 2909, 2918, 2927, 3730, 3932, 3963, 3976, 5250], "_gpu": [64, 2323, 2349, 2363, 2376, 5364], "beneficial": 64, "medium": [64, 235, 406, 565, 1143, 5117, 5233, 5281], "enabling": [64, 2323, 3704, 4139], "_shot": [64, 324, 495, 654, 1231, 2323, 2337, 2349, 2363, 2376, 2417, 3908], "executor": [64, 2323, 2337, 2349, 2363, 2376, 2473, 2478, 2487, 2492, 2499, 3851, 3864], "configuring": 64, "=custom": 64, "_executor": 64, "_swap": [64, 2323, 4991, 4993], "\"mps": [64, 2349], "\"matrix": [64, 2323, 2349, 5364], "_product": [64, 1450, 1563, 2323, 2349, 2582, 2712, 5340, 5364, 5370], "_algorithm": [64, 2323, 2349], "saving": [64, 1673, 1732, 5004, 5282], "essentially": [64, 1464, 1948, 1949, 1953, 2032], "-dependent": [64, 88, 163], ".localnoisepass": 64, ".relaxationnoisepass": 64, "fn": [64, 2473, 2487], "[list": [64, 1444, 2798, 3757, 4803], "[int": [64, 1444, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2798, 3982], "instructionlike": [64, 2798], "depend": [64, 2323, 2798, 3999, 4012, 4020, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5021, 5102, 5331, 5333, 5334], "arguements": 64, "thermal": [64, 2808, 2842, 2848, 2854, 2861, 5365, 5366], "_relaxation": [64, 2808, 2848, 5365, 5366], "(ibmq": 64, "(scheduled": 64, "accepts": [64, 179, 180, 849, 877, 2000, 2032, 4463, 4487], "kraus": [64, 2813, 2845, 2855, 2858, 2859, 2861, 2875, 2880, 2882, 2885, 2888, 4332, 4351, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4460, 4667, 4683, 4702, 5339, 5366, 5368], "(quantumerror": [64, 2829, 5366], "(kraus": 64, ", where": [64, 342, 513, 672, 1249, 2167], "-hand": [64, 347, 518, 677, 1254], "implicit": [64, 781, 4218, 5353], "deperecated": 64, ".transform": 64, "('i": [64, 5366], "('x": [64, 5366], "_cx": [64, 4964, 5366], "dictionaries": [64, 74, 2333, 2359, 2372, 2385, 3760, 3905, 4744, 4749, 4771, 4805, 4873, 5290], "_statevector": [64, 2909, 2914, 2918, 2923, 5250, 5337, 5339, 5340, 5348, 5349, 5350, 5362, 5364, 5370], "_density": [64, 5339, 5364], "_stabilizer": [64, 2323, 2349, 5339, 5364, 5369, 5370], "_superop": [64, 5364], "probdistribution": [64, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4796], ".errors": [64, 2813, 5365], ".standard": [64, 970, 1650, 5355], "noiseerror": [64, 2802, 2803, 2805, 2806, 2807, 2808, 2809, 2813, 2817, 2830, 2831, 2833, 2834, 2836, 2839, 2847, 2855, 2856, 2857, 2858, 2860, 2861, 2886, 2887, 2889, 2890, 2891, 2892], "runtimeerror": [64, 151, 169, 176, 769, 2499], "compatability": 64, "forwarding": 64, "period": [64, 3818, 4001, 4014, 4157, 4162, 4167, 4172, 4177, 4196, 4200, 4201, 5250], "noises": [64, 2886], "_of": [64, 334, 505, 664, 1241, 2813, 2830, 5350], "determination": [64, 143], "dimension": [64, 130, 255, 256, 426, 427, 585, 586, 761, 763, 765, 768, 769, 877, 1162, 1163, 1450, 1563, 1567, 2323, 2349, 2820, 2821, 2823, 2867, 3932, 3957, 3963, 3976, 4306, 4307, 4309, 4323, 4328, 4330, 4335, 4342, 4347, 4349, 4364, 4366, 4368, 4376, 4379, 4381, 4385, 4390, 4398, 4402, 4409, 4414, 4416, 4424, 4434, 4436, 4438, 4451, 4456, 4458, 4475, 4478, 4480, 4505, 4510, 4512, 4532, 4536, 4538, 4559, 4561, 4563, 4581, 4585, 4587, 4595, 4598, 4599, 4605, 4627, 4631, 4633, 4640, 4643, 4646, 4650, 4652, 4656, 4664, 4667, 4674, 4679, 4681, 4686, 4693, 4698, 4700, 4714, 4726, 4731, 4735, 5280, 5353], "externalizing": 64, "-change": [64, 1934, 1936, 1939, 1941, 1942, 1944], "mixture": [64, 2813, 2886, 2887], "errorutils": 64, "independent": [64, 4930, 5041, 5051], "_transformation": [64, 2798, 2842, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5368], "remap": [64, 2889], "remaps": [64, 2889], "delivered": 64, "decoding": [64, 3758], "identifiers": 64, "seem": 64, "unequal": 64, "backing": 64, "concerning": 64, "loose": [64, 1063, 4241], "lines": [64, 235, 406, 565, 1143, 1365, 1416, 3999, 4012, 5281, 5287, 5289, 5331, 5332, 5333, 5334], "scopes": [64, 1296], ".break": [64, 240, 411, 570, 1147], "(cregbundle": 64, "][": [64, 920, 939, 1259, 1444, 2265, 2269, 4229, 5033, 5341, 5361, 5366], "parametervector": [64, 198, 369, 528, 1100, 1101, 1107, 1376, 1379, 1503, 1537, 2003, 2005, 2007, 2008, 2011, 2012, 2015, 2016, 2019, 2022, 5362], "limitation": 64, "_evolution": [64, 4819, 4823, 4825], "accidentally": 64, "reinstated": 64, "favour": 64, "liable": 64, "sense": [64, 1364, 1503, 4568, 5178], "subject": [64, 896, 1644, 2883, 3705, 3723, 3725, 3737, 3738, 3739, 3751, 3835, 3880, 4900, 4921], "rely": [64, 110, 2883], "ifcontext": [64, 252, 423, 582, 1159], "controlflowbuilderblock": 64, "locations": [64, 239, 410, 569, 1146, 5089, 5367], "crashing": 64, "wherein": 64, "-machine": [64, 5350], "-learning": [64, 5350], "extras": 64, "[finance": 64, "]'": 64, "[all": 64, "migrate": 64, "deprecates": 64, "ceased": 64, "opportunity": [64, 1948, 1983], "retired": 64, "archived": 64, "/hardware": [64, 158], "extensible": 64, "preliminary": 64, "evolving": [64, 103], "specification": [64, 86, 1544, 1547, 3905, 4218, 4229, 4252, 4254, 4270, 4272, 4287, 5366], "unix": [64, 912], "-shell": 64, "-style": [64, 849, 1903, 1948, 1949, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236], "wildcard": 64, "[xz": 64, "leave": [64, 912, 4811, 5361], "untouched": 64, "termination": [64, 683, 709, 806, 833, 849, 861, 877, 896], "_checker": [64, 849, 877], "criterion": [64, 86, 130, 133, 693, 761, 861, 896], ".linalg": [64, 181, 186, 357, 362], ".norm": [64, 181, 186, 357, 362], ".rand": [64, 5353], "terminationchecker": 64, "decrease": [64, 136, 761, 4964, 5250], ".n": [64, 5359], ".values": [64, 2271, 5355], "nfev": [64, 830, 856, 883], "stepsize": [64, 849, 877], ":]": [64, 5341], "pp": [64, 5342], ".polyfit": 64, "slope": [64, 1399, 1406, 1470], "maxiter": [64, 92, 683, 693, 701, 709, 717, 761, 773, 781, 798, 806, 814, 833, 849, 861, 869, 877, 896, 904], "=maxiter": 64, "=terminationchecker": 64, "niter": 64, "=np": 64, "pattern": [64, 1376, 1379, 1403, 1457, 1503, 1722, 4923], "remains": [64, 849, 877, 2068, 2132, 4182], "/vendor": 64, "beyond": [64, 683, 2323, 2349, 4964], "universally": 64, "actively": [64, 2295, 2305, 2483, 2497, 2902, 3815], "combines": [64, 2028, 2039, 2064, 4882], "heterogeneous": 64, "tuned": [64, 2808, 4922, 5033], "variants": 64, "factor": [64, 87, 103, 110, 143, 145, 158, 683, 1378, 1399, 1406, 1448, 1450, 1459, 1468, 1470, 1496, 1539, 1563, 1567, 1673, 1732, 1908, 2042, 2123, 2141, 2169, 2239, 3979, 5178, 5282, 5319, 5331], "grow": [64, 1393], "proposed": [64, 92, 110, 789, 849, 877, 1537], "containsinstruction": [64, 5025, 5026], "assert": [64, 3984, 4006, 4021, 4027, 4028, 4029, 4030, 4034, 4038, 4039, 4041, 4043, 4046, 4219], "_sx": 64, ".detach": 64, "counterpart": 64, "friendly": 64, "mhz": [64, 5262], "\"gate": 64, "\"balanced": 64, "objectives": 64, "assume": [64, 1377, 1466, 1468, 2218, 4922, 4958, 5021, 5199], "_rate": [64, 97, 773, 849, 877, 3963, 4964], "weights": [64, 140, 1551, 3966], "-error": 64, "balanced": [64, 4964, 5077, 5143, 5341], "_obj": [64, 4297, 4298, 4964], "_weight": [64, 4964, 5178], "getters": 64, "setters": 64, "assigning": [64, 5178, 5199], "_ansatz": 64, ".ansatz": 64, ".optimizer": [64, 5340], "slsqp": [64, 862, 863, 864, 865, 866, 867, 868, 5337, 5338, 5340], "_wise": [64, 4503, 4580], "partitions": 64, "mutually": [64, 1923, 1924, 2025, 2032, 2055, 2063, 4504, 4813], "iy": [64, 4513, 4539, 4540, 4614, 4626, 4634, 4635, 4636, 4637], "yx": [64, 1448, 4513, 4530, 4539, 4625, 4634, 5353, 5364], "-map": 64, "_hexagonal": 64, "_lattice": 64, "hexagonal": [64, 4849], "lattice": [64, 4849], "2x": [64, 2869, 4422, 4423], "<pil": [64, 1645, 1646, 5282], ".pngimageplugin": 64, ".pngimagefile": 64, "=rgba": [64, 1645, 1646, 5282], "_brooklyn": [64, 3072, 3081], "_jakarta": [64, 3205, 3214], "_lagos": [64, 3256, 3265], ".is": [64, 1721, 1746, 1748, 1750, 1752, 5342, 5353], "_hermitian": 64, "hermitian": [64, 103, 104, 143, 145, 180, 186, 303, 304, 474, 475, 633, 634, 1210, 1211, 1753, 1907, 1960, 1986, 2041, 2120, 2140, 2556, 2569, 2781, 2782, 4317, 4336, 4403, 4445, 4668, 4687, 4731, 4743], "numpyeigensolver": [64, 131, 132], "numpyminimumeigensolver": [64, 134, 135, 5338, 5339, 5341], "eigh": 64, "eigsh": 64, ".passmanager": [64, 4894, 4920], "fakemelbourne": [64, 3341, 3342, 3343, 3344, 3345, 3346, 3347], "(fakemelbourne": 64, ", seed": [64, 5337, 5340], "pulsegates": [64, 5147, 5148, 5149, 5150], "extracts": [64, 1928], "-provided": 64, "attaches": [64, 1644, 5146, 5230], "-user": [64, 5146], "overrides": [64, 4716, 5332], "saves": [64, 5108, 5220], "_calibration": [64, 4219, 5268, 5272, 5356, 5358], "supplement": 64, "\"publisher": 64, "-calibrated": 64, "publisher": [64, 5146], "-users": [64, 5146], "fakeguadalupe": [64, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179], "_q": [64, 4721, 4722, 4924, 5352, 5355, 5356, 5358, 5367], ", x": [64, 1399, 4519, 4614], "circs": [64, 3834], ".sx": 64, "_active": 64, "(circs": [64, 3834], "mutable": [64, 4084, 4086, 5146], "instmap": 64, "deepcopy": [64, 215, 386, 545, 1123], "_subset": [64, 4964], "=couplingmap": 64, ")(": [64, 1567], "supply": [64, 773, 4041, 4964], ".reduce": [64, 5361], "(qubit": [64, 233, 321, 404, 492, 563, 651, 1141, 1228, 2889, 4041, 4503, 4580, 5341, 5345, 5359, 5366, 5369, 5372], "(reduced": [64, 5369], "skip": [64, 1318, 1376, 1379, 1441, 1447, 1456, 1503, 1537, 3723, 3738, 3739, 3874, 3875, 3880, 3882, 3884, 4182, 5077, 5143, 5250, 5275], "_with": [64, 5227, 5238, 5339, 5348, 5355], "[i": [64, 357, 1444, 1470, 2265, 2269, 2271, 2274, 5338, 5341, 5369, 5370], "enumerate": [64, 5338, 5342], "(mapped": 64, "reg": [64, 4041, 4075, 4881, 5357], ".qregs": [64, 5014, 5352, 5355], "(reg": 64, "(layout": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "recovered": 64, "[q": [64, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "_virtual": [64, 4961], "(overall": 64, "prevents": [64, 322, 493, 652, 1229, 4030], "_add": 64, "discussion": 64, ".sum": [64, 5341], "(random": [64, 3834, 5355], "typing": 64, "!)": [64, 1448], "(sparse": 64, "_amplitude": [64, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 5366], "disabling": 64, "-by": [64, 1387, 1393, 1396, 4964, 5123], "unity": [64, 4187], "inferred": [64, 150, 168, 175, 1673, 1710, 1732, 2011, 2015, 2016, 2019, 2022, 2889, 5230, 5282], "./": [64, 4196, 4200, 4201], ".jpg": [64, 5283], "jpeg": 64, "png": 64, "encounters": 64, ".spooky": 64, "'aqc": 64, "analyze": [64, 2798, 2842, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5091, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "criteria": [64, 2315, 2316, 2321, 2322, 2868, 2907, 2908, 3483, 3484, 3486, 3487, 3705, 3706, 3723, 3728, 3737, 3748, 3749, 3751], "(lambda": [64, 5130, 5133, 5350, 5352], "zeroth": 64, "collectmultiqblocks": [64, 5004, 5005, 5006, 5007], "uninterrupted": [64, 5003, 5018], ".while": 64, "overloaded": [64, 1899, 1900, 1903, 1905, 1908, 1909, 1913, 1914, 1954, 1955, 1957, 1958, 1964, 2026, 2027, 2033, 2034, 2036, 2038, 2042, 2044, 2047, 2048, 2056, 2066, 2070, 2071, 2073, 2074, 2079, 2085, 2086, 2087, 2088, 2093, 2098, 2099, 2100, 2101, 2106, 2113, 2114, 2115, 2116, 2123, 2127, 2133, 2134, 2136, 2137, 2141, 2145, 2146, 2163, 2169, 2171, 2178, 2179, 2189, 2196, 2197, 2202, 2209, 2210, 2215, 2221, 2222, 2223, 2233, 2234, 2237, 2239, 2245, 2246, 2253, 2254, 2259], "entering": 64, "pushes": 64, "scope": [64, 201, 213, 240, 252, 347, 372, 384, 411, 423, 518, 531, 543, 570, 582, 677, 1110, 1121, 1147, 1159, 1254, 1296, 3812], "captures": 64, "builds": [64, 781, 4773, 4787, 5152, 5158], "resource": [64, 201, 213, 347, 372, 384, 518, 531, 543, 677, 1063, 1065, 1110, 1121, 1254, 1644], "widths": 64, ".continue": 64, "chained": [64, 1442], "_:": [64, 251, 252, 422, 423, 581, 582, 1158, 1159], "bodies": 64, "generalizes": 64, "-inverse": [64, 5011, 5105], "initializing": [64, 2295, 3719, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334, 5350], "comprised": [64, 936], "ket": [64, 2660, 4386, 4390, 4398, 4605, 4651, 4656, 4664, 5361], "processed": [64, 1926, 3823, 3868, 3926, 5003, 5050], "square": [64, 130, 165, 1401, 1517, 1524, 1906, 1926, 1959, 2001, 2018, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4157, 4172, 4195, 4200, 4848, 5151, 5157, 5286, 5287, 5288, 5289], "roots": [64, 1926, 5007], "\"ket": 64, "\"vector": 64, "sv": [64, 4644], "echorzxweyldecomposition": [64, 5081, 5082], "echoed": [64, 1374, 5080, 5082, 5151], "-gates": [64, 4964], "cartan": 64, "qnspsa": [64, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860], "capable": [64, 4915], "batching": [64, 2323], "leveraged": 64, "_evals": [64, 147, 165, 172, 685, 695, 703, 709, 711, 719, 725, 728, 734, 737, 743, 746, 752, 755, 764, 775, 783, 789, 792, 798, 800, 808, 816, 824, 835, 841, 843, 850, 851, 854, 861, 863, 871, 878, 879, 881, 888, 890, 896, 898, 906, 5337, 5340], "_grouped": [64, 147, 165, 172, 685, 695, 703, 709, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 798, 800, 808, 816, 824, 835, 841, 843, 850, 851, 854, 861, 863, 871, 878, 879, 881, 888, 890, 896, 898, 906], "rz\"": 64, "(fidelity": [64, 849], "=ansatz": 64, "=qnspsa": 64, "(pi": [64, 1374, 1388, 1450, 1533, 2909, 2918, 2927, 4708, 4709, 4712, 4930, 5093, 5345, 5350, 5372], "'rzx": 64, "xxdecomposer": [64, 4713], "1qgatessimplecommutation": 64, "optimizes": [64, 5137], "resynthesis": [64, 5234, 5355], "opportunities": 64, "_tries": 64, "submission": [64, 3851, 5117, 5250], "fetching": 64, "infinitely": [64, 2845, 2858, 2859], "cancelled": [64, 2295, 2476, 2482, 2490, 2897, 3799, 3800, 3814, 3880, 3911, 4220], "errored": 64, "achieved": [64, 1891, 5235], "=-": [64, 3966, 4192, 5345, 5372], "supporting": [64, 235, 406, 565, 1143, 3993, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4930, 5281], "conditioning": 64, "\"mpl": 64, "\"all": 64, "instatiate": 64, "\"h": [64, 4363], "=property": 64, "_heavy": 64, "_hex": 64, "_square": 64, "hex": [64, 3757, 4282, 4751, 4756, 4779, 4793, 4803, 4813, 4847], "chamberland": 64, "et": [64, 92, 97, 115, 234, 255, 256, 342, 343, 344, 345, 405, 426, 427, 513, 514, 515, 516, 564, 585, 586, 672, 673, 674, 675, 849, 877, 1142, 1162, 1163, 1249, 1250, 1251, 1252, 1332, 1336, 1342, 1372, 1373, 1392, 1396, 1448, 1450, 1456, 1471, 1475, 1477, 1480, 1537, 1550, 1815, 1831, 1847, 1863, 4796, 4964, 5342], "al": [64, 92, 97, 115, 234, 255, 256, 342, 343, 344, 345, 405, 426, 427, 513, 514, 515, 516, 564, 585, 586, 672, 673, 674, 675, 849, 877, 1142, 1162, 1163, 1249, 1250, 1251, 1252, 1332, 1336, 1342, 1372, 1373, 1392, 1396, 1448, 1450, 1456, 1471, 1475, 1477, 1480, 1537, 1550, 1815, 1831, 1847, 1863, 4796, 4964, 5342], "solutions": [64, 97, 100, 147, 682, 701, 709, 869, 904, 1393], "sign": [64, 1378, 1475, 1947, 4626], "exactreciprocal": 64, ".coeff": [64, 1969, 2054, 2176, 2251], "multiplicatively": 64, "oplist": [64, 1901, 1956, 2025, 2028, 2032, 2035, 2039, 2041, 2054, 2055, 2063, 2064, 2072, 2135, 2154, 2180, 2235, 5361], ".coeffs": [64, 4568], "duck": 64, "-types": 64, "against": [64, 179, 1398, 1988, 1994, 2024, 2032, 2168, 2485, 3748, 3750, 5129], "-nesting": 64, "subscriptable": 64, "nth": 64, "statevec": 64, "[n": [64, 1372, 5370], ".inner": 64, "products": [64, 1939, 2063, 2323, 2349, 4519, 4578, 4614, 4819], "_inner": 64, "(other": [64, 4525, 4529, 4530, 4540, 4620, 4624, 4625, 4635, 4645], "(add": 64, "delegates": [64, 1419], "conversions": [64, 1911, 1962, 2024, 2045, 2077, 2092, 2105, 2125, 2143, 2170, 2186, 2200, 2201, 2204, 2213, 2214, 2218, 2225, 2226, 2230, 2242, 2244, 2248, 2250, 2257, 2258, 2261, 2264], "(loss": 64, ".nfev": 64, "sums": [64, 359, 1448, 1923, 1924, 1932, 1970, 1979, 1998, 2055, 2059], "-sums": 64, "lietrotter": [64, 162, 4820, 4823], "matrixexponential": [64, 4822], "xiz": 64, "zzx": 64, "iyy": [64, 4487], "synth": [64, 1293, 1313, 5202], "(order": [64, 5361], "evo": [64, 1448, 5361], "=time": 64, "=synth": 64, "(evo": [64, 1448, 5361], "extends": [64, 147, 798], "(instead": 64, "plotted": [64, 5287], "(qasm": 64, "dumps": [64, 1296, 4243], "stdgates": 64, ".inc": [64, 4241], "\";": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "barrier": [64, 199, 233, 321, 322, 326, 327, 370, 404, 492, 493, 497, 498, 529, 563, 651, 652, 656, 657, 929, 949, 962, 1012, 1027, 1042, 1056, 1108, 1141, 1228, 1229, 1233, 1234, 1269, 1285, 1304, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1434, 1510, 1684, 1693, 1716, 1779, 1822, 1838, 1854, 1870, 2445, 2459, 2705, 2718, 2731, 2744, 2757, 2770, 3999, 4012, 4030, 4229, 4967, 5050, 5120, 5137, 5163, 5295, 5307, 5319, 5331, 5333, 5334, 5355, 5367], "subroutines": [64, 2166], "composite": [64, 335, 336, 506, 507, 665, 666, 929, 933, 949, 953, 962, 967, 982, 996, 1012, 1017, 1027, 1032, 1042, 1047, 1056, 1060, 1242, 1243, 1269, 1274, 1285, 1290, 1304, 1309, 1329, 1434, 1438, 1510, 1514, 1767, 1772, 1779, 1783, 1798, 1812, 1822, 1827, 1838, 1843, 1854, 1859, 1870, 1875, 1893, 2002, 2004, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2705, 2709, 2718, 2722, 2731, 2735, 2744, 2748, 2757, 2761, 2770, 2774], "_qreg": [64, 5355], "(composite": 64, "*_": 64, "qdrift": [64, 1970, 1975, 1982], "reformulated": 64, "deriving": 64, "trotterizationbase": [64, 1970, 1974, 1976, 1980, 1981, 1982], "=qdrift": 64, "_bit": [64, 4880, 5366], "lookups": 64, "-element": [64, 5287], "namedtuple": [64, 239, 410, 569, 1146], "(for": 64, ".find": 64, "bitlocations": 64, "(index": 64, "continuing": 64, "stand": 64, "-alone": 64, "mitigators": 64, "mitigator": [64, 4742, 4745, 4767], "mitigated": [64, 4743, 4744, 4747, 4749, 4769, 4771], "quasidistribution": [64, 2274, 3762, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801], "legacy": [64, 1063, 2277, 2282, 2297, 3748], "migrated": 64, "mitgation": 64, "measuerment": 64, "-product": [64, 4519], "-matrix": [64, 4316, 4324, 4335, 4343, 4410, 4452, 4675, 4694, 4714, 4717, 4720, 4726, 4735, 5370], "inversion": [64, 2001], "correlatedreadoutmitigator": [64, 4746, 4747, 4748, 4749, 4750, 4767], "correlated": [64, 1380, 4745], "descirbes": 64, "assigment": 64, ".stddev": 64, "_upper": [64, 4787], "_bound": [64, 904, 4787], "storing": [64, 2024, 2032, 3752], ".counts": 64, "amplificationproblem": [64, 68, 97, 98, 99, 101, 5342, 5343], "_good": [64, 66, 86, 97, 98, 5342, 5343], "bitstring": [64, 66, 86, 101, 136, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1282, 1291, 1302, 1310, 1311, 1463, 1475, 1555, 1760, 1791, 1820, 1836, 1852, 1868, 1906, 1959, 2024, 2028, 2032, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2195, 2198, 2211, 2224, 2238, 2255, 4744, 4749, 4751, 4771, 5290], "(iterations": [64, 5342], "=aersimulator": 64, "(statevector": [64, 5361, 5364, 5369], ".amplify": [64, 5342, 5343], "(problem": [64, 5342, 5343], ".top": [64, 68, 98, 5331, 5333, 5334, 5342], "_measurement": [64, 68, 98, 101, 849, 877, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2323, 2349, 5342, 5345, 5361, 5372], "_cregs": [64, 1063], "referencing": 64, "1qruns": 64, "operating": [64, 3993], "speedups": 64, "fewer": [64, 130, 143], "skipped": [64, 1318, 1447, 3905, 4915, 5245], "eigensolver": [64, 82, 83, 84, 125, 127, 128, 130, 133, 135, 153, 165, 172, 178, 877], "minimumeigensolver": [64, 126, 127, 133, 172], "[str": [64, 1444, 3757, 3982, 4487, 4803], "[operatorbase": 64, "_operators": [64, 82, 88, 126, 131, 134, 148, 162, 166, 173, 2875, 2882, 2885], "auxiliary": [64, 82, 83, 88, 126, 127, 131, 132, 134, 135, 148, 153, 163, 164, 166, 171, 173, 178, 4172, 5262], "gatedirection": [64, 4982, 4984, 5094, 5095], "checkgatedirection": [64, 4985, 4987, 4989, 4990], "(in": [64, 5355], "circuitsampler": [64, 1927, 1928, 1929, 1983, 1990, 2024], "again": [64, 1101, 1377, 1478, 1479, 3814, 3862, 4229, 5349], "standardequivalencelibrary": [64, 1003], "std": [64, 904, 2936, 5338, 5339], "_eqlib": 64, "rzxcalibrationbuildernoecho": [64, 5158, 5159, 5160, 5161, 5162], "unrollcustomdefinitions": [64, 5209, 5210, 5355], ".optimization": 64, ".echo": 64, "_rzx": 64, "_weyl": 64, "_decomposition": 64, "fakebelem": [64, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029], "sx'": 64, "=rzx": 64, "(config": [64, 5359], "weyl": [64, 5080, 5082], "-decomposed": 64, "attach": [64, 197, 234, 255, 256, 342, 343, 344, 345, 368, 405, 426, 427, 513, 514, 515, 516, 527, 564, 585, 586, 672, 673, 674, 675, 1106, 1142, 1162, 1163, 1249, 1250, 1251, 1252, 1725, 1926], "(std": 64, "(rzx": 64, "=pre": 64, "=post": 64, "(quantum": [64, 162, 5342, 5343, 5344, 5349], "=quantum": [64, 162, 5250, 5343, 5344], "_synth": [64, 1313, 1401, 1462, 5111], "exports": 64, "allocation": [64, 1644, 5143], "isomorphism": [64, 5214, 5217], "exisiting": 64, "\"latex": 64, "spaces": [64, 1450], "export": [64, 912, 4244, 4245], "provision": [64, 5333, 5334], "isolation": 64, "-overlapping": 64, "gmap": [64, 4922], "# u": 64, ",\n}": [64, 5332], "(xgate": [64, 4928, 5353], "bt": 64, "=gmap": 64, ".iswap": 64, "forbidden": [64, 1063], "translator": [64, 1644, 3708], "submodules": 64, "referring": 64, "reminder": 64, "production": 64, "raises": [64, 1403, 2025, 2032, 2055, 2063, 2162, 2164, 4762, 4783, 4798, 4882, 4911, 5105, 5202, 5220, 5239, 5303, 5315, 5327, 5352, 5355, 5357], ">'": [64, 3832, 4829, 5367], "unconditionally": 64, "largest": [64, 143, 4623, 4628, 4774, 4788, 4854, 5341], "bottleneck": 64, "achieves": [64, 849], "sort": [64, 1714, 1715, 1719, 1745, 1749, 1751, 3779, 3789, 3905, 4491, 4513, 4522, 4539, 4617, 4634, 5006, 5290, 5349], "_by": [64, 3779, 3789], ".apply": [64, 5331, 5355], "_back": [64, 5355], "_front": [64, 5355], ".extend": 64, ".twoq": 64, ".two": [64, 5355], ".threeq": 64, "_more": 64, ".multi": 64, "singlequbitunitary": [64, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801], "squ": [64, 328, 499, 658, 1235], "proc": 64, "_scope": 64, ".node": 64, "clearer": 64, "educational": 64, "contexts": [64, 1063, 4008, 4221], "shows": [64, 5014, 5370], "displays": 64, "nonzero": 64, "whatever": [64, 277, 448, 607, 1184], "'mpl": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334, 5354], "recent": [64, 3736], "becoming": 64, "increasingly": [64, 734], "incompatiblities": 64, "generator": [64, 683, 761, 773, 849, 850, 877, 878, 1477, 1714, 1715, 1737, 1744, 4008, 4182, 4235, 4388, 4394, 4395, 4603, 4608, 4609, 4654, 4660, 4661, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 5190, 5235, 5331, 5333, 5334, 5357], "-generating": 64, "_mul": 64, "_a": [64, 1920, 1921, 1947, 2333, 2359, 2372, 2385, 4723, 5341, 5353, 5354], "assign": [64, 198, 200, 369, 371, 528, 530, 1071, 1087, 1107, 1109, 1443, 1901, 1902, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 3923, 3995, 4008, 4010, 4182, 4335, 4402, 4424, 4568, 4686, 5004, 5007, 5034, 5362], ".gaussiansquare": 64, ".drag": 64, "assigned": [64, 198, 240, 369, 411, 528, 570, 1006, 1102, 1107, 1147, 1443, 2008, 3723, 3730, 3738, 3739, 3779, 3789, 3807, 3808, 3820, 3838, 3851, 3864, 3866, 3868, 4009, 4018, 4032, 4084, 4086, 4094, 4159, 4164, 4169, 4174, 4182, 4184, 4221, 4224, 4282, 4579, 5137, 5154, 5160, 5362], ".scheduleblock": [64, 4878], "flatten": [64, 2874, 4006, 4223], ".transforms": [64, 4027, 4028, 4029], ".canonicalization": 64, ".flatten": [64, 4006], ".interfaces": 64, ".schedulecomponent": 64, ".waveform": [64, 5331, 5357], "documentations": 64, ".reschedule": 64, "protected": [64, 5181], ".children": 64, "notion": 64, "transformed": [64, 2890, 2891, 2892, 4219, 4228, 4900, 4921, 4981, 5101, 5107, 5120], "timeslots": [64, 3993, 4045, 4209, 4212, 4225], "ch": [64, 205, 376, 535, 1114, 1343, 1344, 1390, 3996, 3997, 3998, 4011, 4077, 4078, 4079, 4087, 4088, 4089, 4096, 4097, 4098, 4105, 4106, 4107, 4114, 4115, 4116, 4123, 4124, 4125, 4132, 4133, 4134, 4141, 4142, 4143, 4150, 4151, 4152, 4229, 4264, 5345, 5372], "_stop": [64, 4028, 4029, 4976, 5214, 5217], "integrated": [64, 4193], "_equispaced": 64, "_func": [64, 1450, 1563, 1567, 1644, 4900, 4921], "redundant": [64, 235, 406, 565, 1143, 5011, 5120, 5232, 5233, 5234, 5281, 5290, 5291, 5292, 5293, 5294], "commands": [64, 912, 3973], ".builder": 64, "displayed": [64, 5262], "deprecations": 64, "script": 64, "interpreter": [64, 3704], "blamed": 64, "issued": 64, "suggested": 64, ".schemas": 64, ".validation": 64, "jsonschema": 64, "schemas": 64, "dedicated": 64, "repository": 64, "packaged": [64, 5355, 5370], ".validate": 64, "_qobj": [64, 918, 1926, 2337, 4030, 5250], "_against": 64, "_schema": 64, ".common": 64, ".validator": 64, "qasmqobj": [64, 916, 918, 1641, 2282, 2473, 2487, 3730, 3796, 3810, 3848, 3860, 3896, 3929, 4271, 4272, 4282, 4285, 4286, 4287], "fastjsonschema": 64, "schemavalidationerror": 64, "improvement": [64, 1472], "paulitable": [64, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4568, 4583, 4614, 4616, 4617, 4618, 4619, 4725, 4734, 4736], "interchangeably": [64, 81, 125], "stevedore": [64, 5228], "-run": 64, "reorganization": 64, "regarding": 64, "_creators": 64, "rule": [64, 789, 1926, 2024, 2032, 4229, 4503, 4580, 5008, 5356], "mcmt": [64, 1408, 1409, 1410, 1411], "mcmtvchain": [64, 1407, 1411], "-specifiable": 64, "-known": [64, 147, 156, 1458], "(while": 64, "preserve": [64, 4192, 4193, 4195, 4197, 4617, 4634, 4915], "instructionset": [64, 201, 204, 205, 209, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 240, 241, 245, 249, 250, 251, 252, 257, 258, 262, 263, 264, 268, 273, 274, 282, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 347, 349, 350, 351, 372, 375, 376, 380, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 411, 412, 416, 420, 421, 422, 423, 428, 429, 433, 434, 435, 439, 444, 445, 453, 454, 455, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 499, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 518, 520, 521, 522, 531, 534, 535, 539, 543, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 570, 571, 575, 579, 580, 581, 582, 587, 588, 592, 593, 594, 598, 603, 604, 612, 613, 614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 679, 680, 681, 1064, 1065, 1066, 1110, 1113, 1114, 1118, 1121, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1175, 1180, 1181, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1235, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258], "_requester": [64, 1063], ".exceptions": [64, 1403, 5342, 5343], "circuiterror": [64, 197, 198, 200, 201, 211, 213, 214, 232, 239, 240, 251, 252, 254, 265, 267, 280, 281, 347, 368, 369, 371, 372, 382, 384, 385, 403, 410, 411, 422, 423, 425, 436, 438, 451, 452, 518, 527, 528, 530, 531, 541, 543, 544, 562, 569, 570, 581, 582, 584, 595, 597, 610, 611, 677, 919, 920, 923, 926, 929, 932, 939, 942, 943, 946, 949, 952, 956, 959, 962, 965, 970, 973, 979, 981, 984, 989, 995, 1006, 1009, 1012, 1015, 1023, 1027, 1029, 1031, 1034, 1036, 1039, 1042, 1045, 1050, 1053, 1056, 1059, 1063, 1065, 1072, 1088, 1096, 1102, 1106, 1107, 1109, 1110, 1120, 1121, 1122, 1140, 1146, 1147, 1158, 1159, 1161, 1172, 1174, 1182, 1187, 1188, 1254, 1259, 1262, 1263, 1266, 1269, 1272, 1280, 1285, 1287, 1289, 1294, 1299, 1304, 1306, 1308, 1314, 1322, 1328, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1372, 1380, 1387, 1393, 1396, 1401, 1412, 1415, 1419, 1421, 1424, 1431, 1434, 1437, 1457, 1507, 1510, 1513, 1527, 1555, 1640, 1757, 1764, 1766, 1769, 1775, 1779, 1782, 1789, 1795, 1797, 1800, 1805, 1811, 1818, 1822, 1824, 1826, 1829, 1834, 1838, 1840, 1842, 1845, 1850, 1854, 1856, 1858, 1861, 1866, 1870, 1872, 1874, 1877, 1883, 1890, 1892, 1895, 2392, 2399, 2406, 2413, 2420, 2427, 2434, 2441, 2448, 2455, 2462, 2469, 2507, 2513, 2520, 2526, 2533, 2539, 2546, 2552, 2559, 2565, 2572, 2578, 2585, 2591, 2598, 2604, 2611, 2617, 2624, 2630, 2637, 2643, 2650, 2656, 2663, 2669, 2676, 2682, 2689, 2695, 2702, 2705, 2708, 2715, 2718, 2721, 2728, 2731, 2734, 2741, 2744, 2747, 2754, 2757, 2760, 2767, 2770, 2773], "_flat": 64, "(registers": 64, "requester": [64, 1063], "(specifier": 64, "(specifer": 64, "specifier": 64, "classicalregster": 64, "[specifier": 64, "(f": [64, 1380, 1399, 1465, 3922, 4182, 5262, 5338, 5339, 5340, 5341, 5343, 5344, 5367], "\"unknown": 64, "}\"": [64, 3796, 3909, 3922, 5367], "(resource": 64, "=my": 64, ".ignis": 64, ".completemeasfitter": 64, ".tensoredmeasfitter": 64, "xopt": [64, 806, 833], "fopt": 64, "_vars": [64, 856, 883], "=objective": 64, "=gradient": [64, 5338], "=variable": 64, ".util": 64, "util": 64, ".paulis": 64, "-more": 64, "unexpected": [64, 1711, 2484, 3722, 3727, 3730, 3734, 3741, 3799, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3837, 3863, 3896], "-allocation": 64, "decisions": [64, 743], "disassembled": [64, 918], "buggy": 64, "circuitgradient": [64, 2003, 2006, 2010, 2013, 2014, 2017, 2018], "transpiles": 64, "requested": [64, 130, 869, 1457, 1555, 3757, 3982, 4803], "mentioning": 64, "_free": 64, "_symbols": 64, "constants": [64, 4241], "ax": [64, 187, 188, 190, 235, 363, 406, 565, 1143, 2018, 5281, 5285, 5287, 5289, 5290, 5291, 5292, 5293, 5294, 5345, 5352, 5372], "figwidth": [64, 5332, 5354], "subplot": 64, "boundaries": 64, "alternatively": [64, 2337, 3876, 3909, 5227, 5238, 5356], "inches": [64, 5285, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5332], "displaying": [64, 4380, 4644], "encountered": [64, 923, 943, 3901], "sdgxgate": 64, ".configurablefakebackend": 64, "inherited": [64, 2275, 2293, 2313, 4244, 4245], "expecting": 64, "me": 64, "!\"": [64, 3814, 3862], "overwrite": [64, 1441, 3752, 3899, 4218, 4877, 4902], "hoare": [64, 5099], "twice": [64, 849, 861, 877, 2323, 2349], "predecessor": [64, 1711, 5137], "successor": [64, 1666, 5023, 5137], "numbering": 64, "overlapping": [64, 4032, 5044], "sphere": [64, 761, 768, 5284, 5285, 5349], "render": [64, 5335], "vectors": [64, 299, 300, 470, 471, 629, 630, 1206, 1207, 1397, 2504, 2517, 2712, 2777, 2778, 2830, 4390, 4398, 4463, 4519, 4605, 4614, 4656, 4664, 5335], "nlocal": [64, 1376, 1377, 1379, 1442, 1443, 1444, 1445, 1446, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "_layer": [64, 1376, 1379, 1441, 1456, 1503, 1537, 5178, 5355], "appending": [64, 1998, 2068, 2132, 2323, 2802, 2803, 2805, 2806, 2807, 3993], "pickling": 64, "valued": [64, 4743], ".exp": [64, 1948, 1969, 5353, 5357, 5361], ".assign": [64, 2001, 5362], "qaoaansatz": 64, "iii": [64, 1388], "leading": [64, 4376, 4774, 4788, 4811], "-bit": [64, 4743, 4744], "subscript": 64, "collisions": 64, "dealing": [64, 5146], "put": [64, 5143, 5347], "regless": 64, "despite": [64, 4086], "collision": [64, 4032, 5091], "deterministically": [64, 3993], "schedulers": 64, "writes": [64, 936], "reads": [64, 936, 5018], "issuing": 64, "piecewisechebyshev": 64, ".arithmetic": [64, 1465, 1468], "(the": [64, 165, 172, 4241], "edits": 64, "copies": [64, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2337], "mixer": [64, 147, 1471], "barriers": [64, 235, 285, 406, 456, 565, 615, 1143, 1192, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1472, 1503, 1537, 1563, 1567, 4221, 4227, 4819, 4823, 4825, 4967, 5039, 5042, 5120, 5137, 5169, 5281, 5331, 5332, 5333, 5334, 5354], "measures": [64, 103, 136, 2323, 2349], "removefinalmeasurements": [64, 5170, 5171, 5355], "_final": [64, 1376, 1379, 1441, 1456, 1503, 1537, 2909, 2918, 3818], "_measurements": 64, "preceding": [64, 1464], "referenced": [64, 285, 456, 615, 1000, 1192, 2888, 4084], "became": 64, "invocation": [64, 3819], "detecting": 64, "taper": [64, 1945, 2160], "*\"": 64, "iiii": 64, "\"`": 64, "/method": 64, "cast": [64, 202, 373, 532, 1111, 1444], ".parameterexpression": 64, "trailing": 64, "0s": [64, 1401], "printing": [64, 1913, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259], "floats": [64, 107, 142, 769, 3901, 3905, 4255, 4273], "consequences": 64, "accreditation": 64, "fitting": 64, "accreditationfitter": 64, "fullaccreditation": 64, "meanaccreditation": 64, "addtition": 64, "appendresult": 64, "appendstrings": 64, ".verification": 64, ".qotpcorrectstring": 64, "analytical": [64, 181, 353, 357, 693], "generation": [64, 904, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 4354, 4595, 5143, 5331], "syndrome": 64, "graphs": [64, 5291], "repetitioncode": 64, "brute": [64, 118, 5341], "repetitioncodesyndromegenerator": 64, "facilitate": 64, "specificed": 64, "applicable": [64, 1644, 1934, 3730, 3798, 3811, 3812, 3824], "xbasis": 64, "involving": [64, 270, 441, 600, 877, 1177, 4712, 4958], "unassigned": [64, 4084], "deprecating": 64, "namely": [64, 1644, 4182], "_variation": 64, "_distance": [64, 4796, 5117], "_protocol": 64, "_run": [64, 4970, 5117, 5178, 5190], "proejct": 64, "#migration": 64, "-guide": 64, "websocket": [64, 3766], "connection": [64, 3748, 3767], "streaming": [64, 3912, 3918], "inactivity": 64, "pending": [64, 3718, 3833, 3880, 3951], "author": [64, 3922], ".runtimeprogram": 64, ".update": [64, 3777, 4830], "summary": [64, 334, 505, 664, 1241, 3836, 3861, 5250, 5276, 5350], ".programs": [64, 3922], "retrieving": [64, 105, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 3704, 3741, 3810, 5151], "_requirements": [64, 3888, 3922], "interim": [64, 3876, 3885, 3887, 3888, 3909, 3918, 3922, 3926], "specifications": [64, 2862, 3887, 3888], "spec": [64, 920, 939, 1259, 3887, 3888, 5331, 5333, 5334], ".accountprovider": 64, "(represents": 64, "retrieved": [64, 3718, 3757, 3778, 3779, 3787, 3788, 3789, 3796, 3798, 3801, 3805, 3834, 3837, 3848, 3849, 3860, 3865, 3871, 3872, 3873, 3874, 3875, 3879, 4803], "_ideal": [64, 5365, 5366, 5367], "_noisy": 64, "remained": 64, "_option": [64, 5364], "pickleable": 64, "accumulation": 64, "quits": 64, "segmentation": 64, "fault": 64, "response": [64, 3784, 3785, 3786], "parameterizations": [64, 147, 1901, 1929, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 4923], "visibility": [64, 3886], "_public": [64, 3789, 3888, 3922], ".ibmexperimentservice": 64, ".create": [64, 3777], "_experiment": [64, 3777, 3814, 3862], "filtered": [64, 107, 142], "datetime": [64, 2285, 3005, 3013, 3382, 3723, 3725, 3728, 3738, 3739, 3779, 3782, 3789, 3793, 3802, 3821, 3830, 3909, 3927, 3930, 3932, 3935, 3942, 3945, 3963, 3976], ".ibmqjobmanager": 64, ".retrieve": [64, 3718, 3736, 3834], "retrieves": [64, 5023], ".managedjobset": 64, "restore": 64, "-enabled": [64, 5359], "binding": [64, 1072, 1081, 1088, 1097, 1901, 1928, 1929, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 2333, 2359, 2372, 2385, 5352], "casts": 64, "generalized": [64, 1448, 1471, 1537, 2845, 2859, 4402, 4667], "exeuction": 64, "cluster": 64, "sxdggate": [64, 331, 502, 661, 1238, 1523], "cugate": [64, 224, 395, 554, 1132, 1363], ".generalized": [64, 1427], ".pauligate": 64, "clustor": 64, "exection": 64, "aerjobset": [64, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503], "aerjob": [64, 2333, 2345, 2359, 2372, 2385, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2494, 2502], "(eg": 64, "processpoolexecutor": 64, "record": [64, 1005, 2160, 4810], "bond": [64, 2323, 2349], "discarded": [64, 74, 2323, 2349], "squares": [64, 861, 2323, 2349], "schmidt": [64, 2323, 2349], "coeffients": 64, "inbound": 64, "[{": [64, 5366, 5368], "=shots": [64, 5364], "=parameter": 64, "pulsesimulator": [64, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2862, 5364], "(fakevigo": 64, "\"id": 64, "cx\"": [64, 5237], "methnod": 64, "-local": [64, 270, 441, 600, 725, 1177, 1376, 1377, 1379, 1441, 1443, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 2805, 2889, 5366], "inconsistencies": 64, "-effects": 64, "incrementally": 64, "propagate": 64, "multiplexer": 64, "controls": [64, 228, 229, 258, 262, 263, 264, 343, 344, 345, 399, 400, 429, 433, 434, 435, 514, 515, 516, 558, 559, 588, 592, 593, 594, 673, 674, 675, 798, 841, 970, 975, 1025, 1136, 1137, 1165, 1169, 1170, 1171, 1250, 1251, 1252, 1282, 1302, 1318, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1553, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 2337, 5335], "allocate": [64, 3851, 4206, 5089, 5091], "unneeded": 64, "host": 64, "deterministic": [64, 734], "_expectation": [64, 151, 169, 176, 1948, 2419, 2556, 2569], "wrong": [64, 328, 342, 343, 344, 345, 499, 513, 514, 515, 516, 658, 672, 673, 674, 675, 1235, 1249, 1250, 1251, 1252, 3796, 4494, 4498, 5340], "-chunk": 64, "=k": 64, "qelay": 64, "typo": 64, "_estimation": [64, 69, 105, 2323, 2349], "_repetitions": [64, 2323, 2349], "normalization": [64, 935, 955, 969, 1019, 1049, 1062, 1276, 1331, 1440, 1516, 1785, 1814, 2161, 2232, 2402, 2416, 2430, 2444, 2458, 2472, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2711, 2724, 2737, 2750, 2763, 2776, 4549], "svd": [64, 2323, 2349], "_apply": [64, 2323, 2349], "_pulses": [64, 1641, 3932, 3976], "drawings": [64, 5331, 5333, 5334], "ipykernel": 64, "yahoo": 64, "ticker": 64, "yfinance": 64, "bip": [64, 4964], "-mapper": [64, 4964], "oses": 64, "entire": [64, 4252, 4270, 4508, 4509, 4534, 4535, 4583, 4629, 4630, 5250], "resolution": [64, 104, 1644, 2285, 2842, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 4182, 4922, 4958, 5021, 5102, 5220, 5331], "[bip": [64, 4964], "os": [64, 5339, 5343], "architectures": [64, 4958], "located": [64, 5286, 5287, 5288, 5289], "situations": [64, 877], "evolvedoperatoransatz": [64, 1471], "fidelity": [64, 849, 852, 2873, 3708, 3730, 4705, 4714, 4722, 4726, 4740, 5046, 5217, 5234, 5270, 5274, 5350, 5353, 5367], "nodelist": [64, 4860], "-contiguous": 64, "reindexed": [64, 4922], "differ": [64, 2058, 3812, 5353], "preferences": [64, 3766, 3777, 3791], "disk": [64, 3746, 3750, 3752, 3753, 3791], "$home": 64, "/qiskitrc": 64, "preference": 64, "_save": [64, 3791], "tells": [64, 3791, 4041], "_preferences": 64, "(auto": 64, ".preferences": 64, "_figure": 64, "_upload": [64, 3783, 3794], "figure": [64, 235, 406, 565, 1143, 1550, 3783, 3786, 3790, 3794, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5331, 5332, 5333, 5334, 5338, 5339], "uploaded": [64, 3783, 3794], "asynchronously": [64, 2914, 2923, 2932, 3864], "synchronously": [64, 3783, 3794, 5023], "storage": [64, 4069], "drastically": 64, "/ibm": [64, 3720, 3721, 3725], "-quantum": [64, 3720, 3721, 3725, 5117], "-schemas": [64, 3720, 3721, 3725], "recreating": 64, "volume": [64, 1477, 3720, 4964], "_mitgation": 64, "mit": [64, 5250, 5272], "_pattern": [64, 5250, 5272], "'zsxx": 64, "\\sqrt": [64, 1333, 1354, 1456, 1519, 1522, 2875, 2885, 5350], "{x": [64, 186, 1354, 1450, 1519, 1522, 2001, 3994, 4162, 4193, 4194, 4197, 4198, 4421, 5332], "-aware": [64, 5196], "restriction": [64, 1644, 4182], "quantization": 64, "_passmangers": 64, "targetted": 64, ".bipmapping": 64, "\u300d)": [64, 773, 2323, 2349, 4887, 5347, 5348], "paid": [64, 4964], "scales": [64, 105, 110, 877, 2323, 2349], "badly": 64, "solution": [64, 97, 165, 172, 180, 181, 182, 185, 186, 188, 190, 191, 353, 356, 357, 358, 361, 362, 363, 682, 709, 833, 856, 869, 883, 1393, 2018, 2883, 3932, 3963, 3976, 4964, 4976, 5045, 5133, 5214, 5217, 5338, 5342], "qv": 64, "qv1": 64, "quantumvolume": 64, "_mapped": [64, 4987, 4990, 4991, 4993], "(coupling": [64, 3957, 5355], "fullancillaallocation": [64, 5014, 5090, 5091, 5092, 5355], "enlargewithancilla": [64, 5014, 5084, 5085, 5355], "barrierbeforefinalmeasurements": [64, 4968, 4969, 5355], "(bipmapping": 64, "(checkmap": 64, "(msg": 64, "action": [64, 97, 1388, 1556, 1558, 1586, 1648, 1649, 2177, 3766, 3777, 5077, 5143], "=_": 64, "commutativecancellation": [64, 5012, 5013, 5355], ".initialize": [64, 276, 447, 606, 1183, 5350, 5355, 5364], "(sched": [64, 4032, 4219, 5331], "_discipline": [64, 4829], "_monitor": [64, 5286, 5349], "carriage": 64, "characters": [64, 235, 406, 565, 1143, 3901, 3905, 4363, 4386, 4433, 4463, 4481, 4651, 4743, 5280, 5281], "\\r": [64, 3901], "coded": 64, ".limit": 64, "wave": [64, 165, 172, 1376, 1379, 1503, 2161, 2232, 4191, 4196, 4199, 4200, 4201], "inherets": 64, ".paulilist": 64, "removebarriers": [64, 5164, 5165], "scipyoptimizer": [64, 709, 717, 798, 806, 814, 833, 841, 861, 889, 890, 891, 892, 893, 894, 895, 896], "wrapper": [64, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 861, 868, 876, 887, 895, 903, 911, 3869, 5253, 5257, 5268], "solvers": [64, 189, 4717, 5337], "bfgs": [64, 798, 841], "=callback": [64, 1644], "_successor": 64, "_predecessor": 64, "creates": [64, 266, 437, 596, 919, 932, 942, 952, 965, 979, 981, 995, 1015, 1029, 1031, 1045, 1059, 1173, 1262, 1272, 1287, 1289, 1293, 1296, 1301, 1306, 1308, 1313, 1328, 1437, 1462, 1513, 1764, 1766, 1782, 1795, 1797, 1811, 1824, 1826, 1840, 1842, 1856, 1858, 1872, 1874, 1890, 1892, 2091, 2262, 2323, 2349, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 2870, 2872, 2884, 2936, 4112, 4121, 4130, 4139, 4182, 4887, 5151, 5157, 5193, 5332, 5335], "rzxgate": [64, 296, 467, 626, 1203, 1500, 5080, 5151, 5152, 5157, 5158], "echo": [64, 4025, 5077, 5143, 5157], "exposing": [64, 2285, 5157], "-native": [64, 5157], "wrap": [64, 211, 382, 541, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 1120, 5278, 5362], "choosing": [64, 147, 165, 172, 1456, 1932, 1994, 2885, 4473, 4500, 4901, 5089, 5199, 5214, 5217, 5230], "wrapping": [64, 103, 888, 1953], "\u2524\u2502": [64, 1379, 1468, 5093], "\u2524\u251c": [64, 1376, 1450, 1456, 1537, 1563, 1567, 5361], "_channels": [64, 3963, 3999, 4012, 4037, 5331], "pulsebackendconfiguration": [64, 3718, 3720, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972], "iso": [64, 255, 426, 585, 1162, 3935], ".eye": [64, 5353], "_input": [64, 255, 256, 426, 427, 585, 586, 1162, 1163, 1401, 2282, 2291, 2942, 2951, 2960, 2969, 2977, 2986, 2994, 3003, 3011, 3019, 3027, 3036, 3044, 3053, 3061, 3070, 3078, 3087, 3094, 3103, 3111, 3120, 3127, 3136, 3144, 3153, 3160, 3169, 3177, 3186, 3194, 3203, 3211, 3220, 3228, 3237, 3245, 3254, 3262, 3271, 3279, 3288, 3295, 3304, 3312, 3321, 3329, 3338, 3345, 3354, 3362, 3371, 3379, 3388, 3396, 3404, 3413, 3421, 3430, 3438, 3447, 3455, 3464, 3471, 3480, 3493, 3502, 3511, 3518, 3527, 3535, 3544, 3551, 3560, 3569, 3577, 3586, 3594, 3603, 3610, 3618, 3627, 3636, 3644, 3653, 3660, 3669, 3677, 3686, 3693, 3702], ")\nq": [64, 1501], ".isometry": [64, 181, 186, 357], "(iso": 64, "[:": [64, 4463], "[num": 64, ", epsilon": 64, "=tolerance": 64, "periods": [64, 5077, 5143], "[(\"": [64, 5077, 5143], "_dd": [64, 5077, 5143], "codec": [64, 277, 448, 607, 1184], "alias": [64, 277, 448, 607, 1184, 1644, 2349, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4229, 4241, 4285, 5260], "-evolved": 64, "uccsd": 64, "_guadalupe": [64, 3171, 3180], "flattening": 64, "_children": 64, "gradientdescent": [64, 774, 775, 776, 777, 778, 779, 780], "descent": [64, 693, 761, 773, 798, 849, 877], "qn": [64, 849], "-spsa": [64, 849], "generalization": [64, 97, 1388, 1539, 1542], "fisher": [64, 70, 119, 123, 849, 2001, 2004, 2020, 2021, 2023, 5362], "hessian": [64, 798, 849, 877, 2001, 2007, 2008, 2015, 2016, 2017, 5362], "_order": [64, 877], "ordinary": [64, 1373], "alongside": [64, 2323, 2349], "precondition": 64, "formatting": [64, 5332], "displaytext": [64, 5332, 5354], "neither": [64, 66, 86, 877, 920, 939, 1259, 1342, 1550, 2021, 2023, 4927, 5044, 5096, 5214, 5217, 5292], "subscripts": 64, "(hgate": [64, 1410, 5355], "(label": [64, 2848, 5364, 5370, 5372], "'h": [64, 4229, 4473, 4500, 5332, 5333, 5334, 5354], "'}": [64, 235, 406, 565, 1143, 1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 2909, 2918, 2927, 3723, 3739, 4023, 4033, 4810, 5275, 5281, 5354], "displaycolor": [64, 5332, 5354], "'#": [64, 235, 406, 565, 1143, 4229, 5281, 5331, 5332, 5333, 5334], "eedd": 64, "ff0": 64, "cdkmripplecarryadder": [64, 1392], "classicaladder": 64, "draperqftadder": 64, "equally": [64, 1550], "-sized": [64, 1342, 1373, 1550, 4821], "|a": [64, 1342, 1364, 1373, 1392, 1480, 1530, 4444, 4686, 5350], "_n": [64, 97, 181, 1397, 1398, 1406, 1412, 1475, 2875, 2885, 2887, 5370], "|b": [64, 1342, 1373, 1392, 1480, 5350, 5366], "mapsto": [64, 1378, 1388, 1398, 1406, 1470, 1472, 1475, 1551, 4193, 4197, 4424, 5342], "adder": [64, 1342, 1373, 1392, 1550, 1551, 5149, 5155, 5161], "preparations": 64, "(adder": 64, ".probabilities": [64, 4595], ".keys": [64, 70], ":-": [64, 4463], "rgqftmultiplier": 64, "hrscumulativemultiplier": 64, "2n": [64, 1397, 4354, 4519, 4614], "cdot": [64, 1419, 1483, 1556, 1558, 4463, 4711, 5350], "# b": 64, "multiplier": [64, 1392, 1480], "(multiplier": 64, "(decimals": 64, "_dur": [64, 4008], "(idle": 64, "micro": 64, "(assigned": 64, "_dt": [64, 3930, 5333, 5334], "tooling": 64, "_at": 64, ".utcnow": 64, "isoformat": 64, "five": [64, 1464, 3723, 3739, 5014, 5276], "_bells": 64, "twoqubitbasisdecomposer": [64, 4706, 4707, 4708, 4709, 4710, 4711], "decompositions": [64, 923, 943, 956, 970, 986, 1003, 1004, 1006, 1020, 1036, 1050, 1263, 1277, 1296, 1319, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1374, 1389, 1394, 1401, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1448, 1453, 1459, 1478, 1479, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 4825, 5369], "/pdf": [64, 116, 234, 342, 343, 344, 345, 405, 513, 514, 515, 516, 564, 672, 673, 674, 675, 761, 1142, 1249, 1250, 1251, 1252, 1332, 1336, 1815, 1831, 1847, 1863, 1976, 2162], "exchange": 64, "possibility": [64, 136], "reducing": [64, 4162, 4958], "`pulse": 64, "unknown": [64, 97, 239, 410, 569, 877, 1146, 3707, 3709, 3795, 3811, 3812, 3824, 3843, 4705], "decomposer": [64, 4421], ", euler": 64, "zsx": [64, 4421, 4705], "\"unitary": [64, 2323, 2376, 5364, 5367], "\"swap": 64, "conf": [64, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "(conf": 64, "triv": 64, "unisynth": 64, "=conf": 64, "'xzx": 64, "quasiprobability": [64, 4787, 4796], ".settings": [64, 822], ".user": 64, "location": [64, 1710, 4020, 4026, 5023, 5123], "parsed": [64, 211, 235, 382, 406, 541, 565, 1120, 1143, 3750, 4241, 4298, 5281], "aaronson": [64, 1380, 4354, 4370, 4519, 4595, 4614, 4716], "gottesman": [64, 4354, 4370, 4519, 4595, 4614, 4716], "'value": [64, 5338], "_desc": [64, 5290], "scenarios": [64, 5193], "deadlock": 64, "happening": 64, "environments": 64, "/hanging": 64, "strictly": [64, 4923, 5071, 5123], "informative": 64, "generic": [64, 144, 920, 939, 1050, 1259, 1360, 1362, 1407, 1544, 1547, 4773, 5235], "disables": 64, "dur": 64, "(dur": 64, "-assigned": 64, "phaseoracle": [64, 66, 1463, 1464, 5342, 5343], "-featured": 64, "-simulators": 64, "[full": 64, "evaluation": [64, 69, 75, 101, 118, 120, 123, 147, 151, 165, 169, 172, 176, 181, 186, 251, 252, 357, 422, 423, 581, 582, 877, 896, 1036, 1158, 1159, 1291, 1310, 1458, 1463, 1906, 1916, 1918, 1959, 1966, 1988, 2001, 2002, 2003, 2004, 2005, 2007, 2011, 2015, 2019, 2024, 2028, 2032, 2039, 2050, 2055, 2064, 2075, 2083, 2089, 2095, 2102, 2109, 2117, 2129, 2138, 2150, 2182, 2194, 2198, 2205, 2211, 2218, 2224, 2229, 2231, 2238, 2249, 2255, 2263, 4182, 5338], "looked": [64, 1689], "\u2502\nq": [64, 253, 276, 424, 447, 583, 606, 923, 943, 1036, 1160, 1183, 1355, 1369, 1372, 1374, 1384, 1385, 1386, 1406, 1412, 1448, 1468, 1489, 1494, 1499, 1530, 1586, 5352, 5361], "\u2510 \u2502": [64, 1373, 1480], "\u2518 \u2502": 64, ".qiskitindexerror": 64, "factr": [64, 798], ".l": 64, "eps": [64, 255, 256, 426, 427, 585, 586, 683, 709, 798, 861, 896, 1162, 1163, 5129, 5133], "karg": 64, "ftol": [64, 798, 841, 861, 896], "relationship": [64, 798, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 3963, 5331], ".finfo": 64, "(float": 64, "'l": 64, "consisted": 64, ".basebackend": 64, ".basejob": 64, ".baseprovider": 64, ".backendv": 64, ".jobv": 64, ".providerv": 64, "ease": [64, 2277, 2297], "diverge": 64, "dagdepnode": [64, 1720, 1721, 1725], ".condition": [64, 5355], ".inline": 64, ".pad": 64, "placeholders": [64, 4811, 4812], "tighten": 64, "repeatability": 64, "simplification": 64, "-phase": [64, 136, 1345, 1379, 1412, 1460, 1472], "-tracking": 64, "_dg": [64, 1550], "triviality": 64, "czgate": [64, 229, 400, 559, 1137, 1370, 4299, 4354], "cu": [64, 224, 225, 226, 395, 396, 397, 554, 555, 556, 1132, 1133, 1134, 1352, 1358, 1359, 1361, 1362, 1363, 4229, 5345, 5350, 5372], "mcu": [64, 263, 434, 593, 1170, 1414, 1419], "semantic": [64, 1717, 1721, 1746, 1748, 1750, 1752], "wouldn": 64, "typeerror": [64, 76, 80, 85, 91, 96, 98, 102, 104, 106, 114, 124, 129, 141, 161, 192, 200, 371, 530, 831, 923, 943, 956, 1006, 1036, 1050, 1109, 1263, 1441, 1442, 1465, 1937, 1975, 1977, 1980, 2012, 2016, 2019, 2028, 2039, 2064, 2069, 2084, 2097, 2112, 2153, 2177, 2195, 2311, 3725, 3738, 3739, 3905, 3906, 3930, 3993, 4008, 4297, 4298, 4751, 4773, 4787, 5214, 5217, 5277, 5280], "qelib": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "inc": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244, 5280], "(time": 64, "oracle": [64, 66, 75, 79, 95, 97, 101, 113, 118, 123, 1372, 1388, 1397, 1462, 1463, 1464, 5341, 5342, 5343, 5352], "unset": 64, "_subroutines": 64, "partially": [64, 3723, 3738, 3739, 4836, 4863, 4870, 5331, 5333, 5334], "breakpoints": [64, 1399, 1465, 1466, 1468], "breakpoint": [64, 1466, 1468], "_connected": 64, "_components": [64, 3779, 3781, 3789], ".expectations": 64, "statefunction": 64, "~statefn": [64, 1941, 5361], "@ i": 64, "mcxgraycode": [64, 1420], "mcxrecursive": [64, 1422, 1423], "mcxvchain": [64, 1425, 1426], "cregbundle": [64, 235, 406, 565, 1143, 5281, 5354], ".phaseoracle": [64, 1462], ".evaluate": [64, 181, 357, 5343], "_bitstring": [64, 66, 5343], "agree": [64, 139, 4745, 4767], "affects": [64, 147], "rewritten": [64, 5082], ".gradient": 64, "_wrapper": [64, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 2001], "circumstances": 64, "-z": [64, 920, 939, 1259, 1369, 1517, 1524, 1533, 1535, 1563, 1564, 1565, 1567, 4229, 4363, 4614, 4620, 4624, 4626, 4636, 4637], "asymmetrical": 64, "optimizeswapbeforemeasure": [64, 5355], ".qfi": 64, "lin": [64, 2001, 5362], "_comb": [64, 2001, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 5362], "_full": [64, 2001, 2018, 2021, 2023, 5362], "reversed": [64, 253, 276, 288, 289, 424, 447, 459, 460, 583, 606, 618, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1160, 1183, 1195, 1196, 1274, 1290, 1309, 1329, 1438, 1514, 1526, 1707, 1767, 1772, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 3877, 4393, 4439, 4659, 5341, 5352, 5354], ".runtimejob": [64, 3899], "_message": [64, 3814, 3818], ".parameternamespace": 64, "-complete": 64, "parameternamespace": [64, 3885, 3890, 3923], "-program": [64, 4717], ".iterations": 64, "/public": 64, "_visibility": 64, "filtering": [64, 142, 781, 2315, 2316, 2321, 2322, 2907, 2908, 3482, 3483, 3484, 3485, 3486, 3487, 3705, 3706, 3723, 3725, 3737, 3738, 3739, 3751, 3777, 3779, 3789, 3835, 3880, 4013, 4014, 4232], "queued": [64, 2295, 3719, 3880], "\u300f,": [64, 70, 119, 232, 403, 562, 1140, 1376, 1379, 1381, 1406, 1456, 1466, 1468, 1470, 1503, 1537, 1644, 1722, 1786, 1815, 1899, 1954, 1970, 1982, 2033, 2056, 2070, 2085, 2098, 2113, 2133, 2163, 2178, 2196, 2209, 2221, 2233, 2253, 2798, 2801, 2808, 2848, 3708, 3880, 3905, 4000, 4001, 4013, 4014, 4421, 4463, 4473, 4500, 4705, 5129, 5130, 5178, 5202, 5331], "_esp": [64, 3708, 3730], "flag": [64, 72, 93, 99, 111, 116, 121, 157, 3730, 4219, 4579], "esp": [64, 3708, 3730], "terminal": [64, 3730, 4240], "adoption": 64, ".ibmqjob": 64, ".share": 64, "-length": [64, 4550, 4551], "caps": 64, ".logs": 64, "logs": [64, 3915], "finishes": [64, 240, 347, 411, 518, 570, 677, 1147, 1254, 3796, 3876, 3896, 3909, 3915], "_allowed": [64, 3737], "-client": 64, "websockets": [64, 3766], "-asyncio": 64, "qiskitbackendnotfounderror": [64, 2316, 2317, 2322, 2908, 3484, 3487, 3706], "retrieval": [64, 3723, 3729, 3738, 3739, 3880], "proxies": [64, 3748, 3752, 3766, 3767], "usual": [64, 1458], "urls": 64, ".enable": [64, 3704], "(api": 64, "_token": [64, 3704, 3766], "=proxies": 64, "`max": 64, "lengths": [64, 1644, 4873, 4874, 5226, 5237], "reduces": [64, 2059, 4182, 5175], "slowing": 64, ".analysis": [64, 4722], ".analysisresult": 64, "human": [64, 4354], "avaiable": 64, "_montreal": [64, 3356, 3365], "-simple": 64, "=inputs": 64, "\"job": 64, "enum": [64, 832, 2295, 3795, 5146], ".constants": 64, ".resultquality": 64, "_information": [64, 123, 5359], "sending": [64, 2024], "importantly": 64, "`methods": 64, ".pauli": [64, 5361], "cygate": [64, 228, 399, 558, 1136, 1368], ".sparsevectorstatefn": 64, "_fn": [64, 1934, 1936, 2002, 2004, 2006, 2012, 2016, 2024, 2025, 2028, 2032, 2039, 2054, 2055, 2063, 2064, 2176, 2251, 5361], ".equals": 64, "comparison": [64, 118, 781, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1398, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775, 4148, 4430, 4499, 4645, 4821], "taperedpaulisumop": [64, 2154], "\"multiplexer": 64, "sdist": 64, "buildable": 64, "=math": 64, ".s": [64, 5350, 5367], ".y": [64, 1397, 3932, 3935, 3951, 3963, 3976, 4802, 5133, 5350], "(reversed": 64, ".global": [64, 4239, 4240], "modification": [64, 3923, 4084], "perturbation": [64, 773, 849, 850, 877, 878], "propogate": 64, "snapshotstatevector": [64, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472], "unnormalized": [64, 300, 302, 303, 304, 306, 307, 471, 473, 474, 475, 477, 478, 630, 632, 633, 634, 636, 637, 1207, 1209, 1210, 1211, 1213, 1214, 2517, 2543, 2556, 2569, 2595, 2608, 2778, 2780, 2781, 2782, 2784, 2785, 4193, 4194, 4197, 4198], ".setmatrixproductstate": 64, "-migration": 64, "adapted": [64, 156, 5117], ".aqua": 64, "subroutine": [64, 861, 4000, 4001, 4013, 4014, 4032, 4084, 4086, 4224], "(subroutine": [64, 4032], ".qasmbackendconfiguration": 64, "processor": [64, 3932, 3976, 4946, 4952, 4958, 5021, 5102, 5181, 5220], "\"family": [64, 3932, 3976], ">,": [64, 3932, 3976, 5285], "revision": [64, 3932, 3976], "segment": [64, 3932, 3976], ">}": [64, 3932, 3976], "canary": [64, 3932, 3976], "\"a": [64, 3932, 3976], ".channel": [64, 4037, 5331], "_parameterized": 64, ".setfrequency": 64, "(shift": 64, "(alpha": [64, 4712], "piecewise": [64, 1399, 1465, 1466, 1467, 1468, 1469], "chebyshev": [64, 1465], "polynomial": [64, 156, 180, 1380, 1396, 1465, 1468, 1469, 1470, 1475, 1922, 1930, 2877, 2878, 4299, 5342], "polynomials": [64, 1465, 1468], ".piecewise": [64, 1465, 1468], "_chebyshev": [64, 1465], ".arcsin": [64, 1465], "pw": [64, 1465, 1468], "_approximation": [64, 1465, 2323, 2349, 5369], "(pw": [64, 1465], "(list": [64, 926, 946, 959, 989, 1009, 1039, 1053, 1102, 1266, 1322, 1431, 1465, 1468, 1507, 1775, 1805, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 4487, 5341, 5349], "suited": [64, 877, 1952, 5331, 5333, 5334], "_context": [64, 247, 418, 577, 1154, 4008], "allocated": [64, 240, 411, 570, 1147, 4008, 5083, 5231, 5232], ".instructions": [64, 3993, 4039, 4046], "rabi": [64, 4008, 5356], "_duration": [64, 4219, 5333, 5334], "=alignright": 64, "scanning": 64, "reuse": [64, 1644, 4084, 4900, 4921], "scanned": 64, "_latex": [64, 4380, 4644, 5347], "visualize": [64, 5331, 5333, 5334, 5335], "mat": [64, 4398], "*.": 64, "(mat": [64, 4398], ".latex": [64, 4380, 4644, 5280, 5331, 5333, 5334], "{bmatrix": [64, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637, 5345, 5347, 5372], "tfrac": [64, 5347], "-spheres": 64, "plots": [64, 5284, 5287, 5288, 5289], "dm": 64, "-\\": [64, 143, 145, 1343, 1350, 1389, 1491, 1543, 1544, 1547, 4167, 4197, 4198, 4398, 4421, 4664, 5345, 5350, 5361, 5362, 5368, 5372], "}i": 64, "\\\\": [64, 1339, 1348, 1350, 1360, 1362, 1481, 1483, 1486, 1489, 1491, 1494, 1499, 1542, 1544, 1547, 1556, 1558, 4162, 4229, 4463, 4519, 4614, 4751, 4915, 5178, 5345, 5347, 5348, 5350, 5354, 5368, 5372], "+r": 64, "_rx": 64, "(double": [64, 2323, 2349, 2363, 2376], "_dir": [64, 683, 686, 689], "newly": [64, 5120], "statevectorsimulatorpy": [64, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926], "unitarysimulatorpy": [64, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935], "tqc": 64, "(tqc": 64, "-rotation": [64, 1067, 2000], "booleanexpression": [64, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1462], "~x": 64, "(y": [64, 1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 4706, 4707, 5341, 5343, 5361], ")'": [64, 4915, 5342, 5343], "(expression": [64, 5342, 5343], "_dimacs": [64, 1462, 5343], "formulas": [64, 4819, 4825], "dimacs": [64, 1284, 1462, 1464, 5342, 5343], "-cnf": [64, 5343], "_exp": [64, 5361], "cnf": [64, 1462, 1464, 5342, 5343], "(boolean": 64, "x2": 64, "oracles": [64, 97, 186, 1380, 1388], ".amplificationproblem": 64, "(oracle": [64, 1388, 5342, 5343], "=oracle": [64, 5343], "\u2500o": 64, "basepass": [64, 1644, 4831, 4836, 4863, 4870, 4894, 4895, 4897, 4899, 4916, 4918, 4920, 4941, 5175], "propertyset": [64, 1644, 4900, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4921], "'depth": [64, 4964], "(kerneled": 64, "tensoring": 64, "analogously": 64, ".operator": [64, 4239, 4240, 5361, 5367], ".tensor": [64, 5353, 5361, 5366], "bottom": [64, 334, 505, 664, 1241, 1397, 5331, 5332, 5333, 5334], ".cry": [64, 334, 505, 664, 1241, 1379, 1388], "(top": [64, 334, 505, 664, 1241], "tracking": [64, 1081, 1097, 4139], "_field": 64, "influencing": 64, "lifetime": 64, "persist": 64, "associate": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 2297, 2894, 3993, 4008, 5239, 5244], "-dihedral": [64, 4299, 4311], "qi": [64, 5337, 5339, 5340, 5362, 5364, 5367], "ecrgate": [64, 236, 407, 566, 1144, 1375], "ecr": [64, 236, 407, 566, 1144, 1374, 1375, 4927, 5093], "{\u03c0": 64, "locally": [64, 734, 743, 1371, 4712], "(can": 64, "-/": 64, "-rotations": [64, 1374, 1471, 1983, 1990, 1998, 4139], "merged": [64, 4877, 5120, 5140], "_degree": [64, 1472, 1644, 4901, 5202, 5230], "dial": [64, 1644, 4901, 5230], "approximations": [64, 1926], "discrete": [64, 143, 4182, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201], "implies": [64, 1063, 4802, 5193], "passess": 64, ".checkgatedirection": [64, 4985], "inteded": 64, "cxdirection": [64, 4983, 4984, 5355], "checkcxdirection": [64, 4986, 4987, 5355], "beside": 64, "(this": 64, "parallelism": 64, "launches": 64, "hellinger": [64, 4721, 4722], "distance": [64, 136, 172, 2887, 4721, 4722, 4796, 4839, 4842, 4843, 4847, 4848, 5117, 5290], "gets": [64, 130, 1003, 1102, 1711, 1940, 2484, 2903, 3905, 3993, 4008, 4852, 5147], ".clifford": 64, "selecting": [64, 1640, 4463, 4487], "'ag": 64, "'greedy": 64, "bravyi": [64, 1393, 4370, 4716, 4728, 5369], "-gottesman": 64, "ag": [64, 4716], "rightmost": 64, "analogous": 64, "+-": [64, 1441, 4229], "lr": [64, 119, 683], ".templateoptimization": 64, ".rzxcalibrationbuilder": 64, "calibrated": [64, 849, 877, 4162, 4745, 4767, 5147], ".rzxgate": 64, "stretching": [64, 5151, 5157], "compressing": [64, 5151, 5157], "-cross": 64, "resonance": 64, "_yz": 64, "pairing": 64, "efficent": 64, "took": [64, 5369], "colors": [64, 4896, 4917, 5283, 5287, 5289, 5290, 5291, 5331, 5332, 5333, 5334, 5341], "needing": 64, "separated": [64, 2165, 3760, 3789, 4805], "_styles": 64, "/user": [64, 235, 406, 565, 1143, 5281], "_marginal": [64, 4811, 4812], "serially": 64, "cores": [64, 2323, 2349, 2363, 2376], "(any": 64, "capitalization": 64, "_eq": [64, 1682, 2845, 2858, 2859], "paulifeaturemap": [64, 1451, 1452, 1563, 1567], "adjusting": 64, "rotational": 64, "\\alpha": [64, 113, 1399, 1987, 2867, 5350], "p2": 64, "yzx": 64, "p1": [64, 2845, 2858], "(p": [64, 198, 369, 528, 1107, 1470, 2845, 2857, 2858, 2885, 4463, 4739, 5352, 5355, 5366, 5368], "izxy": 64, "anticommute": [64, 4465, 4489], "anticommutes": [64, 4465, 4489, 4490, 4521, 4616], "conjugation": 64, "prime": [64, 156, 4473, 4500], "piecewisepolynomialpaulirotations": [64, 1469], "amplitudes": [64, 97, 136, 253, 276, 299, 300, 424, 447, 470, 471, 583, 606, 629, 630, 1160, 1183, 1206, 1207, 1388, 1399, 1468, 1470, 1503, 1526, 1586, 1772, 2349, 2504, 2517, 2777, 2778, 2885, 3757, 3763, 3764, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4803, 4807, 4808], ",..": [64, 1468], ",d": [64, 1399, 1468], "among": [64, 133, 682, 877, 1468, 2306, 5178, 5181, 5263], "= \\": [64, 97, 773, 852, 1383, 1384, 1385, 1386, 1388, 1393, 1399, 1466, 1468, 1470, 1486, 1489, 1491, 1494, 1496, 1501, 1519, 1522, 1542, 1552, 1560, 1564, 1586, 2847, 4172, 4182, 4195, 4198, 4335, 4402, 4444, 4715, 4717, 4726, 4740, 4746, 4768, 5178, 5342, 5350, 5362, 5367], "{cases": [64, 1450, 1466, 1468, 4172, 4195, 5342, 5350], "}^": [64, 97, 111, 181, 186, 1372, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1393, 1399, 1450, 1468, 1470, 1472, 1522, 1551, 1934, 1998, 2001, 2871, 4162, 4167, 4172, 4317, 4319, 4334, 4336, 4338, 4353, 4402, 4403, 4405, 4420, 4445, 4447, 4462, 4668, 4670, 4685, 4687, 4689, 4704, 4739, 5332, 5333, 5334, 5342, 5349, 5350, 5362, 5368, 5370], "=d": [64, 1468, 1470, 1786], "}a": [64, 1468], ",i": [64, 1468, 1945], "^n": [64, 1399, 1466, 1468, 2847, 4329, 4348, 4415, 4457, 4463, 4680, 4699, 4747, 4769], "|x": [64, 97, 186, 193, 364, 523, 1378, 1381, 1399, 1406, 1465, 1466, 1468, 1470, 1475, 4229, 5342], "cos": [64, 1074, 1090, 1348, 1350, 1360, 1362, 1378, 1379, 1383, 1406, 1470, 1481, 1483, 1486, 1489, 1491, 1494, 1499, 1544, 1547, 1556, 1558, 4182, 4191, 4706, 4707, 5350], "sin": [64, 69, 1079, 1095, 1350, 1360, 1362, 1378, 1383, 1406, 1470, 1481, 1491, 1544, 1547, 4199, 4200, 4706, 4707, 5350], ".operators": [64, 4513, 4518, 4525, 4529, 4530, 4539, 4540, 4544, 4620, 4624, 4625, 4634, 4635, 4639, 5353], ".process": 64, "_fidelity": [64, 849, 4705, 4720, 5350, 5353, 5367], "-unitary": [64, 214, 385, 544, 1122, 1648, 1886, 2060, 2861], ".state": [64, 5342], ".choi": 64, ".average": [64, 1641, 5367], ".gate": [64, 4946, 4949, 4952, 4955, 5333, 5334, 5356, 5359], ".macro": 64, "macros": 64, "macro": [64, 4008, 4041, 4042], ".measurechannel": [64, 4020, 4043, 4219], ".acquirechannel": [64, 4021, 4219], "\"qubit": 64, "paulitwodesign": [64, 849, 877], "_barriers": [64, 235, 406, 565, 1143, 1376, 1377, 1379, 1388, 1441, 1450, 1456, 1471, 1472, 1503, 1537, 1563, 1567, 4819, 4823, 4825, 5281, 5333, 5334, 5342, 5354], "aliased": 64, "stylesheets": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "iqxstandard": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "iqxsimple": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "iqxdebugging": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "\u2026)": 64, "publication": [64, 5331], "manipulations": 64, "dynamically": [64, 2309, 3932, 3976], "apperance": 64, "reassembling": 64, "showing": [64, 5286, 5288, 5335], "appearance": [64, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 5331, 5333, 5334], "envelopes": [64, 4182], "feed": 64, "stylesheet": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5295, 5307, 5319, 5331, 5333, 5334], "delegated": 64, "reverses": 64, "op1": 64, "'none": [64, 2112, 5230], "rvgate": [64, 290, 461, 620, 1197, 1484, 1485], "rv": [64, 290, 461, 620, 1197, 1483], "euler": [64, 1544, 1547, 4241, 4421, 4422, 4423, 4547, 4551, 4705, 4712, 5134], "magnitude": [64, 849, 850, 877, 878, 4182, 4570], "radians": [64, 193, 290, 364, 461, 523, 620, 1102, 1197, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1483, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 4046, 4052, 4054, 4121, 4139, 4264, 4546, 5239, 5244, 5285, 5294], "rgate": [64, 282, 453, 612, 1189, 1383, 1482], ".cos": 64, ".rv": 64, "sorted": [64, 97, 217, 388, 547, 1125, 1730, 1731, 1739, 1741, 2011, 2015, 2016, 2019, 2022, 2165, 3779, 3789, 3905, 4491, 4513, 4522, 4539, 4617, 4634, 4725, 4839, 4922, 5290, 5295, 5307, 5319, 5341], "/assign": 64, "(parameter": 64, "+\\": [64, 1360, 1362, 1389, 1542, 1543, 1544, 1547, 4229, 4389, 4421, 4655, 5350, 5361, 5362, 5368], "_casablanca": [64, 3138, 3147], "_sydney": [64, 3588, 3597], "_lima": [64, 3273, 3282], "_belem": [64, 3021, 3030], "_quito": [64, 3496, 3505], "(ie": 64, "unassigneddurationerror": [64, 4221], "scripts": 64, "(including": 64, "qc1": [64, 970], "superpositions": 64, "qc2": [64, 970], "'p']": 64, "penalty": [64, 1706], "simplifying": [64, 2057], "basicaerjob": [64, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2914, 2923, 2932], "seperate": 64, "futures": 64, ".threadpoolexecutor": 64, ".processpoolexecutor": 64, "_measuring": 64, "reflect": [64, 97], "sure": [64, 1644, 2282, 2808, 3718, 4900, 4921, 5341], "commutative": [64, 5233, 5234], "unsound": 64, "corrupt": 64, "hash": [64, 4086], "structural": 64, "(qc2": 64, ".fakeopenpulse": 64, ".interactive": 64, "interactive": [64, 235, 406, 565, 1143, 3704, 3754, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 5281, 5354], "iplot": 64, "_multivector": [64, 4380, 4644, 5349], "_city": [64, 4644, 5348, 5349, 5364], "_qsphere": [64, 4380, 4644, 5349], "_hinton": [64, 4380, 4644, 5349], "_paulivec": [64, 4644, 5349], "comparing": [64, 4282, 5051], "absence": 64, "words": [64, 4282, 4915, 4958], "(qiskit": [64, 3737, 5350], "suppress": 64, "_packaging": 64, "_warnings": 64, "_suppress": 64, ".dagnode": [64, 5355], "castable": 64, "unambiguous": 64, "unclear": 64, "why": [64, 118, 5369], ".dagdependency": 64, "unreliable": 64, "-enable": 64, "april": 64, "9th": 64, "(kwargs": 64, "_'": [64, 1644, 4900, 4921], "(callback": 64, ".pulsechannel": 64, "classify": [64, 4075], "instantiating": [64, 1417], "_cp": [64, 4714, 4720, 4726], "_tp": [64, 4714, 4720, 4726], "-cp": [64, 4714, 4720, 4726], "-tp": [64, 4714, 4720, 4726], "tensors": [64, 5250, 5272], "eliminate": [64, 3905], "potentical": 64, "cryptic": 64, "vice": [64, 288, 459, 618, 1195, 1389, 1937], "versa": [64, 288, 459, 618, 1195, 1937], "rename": 64, "resolve": [64, 1987, 5023], ".assemble": [64, 3838, 3864], ".sequence": 64, "imports": [64, 5362], ".quaternion": 64, "submodule": 64, ".mcmt": 64, "-control": [64, 1407, 1410], "-target": [64, 1407, 1410], "(mcmt": 64, ".diag": 64, ".ucy": 64, "ucry": [64, 344, 515, 674, 1251], "mirroring": 64, "confused": 64, "swapping": [64, 1937, 2323, 4389, 4655], "samplepulse": 64, "constantpulse": 64, "(module": 64, "_lib": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "_waveform": [64, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4182, 4183, 4188, 5331], "/a": 64, "acquires": [64, 4218, 5146], "held": 64, "edges": [64, 1387, 1654, 1662, 1674, 1705, 1722, 1725, 1733, 1734, 1735, 1738, 2867, 4195, 4839, 4847, 4848, 4849, 4852, 4855, 4924, 5123, 5214, 5332, 5341], "hold": [64, 66, 86, 822, 1937, 1953], "'wire": 64, "'name": [64, 235, 406, 565, 1143, 5281], "albeit": 64, "acquired": 64, "sharing": [64, 3730, 3838, 4973], "subgroup": 64, "relaxed": 64, "acquisition": [64, 2286, 2287, 2964, 2965, 2981, 2982, 2998, 2999, 3006, 3007, 3014, 3015, 3031, 3032, 3048, 3049, 3065, 3066, 3082, 3083, 3098, 3099, 3115, 3116, 3131, 3132, 3148, 3149, 3164, 3165, 3181, 3182, 3198, 3199, 3215, 3216, 3232, 3233, 3249, 3250, 3266, 3267, 3283, 3284, 3299, 3300, 3316, 3317, 3333, 3334, 3349, 3350, 3366, 3367, 3383, 3384, 3391, 3392, 3408, 3409, 3442, 3443, 3459, 3460, 3475, 3476, 3506, 3507, 3522, 3523, 3539, 3540, 3564, 3565, 3581, 3582, 3598, 3599, 3631, 3632, 3648, 3649, 3664, 3665, 3681, 3682, 3697, 3698, 3963, 3964, 4041, 4075, 4218, 4219, 5021, 5102, 5143], "acquisitions": 64, "acq": 64, "disjointly": 64, "aren": [64, 285, 456, 615, 1192, 4927, 5259], "'t": [64, 1377, 4229, 5123, 5332, 5333, 5334, 5354], "grouping": [64, 850, 878, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 2112, 2153, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3963], ".semantic": [64, 1682], "mappings": [64, 211, 382, 541, 1120, 1667, 3417, 5123], ".channels": [64, 3994], "subsumed": 64, "clasess": 64, "combine": [64, 76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 210, 381, 540, 831, 1119, 1970, 2024, 2025, 2032, 2055, 2063, 3870, 4882, 5253, 5362], "composing": [64, 211, 382, 541, 1120, 1939, 1976, 1978, 4915, 5355], "/clbits": 64, ".cz": [64, 5342, 5350], "_different": 64, "_regs": 64, "_same": 64, ".instructiondurations": 64, "invoking": [64, 3824, 3899], ".parameterizedschedule": 64, "parameterize": [64, 335, 336, 506, 507, 665, 666, 1067, 1242, 1243, 1648, 1649], ", inplace": [64, 198, 369, 528, 1107], "schedulecomponent": 64, "documenting": 64, ".qasmqobj": 64, "recieve": 64, "truth": [64, 1296, 1311, 1380], "bundled": 64, "behaves": 64, "identically": [64, 147], "transforming": [64, 2890], "choi": [64, 4316, 4324, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4410, 4452, 4675, 4694, 4714, 4717, 4720, 4726, 4735], "_update": [64, 3935], "discard": [64, 2323, 2349, 2889, 4463, 4519], "intersection": [64, 5011, 5129, 5134], "issubset": 64, "issuperset": 64, "_difference": 64, "_isub": 64, "_ixor": 64, "(values": [64, 5338, 5362], "(param": [64, 5367], "_bind": 64, "pv": 64, "[..": 64, ".]": [64, 2808, 2889, 4229, 4389, 4655, 5341, 5361, 5366], ", pv2": 64, ".]}": 64, "pulseqobjinstruction": [64, 3954, 4246, 4258, 4265, 4266], "sampled": [64, 849, 877, 904, 1926, 1927, 1934, 2165, 2166, 2167, 2168, 2170, 2201, 2214, 2226, 2244, 2258, 2267, 2272, 2323, 2349, 4182, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4394, 4395, 4608, 4609, 4660, 4661, 4728, 4731, 4737, 4738, 5361, 5366], "occurring": 64, "visualizing": [64, 235, 406, 565, 1143, 5281], ".csplayout": 64, "bias": [64, 693], "towards": [64, 147, 165, 172, 693, 734, 5023], "observed": [64, 70, 119, 1987, 2161, 2162, 2232, 4811], "undesireable": 64, "shuffling": [64, 5214, 5217], "candidates": [64, 5047], "randomize": 64, ".pulsebackendconfiguration": 64, "'circular": [64, 1537], ".nlocal": 64, "accidentially": 64, "{num": 64, ".permutation": 64, ".quantumvolume": 64, "_permutation": [64, 1477], "<original": [64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "<ctrl": [64, 970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "stands": [64, 1376, 1940], "causes": [64, 4139], "<base": 64, ">-": 64, ".>": 64, "[-<": 64, "pid": 64, ">]": [64, 2167, 4196, 4201, 5285], "incremented": 64, "<pid": 64, "inproperly": 64, "_wires": [64, 235, 406, 565, 1143, 5281, 5356], "honored": 64, "(either": 64, "honors": 64, "refers": [64, 235, 406, 565, 1143, 5281], "ancillas": [64, 193, 239, 255, 256, 262, 264, 364, 410, 426, 427, 433, 435, 523, 569, 585, 586, 592, 594, 1102, 1146, 1162, 1163, 1169, 1171, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1417, 1421, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "\u2500\u252c": [64, 211, 382, 541, 1120, 1348, 1350, 1352, 1371, 1410, 1503, 1537, 5093, 5140, 5352, 5354, 5361, 5362], "(user": 64, "=cost": 64, "improperly": 64, "formatted": [64, 84, 90, 128, 152, 170, 177, 277, 448, 607, 1184, 3732, 3761, 3982, 4751, 4806, 5276, 5319], "subcircuit": [64, 1006, 1263, 1388, 5018], "mismatch": [64, 2265, 2267, 2269, 2333, 2359, 2372, 2385], "timesteps": 64, "converts": [64, 203, 278, 374, 449, 533, 608, 1112, 1185, 1923, 1926, 1928, 1932, 1936, 1946, 1995, 2122, 2879, 2880, 3927, 4254, 4272, 4287, 4508, 4509, 4534, 4535, 4550, 4551, 4583, 4584, 4629, 4630, 4885, 5054, 5277], "/mock": 64, "'cx": [64, 1537, 3990, 5367], "id'": 64, "kinds": [64, 119, 1342, 4552], "mpi": [64, 2323], "_conan": 64, "=`": 64, ")s": [64, 186, 5355], "bypassing": 64, "conan": 64, "official": 64, "findable": 64, "-installed": [64, 235, 406, 565, 1143, 5281], "_dependency": 64, "superoperator": [64, 2323, 4316, 4335, 4402, 4444, 4667, 4686, 5366], "documents": 64, "superceds": 64, "aerprovider": [64, 2321, 2322], "preconfigured": 64, "\"aer": 64, "_extended": [64, 5364], "\"extended": [64, 2323, 2349, 5364], "_sampling": [64, 761, 2323, 2349, 5369], "slower": 64, "metropolis": [64, 2323, 2349], "resampled": [64, 2323, 2349], "_metropolis": [64, 2323, 2349], "gives": [64, 1711, 1891, 1948, 1983, 2271, 2274, 2323, 2337, 2349, 3704, 4828, 5267, 5331, 5333, 5334], ".savedensitymatrix": [64, 2403], ".savematrixproductstate": 64, ".savestabilizer": [64, 2445], ".savestate": 64, ".savestatevector": [64, 2459], ".savestatevectordict": 64, ".saveunitary": 64, "snapshotdensitymatrix": [64, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416], "snapshotstabilizer": [64, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458], ".saveexpectationvalue": [64, 2417], ".saveexpectationvaluevariance": [64, 2417], "tr": [64, 2887, 4714, 4715, 4719, 4720, 4726, 4727, 4740, 5364], "[h": 64, "\\rho": [64, 4316, 4335, 4389, 4393, 4402, 4424, 4444, 4667, 4686, 4715, 4723, 4726, 4727, 4740, 5347, 5348, 5349, 5368], "variance": [64, 304, 324, 325, 475, 495, 496, 634, 654, 655, 1211, 1231, 1232, 1985, 1988, 1991, 1996, 1999, 2166, 2167, 2417, 2431, 2569, 2782, 5364], "var": [64, 765, 769, 2167, 5339], "(h": [64, 1960, 2041, 2140, 5337, 5361, 5362], "_variance": [64, 324, 495, 654, 1231, 2569], "snapshotexpectationvalue": [64, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430], ".saveprobabilities": [64, 2431], ".saveprobabilitiesdict": [64, 2431], "-basis": [64, 1934, 1998, 5211, 5345, 5372], "simualtor": [64, 2634], "snapshotprobabilities": [64, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444], ".saveamplitudes": 64, ".saveamplitudessquared": 64, "squared": [64, 300, 471, 630, 1207, 2517, 2778], "_amplitudes": [64, 5339], "_squared": [64, 2517], ".setdensitymatrix": 64, ".setstabilizer": 64, ".setstatevector": 64, ".setunitary": 64, "urllib": 64, "appleclang": 64, "apple": 64, "pybind": 64, "_mixing": [64, 2323, 2349, 5369], "clarify": 64, "whih": 64, "\"method": 64, "\"noise": 64, "\"sx": 64, "stateopset": 64, ".hp": 64, "\"csx": 64, "\"cu2": 64, "\"cu3": 64, "_internal": 64, ".cpp": 64, "reaching": 64, "turn": [64, 1673, 1732, 4722, 4844, 4896, 4917, 5283], "shouldn": 64, "reporting": [64, 5226], "copying": [64, 1953], "assumption": [64, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367], "_controller": [64, 4834, 4836, 4861, 4863, 4868, 4870, 4895, 4899, 4916, 4920], ".this": 64, "_sorted": 64, "_ordering": 64, "_using": 64, "\u300cextended": 64, ".expval": 64, "_mitigator": 64, "ctmp": 64, "{n": [64, 97, 1382, 1383, 1384, 1385, 1386, 1393, 1396, 1450], "(where": 64, ".randomized": 64, "_benchmarking": 64, "_seq": 64, ".cnotdihedral": 64, "randomized": [64, 725, 743, 1477, 4733, 5190], "benchmarking": [64, 4299, 4311], "-learn": 64, "discriminators": [64, 3963, 3973, 4264], "iqdiscriminationfitter": 64, "lineariqdiscriminationfitter": 64, "quadraticiqdiscriminationfitter": 64, "sklearniqdiscriminator": 64, "[iq": 64, "tensoredexpvalmeasmitigator": 64, "ctmpexpvalmeasmitigator": 64, "\"auto": 64, "tomographyfitter": 64, "statetomographyfitter": 64, "processtomographyfitter": 64, "\"cvx": 64, "-party": [64, 1387], "sdp": [64, 4717], "scs": 64, "accuracy": [64, 69, 115, 186, 193, 364, 523, 717, 798, 849, 896, 1399, 1970, 1974, 1976, 1978, 1979, 4241], "-positive": [64, 88, 4324, 4325, 4329, 4343, 4344, 4348, 4410, 4411, 4415, 4452, 4453, 4457, 4675, 4676, 4680, 4694, 4695, 4699, 4714, 4720, 4726], "fails": [64, 1316, 1317, 3890, 4966], "sooner": 64, "publishes": 64, "onwards": 64, "reported": [64, 4958, 4964, 5003, 5226, 5359], "qiskitrc": 64, "\u300f.": [64, 232, 274, 277, 403, 445, 448, 562, 604, 607, 1140, 1181, 1184, 1381, 1722, 2798, 4229, 4421, 4463, 4875, 5196, 5274, 5286, 5290], ".reference": 64, "referencecircuits": 64, "(referencecircuits": 64, ".bell": 64, "hub": [64, 3704, 3723, 3730, 3739, 3748, 3749, 3751, 3752, 3766, 3769, 3782, 3789, 3793, 3811, 3817, 3830, 3838], ".ibmqbackendservice": 64, "listing": [64, 3992], "owner": [64, 3728, 3782, 3789, 3793], "server": [64, 822, 3718, 3721, 3722, 3723, 3725, 3727, 3730, 3733, 3734, 3738, 3739, 3741, 3748, 3752, 3766, 3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794, 3796, 3799, 3807, 3809, 3810, 3812, 3813, 3814, 3818, 3822, 3823, 3825, 3837, 3849, 3850, 3862, 3863, 3865, 3881, 3882, 3883, 3884, 3896, 3909], ".experimentservice": 64, "exclude": [64, 3789, 4000, 4013], "_mine": [64, 3789], "mine": [64, 3789], "_only": [64, 269, 440, 599, 1176, 3789], "operational": [64, 3705, 3718, 3732, 3737, 3943, 3944, 3951], "paused": 64, "picklable": 64, ".services": 64, ".service": [64, 3704], ".reservations": 64, "reservation": [64, 3728, 3833], "reservations": [64, 3728, 3740, 3833], "proxy": [64, 3748, 3752, 3766], "protocols": 64, "deafult": 64, "(sigular": 64, "\u300cthe": 64, "-way": [64, 1000, 1537], "ibmqrandomservice": 64, "aliases": [64, 4229, 4241], ".topological": 64, "_codes": 64, "depdendency": 64, "depdency": 64, "incompatibility": 64, "operates": [64, 4001, 4014, 4112, 4121, 4130, 4139, 4264, 4282, 4811, 4973], "4xgate": 64, ":\u300f": [64, 3905, 5331], ".mcxgate": 64, "`,": [64, 4922, 5331], "preserving": [64, 1379, 4193, 4197, 5163], ".frequency": [64, 5357, 5359], "compensate": [64, 4039], "repeat": [64, 275, 286, 446, 457, 605, 616, 932, 952, 965, 981, 995, 1015, 1031, 1045, 1059, 1182, 1193, 1272, 1289, 1308, 1328, 1377, 1437, 1513, 1766, 1782, 1797, 1811, 1826, 1842, 1858, 1874, 1892, 1974, 1976, 1978, 1982, 2323, 2349, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773, 5023, 5117], "propagated": 64, "multiplying": [64, 849, 877, 1909, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2119, 2132, 2153, 2177, 2220, 2252], "builtin": [64, 4589], "defition": 64, "]^": [64, 2167, 4740, 4747, 4769], "(type": [64, 5338], "<class": [64, 4946, 4949, 4952, 4955], "'>": [64, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3832, 3909, 3926, 4829, 4834, 4861, 4868, 4946, 4949, 4952, 4955], "thrown": [64, 2323, 2349, 2363, 2376], "4x": [64, 1335, 1338, 2875, 2876, 2877, 2878, 2884, 4229], "subtraction": [64, 1398], "negation": [64, 1909], "_evolve": 64, "lacking": 64, "avx": 64, "\u300csx": 64, "\u300d`": [64, 4923], "born": [64, 1926], "openheimer": 64, "surface": [64, 1987, 5331], "degrees": [64, 5207, 5294], "bopessampler": 64, "functionalities": [64, 2349], "analytic": [64, 683, 693, 773, 849, 4162, 4192], "potentials": 64, ".some": 64, "attention": 64, "_svm": 64, "qp": 64, "_solver": [64, 362, 849, 877], "reshape": [64, 2823, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700], "shape": [64, 1710, 3761, 4157, 4162, 4167, 4172, 4182, 4249, 4264, 4335, 4402, 4424, 4463, 4487, 4519, 4614, 4686, 4806, 5331], "addresses": 64, "qsvm": 64, "_letter": 64, "_symbol": [64, 5331, 5333, 5334], "vartype": 64, "docplex": [64, 4964], ":meth": [64, 3993, 4000, 4013], "`~": 64, "_fns": [64, 1948, 2024], ".dictstatefn": 64, ".sample": [64, 5341, 5369], "aquaerror": [64, 70], "`qiskit": 64, ".circuitsampler": 64, "_opflow": 64, "restricting": 64, "cusom": 64, "rotations": [64, 147, 693, 1379, 1381, 1399, 1406, 1450, 1456, 1466, 1468, 1470, 1472, 1480, 1499, 1501, 1503, 1526, 1539, 1542, 1815, 1831, 1847, 1863, 1934, 1940, 4421, 4547, 5235], "-root": [64, 1517, 1524, 1533, 1535], "-correct": 64, "gr": [64, 1384, 1385], "grx": 64, "gry": 64, "grz": 64, "act": [64, 136, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 1249, 1250, 1251, 1252, 1392, 1441, 1444, 1682, 1943, 4996, 4999, 5003, 5006], "(gr": 64, "-plane": [64, 1383], "\\phi": [64, 136, 145, 224, 226, 338, 340, 341, 395, 397, 509, 511, 512, 554, 556, 668, 670, 671, 1132, 1134, 1245, 1247, 1248, 1360, 1379, 1399, 1450, 1458, 1542, 1544, 1547, 4121, 4139, 4191, 4196, 4199, 4200, 4201, 5345, 5350, 5361, 5372], "-axis": [64, 1384, 1385, 1386, 5290], "website": 64, "schemes": [64, 2018], "ways": [64, 904, 4463, 4487, 5137], "heading": 64, "enter": [64, 912, 2867, 4031], "_color": [64, 4239, 4240, 5287, 5289, 5332, 5341], "contrasting": 64, "gatetextcolor": [64, 5332, 5354], "fa7": [64, 5332, 5333, 5334], "=style": [64, 5331, 5333, 5334, 5354], "coordinate": [64, 781, 4008, 4026, 4206, 5285], "-th": [64, 877, 1468, 1470, 2265, 2269, 2271, 2274, 5231, 5232], "executions": 64, ".backendconfiguration": 64, "repetition": [64, 162, 1444, 1448, 1450, 1567, 3932, 3963, 3976], "_configuration": [64, 2909, 2918, 2927], "maximal": [64, 92, 849, 877, 1644, 4901, 5193, 5230], "besides": [64, 5362], "go": [64, 3896, 4241, 4398, 4664], "typed": [64, 5275], "refering": 64, "(registerless": 64, "(grover": 64, "synthesizing": [64, 5137], "-sensitive": 64, "ns": [64, 186, 232, 403, 562, 1140, 1644, 2808, 2848, 2851, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4958, 5331, 5359], "padded": [64, 1943, 4225, 4774, 4788], "fakeathens": [64, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996], "=fakeathens": 64, ", scheduled": 64, "fuction": 64, "executable": [64, 912], "pad": [64, 1943, 4045, 4225], "groveroperator": [64, 97, 5342], "amplification": [64, 66, 67, 68, 69, 92, 97, 98, 99, 110, 118, 1388, 5342], "/estimation": 64, "generalize": 64, "pop": [64, 3989, 4229, 4761, 4782, 4797, 4910, 5302, 5314, 5326, 5355], "numerical": [64, 179, 186, 709, 717, 806, 861, 896, 2018, 4026, 5280], "/called": 64, "linearamplitudefunction": [64, 1400], "taylor": [64, 1399, 1400], "monospaced": 64, "font": [64, 4239, 4240, 5287, 5289, 5332], "courier": 64, "fonts": 64, "'psx": 64, "pgate": 64, "removeresetinzerostate": [64, 357, 5173, 5174, 5355], "(passmanagerconfig": 64, "flowlinear": 64, "dowhile": 64, ".remove": [64, 5343], "-normal": 64, "multivariate": 64, "central": [64, 763, 1458, 1945], "rxtheta": 64, "(rxgate": [64, 4922, 5353], "registered": [64, 1648, 1649, 4232, 4834, 4838, 4861, 4865, 4868, 4872, 4900, 4921], ", pulse": 64, "q1": [64, 1397, 5359], "disassembly": 64, ".disassemble": 64, "disassemble": [64, 918], "scheds": 64, "(qobj": [64, 2473, 2487, 4254, 4272, 4287], "coord": [64, 5285], "positioning": [64, 4915], "'cartesian": [64, 5285], "'spherical": 64, "[r": 64, "radius": [64, 761, 768], "inclination": [64, 5285], "azimuth": [64, 5285], "cartesian": [64, 5285], ",y": [64, 5033], ",z": 64, "spherical": [64, 5285], "\u237a'": 64, "\u03d5'": 64, "sigma": [64, 1483, 4008, 4094, 4162, 4167, 4172, 4192, 4193, 4194, 4195, 4197, 4198, 4519, 4614, 5356, 5357, 5358, 5362], "=amp": [64, 4008, 5357], "numberofqubits": 64, ".msgate": 64, "3gate": [64, 226, 341, 397, 512, 556, 671, 1134, 1248, 1539, 1542, 4059], "onward": 64, "hamiltonian": [64, 88, 89, 103, 104, 105, 107, 109, 143, 147, 151, 155, 163, 165, 169, 172, 176, 180, 186, 193, 246, 364, 417, 523, 576, 904, 1153, 1753, 1759, 1770, 1771, 1948, 1949, 1987, 2155, 2337, 2862, 2867, 3963, 4577, 4579, 5341, 5362], "vars": 64, "dictonary": 64, "ctl": 64, "tgt": 64, "_initializer": 64, "diaggate": 64, "ucg": 64, "ucrot": 64, "ucx": 64, "ucy": 64, "ucz": 64, "alternatives": 64, "iden": 64, "refactoring": 64, "parms": 64, "hierarchy": [64, 1380, 3945], "\"{": [64, 5262], ".gms": 64, "msbasisdecomposer": 64, ".basistranslator": 64, "= p": [64, 4463, 5350], "= u": [64, 5350], "emit": [64, 4241, 5261], "fetch": 64, "failures": [64, 869, 3796, 3854], "disallow": 64, "qarg": [64, 232, 403, 562, 1140, 1706, 4923, 4935, 4938, 4939], "populate": [64, 920, 939, 1259, 4923], "_frequent": 64, "descriptive": 64, ".controlledgate": [64, 1025, 1282, 1302, 1760, 1791, 1820, 1836, 1852, 1868], "appearence": 64, "sheet": [64, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "sxdg": [64, 331, 502, 661, 1238, 1521, 1522, 1523, 5332, 5333, 5334], "mismapped": 64, "/decomposing": 64, "numerous": [64, 5331, 5332, 5333, 5334], "enhancements": 64, "drops": 64, "simd": 64, ".ugate": 64, ".phasegate": 64, ".cphasegate": 64, ".mcphasegate": 64, ".sxgate": 64, "rygate": [64, 293, 464, 623, 1200, 1385, 1456, 1492, 1493, 1537, 1587, 1589], "rxxgate": [64, 292, 463, 622, 1199, 1382, 1427, 1490], "ryygate": [64, 294, 465, 624, 1201, 1495], "\"mcr": 64, "\"mcrx": 64, "\"mcry": 64, "\"mcrz": 64, "persistant": 64, "ibmqbackend": [64, 3705, 3711, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3737, 3796, 3838, 3851, 3864, 4827, 5288], ".qasmsimulator": 64, "benefit": 64, "armonk": [64, 2337], ".pulsesimulator": [64, 2337], "(fakearmonk": [64, 2337], "(schedules": [64, 2337], "=armonk": [64, 2337], "demonstrated": 64, "usability": 64, "-flows": 64, "semantics": [64, 3993, 4008, 5163], "\u300cstatevector": 64, "\u300cdensity": 64, "avoiding": 64, "qauntumerror": 64, ".snapshotdensitymatrix": 64, "vectorization": [64, 4444], "roughtly": 64, "integration": [64, 1081, 1097, 4035, 4057, 4058, 4059, 4060], "haves": 64, "lapack": 64, "openblas": 64, "dsitributions": 64, "thresholds": 64, "(fusion": 64, "\"rx": [64, 4930, 5237], "\"u": [64, 2862], "\"p": 64, "statistics": 64, "-processing": [64, 75, 79, 95, 101, 113, 119, 123], "/avx": 64, "iterating": [64, 5175], "halve": 64, "_expval": [64, 5339], "controller": [64, 4835, 4836, 4837, 4838, 4862, 4863, 4864, 4865, 4869, 4870, 4871, 4872, 4895, 4916, 5222], "_execute": 64, "wrappers": 64, "functors": 64, ".pool": 64, ".map": 64, "throws": 64, "interleaved": 64, "_elem": 64, "scalarop": [64, 4463, 4519, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567], "_operator": [64, 66, 83, 84, 86, 127, 128, 132, 135, 153, 171, 178, 1388, 1471, 2177, 2195, 3723, 3738, 3739, 3779, 3789, 4299, 4354, 4376, 4463, 5337, 5340, 5341, 5342], "adjoint": [64, 254, 289, 425, 460, 584, 619, 1161, 1196, 1755, 1762, 1881, 1888, 1900, 1955, 1970, 2026, 2034, 2071, 2086, 2099, 2114, 2134, 2164, 2179, 2197, 2210, 2222, 2234, 2254, 4300, 4317, 4336, 4355, 4403, 4425, 4445, 4464, 4488, 4520, 4553, 4569, 4615, 4668, 4687, 5361], "conjugate": [64, 186, 709, 833, 896, 1073, 1089, 1759, 1885, 1900, 1955, 2026, 2034, 2071, 2086, 2099, 2114, 2134, 2179, 2197, 2210, 2222, 2234, 2254, 4302, 4317, 4319, 4336, 4338, 4357, 4377, 4403, 4405, 4427, 4445, 4447, 4468, 4495, 4526, 4555, 4572, 4596, 4621, 4641, 4668, 4670, 4687, 4689, 5362], "transpose": [64, 1770, 1896, 1900, 1955, 2026, 2034, 2071, 2086, 2099, 2114, 2134, 2179, 2197, 2210, 2222, 2234, 2254, 4315, 4334, 4353, 4375, 4420, 4443, 4462, 4486, 4517, 4543, 4567, 4594, 4638, 4685, 4704], "_cnotdihedral": 64, "_general": 64, "tensored": [64, 334, 505, 664, 1241, 2063, 2067, 5268, 5272], "continuous": [64, 869, 904, 1466, 1468, 2337, 4159, 4164, 4169, 4174, 4184, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201], "markov": [64, 1401, 1526], "calibrating": 64, "fitted": 64, ".expvalmeasmitigatorfitter": 64, "fitter": [64, 5253, 5268, 5271, 5272], "sheldon": 64, "kandala": [64, 877], "mckay": 64, "jm": 64, "gambetta": [64, 4162, 4192, 4299, 4311], "mitigating": [64, 5077, 5143], "-ph": [64, 69, 92, 97, 110, 115, 116, 118, 156, 234, 342, 343, 344, 345, 405, 513, 514, 515, 516, 564, 672, 673, 674, 675, 1142, 1249, 1250, 1251, 1252, 1332, 1336, 1342, 1373, 1388, 1458, 1472, 1479, 1526, 1550, 1815, 1831, 1847, 1863, 1976, 4316, 4335, 4354, 4370, 4402, 4444, 4519, 4595, 4614, 4667, 4686, 4716, 4717, 4728, 4819, 4825, 5342, 5370], "'tensored": 64, "_assignment": 64, "expval": [64, 4383, 4601, 4648, 4750, 4768, 4770, 4772, 4787], "_nomit": 64, ":.": [64, 5338, 5339, 5340], "2f": [64, 5331], "u0": 64, "_mit": 64, "=mitigator": 64, "numba": 64, ".ctmpexpvalmeasmitigator": 64, "_volume": [64, 3737], ".qvfitter": 64, ".calc": 64, "deviation": [64, 84, 90, 128, 147, 150, 165, 168, 172, 175, 179, 849, 851, 877, 879, 2936, 4192, 4193, 4194, 4195, 4197, 4198, 4743, 4747, 4750, 4769, 4772, 4787], "assigns": [64, 4746, 4768], "_confidence": 64, "hmean": 64, ".qv": 64, "_success": 64, "explanations": 64, "binomial": 64, "_statistics": 64, "_qv": 64, "-sigma": 64, "-sided": 64, "%)": 64, "identification": 64, "figsize": [64, 5284, 5285, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5349], "_hop": 64, "_accumulative": 64, "hop": [64, 4856], "vs": [64, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136], "trials": [64, 5190, 5214, 5250], "scatters": 64, "cummulative": 64, "red": 64, "shaded": 64, "area": [64, 4193], "dashed": [64, 1479], "_trial": 64, "histograms": 64, "hollow": 64, "filled": [64, 4159, 4164, 4169, 4174, 4179, 4184, 4896, 4917, 5142, 5145, 5236, 5283, 5331], "legend": [64, 5290, 5349, 5364, 5369], "median": [64, 2323, 2349], "rand": [64, 743], "_seed": [64, 683, 761, 849, 877, 5337, 5338, 5339, 5340, 5341], "bosonic": 64, "vibronic": 64, "driver": [64, 4255, 4273], "factory": [64, 147, 165, 172, 1951, 1952, 1981, 1982, 1993, 1994, 3704, 3744, 4182], "warm": [64, 147], "tuning": 64, "solved": [64, 103, 2883, 5214, 5217], "goes": 64, "bernoulli": 64, "-experiment": 64, "amplitudeestimation": [64, 70, 71, 72, 73, 74, 75], "(probability": 64, "(angle": 64, "_preparation": [64, 66, 73, 86, 104, 116, 117, 137, 138, 1388, 5342], "=a": 64, "qae": [64, 69, 72, 74, 92, 93, 110, 111, 118, 121], "ae": 64, "cvar": [64, 1987, 1988, 1989, 2162, 2165, 2166, 2167, 2168], "achieve": [64, 180], "emphatically": 64, "-smooth": [64, 1987], "smooth": [64, 1987, 4195], "fraction": [64, 1987, 2162], "accomplishes": [64, 1987, 4182], "interpolate": [64, 1987], "instantied": 64, "operatormeasurement": [64, 5361, 5362], "cvarstatefn": 64, "cvarexpectation": [64, 1988, 1989, 2162], "_expecation": 64, "technique": [64, 165, 172, 806], "empircal": 64, "barkoutsos": [64, 1987], "nannicini": [64, 1987, 4964], "robert": [64, 1987], "tavernelli": [64, 1987], "woerner": [64, 69, 110, 186, 1399, 1468, 1722, 1987, 5342], "\u300cimproving": [64, 1987], "orbitaloptimizationvqe": 64, "simulatneous": 64, "orbitals": [64, 1945], "sokolov": 64, "journal": [64, 1382], "chemical": 64, "feasibility": 64, "quadraticprogram": 64, "_feasibility": 64, "[float": [64, 856, 883], "violated": [64, 3993], "(violated": 64, "_feasible": 64, "fixedincomeexpectedvalue": 64, "europeancalldelta": 64, "gaussianconditionalindependencemodel": 64, "europeancallexpectedvalue": 64, ".finance": 64, ".applications": 64, "resp": [64, 2001, 5362], "hessians": [64, 2001], "\u03b8)": [64, 2001], "= v": [64, 2001, 4765, 4785, 4800, 4913, 5305, 5317, 5329], "\u03c8\u3009": [64, 2001, 2023], ")|o": [64, 2001], "\u3009/": [64, 2001], ")|i": [64, 2001], "\u3009\u27e8": [64, 2001], "|\u03c8": [64, 2001], "/ d": [64, 2001], ".r": [64, 1076, 1092, 1987, 2001, 2009, 2010, 2012, 2013, 2014, 2016, 2017, 4421, 5362], "ham": [64, 2001], "(ham": [64, 2001], "(grad": [64, 2001, 5338, 5362], "_shift": [64, 2001, 2010, 2013, 2014, 2017, 2018, 5362], "fin": [64, 2001, 2010, 2013, 2014, 2017, 5338, 5362], "_diff": [64, 2001, 2010, 2013, 2014, 2017, 2018, 5338, 5362], "=circuitstatefn": [64, 2001], "\u03c9^": [64, 2001], "\u03b8^": [64, 2001], "\u03b8d": 64, "_tuple": [64, 2001], "capacity": [64, 158, 2001], "pure": [64, 2001, 2021, 2023, 4400, 4606, 4613, 4740], "[qfi": [64, 2023], "]kl": [64, 2023], "[\u3008": [64, 2023], "\u2202k": [64, 2023], "\u03c8|": [64, 2001, 2023], "\u2202l": [64, 2001, 2023], "\u2212\u3008\u2202": [64, 2001, 2023], "\u3008\u03c8": [64, 2001, 2023], "|\u2202l": [64, 2001, 2023], ", params": [64, 2001], "naturalgradients": [64, 2001], "rescales": 64, "^-": [64, 1975, 1977, 1980, 2090, 2103, 2118], "hereby": [64, 2001], "regularization": [64, 849, 877, 2001, 2018, 2020, 5362], "invertion": 64, "nat": [64, 2001, 2020, 5362], "naturalgradient": [64, 2001, 2019, 2020, 5362], "ridge": [64, 2001, 5362], ".components": 64, "_solvers": [64, 181, 186, 357, 362, 364, 523, 5338], "adaptvqe": 64, "/results": 64, "_structure": [64, 4819, 4823, 4825], "factories": 64, "_eigensolver": 64, "_factories": 64, "eigensolvers": [64, 5337], "orbital": 64, "oovqe": 64, "groverresult": [64, 98, 102, 5342], "amplitudeestimationresult": [64, 70, 71, 73, 76], "iterativeamplitudeestimation": [64, 111, 112, 113], "iterativeamplitudeestimationresult": [64, 112, 114], "maximumlikelihoodamplitudeestimation": [64, 119, 120, 121, 122, 123], "maximumlikelihoodamplitudeestimationresult": [64, 119, 122, 124], "hhlresult": 64, "numpylssolver": 64, "numpylssolverresult": 64, "minimumeigenoptimizationresult": 64, "recursiveminimumeigenoptimizer": 64, "recursiveminimumeigenoptimizationresult": 64, "managed": [64, 3835, 3836, 3845, 3852, 3858, 3862, 3869, 4008, 4032], "groveroptimizer": 64, "groveroptimizationresult": 64, "slsqpoptimizer": 64, "slsqpoptimizationresult": 64, "quantumgenerator": 64, "abeliangrouper": [64, 1924, 1925], "coloring": [64, 4896, 4917, 5283], "vectorstatefn": [64, 1906, 1926, 1929, 1932, 1959, 2051, 2061, 2075, 2089, 2102, 2117, 2138, 2165, 2168, 2182, 2198, 2211, 2224, 2230, 2238, 2250, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 5361], "matrixop": [64, 104, 1906, 1917, 1922, 1959, 1960, 1967, 1969, 2041, 2051, 2060, 2061, 2075, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2102, 2117, 2138, 2140, 2151, 2182, 2198, 2211, 2219, 2224, 2238, 2255, 5361], "_iterations": [64, 97, 115, 5175, 5342], "vqeadapt": 64, "limiting": 64, "aqgd": [64, 694, 695, 696, 697, 698, 699, 700], "epochs": [64, 693], "momentum": [64, 693], "customized": [64, 693, 5146], "analytically": [64, 693], "evaluating": [64, 693, 2166, 2167, 5217], "transformationtype": 64, "qubitmappingtype": 64, "circuitfactory": 64, "temporary": [64, 3796], "missed": [64, 4839], "-+": 64, "uncertaintymodel": 64, "univariatedistribution": 64, "multivariatedistribution": 64, ".normaldistribution": 64, "multivariatenormaldistribution": 64, ".lognormaldistribution": 64, "multivariatelognormaldistribution": 64, ".uniformdistribution": 64, "multivariateuniformdistribution": 64, "univariatevariationaldistribution": 64, "multivariatevariationaldistribution": 64, "uncertaintyproblem": 64, "univariateproblem": 64, "multivariateproblem": 64, "univariatepiecewiselinearobjective": 64, ".linearamplitudefunction": 64, ".quadraticprogramtoising": 64, ".isingtoquadraticprogram": 64, ".quadraticprogram": 64, "_ising": 64, "weightedsumoperator": 64, "ported": 64, "fermionictransformation": 64, "tranformations": 64, "_eigen": [64, 5338], "/vqe": 64, "_adapt": 64, "/molecular": 64, "_ground": 64, "_energy": 64, ".supportlevel": 64, "optimizersupportlevel": 64, ".required": 64, "plain": [64, 852], "_nx": 64, "_subops": 64, "gsls": [64, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772], "_iter": [64, 4487, 4519, 4614], "_trials": [64, 5214], "_iters": 64, "admmparameters": 64, "excitation": [64, 1379], "excitations": 64, "ucssd": 64, "_(": [64, 1406, 1412], ")occupied": 64, "queries": [64, 75, 79, 95, 97, 113, 123, 1001, 1005, 2308, 2486, 2500, 2905, 3814, 3832, 3916, 3919, 4829, 5250], "/grover": 64, "mlae": 64, "iqae": [64, 110], ".convert": [64, 1948, 1983, 1990, 5361], "statefns": [64, 1898, 1900, 1906, 1928, 1929, 1934, 1955, 1959, 2026, 2028, 2034, 2039, 2064, 2071, 2075, 2086, 2089, 2099, 2102, 2114, 2117, 2134, 2138, 2161, 2179, 2182, 2197, 2198, 2210, 2211, 2222, 2224, 2232, 2234, 2238, 2241, 2254, 2255, 5361], "meth": 64, ".vectorstatefn": 64, "`.": [64, 4432, 5355], "paulitrotterevolution": [64, 104, 1971, 1972, 1973, 5361], "gave": 64, "ops": [64, 1689, 2041, 2813, 2856, 2857, 2881, 4589], "cyclicity": 64, "detection": 64, "extractors": 64, "_async": 64, "_ext": 64, "cqcextractorjob": 64, "_until": 64, "_ready": 64, ".provider": [64, 2277, 2323, 2909, 2918, 2927, 3891], ".cqcextractor": 64, "download": [64, 912], "dashboard": 64, "hours": [64, 3927], "hrs": 64, "'u1": [64, 2909, 2918, 2927, 4229, 5332, 5333, 5334, 5354], ",'": [64, 5345, 5353, 5372], "recommend": [64, 3757, 4803], "ibmqjobmanager": [64, 3835, 3836, 3837, 3838, 3852, 3855], "parametertable": 64, "multiply": [64, 877, 1908, 2042, 2054, 2123, 2141, 2162, 2169, 2176, 2195, 2208, 2239, 2251], "inconsistency": 64, "extending": [64, 4880], "differing": [64, 103, 105], "cached": [64, 1101, 3721, 3725, 3812, 3814, 3837, 3849, 3862, 3863, 3882, 3883, 3884, 4086], "discrepancy": 64, "~qiskit": [64, 2323, 2349], "recursion": [64, 1421, 3905, 5004, 5210, 5213], "broader": [64, 5146], "iswap": [64, 257, 428, 587, 1164, 1371, 1586, 5332, 5333, 5334, 5367], "-commutation": [64, 1722], "forth": 64, "_dagdependency": 64, "_out": 64, "dagdepency": 64, "(dag": [64, 1645, 1646, 1650, 5227, 5238, 5282, 5355], "unrolls": [64, 5208, 5231, 5232], "stopping": [64, 861, 896, 3993, 5214, 5217], "-write": 64, "translating": [64, 4901, 4973, 5230], "choices": [64, 235, 406, 565, 1143, 4380, 4644, 5230, 5281, 5332], "'unroller": [64, 5230], "'translator": [64, 5230], "'synthesis": [64, 5230], "interacted": 64, "4a": [64, 4751, 4773, 4787], "0b": [64, 4751, 4773, 4787, 5341, 5345, 5372], "dit": [64, 4751, 4756, 4757], "multidigraph": [64, 1675], "hopefully": 64, "casses": 64, "opened": [64, 235, 406, 565, 1143, 5281], "uninitialized": 64, "pulseqobjtconfig": 64, ".qiskit": 64, "denotes": [64, 186, 234, 405, 564, 1142, 1372, 1392, 1450, 4444, 4686], "_delays": [64, 5333, 5334], "consume": [64, 3814, 3862], "tracked": [64, 4139], "marking": [64, 1318, 1447], "-used": [64, 1450], ".repeat": 64, "-versa": [64, 1389], "_into": 64, "_edge": [64, 1734, 5341], "tashkent": 64, "_t": [64, 316, 487, 646, 1223, 2712, 2793, 2936], "_readout": [64, 2936], ".equivalencelibrary": 64, "debugging": [64, 869, 5331, 5333, 5334], "_equiv": 64, ".svg": [64, 1002], "shifting": [64, 103, 4027, 4028], "decremented": 64, ".conj": 64, "/ints": 64, "phaseestimation": [64, 103, 105, 137, 138, 139, 140], "formulation": [64, 1388], ":quant": [64, 69, 92, 97, 110, 118, 1342, 1373, 1388, 1550, 4354, 4370, 4519, 4595, 4614, 4716, 4819, 4825, 5342], "task": [64, 4830], "^{": [64, 69, 97, 186, 798, 841, 1345, 1352, 1357, 1360, 1362, 1378, 1379, 1388, 1397, 1448, 1458, 1459, 1472, 1481, 1483, 1496, 1501, 1519, 1522, 1533, 1535, 1539, 1542, 1544, 1547, 1556, 1558, 2323, 2349, 4316, 4421, 4444, 4463, 4722, 4747, 4748, 4769, 4770, 4819, 4825, 5342, 5347, 5348, 5357, 5361, 5362, 5370], "|psi": [64, 1458], "thereby": [64, 683, 1458], "shor": [64, 157, 158, 159, 160, 1458], "_labels": [64, 2862, 4508, 4519, 4525, 4529, 4530, 4534, 4539, 4540, 4544, 4583, 4614, 4620, 4624, 4625, 4629, 4634, 4635, 4639, 5268, 5272, 5287, 5289, 5290, 5294, 5333, 5334, 5341, 5349], "blob": 64, "reverting": 64, "_phases": [64, 140, 143, 5294], "_degrees": [64, 5294], "circle": 64, "quadraticform": [64, 1476], "complement": [64, 145, 1398, 1475, 1476, 4000, 4013], "modulo": [64, 1373, 1392, 1444, 1480, 4025], ")\nb": [64, 5353], "quad": [64, 4162, 4167, 4172, 5367], "_form": [64, 5339], "(m": [64, 5345, 5372], "integrating": [64, 4075], "prepending": 64, "origin": [64, 1934, 1935, 1937, 1941, 1942, 1944], "presented": [64, 877, 1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 2168, 4208], "li": [64, 1448, 5175, 5178], "tackling": [64, 5175, 5178], "nisq": [64, 5175, 5178], "-era": [64, 5175, 5178], "asplos": [64, 5123, 5175, 5178], "'sabre": [64, 5230], ".replace": 64, "(old": [64, 2889, 4006], "csxgate": [64, 223, 394, 553, 1131], "csx": [64, 223, 394, 553, 1131, 1354, 1520], "rng": [64, 4388, 4396, 4603, 4607, 4610, 4654, 4658, 4662, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738], "projection": 64, ".subs": 64, "substituted": 64, "*x": [64, 2870, 2872, 2883, 2884], "(custom": [64, 970, 5356], "cp": [64, 218, 389, 548, 1126, 4324, 4343, 4410, 4452, 4675, 4694, 5353], "ygate": [64, 350, 521, 680, 1257, 1561, 1562, 2886, 2887, 4299, 4354], "(ygate": 64, "accurately": [64, 5181], "mcx": [64, 264, 435, 594, 1171, 1318, 1388, 1415, 1418, 1419, 1420, 1421, 1423, 1424, 1426, 1447, 5332, 5342], "_gray": [64, 5332], "_recursive": 64, "_vchain": 64, "func": [64, 685, 692, 695, 700, 703, 708, 711, 716, 719, 724, 728, 733, 737, 742, 746, 751, 755, 760, 764, 772, 775, 780, 783, 788, 792, 797, 800, 805, 808, 813, 816, 821, 824, 829, 835, 840, 843, 848, 854, 860, 863, 868, 871, 876, 881, 887, 890, 895, 898, 903, 906, 911, 2798, 2890, 4026, 4206, 4208, 4830], "diagram": [64, 235, 406, 565, 1143, 1342, 1472, 1551, 5281, 5292], "event": [64, 2813, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "reenabled": 64, "'latex": 64, "sizing": 64, "mathtext": 64, "_tokens": 64, ".qasmparser": 64, ".generate": [64, 5355], "_plot": 64, ".matplotlib": 64, ".scheduledrawer": 64, ".pulsedefaults": 64, ".meth": 64, "freq": [64, 2854, 4182, 4191, 4196, 4199, 4200, 4201, 5359], ".commands": 64, "(args": [64, 4000, 4013], "framechange": [64, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], ".)(": 64, "`d": 64, ", drivechannel": 64, ".tool": 64, ".projector": 64, ".quantumstate": 64, "derivatives": [64, 701, 781, 798, 806, 833, 2002, 2006], "equivalents": 64, "hosted": 64, "static": [64, 70, 71, 100, 119, 159, 202, 242, 243, 373, 413, 414, 532, 572, 573, 685, 692, 695, 700, 703, 708, 711, 716, 719, 724, 728, 733, 737, 742, 746, 751, 755, 760, 764, 772, 775, 780, 783, 788, 792, 797, 800, 805, 808, 813, 816, 821, 824, 829, 835, 840, 843, 848, 850, 851, 852, 854, 860, 863, 868, 871, 876, 878, 879, 881, 887, 890, 895, 898, 903, 906, 911, 1111, 1149, 1150, 1417, 1422, 1425, 1476, 1721, 1746, 1748, 1750, 1752, 1934, 1941, 1942, 1944, 1952, 1982, 1994, 2009, 2020, 2037, 2183, 2184, 2395, 2409, 2423, 2437, 2451, 2465, 2809, 2871, 2873, 2874, 2877, 2878, 2881, 3746, 3752, 3753, 3754, 3963, 4231, 4361, 4362, 4363, 4385, 4577, 4578, 4579, 4589, 4650, 4706, 4885, 4886, 4887, 4891, 5092, 5130, 5133, 5154, 5160], "js": 64, "site": [64, 877, 912, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5372], "depended": 64, "marshmallow": 64, "_retworkx": 64, "fallback": 64, "relief": 64, "valve": 64, "transition": [64, 2277, 2297, 4162, 4229], "reschedule": [64, 5102], ".rescheduler": 64, "lifted": [64, 4162, 4167, 4172], "recreate": 64, "rho": [64, 2556, 2569, 2845, 2858, 2859, 2871, 4335, 4389, 4393, 4398, 4402, 4424, 4444, 4686, 4715, 4719, 4723, 4726, 4727, 4740, 4747, 4769, 5284, 5291, 5292, 5293, 5294, 5349, 5350, 5364, 5366, 5368], ".parametricpulse": 64, "_atol": 64, "_rtol": 64, ".baseoperator": 64, ".atol": [64, 2813], ".rtol": 64, "_nonlocal": [64, 5366], "counted": 64, ".classicalregister": 64, "/basics": 64, ".kernel": [64, 4020], ".discriminator": 64, "si": [64, 5196, 5259, 5262, 5359], "caller": 64, "unboundlocalerror": 64, "overflow": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "excessive": [64, 5210, 5213], "proportional": [64, 1974, 5294], "`'": 64, "'showindex": 64, "column": [64, 186, 235, 406, 565, 1143, 1396, 1402, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2220, 2224, 2238, 2255, 4444, 4497, 4506, 4528, 4533, 4623, 4628, 4640, 5281, 5361], "cregbunde": 64, "cswapgate": [64, 222, 241, 393, 412, 552, 571, 1130, 1148, 1356], "box": [64, 97, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1479, 1555, 5331, 5333, 5334], "spaced": 64, "hamiltoniangate": [64, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "background": [64, 4239, 4240, 5331, 5332, 5354], "circles": 64, ".discrete": 64, "endpoints": [64, 103, 4193, 4197, 5123], "= f": [64, 4765, 4785, 4800, 4913, 5305, 5317, 5329], "refactored": [64, 3932, 3963, 3976], "seamless": 64, "incompatibilities": 64, "-dimension": 64, ".snapshotexpectationvalue": 64, "-fusion": 64, ".statevectorsimulator": 64, ".unitarysimulator": 64, ".snapshotprobabilities": [64, 2323, 2349], "\u300cmatrix": 64, "_bond": [64, 2323, 2349], "retained": [64, 2323, 2349, 4001, 4014], "_truncation": [64, 2323, 2349], "caching": [64, 1926], "rhs": [64, 186, 210, 238, 362, 381, 409, 540, 568, 1119, 1145], "introduce": [64, 1706], "alternate": [64, 1371, 1992, 3932, 3963, 3976, 5263], "de": [64, 1934], "specifiable": 64, "engine": 64, "mersenne": 64, "twister": 64, "intrinsics": 64, "internet": 64, "customization": [64, 5237], "qasmcontroller": 64, "_units": [64, 2808, 2848], "_device": 64, "cy": [64, 228, 399, 558, 1136, 1367, 1368, 1561, 4229, 5011, 5332, 5333, 5334], "gateset": 64, ".qasmsimualtor": 64, "opset": 64, "selects": [64, 140, 1974], "-clifford": [64, 1533, 1535, 2323, 2349, 4299, 4311, 4361], "suggesting": 64, ".system": 64, "_models": [64, 5366], ".hamiltonian": 64, ".hamiltonianmodel": 64, "reproducible": 64, "subtle": 64, ".iq": 64, "_discriminators": 64, "scratch": 64, "tomography": 64, "fitters": 64, ".basicutils": 64, ".cliffordutils": 64, ".dihedralutils": 64, ".rbgroup": 64, "respected": 64, "_lists": 64, "overlaps": [64, 5044], "concept": 64, "embedded": [64, 136, 904, 4172, 4195, 5287], "_circs": 64, "(qv": 64, "=initial": [64, 849, 877, 5340], ":func": 64, "_schedules": [64, 5357], "soft": [64, 934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775], "admmoptimizer": 64, "minimumeigenoptimizer": 64, "qubo": 64, "cplexoptimizer": 64, "quadraticprogramconverter": 64, "interpret": 64, "/getter": 64, "_define": 64, "_penalty": 64, "linearequalitytopenalty": 64, ".slsqpoptimizer": 64, "cobylaoptimizer": 64, "accommodate": 64, "mathematically": [64, 4162, 4167], "= z": [64, 1459, 1539, 2058], "pprint": [64, 3882], "_as": [64, 1644, 5358], "_string": [64, 274, 445, 604, 1181, 1451, 1452, 2886, 2887, 5290, 5341, 5368], "prettyprint": 64, ".prettyprint": 64, "crashes": 64, "summed": [64, 1503, 1551, 1923, 2055, 2060], "summing": [64, 2068, 2132, 4747, 4769], "thousands": 64, "exhausts": 64, "accumulator": 64, "wikipedia": [64, 4721, 4722], "quandl": 64, "covariance": 64, ".combo": 64, "traversing": [64, 1922], "yield": [64, 1648, 1649, 1682, 1685, 1708, 1714, 1715, 1744, 3908], "optimizationresult": 64, "mypy": 64, ".solve": [64, 186, 362, 4717], "sizes": [64, 693, 1342, 1441, 1475, 4767], ".variable": [64, 4239, 4240], ".variables": 64, "_converters": 64, "nonsensical": 64, ".my": 64, "_reservations": 64, "ibmqjobfailureerror": [64, 3814, 3827], "_lookahead": [64, 3833], "defaulted": 64, "unavailable": [64, 3833, 4031], "minutes": [64, 3833, 3927, 5250], "managedresults": [64, 3862, 3870, 3871, 3872, 3873, 3874, 3875], "timestamps": 64, "estimated": [64, 103, 113, 117, 123, 136, 849, 877, 2265, 2269, 3811, 3830, 3973], "_complete": [64, 3830], "queueinfo": [64, 3811, 3824, 3831], ".queue": 64, "timezone": [64, 3728, 3821, 3930], "windowsselectoreventlooppolicy": 64, "windowsproactoreventlooppolicy": 64, "offline": 64, "'running": 64, ".tomography": 64, ".fitters": 64, "_fitter": [64, 5250], ".tomographyfitter": 64, ".fit": 64, "cvx": 64, "lstsq": 64, ".measurementfitter": 64, "caught": 64, "svm": 64, "classifier": [64, 1450, 1563, 1567], "[cvx": 64, "circuitop": [64, 1912, 1915, 1922, 1930, 1934, 1935, 1936, 1939, 1941, 1942, 1944, 1948, 1949, 1963, 1973, 1975, 1977, 1980, 2030, 2046, 2049, 2065, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2090, 2103, 2118, 2144, 2148, 2187, 2243, 2247, 5361], ".combine": 64, "stacks": 64, "yielded": [64, 97], "_hash": 64, "comparisons": [64, 2824, 2825, 2830, 2837, 2838], "hashes": 64, "frontend": 64, ".qsvm": 64, "cvxopt": 64, ".hhl": [64, 186], ".statetomographyfitter": 64, "-squares": 64, "opportunistically": 64, "expectations": [64, 83, 127, 132, 135, 153, 164, 171, 178, 1922, 1923, 1984, 1990, 1994], ".qaoa": 64, "_thrust": 64, "-automatic": 64, "leak": 64, "effected": 64, "families": 64, "rich": 64, "benchmarks": 64, "advantage": [64, 1393, 5193], "mature": 64, "-width": [64, 113], "(global": 64, "molmer": 64, "-sorensen": 64, "_logic": 64, "arithmetic": [64, 1342, 1373, 1392, 1465, 1468, 1480, 1550, 4568], "integercomparator": 64, "_changes": 64, "_local": [64, 5250], "entanglements": [64, 1376, 1379, 1441, 1503, 1537], "proven": 64, "interesting": [64, 2024, 2032], "graphstate": 64, "iqp": 64, "composition": [64, 150, 168, 175, 211, 382, 541, 1120, 1667, 1903, 1934, 1936, 1941, 1942, 1944, 1952, 1957, 1994, 2025, 2027, 2032, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2218, 2236, 2814, 2831, 2833, 2836, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4494, 4498, 4525, 4554, 4571, 4620, 4669, 4688, 5342, 5347, 5348], "welding": 64, "permuting": [64, 211, 382, 541, 1120], "simpler": [64, 1379, 4717], "lhs": [64, 211, 382, 541, 1120], "(rhs": [64, 186, 211, 382, 541, 1120], "lqr": [64, 211, 382, 541, 1120], "rqr": [64, 211, 382, 541, 1120], "tdg": [64, 211, 333, 382, 504, 541, 663, 929, 949, 962, 1012, 1027, 1042, 1056, 1120, 1240, 1269, 1285, 1304, 1434, 1510, 1534, 1535, 1536, 1779, 1822, 1838, 1854, 1870, 2705, 2718, 2731, 2744, 2757, 2770, 4229, 5332, 5333, 5334, 5335, 5350, 5354], "\u2524 u1": [64, 211, 382, 541, 1120, 1450, 1539, 1563, 1567], "lcr": [64, 211, 382, 541, 1120], "_entry": 64, "instantaneous": [64, 1396, 4139], ".diagonal": 64, "transformer": 64, ".compress": 64, "(samplepulse": 64, ", drive": 64, "compressed": [64, 4222, 4297, 4298, 5154, 5160], "reorder": [64, 4892], ".hamiltoniangate": 64, "wavefunction": [64, 1450, 5362], "-specified": [64, 1388], "iht": [64, 5361], ".and": 64, ".or": 64, "_armonk": [64, 2971, 2980], "_essex": [64, 3155, 3163], "_london": [64, 3290, 3298], "_valencia": [64, 3638, 3647], "_cambridge": [64, 3122, 3130], "_paris": [64, 3449, 3458], "_rome": [64, 3529, 3538], "_athens": [64, 2988, 2997, 3777], "_int": [64, 3901, 5347], "statically": 64, "analyzer": 64, "ides": 64, "-dateutil": 64, "received": [64, 3722, 3727, 3730, 3734, 3741, 3896], "backendobjects": 64, ".backendproperties": 64, ".backendstatus": 64, ".uchannello": 64, ".gateconfig": 64, ".command": 64, ".nduv": 64, ".controlchannel": [64, 4034], "(control": [64, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034, 5369], "amd": [64, 5350], ",:": 64, "cgate": 64, "substituting": 64, "tranpiled": 64, "chains": [64, 1934, 5129, 5134], "backendstatus": [64, 2284, 2336, 2348, 2362, 2375, 2388, 2917, 2926, 2935, 2944, 2953, 2962, 2979, 2996, 3029, 3046, 3063, 3080, 3096, 3113, 3129, 3146, 3162, 3179, 3196, 3213, 3230, 3247, 3264, 3281, 3297, 3314, 3331, 3347, 3364, 3381, 3406, 3423, 3432, 3440, 3457, 3473, 3495, 3504, 3520, 3537, 3553, 3562, 3579, 3596, 3612, 3620, 3629, 3646, 3662, 3679, 3695, 3718, 3732, 3898, 3952, 3953], "qasmbackendconfiguration": [64, 3718, 3720, 3932, 3963, 3977, 3978], "uchannello": [64, 3963, 3966, 3980, 3981], "gateconfig": [64, 3932, 3933, 3934, 3958, 3959, 3963, 3968, 3972, 3976, 3977, 3978], "nduv": [64, 3935], "lot": [64, 1953, 4182, 4591], "(covering": 64, "quadraticprogramtoqubo": 64, "changelog": 64, "-intuitive": 64, "expectationfactory": [64, 147, 150, 165, 168, 172, 175, 1994, 5340], "suitable": [64, 5262], "overview": [64, 877, 4828], "vqc": 64, "variationalform": 64, "featuremap": 64, "elaborate": 64, "gui": [64, 5335], ".ibmqbackendjoblimiterror": 64, "_tags": [64, 3723, 3730, 3738, 3739, 3838, 3851, 3864], "tags": [64, 3723, 3730, 3738, 3739, 3779, 3781, 3782, 3789, 3792, 3793, 3796, 3820, 3823, 3838, 3851, 3864, 3866, 3868, 3931, 3932, 3963, 3976, 5348, 5349, 5352, 5354, 5364, 5365, 5366, 5367, 5368, 5369], ".ibmqfactory": 64, "_step": [64, 761, 2337, 3796], "_datetime": [64, 3723, 3728, 3738, 3739, 3779, 3782, 3789, 3793], ".queueinfo": 64, "formatter": [64, 5331, 5333, 5334, 5355], "_asyncio": 64, "asyncio": 64, "reducebarrier": 64, "preventing": 64, "microseconds": [64, 5359], "nanoseconds": [64, 2808, 2848, 3932, 3963, 3976, 5054, 5359, 5366], "quantumerrors": [64, 2848, 2890, 2891, 5366], "diagonals": [64, 523, 1372], "-barrier": 64, "trucation": 64, "inactive": 64, "switched": 64, "significanlty": 64, "cliffords": [64, 301, 472, 631, 1208, 2155, 2156, 2530, 2779, 4363], "symplectic": [64, 4463, 4487, 4502, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637], "stabilizers": [64, 4620, 4624, 4625, 4628, 4635, 4639], "stabilizertable": [64, 4354, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4736], "wheter": 64, "(cgate": 64, "fourth": [64, 1533, 1535], "%circuit": 64, "(height": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "_height": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555, 5331, 5333, 5334], "px": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "hidden": [64, 1318, 1372, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "scroll": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "'\u2026": [64, 1318, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1393, 1396, 1397, 1410, 1447, 1457, 1458, 1472, 1477, 1555], "highlighted": 64, "pygments": [64, 277, 448, 607, 1184, 4229], "stdout": [64, 3832, 4829], "keep": [64, 107, 130, 142, 186, 206, 240, 252, 347, 377, 411, 423, 518, 536, 570, 582, 677, 1115, 1147, 1159, 1254, 2024, 2285, 4219, 5193], "mind": [64, 186, 2285], "grid": [64, 69, 120, 1393, 4846, 5286, 5287, 5288, 5289], "dags": [64, 4882], ".left": [64, 5331, 5333, 5334], "_clbit": 64, "\u2500\u2500\u2524": [64, 5354], "rcr": 64, "\u256c\u2550": [64, 5354], ".qasmsimulatorpy": 64, "consideration": [64, 806, 3833], "sim": [64, 1537, 3736, 4722, 5345, 5364, 5365, 5366, 5367, 5372], ".instructionschedulemap": 64, ", test": 64, ".iswapgate": 64, ".dcxgate": 64, "dcx": [64, 230, 401, 560, 1138, 1371, 5332, 5333, 5334], "enact": [64, 4065], "brief": 64, "motivation": 64, "/quant": [64, 97, 115, 116, 156, 234, 342, 343, 344, 345, 405, 513, 514, 515, 516, 564, 672, 673, 674, 675, 1142, 1249, 1250, 1251, 1252, 1332, 1336, 1472, 1479, 1526, 1815, 1831, 1847, 1863, 1976, 5342, 5370], "polls": 64, "reaches": 64, "poll": [64, 2308, 2486, 2500, 2905, 3919], "_width": [64, 5117, 5287, 5289, 5331, 5333, 5334], "_depth": [64, 5117], ".lookaheadswap": 64, ".onequbiteulerdecomposer": 64, "rr": [64, 4421], "(qargs": [64, 973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "shallow": [64, 231, 402, 561, 937, 1139, 1393, 1682, 2823, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700, 4753, 4776, 4790, 4905, 5297, 5309, 5321], "subsystem": [64, 2814, 2816, 2823, 2862, 2865, 2866, 4301, 4304, 4309, 4316, 4318, 4321, 4330, 4335, 4337, 4340, 4349, 4356, 4359, 4368, 4376, 4381, 4385, 4389, 4390, 4393, 4398, 4402, 4404, 4407, 4416, 4424, 4426, 4429, 4438, 4439, 4444, 4446, 4449, 4458, 4480, 4512, 4538, 4552, 4554, 4557, 4563, 4571, 4574, 4587, 4599, 4604, 4605, 4633, 4640, 4646, 4650, 4655, 4656, 4659, 4664, 4667, 4669, 4672, 4681, 4686, 4688, 4691, 4700], ".sparsepauliop": 64, "representaiton": 64, ".paulitable": 64, "subtracted": 64, ":class": [64, 2160, 4922], "convered": 64, "csr": [64, 2053, 2111, 2122, 2131, 2206, 4485, 4509, 4516, 4535, 4542, 4584, 4592, 4630, 4637], "iterated": [64, 4487, 4519, 4614], "-bounded": [64, 4717], "-norm": [64, 769, 4717], "(chan": 64, "chan": 64, "acts": [64, 66, 86, 97, 193, 234, 240, 252, 347, 405, 411, 423, 518, 523, 564, 570, 582, 677, 970, 1020, 1142, 1147, 1159, 1254, 1342, 1388, 1406, 1453, 1470, 1472, 1725, 1815, 1831, 1847, 1863, 2091, 2808, 4875, 5195], "concatination": 64, "lexicographic": [64, 4316, 4444, 4491, 4513, 4522, 4539, 4617, 4634, 4725], "deleted": [64, 4470, 4497, 4528, 4623], "commutation": [64, 1722, 4503, 4523, 4580, 4614, 4618, 5008, 5010, 5011, 5137], ".stabilizertable": 64, "-pauli": [64, 1937], "-identity": [64, 1937, 4491, 4513, 4522, 4539, 4617, 4634], "weight": [64, 107, 142, 143, 1551, 1974, 4491, 4513, 4522, 4539, 4617, 4634, 4725, 4964, 5033, 5341], ".scalarop": 64, ".superop": 64, "xzx": [64, 4421, 5226], "_innfo": 64, "reshaped": [64, 2823, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700], "-rank": [64, 4730, 5369], "stinespring": [64, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4735], "bra": [64, 5361], "-ket": [64, 4686], "(state": [64, 181, 357, 5284, 5291, 5292, 5293, 5294, 5341, 5347, 5362], ", counts": 64, ", mem": 64, "1'": 64, "collapsing": [64, 1912, 1963, 2030, 2046, 2059, 2065, 2078, 2144, 2187, 2243, 5232], "-measurement": [64, 4388, 4603, 4607, 4654, 4658], ", outcome": 64, "(psi": [64, 4664, 5349, 5364], "dims": [64, 2823, 4309, 4330, 4349, 4368, 4376, 4379, 4385, 4398, 4416, 4438, 4458, 4480, 4512, 4538, 4552, 4563, 4587, 4598, 4633, 4640, 4643, 4650, 4664, 4681, 4700, 4730, 4731, 4737, 4738, 5353, 5361], "reseting": 64, "_reset": [64, 5077, 5143, 5366], ".visualize": 64, "_transition": 64, "transitions": [64, 5335], "animation": [64, 5335], "animtion": 64, "writer": 64, "ensuring": [64, 165], "ffmpeg": 64, "sgate": [64, 298, 469, 628, 1205, 1518, 1525, 4299, 4354], "sdggate": [64, 314, 485, 644, 1221, 1518, 1525, 4299, 4354], "fpg": [64, 5335], "spg": [64, 5335], "_late": [64, 1644, 5358], "_possible": [64, 1644, 5358], "_soon": [64, 1644, 5358], "indication": [64, 1399], "overriden": [64, 2311], "placement": [64, 1934, 4901, 5230], "confusion": 64, "delayinstruction": 64, "(delay": 64, "shiftphaseinstruction": 64, "(shiftphase": 64, "pulseinstruction": 64, "acquireinstruction": [64, 4000, 4001, 4013, 4014], "(constantpulse": 64, "del": 64, "delattr": 64, "highlighting": [64, 4231], "[visualization": 64, "pulsechannelspec": 64, "_chan": [64, 4041], ".drives": 64, ".acquires": 64, "minute": 64, "transpileconfig": 64, ".passmanagerconfig": 64, "structured": 64, "\u256b\u2500\u2524": [64, 5354, 5366], ">\u2500": [64, 5350], "conflicting": [64, 1644], ".pass": 64, ".level": 64, "=pm": 64, "+`": 64, "quantumchannel": [64, 319, 490, 649, 1226, 2751, 2796, 2813, 2887, 4316, 4327, 4335, 4346, 4381, 4402, 4413, 4444, 4455, 4667, 4678, 4686, 4697, 4714, 4717, 4720, 4726], "* n": [64, 2830, 4437, 4562, 5077, 5143], "nearest": [64, 761, 923, 943, 1393, 4796, 4856], "neighbour": 64, "+1": 64, ".qasmqobjinstruction": 64, ".qobjexperimentheader": 64, ".qasmqobjexperimentconfig": 64, ".qasmqobjexperiment": 64, ".qasmqobjconfig": 64, ".qobjheader": 64, ".pulseqobjinstruction": 64, ".pulseqobjexperimentconfig": 64, ".pulseqobjexperiment": 64, ".pulseqobjconfig": 64, ".qobjmeasurementoption": 64, ".pulselibraryitem": 64, ".pulseqobj": 64, "/backends": [64, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "moderately": 64, "burden": 64, ".dumps": [64, 4245, 4254, 4272, 4287], "=qobj": 64, "(instructions": 64, "qobjencoder": [64, 4254, 4272, 4287], "\"\"a": 64, "(obj": [64, 4254, 4272, 4287, 4463], "tolist": 64, ".tolist": [64, 4254, 4272, 4287], ".real": [64, 849, 877, 4196, 4201, 4254, 4272, 4287, 5338, 5339, 5361, 5362], ".imag": [64, 4254, 4272, 4287], "cls": [64, 207, 208, 378, 379, 537, 538, 1116, 1117, 4231, 4297, 4298, 5250, 5278], "=qobjencoder": [64, 4254, 4272, 4287], "cmddef": 64, "cmds": 64, "cmd": [64, 3973], "_est": [64, 3973, 5359], "notified": 64, "passsing": 64, ".basic": 64, ".expr": [64, 1083], "ast": [64, 1645], ".matrix": [64, 357, 2869], "alerting": 64, "uppercase": 64, "letter": 64, "prepend": [64, 147, 1376, 1377, 1379, 1456, 1503, 1537, 2798], "prepends": 64, "crx": [64, 219, 390, 549, 1127, 1348, 1349, 1537, 4229], "blank": 64, "toffoligate": 64, "crxgate": [64, 219, 390, 549, 1127, 1349], "crygate": [64, 220, 391, 550, 1128, 1351], "cry": [64, 220, 391, 550, 1128, 1350, 1351, 1537, 4229], "crz": [64, 221, 392, 551, 1129, 1345, 1352, 1353, 1357, 4229], "fredkingate": 64, "cswap": [64, 222, 393, 552, 1130, 1355, 1356, 1531, 4229, 5332], "fredkin": [64, 241, 412, 571, 1148, 1355, 1531], "cnotgate": 64, "diag": [64, 234, 405, 564, 1142, 1372, 1786, 1935], "idgate": 64, "ucgate": 64, "uc": [64, 342, 513, 672, 1249], "ucrotx": 64, "ucrx": [64, 343, 514, 673, 1250], "ucroty": 64, "ucrotz": 64, "ucrz": [64, 345, 516, 675, 1252, 1388], "sawtooth": [64, 4182, 4196], "triangle": [64, 1382, 1396, 4201], ".euler": 64, "_angles": 64, "1q": [64, 3990, 4705, 4712, 4964, 5044, 5137, 5205, 5217, 5359], "subtract": [64, 4731], "shoulde": 64, "(<": [64, 3704, 3736, 5357], ">)": [64, 1448, 3704, 3736, 5357, 5359], "framechangeinstruction": 64, "(framechange": 64, "rendering": [64, 4380, 4644, 5285], "span": [64, 201, 213, 372, 384, 531, 543, 943, 1110, 1121, 5239], "extendee": 64, "expirement": 64, "rinv": 64, "sdg": [64, 314, 485, 644, 1221, 1524, 1525, 4229, 5332, 5333, 5334, 5335, 5350, 5354, 5362, 5367], "(rinv": 64, ".sdg": [64, 5350, 5367], "qasmqobjinstruction": [64, 925, 945, 958, 972, 988, 1008, 1022, 1038, 1052, 1265, 1279, 1298, 1321, 1430, 1506, 1756, 1774, 1788, 1804, 1817, 1833, 1849, 1865, 1882, 2391, 2405, 2419, 2433, 2447, 2461, 2506, 2519, 2532, 2545, 2558, 2571, 2584, 2597, 2610, 2623, 2636, 2649, 2662, 2675, 2688, 2701, 2714, 2727, 2740, 2753, 2766, 4276, 4283, 4284], "qasmqobjexperimentconfig": [64, 4276, 4280, 4281], "qasmqobjexperiment": [64, 4270, 4277, 4278], "pulseqobjexperimentconfig": [64, 4258, 4262, 4263, 4265], "pulseqobjexperiment": [64, 4252, 4259, 4260], "qobjmeasurementoption": [64, 4264, 4295, 4296], "pulselibraryitem": [64, 3973, 4250, 4251, 4255, 4273], "marsmallow": 64, "noted": 64, "postfix": 64, "raspberry": 64, "accrediation": 64, "discriminator": [64, 3973, 4020, 4075, 5357], "_epg": 64, "_epc": 64, "twoq": 64, "community": 64, "visualizationerror": [64, 235, 406, 565, 1143, 5279, 5281, 5282, 5283, 5284, 5286, 5288, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334, 5335], "visualizationvalueerror": 64, "visualizationtypeerror": 64, "qsikit": 64, "_mode": [64, 1318, 1388, 1447, 1970, 3796, 5342, 5361], "-iqx": 64, "-tutorials": 64, "descending": [64, 3723, 3738, 3739, 3779, 3789], "ascending": [64, 3723, 3779, 3789], "waits": 64, ".ibmqbackendapiprotocolerror": 64, "validating": [64, 1477, 2295, 3719], "/error": 64, "%iqx": 64, "_dashboard": 64, "speeds": 64, "validated": [64, 2295, 2311, 3931, 4182, 5222, 5277], "stops": [64, 761, 798, 841, 869, 4973], "recursive": [64, 1526, 1906, 1911, 1959, 1962, 1976, 2028, 2039, 2045, 2064, 2075, 2077, 2089, 2092, 2102, 2105, 2117, 2125, 2138, 2143, 2182, 2186, 2198, 2200, 2211, 2213, 2224, 2225, 2238, 2242, 2255, 2257], "backtracking": [64, 4976], "(acquirechannel": 64, ".couplingmap": 64, "=rgb": 64, "shapes": [64, 1641, 3932, 3976, 4182], ".constantpulse": 64, "_demo": 64, "# e": 64, "entirely": 64, "(qubits": [64, 1468, 2849, 4747, 4769], "_mem": 64, "_ring": 64, "_grid": 64, ".crosstalkadaptiveschedule": 64, "aims": [64, 5178], "impact": 64, "crosstalk": [64, 4048, 5033, 5037, 5041, 5043, 5051], "naive": [64, 5235, 5247], "harmful": 64, "incurs": 64, "decoherence": [64, 5033, 5038, 5053, 5077, 5143], "smt": 64, "minimizes": [64, 861, 4705], "_.": 64, "[g1": [64, 5033], "g2": [64, 5003, 5033], ".triviallayout": 64, ".denselayout": 64, "+'": [64, 4229], "(rho": [64, 4398, 4719, 5364], ".entropy": 64, ".mutual": 64, ".concurrence": 64, ".entanglement": [64, 1444], "_formation": 64, ".one": 64, "'zxz": 64, ",x": 64, "bases": [64, 1934, 4706, 4707, 5226, 5237], "1x": [64, 2877, 2878, 4421], "zyz": [64, 328, 499, 658, 1235, 4421, 4551, 4705, 5132], "zxz": [64, 1450, 4421, 4705], "xyx": [64, 4421, 4705, 5226], "unaffected": [64, 2889], "cch": 64, "_rmul": 64, ".multiply": 64, "multiplciation": 64, "exceed": 64, "abbreviated": 64, ".hgate": 64, ".chgate": 64, ".ch": [64, 4027, 4028, 4029, 5342, 5350], "(ctl": 64, ".idgate": 64, ".iden": 64, ".rgate": 64, ".rxgate": 64, ".crxgate": 64, ".crx": [64, 198, 369, 528, 1107], ".rygate": 64, ".crygate": 64, ".rzgate": [64, 5355], ".crzgate": 64, ".crz": [64, 5350, 5352], ".sgate": 64, ".sdggate": 64, ".fredkingate": 64, ".cswap": [64, 241, 412, 571, 1148, 5350, 5354], ".tgate": 64, ".tdggate": 64, ".tdg": [64, 5350, 5369], ".cu": [64, 5350], ".cu1": 64, ".cu3": 64, ".xgate": 64, ".cnotgate": 64, ".toffoligate": 64, ".ygate": 64, ".cygate": 64, ".cy": [64, 5350], ".zgate": 64, ".czgate": 64, ".acquireinstruction": 64, ".persistentvalue": 64, "persistentvalue": 64, "_w": [64, 3902], "_pv": 64, "_const": 64, "_cptp": 64, ".ptm": 64, ".round": [64, 5364], ".outer": [64, 5341], ".shannon": 64, "_entropy": 64, "_pos": [64, 1706], ".predicates": 64, "_positive": 64, "_semidefinite": 64, "#the": 64, "(scale": 64, "subdirectories": 64, "categorize": 64, "-gpu": [64, 5364], "nvidia": [64, 2323, 5364], ".(": 64, "pulsesystemmodel": [64, 2337, 2863, 2864, 2865, 2866, 2867], "hamiltonianmodel": [64, 2862], "(#": 64, "duffing": [64, 2862, 2867], "_generators": 64, "ode": [64, 5362], "blas": 64, "lib": [64, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5357], "src": [64, 1734, 4840], "organise": 64, "/controllers": 64, "/simulators": [64, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "_utils": 64, ".device": 64, ".as": 64, ".kron": 64, "feedback": [64, 116, 3932, 3963, 3976, 4075], "_jobs": [64, 3711, 3718, 3722, 3736, 3833, 3951], "unfinished": [64, 3719], "queue": [64, 3718, 3811, 3812, 3824, 3830, 3831, 5250], "refined": 64, "catch": 64, "ibmqaccounterror": [64, 3716, 3748], "ibmqapiurlerror": 64, "ibmqaccountcredentialsinvalidurl": [64, 3714, 3746, 3748, 3750, 3752, 3753], "ibmqaccountcredentialsinvalidtoken": [64, 3713, 3752], "-specific": [64, 66, 86, 688, 697, 705, 713, 721, 730, 739, 748, 757, 767, 777, 785, 794, 802, 810, 818, 826, 837, 845, 857, 865, 873, 884, 892, 900, 908, 1642, 1643], "_property": 64, "fakeourense": [64, 3434, 3435, 3436, 3437, 3438, 3439, 3440], ".readout": 64, "2qdistance": [64, 5355], "score": [64, 5108, 5178, 5214, 5217], "distances": [64, 5108, 5178], "scoring": 64, "]-": [64, 1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145], "-[": [64, 1913, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145], "_score": [64, 5108], ".cnot": 64, ".toffoli": 64, ".fredkin": 64, "passthrough": 64, "portion": [64, 4195, 5014], "$\u300f": 64, "diagrams": 64, "dollar": 64, "\\$": 64, "mix": [64, 5196], "\u03b1_": 64, "$_": 64, "$'": [64, 4751, 5352], "\u03b1\\": 64, "\u03b1$": 64, ">\u2524": [64, 1537], "intenum": [64, 832], ".measlevel": 64, "anywhere": 64, "measreturntype": [64, 1641, 3730], "_transpiled": [64, 4032, 5253], "=measlevel": 64, ".classified": [64, 1641], "interchangably": 64, "selector": 64, "(fakerueschlikon": 64, "(csplayout": 64, "(cmap": 64, "_after": [64, 3789], ".property": [64, 4239, 4240, 5355], "(quantumregister": [64, 1102, 4884, 5355], "strict": [64, 3901, 4927, 4976, 5214, 5217], "restrictive": 64, "solvable": 64, "q0": [64, 970, 1397, 5350, 5362], "(accessed": 64, "_has": 64, "(drivechannel": 64, "_framechange": [64, 3999, 4012, 5331], "gp0": 64, "(gp0": 64, "(show": 64, "marginalization": 64, "wishes": 64, "observation": [64, 2162, 2165, 2166], "sliced": 64, "bracket": 64, "/list": [64, 2015], "pm2": 64, "= [": [64, 2830, 4739, 5366], "setlayout": [64, 4961, 5014, 5185, 5186, 5355], "relates": [64, 4847, 4848], "_cmd": 64, ".cmddef": 64, ", custom": 64, ".systemtopology": 64, "basemodel": 64, "dill": 64, "ubase": 64, "cxbase": 64, "0gate": 64, "exemplary": 64, "_spec": 64, ".measures": 64, ".controls": 64, "backendconfigurationerror": [64, 3964, 3965, 3966, 3967, 3969, 3970, 3971], "helpful": [64, 179], "memoryslots": 64, "registerslots": 64, "restrained": 64, ".memoryslots": 64, ".registerslots": 64, "=>": [64, 5120], ".qx": 64, "_scheme": 64, "qx": [64, 3718], "transpileraccesserror": [64, 4944], "generality": 64, "buffers": 64, "commutationanalysis": [64, 5009, 5010, 5355], "_measures": 64, "weren": 64, ".seed": 64, "race": 64, "monitor": [64, 3832, 4827, 4829, 5250], "_position": [64, 5250], "revamped": 64, "qconsole": [64, 3748], "revisit": 64, "revised": 64, "closely": [64, 136], "remote": [64, 3737, 3796, 3932, 3963, 3976], "_share": [64, 3730, 3838, 3851, 3864], "reflecting": [64, 66], ".new": 64, "_api": 64, "_attribute": 64, "promoted": [64, 3708, 3730], "refresh": [64, 3721, 3725, 3812, 3813, 3814, 3837, 3849, 3862, 3863, 3882, 3883, 3884, 5250, 5254], "forcing": 64, ".submit": 64, "transparent": [64, 4239, 4240, 5331, 5333, 5334], "intelligently": 64, "receives": 64, "managedjobset": [64, 3834, 3835, 3837, 3838, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869], "statuses": [64, 2498, 3723, 3738, 3739, 3834, 3836, 3861, 3865], "_ourense": [64, 3433, 3441], "farm": 64, ".statuses": 64, ".report": 64, "autocompletion": 64, "-wide": 64, "closest": [64, 3725, 4796], "toned": 64, "trapped": [64, 1382], "ion": [64, 1382, 1383, 1384, 1385, 1386, 1427], "trap": 64, "preceeding": 64, "excluding": [64, 279, 280, 281, 450, 451, 452, 609, 610, 611, 1186, 1187, 1188], "\u2550\u256c": [64, 5354], "\u00f8lmer": [64, 1382, 1427], "\u2013s": [64, 1382, 1427], "\u00f8rensen": [64, 1382, 1427], "/rx": 64, "/ry": 64, "_rxx": 64, "-adaptive": [64, 5123], ".axes": [64, 235, 406, 565, 1143, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5281, 5285, 5290, 5291, 5292, 5293, 5294, 5331, 5333, 5334], "_real": [64, 5291, 5292], "_imag": [64, 5291, 5292], "kargs": 64, ".gca": 64, "=ax": [64, 5345, 5372], "edited": 64, "handy": 64, "edit": 64, "(transpileconfig": 64, "=lambda": [64, 3705, 3737, 5341], "-item": 64, "shortcut": 64, "dc0": 64, ".samplepulse": 64, "(dc": 64, "(dc0": 64, "dc1": 64, "(dc1": 64, "assignments": [64, 1464], "noiseadaptivelayout": [64, 5124, 5125, 5230, 5355], "devicespecification": 64, ".pulsechannelspec": 64, ".q": [64, 5178], ".mem": 64, ".ops": 64, ".union": 64, "(register": [64, 239, 410, 569, 1146, 4282], ".clbit": 64, "transitioned": 64, "layering": 64, "underlies": 64, "address": 64, "/left": 64, "justification": 64, "topologically": 64, "visually": 64, "rendered": [64, 235, 406, 565, 1143, 5281, 5290], "rzz": [64, 297, 468, 627, 1204, 1501, 1502, 4229, 5332], "cu1": [64, 1352, 1357, 1359, 4229], "symmetry": [64, 2156], "cds": 64, "%matplotlib": [64, 5282, 5283], "notebooks": [64, 4380, 4644], ".close": [64, 5343], "standardizes": 64, "laid": [64, 4991, 5233], "desire": [64, 5342], "annotating": 64, "userqr": 64, "melbourne": 64, "\u251c\u2524m": 64, "\u2524\u2514": [64, 1537, 1567, 5093, 5361, 5362], "\u2551\n(": 64, "annotation": [64, 5295, 5331], "countopslongest": 64, "_longest": [64, 5030], "countopslongestpath": [64, 5031, 5032, 5355], "(countopslongestpath": 64, "sech": [64, 4197, 4198], "_deriv": [64, 4192], "hyperbolic": 64, "secant": 64, "derviative": 64, "vertical": [64, 235, 406, 565, 1143, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5281, 5331, 5333, 5334], "_compression": [64, 235, 406, 565, 1143, 5281], "visualizer": 64, "_mamanger": 64, "myexperiment": 64, ".filter": [64, 4000, 4013, 5358], "_types": [64, 2798, 2842, 4000, 4001, 4013, 4014, 5263], ".iso": 64, "attaching": 64, "=n": [64, 255, 256, 426, 427, 585, 586, 1162, 1163], ".squ": 64, ".ucg": 64, "uniformly": [64, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 849, 877, 1249, 1250, 1251, 1252, 1456, 1499, 1501, 1815, 1831, 1847, 1863], "multiplexed": [64, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 1249, 1250, 1251, 1252, 1499, 1501, 1815, 1831, 1847, 1863, 2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3963], ".ucx": 64, ".ucz": 64, "gray": [64, 1419], "-synth": 64, "\u2013markov": [64, 1401, 5111], "\u2013hayes": [64, 1401, 5111], "randomly": [64, 725, 1457, 1640, 1974, 2323, 2349], "tcirc": [64, 5365, 5369, 5370], "'circuit": [64, 193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "black": [64, 97, 5349], "white": 64, "(drive": [64, 2867], "_cbits": 64, "legacyswap": 64, ".dag": 64, "_nodes": [64, 1719, 5341, 5355], "_named": 64, ".named": 64, "_ids": [64, 3782, 3793], "_dicts": [64, 1932], "threeq": 64, "predecessors": [64, 1680, 1694, 1696, 1705, 1719, 1722, 1730, 1739, 5006, 5193], "ancestors": [64, 1660], "descendants": [64, 1672], "bfs": [64, 1663], "_successors": 64, "_node": [64, 4866, 5227, 5238, 5355], "_ancestors": 64, "_descendants": 64, "_nonancestors": 64, "_nondescendants": 64, "substitute": [64, 1080, 1710, 1711, 5355], "externally": 64, "-implement": 64, "_graph": 64, ".qiskiterror": 64, "_requires": 64, "_preserves": 64, ".logging": 64, "compositegate": 64, "_mapper": 64, ".qcvv": 64, "cell": 64, "%qiskit": 64, ".purity": 64, "_filename": [64, 2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], ".mapper": 64, ".compiling": 64, "_kak": 64, ".couplingerror": 64, ".layouterror": 64, ".samplers": 64, "angular": 64, "qiksit": 64, ".iplot": 64, "=\u300f": [64, 235, 406, 565, 1143, 4473, 4500, 5281], "city": [64, 4644, 5291, 5349], "\u300f)": [64, 204, 205, 209, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 328, 342, 375, 376, 380, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 499, 513, 534, 535, 539, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 658, 672, 970, 975, 1025, 1113, 1114, 1118, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1143, 1235, 1249, 1282, 1302, 1332, 1334, 1337, 1340, 1346, 1358, 1365, 1376, 1379, 1390, 1406, 1413, 1416, 1444, 1456, 1460, 1470, 1487, 1492, 1497, 1503, 1520, 1531, 1537, 1540, 1545, 1548, 1553, 1561, 1565, 1644, 1760, 1786, 1791, 1820, 1836, 1852, 1868, 1886, 1970, 2808, 2848, 3708, 4463, 4716, 4880, 4881, 4889, 5130, 5178, 5263, 5281, 5331, 5333, 5334], "paulivec": [64, 4644, 5293, 5349], "/pip": 64, "suppressable": 64, ".filterwarnings": 64, "category": [64, 1899, 1954, 2033, 2056, 2070, 2085, 2098, 2113, 2133, 2163, 2178, 2196, 2209, 2221, 2233, 2253], "=runtimewarning": 64, "_base": 64, ".devicespecification": 64, ".bit": [64, 5333, 5334], "_tuplelist": 64, "lay": 64, "(arbitrary": 64, ".plost": 64, "complementary": 64, "antipodal": 64, "marker": [64, 5287, 5289], "translucency": 64, "_counter": [64, 920, 939, 1259, 1654, 3993, 4008], "warned": 64, "served": 64, ".basicconfig": [64, 5338, 5355], ".debug": 64, "printed": [64, 235, 406, 565, 1143, 1448, 4354, 4380, 4644, 5281], "stderr": [64, 5355], "world": 64, "strong": 64, "correlations": 64, "highly": 64, "entangled": [64, 1376, 1379, 1441, 1456, 1503, 1537, 5263, 5277, 5370], "hundred": [64, 4568], "obtaining": 64, "-out": [64, 682, 1342, 1373, 1550, 4762, 4783, 4798, 4911, 5303, 5315, 5327], "craft": 64, "purity": [64, 4391, 4606, 4657, 4727], "guess": [64, 235, 406, 565, 709, 849, 850, 877, 878, 1143, 1376, 1379, 1441, 1450, 1456, 1503, 1537, 1563, 1567, 4231, 5281], "rccx": [64, 284, 455, 614, 1191, 4229], "(with": [64, 343, 344, 514, 515, 673, 674, 1250, 1251, 1373], "rcccx": [64, 283, 454, 613, 1190], "rycrx": 64, "'basic": [64, 5230], "-no": 64, "-ancilla": 64, "mct": [64, 262, 433, 592, 1169], "mcrx": [64, 259, 430, 589, 1166], "mcry": [64, 260, 431, 590, 1167], "mcrz": [64, 261, 432, 591, 1168], "graycode": 64, "rohf": 64, "drivers": 64, "pyquante": 64, "pyscf": 64, "hartreefock": 64, "parity": [64, 1935, 1937, 1945], "particle": [64, 82, 126, 131, 134, 148, 166, 173], "shell": 64, "uhf": 64, "qmolecule": 64, "integrals": 64, "atomic": [64, 1383, 1384, 1385, 1386, 4819, 4823, 4825], "experimentation": 64, "-chemistry": 64, "matrixoperator": 64, "weightedpaulioperator": 64, "tpbgroupedpaulioperator": 64, "_converter": 64, "unify": 64, "charge": 64, "likelihood": [64, 69, 70, 71, 118, 119, 120, 123], "postprocessing": 64, "linearly": [64, 110, 1399, 1406], "polynomially": 64, "_equation": 64, "_motion": 64, "study": 64, "qpe": [64, 92, 103, 115, 121, 136, 140, 364, 523, 1458, 5345, 5372], "/iqpe": 64, "pyeda": 64, "repeats": [64, 5347, 5348], "circuitcache": 64, "truthtableoracle": 64, "indeterminism": 64, "stretch": 64, "-kitaev": 64, "inverses": [64, 5105], "ibmqprovider": 64, "jumped": 64, "releasing": 64, "went": [64, 3932, 3963, 3976], "anti": [64, 1920, 1947, 1986, 4466, 4490, 4492, 4521, 4523, 4616, 4618], "increments": 64, "gain": [64, 4241, 4958], "polished": 64, "month": 64, "encouraged": 64, "_accounts": 64, "resetting": [64, 253, 424, 583, 1160], "page": [64, 1332, 1336, 1934, 1947], "granular": [64, 3779], "_providers": 64, "ibmqx": 64, "connecting": [64, 1537, 3796, 3909], "manipulating": [64, 2024, 2032], "cptp": [64, 319, 490, 649, 1226, 2751, 2796, 2813, 4325, 4332, 4344, 4351, 4418, 4453, 4460, 4683, 4695, 4702, 4717, 4735, 5366, 5368], "predetermined": 64, "removediagonalgatesbeforemeasure": [64, 5167, 5168, 5355], "_get": [64, 5364], "couplinglist": [64, 4839], "violation": [64, 5102], "extract": [64, 103, 188, 190, 363, 2877, 2878, 5043, 5044, 5045], "subpackages": 64, "swapper": [64, 5117], "prebuilt": 64, "/building": 64, "/pypi": 64, "send": [64, 822, 1926], ", assemble": 64, ", execute": 64, "declared": [64, 4241], "wigner": 64, "_wigner": 64, "_curve": 64, "_plaquette": 64, "_visualization": [64, 5354], "surprises": 64, "labelled": 64, "mcy": 64, "mcz": 64, "qubitvector": 64, "-swap": [64, 1355, 1371, 1531], "_enable": [64, 2323, 2349, 2363, 2376], "debian": 64, "autoconfiguration": 64, "rank": [64, 4516, 4542, 4637, 4665, 4730, 4735, 5117], "_mb": [64, 2323, 2349, 2363, 2376], "clashing": 64, "\"initial": [64, 2376], "\"chop": 64, "\"zero": [64, 2376], "linearsysteminput": 64, "pluggable": 64, "eigqpe": 64, "reciprocal": [64, 1378], "lookuprotation": 64, "longdivision": 64, "iqft": [64, 69, 1373, 1458, 1480], "summarized": [64, 97, 5276], "ryrz": 64, "vqalgorithm": 64, "qsvmvariational": 64, "/docplex": 64, "-dirty": [64, 262, 264, 433, 435, 592, 594, 1169, 1171], "dnf": [64, 5355], "disjunctive": 64, "conjunctive": [64, 1462, 1464, 5343], "capability": [64, 158, 1926], "esop": 64, "exclusive": [64, 4813], "quine": 64, "-mccluskey": 64, "exactcover": 64, "logicalexpressionoracle": 64, "-tables": 64, "customcircuitoracle": 64, "deutsch": 64, "-jozsa": 64, "bernstein": [64, 1102], "-vazirani": [64, 1102], "simon": 64, "uniform": [64, 2847, 4737], "adam": [64, 684, 685, 686, 687, 688, 689, 690, 691, 692], "amsgrad": [64, 683], "uncertainty": [64, 877], "constructions": [64, 1382], "exactlssolver": 64, "_resize": 64, "sized": [64, 1342, 1373, 1392, 1480, 1550], "rawfeaturevector": 64, "_classical": [64, 4241], "trained": 64, "_namespace": 64, "_packages": 64, "_uis": 64, "sat": [64, 1462, 1464, 5342, 5350], "_multicx": 64, "reorganized": 64, "phaseestimationcircuit": 64, "booleanlogiccircuits": 64, "fouriertransformcircuits": 64, "statevectorcircuits": 64, "qsvmkernel": 64, "svminput": 64, "classificationinput": 64, "'svm": 64, "_classification": 64, "'classification": 64, "entangler": [64, 1379, 1444, 1537, 5263, 5277], "-qobj": 64, "/endianness": 64, "coming": [64, 5140], "art": [64, 235, 406, 565, 1143, 5281], "commutationtransformation": 64, "checkmap": [64, 4992, 4993, 5355], "basicswap": [64, 4971, 4972, 5230, 5355], "infrastructure": 64, "-until": 64, "(using": 64, "falling": [64, 179], ".wrapper": 64, "depreciated": 64, "emitting": 64, "-incompatible": 64, "accompanying": 64, "indexing": [64, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 2265, 2269, 4487], "deal": [64, 5226], "_snapshot": [64, 2323, 2349, 3999, 4012, 5331], "_snapshots": 64, "plan": 64, "aside": [64, 285, 456, 615, 1192, 4967, 5169], "stabilization": 64, "priort": 64, ",u": 64, "(draw": 64, "sole": 64, "interactively": 64, "interact": [64, 2487, 3852], "adjustment": [64, 1644], "hist": 64, "_fig": 64, ".show": [64, 5331, 5333, 5334, 5349], ".savefig": [64, 5349], "aspect": 64, "javascript": [64, 3905], "reachable": [64, 1719, 4856], "prepended": [64, 1441, 4025, 5280], "restructuring": 64, "featured": 64, ".legacysimulators": 64, "stabilize": [64, 2018], "damping": [64, 2845, 2858, 2859, 5366, 5367], "programmatic": 64, "-empty": [64, 4172], "/backend": 64, "encapsulates": 64, "illustrating": 64, "cnx": 64, "algorithmic": [64, 165, 172], "randomdistribution": 64, "bernoullidistribution": 64, "cover": [64, 1360], "packing": 64, "vertex": 64, "clique": 64, "ai": [64, 2878], "pauliexpansion": 64, "paulizexpansion": 64, "training": [64, 1456], "/deserialization": 64, "illustration": 64, "european": 64, "delta": [64, 92, 3927, 4192, 4717, 5339], "income": 64, "asset": 64, "}..": 64, ")serialier": 64, "adopt": 64, "initialstate": 64, "redesign": 64, "centered": [64, 4167], "communication": [64, 3925], "awaited": 64, "-operability": 64, "extensibility": 64, "facilities": 64, "aimed": 64, "revamp": 64, "stylish": 64, "refinements": 64, "modular": [64, 159, 1480], "hinted": 64, "completed": [64, 2482, 5355, 5369], "(sim": 64, "managing": 64, "authenticating": 64, "sessions": [64, 3704], "-off": 64, "_url": [64, 3766], "(project": 64, "_project": 64, "qe": 64, "folder": 64, "(local": 64, "_devices": [64, 2323, 2349, 2363, 2376], "(simulator": 64, "\u300elocal": 64, "\u300eqasm": 64, "\u300estatevector": 64, "_py": 64, "\u300eunitary": 64, "replenish": [64, 5178], "credits": [64, 3932, 3963, 3976, 4810], "(limit": [64, 3723, 3736, 3739], "consult": 64, "insight": [64, 1935], "members": [64, 3711, 3796, 3905, 3909], ".cancelled": 64, ".queued": 64, "secondly": 64, "/execution": 64, "brings": 64, "hood": [64, 5111], "focused": 64, "friendlier": 64, "anonymous": [64, 1648, 1649, 4229], "ongoing": 64, "opening": 64, ".register": 64, ".quantumprogram": 64, "vein": 64, ".available": 64, "(token": 64, "encourage": 64, "quickstart": 64, "_core": 64, "homogenized": 64, "providername": 64, "_languageorproject": 64, "_cpp": 64, "supposed": 64, "(slot": 64, "spots": [64, 5077, 5143], "-friendly": [64, 3831], "giving": [64, 4568, 5291], "autonaming": 64, "swapped": [64, 1537, 4389, 4655, 4964], "(size": 64, "algorithmerror": [65, 110, 119, 150, 158, 168, 169, 175, 693], "_processing": [66, 71, 75, 79, 86, 95, 101, 113, 119, 123, 181, 188, 190, 357, 363, 3899], "\u30d9\u30fc\u30b9\u30af\u30e9\u30b9": [66, 67, 69, 75, 77, 79, 81, 84, 86, 88, 90, 92, 95, 97, 101, 103, 105, 108, 110, 113, 115, 118, 123, 125, 128, 130, 133, 136, 140, 143, 147, 154, 156, 160, 162, 165, 172, 181, 186, 189, 191, 193, 352, 357, 362, 364, 523, 683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 830, 832, 833, 841, 849, 861, 869, 877, 888, 896, 904, 913, 919, 920, 923, 936, 939, 942, 943, 956, 970, 986, 1000, 1006, 1020, 1036, 1050, 1063, 1067, 1083, 1099, 1102, 1259, 1262, 1263, 1277, 1296, 1318, 1319, 1332, 1333, 1336, 1339, 1342, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1412, 1415, 1419, 1421, 1424, 1427, 1428, 1441, 1447, 1448, 1450, 1453, 1456, 1457, 1458, 1459, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1503, 1504, 1517, 1519, 1522, 1524, 1526, 1530, 1533, 1535, 1537, 1539, 1542, 1544, 1547, 1550, 1551, 1552, 1555, 1556, 1558, 1560, 1563, 1564, 1567, 1586, 1654, 1719, 1722, 1745, 1747, 1749, 1751, 1753, 1772, 1786, 1802, 1815, 1831, 1847, 1863, 1879, 1898, 1923, 1926, 1930, 1932, 1934, 1945, 1949, 1951, 1953, 1968, 1970, 1974, 1976, 1978, 1979, 1981, 1984, 1987, 1990, 1993, 1995, 1998, 2002, 2004, 2006, 2010, 2013, 2014, 2017, 2018, 2021, 2023, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2155, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 2265, 2267, 2269, 2271, 2272, 2274, 2275, 2277, 2285, 2293, 2295, 2297, 2309, 2313, 2314, 2318, 2320, 2323, 2337, 2349, 2363, 2376, 2389, 2403, 2417, 2431, 2445, 2459, 2473, 2487, 2504, 2517, 2530, 2543, 2556, 2569, 2582, 2595, 2608, 2621, 2634, 2647, 2660, 2673, 2686, 2699, 2712, 2725, 2738, 2751, 2764, 2798, 2801, 2813, 2830, 2842, 2862, 2868, 2894, 2906, 2909, 2918, 2927, 2936, 2945, 2954, 2963, 2971, 2980, 2988, 2997, 3005, 3013, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3340, 3348, 3356, 3365, 3373, 3382, 3390, 3398, 3407, 3415, 3424, 3433, 3441, 3449, 3458, 3466, 3474, 3482, 3485, 3488, 3496, 3505, 3513, 3521, 3529, 3538, 3546, 3554, 3563, 3571, 3580, 3588, 3597, 3605, 3613, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 3704, 3711, 3718, 3736, 3744, 3756, 3766, 3773, 3777, 3795, 3796, 3830, 3834, 3845, 3852, 3869, 3876, 3889, 3891, 3899, 3901, 3905, 3909, 3920, 3922, 3925, 3932, 3935, 3951, 3954, 3957, 3960, 3963, 3973, 3976, 3979, 3982, 3993, 4008, 4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4084, 4094, 4103, 4112, 4121, 4130, 4139, 4148, 4157, 4162, 4167, 4172, 4177, 4182, 4187, 4203, 4206, 4209, 4212, 4215, 4229, 4234, 4239, 4240, 4241, 4246, 4249, 4252, 4255, 4258, 4261, 4264, 4267, 4270, 4273, 4276, 4279, 4282, 4285, 4288, 4291, 4294, 4299, 4316, 4335, 4354, 4376, 4402, 4421, 4424, 4444, 4463, 4487, 4519, 4545, 4552, 4568, 4595, 4614, 4640, 4667, 4686, 4705, 4712, 4742, 4745, 4751, 4767, 4773, 4787, 4802, 4814, 4817, 4819, 4821, 4823, 4825, 4831, 4834, 4839, 4861, 4866, 4867, 4868, 4873, 4878, 4879, 4894, 4901, 4903, 4915, 4922, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223, 5226, 5228, 5235, 5237, 5239, 5241, 5244, 5246, 5247, 5250, 5268, 5272, 5295, 5307, 5319, 5332], "minimally": [66, 86, 4354], "preparing": [66, 86, 115, 152, 170, 177, 276, 447, 606, 852, 1183, 1387, 1388], "referred": [66, 86, 1388, 1479, 3957, 4084, 4717, 5278], "\\mathcal": [66, 86, 97, 111, 186, 849, 1388, 1397, 4316, 4317, 4319, 4329, 4334, 4335, 4336, 4338, 4348, 4353, 4402, 4403, 4405, 4415, 4420, 4444, 4445, 4447, 4457, 4462, 4667, 4668, 4670, 4680, 4685, 4686, 4687, 4689, 4699, 4704, 4714, 4717, 4720, 4726, 5342, 5368], "{a": [66, 69, 86, 97, 111, 850, 878, 1388, 5342, 5362], "{q": [66, 86, 97, 111, 1388, 4463, 5342, 5368], "amplify": [68, 97, 98, 1388], "amplitudeamplifierresult": [68, 101], "amplificationresult": 68, "\\tilde": [69, 186], "restricted": [69, 143, 145, 1360, 2161, 2232, 4519, 5178], ": y": 69, "finer": [69, 5335], "circumvented": 69, "appendix": 69, "brassard": [69, 92, 97, 110, 118, 1388, 5342], "hoyer": [69, 97, 110, 118, 1388, 5342], "mosca": [69, 97, 110, 118, 1388, 5342], "tapp": [69, 97, 110, 118, 1388, 5342], "[2": [69, 92, 97, 110, 118, 186, 342, 345, 513, 516, 672, 675, 683, 877, 904, 973, 1023, 1249, 1252, 1280, 1299, 1336, 1342, 1373, 1380, 1382, 1387, 1388, 1399, 1456, 1458, 1468, 1527, 1567, 1757, 1789, 1818, 1834, 1850, 1866, 1883, 4463, 4819, 4825, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5347, 5348, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "grinko": [69, 92, 110], "gacon": [69, 110, 849, 1399], "zoufal": [69, 110, 1399], ".phaseestimation": [69, 136], ".qft": 69, "'likelihood": 70, "_ratio": [70, 110, 119, 4172], "_fisher": [70, 119], "mle": [70, 71, 75, 120], "ret": 70, "_post": [71, 119], "estimationproblem": [72, 73, 78, 87, 93, 94, 111, 112, 120, 121, 122], "/gridpoints": 74, "gridpoints": [74, 120], "amplitudeestimatorresult": [75, 78, 80, 95, 113, 123], "_interval": [75, 79, 95, 113, 123, 814, 5333, 5334], "_processed": [75, 79, 95, 113, 123], "-processed": [75, 79, 95, 101, 113, 123, 3757, 4803], "_probability": [75, 95, 101], "]$": 75, "_evaluation": [75, 101, 103, 136, 140, 142, 1458, 5342], "_queries": [75, 79, 95, 113, 123], "receiver": [76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 831], "algorithmresult": [76, 79, 80, 84, 85, 90, 91, 96, 102, 105, 106, 114, 124, 128, 129, 141, 160, 161, 191, 192, 830, 831], ":param": [76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 831, 1284, 1989, 2800, 2844, 3973, 5113, 5116], "-relevant": [78, 94, 112, 122], "reused": [82, 126, 131, 134, 148, 166, 173, 240, 411, 570, 1147], "dipole": [82, 126, 131, 134, 148, 166, 173], "eigensolverresult": [82, 85, 131, 166], "rescale": [87, 92, 1399, 4192, 4193, 4195, 4197, 5154, 5160], "_factor": [87, 683, 761, 904, 1399, 5033], "rescaled": 87, "_evaluated": 90, "holding": [90, 1941, 1944], "evolutionresult": [91, 109, 155, 163], "fae": 92, "nakaji": 92, "[3": [92, 97, 877, 1373, 1388, 1458, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5347, 5348, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "overwrites": 92, "fasteramplitudeestimation": [93, 94], "^k": [93, 342, 343, 344, 345, 513, 514, 515, 516, 672, 673, 674, 675, 798, 841, 1249, 1250, 1251, 1252, 1815, 1831, 1847, 1863], "fasteramplitudeestimationresult": [94, 96], "_first": 95, "_steps": [95, 186, 362, 523, 2337], "_intervals": [95, 113], "growth": 97, "searching": [97, 133, 4973, 5342], "unstructured": 97, "collections": [97, 4241, 5341], "speedup": [97, 180], "=\\": [97, 4389, 4715, 5345, 5349, 5350, 5362, 5364, 5368, 5372], "rightarrow": [97, 1355, 1364, 1397, 1399, 1530, 1552, 1560, 1564, 5350], "-search": [97, 120, 725, 734], "^*": [97, 773, 4193, 4197], ")=": [97, 4722, 5345, 5350, 5362, 5366, 5372], "database": [97, 1388, 3723, 3739, 3781, 3782, 3783, 5342], "\\mathbb": [97, 186, 1388, 5350, 5362, 5368], "{o": [97, 849, 4819, 4825, 5362], "}(": [97, 849, 1393, 1397, 1399, 1400, 1489, 1494, 1499, 1501, 1556, 1558, 3994, 4200, 4201, 4316, 4335, 4402, 4444, 4667, 4686, 4714, 4715, 4727, 4747, 4769, 4819, 4825, 5345, 5347, 5348, 5350, 5365, 5366, 5368, 5372], "worst": 97, "conversely": 97, "-called": [97, 1388, 1407], "flags": [97, 1318, 1447, 4229], "/state": 97, "{s": [97, 1388, 4319, 4338, 4405, 4447, 4670, 4689, 5342], "}_": [97, 1388, 1397, 2001, 2021, 4335, 4463, 4667, 4717, 5333, 5334, 5362, 5368], "flips": [97, 1364, 1369, 1388, 1398, 1447, 4984, 5095], "hit": 97, "_f": [97, 1388, 5275, 5342], "unimportant": 97, "treats": 97, "= h": [97, 1388, 1542, 2883], "otimes": [97, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1374, 1382, 1387, 1388, 1489, 1494, 1499, 1501, 1586, 2818, 2826, 4305, 4310, 4322, 4331, 4335, 4341, 4350, 4360, 4369, 4389, 4393, 4398, 4408, 4417, 4431, 4439, 4440, 4450, 4459, 4463, 4474, 4482, 4558, 4564, 4576, 4590, 4659, 4673, 4682, 4692, 4701, 4747, 4769, 5342, 5347, 5348, 5350, 5361, 5366, 5367, 5370], "mathcal": [97, 111, 1388, 1397, 4317, 4319, 4329, 4334, 4335, 4336, 4338, 4348, 4353, 4403, 4405, 4415, 4420, 4444, 4445, 4447, 4457, 4462, 4668, 4670, 4680, 4685, 4687, 4689, 4699, 4704, 4714, 4717, 4720, 4726, 4819, 4825, 5342, 5368], "diffusion": [97, 1388], "reflection": [97, 1388, 5342], "mechanical": [97, 1388, 5342], "chuang": [97, 136, 328, 499, 658, 1235, 1388, 1458, 1934], "nielsen": [97, 136, 328, 499, 658, 1235, 1388, 1458, 1934], "cambridge": [97, 136, 1388, 1458, 3122, 3130], "university": [97, 136, 1388, 1458], "press": [97, 136, 1388, 1458, 3704], "chapter": [97, 1388, 1947], "iterator": [97, 773, 849, 877, 1663, 1674, 1688, 1689, 1694, 1696, 1697, 1712, 1737, 2122, 4508, 4509, 4534, 4535, 4583, 4584, 4629, 4630], "/power": 97, "increasing": [97, 143, 255, 256, 343, 344, 345, 426, 427, 514, 515, 516, 585, 586, 673, 674, 675, 693, 849, 1162, 1163, 1250, 1251, 1252, 2165, 4139, 5184, 5199], "(growth": 97, "boyer": [97, 5342], "rtype": [97, 1671, 1720, 1728, 1729, 2155, 2157, 2159, 3975, 4889], "_solutions": [100, 5342], "frequently": [101, 1456, 1922], "nearly": [103, 105, 1953, 4139], "exponentiating": [103, 145], "\\lambda": [103, 224, 226, 263, 338, 340, 341, 395, 397, 434, 509, 511, 512, 554, 556, 593, 668, 670, 671, 1132, 1134, 1170, 1245, 1247, 1248, 1345, 1357, 1360, 1459, 1539, 1542, 1544, 1547, 1551, 4192, 4335, 4715, 5350, 5366, 5370], "\\exp": [103, 109, 155, 4193], "|c": [103, 136, 4229, 5350], "|^": [103, 136, 852, 1388, 5350], "degenerate": 103, "=z": 103, "\\pm": [103, 5362], "distinguished": [103, 143, 4182, 4390, 4398, 4605, 4656, 4664], "phaseestimationscale": [103, 105, 144, 145, 146], "role": [103, 1537, 5117, 5263], "ideas": 103, "-scale": [103, 877, 5123], "\u2019brien": 103, "tarasinski": 103, ".m": 103, "terhal": 103, "hamiltonianphaseestimation": [104, 105], "eigenphase": [104, 116, 117, 136, 138], "omitted": [104, 116, 117, 138, 1644, 2813, 4229], "evolutionbase": [104, 1377, 1471, 1948, 1950, 1952, 1953, 1968, 1970, 1979], "upper": [104, 143, 165, 172, 212, 237, 383, 408, 542, 567, 765, 896, 1377, 1382, 1396, 1441, 1450, 1456, 1471, 1537, 1551, 1563, 1567, 2311, 4743, 4747, 4750, 4769, 4772, 4787, 5226, 5338], "tighter": 104, "hamiltonianphaseestimationresult": [104, 106, 107], "diagnostic": 104, "_scale": [105, 5331], "_coefficient": [105, 145, 146], "phaseestimatorresult": [105, 107, 140], ".estimate": 105, "phaseestimationresult": [105, 136, 138, 139, 141, 142], "cutoff": [107, 142, 2867], "_float": [107, 142, 3901], "shifted": [107, 145, 146, 1392, 1537, 3993, 4007, 4039, 4083, 4093, 4102, 4111, 4120, 4129, 4138, 4147, 4156, 4219, 5023, 5263, 5333, 5334], "imaginaryevolver": 109, "tau": [109, 4241], "evolves": [109, 155, 163], "\\tau": 109, "confint": 110, "'beta": 110, "carefully": 110, "logarithmic": [110, 180], "statistical": 110, "chernoff": 110, "clopper": 110, "-pearson": 110, "-ratio": 110, "/ k": 110, "findnextk": 110, "_estimated": 113, "ratios": 113, "}/": [113, 186, 1459, 1468, 1496, 1539, 4162, 4167], "phaseestimator": [115, 136, 140], "dobsicek": 115, "benchmark": [115, 4821], "rounds": [115, 169, 4050], "iterativephaseestimation": [116, 117], "omega": [116, 2005, 4191, 4199, 5362], "kth": 116, "fig": [116, 1475, 1478, 1479, 1480, 5345, 5352, 5372], "prepares": [116, 117, 138, 182, 191, 353, 358, 1387, 2881, 2882], "-state": [117, 5364, 5367], "iterativephaseestimationresult": 117, "uno": 118, "raymond": 118, "tanaka": 118, "onodera": 118, "yamamoto": 118, "-negative": [118, 1551, 3905], "[id": 118, ", q": [118, 973, 1023, 1280, 1299, 1372, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "^(": [118, 1406, 1470, 2040, 2139, 5361], "'fisher": 119, "notations": 119, "fi": 119, "oi": 119, "theoretical": 119, "hasn": [119, 1891], "statevectors": [120, 309, 310, 311, 480, 481, 482, 639, 640, 641, 1216, 1217, 1218, 2647, 2660, 2787, 2788, 2789, 4645], "percentage": [123, 904, 5331, 5333, 5334], "minimumeigensolverresult": [126, 129, 134, 148, 173], "_criterion": [130, 133], "-valued": [130, 2162, 4187], "spmatrix": [130, 1918, 2053, 2084, 2111, 2131, 2206, 2220, 2231, 5361], "/eigenstates": [130, 133], "(eigenstate": [130, 133], "satisfies": [130, 157, 158, 5021, 5023, 5143, 5233, 5234], "leaving": [136, 1388, 1503, 1701], "representable": 136, "spread": 136, "-reading": 136, "_pe": 136, "-estimation": 136, "michael": [136, 1458], "isaac": [136, 1458], "th": [136, 877, 1348, 1350, 1360, 1362, 1379, 1458, 1481, 1483, 1486, 1489, 1491, 1494, 1499, 1501, 1544, 1547, 1556, 1558, 5342, 5357], "anniversary": [136, 1458], "edition": [136, 1458], "ed": [136, 1458, 2265, 2269], "york": [136, 1458], "ny": [136, 1458], "usa": [136, 1458], "-preparation": 137, "pe": [138, 139], "_estimator": [138, 139], "satisfying": [140, 186, 1464, 5023, 5331, 5333, 5334], "-readout": [140, 145], "inspecting": [140, 5355], "troubleshooting": 140, "highesest": 140, "noiseless": [142, 4922], "concentrated": 142, "uninteresting": 142, "eigenvectors": [143, 1934, 1935, 1937, 1939], "avoided": 143, "decreases": 143, "closer": 143, "artifacts": 143, "unscaled": 143, "combinatorial": [147, 1987, 2875], "-tuned": 147, "comprises": 147, "principally": 147, "dictates": 147, "2p": 147, "gamma": [147, 224, 395, 554, 850, 878, 1132, 1362, 1363, 1471, 5352, 5368, 5370], "discussed": [147, 1472, 1475], "annealing": 147, "constrains": 147, "subspace": 147, "hilbert": [147, 2884, 2887, 4730, 5368], "subspaces": 147, "-starting": 147, "gradientbase": [147, 165, 172, 2010, 2018], "expectationbase": [147, 150, 151, 162, 165, 168, 169, 172, 175, 176, 179, 186, 852, 1983, 1984, 1987, 1991, 1992, 1994, 1995, 1998, 2008], "quickest": [147, 165, 172], "runnable": [150, 168, 175], "equalling": [150, 168, 175, 1948, 1949, 1969, 1971], "realevolver": [155, 162], "factoring": 156, "finds": [156, 701, 1923, 1939, 2158, 5055, 5137, 5175], "/ttlion": 156, "/shoralgqiskit": 156, "factored": [157, 158, 269, 440, 599, 1176], "gcd": [157, 158], "co": 158, "-prime": 158, "shorresult": [158, 161], "modinv": 159, "multiplicative": [159, 1406, 1450, 1470], "_formula": 162, "lie": [162, 1448, 4819, 4825], "-trotter": [162, 1448, 4819, 4825], "-suzuki": 162, ".aux": 162, "betas": 165, "deflation": 165, "energies": [165, 2165, 2166, 2167, 2168, 5361], "generalised": 165, "succesive": 165, "introducing": [165, 5117], "eigenstaes": 165, "minimised": 165, "-components": [165, 172], "denoting": 165, "trial": [165, 172, 1376, 1379, 1503, 5175, 5178], ")which": 165, "varied": [165, 172, 5033], "refining": 165, "believe": [165, 172, 4013, 4014], "hyperparameter": 165, "balances": 165, "contribution": 165, "(defaults": [165, 172], ".`": [165, 172], "prev": 169, "_states": 169, "enegy": 169, "dissociation": 172, "profile": 172, "interatomic": 172, "converge": [172, 806, 5338], "tutorial": [172, 5259, 5262], "detailing": 172, "deviations": 179, "unparametrized": 179, "neglected": 179, "ignoring": [179, 1472, 2155], "instabilities": 179, "exponentially": [180, 2204, 2248, 2261, 4821, 5193], "counterparts": 180, "kill": [180, 5220], "subfolders": 180, "placeholder": [180, 1006, 1083, 1908, 1948, 1953, 2042, 2123, 2141, 2169, 2239], "linearsystemobservable": [181, 188, 190, 353, 354, 355, 356, 357, 363], "\\abs": 181, "}x": [181, 1382, 1489, 1499, 1586], ".linear": [181, 186, 357, 362, 364, 523], ".observables": [181, 186, 357, 362], ".absolute": 181, "_average": 181, "(vector": [181, 357], "(init": [181, 357], ", none": [181, 186, 357], "(observable": [181, 357, 849, 877], ".observable": [181, 186, 357, 362], "_vec": 181, "(~": [181, 357, 1462, 1983, 1990, 5361], ".post": [181, 357, 5342], "_classically": [181, 357], "absoluteaverage": [182, 183, 184, 185], "tensoredop": [183, 354, 359, 1964, 2024, 2032, 2064, 2065, 2066, 2067, 2079, 2093, 2127, 2171, 2189, 2215], "linearsolver": [186, 190, 362], "arise": 186, "-life": 186, "areas": 186, "differential": [186, 789, 2337], "fluid": 186, "{c": [186, 850, 878, 4159, 4164, 4169, 4174, 4184, 5350, 5368], "\\times": 186, "\\vec": [186, 773, 1450, 1483, 4739], "{b": [186, 1399], "}=": [186, 2021, 5178, 5345, 5350, 5372], "vec": [186, 773, 1450, 1483, 4664, 4739], "-sparse": 186, "\\kappa": 186, "\\log": 186, "/\\": [186, 4196, 5361], "\\epsilon": [186, 5362], "kappa": 186, "assumptions": [186, 5023], "crucial": 186, "remark": 186, ".matrices": [186, 362, 364, 523], "matrixfunctional": [186, 358, 359, 360, 361, 362], "_hand": [186, 362], "_side": [186, 362], "(right": [186, 362], "(matrix": [186, 362, 364, 523, 2376, 2909, 2918, 2927], "approx": [186, 798, 1406, 4819, 4825, 5362], "harrow": 186, "hassidim": 186, "lloyd": 186, "phys": [186, 693, 1396, 1477, 4162, 4192, 4354, 4370, 4519, 4595, 4614, 4716, 4796], "rev": [186, 693, 1396, 1477, 4162, 4192, 4354, 4370, 4519, 4595, 4614, 4716, 4796], "lett": [186, 1396, 4162, 4796], "carrera": [186, 1468], "vazquez": [186, 1468], "hiptmair": [186, 1468], "enhancing": [186, 1468], "richardson": [186, 1468], "extrapolation": [186, 1468], "tilde": 186, "| \\": 186, "neg": [187, 1378, 1909, 5343], "_vals": [187, 1378, 5338], "=b": [187, 188, 190, 363], "equation": [187, 188, 190, 363, 1947, 1948, 1949, 2337, 5133], "cheaper": 187, "extracted": [188, 190, 363, 1641, 1928, 1929, 4874, 5250], "linearsolverresult": [188, 190, 192, 363], "linearsystemsresult": 191, "euclidean": [191, 4796], "'ls": 193, "\u300egate": [193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1722, 5239, 5244], "\u300f:": [193, 262, 264, 364, 433, 435, 523, 592, 594, 1102, 1169, 1171, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 1654, 1673, 1722, 1732, 4433, 4730, 4837, 4864, 4871, 4938, 5178, 5196, 5239, 5244, 5282, 5290, 5332], "'include": [193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "'openqasm": [193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 4229, 5239, 5244], ";'": [193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 5239, 5244], "influence": [193, 364, 523, 1102, 1318, 1342, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1398, 1399, 1406, 1407, 1410, 1441, 1447, 1450, 1456, 1457, 1458, 1462, 1465, 1466, 1468, 1470, 1471, 1472, 1475, 1477, 1480, 1503, 1537, 1550, 1551, 1555, 1563, 1567, 3993, 4008, 5239, 5244], "linearsystemmatrix": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 364, 523], "regs": [196, 367, 526, 1102, 1105, 4037, 4042, 4887], "broadcast": [197, 368, 527, 926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1106, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767], "unwrapped": [197, 368, 527, 1106], ".instructionset": [197, 199, 232, 265, 287, 364, 368, 370, 403, 436, 458, 523, 527, 529, 562, 595, 617, 1106, 1108, 1140, 1172, 1194, 5347, 5348, 5355, 5369], "/array": [198, 369, 528, 1107], "mismatches": [198, 369, 528, 765, 1107], ", parameter": [198, 369, 528, 1107, 1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "(c": [198, 369, 528, 970, 1107, 1471, 1645, 1646, 1649, 1650, 5282, 5345, 5350, 5355, 5372], "(bound": [198, 369, 528, 849, 877, 1107], "yielding": [200, 371, 530, 773, 849, 1109], "\u2026}": [200, 371, 530, 1109], "substitution": [200, 371, 530, 1109, 5227, 5238], "-manager": [201, 213, 240, 251, 347, 372, 384, 411, 422, 518, 531, 543, 570, 581, 677, 1110, 1121, 1147, 1158, 1254], "reusable": [201, 213, 372, 384, 531, 543, 1110, 1121], "-context": [201, 213, 372, 384, 531, 543, 1110, 1121], "immediate": [201, 213, 372, 384, 531, 543, 1110, 1121], "typevar": [202, 373, 532, 1111], "cbit": [203, 265, 374, 436, 533, 595, 927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1112, 1172, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 5345, 5372], "_representation": [203, 278, 374, 449, 533, 608, 1112, 1185], "slice": [204, 205, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 241, 245, 249, 250, 251, 257, 258, 262, 263, 264, 265, 268, 273, 274, 282, 283, 284, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 314, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 349, 350, 351, 375, 376, 380, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 412, 416, 420, 421, 422, 428, 429, 433, 434, 435, 436, 439, 444, 445, 453, 454, 455, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 485, 500, 501, 502, 503, 504, 508, 509, 510, 511, 512, 520, 521, 522, 534, 535, 539, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 571, 575, 579, 580, 581, 587, 588, 592, 593, 594, 595, 598, 603, 604, 612, 613, 614, 617, 620, 621, 622, 623, 624, 625, 626, 627, 628, 644, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 679, 680, 681, 1106, 1113, 1114, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1147, 1148, 1152, 1156, 1157, 1158, 1159, 1164, 1165, 1169, 1170, 1171, 1172, 1175, 1180, 1181, 1189, 1190, 1191, 1194, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1221, 1236, 1237, 1238, 1239, 1240, 1244, 1245, 1246, 1247, 1248, 1254, 1256, 1257, 1258, 4487], "chgate": [205, 376, 535, 1114, 1344, 1650, 5355], "clearing": [206, 377, 536, 1115], "narrower": [211, 382, 541, 1120, 1667], "(sub": [211, 382, 541, 1120, 5352], ")circuit": [211, 382, 541, 1120], "wraps": [211, 382, 541, 861, 896, 1120, 4231], "wider": [211, 382, 541, 1120, 1667, 5073, 5177, 5201], "-literal": [211, 382, 541, 1120], "stays": [215, 216, 386, 387, 545, 546, 928, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1123, 1124, 1268, 1283, 1303, 1324, 1433, 1509, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 5275], "breakdown": [217, 388, 547, 1125], "dcxgate": [230, 401, 560, 1138], "equals": [231, 402, 561, 1139, 1318, 1470, 1682, 1905, 1937, 1958, 2038, 2058, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 4282, 4579, 4606, 4613], "'dt": [232, 403, 562, 956, 986, 1050, 1140, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4875, 5331], "ps": [232, 403, 562, 1140], "directives": [233, 321, 404, 492, 563, 651, 1141, 1228, 1684, 1716, 4040, 4226, 4228, 5023], "\u30e1\u30e2": [233, 239, 271, 404, 410, 442, 563, 569, 601, 814, 1141, 1146, 1178, 3993, 4025, 4026, 4796, 4958, 5018, 5021, 5190, 5350], "shende": [234, 343, 344, 345, 405, 514, 515, 516, 564, 673, 674, 675, 1142, 1250, 1251, 1252, 1372, 1526, 1815, 1831, 1847, 1863], "\u2026,": [234, 342, 345, 405, 513, 516, 564, 672, 675, 1142, 1249, 1252, 1815, 1831, 1847, 1863, 3761, 3873, 4743, 4744, 4806, 5077, 5143], "[k": [234, 405, 564, 1142, 4463, 4765, 4785, 4800, 4913, 4926, 5305, 5317, 5329, 5366], "console": [235, 406, 565, 1143, 4380, 4644, 5281], "-quality": [235, 406, 565, 1143, 5281], "uncompiled": [235, 406, 565, 1143, 4380, 4644, 5281], "shrink": [235, 406, 565, 1143, 5281], "home": [235, 406, 565, 912, 1143, 5281], "/styles": [235, 406, 565, 1143, 5281], "defaultstyle": [235, 406, 565, 1143, 5281], "/disable": [235, 406, 565, 1143, 5281], "justify": [235, 406, 565, 1143, 5281], "justified": [235, 406, 565, 1143, 5281], "placed": [235, 406, 565, 936, 1143, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4209, 4212, 5023, 5244, 5281, 5331, 5333, 5334], "merges": [235, 406, 565, 1143, 5007, 5281], "room": [235, 406, 565, 1143, 5281], "pagination": [235, 406, 565, 1143, 3723, 5281], "shutil": [235, 406, 565, 1143, 5281], "_terminal": [235, 406, 565, 1143, 5281], "visual": [235, 406, 565, 1067, 1143, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 5281], "bundle": [235, 406, 565, 1143, 5281], ".image": [235, 406, 565, 1002, 1143, 1645, 1646, 1673, 1732, 4844, 5281, 5282, 5283, 5354], "backgroundcolor": [235, 406, 565, 1143, 5281, 5332, 5354], "eeeeee": [235, 406, 565, 1143, 5281], "eigs": [237, 408, 567], "locate": [239, 410, 569, 1146], "indexset": [240, 411, 570, 1006, 1147], "qubitspecifier": [240, 252, 411, 423, 570, 582, 1147, 1159], "clbitspecifier": [240, 252, 411, 423, 570, 582, 1147, 1159], "forloopcontext": [240, 411, 570, 1147], "instr": [247, 418, 577, 1154, 5355, 5366], "trigger": [251, 252, 422, 423, 581, 582, 1036, 1158, 1159, 4075, 4958, 5021, 5102], "/else": [251, 252, 422, 423, 581, 582, 1158, 1159], "enclosing": [251, 252, 422, 423, 581, 582, 923, 943, 1158, 1159], "chainable": [252, 423, 582, 1159], ".statepreparation": [253, 424, 583, 1160, 1772], "bitmap": [253, 276, 424, 447, 583, 606, 1160, 1183, 1526, 1772], "indicating": [253, 276, 280, 281, 424, 447, 451, 452, 583, 606, 610, 611, 1160, 1183, 1187, 1188, 1377, 1441, 1450, 1456, 1471, 1526, 1537, 1563, 1567, 1772, 1970, 2025, 2032, 2055, 2063, 4915, 5244, 5294], "/np": [253, 276, 424, 447, 583, 606, 1160, 1183], "invert": [254, 289, 425, 460, 584, 619, 929, 933, 949, 953, 962, 967, 977, 982, 996, 1012, 1017, 1027, 1032, 1042, 1047, 1056, 1060, 1066, 1161, 1196, 1269, 1274, 1285, 1290, 1304, 1309, 1329, 1335, 1338, 1378, 1395, 1418, 1420, 1423, 1426, 1434, 1438, 1473, 1482, 1484, 1510, 1514, 1767, 1779, 1783, 1798, 1812, 1822, 1827, 1838, 1843, 1854, 1859, 1870, 1875, 1893, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2705, 2709, 2718, 2722, 2731, 2735, 2744, 2748, 2757, 2761, 2770, 2774], "recursively": [254, 289, 425, 460, 584, 619, 929, 933, 949, 953, 962, 967, 982, 996, 1012, 1017, 1027, 1032, 1042, 1047, 1056, 1060, 1161, 1196, 1269, 1274, 1285, 1290, 1304, 1309, 1329, 1421, 1434, 1438, 1510, 1514, 1767, 1779, 1783, 1798, 1812, 1822, 1827, 1838, 1843, 1854, 1859, 1870, 1875, 1893, 1905, 1933, 1958, 2028, 2038, 2039, 2064, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2705, 2709, 2718, 2722, 2731, 2735, 2744, 2748, 2757, 2761, 2770, 2774, 4204, 4207, 4210, 4213, 4216, 4224, 5004, 5023, 5205, 5211], "_zero": [255, 256, 426, 427, 585, 586, 1162, 1163, 1466, 1468, 5361], "_dirty": [255, 256, 426, 427, 585, 586, 1162, 1163], "iten": [255, 256, 426, 427, 585, 586, 1162, 1163, 1372, 1722], "orthonormal": [255, 256, 426, 427, 585, 586, 1162, 1163], "columns": [255, 256, 426, 427, 585, 586, 1162, 1163, 4497, 4506, 4528, 4533, 4623, 4628, 4686, 4849, 5272], "fed": [255, 256, 426, 427, 585, 586, 1162, 1163], "-m": [255, 256, 426, 427, 585, 586, 1162, 1163], "significance": [255, 256, 342, 343, 344, 345, 426, 427, 513, 514, 515, 516, 585, 586, 672, 673, 674, 675, 1162, 1163, 1249, 1250, 1251, 1252], "iswapgate": [257, 428, 587, 1164], "mcp": [258, 429, 588, 1165], "_controls": [259, 260, 261, 342, 343, 344, 345, 430, 431, 432, 513, 514, 515, 516, 589, 590, 591, 672, 673, 674, 675, 1166, 1167, 1168, 1249, 1250, 1251, 1252], "_ancillae": [260, 431, 590, 1167], "ancillary": [260, 431, 590, 919, 1167], "'noancilla": [262, 264, 433, 435, 592, 594, 1169, 1171, 1318, 1388, 1417, 1447], "-cx": [262, 264, 433, 435, 592, 594, 1169, 1171], "varying": [262, 264, 433, 435, 592, 594, 869, 1169, 1171, 4712], "\u300enoancilla": [262, 264, 433, 435, 592, 594, 1169, 1171], "\u300erecursion": [262, 264, 433, 435, 592, 594, 1169, 1171], "\u300ev": [262, 264, 433, 435, 592, 594, 1169, 1171], "-chain": [262, 264, 433, 435, 592, 594, 1169, 1171, 1407, 1410, 1424, 1425], "clean": [262, 264, 433, 435, 592, 594, 1169, 1171], "ancillae": [262, 264, 433, 435, 592, 594, 975, 1025, 1169, 1171, 1282, 1302, 1760, 1791, 1820, 1836, 1852, 1868], "explained": [262, 264, 433, 435, 592, 594, 1169, 1171, 3888], ".mcx": [262, 433, 592, 1169], "-idle": [266, 437, 596, 1173], "-entangled": [269, 440, 599, 1176, 5277], "subcircuits": [269, 440, 599, 1176, 4994, 4997], "_power": [275, 446, 605, 1182], "locale": [277, 448, 607, 1184], ".getpreferredencoding": [277, 448, 607, 1184], "qasmerror": [277, 448, 607, 1184, 4238], "qbit": [278, 449, 608, 1185], ".unit": [279, 280, 281, 450, 451, 452, 609, 610, 611, 1186, 1187, 1188], "*qubits": [279, 280, 281, 450, 451, 452, 609, 610, 611, 1186, 1187, 1188], "-delay": [279, 450, 609, 1186], "-yet": [280, 281, 451, 452, 610, 611, 1187, 1188], "plane": [282, 453, 612, 1189, 5287], "rc": [283, 454, 613, 1190, 1336], "rccxgate": [284, 455, 614, 1191], "deletes": [285, 456, 615, 1192], "vertically": [288, 459, 618, 1195], "\u2510\na": [288, 459, 618, 1195], "\u2510\nb": [288, 459, 618, 1195], "\u2518\nb": [288, 459, 618, 1195], "\u2518\na": [288, 459, 618, 1195], "reversing": [289, 460, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1196, 1274, 1290, 1309, 1329, 1438, 1514, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 4393, 4439, 4659], "\u2518\nq": [289, 460, 619, 1196, 1339, 1343, 1360, 1364, 1367, 1401, 1650, 5361], "vx": [290, 461, 620, 1197], "vy": [290, 461, 620, 1197], "vz": [290, 461, 620, 1197], "-compenent": [290, 461, 620, 1197], "ryy": [294, 465, 624, 1201, 1379, 1494, 1495, 5332], "'amplitudes": [299, 300, 470, 471, 629, 630, 1206, 1207, 2504, 2517, 2777, 2778], "extensionerror": [299, 300, 303, 304, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 470, 471, 474, 475, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 629, 630, 633, 634, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 1206, 1207, 1210, 1211, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1753, 1802, 1879, 1886, 2060, 2389, 2403, 2417, 2431, 2445, 2459, 2504, 2517, 2556, 2569, 2699, 2738, 2751, 2764, 2777, 2778, 2781, 2782, 2792, 2793, 2794, 2795, 2796, 2797], "accumulated": [300, 302, 303, 304, 306, 307, 471, 473, 474, 475, 477, 478, 630, 632, 633, 634, 636, 637, 1207, 1209, 1210, 1211, 1213, 1214, 2323, 2337, 2349, 2363, 2376, 2517, 2543, 2556, 2569, 2595, 2608, 2778, 2780, 2781, 2782, 2784, 2785, 4039, 5250], "'clifford": [301, 472, 631, 1208, 2530, 2779, 2886, 2887], "'density": [302, 473, 632, 1209, 2543, 2780], "'expectation": [303, 304, 474, 475, 633, 634, 1210, 1211, 2556, 2569, 2781, 2782], "appends": [303, 304, 474, 475, 633, 634, 1210, 1211, 2056, 2781, 2782, 4958, 5021], "variances": [304, 475, 634, 1211, 1985, 1991, 1996, 1999, 2782], "'matrix": [305, 476, 635, 1212, 2582, 2783], "'probabilities": [306, 307, 477, 478, 636, 637, 1213, 1214, 2595, 2608, 2784, 2785], "'stabilizer": [308, 479, 638, 1215, 2621, 2786], "stabilizerstates": [308, 479, 638, 1215, 2621, 2786], "'statevector": [310, 311, 322, 481, 482, 493, 640, 641, 652, 1217, 1218, 1229, 1802, 2389, 2647, 2660, 2788, 2789, 4055, 4148], "'superop": [312, 483, 642, 1219, 2673, 2790], "'unitary": [313, 484, 643, 1220, 2686, 2791, 5367], "reordering": [322, 493, 652, 1229], "malformed": [322, 493, 652, 1229, 1457, 1645, 1675], "'zyz": [328, 499, 658, 1235, 1786], "_diagonal": [328, 342, 499, 513, 658, 672, 1235, 1249, 1786, 5362], "book": [328, 499, 658, 1235], "remember": [334, 505, 664, 1241], "leftmost": [334, 505, 664, 1241], "](": [334, 505, 664, 1241, 1475], "/tutorials": [334, 505, 664, 1241], "/circuits": [334, 505, 664, 1241, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359], "_operations": [334, 505, 664, 1241, 5350], "= q": [334, 505, 664, 1241], "(tensored": [334, 505, 664, 1241], "encapsulating": [335, 336, 506, 507, 665, 666, 1242, 1243], "bergholm": [342, 513, 672, 693, 1249], ",\nwhere": [342, 513, 672, 1249], ",\nthe": [342, 513, 672, 1249], ", the": [345, 516, 675, 1252, 1906, 1959, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255], "infer": [347, 518, 677, 1254], "whileloopcontext": [347, 518, 677, 1254], "_diag": [357, 523, 2018, 2021, 2023, 5362], "_functional": 357, "tpass": 357, "obs": 357, "qcs": [357, 5352], "(obs": 357, "(tpass": 357, "_vecs": 357, "(qcs": [357, 5352], "[(~": 357, "tridiagonal": [357, 523], "toeplitz": [357, 523], "numpylinearsolver": 363, "'np": 364, ".numpy": 364, "pow": [364, 523], "(power": [364, 523], ", list": [364, 523, 1468], "<qiskit": [364, 523, 4741, 5258], "7f": [364, 523, 4196, 4201, 5347, 5352, 5355], "cdab": 364, "numpymatrix": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "'tridi": 523, "dimensional": [523, 2024, 2032, 4398, 4487, 4664, 4813, 5291], "\\begin": [523, 1401, 4386, 4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637, 5350, 5362], "{pmatrix": [523, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1371, 1372, 1374, 1379, 1389, 1394, 1401, 1459, 1481, 1483, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1517, 1519, 1522, 1524, 1530, 1533, 1535, 1539, 1542, 1544, 1547, 1552, 1556, 1558, 1560, 1564, 1586, 4386, 4463, 5347, 5348, 5350], "0c": 523, "divided": [682, 2170, 2201, 2214, 2226, 2244, 2258, 4025, 5077, 5143, 5250, 5272], "categories": [682, 4896, 4917, 5283], "-quant": [682, 701, 781, 869], "therein": 682, "licenses": 682, "adaptive": [683, 806, 877, 1475, 5033, 5234, 5342], "moments": 683, "invariant": 683, "rescaling": [683, 1399], "cope": 683, "-stationary": [683, 806], "kingma": 683, "diederik": 683, "ba": [683, 1920, 1921, 5333, 5334], "jimmy": 683, "sashank": 683, "reddi": 683, "satyen": 683, "kale": 683, "sanjiv": 683, "kumar": 683, "_support": [683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904], "_ignored": [683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904], "_required": [683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904, 3932, 3963, 3976], "_gradient": [683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904], "_initial": [683, 693, 701, 709, 717, 725, 734, 743, 752, 761, 773, 781, 789, 798, 806, 814, 822, 833, 841, 849, 861, 869, 877, 888, 896, 904], "_center": [685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906], "differentiation": [685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 2012, 2016], "evals": [685, 690, 695, 698, 703, 706, 711, 714, 719, 722, 728, 731, 737, 740, 746, 749, 755, 758, 764, 770, 775, 778, 783, 786, 792, 795, 800, 803, 808, 811, 816, 819, 824, 827, 835, 838, 843, 846, 854, 858, 863, 866, 871, 874, 881, 885, 890, 893, 898, 901, 906, 909], "grad": [685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 2008, 2010, 2013, 2018, 2025, 2032, 2055, 2063, 5362], ".csv": [686, 689], "minimization": [687, 696, 701, 704, 709, 712, 720, 729, 738, 747, 756, 766, 773, 776, 784, 793, 801, 806, 809, 817, 825, 830, 833, 836, 844, 849, 855, 864, 872, 877, 882, 891, 899, 907], "overwritten": [689, 849, 877, 1441, 1644, 2886, 2887], "/optimization": [691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910], "/values": [691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910], "=value": [691, 699, 707, 715, 723, 732, 741, 750, 759, 771, 779, 787, 796, 804, 812, 820, 828, 839, 847, 859, 867, 875, 886, 894, 902, 910, 5364], "inject": [692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911], "injected": [692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911], "eta": 693, "_tol": [693, 2337], "averaging": [693, 2000], "mitarai": 693, "negoro": 693, "kitagawa": 693, "fujii": [693, 814], "maria": 693, "schuld": 693, "ville": 693, "christian": 693, "gogolin": 693, "josh": 693, "izaac": 693, "nathan": 693, "killoran": 693, "deriv": 693, "windowed": 693, "/required": 694, "-convex": 701, "skquant": [701, 781, 869], ".opt": [701, 781, 869], "/scikit": [701, 781, 869], "qat": [701, 781, 869], "4chem": [701, 781, 869], ".lbl": [701, 781, 869], ".gov": [701, 781, 869], "/software": [701, 781, 869], "bobyqa": [702, 703, 704, 705, 706, 707, 708], "disp": [709, 717, 761, 806, 814, 833, 861, 896], "gtol": [709, 896], "-definite": 709, "unconstrained": [709, 798, 806, 833], ".scipy": [709, 717, 798, 806, 814, 833, 841, 861, 888, 896], "/scipy": [709, 717, 798, 806, 814, 833, 841, 861, 888, 896], "cg": [710, 711, 712, 713, 714, 715, 716, 896, 5362], "rhobeg": 717, "precisely": 717, "trust": [717, 877], "region": 717, "nloptoptimizer": [725, 734, 743, 752, 789], "mutation": [725, 789, 1063, 4224], "family": [725, 849, 904, 3932, 3976, 3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "population": [725, 877, 904, 2845, 2858, 2861, 4162], "nelder": [725, 807, 808, 809, 810, 811, 812, 813], "_mead": 725, "-free": [725, 734, 743, 752, 789, 869, 2888, 4139, 4370, 4716, 4728], ".readthedocs": [725, 734, 743, 752, 789], "/nlopt": [725, 734, 743, 752, 789], "_algorithms": [725, 734, 743, 752, 789], "-random": 725, "-crs": 725, "-with": 725, "-mutation": 725, "crs": [726, 727, 728, 729, 730, 731, 732, 733], "nloptoptimizertype": [726, 735, 744, 753, 790], "dividing": [734, 743, 1978], "rectangles": [734, 743], "-biased": [734, 743], "systematic": 734, "division": [734, 1072, 1088], "hyper": 734, "-rectangles": 734, "-l": [734, 743], "biased": [734, 743], "minima": 734, "-and": [734, 743], "-direct": [734, 743], "randomization": 743, "-tie": 743, "evolutionary": [752, 904], "-evolutionary": 752, "-algorithm": 752, "esch": [753, 754, 755, 756, 757, 758, 759, 760], "_radius": [761, 768], "_multiplier": 761, "armijo": 761, "_failed": 761, "_rejection": 761, "-smoothed": 761, "rounded": [761, 5262], "unsuccessful": [761, 3814, 3862], "directions": [763, 768, 769, 773, 1644, 3779, 3789, 4922, 5233, 5234], "_y": [763, 1483, 1560, 4421, 5332, 5350, 5354], "wrt": [763, 2003, 2022], "-coordinates": 763, "1d": [763, 856, 883, 2915, 2924, 4487, 4502, 4743], "ls": [765, 5355], "_fun": 765, "_lb": [765, 769], "_ub": [765, 769], ".inf": [765, 769, 2854, 5341], "unbounded": [765, 769, 1377, 1441, 1450, 1456, 1471, 1537, 1563, 1567, 4182], "-sphere": 768, "vanilla": [773, 849], "updating": [773, 3754, 3822, 3823, 4938, 5355], "- \\": [773, 1388, 4172, 4196, 5350, 5361], "\\eta": 773, "\\nabla": 773, "convergences": 773, "nfevs": 773, "converged": 773, "-constrained": 781, "interpolation": [781, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "imfil": [782, 783, 784, 785, 786, 787, 788], "ranking": [789, 2162, 5117], "-linearly": [789, 1466], "heuristics": [789, 5193], "optima": [789, 841], "variation": [789, 5157], "fitness": 789, "runarsson": 789, "yao": 789, "employed": 789, "inequality": [789, 861], "-improved": 789, "-stochastic": 789, "-ranking": [789, 5117], "-evolution": [789, 1448, 1563], "-strategy": 789, "isres": [790, 791, 792, 793, 794, 795, 796, 797], "maxfun": [798, 841], "iprint": [798, 841], "broyden": 798, "-fletcher": 798, "-goldfarb": 798, "-shanno": 798, "differentiable": [798, 833, 861], "-newton": 798, "newtons": 798, "-linear": [798, 1401, 1465, 1466, 1468, 1567], "proceeds": 798, "refine": 798, "steepest": 798, ".fmin": [798, 841], "_l": [798, 841, 2021, 5362], "/optimize": 798, "-lbfgsb": 798, "{|": [798, 841, 2018, 4915], "|,": [798, 841, 2875, 2885, 5349], "|f": [798, 841], "<=": [798, 841, 1380, 4159, 4164, 4169, 4174, 4182, 4184], "(deprecated": [798, 3885], "moderate": 798, "proj": [798, 841], "-vectors": [798, 841], "numerically": 798, "maxfev": [806, 814, 833], "xatol": 806, "-mead": 806, "ignores": [806, 833, 3752, 3766, 4964], "multidimensional": 806, "simplex": 806, "trusted": 806, "\u2013mead": 806, "dimensionality": 806, "nakanishi": 814, "-fujii": 814, "-todo": 814, "-classical": 814, "preprint": 814, "nft": [815, 816, 817, 818, 819, 820, 821], "-serialization": 822, "optimizerclass": 822, "nit": 830, "njev": 830, "xtol": [833, 896], "-dimensional": [833, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4376, 4385, 4640, 4650], "directional": 833, "minimized": [833, 4964, 5341], "powell": [834, 835, 836, 837, 838, 839, 840], "shares": 841, "_increase": [849, 877], "_avg": [849, 877], "resamplings": [849, 877], "_dims": [849, 877, 2823, 4309, 4316, 4330, 4335, 4349, 4368, 4402, 4416, 4424, 4438, 4444, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4667, 4681, 4686, 4700, 4735, 5353, 5366, 5367], "lse": [849, 877], "_hessian": [849, 877], "belongs": [849, 3932, 3976], "sacrificing": 849, "systematically": 849, "monte": [849, 2323, 2349], "carlo": 849, "(ansatz": [849, 877, 1376, 1379, 1503, 5337, 5338, 5339, 5340, 5341], "magnitudes": 849, "{iteration": [849, 877], "perturbed": [849, 877], "preconditioner": [849, 877], "definite": [849, 877], "_constant": [850, 878, 3901], "_magnitude": [850, 878], "modelspace": [850, 878], "powerseries": [850, 878], "exponent": [850, 878, 979, 1029, 1287, 1306, 1764, 1795, 1824, 1840, 1856, 1872, 1890, 2044, 2241, 4329, 4348, 4415, 4457, 4463, 4487, 4562, 4680, 4699], "generators": [850, 878, 4354, 5295, 5331, 5333, 5334], "avg": [851, 879, 1641, 3730, 3761, 4273, 4806, 4813, 5217], "dieter": 861, "kraft": 861, "continuously": 861, "maxfail": 869, "maxmp": 869, "verbose": 869, "_region": 877, "appropriately": 877, "curvature": 877, "notably": [877, 2024], "quadratically": 877, "assembly": [877, 3864, 5146], "supplementary": [877, 4063, 4949, 4955], "iv": 877, "_spsa": 877, "spall": 877, "johns": 877, "hopkins": 877, "apl": 877, "technical": 877, "digest": 877, "jhuapl": 877, ".edu": [877, 1401], "accelerated": 877, "proceedings": [877, 5342], "ieee": 877, "conference": [877, 904], "vol": 877, "molecules": 877, "magnets": 877, "pages": 877, "restricts": 877, "\\leq": [877, 4195, 5350], "preconditioned": 877, "newton": 896, "-gradient": 896, "_precision": [896, 5364], "(machine": 896, "projected": 896, "(accuracy": 896, "tnc": [897, 898, 899, 900, 901, 902, 903], "eda": 904, "individuals": 904, "udma": 904, "inspired": 904, "vicente": 904, "soloviev": 904, "edaspy": 904, "edas": 904, "probabilistic": [904, 2161, 2232, 2813], "generations": 904, "elite": 904, "classified": [904, 4075, 5331, 5333, 5334], "competitive": 904, "personalized": 904, "paremeters": 904, "bigger": [904, 4882, 5352], "heavier": [904, 1644, 5230], "\u0007lpha": 904, "maxiters": [904, 5338], "=qubit": 904, "pedro": 904, "larra": 904, "\u00f1aga": 904, "concha": 904, "bielza": 904, "july": 904, "genetic": 904, "gecco": 904, "doi": 904, "/vicenteperezsoloviev": 904, "/edaspy": 904, "downloaded": 912, "unpacked": 912, "archive": 912, "tar": 912, ".gz": [912, 4297, 4298], "/configure": 912, "-shared": 912, "-python": 912, "sudo": 912, "/usr": 912, "/local": 912, "augment": 912, "ld": 912, "=$": 912, "}:": [912, 1399, 5350, 5368], "usr": 912, "/lib": [912, 5372], "pythonpath": 912, "=/": 912, ":$": 912, "pasted": 912, ".bash": 912, "_profile": 912, "simplenamespace": [913, 3889, 4273], "readouts": [913, 3761, 3873, 4273, 4806, 5234], "*kwargs": [913, 2315, 2316, 2321, 2322, 2907, 2908, 3483, 3484, 3486, 3487, 3706, 3748, 3752, 3781, 3782, 3792, 3793, 3932, 3963, 3976, 4244, 4245], "runconfig": [914, 915, 916, 917, 4273], "assembles": [916, 917], "(assemble": 918, "maintained": [918, 1902], "circuitmodule": 918, "pulsemodule": 918, "-populated": [920, 939, 1259], "duplicated": [920, 939, 1259, 4579], "-za": [920, 939, 1259, 4229], "_]": [920, 939, 1259, 4229], "*'": [920, 939, 1259, 4229], "'a": [920, 2909, 2918, 2927, 4061, 5331, 5342], "jumps": 923, "identifying": [923, 943, 956, 1006, 1036, 1050, 1263, 2303, 2480, 2495, 2862, 2864, 2900, 3914, 4923], "\u5217\u6319": [926, 946, 959, 989, 1009, 1039, 1053, 1266, 1322, 1431, 1507, 1674, 1679, 1688, 1689, 1775, 1805, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 4025, 4026, 4027, 4028, 4029, 4039, 4045, 4046, 5350], "val": [927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2333, 2334, 2359, 2360, 2372, 2373, 2385, 2386, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 4264, 4282, 4481, 5056, 5342], "additive": [927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 4923], "inheriting": [929, 949, 962, 1012, 1027, 1042, 1056, 1269, 1285, 1304, 1434, 1510, 1779, 1822, 1838, 1854, 1870, 2705, 2718, 2731, 2744, 2757, 2770, 4040], "iff": [930, 950, 963, 978, 993, 1013, 1028, 1043, 1057, 1270, 1286, 1305, 1326, 1435, 1511, 1644, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 2397, 2411, 2425, 2439, 2453, 2467, 2511, 2524, 2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 2641, 2654, 2667, 2680, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 3987, 4001, 4005, 4014, 4017, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4082, 4092, 4101, 4110, 4119, 4128, 4137, 4146, 4155, 4160, 4165, 4170, 4175, 4180, 4185, 4189, 5169], "-instructions": [933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1274, 1290, 1309, 1329, 1438, 1514, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 5014], "lightweight": 936, "mutations": 936, "invalidate": [936, 1706], "moves": 943, "controlflowop": [957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 1006, 1016, 1036, 1263, 1273], "msb": [970, 5348, 5350], "3h": 970, "conjugated": [970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "_o": [970, 1332, 1333, 1336, 1339, 1343, 1345, 1348, 1350, 1352, 1354, 1355, 1357, 1360, 1362, 1364, 1367, 1369, 1412, 1415, 1419, 1421, 1424], "[[q": [973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], ",[]": [973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "outs": [973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "broadcasting": [973, 1023, 1280, 1299, 1407, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "> [": [973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], ",[q": [973, 1023, 1280, 1299, 1527, 1757, 1789, 1818, 1834, 1850, 1866, 1883], "unrecognized": [975, 1025, 1282, 1302, 1760, 1791, 1820, 1836, 1852, 1868], "^exponent": [979, 1029, 1287, 1306, 1764, 1795, 1824, 1840, 1856, 1872, 1890], ".unitarygate": [979, 1029, 1287, 1306, 1764, 1795, 1824, 1840, 1856, 1872], "/wait": 986, "/idle": 986, "equivalences": 1001, "draws": [1002, 1673, 1732, 4844, 5283], "relations": [1002, 5008, 5010, 5011], "svg": [1002, 3783], "earliest": [1003, 1682, 4008, 4027, 4209, 4915], "'quantumcircuit": [1005, 1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257, 5253, 5257], "parameterizing": 1006, "ommited": 1046, "verifies": [1063, 3890], "conventions": [1065, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136], "mutated": 1065, "resolvable": 1065, "permitted": [1065, 4839], "bc": 1067, "unicode": [1067, 5333, 5334], "\u300c\u03d5": 1067, "arccos": [1068, 1084], "arcsin": [1069, 1085], "arctan": [1070, 1086], "-numeric": [1072, 1088], "zerodivisionerror": [1072, 1088], "cosine": [1074, 1090, 4191], "_expr": [1076, 1092, 2009], "logarithm": [1078, 1094, 1551, 4719, 4723, 4739, 4964], "sine": [1079, 1095, 4199], "subs": [1080, 1096], "sympify": [1081, 1097], "preferentially": [1081, 1097], "interoperability": [1081, 1097, 2068, 2132], "symegine": [1081, 1097], "-parameter": [1081, 1097], "tan": [1082, 1098], "tangent": [1082, 1098], ".symbol": [1083, 4239, 4240], "serving": 1083, "resize": 1101, "enlarged": [1101, 5014], "qr0": [1102, 4889], ", quantumregister": [1102, 4889], "qr1": [1102, 4889], "ints": [1102, 2865, 3991, 5277, 5332, 5341], "-form": [1102, 2660, 3993, 4008, 4398, 4664], "anc": 1102, "(anc": 1102, "quantumcircuitdata": [1102, 1318, 1342, 1372, 1373, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1396, 1397, 1399, 1407, 1410, 1447, 1457, 1458, 1462, 1475, 1477, 1480, 1550, 1555, 5239, 5244], "=<": [1141, 1228, 3778, 3779, 3781, 3782, 3788, 3789, 3792, 3793, 3832, 3902, 3909, 3926, 4829], ".<": [1141, 1228, 3777, 5357], "'medium": [1143, 5281], ".controlflow": [1147, 1159, 1254], ".forloopcontext": 1147, ".ifcontext": 1159, ".whileloopcontext": 1254, "classicalelement": [1277, 1296, 1313, 1462], "filenotfounderror": 1284, "synthesizer": [1293, 1313, 1462], "flat": [1293, 1313, 3991, 4241], "dicts": [1296, 1929, 3905], "parses": 1301, "pkrm": [1313, 1462], "classicalfunctioncompilertypeerror": 1316, "classicalfunctionparseerror": 1317, "_variable": [1318, 1447], "negated": [1318, 1447], "practically": 1318, "negate": [1318, 1447], "/-": [1318, 1447, 4626], "negations": [1318, 1447], "omissions": [1318, 1447], "barenco": [1332, 1336], ", or": [1332, 1334, 1337, 1340, 1346, 1358, 1365, 1390, 1413, 1416, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565], "1s": [1332, 1334, 1337, 1340, 1346, 1358, 1365, 1390, 1401, 1413, 1416, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 2842, 5366, 5369], "{t": 1333, "lemma": 1336, "3x": [1336, 1401, 1478, 4229], "textbooks": [1339, 1343, 1348, 1350, 1352, 1354, 1355, 1360, 1362, 1364, 1367, 1934], "'cdkmripplecarryadder": 1342, "ripple": [1342, 1550], "-carry": 1342, "cin": [1342, 1550], "\u2502\u2502": [1342, 1379, 1441, 1550, 5352], "maj": 1342, "uma": 1342, "\u2518\u2502": [1342, 1374, 1379, 1441, 1468, 1550, 5367], "cout": [1342, 1373, 1550], "adders": [1342, 1392], "-adder": 1342, "\u2510\u2502": [1342, 5367], "\u2502\u2514": [1342, 1374, 1550, 5353, 5367], "cuccaro": 1342, "vedral": [1342, 1373, 1550], "elementary": [1342, 1373, 1550], "'half": [1342, 1373, 1550], "'fixed": [1342, 1373, 1550], "-hadamard": 1343, "+ h": 1343, "induces": [1345, 1352, 1357, 1397, 1412, 1517, 1524, 1533, 1535, 4958, 5021], "\u03bb\nq": [1345, 1357], "cphase": [1345, 1347], "){": [1347, 1359, 1414, 1461, 1493, 1498, 1541], "-rx": [1348, 1487], "\\newcommand": [1348, 1350, 1360, 1362, 1379, 1481, 1483, 1486, 1489, 1491, 1494, 1499, 1501, 1544, 1547, 1556, 1558], "-i": [1348, 1367, 1374, 1379, 1481, 1483, 1486, 1489, 1494, 1499, 1501, 1519, 1524, 1552, 1556, 1558, 1560, 2040, 2139, 4386, 4463, 4515, 4516, 4519, 4541, 4542, 4614, 4620, 4624, 4626, 4636, 4637, 5350], "\\sin": [1348, 1379, 1406, 1486, 1489, 1494, 1499, 1556, 1558, 5350], "& -": [1348, 1362, 1379, 1481, 1486, 1489, 1494, 1499, 1542, 1558, 5350], "& \\": [1348, 1350, 1372, 1379, 1481, 1483, 1486, 1489, 1491, 1494, 1499, 1558, 4172, 5350], "-ry": [1350, 1492], "-rz": [1352, 1497], "-symmetric": 1352, "(\u03bb": [1352, 1412, 1459, 1496, 1539], "-\u221a": 1354, "\u2524 \u221a": [1354, 1519], "\\ q": 1354, "+ \\": [1354, 2860, 4172, 4819, 4825, 5350], "-u": [1357, 1360, 1362, 1472, 1540, 1545, 1548, 5345], ",\u03c6": [1360, 1362, 1544, 1547], ",\u03bb)": [1360, 1542, 1544, 1547], "cu3": [1360, 1361], "-e": [1360, 1362, 1544, 1547, 5350], "& e": [1360, 1362, 1542, 1544, 1547, 5350], ",-": [1361, 1363, 1380, 1546, 1549], "\\gamma": [1362, 4421, 5366, 5368, 5370], "\u2524 u": [1362, 1547, 5350, 5352], ",\u03bb": 1362, ",\u03b3)": 1362, "+ x": [1364, 2875], "oplus": 1364, "\u2524 y": [1367, 1376, 1560, 5350], "+ y": 1367, "-cnot": 1371, "-back": [1371, 4979], "cns": 1371, "\\text": [1372, 4172, 4197, 4198, 4200, 4727, 5345, 5361, 5368, 5372], "{diagonalgate": 1372, "dots": [1372, 5280, 5368], "vdots": [1372, 4519, 4614], "ddots": [1372, 4519, 4614], "oracular": 1372, "forrelation": [1372, 1380], "emanuel": 1372, "malvetti": 1372, "semester": 1372, "thesis": 1372, "eth": 1372, "supervised": [1372, 1450], "raban": 1372, "prof": 1372, "renato": 1372, "renner": 1372, "'draperqftadder": 1373, "-fixed": 1373, "\u2502p": [1373, 1480], "draper": 1373, "ruiz": [1373, 1480], "-perez": [1373, 1480], "-significant": [1373, 4530, 4540, 4625, 4635], "maximally": [1374, 1489, 1494, 1499, 1501], "echoing": 1374, "mitigates": [1374, 4745, 4767], "unwanted": 1374, "& i": [1374, 1499], "_unentangled": [1376, 1379, 1441, 1456, 1503, 1537], "_rotation": [1376, 1379, 1441, 1456, 1503, 1537], "\u03b8'": [1376, 1379, 1441, 1503, 1537, 5352, 5361], "'efficientsu": 1376, "spanned": 1376, "determinant": 1376, "su2": [1376, 1567], "12": [1376, 5342, 5347, 5349, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5369, 5372], "15": [1376, 5342, 5350, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5372], "13": [1376, 5342, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5372], "16": [1376, 5342, 5349, 5350, 5352, 5353, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5372], "14": [1376, 5342, 5347, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5372], "17": [1376, 5342, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5364, 5366, 5372], "unentanglement": [1376, 1379], "\u2524\u250c": [1376, 1388, 1450, 1537, 5354, 5361, 5362], "\u2518\u251c": [1376, 5361], "10": [1376, 1456, 1537, 1567, 5338, 5339, 5340, 5342, 5347, 5348, 5349, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5369, 5372], "\u2524\nq": [1376, 1379, 1563, 5093, 5337, 5361], ", entanglement": 1376, "circular": [1376, 1456, 1503, 1537, 3905, 5263], ", \u300e": [1376, 1456, 1537, 3905, 4463], "sca": [1376, 1379, 1456, 1503, 1537, 5263], ", a": [1376, 1379, 1456, 1470, 1503, 1537], "-pairs": [1376, 1379, 1456, 1503, 1537], "_entangler": [1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "_layers": [1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567, 4964, 5355], "_settable": [1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "(nlocal": [1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], ".ordered": [1376, 1377, 1379, 1441, 1450, 1456, 1471, 1503, 1537, 1563, 1567], "'evolvedops": 1377, "= e": [1378, 1448, 1459, 1481, 1496, 1519, 1522, 1539, 2167, 4765, 4785, 4800, 4913, 5305, 5317, 5329, 5350, 5362], "'iswap": 1379, "'excitationpreserving": 1379, "-preserving": [1379, 4325, 4326, 4344, 4345, 4411, 4412, 4453, 4454, 4676, 4677, 4695, 4696, 4714, 4720, 4726], "'fsim": 1379, "ucc": 1379, "-ansatzes": 1379, "heuristically": 1379, "swaprz": 1379, "\u2510\u251c": [1379, 1388, 1450, 5361], "fsim": 1379, "\u2502\u03b8": 1379, "\u300eiswap": 1379, "\u300efsim": 1379, "hadamards": [1380, 1388], "realized": 1380, "observing": [1380, 2165], "-zeros": 1380, "solves": [1380, 1393], "promise": 1380, "decides": [1380, 4891], "promised": 1380, "concisely": [1380, 4884], "-fold": 1380, "bqp": 1380, "ambainis": 1380, "optimally": 1380, "separates": 1380, "\u300ey": [1381, 1406, 1466, 1468, 1470, 1815, 4433, 4463], "-trap": [1382, 1427], "ions": [1382, 1427], "entangle": [1382, 1427, 1537], "chi": [1382, 3781, 3792, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334], ", \\": [1382, 2885, 4167, 4726, 5350], "=i": 1382, "ij": 1382, "-particle": 1382, "hot": 1382, "letters": 1382, "nam": 1382, ",\u03c6)": 1383, "traps": [1383, 1384, 1385, 1386], "cold": [1383, 1384, 1385, 1386], "neutrals": [1383, 1384, 1385, 1386], ")x": [1383, 1481], ")y": 1383, "(\u03c6": [1386, 1481, 1542], "(v": [1387, 1462, 1483, 1485, 5343, 5361], "vertices": [1387, 5341], "|g": 1387, "prod": [1387, 1450], "|+\\": 1387, "evidence": 1387, "hein": 1387, "eisert": 1387, "briegel": 1387, "koh": 1387, "complexities": 1387, "-n": [1387, 1393, 1396, 1641, 3730, 4354, 4744, 4749, 4771], "_reflection": [1388, 5342], "-shift": 1388, "multiplies": 1388, "hardamard": 1388, "flip": [1388, 1552, 1560, 1564], "bitflip": 1388, "sandwiching": 1388, "phaseflip": 1388, "phaseflips": 1388, "bitflips": 1388, "uncompute": 1388, "mathbb": [1388, 1450, 4159, 4164, 4169, 4174, 4184, 4335, 4463, 5364, 5368], "{i": [1388, 2847, 4335, 5345, 5350, 5372], "sandwiched": 1388, "matter": 1388, "\u2524 z": [1388, 1564, 5350], "-uniform": 1388, "=reflection": 1388, "mark": [1388, 5117], "diffuse": 1388, "=mark": 1388, "=diffuse": 1388, "(fold": 1388, "reflections": 1388, "+z": [1389, 1542, 4363], ",|": 1389, "-)": [1390, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565], "-h": [1390, 1407], "'hrscumulativemultiplier": 1392, "-modular": 1392, "additions": [1392, 4922], "\u00e4ner": 1392, "-neighbor": 1393, "/column": 1393, ",j": [1393, 4316, 4335, 4444, 5341], "~(\\": 1393, "{mod": 1393, "}~": [1393, 5350], "restrict": 1393, "nullspace": 1393, "forall": [1393, 5366], "{ker": 1393, "[z": [1393, 4519, 4614], "logarithmically": 1393, "gosset": [1393, 5369], "koenig": 1393, "hlf": 1393, "\u2524 i": [1394, 5350, 5352], "cs": [1396, 5345, 5372], "bremner": 1396, "versus": [1396, 5340], "{ip": 1397, ": f": 1397, "cdots": [1397, 5347, 5348], "keeps": [1397, 5331, 5333, 5334], "geq": 1398, "'cmp": 1398, "comparator": 1398, "|i": [1398, 1470, 4385, 4650], "\\geq": 1398, "hat": [1399, 5362], "\\hat": [1399, 1400, 5362], "} \\": 1399, ",b": [1399, 5044], "[c": 1399, ", n": [1399, 1444, 1537, 5199], "affine": [1399, 4299], "[p": [1399, 2885, 2887, 4316, 4444, 4614], "slopes": [1399, 1466], "offsets": [1399, 1466], "\\beta": [1399, 1556, 1558, 4192, 5350], "egger": 1399, "-enhanced": 1399, "_\\": 1399, ", f": 1399, "ketan": 1401, "igor": 1401, "hayes": 1401, "inf": [1401, 4299, 4311, 4316, 4335, 4402, 4444, 4667, 4686], "comput": 1401, "umich": 1401, "invertible": [1401, 4299], ".circuiterror": 1403, "'linrot": 1406, "functionalpaulirotations": [1406, 1466, 1468, 1470], "(offset": 1406, "(ax": 1406, "\u300ez": [1406, 1470, 1563, 4433], "singly": [1407, 1412], "broadcasted": 1407, "casted": [1407, 1410], "shallower": 1410, "-version": 1412, "mcphase": 1412, "'mcx": 1415, "staticmethod": 1417, "-registers": 1421, "'recursion": 1422, "dirty": 1424, "'nlocal": 1441, "alternating": [1441, 1456, 1503, 1537, 5263], "-blocks": 1441, "stacked": 1441, "'linear": [1441, 1537], "rot": [1441, 1815], "ent": 1441, "-layers": 1441, "\u2014\u2014": 1444, "\u2014-": 1444, "+\u2014": 1444, "\u2014\u2013": 1444, "1]": [1444, 3757, 4433, 4803], "-iterate": 1444, "unentangled": 1445, "/parameters": [1446, 5236, 5237], "-open": 1447, "(t": [1448, 1753, 2854, 2867, 4159, 4164, 4169, 4174, 4182, 4184, 5343, 5366, 5369], "ith": 1448, "itx": 1448, "= r": 1448, "2t": 1448, "plug": 1448, "paulihedral": 1448, "-commuting": [1448, 1923, 4490, 4521, 4616, 4819, 4823], "[xy": 1448, "<operators": 1448, "'paulifeaturemap": 1450, "{r": [1450, 5350, 5362], "}=\\": 1450, "\\left": [1450, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1544, 1547, 1556, 1558, 1586, 4193, 4194, 4200, 4421, 4519, 4614, 4722, 5347, 5350, 5361, 5362, 5364, 5368], "\\sum": 1450, "\\subseteq": 1450, "_s": [1450, 1551, 5345, 5372], "{ i": 1450, "datapoints": 1450, "binom": 1450, "-mapping": 1450, "*(": [1450, 1567, 2165, 2166, 2167, 4229, 5370], "prep": [1450, 1563, 1567], "(prep": [1450, 1563, 1567], "xx'": 1450, "zy": [1450, 4513, 4539, 4634], "efficientsu": [1450, 1567, 5362], "(wavefunction": [1450, 5362], "('u1": [1450, 1567], "('h": 1450, "havlicek": 1450, "-be": [1450, 2156, 2160, 5276], "'z": [1450, 1466, 1468, 4229, 4463, 4518, 4525, 4529, 4530, 4540, 4544, 5332, 5333, 5334, 5354], "'paulitwodesign": 1456, "-design": 1456, "studied": 1456, "investigating": 1456, "barren": 1456, "plateaus": 1456, "{h": 1456, "compromised": 1456, "pairwise": 1456, "nakata": 1456, "designs": 1456, "mcclean": 1456, "landscapes": 1456, "permutes": [1457, 1910, 1961, 2104, 2124, 2142], "'qpe": 1458, "kitaev": 1458, "abelian": [1458, 1923, 1925, 1970, 1972, 1998, 2025, 2032, 2055, 2063, 5361], "virtually": [1459, 1496, 1539], "framechanges": [1459, 1496, 1539], "= s": [1459, 1539, 4317, 4334, 4336, 4353, 4403, 4420, 4445, 4462, 4668, 4685, 4687, 4704], "= t": [1459, 1539], "literals": [1462, 1464], "\u300ea": 1462, "~v1": 1462, "v3": 1462, "satisfiability": [1462, 1464, 5343], "clauses": [1462, 1464], "clause": [1462, 1464], "disjunction": [1462, 1464], "issues": [1462, 4973, 5235], "_esop": 1462, "comment": 1464, "joined": 1464, "\\land": 1464, "disjoined": 1464, "lor": 1464, "lnot": 1464, "\\lnot": 1464, "land": 1464, "'pw": [1465, 1466, 1468], "_cheb": 1465, "haener": [1465, 1468], "roetteler": [1465, 1468], "svore": [1465, 1468], "_lin": 1466, "+ b": 1466, "segments": [1466, 1468], "[point": [1466, 1468], "_breakpoint": [1466, 1468], "_offsets": 1466, "_slopes": 1466, "_poly": 1468, "-polynomially": 1468, "_polynomial": 1468, "_rotations": 1468, "poly": 1468, "_r": [1468, 5368], "=qubits": 1468, "=breakpoints": 1468, "=coeffs": 1468, "(poly": 1468, "_coeffs": 1468, "'poly": 1470, "`p": 1470, ")`": [1470, 4463], "'qaoa": 1471, "mixers": 1471, "farhi": 1471, "_swaps": [1472, 4964], "|j": [1472, 4746, 4768], "ijk": 1472, "principle": 1472, "appears": [1472, 4518, 4544, 4639, 4946, 4952, 5181], "beneath": 1472, "_endian": 1475, ". x": 1475, "= x": [1475, 1567, 2058, 4157, 4196], "^t": [1475, 4334, 4335, 4353, 4420, 4462, 4685, 4704, 5345, 5372], "stackoverflow": 1475, "/questions": 1475, "2s": [1475, 2842, 5366], "-complement": 1475, "_m": [1475, 2875, 2885, 5345, 5372], "^m": 1475, "gilliam": [1475, 5342], "mismatching": 1475, "unspecified": 1475, "twos": 1476, "haar": [1477, 4735, 4737, 4738], "bipartition": 1477, "uncomputed": [1478, 1479], "margolus": 1479, "'rgqftmultiplier": 1480, "weighted": [1480, 1551, 2165, 4964, 5053, 5178], "reverted": 1480, "\u03c0)": [1480, 5352], "\u2524 r": 1481, ", \u03c6": 1482, "\u03b8,": [1482, 1556, 1558], "{v": 1483, "}\n\\": 1483, "newcommand": 1483, "sinc": 1483, "{sinc": 1483, "-(i": 1483, "-(": [1483, 2875, 2885, 4623, 4628, 5368], "+ i": [1483, 4192], "-component": 1483, "}y": [1494, 1586], "}z": [1496, 1499, 1501], "}rz": 1496, "= -": [1499, 1501, 1552, 1560, 1564], "- z": 1501, "'realamplitudes": 1503, "-amplitudes": 1503, "\u2524 s": [1517, 1586, 5350, 5367], "radian": [1517, 1524, 1533, 1535, 1552, 1560, 1564], "-sx": 1520, "-adjoint": [1524, 1535, 5011], "~z": [1524, 1535], "flexible": [1526, 1772], "bullock": 1526, "\u2524 t": [1533, 5350], "'twolocal": 1537, "'ry": 1537, "-type": [1537, 2158, 5250], "'sca": 1537, "(shifted": 1537, "-circular": 1537, "-alternating": 1537, "(two": [1537, 5361], "'rz": 1537, "= u1": 1541, "=u": [1549, 5350], "'vberipplecarryadder": 1550, "vbe": 1550, "'adder": 1551, "|q": 1551, "\\lfloor": [1551, 4196], "\\rfloor": [1551, 4196], "schematically": 1551, "_carry": 1551, "_sum": [1551, 1972, 1975, 1977, 1980], "\\sigma": [1552, 1560, 1564, 2569, 4192, 4193, 4194, 4195, 4197, 4198, 5357, 5362], "bitwise": 1555, "-ing": 1555, "-ed": 1555, "gf": 1555, "{xx": [1556, 1558], "\u03b2)": [1556, 1558], ")e": [1556, 1558], "= y": 1562, "'zfeaturemap": 1563, "-class": [1563, 4708], "\u300f]": [1563, 1982, 3761, 3873, 4421, 4463, 4806, 4973, 5008, 5108, 5129, 5134, 5202, 5208, 5211, 5331], "=data": 1563, "(classifier": 1563, "'zzfeaturemap": 1567, "= (": [1567, 2032, 5343], "# '": 1567, "'\u03b8": 1567, ",\nparameter": 1567, "\u2500\u2a02": 1586, "+y": [1586, 4363], "_operands": 1640, "conditionals": 1640, "serializes": 1641, "\u300cexperiments": 1641, "annotates": 1641, "loconfig": [1641, 3730], "'gaussian": [1641, 3932, 3976], "*run": [1641, 3708, 3730, 3851, 3896], "'default": [1644, 4901, 5202, 5230], "singleton": 1644, "flexibly": [1644, 5230], "_adaptive": [1644, 3708, 5230], "'as": 1644, "greedily": 1644, "early": [1644, 4027, 4815, 4952, 4955, 5217], "'asap": [1644, 5230], "'alap": [1644, 5230], "(\u300e": 1644, "\u300eu3": 1644, "[(\u300e": 1644, "granularity": [1644, 4922, 4958, 5220], "exported": [1644, 5230], "=qasm": 1645, "(ast": 1645, "dagopnodes": [1660, 1672, 1677, 1682, 1683, 1694, 1696, 1706, 1712, 5065], "daginnodes": [1660, 1682, 1683, 1694, 1696, 5065], "cbits": [1661, 1662, 1682], "leaf": 1661, "dagnodes": 1663, "-conditional": [1664, 1665, 1666], "namelist": 1666, "\u300c\u2026": 1666, "\u300d]": [1666, 3723, 3738, 3739], "occurrences": [1669, 1670, 4518, 4544, 4639], "keyed": [1669, 1670], "dagoutnodes": [1672, 1682, 1683, 1697, 1712, 5065], "'color": [1673, 1732, 5282], "\u300eplain": [1673, 1732, 5282], "&w": [1673, 1732, 5282], "/output": [1673, 1732, 5282], "/op": [1673, 1732, 5282], "dest": [1674, 1734, 1937, 1941, 1942, 1944], "(source": 1674, "destination": [1674, 1934, 1935, 1936, 1937, 1941, 1942, 1944, 4839, 4840], ".multidigraph": 1675, "_pred": 1680, "_succ": 1681, "disjoint": 1682, "\u300d:": [1682, 2886, 2887, 2914, 2923, 3723, 3738, 3739, 3779, 3789, 5143], "semantically": 1682, "(node": [1682, 5355], "multigraph": 1685, "successive": 1689, "_directives": [1693, 4228], "ids": [1693, 1711, 1929, 3738, 3782, 3793, 5033], "opnodes": 1697, "opname": 1698, "ancestor": [1699, 5023, 5044], "descendant": [1702, 5036, 5044], "-ancestors": 1703, "-descendants": 1704, "consolidated": 1706, "contiguous": [1706, 4922], "contracted": 1706, "serial": [1708, 4830], "qu": [1711, 4880, 4881, 4888, 4890], ")bits": [1711, 4888, 4890], "matched": [1711, 3723, 3738, 3739, 5226], "incarnations": 1711, "/successors": 1711, "_key": [1714, 1715, 1719, 1745, 1749, 1751], "ties": 1715, "formerly": 1717, "matchedwith": 1719, "successorstovisit": 1719, "isblocked": 1719, "qindices": 1719, "cindices": 1719, "nid": [1719, 1747], "_match": [1721, 1746, 1748, 1750, 1752], "nx": [1721, 1746, 1748, 1750, 1752, 5341], "_isomorphic": [1721, 1746, 1748, 1750, 1752], "moyard": 1722, "metger": 1722, "sutter": 1722, "practical": [1722, 2933], "/erocarrera": [1732, 5283], "/pydot": [1732, 5283], ".graphviz": [1732, 5283], "enumeration": [1733, 1734, 1735, 1738], "incoming": [1735, 1745, 3905], "outgoing": [1738, 1751], "_axis": [1815, 5331, 5333, 5334], "(currently": 1815, "staralgebramixin": 1898, "tensormixin": 1898, "primitiveops": [1898, 2028, 2039, 2060, 2064, 2068], "listops": [1898, 1905, 1906, 1911, 1925, 1958, 1959, 1962, 1985, 1991, 1996, 1999, 2025, 2028, 2032, 2038, 2039, 2041, 2045, 2055, 2063, 2064, 2074, 2075, 2077, 2088, 2089, 2092, 2101, 2102, 2105, 2116, 2117, 2125, 2137, 2138, 2143, 2182, 2186, 2198, 2200, 2211, 2213, 2223, 2224, 2225, 2237, 2238, 2242, 2255, 2257], "indentation": [1898, 1953, 2025, 2032, 2055, 2063, 2069, 2084, 2097, 2112, 2132, 2153, 2162, 2177, 2195, 2208, 2220, 2232, 2252, 4241], "turns": [1900, 1955, 2026, 2034, 2071, 2086, 2099, 2114, 2134, 2179, 2197, 2210, 2222, 2234, 2254], "substitutes": [1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235], "parameterization": [1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235], "algebra": [1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2869], "@b": [1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236], "conscious": [1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145, 2171, 2189, 2202, 2215, 2245, 2259], "\u2218y": [1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136], "[y": [1903, 1913, 1957, 1964, 2027, 2036, 2047, 2066, 2073, 2079, 2087, 2093, 2100, 2106, 2115, 2127, 2136, 2145], "[x": [1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2167, 2885, 4519, 4614, 5349], "dictstatefn": [1905, 1926, 1929, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2165, 2168, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2223, 2228, 2237, 2262, 5361], "operatorstatefns": [1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237], "evolvedops": [1905, 1958, 1969, 1971, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237, 5361], "downwards": [1905, 1958, 2038, 2074, 2088, 2101, 2116, 2137, 2223, 2237], "-representation": [1906, 1959, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255], "composedop": [1906, 1934, 1959, 1975, 1977, 1980, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 5362], "evolvedop": [1906, 1948, 1949, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255], "-functions": [1906, 1959, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255], "(not": [1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2182, 2198, 2211, 2224, 2238, 2255, 4282], "mul": [1908, 2042, 2123, 2141, 2169, 2239], "[j": [1910, 1961, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256, 2856, 2857, 5341, 5366], "opflowerror": [1910, 1919, 1925, 1928, 1929, 1961, 2012, 2016, 2031, 2043, 2060, 2067, 2091, 2104, 2124, 2142, 2155, 2156, 2160, 2162, 2164], "hierarchical": [1911, 1962, 2024, 2032, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257], "illuminate": [1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257], "needless": [1912, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243], "igates": [1912, 1963, 2030, 2046, 2065, 2078, 2144, 2187, 2243], "\u2a02y": [1913, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145], "tensorpower": [1914, 2048, 2146, 2246], "massive": [1916, 1917, 1960, 1965, 1966, 1967, 2041, 2050, 2051, 2052, 2061, 2062, 2083, 2095, 2096, 2109, 2110, 2129, 2130, 2140, 2150, 2151, 2152, 2170, 2173, 2174, 2175, 2188, 2192, 2194, 2201, 2204, 2205, 2214, 2217, 2218, 2219, 2226, 2229, 2230, 2244, 2248, 2249, 2250, 2258, 2261, 2263, 2264], "-commutator": 1920, "ab": [1920, 1921, 4723], "commutator": [1921, 1947], "-operators": [1922, 1923, 1924, 1932, 1934], "contrary": [1922, 1930], "matrixexpectation": [1922, 1930, 1996, 1997], "matrixevolution": [1922, 1930, 1969, 5361], "clever": [1922, 1930], "trick": [1922, 1930], "miscellaneous": 1922, "traverse": [1923, 1924, 1932, 1933, 1934, 1948, 1949, 1950, 1969, 1971, 1983, 1990, 2054, 2176, 2251, 5003, 5014], "converterbase": [1923, 1926, 1931, 1932, 1934, 1945, 1949, 1990, 2002, 2004, 2006], "summedops": [1923, 1970], "-summedops": [1923, 1975, 1977, 1980], "diagonalized": [1923, 1934, 1935, 5361], "covert": 1924, "-ops": 1925, "'last": 1926, "circuitstatefns": [1926, 1928, 1929, 1932, 1933, 5361], "destroy": 1926, "aggressively": 1926, "caches": [1926, 1928, 3881, 4922], "-parameterization": 1926, "thrashing": 1926, "dictstatefns": [1926, 1928, 1932], "vectorstatefns": [1926, 1928, 1932], "-assembling": 1926, "\u300elast": 1926, "\u300eall": 1926, "replacements": [1928, 4006], "_sfns": 1929, "_bindings": 1929, "associating": 1929, "broken": [1929, 2166], "pauliops": [1930, 1934, 1936, 1943, 5361], "matrixops": 1930, "_vectors": 1932, "thereof": [1932, 1985, 1991, 1996, 1999, 2053], "replicated": 1932, "recurse": 1932, "dicttocircuitsum": 1933, "circuitops": [1934, 1950, 1969, 1971], "-the": 1934, "-box": 1934, "_replacement": [1934, 1936], "isbn": 1934, "-diagonalizing": 1934, "variations": 1934, "-operator": 1934, "(statefn": [1934, 5361], "ending": 1934, "-statefn": 1934, "\u00b7d": [1934, 1936], "\u00b7c": [1934, 1936], "\u2020,": [1934, 1936], "paulibasischange": [1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1973], "_op1": [1935, 1943], "_op2": [1935, 1943], "eigenvector": [1935, 1937, 4400], "_traverse": 1936, "-circuit": [1936, 5352], "+\u27e9": [1937, 2171, 2189, 2202, 2215, 2245, 2259], "-\u27e9": 1937, "\u2020s": 1937, "hs": 1937, "-measured": 1937, "anchor": 1937, "anchors": 1937, "demands": 1937, "ss": [1937, 5355], "pualiop": 1938, "rotated": [1938, 4607, 4658], "superset": 1940, "tpb": 1940, "tbp": 1940, "cob": [1941, 1942, 1944], "_instr": [1941, 1942, 1944], "~circuitop": [1942, 1944], "_particles": 1945, "eliminates": 1945, "positions": [1945, 2814, 2816, 4301, 4304, 4318, 4321, 4337, 4340, 4356, 4359, 4381, 4404, 4407, 4426, 4429, 4446, 4449, 4554, 4557, 4571, 4574, 4599, 4646, 4669, 4672, 4688, 4691, 4811, 4812, 4813, 4915, 5137], "-tree": 1945, "sectors": 1945, "particles": 1945, "twoqubitreduction": 1946, "_c": 1947, "mcweeny": 1947, "motion": 1947, "]/": 1947, "2abc": 1947, "2cba": 1947, "bac": 1947, "cab": 1947, "acb": 1947, "bca": 1947, "\\lbrace": 1947, "\\rbrace": 1947, "lbrace": 1947, "]\\": 1947, "rbrace": 1947, "-commutes": 1947, "schrodinger": [1948, 1949], ".primitive": [1948, 1949, 1969, 2165, 2166, 2167, 2168, 5361], "signifying": 1948, "^iht": 1948, "evolutionops": 1950, "evolutionfactory": 1952, "fits": [1953, 1994], "perfectly": 1953, "ended": [1953, 3793, 3904], "pasting": 1953, "signify": [1953, 4229, 5178], "exponentiated": [1960, 1970, 2041, 2140], "exponentiation": [1968, 1969, 1970, 1971, 2040, 2139, 4821], "unitarygates": [1968, 1969, 5204], "hamiltoniangates": [1968, 1969], "'trotter": [1970, 1982], "rotating": [1970, 2337], "trotterizing": 1970, "trotterizationfactory": [1970, 1982], "uncomment": 1970, "-groups": 1970, "diagonalization": 1970, "trotterized": [1971, 5361], "earl": 1974, "campbell": [1974, 5369], "*`": [1975, 1977, 1980], "bookends": 1976, "repeating": 1976, "exponentiations": [1979, 5361], "compositions": [1979, 2025, 2029], "_sampler": [1983, 1990], "_expect": [1983, 1990], "aersnapshot": 1986, "empirically": 1987, "quantile": 1987, "aerpauliexpecation": 1987, "lacks": [1994, 4008, 4765, 4785, 4800, 4913, 5305, 5317, 5329], "intuitively": 1994, "people": 1994, "\\mathrm": [2001, 2021, 5347, 5348, 5350], "{qfi": [2001, 2021], "kl": [2001, 2021, 5362], "{re": [2001, 2021, 5362], "}[": [2001, 2021, 2556, 2569, 2847, 2860, 4444, 4747, 4769, 5349], "\u3008\u2202k": 2001, "-scales": 2001, "{-": [2001, 5362], "derivativebase": [2002, 2004, 2007, 2008, 2009, 2013, 2017, 2023], "differentiating": [2002, 2004, 2006], "combo": [2002, 2004, 2006, 2012, 2016, 2024, 2025, 2028, 2032, 2037, 2039, 2055, 2063, 2064, 5361], "enforcing": [2002, 2004, 2006], "[parameterexpression": 2003, "[tuple": [2003, 3982], "2nd": 2003, "circuitqfi": [2005, 2018, 2021, 2023], "\\omega": [2005, 4191, 4199, 5362], "shifts": [2006, 4958, 5021], "'param": [2010, 2013, 2014, 2017, 2018], "/probability": [2010, 2013, 2014, 2017, 2021, 2023], "'lin": [2010, 2013, 2014, 2017, 2018, 2021, 2023], "'fin": [2010, 2013, 2014, 2017, 2018], "hess": [2014, 2017], "hessianbase": 2014, "ill": 2018, "-posed": 2018, "-c": [2018, 4707], "||": 2018, "_lambda": 2018, "*r": 2018, "penalization": 2018, "'overlap": [2018, 2021, 2023], "'ridge": 2018, "'lasso": 2018, "'perturb": 2018, "-conditioned": 2018, "singular": 2018, "-negligible": 2020, "qfibase": 2021, "\\partial": [2021, 5362], "'`": [2021, 2023], "\u03c9)\u3009": 2022, "[listop": 2022, "_kl": 2022, "constituents": [2024, 2032], "cumulative": [2024, 2032], "sophisticated": [2024, 2032], "compact": [2024, 2032, 3905, 4961], "ourselves": 2024, "excellent": 2024, "_sfn": 2024, "qkernel": 2024, "_sampled": 2024, "(qkernel": 2024, "-able": 2024, "predictably": 2024, "incorporate": 2024, "wavefunctions": 2024, "manipulated": [2025, 2055, 2063], "distributive": [2025, 2028, 2029, 2032, 2039, 2055, 2063, 2064], "_combo": [2025, 2032, 2055, 2063], "operatorbases": [2025, 2032, 2055, 2063], "recombination": [2028, 2032, 2039, 2064], "hierarchies": [2028, 2039, 2064], "-distributive": [2028, 2039, 2064], "opv": 2032, ", while": 2032, "*op": 2040, ".oplist": 2056, "collapse": [2057, 5232], "summands": [2058, 2060], "trees": 2059, "collapsed": [2059, 4388, 4603, 4607, 4654, 4658], "backed": [2068, 2069, 2084, 2097, 2112, 2132], "inheritors": [2068, 2132], "- i": [2068, 2132], "adherence": [2068, 2132], "equaled": [2068, 2132], "classicalregisters": [2069, 2177], "ih": [2090, 2103, 2118, 5361], "matrixiterator": [2122, 4509, 4535, 4584, 4630], "atol": [2126, 2813, 2830, 4316, 4324, 4325, 4326, 4327, 4335, 4343, 4344, 4345, 4346, 4376, 4387, 4400, 4402, 4410, 4411, 4412, 4413, 4424, 4430, 4435, 4444, 4452, 4453, 4454, 4455, 4552, 4560, 4568, 4578, 4582, 4588, 4602, 4640, 4645, 4653, 4667, 4675, 4676, 4677, 4678, 4686, 4694, 4695, 4696, 4697], "rtol": [2126, 2813, 2830, 4316, 4324, 4325, 4326, 4327, 4335, 4343, 4344, 4345, 4346, 4376, 4387, 4400, 4402, 4410, 4411, 4412, 4413, 4424, 4430, 4435, 4444, 4452, 4453, 4454, 4455, 4552, 4560, 4568, 4578, 4582, 4588, 4602, 4640, 4645, 4653, 4667, 4675, 4676, 4677, 4678, 4686, 4694, 4695, 4696, 4697], "equaling": 2139, "sector": [2155, 2160], "diagonalize": [2155, 2216], "-tapered": [2156, 2160], ":returns": [2157, 2159], "`paulisumop": 2160, "`]": 2160, "functionals": [2161, 2232], "producing": [2161, 2232], "knowing": [2165, 2166, 4182], "<j": [2165, 2166, 2167], "/\u03b1": [2165, 2166, 2167], "carries": 2166, "- e": 2167, "[<": 2167, "bi": [2167, 4855], "|h": [2167, 4229], "|bi": 2167, ">^": [2167, 2569], "[cvar": 2167, "suffice": 2168, "/simulated": 2168, "_endianness": [2170, 2188, 2201, 2214, 2226, 2244, 2258], "-endianness": [2170, 2201, 2214, 2226, 2244, 2258], "\u2a02|": [2171, 2189, 2202, 2215, 2245, 2259], "\u27e9,": [2171, 2177, 2189, 2202, 2215, 2245, 2259], "\u27e9\u2013": [2171, 2189, 2202, 2215, 2245, 2259], "densities": 2183, "statefncircuit": [2191, 2216, 2260], "quick": [2192, 2217, 4182, 4244, 4245], "sate": 2195, "sparsevectorstatefn": [2207, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231], "undefined": [2216, 2241, 5190, 5210, 5213, 5358], "hundreds": 2216, "methodology": 2218, ".sparse": 2220, ".spmatrix": 2220, "opens": [2265, 2269, 5335], "[circ": [2265, 2267, 2269, 2272], ".dtype": 2271, "backendpropertyerror": [2276, 3942, 3945], "characteristics": [2277, 3419, 3887, 3888, 4922], "simplest": [2277, 2337], "reusing": 2277, "maintainers": [2277, 2297], "discretion": [2282, 2291, 3011, 3019, 3388], "decide": [2282, 2291, 3011, 3019, 3388], "situation": [2282, 2291, 3011, 3019, 3388], "probably": 2282, "/object": [2282, 2291, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3388, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702, 3730], "brought": [2285, 3005, 3013, 3382], "timestep": [2285, 2963, 2980, 2997, 3005, 3013, 3030, 3047, 3064, 3081, 3097, 3114, 3130, 3147, 3163, 3180, 3197, 3214, 3231, 3248, 3265, 3282, 3298, 3315, 3332, 3348, 3365, 3382, 3390, 3407, 3441, 3458, 3474, 3505, 3521, 3538, 3563, 3580, 3597, 3630, 3647, 3663, 3680, 3696, 3932, 3963, 3976], "secondary": [2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034, 4229], "utilized": [2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3384, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698, 3965, 4034, 5181], "enumerated": [2295, 5214, 5217], "'job": 2295, "incurred": 2295, "progresses": [2308, 2486, 2500, 2905, 3824, 3919], "indefinitely": [2308, 2486, 2500, 2905, 3824, 3919, 5250], "adjustable": 2309, "reconfigure": 2309, "demand": 2309, "enforce": [2311, 4030, 5042], "enforced": [2311, 4219], "inclusive": [2311, 3789], "keyerror": [2311, 4761, 4762, 4782, 4783, 4797, 4798, 4838, 4865, 4872, 4910, 4911, 4934, 4935, 4938, 4939, 5302, 5303, 5314, 5315, 5326, 5327], "/additional": [2318, 4878], "aererror": [2319, 2323, 2333, 2334, 2337, 2349, 2359, 2360, 2363, 2372, 2373, 2376, 2385, 2386, 2862, 2865, 5364], "_methods": [2323, 2349], "\"automatic": [2323, 2349, 5364], "\"stabilizer": [2323, 2349, 5364], "ranked": [2323, 2349], "-stabilizer": [2323, 2349], "grows": [2323, 2349, 5193], "simulates": [2323, 2337], "\"superop": [2323, 5364], "yes": 2323, "(str": [2323, 2349, 2363, 2376, 4811, 5349, 5354], "availabe": [2323, 2349, 3482, 3485], "\"cpu": [2323, 2349, 2363, 2376], "\"double": [2323, 2349, 2363, 2376], "(futures": [2323, 2349, 2363, 2376], ".executor": [2323, 2349, 2363, 2376], "-jobs": [2323, 2337, 2349, 2363], "splitted": 2323, "(bool": [2323, 2349, 2363, 2376, 5354], "truncating": [2323, 2349, 2363, 2376], "-qubits": [2323, 2349, 2363, 2376, 5366], "/gpu": 2323, "parallelizing": 2323, "statevecor": 2323, "distributes": 2323, "unallocated": [2323, 2349, 2363, 2376], "(string": [2323, 2349], "\"metropolis": [2323, 2349], "-carlo": [2323, 2349], "inaccurate": [2323, 2349], "\"resampled": [2323, 2349], "reinitialised": [2323, 2349], "sn": [2323, 2349], "\"norm": [2323, 2349], "probabilites": [2323, 2349], "runtimes": [2323, 2349], "}m": [2323, 2349], "strongly": [2323, 2349], "peaked": [2323, 2349], "decreased": [2323, 2349], "_disable": [2323, 2349], "4m": [2323, 2349], "reptitions": [2323, 2349], "\"sample": [2323, 2349], "_verbose": [2323, 2349, 2363, 2376], "temporarily": [2333, 2359, 2372, 2385], "(system": 2337, "=system": 2337, "supplying": [2337, 4743], "oscillator": [2337, 2862, 2863, 2867, 4162, 4192], "'single": 2337, "'avg": 2337, "zvode": 2337, "drift": [2337, 2867], "dressed": 2337, "'solver": 2337, "'atol": 2337, "'rtol": 2337, "'nsteps": 2337, "'max": 2337, "'num": 2337, "_cpus": 2337, "'norm": 2337, ".config": 2345, "_cpu": 2349, "decomposes": 2349, "(precision": [2363, 2376, 5364], "\"validation": 2376, "\"max": 2376, "\u300cn": 2376, ".client": [2473, 2487], "/concurrent": 2482, "#future": 2482, "-objects": 2482, ".timeouterror": [2482, 2484], ".cancellederror": 2482, "qobjvalidationerror": 2485, "-submit": [2485, 2904], "entity": [2487, 3852], "[qasmqobjs": 2487, "worker": [2498, 2501, 2502, 2503], "workers": 2498, "retrive": 2502, "savesingledata": [2504, 2530, 2582, 2621, 2634, 2647, 2660, 2673, 2686], "vale": [2504, 2517], "intructions": [2506, 2519, 2532, 2545, 2558, 2571, 2584, 2597, 2610, 2623, 2636, 2649, 2662, 2675, 2688], "saveaveragedata": [2517, 2543, 2556, 2569, 2595, 2608], "`rho": [2556, 2569], "`is": [2556, 2569], "mbox": [2556, 2569, 4335, 4444, 4667, 4714, 4720, 4726, 4747, 4769, 5367], "{tr": [2556, 2569, 2847, 2860, 4335, 4444, 4667, 4726, 4747, 4769, 5349], ".\\": [2556, 2569, 4519, 4614, 5345, 5372], "setmatrixproductstate": [2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724], "setsuperop": [2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763], "'append": 2798, "\"append": 2798, "\"prepend": 2798, "\"replace": 2798, "_analysis": [2798, 2842, 4831, 4941, 4946, 4949, 4952, 4955, 4958, 4961, 4964, 4967, 4970, 4973, 4976, 4979, 4982, 4985, 4988, 4991, 4994, 4997, 5000, 5003, 5008, 5011, 5014, 5018, 5021, 5024, 5027, 5030, 5033, 5062, 5065, 5068, 5071, 5074, 5077, 5080, 5083, 5086, 5089, 5093, 5096, 5099, 5102, 5105, 5108, 5111, 5114, 5117, 5120, 5123, 5126, 5129, 5134, 5137, 5140, 5143, 5146, 5151, 5157, 5163, 5166, 5169, 5172, 5175, 5178, 5181, 5184, 5187, 5190, 5193, 5196, 5199, 5202, 5205, 5208, 5211, 5214, 5217, 5220, 5223], "(noise": [2801, 5339, 5366, 5367], "cx\u300f": 2801, "[instruction": [2802, 2804, 2805, 2806], "[deprecated": [2804, 2813, 2868, 2889], "temperature": [2808, 2848], "'ns": [2808, 2848], "participating": 2808, "milli": [2808, 2848], "-kelvin": [2808, 2848], "mk": [2808, 2848], "tolerancesmixin": [2813, 4376, 4640], "finalized": 2813, "-flip": [2813, 5366], "dim": [2813, 2867, 4299, 4316, 4335, 4354, 4376, 4402, 4424, 4444, 4463, 4487, 4519, 4552, 4568, 4595, 4614, 4640, 4667, 4686], "_shape": [2813, 4264, 4299, 4316, 4335, 4354, 4402, 4424, 4444, 4463, 4487, 4519, 4552, 4568, 4614, 4667, 4686, 5331], "(equivalent": [2814, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4554, 4571, 4669, 4688], "= b": [2814, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4554, 4571, 4669, 4688], "-times": [2822, 2836, 4308, 4367, 4479, 4511, 4537, 4586, 4632], "[m": 2830, "|m": 2830, "recording": 2830, "-strings": 2830, "\"|": 2830, ", p": [2830, 4614], "composation": 2831, "_populations": 2842, "-unit": 2842, "populations": 2842, "equilibrium": [2842, 2845, 2858, 2859, 2861], "_population": [2845, 2858, 2861], "a)]": 2845, "]\na1": [2845, 2858], "b0": 2845, "b1": [2845, 2858], "p1]": [2845, 2858], "(\u03c1": [2847, 2860], "\u03bb \\": 2847, "\u03c1]": [2847, 2860], "`n": 2847, "nanosecond": 2851, "microsecond": [2854, 5366], "\u00b5s": 2854, "gigahertz": 2854, "b)]": [2858, 2859], "a2": [2858, 2875], "b2": 2858, "+ p": [2860, 2885], "\"hamiltonian": 2862, "\"control": 2862, "\"subsystem": 2862, "\"dt": 2862, "_system": [2862, 5359], "indicies": 2862, "pixel": 2862, "_oscillators": 2867, "_freqs": 2867, "anharm": 2867, "_strengths": 2867, "oscillators": 2867, "\\nu": 2867, "anharmonicity": 2867, "strength": [2867, 4192], "nu": 2867, ")a": [2867, 2875, 2885], "annihilation": 2867, "drives": 2867, "retreived": 2867, "_index": [2867, 3845, 4518, 4544, 4639, 5252, 5274], "_idx": 2867, "driven": 2867, "radial": 2867, "strengths": [2867, 4712], "(dim": 2867, "=dim": 2867, "=oscillator": 2867, "=anharm": 2867, "=drive": 2867, "=dt": 2867, "noisetransformer": [2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885], "matrx": 2869, "*p": [2870, 2872, 2883, 2884], ")+": [2870, 2872, 2883, 2884, 4706], "repersenting": [2870, 2872], "quadaric": [2870, 2872], "^dagger": 2871, "repesenting": 2874, "flattened": 2874, "bn": 2875, "|)": [2875, 2885, 4714, 5361], ", |": [2875, 2885], "symbolically": 2875, "indeterminates": 2875, "ge": [2875, 2885, 4715, 5364, 5368], "[d": 2875, "dn": 2875, ", xn": [2876, 2877], ", dn": 2876, "= x1": 2876, "xn": 2876, "*dn": 2876, "anxn": [2877, 2878], "honesty": [2882, 2883, 5368], "gx": 2883, "_matrices": [2884, 4767, 5272, 5274], "const": 2884, "-schmidt": [2884, 2887, 4730], "[e": 2885, ")b": 2885, "'pauli": [2886, 2887], "'reset": [2886, 2887], "{\u300cx": [2886, 2887], ", ygate": [2886, 2887], "{p": [2887, 4722, 4739, 5368], "-s": [2887, 5350], "[s": [2887, 4726], "remapping": [2889, 5117], "readouterrors": 2889, "remappings": 2889, "wil": 2889, "unnamed": [2889, 5275], "remapped": [2889, 4192, 4195], "[old": 2889, "applyign": 2890, "singature": 2890, "_kwargs": [2891, 2892, 4830], "agruments": [2891, 2892], "containin": 2892, "basicaererror": [2893, 2915, 2924, 2933], "basicaerprovider": [2907, 2908], "'backend": [2909, 2918, 2927], "'chop": [2909, 2918, 2927], "\u300cinitial": [2914, 2923], "qobjexperiment": [2915, 2924, 2933], "0xf": [2915, 2924], ",\n\"": [2915, 2924], "_taken": [2915, 2924, 4751, 5250, 5369, 5370], "inall": 2932, "fakebackend": [2936, 2945, 2954, 2971, 2988, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3340, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3466, 3488, 3496, 3513, 3529, 3546, 3554, 3571, 3588, 3605, 3613, 3621, 3638, 3655, 3671, 3688], "longitudinal": 2936, "transverse": 2936, "discretization": 2936, "fakepulsebackend": [2954, 2971, 2988, 3021, 3038, 3055, 3072, 3105, 3138, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3306, 3323, 3356, 3373, 3398, 3449, 3496, 3529, 3554, 3571, 3588, 3621, 3638, 3671], "almaden": [2954, 2963], "_alive": [2954, 2971, 2988, 3021, 3038, 3055, 3072, 3089, 3105, 3122, 3138, 3155, 3171, 3188, 3205, 3222, 3239, 3256, 3273, 3290, 3306, 3323, 3356, 3373, 3398, 3415, 3424, 3433, 3449, 3488, 3496, 3513, 3529, 3554, 3571, 3588, 3621, 3638, 3655, 3671, 3688], "'fake": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "_almaden": [2954, 2963, 5359], "'conf": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "defs": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3097, 3105, 3114, 3130, 3138, 3147, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3441, 3449, 3458, 3474, 3496, 3505, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3663, 3671, 3680, 3696], "'defs": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3105, 3114, 3138, 3147, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3306, 3315, 3323, 3332, 3356, 3365, 3373, 3390, 3398, 3407, 3449, 3458, 3474, 3496, 3505, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3671, 3680], "dirname": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "/opt": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 5372], "/hostedtoolcache": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "/fake": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "/almaden": [2954, 2963], "props": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696, 4922, 4928, 5359], "'props": [2954, 2963, 2971, 2980, 2988, 2997, 3021, 3030, 3038, 3047, 3055, 3064, 3072, 3081, 3089, 3097, 3105, 3114, 3122, 3130, 3138, 3147, 3155, 3163, 3171, 3180, 3188, 3197, 3205, 3214, 3222, 3231, 3239, 3248, 3256, 3265, 3273, 3282, 3290, 3298, 3306, 3315, 3323, 3332, 3348, 3356, 3365, 3373, 3390, 3398, 3407, 3433, 3441, 3449, 3458, 3474, 3496, 3505, 3513, 3521, 3529, 3538, 3554, 3563, 3571, 3580, 3588, 3597, 3621, 3630, 3638, 3647, 3655, 3663, 3671, 3680, 3688, 3696], "fakealmaden": [2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 5331, 5333, 5334, 5356, 5358, 5359], "fakebackendv": [2963, 2969, 2980, 2986, 2997, 3003, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3030, 3036, 3047, 3053, 3064, 3070, 3081, 3087, 3097, 3103, 3114, 3120, 3130, 3136, 3147, 3153, 3163, 3169, 3180, 3186, 3197, 3203, 3214, 3220, 3231, 3237, 3248, 3254, 3265, 3271, 3282, 3288, 3298, 3304, 3315, 3321, 3332, 3338, 3348, 3354, 3365, 3371, 3390, 3396, 3407, 3413, 3441, 3447, 3458, 3464, 3474, 3480, 3505, 3511, 3521, 3527, 3538, 3544, 3563, 3569, 3580, 3586, 3597, 3603, 3630, 3636, 3647, 3653, 3663, 3669, 3680, 3686, 3696, 3702], "fakealmadenv": [2964, 2965, 2966, 2967, 2968, 2969, 2970], "/armonk": [2971, 2980], "fakearmonkv": [2981, 2982, 2983, 2984, 2985, 2986, 2987], "/athens": [2988, 2997], "fakeathensv": [2998, 2999, 3000, 3001, 3002, 3003, 3004], "bidirectional": [3005, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 5175, 5202, 5237], "/belem": [3021, 3030], "fakebelemv": [3031, 3032, 3033, 3034, 3035, 3036, 3037], "boeblingen": [3038, 3047], "_boeblingen": [3038, 3047], "/boeblingen": [3038, 3047], "fakeboeblingenv": [3048, 3049, 3050, 3051, 3052, 3053, 3054], "_bogota": [3055, 3064], "/bogota": [3055, 3064], "fakebogotav": [3065, 3066, 3067, 3068, 3069, 3070, 3071], "brooklyn": [3072, 3081], "/brooklyn": [3072, 3081], "fakebrooklyn": [3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080], "fakebrooklynv": [3082, 3083, 3084, 3085, 3086, 3087, 3088], "fakeqasmbackend": [3089, 3122, 3155, 3290, 3433, 3513, 3655, 3688], "_burlington": [3089, 3097], "/burlington": [3089, 3097], "fakeburlington": [3090, 3091, 3092, 3093, 3094, 3095, 3096], "fakeburlingtonv": [3098, 3099, 3100, 3101, 3102, 3103, 3104], "/cairo": [3105, 3114], "fakecairo": [3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113], "fakecairov": [3115, 3116, 3117, 3118, 3119, 3120, 3121], "/cambridge": [3122, 3130], "fakecambridge": [3123, 3124, 3125, 3126, 3127, 3128, 3129], "fakecambridgev": [3131, 3132, 3133, 3134, 3135, 3136, 3137], "/casablanca": [3138, 3147], "fakecasablancav": [3148, 3149, 3150, 3151, 3152, 3153, 3154], "/essex": [3155, 3163], "fakeessex": [3156, 3157, 3158, 3159, 3160, 3161, 3162], "fakeessexv": [3164, 3165, 3166, 3167, 3168, 3169, 3170], "/guadalupe": [3171, 3180], "fakeguadalupev": [3181, 3182, 3183, 3184, 3185, 3186, 3187], "/hanoi": [3188, 3197], "fakehanoi": [3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196], "fakehanoiv": [3198, 3199, 3200, 3201, 3202, 3203, 3204], "/jakarta": [3205, 3214], "fakejakarta": [3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213], "fakejakartav": [3215, 3216, 3217, 3218, 3219, 3220, 3221], "johannesburg": [3222, 3231], "_johannesburg": [3222, 3231], "/johannesburg": [3222, 3231], "fakejohannesburg": [3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230], "fakejohannesburgv": [3232, 3233, 3234, 3235, 3236, 3237, 3238], "/kolkata": [3239, 3248], "fakekolkata": [3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247], "fakekolkatav": [3249, 3250, 3251, 3252, 3253, 3254, 3255], "/lagos": [3256, 3265], "fakelagos": [3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264], "/lima": [3273, 3282], "fakelima": [3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281], "fakelimav": [3283, 3284, 3285, 3286, 3287, 3288, 3289], "/london": [3290, 3298], "fakelondon": [3291, 3292, 3293, 3294, 3295, 3296, 3297], "fakelondonv": [3299, 3300, 3301, 3302, 3303, 3304, 3305], "manhattan": [3306, 3315], "/manhattan": [3306, 3315], "fakemanhattan": [3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314], "fakemanhattanv": [3316, 3317, 3318, 3319, 3320, 3321, 3322], "/manila": [3323, 3332], "_melbourne": 3348, "/melbourne": 3348, "fakemelbournev": [3349, 3350, 3351, 3352, 3353, 3354, 3355], "/montreal": [3356, 3365], "/mumbai": [3373, 3390], "/nairobi": [3398, 3407], "fakenairobi": [3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406], "fakenairobiv": [3408, 3409, 3410, 3411, 3412, 3413, 3414], "/ourense": [3433, 3441], "fakeourensev": [3442, 3443, 3444, 3445, 3446, 3447, 3448], "paris": [3449, 3458], "/paris": [3449, 3458], "fakeparis": [3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457], "fakeparisv": [3459, 3460, 3461, 3462, 3463, 3464, 3465], "poughkeepsie": [3466, 3474], "fakepoughkeepsie": [3467, 3468, 3469, 3470, 3471, 3472, 3473], "_poughkeepsie": 3474, "/poughkeepsie": 3474, "fakepoughkeepsiev": [3475, 3476, 3477, 3478, 3479, 3480, 3481], "fakeprovider": [3483, 3484], "fakeproviderforbackendv": [3486, 3487], "fakeqasmsimulator": [3489, 3490, 3491, 3492, 3493, 3494, 3495], "/quito": [3496, 3505], "fakequito": [3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504], "fakequitov": [3506, 3507, 3508, 3509, 3510, 3511, 3512], "rochester": [3513, 3521], "_rochester": [3513, 3521], "/rochester": [3513, 3521], "fakerochester": [3514, 3515, 3516, 3517, 3518, 3519, 3520], "fakerochesterv": [3522, 3523, 3524, 3525, 3526, 3527, 3528], "/rome": [3529, 3538], "fakeromev": [3539, 3540, 3541, 3542, 3543, 3544, 3545], "santiago": [3554, 3563], "_santiago": [3554, 3563], "/santiago": [3554, 3563], "fakesantiagov": [3564, 3565, 3566, 3567, 3568, 3569, 3570], "singapore": [3571, 3580], "_singapore": [3571, 3580], "/singapore": [3571, 3580], "fakesingapore": [3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579], "fakesingaporev": [3581, 3582, 3583, 3584, 3585, 3586, 3587], "/sydney": [3588, 3597], "fakesydney": [3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596], "fakesydneyv": [3598, 3599, 3600, 3601, 3602, 3603, 3604], "_toronto": [3621, 3630], "/toronto": [3621, 3630], "faketoronto": [3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629], "faketorontov": [3631, 3632, 3633, 3634, 3635, 3636, 3637], "/valencia": [3638, 3647], "fakevalencia": [3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 5356, 5357], "fakevalenciav": [3648, 3649, 3650, 3651, 3652, 3653, 3654], "/vigo": [3655, 3663], "fakevigov": [3664, 3665, 3666, 3667, 3668, 3669, 3670], "/washington": [3671, 3680], "fakewashington": [3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679], "_yorktown": [3688, 3696], "/yorktown": [3688, 3696], "fakeyorktown": [3689, 3690, 3691, 3692, 3693, 3694, 3695], "fakeyorktownv": [3697, 3698, 3699, 3700, 3701, 3702, 3703], "_ibm": 3704, "_experience": 3704, "ibmqbackendservice": [3704, 3737, 3738, 3739, 3740, 3741], "autocomplete": 3704, "discovery": [3704, 3737], "ibmqfactory": [3704, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754], "ibmqnotauthorizederror": [3704, 3709, 3888, 3922], "accountprovider": [3705, 3706, 3707, 3708, 3709, 3710, 3718, 3736, 3737, 3748, 3749, 3750, 3751, 3777, 3837, 3863, 3876, 5289], "(filters": 3705, "ibmqinputvalueerror": [3707, 3709, 3885, 3888, 3890, 3921], "ibmqaccountcredentialsinvalidformat": [3712, 3750], "ibmqaccountcredentialsnotfound": [3715, 3746, 3747, 3750], "ibmqaccountmultiplecredentialsfound": [3717, 3746, 3750, 3753], "_client": [3718, 3796, 3909, 3922], "interfacing": 3718, "(qx": 3718, "/schedules": 3718, "_operational": 3718, ".operational": 3718, "_queue": 3718, ".pending": 3718, "backendjoblimit": [3718, 3722, 3727], "accountclient": [3718, 3796], "communicate": 3718, "_warning": 3718, "_issued": 3718, "-query": [3721, 3725, 3812, 3814, 3837, 3849, 3862, 3863, 3882, 3883, 3884], "inspect": [3722, 3796, 3909, 4219], ".maximum": 3722, ".active": [3722, 4033, 4056], "ibmqbackendapiprotocolerror": [3722, 3727, 3730, 3732, 3734, 3741, 3896], "'or": [3723, 3738, 3739], "db": [3723, 3739], "_filter": [3723, 3739], "paginate": [3723, 3738, 3739], "=jobstatus": [3723, 3738, 3739], "=\u300d": [3723, 3738, 3739], "dates": [3723, 3738, 3739], "/time": [3723, 3728, 3738, 3739, 3789, 3935], "newest": [3723, 3738, 3739], "loopback": [3723, 3739], "hubinfo": [3723, 3739], ".hub": [3723, 3739], "=filter": [3723, 3739], "ibmqbackendvalueerror": [3723, 3730, 3738, 3739, 3742, 3896], "recognized": [3723, 3738, 3739, 4421, 5259, 5282], "timestamp": [3725, 3782, 3789, 3793, 5252, 5254], "backendreservation": [3728, 3740], "ibmqbackenderror": [3729, 3735], "activate": 3730, "instruments": 3730, "ibmqbackendapierror": [3730, 3733, 3741, 3896], "_msg": [3732, 3951, 3960], "unexpectedly": [3733, 3825], "ten": 3736, "_recent": 3736, "ibmjob": 3738, "ibmqerror": [3743, 3833], "'https": [3748, 3752], "auth": [3748, 3752, 3767], "-computing": [3748, 3752], "/api": [3748, 3752], "authenticate": [3748, 3750], "tls": 3748, "certificate": 3748, "ibmqprovidererror": [3748, 3749, 3750, 3755], "/group": 3749, "/project": 3749, "ssl": [3752, 3766], "certificates": [3752, 3766], "ibmqaccountvalueerror": 3752, "prompts": [3754, 3784, 3785, 3786], "resultdecoder": [3756, 3885, 3900, 3909, 3916, 3918], "_xxx": [3757, 4803], "[complex": [3757, 4803], "[slot": [3757, 4803], "experimentresultdata": [3759, 4804], "[shots": [3761, 4806], "[memory": [3761, 4806], "quasiprobabilites": 3762, "quasiprobabilities": 3762, "decimals": [3763, 3764, 3874, 3875, 4389, 4390, 4398, 4604, 4605, 4655, 4656, 4664, 4807, 4808, 5348, 5350], "dictating": 3766, "experimentservice": 3766, "hubgroupproject": [3766, 3769], "credentialserror": 3770, "credential": 3770, "credentialsnotfounderror": 3771, "invalidcredentialsformaterror": 3772, "ibmexperimententryexists": [3774, 3781, 3782, 3783], "ibmexperimententrynotfound": [3775, 3778, 3788, 3790, 3792, 3793, 3794], "ibmexperimenterror": 3776, "_filtered": 3777, "(experiment": 3777, "=experiment": 3777, "_decoder": [3778, 3779, 3788, 3789, 3885, 3909], ".decoder": [3778, 3779, 3788, 3789], "ibmqapierror": [3778, 3779, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3792, 3793, 3794], "*filters": [3779, 3789], "devicecomponent": [3779, 3781, 3789], "1foo": [3779, 3789], "resultquality": [3779, 3781, 3792], "sorting": [3779, 3789, 4491, 4513, 4522, 4539, 4617, 4634], "asc": [3779, 3789, 5349], "desc": [3779, 3789, 5349], ":desc": [3779, 3789], "=resultquality": 3781, ".unknown": 3781, "chisq": [3781, 3792], "_encoder": [3781, 3782, 3792, 3793], ".encoder": [3781, 3782, 3792, 3793, 3907], "exits": [3781, 3782, 3783], "freeform": [3782, 3793], "experimentsharelevel": [3782, 3793], "visible": [3782, 3789, 3793, 3886, 3888, 3922], "publicly": [3782, 3793], "zone": 3782, "confirmation": [3784, 3785, 3786], "proceeding": [3784, 3785, 3786, 4121, 4139], "_before": 3789, "=public": 3789, "(that": [3789, 5345], "am": [3789, 5004], "semicolon": 3789, ":asc": 3789, "prefer": 3791, "'bad": 3795, "'good": 3795, "'unknown": 3795, "ibmqjobapierror": [3796, 3799, 3809, 3810, 3813, 3814, 3818, 3822, 3823, 3825], "ex": [3796, 3909, 5290, 5342, 5343, 5359], "happened": 3796, "!:": [3796, 3909], "(ex": [3796, 3909, 5342, 5343], "retrying": 3796, "independently": [3796, 4025, 4026], "spent": 3796, "impossible": 3799, "communicating": [3799, 3809, 3813, 3814, 3818, 3822, 3823], "priorities": 3811, "enters": 3811, "precaution": [3814, 3862], "ibmqjobinvalidstateerror": [3814, 3822, 3823, 3828], "fairshare": 3816, "'creating": 3821, "tzinfo": 3821, "=tzlocal": 3821, "'created": 3821, "'validating": 3821, "removal": [3823, 3868, 4162, 5232, 5233, 5234], "_tag": [3823, 3868], "_jobset": [3823, 3868], "ibmqjobtimeouterror": [3824, 3829, 3849], "ibmqjoberror": 3826, "_priority": 3830, ".textiowrapper": [3832, 4829], "textio": 3832, "sys": [3832, 4829], ".stdout": [3832, 4829], "busy": 3833, "fewest": [3833, 5117], "presents": 3834, "thousand": 3834, "_foo": 3834, "_messages": 3834, "=job": 3834, "=provider": 3834, "ibmqjobmanagerunknownjobset": [3837, 3843, 3863], "ibmqjobmanagerinvalidstateerror": [3837, 3838, 3840, 3863, 3864, 3868], "ibmqjobmanagererror": 3839, "ibmqjobmanagerjobnotfound": [3841, 3855, 3871, 3872, 3873, 3874, 3875], "ibmqjobmanagertimeouterror": [3842, 3862], "ibmqmanagedresultdatanotavailable": [3844, 3870, 3871, 3872, 3873, 3874, 3875], "managedjob": [3846, 3847, 3848, 3849, 3850, 3851, 3858], "_lock": 3851, "lock": 3851, "synchronize": 3851, "apijobsharelevel": [3851, 3864], "divides": 3855, "workflow": [3876, 4946, 4952, 5336], "canceling": 3876, "runtimejobnotfound": [3877, 3879, 3886], "qiskitruntimeerror": [3877, 3878, 3879, 3883, 3886, 3887, 3888, 3911, 3915], "runtimeprogramnotfound": [3878, 3883, 3887], "logout": 3881, "clears": 3881, "authorization": 3881, "authority": 3881, "pretty": [3882, 3905], "runtimeprogram": [3883, 3884, 3923, 3924], "runtimeoptions": [3885, 3921], ":tag": [3885, 3909, 3920], "_execution": [3887, 3888, 3922], "(metadata": 3888, ", name": 3888, "runtimeduplicateprogramerror": 3888, "-completion": [3889, 3923], "extraneous": [3890, 3904], "myresultdecoder": 3899, "(resultdecoder": 3899, "decoded": [3899, 3900, 3901], "(decoded": 3899, "deserializations": 3901, "-rpc": 3901, "hinting": 3901, "_pairs": [3901, 4842], "decoders": [3901, 3905], "datatype": 3901, ".decimal": 3901, "infinity": [3901, 3905], "nan": [3901, 3905], "\\t": 3901, "(tab": 3901, "\\n": [3901, 5359, 5362], "runtimedecoder": [3902, 3903, 3904], ".pattern": 3902, "skipkeys": 3905, "_ascii": 3905, "_circular": 3905, "_nan": 3905, "_keys": 3905, "indent": [3905, 4241], "separators": 3905, "sensible": 3905, "-ascii": 3905, "escaped": 3905, "encoders": 3905, "serializations": [3905, 5042], "-day": 3905, "-printed": 3905, "newlines": 3905, "_separator": 3905, "\u300e,": 3905, "\u300e)": 3905, "whitespace": 3905, "encodable": 3905, "runtimeencoder": [3906, 3907, 3908], "iterators": 3906, "iter": [3906, 5362], "(iterable": 3906, "baz": 3907, "iterencode": 3908, "_one": [3908, 5361], "(bigobject": 3908, "mysocket": 3908, ".write": [3908, 5343], "(chunk": 3908, ".resultdecoder": 3909, "runtimejobfailureerror": [3909, 3916], "runtimeclient": [3909, 3922], "runtimeinvalidstateerror": [3911, 3918], "\"program": 3922, "forcibly": 3922, "differently": [3926, 5195], "days": 3927, "milliseconds": 3927, "validates": [3931, 4299, 5220], "compat": [3932, 4285], "shim": 3932, "chip": [3932, 3976, 5014], "faulty": [3936, 3937], "basebakend": 3952, ".model": [3955, 3961], "groupings": 3957, "/false": 3957, "_uchannels": 3963, "_levels": [3963, 5359], "_kernels": 3963, "_bandwidth": 3963, "-channels": 3963, "-channel": 3963, "los": 3963, "characterizing": [3963, 4061, 4063, 4065, 4067, 4069, 4071, 4073], "bandwidth": [3963, 4958], "/dt": 3963, "frames": [3966, 5335], "linked": 3966, "(controlchannel": 3966, "derivations": 3966, "_kernel": 3973, "reformat": 3973, "transport": 3973, "cavity": 3973, "measurementkernel": 3973, "hertz": 3973, "uchannelloschema": 3979, "'measure": 3982, "-bound": 3983, "kwparams": [3985, 3989], "*params": [3985, 3989], "*kwparams": [3985, 3989], "keyworded": [3985, 3989], "arity": 3991, "syntaxes": 3993, "sugar": 3993, "merge": [3993, 5120], "*schedules": 3993, "(start": 3993, "autogenerated": [3993, 4008], "~schedule": 3993, "-tuple": [3993, 5105], "namedvalue": 3993, "'sched": 3993, "textrm": [3994, 5345, 5372], "{max": 3994, "texttt": [3994, 4159, 4164, 4169, 4174, 4184], ".stop": 3994, "{self": 3994, "cap": 3994, "{schedule": 3994, "*channels": [3996, 3997, 3998, 4011, 4077, 4078, 4079, 4087, 4088, 4089, 4096, 4097, 4098, 4105, 4106, 4107, 4114, 4115, 4116, 4123, 4124, 4125, 4132, 4133, 4134, 4141, 4142, 4143, 4150, 4151, 4152], "_unit": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "_barrier": [3999, 4012, 5331], "plotter": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "horizontal": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "(tmin": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331], "tmax": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331], "modulate": [3999, 4012, 5331], "charts": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331], "plotters": [3999, 4012, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "_funcs": [4000, 4001, 4013, 4014], "_ranges": [4000, 4001, 4013, 4014], "_subroutine": [4000, 4001, 4013, 4014], "failing": [4000, 4013], "~self": [4000, 4013], "[\u300e": [4000, 4001, 4013, 4014, 5008, 5108], "[drivechannel": [4000, 4001, 4013, 4014], "abcmeta": [4000, 4001, 4013, 4014], "[pulseinstruction": [4000, 4001, 4013, 4014], "mutably": [4006, 4019], "allocating": [4008, 4964, 5089], "-soon": [4008, 4209], "-as": [4008, 4209, 4212], "-possible": [4008, 4209, 4212], "-late": [4008, 4212], "optimum": 4008, "=duration": [4008, 4182], "(rabi": 4008, "interchangable": 4008, "apart": 4008, "manages": 4008, "allocates": [4008, 4515, 4516, 4541, 4542, 4591, 4636, 4637], "clock": 4008, "'block": 4008, "prioritized": [4013, 4014], "_discriminator": 4020, "=kernel": 4020, "newtype": [4020, 4041, 5333, 5334], "storagelocation": [4020, 4041], ".pulseerror": [4020, 4032], ".backendnotset": 4022, "=circuit": 4023, "'method": 4023, "=transpiler": 4024, "'optimization": 4024, "equispaced": [4025, 4203, 4206], "periodical": 4025, "hahn": [4025, 5077, 5143], "_echo": 4025, "-schedules": [4025, 4026, 4204, 4207, 4210, 4213, 4216], "uhrig": [4026, 5077, 5143], "udd": [4026, 4206], "pos": [4026, 4206, 5341], "(j": [4026, 4206, 5353], "*j": [4026, 4206], "/(": [4026, 4206], "=udd": 4026, ".block": [4027, 4028, 4029], "abstractcontextmanager": [4027, 4031, 4033, 4039, 4040, 4045, 4046, 4056], "directive": 4030, "accomplished": 4030, "_transform": 4030, "(barrier": 4030, "(aligned": 4030, "barriered": 4030, "'left": 4031, "_scheduler": [4031, 5358], "launching": 4031, "kw": 4032, "undo": [4039, 4046], "1ghz": 4039, "exiting": [4039, 4045], "automate": 4041, "_drive": 4041, "chs": 4045, "{measurechannel": 4048, "elapse": [4049, 4050], "elapses": 4049, "carrier": [4052, 4054], "(optimization": 4056, "trivially": [4061, 4063, 4065, 4067, 4069, 4071, 4073, 4075, 4148], "'d": [4065, 5331], "'m": [4067, 4069, 5331], "resister": 4071, "-latency": 4071, "adc": [4075, 5359], "intermediary": 4075, "kerneled": [4075, 5359], "discriminating": 4075, "discrimination": 4075, "-feedback": 4075, "'schedule": [4076, 4081, 4085, 4091, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154], "'instruction": [4076, 4081, 4085, 4091, 4095, 4100, 4104, 4109, 4113, 4118, 4122, 4127, 4131, 4136, 4140, 4145, 4149, 4154], "interp": [4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "schedstyle": [4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "indicators": [4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153], "'call": 4084, ".argument": 4086, "aligning": 4094, "modulated": 4103, "[\\": [4112, 4121, 4139, 4335, 4714, 4715, 4719, 4720, 4723, 4726, 4727, 4740, 5178, 5362, 5364], "jdt": [4112, 4121, 4139], "[radians": [4121, 4139], "enacted": [4121, 4139], "modulation": [4139, 5295, 5307, 5319, 5331, 5359], "capture": 4148, "interpolated": [4158, 4163, 4168, 4173, 4178, 4183, 4188], "annotations": [4158, 4163, 4168, 4173, 4178, 4183, 4188, 5331, 5333, 5334], "discretized": [4159, 4164, 4169, 4174, 4184], "midpoint": [4159, 4164, 4169, 4174, 4184, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201], "| t": [4159, 4164, 4169, 4174, 4184], "{z": [4159, 4164, 4169, 4174, 4184, 4463, 4519], "wedge": [4159, 4164, 4169, 4174, 4184, 5343], "<\\": [4159, 4164, 4169, 4174, 4184], "{duration": [4159, 4162, 4164, 4167, 4169, 4172, 4174, 4184], "adiabatic": 4162, "lifting": [4162, 4167, 4172], "spectrum": 4162, "\\leftrightarrow": 4162, "chance": [4162, 4964], "leakage": 4162, "&=": [4162, 4167, 4172, 4714], "\\bigl": [4162, 4167], "{sigma": [4162, 4167, 4172], "bigr": [4162, 4167, 4172], "\\\ng": 4162, "'(": [4162, 4167, 4172, 4229, 5342, 5343], "{amp": [4162, 4167, 4172], "{g": [4162, 4402, 4667], ")-": [4162, 5355], "bigl": [4162, 4172], "{beta": 4162, "unlifted": 4162, "motzoi": [4162, 4192], "merkel": [4162, 4192], "wilhelm": [4162, 4192], "-fidelity": [4162, 4192], "weakly": [4162, 4192], "rebentrost": 4162, "september": 4162, "narrow": [4162, 4167, 4172], "peak": [4162, 4167], "shaped": [4167, 4172, 4958, 5220], "center": [4167, 4192, 4193, 4194, 4197, 4198], "{{": [4167, 4172, 4317, 4319, 4329, 4334, 4336, 4338, 4348, 4353, 4403, 4405, 4415, 4420, 4445, 4447, 4457, 4462, 4668, 4670, 4680, 4685, 4687, 4689, 4699, 4704], "\\\nf": [4167, 4172], "- f": [4167, 4172], "risefall": [4172, 4195], "_sigma": 4172, "sides": 4172, "{risefall": 4172, "\\\n\\": [4172, 5345, 5350, 5372], "{width": 4172, "\\biggl": 4172, "biggr": 4172, "superclass": 4177, "poor": 4177, "armv": 4182, "rm": [4182, 5333, 5334], "overline": [4182, 4319, 4338, 4405, 4447, 4670, 4689, 4715], "\\rm": 4182, "\\overline": [4182, 4319, 4338, 4405, 4447, 4670, 4689], "footprint": 4182, "concatenated": 4182, "face": [4182, 5331, 5333, 5334], "\\max": 4182, "healthy": 4182, "abs": [4182, 5338], "(amp": 4182, "everytime": 4182, ".symbols": 4182, ".floor": 4182, "=envelope": 4182, "=name": 4182, "collaborators": 4182, "shortly": 4182, "-waveform": 4182, "clipping": 4187, "clipped": 4187, "-sampled": [4190, 4202], "_ends": [4192, 4193, 4195, 4197], "sno": 4192, "= g": 4192, "\\delta": [4192, 4717, 5350], "detuning": 4192, "mu": [4193, 4194, 4197, 4198], "\\mu": [4193, 4194, 4195, 4197, 4198], "{y": [4193, 4197], "}{a": [4193, 4197], "endpoint": [4193, 4197, 5123], "=y": [4193, 4197], "curve": 4193, "*sigma": 4193, "& x": 4195, "-r": 4195, "ramps": 4195, "rise": [4195, 5178], "/fall": 4195, "fall": [4195, 5202], "inconsistent": 4195, "+ g": 4196, "/t": 4196, "_wave": [4196, 4201], "(sawtooth": 4196, "<matplotlib": [4196, 4201], ".lines": [4196, 4201], ".line": [4196, 4201, 5331, 5333, 5334], "{sech": [4197, 4198], "{d": [4198, 4714], "{sign": 4200, "{sawtooth": 4201, "-sinusoidal": 4201, "ramping": 4201, "(triangle": 4201, "1b": [4201, 5366], "arranged": [4203, 4206, 4215], "pdd": 4203, "reallocated": [4204, 4207, 4210, 4213, 4216], "-justified": [4209, 4212], "/play": 4219, ", m": 4219, "_shifted": 4219, "_gaussian": 4220, "confirm": 4220, "pydag": 4220, "compress": [4222, 5354], "unoccupied": 4225, "kwds": 4229, "regexlexer": 4229, "lexer": [4229, 4230, 4231], "_filenames": 4229, "globs": 4229, "'qasm": 4229, "shortcuts": 4229, "filenames": [4229, 4241], "'*": 4229, "multiline": 4229, "3sqrtx": 4229, "rc3x": 4229, "mimetypes": 4229, "mime": 4229, "lexers": 4229, "tokens": [4229, 4235], "'gate": [4229, 4964], "('[": 4229, "+]": 4229, ".keyword": [4229, 4239, 4240], ".type": [4229, 4239, 4240], "push": 4229, ", token": [4229, 4239, 4240], ".text": [4229, 4239, 4240, 5331, 5333, 5334], "_keywords": 4229, ".literal": [4229, 4239, 4240], "'\\\\": 4229, ".number": [4229, 4239, 4240], ".*": 4229, "\\\\d": 4229, "\\\\s": [4229, 4915], "\"(": 4229, "[^\"": 4229, "]|": [4229, 4915], ")*": [4229, 5033, 5357, 5361], "\\.": 4229, "*|": 4229, "*\\": [4229, 5178], "+)": 4229, "eef": 4229, "]?": 4229, "]+": [4229, 4751], ")?": 4229, "\\)": 4229, "\\\\n": 4229, "'[": 4229, "^\\\\": 4229, "'/": 4229, "/\\\\": 4229, ".comment": [4229, 4239, 4240], "'//": 4229, "?$": 4229, ".single": [4229, 4239, 4240], "|include": 4229, ".reserved": [4229, 4239, 4240], "|creg": 4229, ".declaration": [4229, 4239, 4240], "|measure": 4229, "|reset": 4229, ".builtin": [4229, 4239, 4240], "|cx": 4229, "|y": 4229, "|z": 4229, "|s": 4229, "|sdg": 4229, "|t": 4229, "|tdg": 4229, "|ccx": 4229, "|rx": 4229, "|ry": 4229, "|rz": 4229, "|cz": 4229, "|cy": 4229, "|ch": 4229, "|swap": 4229, "|cswap": 4229, "|crx": 4229, "|cry": 4229, "|crz": 4229, "|cu1": 4229, "|rzz": 4229, "|rccx": 4229, "|rc": 4229, "|u": [4229, 4714], ".function": [4229, 4239, 4240], "'[a": 4229, "'state": 4229, "tokentype": [4229, 4232, 4233], "/definition": 4229, "openqasmlexer": [4230, 4231, 4232, 4233], "analyse": 4231, "_lexer": 4231, "lexermeta": 4231, "metaclass": 4231, "unfiltered": 4232, "bypassed": 4232, "preprocess": 4232, "tabs": 4232, "strip": [4232, 5217], "'root": 4233, "#ffffff": [4239, 4240, 5332, 5333, 5334, 5354], "#ffffcc": [4239, 4240], "_number": [4239, 4240], "_background": [4239, 4240], "'transparent": [4239, 4240], "'inherit": [4239, 4240], "_special": [4239, 4240], "#ffffc": [4239, 4240], "styles": [4239, 4240], "{token": [4239, 4240], "''": [4239, 4240, 4463, 5343, 5359], ".hashbang": [4239, 4240], ".multiline": [4239, 4240], ".preproc": [4239, 4240], ".preprocfile": [4239, 4240], ".special": [4239, 4240], ".escape": [4239, 4240], ".generic": [4239, 4240], ".deleted": [4239, 4240], ".emph": [4239, 4240], ".heading": [4239, 4240], ".inserted": [4239, 4240], ".output": [4239, 4240, 5353], ".prompt": [4239, 4240], ".strong": [4239, 4240], ".subheading": [4239, 4240], ".traceback": [4239, 4240], "ansigreen": 4239, ".namespace": [4239, 4240], ".pseudo": [4239, 4240], "ansimagenta": 4239, ".date": [4239, 4240], "ansicyan": 4239, ".bin": [4239, 4240], ".hex": [4239, 4240], ".integer": [4239, 4240], ".long": [4239, 4240], ".oct": [4239, 4240], "ansired": 4239, ".affix": [4239, 4240], ".backtick": [4239, 4240], ".char": [4239, 4240], ".delimiter": [4239, 4240], ".doc": [4239, 4240], ".double": [4239, 4240], ".heredoc": [4239, 4240], ".interpol": [4239, 4240], ".other": [4239, 4240], ".regex": [4239, 4240], ".attribute": [4239, 4240], "ansiblue": 4239, ".class": [4239, 4240], ".decorator": [4239, 4240], ".entity": [4239, 4240], ".exception": [4239, 4240], "ansiyellow": 4239, ".magic": [4239, 4240], ".tag": [4239, 4240], ".instance": [4239, 4240], ".word": [4239, 4240], ".punctuation": [4239, 4240], ".whitespace": [4239, 4240], "_gallery": [4239, 4240], "_exclude": [4239, 4240], "ansibrightgreen": 4240, "ansibrightmagenta": 4240, "ansibrightcyan": 4240, "ansibrightred": 4240, "ansibrightblue": 4240, "ansibrightyellow": 4240, "'stdgates": 4241, "_constants": 4241, "expoter": 4241, "multiples": 4241, "[size": 4241, "declaration": 4241, "indented": 4241, "dumping": 4242, "textiobase": 4244, "gatecalibration": [4247, 4248, 4267, 4268, 4269], ", cls": [4254, 4272, 4287], "qobjdictfield": [4255, 4261, 4262, 4279, 4280, 4289, 4291, 4292], "pulseqobjexperimentheader": 4258, "qobjdictfieldr": [4262, 4280, 4289, 4292], "bounded": [4264, 4717, 4722], "fc": 4264, "sf": 4264, "bfunc": [4264, 4282], "gatecalibrations": 4267, "qasmexperimentcalibrations": [4268, 4269, 4273, 4279], "qasmqobjrunconfig": 4270, "qasmqobjexperimentheader": 4276, "mask": 4282, "relation": 4282, "relational": 4282, "masked": 4282, "(equals": 4282, "qasmmeasurementoption": 4296, "transfer": [4297, 4444, 4946, 4952, 5181], "machines": 4297, "gzip": [4297, 4298], ".open": [4297, 4298, 5359], "binaryio": [4297, 4298], "qpyerror": 4297, "adjointmixin": [4299, 4354, 4519, 4614], "elem": 4299, "(elem": 4299, "shelly": [4299, 4311], "garion": [4299, 4311], "andrew": [4299, 4311], "easwar": [4299, 4311], "magesan": [4299, 4311], "lev": [4299, 4311], "bishop": [4299, 4311], "smolin": [4299, 4311, 4796], "jay": [4299, 4311], "scalable": [4299, 4311, 4821], "randomised": [4299, 4311], "npj": [4299, 4311], "{e": [4316, 4317, 4319, 4334, 4335, 4336, 4338, 4353, 4402, 4403, 4405, 4420, 4444, 4445, 4447, 4462, 4667, 4668, 4670, 4685, 4686, 4687, 4689, 4704, 4714, 4717, 4720, 4726, 5366, 5368], "\\chi": 4316, "\u03c1)": [4316, 4667], "}-": [4316, 4421, 4444, 5345, 5350, 5372], "wood": [4316, 4335, 4402, 4444, 4667, 4686], ".d": [4316, 4335, 4402, 4444, 4667, 4686], "biamonte": [4316, 4335, 4402, 4444, 4667, 4686], "cory": [4316, 4335, 4402, 4444, 4667, 4686], "calculus": [4316, 4335, 4402, 4444, 4667, 4686], "comp": [4316, 4335, 4402, 4444, 4667, 4686], "tp": [4326, 4345, 4412, 4454, 4677, 4696], "exponents": [4329, 4348, 4415, 4457, 4680, 4699], "powered": [4329, 4348, 4415, 4457, 4680, 4699], "^\\n": [4329, 4348, 4415, 4457, 4680, 4699], "}}^": [4329, 4348, 4415, 4457, 4680, 4699], "\\!": [4335, 4385, 4389, 4398, 4444, 4686, 4714, 4715, 4740, 4747, 4769], "\\mbox": [4335, 4667, 5367], "rows": [4354, 4487, 4490, 4491, 4493, 4497, 4506, 4513, 4515, 4518, 4519, 4521, 4522, 4523, 4524, 4528, 4533, 4539, 4541, 4544, 4591, 4614, 4616, 4617, 4618, 4619, 4623, 4628, 4634, 4636, 4639, 4734, 4736, 4849, 5272], "destabilizer": [4354, 4363, 5364], "readable": 4354, "cliff": 4354, "(cliff": 4354, ".destabilizer": 4354, ".stabilizer": 4354, "'+": [4354, 4624, 4625, 4634, 4635, 4639], ", destabilizer": 4354, "['+": [4354, 4595, 4620, 4624, 4639], "\"s": 4363, "quantumstate": [4376, 4381, 4595, 4640, 4715, 4718, 4719, 4723], "projector": [4376, 4665], "_args": [4380, 4644, 4830], "textmatrix": [4380, 4644], "+\"": [4386, 4626, 4651], "-\"": [4386, 4626, 4651], "\"r": [4386, 4651], "\\ i": [4386, 4463, 4515, 4516, 4519, 4541, 4542], "\"l": [4386, 4651], "\\ -": 4386, "semidefinite": [4387, 4717], "quantumstates": [4388, 4603, 4654], "(outcome": [4388, 4603, 4654], "=|": [4389, 4655], "probs": [4389, 4655], "(probs": [4389, 4655], "_swapped": [4389, 4655], "qudit": [4390, 4398, 4605, 4656, 4664], "comma": [4390, 4398, 4605, 4656, 4664], "delimiters": [4390, 4398, 4605, 4656, 4664], ". \\": [4393, 4439, 4463, 4659], "stats": [4394, 4395, 4608, 4609, 4660, 4661], "qutrit": [4398, 4664, 5353], ".zeros": [4398, 4664, 5341], "validity": 4400, "[b": 4402, "-euler": 4421, "\u300ezyz": 4421, "\u300ezxz": 4421, "\u300exyx": 4421, "\u300exzx": 4421, "\u300eu": [4421, 4705, 4973, 5129, 5134, 5208, 5211], "\u300epsx": 4421, "\u300ezsx": 4421, "\u300ezsxx": 4421, "\u300err": 4421, "psx": [4421, 4705], "zsxx": 4421, "u1x": [4421, 4705], "linearop": [4424, 4552, 4568], "-vector": 4424, "\u300ei": 4433, "\u300ex": [4433, 4463], "]\n\u300e": 4433, "\u300es": [4433, 5196], "\u300et": 4433, "+\u300f": 4433, "-\u300e": [4433, 4463, 5331, 5333, 5334], "\u300er": 4433, "\u300el": 4433, "-vectorization": [4444, 4686], "_p": [4444, 4721, 4722, 5341, 5350, 5362], "ptm": [4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462], "basepauli": [4463, 4487], ".ndarrays": [4463, 4487], "-'": 4463, "i']": [4463, 4639], "-iziz": 4463, "'xyz": 4463, "\\otimes": [4463, 4655, 4664, 4715, 5350, 5353, 5361], "ixyz": 4463, "_truncate": 4463, "\\cdot": 4463, "^z": [4463, 4519, 4614, 5361], "(-i": 4463, "* x": 4463, "slices": [4463, 4487], ", repr": 4463, "=,": 4463, "alone": 4463, "concatenation": 4463, "\u300e+": 4463, "\u300e\u300f": 4463, "\u300ej": 4463, "xiyy": 4463, "-commute": [4466, 4490, 4492, 4521, 4523, 4616, 4618], "ind": [4470, 4497, 4506, 4528, 4533, 4623, 4628], "\u300eh": [4473, 4500], "linearmixin": 4487, "groupmixin": 4487, "[pauli": 4487, "_symplectic": 4487, "ixi": 4487, "pauli2": 4487, ")\nx": 4487, "yz": [4487, 4513, 4539, 4634, 5361], "iix": 4487, "iz\"": 4487, "iz'": [4487, 4518], "-row": [4490, 4493, 4521, 4524, 4616, 4619], "argsort": [4491, 4522, 4617], "lexicographically": [4491, 4513, 4522, 4539, 4617, 4634, 5272], "\u2218other": 4494, "deleting": [4497, 4528, 4623], "(es": [4497, 4528, 4531, 4623, 4626, 5277], "\u2218self": 4498, "entrywise": 4499, "paulilists": [4503, 4504, 4515, 4516], "commutable": 4504, "labeliterator": [4508, 4534, 4583, 4629], "shuffle": [4513, 4539, 4634], "ix": [4513, 4539, 4634], "yi": [4513, 4530, 4539, 4625, 4634], "(labels": [4513, 4539, 4634], "pt": [4513, 4518, 4539, 4544], "(pt": [4513, 4539], "srt": [4513, 4539, 4634], "(srt": [4513, 4539, 4634], "(weight": [4513, 4539, 4634, 5341], "zy'": 4513, "advance": [4515, 4516, 4541, 4542, 4591, 4636, 4637], "'-": [4518, 4620, 4624, 4625, 4634, 4635, 4639], "(unique": [4518, 4544, 4639], "correspondence": [4519, 4614], "{array": [4519, 4614, 5367, 5368], "ccc": [4519, 4614], "|ccc": [4519, 4614], "& z": [4519, 4614], ",n": [4519, 4614], ", z": [4519, 4614], ".b": [4519, 4614, 5353], "\"zx": [4519, 4614], "-arrays": [4519, 4614], "discards": [4525, 4529], "paulitables": [4525, 4529, 4541, 4542], "(current": [4525, 4529, 4530, 4540, 4620, 4624, 4625, 4635], "['y": [4525, 4529], "outer": [4525, 4529, 4530, 4540, 4620, 4624, 4625, 4635], "zx'": 4530, "yz'": 4539, "xz'": 4540, "['x": 4544, "quaternion": [4546, 4547, 4548, 4549, 4550, 4551], "'yzy": 4547, "yzy": [4547, 5132, 5133], "normalizes": 4549, "-convention": 4568, "chopping": 4570, "xiizi": [4577, 4579], "iyiiy": [4577, 4579], "objector": 4578, "triples": 4579, "designated": [4579, 5250], "yy\"": 4580, "zeros": [4588, 4774, 4788], "sparsepauliops": 4589, "stab": [4595, 5364], "(stab": [4595, 5364], "(stabilizertable": 4595, "stabilzier": [4600, 4611], "+i": [4614, 4626, 4636, 4637, 5350], "-iy": [4614, 4626, 4636, 4637], "stabilizes": [4614, 5137], "(col": 4614, ".col": 4614, "col": 4614, ".row": 4614, ":(": 4614, "viewed": 4614, "'+i": [4620, 4624, 4625, 4635], "x']": [4620, 4624, 4625, 4635, 4639], "'+x": [4620, 4624, 4639], "z']": [4620, 4624, 4625, 4635], "y']": [4620, 4624], "'-y": [4625, 4635], "['-": [4625, 4634, 4635], "st": [4634, 4639], "(st": 4634, "stabilizertables": [4636, 4637], "=statevector": 4644, ".complex": 4652, "(vec": 4664, "rectangular": 4667, "formed": 4686, "stacking": 4686, "(column": 4686, "kak": [4705, 5018], "rr\u300f]": 4705, "rz}": 4705, "decomp": [4706, 4707, 4708, 4709], "ud": [4706, 4707, 4708, 4709], "ur": [4706, 4707, 4708], "|tr": [4706, 4707, 4708, 4711], "(ur": [4706, 4707, 4708], ".utarget": [4706, 4707, 4708], "^dag": [4706, 4707, 4708, 4711], "|(": 4706, ")cos": [4706, 4707], ")sin": [4706, 4707], "-a": [4707, 5117], "+ j": 4707, "4cos": 4708, "~ud": 4708, "dcnot": 4708, "!=": [4708, 5341, 5355], "-supercontrolled": [4708, 4709], "traces": 4711, "utarget": 4711, "embodiments": 4712, "backup": 4712, "embody": 4712, "defers": 4712, "_embodiment": 4712, "-synthesis": 4713, "{ave": [4714, 4720], "{pro": [4714, 4726], "{out": [4714, 4720, 4726], "concurrence": 4715, "bipartite": [4715, 4718, 4723], "[|": [4715, 4915], "|]": 4715, "sergey": 4716, "shaohan": 4716, "hu": 4716, "dmitri": 4716, "ruslan": 4716, "shaydulin": 4716, "|_": 4717, "|_\\": 4717, "formation": 4718, "entropy": [4719, 4739], "von": 4719, "-neumann": 4719, "infidelity": 4720, "}q": 4722, "res": 4722, "(res": 4722, ", res": 4722, "mutual": 4723, "+ s": 4723, "- s": 4723, "=tr": 4723, "ab}": 4723, "tracing": [4724, 5335], "traced": 4724, "]}{": 4726, ", s": 4726, "{purity": 4727, ".generator": [4728, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738], "randomstate": 4729, "'hilbert": 4730, "bures": 4730, "traceless": 4731, "ensemble": 4731, "pvec": 4739, "(pvec": 4739, "simplifies": 4740, "lazytwoqubitcxdecomposer": 4741, "quasidistibution": [4744, 4749, 4771], "[o": [4747, 4769], ", o": [4747, 4769], "`o": [4747, 4769], "{diag": [4747, 4769], "}`": [4747, 4769], "-values": [4747, 4769], "stddev": [4750, 4772, 4787], "_outcomes": 4751, "_creg": [4751, 5355], "_regex": [4751, 4915], "^[": 4751, "fromkeys": [4754, 4777, 4791, 4906, 5298, 5310, 5322], "frequent": 4760, "popitem": [4762, 4783, 4798, 4911, 5303, 5315, 5327], "lifo": [4762, 4783, 4798, 4911, 5303, 5315, 5327], "setdefault": [4763, 4784, 4799, 4912, 5304, 5316, 5328], "*f": [4765, 4785, 4800, 4913, 5305, 5317, 5329], "/iterable": [4765, 4785, 4800, 4913, 5305, 5317, 5329], "uncorrelated": 4767, "1a": [4779, 4793, 5366], "resulterror": 4810, "_exceeded": 4810, "-indices": [4811, 4812], "observations": 4811, "tune": 4813, "(memory": [4813, 5364], ".paulievolutiongate": [4818, 4820, 4822, 4824, 4826], "'chain": [4819, 4823, 4825], "exponentials": [4819, 4823], "}e": [4819, 4825, 5350], "(xx": [4819, 4825, 5353], "berry": [4819, 4825], "ahokas": [4819, 4825], "cleve": [4819, 4825], "sanders": [4819, 4825], "hatano": [4819, 4825], "orders": [4819, 4825], ":math": [4819, 4825], "arrange": [4819, 4823, 4825], "neighbor": [4819, 4823, 4825, 4856], "connections": [4819, 4823, 4825], "fountain": [4819, 4823, 4825], "decomopsed": [4819, 4823, 4825], "recursions": 4825, "quiet": 4829, "functionally": 4830, "spawning": 4830, "interrupts": 4830, "keyboard": 4830, "events": 4830, ".start": 4830, ".finish": 4830, "developer": [4833, 4943, 5117], "unimplemented": [4833, 4943], "_controllers": [4834, 4861, 4868], "'condition": [4834, 4861, 4868], ".runningpassmanager": [4834, 4861, 4868, 5355], ".conditionalcontroller": [4834, 4861, 4868], ".dowhilecontroller": [4834, 4861, 4868], "*partial": [4836, 4863, 4870], "{name": [4836, 4863, 4870], ":partial": [4836, 4863, 4870], "-formed": [4836, 4863, 4870], "fetches": [4837, 4864, 4871], "\u300eoptions": [4837, 4864, 4871], "couplings": 4839, "contiguously": 4839, "isolated": 4839, "_symmetric": 4839, "dst": 4840, "couplingerror": [4841, 4843, 4857, 4858], "_shortest": 4842, "-generate": 4842, "undirected": [4843, 4858, 5217], "_rows": 4846, "_columns": 4846, "hexagon": 4847, "journals": [4847, 4848], ".aps": [4847, 4848], "/prx": [4847, 4848], "/abstract": [4847, 4848], "physrevx": [4847, 4848], "5d": 4847, "cols": 4849, "neighbors": [4851, 4856], "uni": 4855, "-directional": 4855, "directionality": [4856, 5202, 5226], "matters": 4856, "shortest": 4858, "-while": 4861, "dowhilecontroller": [4862, 4863, 4864, 4865], "fencedobject": [4866, 4867], "setitem": 4867, "\"qiskit": 4878, "-ways": 4879, "bijective": [4879, 4884], ")bit": [4880, 4881], "- q": 4882, "> q": 4882, "layouterror": [4882, 4885, 4886, 4893], "populates": [4884, 4886], "*qregs": [4885, 4886], "quantumregisters": [4885, 4886], "*regs": 4887, "]\n:": 4889, "/virtual": 4891, "_iteration": [4894, 4895, 4899, 4916, 4920], "runningpassmanager": [4895, 4899, 4916, 4920], "_flow": [4895, 4899, 4916, 4920, 5361], "nxpd": [4896, 4917, 5283], "timingconstraints": [4901, 4937, 5230], "gererates": 4902, "programmtic": 4915, "compuling": 4915, "condtion": 4915, "'init": 4915, "/undefined": 4915, "_stages": 4915, "_stage": 4915, "\\+": 4915, "\\-": 4915, "\\*": 4915, "\\/": 4915, "%|": 4915, "<|": 4915, ">|": 4915, "@|": 4915, "!|": 4915, "~|": 4915, "^|": 4915, "&|": 4915, ":|": 4915, "aquire": 4922, "subclassing": 4922, "mixins": 4922, "=.": 4922, "submapping": 4922, "views": 4922, "invalidated": 4922, "removals": 4922, "paramerterized": 4923, "noisless": 4923, "/ideal": 4923, "{none": 4923, "\u300crx3": 4923, "\u300crx6": 4923, "\u300drx": 4923, "-two": 4924, "indexerror": 4924, "-global": [4927, 4973], "signifcant": 4927, "(assuming": 4928, "worse": 4928, "\"theta": 4930, "\"phi": 4930, ", parameters": 4930, "=parameters": 4930, "suporrted": 4930, ", rxgate": 4930, "{gate": [4938, 5226], "\u300erx": 4938, "4e": [4938, 5348, 5349, 5352], "pulled": 4938, "nstruction": 4939, "baseschedulertransform": [4946, 4952], "buffered": [4946, 4952, 5181], "[t": [4946, 4952, 5181], "regarded": [4946, 4952, 5181], "-supported": [4948, 4951, 4954, 4957], "basescheduler": [4949, 4955], "analog": [4958, 5220, 5359], "digitally": [4958, 5220], "voltage": [4958, 5220], "digital": [4958, 5220], "dac": [4958, 5220], "tens": 4958, "-sample": 4958, "triggering": 4958, "violate": [4958, 5222], "misalignment": [4958, 5021, 5023], "violating": [4958, 5021], "meaningless": 4958, "annotated": [4960, 5198, 5222], "/select": 4961, "_physical": 4961, "-layer": 4964, "gracefully": 4964, "sublist": 4964, "fidelities": [4964, 5202, 5233], "spams": 4964, "'balanced": 4964, "_inbetween": 4964, "infeasible": 4964, "assertionerror": 4966, "possibilities": [4970, 5342], "pretend": [4970, 5117, 5178, 5190], "translates": 4973, "incomplete": [4973, 5333, 5334], "chooses": 4976, "_reason": [4976, 5214, 5217], "nonexistent": 4976, "prng": [4976, 5214, 5217], ".recursivebacktrackingsolver": 4976, ".recursivebacktracking": 4976, ".gatedirection": 4982, "rearranged": [4984, 5095], "flipping": [4984, 5095], "1qblocks": 4996, "acted": 5003, "consecutively": 5003, "propert": 5003, "[g": 5003, "g4": 5003, "g5": 5003, "disjont": 5003, "dsu": [5003, 5004, 5007], "myself": 5004, "examining": 5006, "unioning": 5007, "liking": 5007, "commutativity": [5008, 5233, 5234], "cancelling": 5011, "/rotations": 5011, "utilizes": 5011, "_strategy": [5014, 5017], "routes": 5014, "encapsulated": 5014, "2qblock": [5014, 5017], "suit": 5014, ".routing": 5014, ".commuting": 5014, "_routing": 5014, "izzi": 5014, "ziiz": 5014, "zizi": 5014, "_strat": 5014, "_cmap": 5014, "(couplinglist": [5014, 5355], "_intlist": 5014, "_pre": 5014, "(swap": [5014, 5178, 5355], "(initial": 5014, "enlarge": 5014, "resynthesized": 5018, "collected": 5018, "_consolidate": 5018, "consolidation": 5018, "rescheduler": [5021, 5023], "conform": 5021, "alignments": 5021, "erroneous": 5021, "untracked": 5021, "originating": 5021, "rescheduling": [5023, 5102], "scan": 5023, "violates": 5023, "pushs": 5023, "rescheduled": 5023, "detect": 5024, "'delay": 5024, "countops": [5028, 5029, 5355], "nearby": 5033, "/crosstalk": 5033, "*fidelities": 5033, "_tomography": 5033, "lifetimes": 5038, "currenty": 5044, "triplet": [5047, 5048], "powerset": 5055, "indicator": 5059, "singleq": 5060, "dummy": [5062, 5086], "dagfixedpoint": [5063, 5064, 5355], "daglongestpath": [5066, 5067, 5355], "associates": [5071, 5123, 5184, 5199], "pick": [5073, 5123], "scans": [5077, 5143], "absorbed": [5077, 5140, 5143], "_location": [5077, 5143], "(uhrig": [5077, 5143], "(spacing": [5077, 5143], "=spacing": [5077, 5143], "spacings": [5077, 5143], "/2": [5077, 5143], "/reset": [5077, 5143], "susceptile": [5077, 5143], "interrupted": [5079, 5137], "rewrites": [5080, 5082], "-echoed": 5080, "rzxgates": 5080, "bijectivity": 5091, "unmodified": 5091, "_qregs": 5092, "asymmetric": 5093, "\u2514\u252c": [5093, 5352, 5354, 5362], "workings": 5099, "investigates": 5102, "requres": 5102, "-scheduling": 5102, "instructiondurationcheck": [5103, 5104], "_cancel": 5105, "initalization": 5105, "linearfunctions": [5113, 5116], "promotes": 5114, "topology": [5117, 5178], "sven": 5117, "jandura": 5117, "challenge": 5117, "relocate": 5117, "searches": 5117, "narrowed": 5117, "/beam": 5117, "calc": 5117, "^search": 5117, "prospective": 5117, "maximizes": 5117, "blog": 5117, "/improving": 5117, "-compiler": 5117, "7a": 5117, "reapplied": 5120, "mergeadjacentbarriers": [5121, 5122, 5355], "prakash": 5123, "murali": 5123, "jonathan": 5123, "baker": 5123, "ali": 5123, "javadi": 5123, "-abhari": 5123, "frederic": 5123, "chong": 5123, "margaret": 5123, "martonosi": 5123, "-edge": 5123, "decreasing": 5123, "occurrence": 5123, "unmapped": 5123, "participate": 5123, "_tensor": 5126, "_factors": 5126, "numtensorfactors": [5127, 5128, 5355], ",\u300f": 5129, "\u300ep": 5129, "\u300f}": 5129, "triple": 5130, "(xi": 5133, "mentioned": 5137, "commutations": 5137, "exhaustively": 5137, "-depth": 5137, "evident": 5137, "_completion": 5137, "retries": 5137, "obligated": 5137, "-call": 5137, "_very": 5140, "_end": 5140, "'middle": 5143, "\u300dmiddle": 5143, "\u300dedges": 5143, "-multiple": 5143, "calibrationbuilder": [5146, 5151], "rotary": 5151, "tones": 5151, "disappears": 5151, "echos": [5152, 5158], "_mult": [5154, 5160], "shortened": [5154, 5160], "lengthened": [5154, 5160], "stretched": [5154, 5160], "seperately": 5169, "iterates": [5175, 5178], "exploits": 5175, "reversibility": 5175, "gushu": [5175, 5178], "yufei": [5175, 5178], "ding": [5175, 5178], "yuan": [5175, 5178], "xie": [5175, 5178], "-backward": 5175, "exhausted": 5178, "germane": 5178, "neighborhood": 5178, "_candidate": 5178, "scored": 5178, "decay": 5178, "tie": 5178, "-break": 5178, "explored": [5178, 5193], "goodness": 5178, "viable": 5178, "\u300ebasic": 5178, "\u300elookahead": 5178, "costs": 5178, "|e": 5178, "|{": [5178, 5350], "\u300edecay": 5178, "penalizes": 5178, "(decay": 5178, "iolatency": 5181, "transilation": 5181, "occupation": 5181, "_backward": 5193, "[length": 5193, "survivor": 5193, "scenario": 5193, "cutting": 5193, "advice": 5193, "serious": 5193, "remind": 5193, "losing": 5193, "guesses": 5193, "templatesubstitution": 5193, "\u300edt": 5196, "timeunitanalysis": [5196, 5198], "unifiable": 5198, "-robin": 5199, "closeness": 5202, "/none": 5202, "-optimized": 5202, "unidirectional": 5202, "transpileerror": 5202, "_optimzie": 5202, "expands": 5205, "reprsenting": 5205, "decomposable": 5207, "-opaque": 5211, "vf2layout": 5214, "2layoutstopreason": 5214, "\"solution": [5214, 5217], "\"nonexistent": [5214, 5217], "visits": [5214, 5217], "vf2postlayout": 5217, "2postlayoutstopreason": 5217, "weak": 5217, "link": [5217, 5333, 5334], "expects": 5217, "imposed": 5220, "rx\"": 5226, "ry\"": 5226, "'sx": 5226, "rz'": 5226, "(none": 5226, "toggle": 5226, "predates": [5226, 5237], ".substitute": [5227, 5238, 5355], "_plugins": 5228, "couplig": 5230, "'trivial": 5230, "'dense": 5230, "'noise": 5230, "repsenting": 5230, "'lookahead": 5230, "'stochastic": 5230, "erroring": 5230, "-given": [5231, 5232, 5233, 5234], "> i": 5232, "densely": [5232, 5233], "conducted": [5233, 5234], "exhibits": 5233, "suffer": 5235, "approximatecircuit": [5236, 5240, 5244], "approximatingobjective": [5236, 5242, 5243, 5246], "\"aqc": 5237, "\"spin": 5237, "\"cart": 5237, "\"cyclic": 5237, "\"line": 5237, "\"star": 5237, "thetas": [5239, 5240, 5244, 5245], "notimplementedexception": 5239, "(thetas": 5240, "preferable": [5241, 5335], "_thetas": [5241, 5246, 5247], "_cnots": [5246, 5247], "cnotunitobjective": 5247, "_validation": 5250, "cals": [5250, 5252, 5254, 5339], "_refresh": [5250, 5339], "_period": [5250, 5339], "_retries": 5250, "'couplingmap": 5250, "'layout": 5250, "'passmanager": [5250, 5257], ".unbound": 5250, ".bound": 5250, "'noisemodel": 5250, "bypass": 5250, "\u300epassmanager": 5250, "_summary": 5250, "qjob": 5250, "assembling": 5253, "configs": 5257, "\u300equantumcircuit": 5257, ".qiskitalgorithmglobals": 5258, "tiny": [5259, 5262], "/floatingpoint": [5259, 5262], "stackevel": 5261, "detach": 5262, "(unit": 5262, "}hz": 5262, "khz": 5262, "mantissa": 5262, "\u300efull": 5263, "entangles": 5263, "/target": 5263, "hyperthreading": 5267, "circlabel": [5268, 5272], "obey": 5268, "rebuild": [5269, 5273], "_cal": [5269, 5273], "_sublist": 5271, "substate": 5272, "nqubits": 5272, "signatures": 5275, "typea": 5275, "typeb": 5275, "typec": 5275, "@name": 5275, "'b": [5275, 5341], "('b": 5275, "summarize": 5276, "metrics": 5276, "statistic": 5276, "-summarized": 5276, "_double": 5277, "_entanglement": 5277, "/converted": 5277, "mutates": 5278, "decorators": 5278, "0th": 5280, "height": [5280, 5295, 5331, 5333, 5334], "invalidfileerror": 5282, "title": [5284, 5285, 5288, 5290, 5291, 5292, 5293, 5331, 5349, 5364, 5365, 5367], "projections": [5284, 5285], ":false": 5284, "<y": 5285, "<z": 5285, "'virtual": 5286, "mast": [5286, 5288], "planar": [5286, 5287, 5288, 5289], ".monitor": [5286, 5349], "_directed": [5287, 5289], "'w": [5287, 5289, 5331], "bonds": 5287, "wxh": [5287, 5289], "_title": [5288, 5331], "'asc": 5290, "dataset": 5290, "datasets": 5290, "\u300easc": 5290, "\u300edesc": 5290, "\u300ehamming": 5290, "\u300evalue": 5290, ", color": 5290, "midnightblue": [5290, 5291, 5293], "cityscape": 5291, "transparency": [5291, 5331, 5333, 5334], "bargraph": 5293, "programmers": 5295, "stepwise": [5295, 5307, 5319], "chart": [5295, 5307, 5319, 5331], "_image": [5331, 5333, 5334], ".general": [5331, 5333, 5334], ".fig": [5331, 5333, 5334], "_chart": 5331, "heights": 5331, ".vertical": 5331, "_resolution": 5331, "-scaling": 5331, ".color": [5331, 5333, 5334], ".waveforms": 5331, "fff": 5331, "['#": 5331, "ffb": 5331, "dc2": 5331, ".baseline": 5331, ".background": [5331, 5333, 5334], "canvas": [5331, 5333, 5334], "#f": 5331, "3f": [5331, 5340], ".annotate": 5331, "texts": 5331, ".frame": [5331, 5333, 5334], "_change": [5331, 5333, 5334], ".snapshot": 5331, ".opaque": 5331, "\u300e#": [5331, 5332], "fffacd": 5331, ".axis": [5331, 5333, 5334], ".alpha": [5331, 5333, 5334], ".fill": 5331, ".layer": [5331, 5333, 5334], "baselines": 5331, ".margin": [5331, 5333, 5334], "boundary": [5331, 5333, 5334], ".bottom": [5331, 5333, 5334], "_percent": [5331, 5333, 5334], ".right": [5331, 5333, 5334], ".between": 5331, "baseline": 5331, ".chart": 5331, "_break": 5331, "fringe": [5331, 5333, 5334], "paints": 5331, "conforms": [5331, 5333, 5334], "\u2013\u300f": 5331, "_scaling": 5331, ".pos": 5331, "_spacing": 5331, ".neg": 5331, ".box": [5331, 5333, 5334], ".length": 5331, "_modulation": 5331, "_acquire": 5331, ".auto": 5331, ".unicode": [5331, 5333, 5334], "\u300f\u21ba": 5331, "\u300f\u21af": 5331, "\u2019\u03b8": 5331, ".freq": 5331, "\u300fcirclearrowleft": 5331, "heta": 5331, ", layout": 5331, "=fakealmaden": 5331, "=iqxsimple": [5331, 5333, 5334], "=iqxdebugging": [5331, 5333, 5334], "codebase": [5331, 5333, 5334], "textcolor": [5332, 5354], "subtextcolor": [5332, 5354], "subtext": 5332, "linecolor": [5332, 5354], "creglinecolor": [5332, 5354], "gatefacecolor": [5332, 5354], "#bb": [5332, 5333, 5334], "8bff": [5332, 5333, 5334], "barrierfacecolor": [5332, 5354], "#bdbdbd": [5332, 5354], "edgecolor": 5332, "subfontsize": [5332, 5354], "showindex": [5332, 5354], "displayable": 5332, "dpi": [5332, 5354], "creglinestyle": [5332, 5354], "solid": 5332, "doublet": 5332, "linestyle": [5332, 5354], "'r": [5332, 5333, 5334, 5354], "bab": [5332, 5333, 5334], "bb8bff": [5332, 5333, 5334], "6fa": [5332, 5333, 5334], "4ff": [5332, 5333, 5334], "ccswap": 5332, "cdcx": 5332, "ccdcx": 5332, "ffffff": 5332, "_idle": [5333, 5334], "timelines": [5333, 5334], ".dpi": [5333, 5334], "inch": [5333, 5334], "lien": [5333, 5334], ".link": [5333, 5334], "horizontally": [5333, 5334], "_bucket": [5333, 5334], ".edge": [5333, 5334], "boxes": [5333, 5334], "smoothly": [5333, 5334], "faded": [5333, 5334], ".minimum": [5333, 5334, 5338], ".timeslot": [5333, 5334], "#dddddd": [5333, 5334], ".gates": [5333, 5334], "'{": [5333, 5334, 5340], "'|": [5333, 5334], "`circlearrowleft": [5333, 5334], "\u300fu": [5333, 5334], "_link": [5333, 5334], ".bits": [5333, 5334], ".barriers": [5333, 5334], "_links": [5333, 5334], "_arrange": [5333, 5334], "sorts": [5333, 5334], "saveas": 5335, "history": 5335, "video": 5335, "filesystem": 5335, "movie": 5335, ".mp4": 5335, "smoothness": 5335, "tkinter": 5335, "warmup": 5336, "/algorithms": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345], "_introduction": 5337, ".ipynb": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u3042\u305f\u3063": 5337, "\u5f79\u7acb": [5337, 5342, 5359, 5369], "\u9ad8\u6c34": 5337, "\u6982\u89b3": 5337, "\u3084\u305d\u306e": [5337, 5342, 5362], "\u306b\u3064\u3044\u3066": [5337, 5339, 5340, 5341, 5345, 5347, 5348, 5350, 5354, 5355, 5356, 5357, 5361, 5362, 5364, 5365, 5367, 5372], "\u5206\u3051": 5337, "\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": [5337, 5338, 5339, 5340, 5361, 5362], "\u57fa\u5e95": [5337, 5338, 5339, 5347, 5348, 5349, 5356, 5358, 5359, 5361, 5365, 5366, 5367], "\u30a8\u30cd\u30eb\u30ae\u30fc": [5337, 5338, 5339, 5340], "\u30a4\u30b8\u30f3\u30b0": [5337, 5341], "\u30fb\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": [5337, 5341], "\u3044\u3063": 5337, "\u6c42\u3081\u308b": [5337, 5339, 5340, 5353], "\u304c\u3042\u308a": [5337, 5353, 5370], "\u65b9\u7a0b": 5337, "\u5f0f\u554f": 5337, "estimators": 5337, "\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3": 5337, "\u30d6\u30ed\u30c3\u30af": [5337, 5350, 5357], "\u30bf\u30a4\u30d7": [5337, 5349, 5350, 5354, 5357, 5362, 5366], "\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9": [5337, 5340, 5343, 5352, 5355, 5356, 5357, 5361, 5366], "\u30bd\u30eb\u30d0\u30fc": [5337, 5362], "\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc": [5337, 5338, 5340, 5362], "\u898b\u3066": [5337, 5339, 5345, 5355, 5361, 5367, 5368, 5372], "\u5225\u3005": [5337, 5357], "\u6e21\u3055": [5337, 5340, 5345, 5372], "\u8a66\u3059": 5337, "\u6240\u671b": [5337, 5342], "\u3068\u306a\u3063": [5337, 5342, 5362], "\u5f8c\u307b\u3069": 5337, "\u3057\u304b\u3057": [5337, 5342, 5350, 5352, 5353, 5357, 5368, 5369, 5370], "\u306f\u307e\u3060": [5337, 5361], "\u9032\u307f": [5337, 5348], "\u307e\u3057\u3087": [5337, 5341, 5345, 5350, 5356, 5357, 5359, 5365, 5367, 5372], "\u5358\u4f53": 5337, "\u304b\u3068": 5337, "\u30b7\u30e7\u30c3\u30c8": [5337, 5339, 5340, 5347, 5348, 5369], "\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": [5337, 5339], "\u5468\u308a": 5337, "\u306b\u95a2\u3059\u308b": [5337, 5338, 5339, 5342, 5348, 5349, 5356, 5358, 5361], "[4": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5347, 5348, 5350, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "\u3092\u901a\u3057": 5337, "\u547c\u3073\u51fa\u305b\u308b": 5337, "\u5f8c\u8005": [5337, 5339], "\u30ab\u30c6\u30b4\u30ea": 5337, "\u3042\u3089\u3086\u308b": [5337, 5341, 5359], "\u4f5c\u7528": [5337, 5350, 5353, 5355, 5361, 5362, 5366, 5370], "\u5b66\u3093": 5337, "\u307e\u3068\u3081": 5337, "\u691c\u51fa": [5337, 5350, 5355, 5357], "\u30aa\u30da\u30ec\u30fc\u30bf\u30fc": [5337, 5342], "\u305d\u306e\u3088\u3046": [5337, 5361], "\u5143\u3005nature": 5337, "\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb": 5337, "\u9593\u8ddd": [5337, 5340], "\u5206\u5b50": [5337, 5339, 5340], "\u5408\u8a08": [5337, 5345, 5350, 5357, 5361, 5372], "\u660e\u8a00": 5337, "[5": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5347, 5348, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc": [5337, 5361], "\u3057\u307e\u3057\u3087": [5337, 5345, 5356, 5357, 5358, 5361, 5367, 5372], "\u30bb\u30c3\u30bf\u30fc": 5337, "\u30ce\u30fc\u30c8\u30d6\u30c3\u30af": [5337, 5338, 5339, 5341, 5343, 5344, 5354, 5355, 5364, 5365, 5366, 5367, 5368, 5369], "\u5168\u304f": [5337, 5354], "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc": [5337, 5356, 5358], "\u30b7\u30fc\u30c9": 5337, "\u6bce\u56de": 5337, "\u518d\u73fe": 5337, "\u8fd4\u308a\u5024": [5337, 5349], "[6": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5347, 5348, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "(aer": [5337, 5340, 5343, 5362], "=seed": [5337, 5339, 5340], "=slsqp": [5337, 5340], "=qi": [5337, 5339, 5340, 5362], "&#": [5337, 5339, 5340, 5342, 5344, 5347, 5348, 5349, 5350, 5353, 5355, 5356, 5357, 5359, 5361, 5364, 5366, 5367, 5368, 5369, 5370, 5372], ";:": [5337, 5340, 5347, 5348, 5349, 5350, 5353, 5355, 5361, 5364, 5366, 5368, 5370], "\u8a55\u4fa1": [5337, 5338, 5340, 5361, 5362], "\u8981\u3057": 5337, "\u304c\u308f\u304b\u308a": [5337, 5340, 5341, 5342, 5343, 5349, 5357], "\u898b\u308c": 5337, "\u3070\u308f\u304b\u308a": 5337, "\u6700\u5f8c": [5337, 5338, 5339, 5345, 5349, 5350, 5353, 5355, 5356, 5357, 5359, 5361, 5367, 5372], "\u3059\u308c": [5337, 5343, 5361], "[7": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5347, 5348, 5349, 5352, 5353, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5366, 5367, 5368, 5369, 5372], "\u5148\u307b\u3069": 5337, "\u7d42\u4e86": [5337, 5340, 5347, 5348, 5357, 5358], "\u5e83\u3044": [5337, 5354], "\u7bc4\u56f2": 5337, "[8": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5347, 5348, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5366, 5367, 5369, 5372], "softwareversionqiskitnoneterra": [5337, 5338, 5340, 5341, 5343, 5344, 5354, 5356, 5357, 5362, 5368], "dev": [5337, 5338, 5340, 5343, 5344, 5348, 5349, 5352, 5358, 5359, 5361], "0ignis": [5337, 5338, 5340, 5343, 5344, 5356, 5357, 5364, 5365, 5366, 5367, 5369, 5370], "aquanoneibm": [5337, 5338, 5340, 5343, 5344], "providernonesystem": [5337, 5338, 5340, 5341, 5343, 5344, 5356, 5357, 5362], "clang": [5337, 5338, 5340, 5341, 5343, 5344, 5345, 5348, 5349, 5352, 5354, 5356, 5357, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "osdarwincpus": [5337, 5338, 5340, 5341, 5343, 5344, 5345, 5348, 5349, 5352, 5354, 5356, 5357, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "0thu": [5337, 5338, 5340, 5343, 5344], "edt": [5337, 5338, 5339, 5340, 5341, 5343, 5344, 5345, 5348, 5349, 5352, 5353, 5354, 5355, 5356, 5357, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5372], "copyright": [5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5347, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5361, 5362, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5372], "_convergence": 5338, "\u306b\u304a\u3051\u308b": [5338, 5348, 5350, 5354], "\u9032\u6357": 5338, "\u76e3\u8996": 5338, "\u30b3\u30fc\u30eb\u30d0\u30c3\u30af": 5338, "\u30fb\u30e1\u30bd\u30c3\u30c9": [5338, 5357, 5364, 5370], "\u5404\u53cd": 5338, "\u69d8\u5b50": 5338, "\u30b0\u30e9\u30d5": [5338, 5339, 5341, 5349, 5355], "\u30d7\u30ed\u30c3\u30c8": [5338, 5340, 5347, 5348], "pylab": [5338, 5339, 5343], "\u5206\u5b50\u7528": 5338, "\u6bd4\u8f03": [5338, 5339, 5370], "_cnts": 5338, ".empty": 5338, "(optimizers": 5338, ", dtype": 5338, "=object": 5338, "roptimizer": 5338, "_intermediate": [5338, 5339], "(eval": [5338, 5339], "(mean": [5338, 5339], "=store": [5338, 5339], "=aer": [5338, 5341, 5342, 5361], ".asarray": [5338, 5341], "roptimization": 5338, "\u6709\u9650": [5338, 5340], "\u5dee\u5206": [5338, 5340], "\u7279\u5fb4": [5338, 5359, 5366, 5370], "\u4f3c\u305f\u5024": 5338, "\u3082\u3061": 5338, "\u4eca\u56de": [5338, 5339, 5345, 5372], "\u3002)": [5338, 5361], ".rcparams": [5338, 5339], ".figsize": [5338, 5339], "(converge": 5338, "=type": 5338, ".title": [5338, 5339], ".legend": [5338, 5352], "(loc": 5338, "\u89e3\u304f": [5338, 5362], "\u3044\u304f": [5338, 5347, 5348], "npme": [5338, 5339, 5341], ".eigenvalue": [5338, 5339], "'reference": [5338, 5339], "5f": [5338, 5339], "(ref": 5338, ", label": 5338, ".yscale": 5338, "\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8": 5338, "\u30ed\u30ae\u30f3\u30b0": 5338, "\u3053\u3053\u3067": [5338, 5350, 5359, 5361, 5367], "[9": [5338, 5339, 5340, 5341, 5342, 5347, 5348, 5349, 5352, 5353, 5354, 5355, 5356, 5357, 5359, 5361, 5362, 5364, 5366, 5367, 5369, 5372], "(level": [5338, 5355], "=logging": 5338, ".info": 5338, ":qiskit": [5338, 5355], ":energy": 5338, "_simulation": [5339, 5365], "\u30fb\u30e2\u30c7\u30eb": [5339, 5365, 5366, 5367], "\u4f34\u3046": 5339, "\u6319\u52d5": 5339, "\u8abf\u3079\u308b": [5339, 5343, 5352, 5359, 5365], "\u7279\u6027": [5339, 5359], "\u7d39\u4ecb": [5339, 5357, 5359, 5361, 5366], "\u30ab\u30b9\u30bf\u30e0": [5339, 5357, 5367], "\u5b9f\u6f14": [5339, 5341], "\u8efd\u6e1b": 5339, "\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3": 5339, "\u306e\u3044\u304b": 5339, "\u30d1\u30a6\u30ea": [5339, 5349, 5350], "\u9078\u3076": [5339, 5370], "\u3059\u3050": [5339, 5358], "'number": 5339, "\u89e3\u3051\u308b": 5339, "\u30e9\u30f3\u30bf\u30a4\u30e0": 5339, "\u3057\u3084\u3059\u3044": 5339, "\u8a66\u3057": [5339, 5341, 5355, 5357, 5369], "\u5f8c\u534a": [5339, 5342], "=iterations": 5339, "=spsa": 5339, "'vqe": 5339, "'delta": 5339, "\u53ce\u675f": 5339, "\u5f97\u3089\u308c": [5339, 5343], ";)": [5339, 5355, 5357, 5359, 5361, 5364, 5372], "\u53d6\u308a\u4e0a\u3052": [5339, 5343, 5367], "\u5408\u3046": 5339, "\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0": 5339, "\u30de\u30c3\u30d7": [5339, 5347, 5355, 5357, 5359], "\u5168\u7d50\u5408": 5339, "\u304a\u304f": [5339, 5352], "\u3002\u6ce8": 5339, "\u30a8\u30f3\u30bf\u30f3\u30b0\u30eb\u30e1\u30f3\u30c8": 5339, "\u304b\u304b\u308a": [5339, 5369], "\u64ec\u4f3c": [5339, 5365], "\u5177\u4f53": [5339, 5365], "(device": [5339, 5364, 5365], "[&": [5339, 5355, 5356, 5364, 5366, 5367], "qerror": [5339, 5367], "_loc": 5339, "roerror": 5339, "_sq": 5339, "_var": 5339, ";]": [5339, 5355, 5356, 5359, 5361, 5364, 5366, 5367], "\u884c\u5217": [5339, 5340, 5345, 5347, 5348, 5349, 5350, 5353, 5362, 5366, 5368, 5372], "\u5206\u3054": 5339, "=completemeasfitter": 5339, "\u307e\u3068\u3081\u3066": 5339, "\u3082\u306e\u3067\u3059": 5339, "\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0": [5339, 5340, 5342, 5357, 5361, 5362, 5364, 5369], "\u8d77\u56e0": 5339, "\u30b7\u30e7\u30c3\u30c8\u30ce\u30a4\u30ba": [5339, 5340], "\u3068\u3088\u308a": [5339, 5355], "\u306e\u307e\u307e\u3067": 5339, "\u898b\u3089\u308c": [5339, 5355], "\u53d6\u308a\u51fa\u3057": [5339, 5340], "\u30e2\u30c7\u30eb": [5339, 5365], "\u88c5\u7f6e": [5339, 5357], "1qiskit": [5339, 5350, 5353], "1system": [5339, 5345, 5347, 5368, 5372], "4python": [5339, 5350], "buildmain": [5339, 5350, 5353], "mar": [5339, 5350, 5354, 5368], "tue": [5339, 5355, 5358, 5370], "_advanced": [5340, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359], "\u306e\u3088\u308a": [5340, 5342, 5361], "\u89e3\u8aac": 5340, "\u521d\u671f\u5024": 5340, "\u521d\u671f\u70b9": 5340, "\u9078\u3073": [5340, 5362], "\u597d\u307e\u3057\u3044": 5340, "\u9078\u3070": 5340, "\u5883\u754c": 5340, "\u30e9\u30f3\u30c0\u30e0": [5340, 5341, 5342, 5350, 5369], "\u512a\u5148": [5340, 5361], "\u9577\u3055": [5340, 5349, 5357], "\u5408\u7406": 5340, "\u51fa\u767a": [5340, 5342], "\u63a8\u6e2c": 5340, "\u904e\u53bb": 5340, "\u5b9f\u9a13": [5340, 5344, 5347, 5348, 5356], "\u6700\u521d": [5340, 5342, 5345, 5347, 5348, 5349, 5350, 5353, 5354, 5355, 5357, 5358, 5359, 5362, 5367, 5369, 5370, 5372], "_pt": 5340, "'optimizer": 5340, "\u7acb\u3064": [5340, 5341], "\u4f3c\u305f": 5340, "\u5909\u3048": [5340, 5364], "\u89e3\u96e2": 5340, "\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb": 5340, "\u826f\u3044\u4f8b": 5340, "\u8ddd\u96e2": [5340, 5368], "\u5c0f\u3055\u3044": [5340, 5369, 5370], "\u4e88\u6e2c": [5340, 5350, 5368], "\u4e00\u3064": [5340, 5342, 5343, 5344, 5350, 5354, 5361, 5372], "\u5916\u633f": 5340, "\u884c\u3063": [5340, 5344, 5361, 5366], "\u4f7f\u3044": [5340, 5347, 5348, 5355, 5358, 5370], "\u307b\u3068\u3093\u3069": [5340, 5355, 5356, 5359], "\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8": [5340, 5359, 5361], "\u5024\u8a08": 5340, "\u30d9\u30af\u30c8\u30eb": [5340, 5342, 5347, 5366, 5370], "\u4e57\u3089": 5340, "\u4e57\u305b": 5340, "\u8fd4\u3055": [5340, 5343, 5349, 5354, 5359, 5361], "\u901f\u304f": 5340, "\u548c\u3068\u3057\u3066": 5340, "\u518d\u5ea6": [5340, 5361], "\u306e\u307e\u307e": 5340, "\u7a81\u7136": 5340, "\u3057\u307e\u3044": 5340, "\u52a3\u308a": 5340, "\u6c7a\u3057": 5340, "=aerpauliexpectation": 5340, "\u7d44\u3068\u3057\u3066": 5340, "\u6e1b\u3089": [5340, 5361, 5369], "\u4f55\u3089": 5340, "\u30aa\u30d5": 5340, "\u3078\u3053\u306e": 5340, "=pauliexpectation": 5340, "(group": [5340, 5361], "\u30d9\u30fc\u30b9": [5340, 5365, 5366, 5367], "\u9593\u63a5": 5340, "\u793a\u3055": [5340, 5357, 5362], "\u305d\u3061\u3089": 5340, "\u5b9f\u30c7\u30d0\u30a4\u30b9": [5340, 5349], "(qasmsimulator": 5340, "_numpy": 5341, "(w": [5341, 5343], "(g": 5341, "=colors": 5341, "_attributes": 5341, "=labels": 5341, "\u7dcf\u5f53\u305f\u308a": 5341, "\u4e8c\u9032\u6570": 5341, "\u5272\u308a": 5341, "\u5f53\u3066": [5341, 5370], "\u7db2\u7f85": 5341, "\u9032\u6570": [5341, 5345, 5372], "\u9802\u70b9": 5341, "\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3": 5341, "\u306e\u3044\u305a\u308c": 5341, "\u6e80\u305f": [5341, 5342], ".where": 5341, "-force": 5341, "bitfield": 5341, "(digit": 5341, "digit": 5341, "cur": 5341, "_many": 5341, "_nonzero": 5341, "(cur": 5341, "= l": 5341, "sol": 5341, "'objective": 5341, "\u305b\u305a": [5341, 5355], "\u8ad6\u6587": [5341, 5369, 5370], "partitioning": 5341, "goals": 5341, "\\_": 5341, "zizj": 5341, "}+": [5341, 5345, 5372], "achieving": 5341, "=bool": 5341, "= j": 5341, "_most": 5341, ".items": 5341, ", key": 5341, "kv": 5341, "(binary": 5341, ".argmax": 5341, ".abs": 5341, "= k": 5341, "cut": 5341, ".eigenstate": 5341, "\u7dcf\u5f53": 5341, "4aer": [5341, 5347, 5362], "2ignis": [5341, 5345, 5347], "0aquanoneibm": [5341, 5356, 5357], "0tue": [5341, 5368], "lov": 5342, "\u6709\u540d": 5342, "\u975e\u69cb": 5342, "\u9020\u691c": 5342, "\u7d22\u554f": 5342, "\u9020\u5316": 5342, "\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9": 5342, "\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3": [5342, 5357], "\u4e00\u822c\u5316": [5342, 5366], "\u500b\u3005": [5342, 5354, 5357, 5365], "\u53cd\u5fa9": [5342, 5350], "\u30e1\u30bf": 5342, "\u30b0\u30ed\u30fc\u30d0\u30fc": 5342, "\u53c2\u8003": [5342, 5345, 5372], "\u6587\u732e": [5342, 5345, 5372], "annual": 5342, "symposium": 5342, "stoc": 5342, "gonciulea": 5342, "\u691c\u7d22": 5342, "\u30a2\u30c0\u30de\u30fc\u30eb": [5342, 5356, 5358], "\u53cd\u8ee2": [5342, 5359, 5365, 5366], "-|x": 5342, "neq": 5342, "\\ |": 5342, "\u3068\u306a\u308a": [5342, 5345, 5350, 5372], "\u4e00\u8a00": 5342, "\u8a00\u3048": 5342, "\u7d2f\u4e57": 5342, "\u5404\u5b9f": 5342, "\u884c\u5f8c": 5342, "\u898b\u3064\u304b\u3063": 5342, "\u3082\u3044\u304f\u3064\u304b": 5342, "\u3002\u3064\u307e\u308a": [5342, 5345, 5361, 5362, 5372], "\u4fc2\u6570": [5342, 5361, 5362], "\u4e57\u3058": 5342, "\u5f8c\u8ff0": [5342, 5361], "=good": 5342, ".grover": 5342, "\u6210\u529f": 5342, "\u5c5e\u6027": 5342, ", type": 5342, "!'": 5342, ".oracle": 5342, ", result": [5342, 5362], "lt": [5342, 5355], ";class": 5342, ".groverresult": 5342, ";&": 5342, "gt": [5342, 5347, 5348, 5352, 5355, 5359, 5369], "~a": 5342, "\u4ed8\u968f": 5342, "# `": [5342, 5362], "(`": 5342, "\u30d5\u30ea\u30c3\u30d7": 5342, "\u30d5\u30ea\u30c3\u30d7\u30aa\u30e9\u30af\u30eb": 5342, "\u30d3\u30c3\u30c8\u30d5\u30ea\u30c3\u30d7\u30aa\u30e9\u30af\u30eb": 5342, "\u631f\u3093": 5342, "\u6ce8\u8a18": [5342, 5347, 5348, 5350, 5354, 5357], "\u306e\u3053\u306e": 5342, "\u306b\u304a\u3044": [5342, 5350], "\u4e00\u69d8": 5342, "\u91cd\u306d\u5408\u308f": 5342, "\u521d\u671f\u5316": [5342, 5347, 5348, 5353, 5355, 5357, 5362], "\u4fbf\u5229": [5342, 5347, 5348, 5350, 5354, 5357, 5359], "\u62e1\u6563": 5342, ".arccos": 5342, "=state": [5342, 5362], "\u9ad8\u5ea6": [5342, 5354, 5364], "\u77e5\u3063": [5342, 5369], ".groveroperator": 5342, "\u3001 \\": 5342, "5\u3064": 5342, "\u306f\u308f\u304b\u3063": 5342, "\u306e\u3044\u305a\u308c\u304b": 5342, "\u3068\u306a\u308b": [5342, 5350, 5353], "\u30a4\u30f3\u30c7\u30c3\u30af\u30b9": [5342, 5347, 5348, 5353, 5354, 5357, 5361], "(bitstr": 5342, "bitstr": 5342, "\u5404\u56de": [5342, 5354], "\u6307\u6570": [5342, 5349, 5350, 5361, 5370], "\u500b\u6570": 5342, "\u3059\u3089": 5342, "\u3001[": 5342, "\u308f\u304b\u3063": [5342, 5357], "\u6982\u7b97": 5342, "\u5c11\u306a\u3044": [5342, 5358], "18": [5342, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5359, 5361, 5362, 5366, 5372], "\u3084\u3059": 5342, "\u5f8c\u51e6": [5342, 5347, 5348], "19": [5342, 5348, 5349, 5350, 5352, 5353, 5354, 5355, 5357, 5361, 5372], "_diamacs": 5342, "_cnf": 5342, ", post": 5342, "=to": 5342, "7python": 5342, "sep": [5342, 5347, 5355], "4memory": [5342, 5354, 5355, 5358, 5359, 5361, 5368, 5372], "sun": 5342, "jan": 5342, "mst": 5342, "_examples": 5343, "\u30aa\u30e9\u30af\u30eb": 5343, "\u5145\u8db3": 5343, "3sat": 5343, "\\neg": 5343, "vee": 5343, "\u8868\u8a18": [5343, 5345, 5372], "\u4f8b\u984c": 5343, "\u6587\u5b57\u5217": [5343, 5345, 5349, 5372], "tempfile": 5343, "fp": 5343, ".namedtemporaryfile": 5343, "(mode": 5343, "(file": 5343, "\u305d\u3057": [5343, 5345, 5347, 5348, 5349, 5361, 5372], "\u4e09\u3064": 5343, "\u3046\u3061": 5343, "'aer": 5343, "(plot": 5343, "\u624b\u6bb5": [5343, 5355], "~(y": 5343, "& (": 5343, "\u304c\u305d\u308c\u305e\u308c": 5343, "\u308f\u304b\u308a": [5343, 5359], "\u306f\u305a": [5343, 5345, 5372], "\u3068\u3066": 5343, "\u3057\u307e\u3059": [5343, 5345, 5350, 5356, 5357, 5372], "\u7d44\u307f\u5408\u308f": [5343, 5355, 5362, 5366], "factorizers": 5344, "\u3042\u3089\u304b\u3058\u3081": 5344, "\u77e5\u3089": [5344, 5350, 5361, 5367], "\u591a\u9805": 5344, ".factor": 5344, "\"the": 5344, ".factors": 5344, "\u4e8c\u9032": 5344, "4n": 5344, "\u3068\u3053\u308d": [5344, 5353, 5367], "\u3042\u305f\u3048": 5344, "\u30b5\u30a4\u30ba": [5344, 5349, 5354, 5370], "'computed": 5344, ".ceil": 5344, "'actual": 5344, "iqpe": [5345, 5372], "\u3084\u3063": [5345, 5372], "\u30ea\u30bb\u30c3\u30c8\u30b2\u30fc\u30c8": [5345, 5372], "\u524d\u56de": [5345, 5372], "lab": [5345, 5372], "\u304a\u3053": 5345, "\u30b2\u30fc\u30c8\u30af\u30e9\u30b9": [5345, 5372], "\u30ec\u30b8\u30b9\u30bf\u30fc": [5345, 5347, 5348, 5350, 5372], "\u5341\u9032\u6570": [5345, 5372], "\u975e\u8ca0": [5345, 5372], "_if\u30e1\u30bd\u30c3\u30c9": [5345, 5372], "\u6e21\u3059\u5024": [5345, 5372], "\u30a8\u30f3\u30b3\u30fc\u30c9": [5345, 5350, 5372], "bin": [5345, 5372], "\u30d0\u30a4\u30ca\u30ea\u30d5\u30a9\u30fc\u30de\u30c3\u30c8": [5345, 5372], "(bin": [5345, 5372], "\u56de\u9069": [5345, 5372], "\u77ed\u3044": [5345, 5357, 5372], "\u306f\u3046": [5345, 5372], "\u307e\u304f": [5345, 5372], "\u30b2\u30fc\u30c8\u30ce\u30a4\u30ba": [5345, 5372], "\u306b\u3061\u3083\u3093": [5345, 5372], "\u3001\u300c": [5345, 5357, 5372], "\u7528\u8a9e": [5345, 5361, 5372], "\\varphi": [5345, 5372], "varphi": [5345, 5372], "\u306e\u305f\u3081": [5345, 5372], "\u306a\u306e": [5345, 5372], "\u306b\u3061\u3087\u3046": [5345, 5372], "\u7406\u8ad6": [5345, 5353, 5355, 5366, 5372], "\u601d\u3044\u51fa\u3057": [5345, 5347, 5348, 5350, 5361, 5372], "\u7e70\u308a\u8fd4\u3057\u6570": [5345, 5372], "\u305f\u3063": [5345, 5372], "nq": [5345, 5372], "(nq": [5345, 5372], "\u3055\u3066": [5345, 5372], "\u6700\u4e0b\u4f4d": [5345, 5347, 5348, 5350, 5372], "\uff13\u3064": [5345, 5347, 5348, 5350, 5355, 5372], "\u7565\u3057": [5345, 5372], "{cp": [5345, 5372], "=m": [5345, 5372], "'\"": [5345, 5352, 5372], "\u9014\u4e2d": [5345, 5350], "\u30ea\u30b5\u30a4\u30af\u30eb": [5345, 5372], "\u5f8c\u3067": [5345, 5372], "\u305f\u3088\u3046": [5345, 5372], "\u5c55\u958b": [5345, 5356, 5362, 5372], "\u3082\u3061\u308d\u3093": [5345, 5370], "\u3002\u3059": [5345, 5362, 5364, 5372], "\u306a\u308f\u3061": [5345, 5362, 5364, 5372], "\u4e0b\u4ed8\u304d": [5345, 5372], "\u4e00\u56de": [5345, 5372], "\u3064\u3044": [5345, 5372], "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf": [5345, 5364, 5368, 5369, 5372], "_new": [5345, 5372], "(key": [5345, 5372], "(count": [5345, 5372], ".subplots": [5345, 5372], ".tight": [5345, 5372], "\u5de6\u5074": [5345, 5347, 5348, 5350, 5372], "x\u8ef8": [5345, 5372], "\u53f3\u5074": [5345, 5347, 5348, 5350, 5357, 5372], "\u4e88\u60f3\u901a\u308a": [5345, 5372], "\\%": [5345, 5372], "{controlled": [5345, 5372], "-}": [5345, 5372], "compactly": 5345, "\u306f\u305d\u306e": [5345, 5372], "\u3001\u3061\u3087\u3046": [5345, 5372], "\u3067\u307f": [5345, 5372], "\uff11\u3064": [5345, 5372], "\uff12\u3064": [5345, 5350, 5352, 5353, 5355, 5370, 5372], "\u77ed\u7e2e": [5345, 5372], "cct": [5345, 5372], "\u30de\u30eb\u30c1": [5345, 5372], "{mcp": [5345, 5372], ".mcp": [5345, 5372], "\u62bd\u51fa": [5345, 5372], "=c": [5345, 5372], "\uff08\u5024": 5345, "*pi": [5345, 5372], "0terra": [5345, 5355, 5364, 5365, 5366, 5367, 5369, 5370], "3aer": [5345, 5372], "0aqua": [5345, 5347, 5355, 5364, 5365, 5366, 5367, 5369, 5370], "1ibm": [5345, 5347], "aug": 5345, "8memory": [5345, 5370], "0wed": [5345, 5356, 5357], "_basics": 5347, "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0": [5347, 5348, 5359], "\u5358\u4f4d": [5347, 5348, 5349, 5350, 5354, 5357, 5359, 5361], "\uff08quantum": 5347, "\u30b9\u30c6\u30fc\u30b8": [5347, 5348], "\u53ce\u96c6": [5347, 5348, 5355, 5357], "\u9032\u3081": [5347, 5348, 5361], "\u898b\u3064\u304b\u308a": [5347, 5348], "\u3002\uff1b": 5347, "\u5404\u91cf\u5b50": [5347, 5348, 5359, 5366], "\u3002ghz": [5347, 5348], "&lt": [5347, 5348, 5352, 5355, 5359, 5367, 5369], ";qiskit": [5347, 5348, 5355, 5369], "7c": 5347, "\u4e00\u756a\u4e0a": [5347, 5348], "\u4e00\u756a\u4e0b": [5347, 5348], "\uff08\u3064\u307e\u308a": 5347, "\u521d\u3081": [5347, 5348], "\u30c6\u30f3\u30bd\u30eb": [5347, 5348, 5350, 5362, 5364, 5366, 5367, 5370], "\u4eee\u5b9a": [5347, 5348, 5349, 5350, 5367], "{th": 5347, "\u30d3\u30c3\u30c8\u30bc\u30ed": 5347, "\u30e9\u30d9\u30ea\u30f3\u30b0": [5347, 5348], "\u9055\u3044": [5347, 5348, 5355, 5358, 5368], "\u6b21\u5143": [5347, 5348, 5350], "\u8907\u7d20": [5347, 5348, 5349, 5350, 5353, 5357, 5361, 5370], "\u30de\u30b7\u30f3": [5347, 5348], "\u5927\u304d\u3059\u304e\u308b": [5347, 5348], "\u306b\u3059\u3050": [5347, 5348], "\u5230\u9054": [5347, 5348], "\u9032\u5316": 5347, "intial": 5347, "$$": 5347, "\u30c4\u30fc\u30eb\u30dc\u30c3\u30af\u30b9": [5347, 5348], "\u5bc6\u5ea6": [5347, 5348, 5361, 5368], "\u5b9f\u6570": [5347, 5348, 5350, 5370], "\u865a\u6570": [5347, 5348], "\u304f\u308c\u308b": [5347, 5348], "\u5d29\u58ca": [5347, 5348, 5358, 5364], "\u3068\u3057\u307e\u3057\u3087": [5347, 5348], "\u6700\u4e0a": [5347, 5348, 5350], "\u30d0\u30a4\u30ca\u30ea\u30d3\u30c3\u30c8": [5347, 5348], "\u9806\u5e8f": [5347, 5348, 5350, 5353, 5356, 5366], "\u4e26\u3079": [5347, 5348, 5350, 5357], "\u975e\u6a19": [5347, 5348], "\u6e96\u7684": [5347, 5348], "{pr": [5347, 5348], "\u5206\u5e03": [5347, 5348], "\u898b\u7a4d": [5347, 5348], "\u3082\u308b": [5347, 5348], ")\u3001": [5347, 5355, 5361], "\u4f55\u56de": [5347, 5348], "\u7e70\u308a\u8fd4\u3059": [5347, 5348, 5361], "\u30ad\u30fc\u30ef\u30fc\u30c9": [5347, 5348, 5354, 5357, 5364], "_compiled": 5347, "'ve": [5347, 5348], "\u96c6\u8a08": [5347, 5348], "{&": [5347, 5348, 5349, 5350, 5353, 5359, 5361, 5364, 5370], "\u30ab\u30a6\u30f3\u30c8": [5347, 5348, 5364], "\u7e70\u308a\u8fd4\u3055": [5347, 5348], "\u5272\u308b": [5347, 5348], "\u3066\u307f": [5347, 5348, 5355], "2terra": 5347, "gcc": [5347, 5355, 5370], "fri": 5347, "ist": 5347, "7fa": 5348, "0f": 5348, "8fc": 5348, "\u30bf\u30fc\u30b2\u30c3\u30c8\u30d3\u30c3\u30c8": 5348, "\u6027\u90e8": 5348, "\u30d9\u30fc\u30b7\u30c3\u30af": 5348, "\u30ab\u30d7\u30bb\u30eb": 5348, "\u30d2\u30f3\u30c8": 5348, "\u30c6\u30ad\u30b9\u30c8\u30ab\u30fc\u30bd\u30eb": 5348, "\u7f6e\u3044": 5348, "+tab": 5348, "\u62bc\u3059": 5348, "\u4f5c\u3089\u308c": 5348, "\u30b9\u30c6\u30fc\u30bf\u30b9": 5348, "\u975e\u540c": 5348, "\u540c\u671f": [5348, 5358], "\u5207\u308a": 5348, "\u66ff\u308f\u308a": 5348, "\u5f85\u3063": [5348, 5370], "\u8fd4\u3059": [5348, 5350, 5361, 5366, 5367, 5370], "outputstate": 5348, "(outputstate": 5348, "\u5316\u95a2": 5348, "\u5f15\u304d\u8d77\u3053\u3057": 5348, "lsb": [5348, 5350], "\u6700\u4e0a\u4f4d": 5348, "(meas": [5348, 5349], ".cregs": [5348, 5355], "0ed": [5348, 5349, 5352], "5fqiskit": [5348, 5349, 5352], "edcsystem": [5348, 5349, 5352], "/release": [5348, 5349, 5352, 5354, 5364, 5365, 5366, 5367, 5368, 5369], "6memory": [5348, 5349, 5350, 5352, 5364, 5365, 5366, 5367, 5369], "0sat": [5348, 5349, 5352], "\u5f53\u30da\u30fc\u30b8": [5349, 5350, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359], "\u30b7\u30f3\u30d7\u30eb": [5349, 5358, 5361], "\u4f8b\u3068\u3057\u3066": [5349, 5368, 5369], "\u5e7e\u3064\u304b": [5349, 5353], "\u53ef\u5909": 5349, "\u9577\u5f15": 5349, "\u6709\u76ca": 5349, "\u30d0\u30fc": 5349, "\u6607\u9806": [5349, 5350], "\u964d\u9806": 5349, "\u3069\u3061\u3089\u304b": 5349, "\u96c6\u7d04": 5349, "\u914d\u8272": 5349, "\u56f3\u5f62": 5349, "\u30a4\u30f3\u30c1": [5349, 5354], "\u30bf\u30d7\u30eb": [5349, 5353, 5362], "=legend": 5349, "orange": 5349, ", bar": 5349, "\u8996\u899a\u5316": 5349, "\u3082\u3068\u3082": 5349, "\u8fd4\u308a": 5349, "\u30a4\u30e1\u30fc\u30b8": [5349, 5354], "\u958b\u304d": 5349, "\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6": 5349, "\u898b\u305f\u3044": 5349, "\u7528\u9014": 5349, "\u30c8\u30e2\u30b0\u30e9\u30d5\u30a3\u30fc": 5349, "\u7559\u3081": 5349, "\u30a8\u30eb\u30df\u30fc\u30c8": [5349, 5362], "\u6b21\u5f0f": [5349, 5350], "\u6df7\u5408": [5349, 5357, 5361, 5366, 5369], "'plot": 5349, "\u5b9f\u90e8": 5349, "\u865a\u90e8": 5349, "\u90fd\u5e02": 5349, "\u30d3\u30e5\u30fc": 5349, "\u7403\u4f53": 5349, "\u77e2\u5370": 5349, "\u592a\u3055": 5349, "'qsphere": 5349, "_jp": 5349, "'city": 5349, "\u5927\u304d\u3055": [5349, 5370], "\u5358\u4e00\u91cf\u5b50": [5349, 5353, 5357, 5365, 5366, 5367, 5370], "\u5c04\u5f71": [5349, 5350], "\u7403\u4e0a": 5349, "(tuple": 5349, "purple": 5349, "green": 5349, "\u91cf\u5b50\u7cfb": 5349, "\u307e\u3056\u307e\u306a": 5350, "\u6761\u4ef6\u6587": 5350, "\u7d76\u5bfe": 5350, "\u7403\u9762": 5350, "\u30d6\u30ed\u30c3\u30db": 5350, "\u7403\u8868": 5350, "\u304b\u3051\u308b": 5350, "\u4e00\u822c\u7684": 5350, "& a": 5350, "\\\ne": 5350, "& b": 5350, "\u5236\u7d04": [5350, 5355, 5356, 5357, 5368], "\\rightarrow": 5350, "\u4e00\u91cf\u5b50": [5350, 5361, 5365, 5367], "\u30d3\u30c3\u30c8\u30e6\u30cb\u30bf\u30ea": 5350, "\u3002-": 5350, "u\u30b2\u30fc\u30c8": 5350, "p\u30b2\u30fc\u30c8": 5350, ",\u03c0": 5350, "quantumcircuit\u30e1\u30bd\u30c3\u30c9": 5350, "\u4ee3\u66ff": [5350, 5354], "=\n\\": 5350, ".id": [5350, 5352], ".-": [5350, 5352, 5364, 5370], "(\u307e\u305f": 5350, "\u5468\u56f2": 5350, "\\\n-": 5350, "\u30b0\u30ed\u30fc\u30d0\u30eb": [5350, 5352, 5353, 5355], "\u3068\u306f": 5350, "\u540c\u7b49": [5350, 5357, 5361], "\u30d3\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0": 5350, "\u7247\u65b9": 5350, "{equation": [5350, 5362], "jk": 5350, "lm": 5350, "{split": 5350, "~~\\": 5350, "~~": 5350, "\u7565\u8a18": 5350, "\u30d3\u30c3\u30c8\u30d9\u30af\u30c8\u30eb": 5350, "\u66f8\u304d\u4e0b\u3059": 5350, "\u6765\u308b": 5350, "\u5c11\u3057\u7570": 5350, "\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3": 5350, "\u5217\u8868": 5350, "\u898b\u306a\u3057": 5350, "\u30b9\u30ef\u30c3\u30d7\u30b2\u30fc\u30c8": 5350, "\u30c8\u30d5\u30a9\u30ea\u30b2\u30fc\u30c8": 5350, "\u30d5\u30ec\u30c9\u30ad\u30f3\u30b2\u30fc\u30c8": 5350, "\uff08swap": 5350, "& u": 5350, "\u3001\\": 5350, "\u6163\u4f8b": 5350, "\u306b\u3088\u308c": 5350, "\u306e\u3072\u3068\u3064": 5350, "\u3067\u3042\u308c": 5350, "\u305f\u304c\u3063": [5350, 5358, 5368], "\u306e\u3082": 5350, "{align": 5350, "*}": [5350, 5362], "underset": 5350, "{qubit": 5350, "&\\": 5350, "\\\nc": 5350, "\u30de\u30c8\u30ea\u30c3\u30af\u30b9": 5350, "\u5185\u7a4d": [5350, 5361], "\u5c0e\u51fa": 5350, "\u3057\u305f": 5350, "(\u4f8b": [5350, 5356], "q6": [5350, 5359], "\uff08\u307e\u305f": 5350, "\u898b\u3048": 5350, "~,": 5350, "~\\": 5350, "{swap": 5350, "\u30b9\u30c8\u30ea\u30f3\u30b0": 5350, "\\cdots": 5350, "|abc": 5350, "\u304c\u3069\u3061\u3089": 5350, "|bc": 5350, "|bac": 5350, "{if": 5350, "q10": [5350, 5359], "\u3044\u304d": [5350, 5355, 5361, 5372], "\u30ad\u30e5\u30fc\u30d3\u30c3\u30c8": 5350, "\u6211\u3005": [5350, 5355, 5370], "q12": [5350, 5359], "c0": [5350, 5354], "\u4e0d\u53ef\u9006": 5350, "\u2500|": 5350, "\u8ad6\u7684": 5350, "\u30ce\u30eb\u30e0": [5350, 5357], "\u5e73\u65b9": [5350, 5361], "2i": 5350, "(desired": 5350, "q2": [5350, 5352, 5355, 5359], "\u7d14\u7c8b": [5350, 5355, 5362, 5370], "\u7b49\u3057\u304f": [5350, 5353, 5365], "\u306e\u3067\u3057\u3087": 5350, "shende\u3089": 5350, "\u671b\u3080": 5350, "\u59cb\u307e\u3063": 5350, "\u30a2\u30a4\u30c7\u30a4\u30a2": 5350, "\u3082\u3064\u308c": [5350, 5370], "\u307b\u3069\u304f": 5350, "z\u8ef8\u307e\u308f\u308a": 5350, "\u5ea6\u56de": 5350, ")r": 5350, "\u65b9\u5f0f": [5350, 5369], "&+": 5350, ")_": 5350, "=&": [5350, 5355, 5357, 5359], "\\&": 5350, "\u89d2\u5ea6": 5350, "\u53d6\u308c": 5350, "& r": 5350, "\u3088\u3063": 5350, "\\ r": 5350, "\u5bfe\u89d2": [5350, 5361], "\u30de\u30eb\u30c1\u30d7\u30ec\u30af\u30b5\u30fc": 5350, "\u30d5\u30a9\u30fc\u30de\u30ea\u30ba\u30e0": 5350, "\u6210\u308b": 5350, "\u3082\u3064": [5350, 5362], "\u7b49\u4fa1": [5350, 5358, 5361], "\u4f9d\u3063": 5350, "compilermsc": 5350, "oswindowscpus": 5350, "eastern": 5350, "daylight": 5350, "stick": 5352, "_inst": 5352, "\u3067\u306e": [5352, 5372], "\u5373\u5ea7": 5352, "\u30b5\u30d6": [5352, 5355], "\u9001\u308b": 5352, "_val": 5352, "\u2551\nq": 5352, "\u2551\nc": [5352, 5354], "\u56de\u8def\u4f8b": 5352, "\uff15\u3064": 5352, "\u30d3\u30c3\u30c8\u30a8\u30f3\u30bf\u30f3\u30b0\u30eb": 5352, "\u632f\u52d5": 5352, "_subplot": 5352, "(map": 5352, "_xticks": 5352, "_xticklabels": 5352, "'$": 5352, "}$": 5352, ", r": 5352, "_xlabel": 5352, ", fontsize": 5352, "_ylabel": 5352, "(fontsize": 5352, ";matplotlib": 5352, "8fcb": 5352, "\u30b1\u30fc\u30b9": [5352, 5366], "itertools": 5352, "=fakevigo": 5352, "-start": 5352, "\u5408\u6210": [5352, 5355, 5366], "\u30e6\u30cb\u30fc\u30af": [5352, 5369], "\u898b\u306a\u3055": [5352, 5353], "sc": 5352, "\u53d7\u3051\u53d6\u308a": [5352, 5355, 5361], "\u30bd\u30fc\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf": 5352, ", qr": 5352, "(larger": 5352, "\u252c\u2518": [5352, 5362], "(gamma": [5352, 5368], "\u305f\u3044\u304f\u3064\u304b": 5353, "\u3082\u3063\u3068\u3082": 5353, "\u914d\u5217": [5353, 5357, 5361], "-xx": 5353, "\u914d\u4e0b": 5353, "\u30a4\u30f3\u30d7\u30c3\u30c8": 5353, "\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8": 5353, "\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc": 5353, "\u8fd4\u5374": [5353, 5364], ".dim": 5353, "_dim": 5353, "\u30ea\u30bf\u30fc\u30f3": 5353, "\u30b7\u30a7\u30a4\u30d7": 5353, "\u8ffd\u8de1": 5353, "\u639b\u3051\u308b": [5353, 5361], ".input": 5353, "\u30d3\u30c3\u30c8\u30b5\u30d6\u30b7\u30b9\u30c6\u30e0": 5353, "\u5316\u6642": 5353, "\u5316\u65b9": 5353, "\u30e6\u30cb\u30bf\u30ea": 5353, "\u30e6\u30cb\u30bf\u30ea\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": 5353, "\u7740\u76ee": [5353, 5355, 5367], "(decomposition": 5353, "paulixx": 5353, "(paulixx": 5353, ", output": [5353, 5366], "\u30d1\u30a6\u30ea\u30b2\u30fc\u30c8": 5353, "\u3002a": 5353, "\u4e21\u8005": 5353, ")\na": 5353, "\u5bc6\u63a5": 5353, "\u821e\u3044": [5353, 5354], "\u3068\u3059\u308b": [5353, 5366], "\u639b\u3051\u7b97": 5353, "\u9006\u9806": [5353, 5366], "\u306b\u95a2\u308f\u3089": [5353, 5357, 5359], "\u5c0f\u3055\u306a": 5353, "(xz": 5353, "\u8db3\u3057\u7b97": 5353, "\u5f15\u304d\u7b97": 5353, "\u30b9\u30ab\u30e9\u30fc": [5353, 5361], "\u53ca\u3073": [5353, 5355], "\u4fdd\u3061": 5353, "\u4fdd\u305f": 5353, "\u6e21\u305b\u308b": 5353, "\u30c1\u30e3\u30cd\u30eb": [5353, 5356, 5366, 5367, 5368], "\u3069\u308c": 5353, "\u30e6\u30cb\u30bf\u30ea\u30aa\u30da\u30ec\u30fc\u30bf\u30fc": 5353, "\u8a08\u6e2c": [5353, 5356], "2system": [5353, 5364, 5365, 5366, 5367, 5369, 5370], "9python": 5353, "\u30cd\u30a4\u30c6\u30a3\u30d6": [5354, 5355, 5361, 5364], "\u547c\u3076": [5354, 5355, 5369], "\u56de\u8def\u56f3": 5354, "\u30a2\u30b9\u30ad\u30fc": 5354, "\u30a2\u30fc\u30c8": 5354, "\u30c6\u30ad\u30b9\u30c8": [5354, 5357], "\u67d4\u8edf": 5354, "\u753b\u50cf": [5354, 5357], "'text": 5354, "textdrawer": 5354, "\u30ea\u30bf\u30fc\u30f3\u30bf\u30a4\u30d7": 5354, "\u5916\u90e8": 5354, "\u306b\u304b\u304f": 5354, "\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3": [5354, 5356], "\u5f15\u304f": 5354, "qb": 5354, "\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30aa\u30d7\u30b7\u30e7\u30f3": 5354, "\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0": 5354, "\u6298\u308a\u8fd4\u3055": 5354, "\u500d\u6570": 5354, "\u56e0\u5b50": [5354, 5361], "\u30b2\u30fc\u30c8\u30bf\u30a4\u30d7": 5354, "\u30e9\u30a4\u30f3\u30b9\u30bf\u30a4\u30eb": 5354, "\u30c6\u30ad\u30b9\u30c8\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0": 5354, "\u30ab\u30e9\u30fc\u30b3\u30fc\u30c9": 5354, "\u30b5\u30d6\u30c6\u30ad\u30b9\u30c8": 5354, "\u30e9\u30a4\u30f3": 5354, "\u30ab\u30e9\u30fc": 5354, "\u30d0\u30ea\u30a2\u30fc": 5354, "\u30d5\u30a9\u30f3\u30c8": 5354, "(dict": 5354, "\u8f9e\u66f8": [5354, 5364, 5368], "\u4e0d\u5b8c\u5168": 5354, "\u30ad\u30fc": 5354, "latexdrawerstyle": 5354, "usepiformat": 5354, "\u30e9\u30b8\u30a2\u30f3": 5354, "\u6298\u308a\u8fd4\u3059": 5354, "\u30d0\u30f3\u30c9\u30eb": 5354, "\u5727\u7e2e": 5354, "'solid": 5354, "'doublet": 5354, "\u256b\u2500\u2500": 5354, "c1": 5354, "lightgreen": 5354, "latext": 5354, "\u306a\u3093\u3089\u304b": 5354, "\u4e8b\u60c5": 5354, "\u3002release": 5354, "\u5909\u308f\u3063": 5354, "0aer": [5354, 5356, 5357, 5364, 5365, 5366, 5367, 5368, 5369, 5370], "1ignisnoneaquanoneibm": 5354, "0fri": [5354, 5361, 5362, 5364, 5365, 5366, 5367, 5369, 5372], "_passes": 5355, "\u547c\u3093": 5355, "\u66f8\u3051\u308b": 5355, "\u9023\u9396": [5355, 5369], "\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0": [5355, 5357], "\u901a\u4fe1": 5355, "\u884c\u3048\u308b": 5355, "\u30c9\u30a2": 5355, "\u958b\u653e": 5355, "\u30d3\u30eb\u30c9\u30a4\u30f3": 5355, "\u8abf\u3079": [5355, 5369], "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc\u30d1\u30b9": 5355, "\u6709\u5411": 5355, "\u975e\u5de1": 5355, "\u30d7\u30ed\u30c3\u30c8\u30eb\u30fc\u30c1\u30f3": 5355, "conda": [5355, 5370], "yum": 5355, "apt": 5355, "brew": 5355, "dir": 5355, "(passes": 5355, "_[": 5355, "isupper": 5355, "layouttransformation": 5355, "resourceestimation": 5355, "\u3053\u306a\u3059": 5355, "\u30ec\u30a4\u30a2\u30a6\u30c8": 5355, "\u30d0\u30a4\u30f3\u30c9": [5355, 5361], "\u30d7\u30e9\u30b0\u30a2\u30f3\u30c9\u30d7\u30ec\u30a4": 5355, "\u30d9\u30b9\u30c8": 5355, "\u73fe\u308c\u308b": 5355, "bs": 5355, "(bs": 5355, "(ls": 5355, "(ss": 5355, "\u65e2\u5b9a": 5355, "\u901a\u3058": [5355, 5361], "\u73fe\u6642\u70b9": [5355, 5369], "\u4e00\u756a": 5355, "\u6d88\u8cbb": 5355, "\u932f\u8aa4": 5355, "\u601d\u3044": [5355, 5369], "\uff14\u3064": 5355, "\u5b9f\u73fe": 5355, "\u660e\u793a\u7684": 5355, "(\u3069": 5355, "\u30de\u30c3\u30d1\u30fc": 5355, "\u96a3\u63a5": 5355, "\u3064\u3076\u3059": 5355, "\u8efd\u91cf": 5355, "\u4e2d\u7a0b\u5ea6": 5355, "\u30b2\u30fc\u30c8\u30ad\u30e3\u30f3\u30bb\u30eb": 5355, "\u91cd\u91cf": 5355, "\u518d\u5408": 5355, "tokyo": 5355, "\u2502\n\u00ab": 5355, "\u2518\n\u00ab": 5355, ", optimized": 5355, "(&": [5355, 5361, 5364, 5372], "netlist": 5355, "\u5229\u70b9": 5355, "\u64cd\u4f5c\u9593": 5355, "\u30d5\u30ed\u30fc": 5355, "\u30b0\u30e9\u30d5\u30ce\u30fc\u30c9": 5355, "\uff1aqubit": 5355, "/clbit": 5355, "\u30a4\u30f3\u30d7\u30c3\u30c8\u30ce\u30fc\u30c9": 5355, "(\u7dd1": 5355, "\u30ce\u30fc\u30c9": 5355, "(\u9752": 5355, "\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u30ce\u30fc\u30c9": 5355, "(\u8d64": 5355, "\u30a8\u30c3\u30b8": 5355, "\u6d41\u308c": 5355, "\u3002\u3044\u304f\u3064\u304b": 5355, ".dagopnode": 5355, "1eebb": 5355, ";,": 5355, "eb": 5355, ".qargs": 5355, ".cargs": 5355, "1eec": 5355, ", qargs": 5355, "(ccxgate": 5355, ", cargs": 5355, "mini": 5355, "(chgate": 5355, "-dag": 5355, "=cxgate": 5355, "=cx": 5355, "=mini": 5355, "\u623b\u3059": [5355, 5357], "\u3084\u3089": 5355, "\u3070\u3044\u3051": 5355, "\u30d1\u30b9\u30af\u30e9\u30b9": 5355, "\u306e\u3069\u3061\u3089": [5355, 5362], "\u6d3e\u751f": [5355, 5356], "\u3002transformation\u30d1\u30b9": 5355, "analysis\u30d1\u30b9": 5355, "\u306e\u3061": 5355, "\u30e1\u30a4\u30f3\u30bf\u30b9\u30af": 5355, "\u767b\u9332": [5355, 5356], "\uff1adag": 5355, "\u6a2a\u65ad": 5355, "\u5404\u64cd\u4f5c": 5355, "\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0\u30de\u30c3\u30d7": [5355, 5365], ".basepasses": 5355, "(transformationpass": 5355, "(creg": 5355, "_trivial": 5355, ".physical": 5355, "mappers": 5355, "(canonical": 5355, ".serial": 5355, "subdag": 5355, "[gate": 5355, ".distance": 5355, "(physical": 5355, ".shortest": 5355, "_undirected": 5355, "(len": 5355, "(path": 5355, "[swap": 5355, "[connected": 5355, "(swapgate": 5355, ".reorder": 5355, "=order": 5355, "(subdag": 5355, "1f": 5355, "\u30d1\u30b9\u30de\u30cd\u30fc\u30b8\u30e3": 5355, ";ipython": 5355, "-input": 5355, "3c": 5355, "5c": 5355, "&gt": [5355, 5367], "\u51fa\u6765\u308b": 5355, "\u65b9\u5411": 5355, "\u30cd\u30a4\u30c6\u30a3\u30d6\u30b2\u30fc\u30c8": 5355, "\u601d\u60f3": 5355, "\u30a2\u30af\u30b7\u30e7\u30f3": [5355, 5361], "\u7d44\u307f\u5408\u308f\u305b\u308b": [5355, 5361], "\u5c40\u9762": 5355, "\u51fa\u3057": [5355, 5357], "\u3002python": 5355, "\u7d44\u307f\u308f\u305b\u308b": 5355, "cookbook": 5355, "\u30ed\u30ae\u30f3\u30b0\u30e2\u30b8\u30e5\u30fc\u30eb": 5355, "\u30bb\u30eb": 5355, "\u304a\u3089\u305a": 5355, "\u5410\u304d": 5355, "basicconfig": 5355, "/logging": 5355, "#logging": 5355, "\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc": 5355, "\u30d5\u30a9\u30fc\u30de\u30c3\u30bf": 5355, "\u7279\u4f8b": 5355, "\u9ad8\u4f4d": 5355, "\u521d\u3081\u3066": 5355, "\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc": 5355, "\u3057\u307e\u305b": [5355, 5368], "\u30cf\u30f3\u30c9\u30e9\u30fc": 5355, "(log": 5355, ":pass": 5355, "_translator": 5355, ":begin": 5355, ";}": [5355, 5359], ":begining": 5355, "frozenset": 5355, ":inspecting": 5355, ":transformation": 5355, ":x": 5355, ":h": 5355, ":basis": 5355, ":composing": 5355, ":updating": 5355, ":updated": 5355, ":total": 5355, "\u306b\u308f\u304b\u308b": 5355, "\u6240\u8981": 5355, "stochasticswap\u30d1\u30b9": 5355, "\u3002\u30d1\u30b9": 5355, "\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9": 5355, "\u89e3\u8aad": 5355, "\u96e3\u3057\u3044": 5355, "q3": [5355, 5359], "\u306e\u304b": [5355, 5366], "\u5e78\u3044": 5355, "\u30ed\u30b0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf": 5355, "\u3065\u3051\u308b": [5355, 5370], ".formatter": 5355, "%(": 5355, "processname": 5355, "levelname": 5355, "handler": 5355, "handlers": 5355, ".setformatter": 5355, "(formatter": 5355, "\u518d\u5b9f\u884c": 5355, "forkprocess": 5355, "begining": 5355, "mainprocess": 5355, "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc\u30d7\u30ed\u30bb\u30b9": 5355, "\u9032\u884c": [5355, 5358], "\u306f\u304b": 5355, "\u9650\u3089": [5355, 5365], "\u597d\u307f": [5355, 5359], "\u6d17\u7df4": 5355, "1aer": 5355, "1ignis": 5355, "5ibm": 5355, "-forge": [5355, 5370], "\u53d6\u308a\u9664\u304d": 5356, "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb": [5356, 5358, 5359], "\u5168\u5165": 5356, "\u30c1\u30e3\u30f3\u30cd\u30eb": [5356, 5357, 5359, 5368], "\u30c0\u30a4\u30ca\u30df\u30af\u30b9": 5356, "\u30c9\u30e9\u30a4\u30d6": [5356, 5357], "\u5f37\u529b": 5356, "\u30c9\u30e9\u30a4\u30d6\u30d1\u30eb\u30b9": 5356, "\u30d3\u30c3\u30c8\u30aa\u30da\u30e9\u30f3\u30c9": 5356, "\u3002openpulse": 5356, "\u5f62\u72b6": 5356, "\u4e00\u9023": 5356, "\u901a\u3057": 5356, "\u30ac\u30a6\u30b9\u30d1\u30eb\u30b9": [5356, 5357], "\u518d\u751f": [5356, 5357], "\u5fc3\u914d": 5356, "\u3067\u3053\u308c": 5356, "\u4f5c\u3063": 5356, "\u6b8b\u3063": 5356, "\u56de\u8def\u30e1\u30bd\u30c3\u30c9": 5356, "\u3069\u304a\u308a": 5356, "\u3059\u304e\u308b": 5356, "\u30e2\u30c3\u30af\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": [5356, 5358], "\u6271\u3044": 5356, "demonstration": 5356, "\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30d0\u30a4\u30b9": 5356, ".&": 5356, "feb": [5356, 5357, 5370], "\u30d1\u30eb\u30b9\u30b2\u30fc\u30c8": 5357, "\u3072\u3068\u3064": [5357, 5361], "\u5165\u308c": 5357, "12\u6708": 5357, "\u307e\u3060\u3053\u306e": 5357, "\u30a8\u30ec\u30af\u30c8\u30ed\u30cb\u30af\u30b9": 5357, "_example": 5357, "(,": 5357, "\u5404\u547d": [5357, 5364], "\u4e92\u3044": [5357, 5361], "\u6c7a\u307e\u308a": 5357, "(frequency": 5357, "\u30aa\u30da\u30e9\u30f3\u30c9\u30bb\u30c3\u30c8": 5357, "\u30c1\u30c3\u30d7": 5357, "\u8aad\u307f\u51fa\u3057": [5357, 5365], "\u7279\u5316": 5357, "\u30c7\u30b8\u30bf\u30a4\u30b6\u30fc": 5357, "\u53d7\u4fe1": 5357, "\u53d7\u3051\u53d6\u308b": 5357, "\u9664\u304d": 5357, "\u30d3\u30c3\u30c8\u30e9\u30d9\u30eb": 5357, "\u30bf\u30fc\u30b2\u30c3\u30c8\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5357, "\u8a8d\u8b58": 5357, "\u30a2\u30af\u30bb\u30b5": 5357, "\u30fb\u30ea\u30bd\u30fc\u30b9": 5357, "_aware": 5357, "\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0": 5357, "\u7d99\u7d9a": [5357, 5358], "\u6307\u793a": 5357, "\u3053\u3053\u3084": 5357, "\u671f\u9593": [5357, 5358, 5359], "\u30b5\u30a4\u30af\u30eb": 5357, "\u30b5\u30f3\u30d7\u30eb\u30ec\u30fc\u30c8": 5357, "5dt": 5357, "\u304c\u3059\u3079": 5357, "\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7": 5357, "\u9045\u308c": 5357, "\u63a2\u308a": 5357, "\u30a8\u30f3\u30d9\u30ed\u30fc\u30d7": 5357, "\u5909\u8abf": 5357, "\u76f4\u611f": 5357, "\u6a5f\u5668": 5357, "awg": 5357, "\u3002awg": 5357, "\u6b63\u5f26": 5357, "\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf": [5357, 5359], "\u6ce2\u767a": 5357, "\u751f\u5668": 5357, "\u4e2d\u592e": [5357, 5362], "\u304a\u3051": 5357, "\u5931\u308f": 5357, "\u30ac\u30a6\u30b9": 5357, "\u504f\u5dee": 5357, "\u30b5\u30f3\u30d7\u30eb\u30dd\u30a4\u30f3\u30c8": [5357, 5359], "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b7\u30b9\u30c6\u30e0": 5357, "\u66f4\u306a\u308b": 5357, "\u30d1\u30eb\u30b9\u30b5\u30a4\u30ba": 5357, "\u8ab2\u3057": 5357, "\u3092\u901a\u3058": 5357, "\u306f\u308b": 5357, "\u30b8\u30e7\u30d6\u30b5\u30a4\u30ba": 5357, "\u8cac\u4efb": 5357, "gaus": 5357, "\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30c0\u30a4\u30ca\u30df\u30af\u30b9": 5357, "\u8abf\u7bc0": 5357, "*dt": 5357, ".arange": 5357, "wf": 5357, "=sigma": 5357, "(gaus": 5357, ", channel": 5357, "\u524d\u8ff0": [5357, 5361], "\u3067\u3044\u3064": 5357, "\u6d6e\u52d5": [5357, 5364], "\u5c0f\u6570": [5357, 5364], "\u6697\u9ed9": [5357, 5368], "\u30fb\u30c1\u30e3\u30f3\u30cd\u30eb": 5357, "\u5e2f\u57df": 5357, "\u77ac\u6642": 5357, "\u5831\u544a": [5357, 5359, 5365], "\u30b7\u30d5\u30c8": 5357, "\u5f8c\u7d9a": [5357, 5361], "\u6301\u7d9a": 5357, "\u30e1\u30e2\u30ea": [5357, 5364, 5369, 5370], "\u5b66\u3073": 5357, "\u3053\u3053\u306e": 5357, "\u30d3\u30eb\u30c0\u30fc": 5357, "\u5165\u308c\u5b50": 5357, "\u5f93\u3046": [5357, 5358], "\u304f\u3089\u3044": 5357, "\u7a0b\u5ea6": 5357, "\u76f4\u5f8c": 5357, "\u6642\u523b": [5357, 5358], "\u6587\u66f8": 5357, "\u5de6\u63c3": 5357, "\u5f53\u7136": 5357, "\u53cd\u5bfe": 5357, "\u9045\u304f": [5357, 5358], "\u304c\u308f\u304b\u3063": 5357, "_equispace": 5357, "\u540c\u3058\u9577\u3055": 5357, "\u4e00\u6642\u7684": 5357, "\u30d1\u30eb\u30b9\u30ec\u30d9\u30eb": [5358, 5359], "\u5404\u57fa": [5358, 5365], "\u666e\u901a": 5358, "\u30e2\u30c3\u30af": [5358, 5359], "\u66f8\u304d": 5358, "\u30ab\u30b9\u30bf\u30e0\u30d1\u30eb\u30b9": 5358, "\u5f93\u3044": 5358, "\u6700\u9577": 5358, "\u7d4c\u8def": 5358, "\u5404\u64cd": 5358, "\u500b\u76ee": 5358, "\u8ffd\u968f": 5358, "(channels": 5358, "\u89e3\u653e": 5358, "\u3068\u3059\u3050": 5358, "\u30a2\u30a4\u30c9\u30eb": 5358, "\u52b1\u8d77": [5358, 5366], "defe": 5358, "5system": [5358, 5359], "nov": [5358, 5359], "jst": [5358, 5359], "gathering": 5359, "\u306b\u8a73\u3057\u304f": 5359, "\u30de\u30a4\u30af\u30ed": 5359, "\u9664\u3044": 5359, "\u60f3\u50cf": 5359, "\u78ba\u4fe1": 5359, "\u30c9\u30e9\u30a4\u30d6\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0": 5359, "\u5f37\u5ea6": 5359, "\u5171\u632f": 5359, "\u6301\u3064\u4ed6": 5359, "\u4e3b\u8981": 5359, "\u30ec\u30dd\u30fc\u30c8": 5359, "\u7d20\u6674\u3089\u3057\u3044": 5359, "\u5305\u62ec": 5359, "\u5c11\u3057\u8a73\u3057\u304f": 5359, "\u30e9\u30c3\u30af": 5359, "\u6ce2\u5f62": 5359, "\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8": 5359, "\u3002pulse": 5359, "\u8fd1\u65e5": 5359, ".meas": 5359, "\u30c7\u30b8\u30bf\u30eb\u30b3\u30f3\u30d0\u30fc\u30bf": 5359, "-digital": 5359, "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0": 5359, "\u500b\u4eba": 5359, "resonant": 5359, "\".": [5359, 5368, 5369, 5370], "\u4fdd\u8a3c": 5359, "(calibrations": 5359, ";instructionschedulemap": 5359, "q4": 5359, "q5": 5359, "q7": 5359, "q8": [5359, 5362], "q9": 5359, "q11": 5359, "q13": 5359, "q14": 5359, "q15": 5359, "q16": 5359, "q17": 5359, "q18": 5359, "q19": 5359, ")&": 5359, "\u3092\u3069": 5359, "abf": 5359, "thu": 5359, "/operators": [5361, 5362, 5372], "\u8868\u3059\u5f0f": 5361, "\u30ad\u30e3\u30ec\u30c3\u30c8": 5361, "\u8131\u5b57": 5361, "\u8a18\u53f7": 5361, "^y": 5361, "@`": 5361, "\u5373\u6642": 5361, "@ (": 5361, "^ (": 5361, "(pauliop": 5361, ", coeff": 5361, "\u30e9\u30c3\u30d7": [5361, 5362], "\u30da\u30a2": 5361, "\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0": 5361, "\u5e45\u5e83": 5361, "\u898f\u5b9a": 5361, "\u5168\u90e8": 5361, "\u3002(": [5361, 5372], "\u540c\u7fa9": 5361, "(plus": 5361, "(minus": 5361, "7e": 5361, "\u53cc\u5bfe": 5361, "\u30d6\u30e9": 5361, ".adjoint": 5361, "\u30c1\u30eb\u30c0": 5361, "~one": 5361, "\u52a0\u7b97": 5361, "\u6e1b\u7b97": 5361, "\u5426\u5b9a": 5361, "\uff08-": 5361, "\u4e57\u7b97": 5361, "\u4e57\u6cd5": 5361, "\u9664\u7b97": 5361, "\u56de\u5408": 5361, "\u7b49\u5f0f": 5361, "\u968f\u4f34": 5361, "\u9806\u4f4d": 5361, "\u306b\u5f93\u3046": 5361, "\u6570\u5b66": 5361, "\u62ec\u5f27": 5361, "\u639b\u3051": 5361, "3i": 5361, "3j": 5361, "\u8db3\u3059": 5361, "\u540c\u3058\u578b": 5361, "\u898b\u307e\u3057\u3087": 5361, "\u6b63\u898f": [5361, 5370], "dictmeasurement": 5361, "\u8a18\u53f7\u5f0f": 5361, "~v": 5361, "~minus": 5361, "^plus": 5361, "\u8907\u5408": 5361, "^zero": 5361, "^minus": 5361, "^one": 5361, "\u30d5\u30a1\u30af\u30c8\u30ea\u30fc": 5361, "\u53d6\u308a\u8fbc\u307f": 5361, "\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf": 5361, "(realamplitudes": 5361, "\u03b8[": 5361, "\u758e\u8868": 5361, "{matrix": 5361, "(cx": [5361, 5367], "vanishes": 5361, "\u4e2d\u9593": 5361, "((h": 5361, ")@": 5361, "(xii": 5361, "\u30b3\u30f3\u30c6\u30ca": 5361, "\u7c21\u7d04": 5361, "\u5206\u914d": 5361, "\u5316\u6f14": 5361, "\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9": 5361, "\u3059\u3067\u306b": 5361, "\u308f\u304b\u3089": 5361, "\u6c17\u3065\u304f": 5361, "\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb": 5361, "\u30d7\u30ed\u30d1\u30c6\u30a3": [5361, 5365], "\u30a2\u30a4\u30c6\u30e0": 5361, "\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c6\u30a3\u30f3\u30b0": 5361, "abriangrouper": 5361, "\u30b3\u30f3\u30d0\u30fc\u30bf": 5361, "\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc": 5361, "\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9": 5361, "\u6dfb\u5b57": 5361, "\u51fa\u529b\u6642": 5361, "`\u3001": 5361, "\u30c8\u30ed\u30c3\u30bf\u30fc": 5361, "\u30c8\u30e9\u30d0\u30fc\u30b9": 5361, "\u6f14\u7b97\u5b50\u5185": 5361, "`operatorbase": 5361, "\u906d\u9047": 5361, "\u6570\u500b": [5361, 5369], "\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc": 5361, "\u306b\u304b\u3051\u308b": 5361, "\u591a\u91cf\u5b50": 5361, "\u30d3\u30c3\u30c8\u30d1\u30a6\u30ea": 5361, "\u7dda\u578b": 5361, "*two": 5361, "(repr": 5361, "*\u03b8": 5361, "(paulisumop": 5361, "(sparsepauliop": 5361, "{cx": 5361, "_+": 5361, "\u51fa\u73fe": 5361, "(trotter": 5361, "=suzuki": 5361, "(trotterized": 5361, "\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0": 5361, "\u00bb\n\u00ab": 5361, "\u69cb\u9020": [5361, 5370], "\u30d7\u30ea\u30ed\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3": 5361, "\u8208\u5473\u6df1": 5361, "(pauliexpectation": 5361, "\u53ef\u63db": 5361, "\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9": 5361, "\u4f4e\u6e1b": 5361, "\u5f0f\u5168": 5361, "(diagonalized": 5361, "\u3082\u3057\u308c": 5361, "_expectations": 5361, "| e": 5361, "6e": 5361, "\u7834\u58ca": 5361, "\u30c7\u30dd\u30e9\u30e9\u30a4\u30ba\u30c1\u30e3\u30cd\u30eb": 5361, "\u5e73\u65b9\u6839": 5361, "(born\u30eb\u30fc\u30eb": 5361, "_trotter": 5361, "_energies": 5361, ":\\": [5361, 5364], "(sampled": 5361, "nafter": 5361, "\u2524\u00bb": 5361, "fe": 5361, "3eb": 5361, "3fqiskit": 5361, "0eb": 5361, "9dccqiskit": 5361, "2dfesystem": 5361, "5python": 5361, "compilerclang": 5361, "oct": 5361, "bst": 5361, "_framework": 5362, "#general": 5362, "\u89b3\u6e2c\u91cf": 5362, "+ z": 5362, "\u3042\u3068": 5362, "\u9577\u6240": [5362, 5370], "\u77ed\u6240": [5362, 5370], "\u76f8\u7570": 5362, "\u751f\u6210\u5b50": 5362, "im": 5362, "\u91cd\u307f": 5362, "\u4ed8\u304d\u548c": 5362, ")h": 5362, "bigotimes": 5362, "\\limits": 5362, "_pi": 5362, ",p": 5362, "}u": 5362, "phenomena": 5362, "(zz": 5362, "ll": 5362, "\u30a2\u30d7\u30ed\u30fc\u30c1": 5362, "\u6587\u8108": 5362, "\u91cf\u884c": 5362, "\u9006\u884c": 5362, "\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0": 5362, "\u6b63\u5247": 5362, "\u304b\u304b\u308f\u3089\u305a": 5362, "\u4e8c\u4e57": 5362, "-curve": 5362, "corner": 5362, "\u6442\u52d5": 5362, "lasso": 5362, "perturb": 5362, "\u30aa\u30d6\u30b6\u30fc\u30d0\u30d6\u30eb": 5362, "\u3068\u308c\u305e\u308c": 5362, "\u306f\u3053\u308c\u3089": 5362, "(hessian": 5362, "_hess": 5362, "(hess": 5362, "\u8a08\u91cf": 5362, "\u30a8\u30f3\u30c8\u30ea\u30fc": 5362, "\u508d\u53d7": 5362, "\u30ef\u30fc\u30ad\u30f3\u30b0": 5362, "(qfi": 5362, "\u7121\u3057": 5362, "\u306b\u3082": 5362, "(next": 5362, "(it": 5362, "_sv": [5362, 5370], "=optimizer": 5362, "=grad": 5362, ", h2": 5362, "2ignisnoneaquanoneibm": 5362, "\u30ce\u30a4\u30ba\u30d5\u30ea\u30fc": 5364, "\u30d7\u30ed\u30d0\u30a4\u30c0": 5364, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5364, "[aersimulator": 5364, "\u30e1\u30a4\u30f3\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5364, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5364, "\u6a21\u5023": 5364, "\u30ea\u30bb\u30c3\u30c8": [5364, 5366, 5368], "\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea": 5364, "\u5404\u500b": 5364, "\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9": 5364, "\u4e8b\u524d": 5364, "\u5909\u308f\u308a": 5364, "\u5909\u52d5": 5364, "_mps": [5364, 5370], "\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30d0\u30a4\u30b9": 5364, "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3": 5364, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3": 5364, "\u70b9\u7cbe": 5364, "\u5358\u7cbe\u5ea6": 5364, "\u534a\u5206": 5364, "\u7a4d\u72b6": 5364, "\u8d85\u6f14": 5364, "\u7b97\u5b50": 5364, "\u30bb\u30fc\u30d6": 5364, "\u884c\u3046\u969b": 5364, "(steps": 5364, "=f": 5364, "'psi": 5364, "6j": 5364, "\u30af\u30ea\u30d5\u30a9\u30fc\u30c9": [5364, 5369], "\u305d\u3046\u3057": 5364, "\u3002*": 5364, "|=": 5364, "\u30a2\u30f3\u30ed\u30fc\u30eb": [5364, 5367], "initilize": 5364, "]=": 5364, "\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6": [5364, 5369], ";-": 5364, ", &": 5364, ";+": 5364, "0ibm": [5364, 5365, 5366, 5367, 5369, 5370], "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30c7\u30d0\u30a4\u30b9": 5365, "\u8aa4\u5dee": [5365, 5366, 5367], "\u904e\u304e": 5365, "\u5e73\u5747": [5365, 5367], "\u306b\u95a2\u9023": 5365, "\u4e8b\u5b9f": 5365, "\u5b9f\u6a5f\u4e0a": 5365, "\u6d3b\u767a": 5365, "\u30c7\u30d0\u30a4\u30b9\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": 5365, "\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3": 5365, "\u30ea\u30e9\u30af\u30bc\u30fc\u30b7\u30e7\u30f3": 5365, "\u5b9a\u6570": [5365, 5366], "ibmquantum": 5365, "\u30ce\u30a4\u30ba\u30c7\u30fc\u30bf": 5365, "\u5b9f\u6a5f": 5365, "vigo": 5365, "\u30d3\u30c3\u30c8\u30b2\u30fc\u30c8\u30a8\u30e9\u30fc": 5365, "\u8131\u5206": 5365, "(depolarizing": 5365, "\u71b1\u7de9": [5365, 5366], "(thermal": 5365, "\u4e21\u91cf\u5b50": 5365, "\u30a8\u30e9\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf": 5365, "\u30c7\u30d0\u30a4\u30b9\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30d7\u30ed\u30d1\u30c6\u30a3": 5365, "\u6975\u8aa4": 5365, "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30d7\u30ed\u30d1\u30c6\u30a3": 5365, "(tcirc": [5365, 5369, 5370], "\u30ab\u30b9\u30bf\u30e0\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": [5366, 5367], "\u30ab\u30b9\u30bf\u30de\u30a4\u30ba": 5366, "\u30ad\u30fc\u30af\u30e9\u30b9": 5366, "\u30d8\u30eb\u30d1\u30fc": 5366, "\u30a8\u30e9\u30fc\u30bf\u30a4\u30d7": 5366, "\u30a8\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb": [5366, 5367, 5368], "\u30e6\u30cb\u30bf\u30ea\u30fc\u30a8\u30e9\u30fc": 5366, "\u71b1\u5360": 5366, "\u6709\u7387": 5366, "_damping": [5366, 5367, 5368], "\u632f\u5e45damping": 5366, "\u6e1b\u8870": [5366, 5367], "\u71b1\u96c6": 5366, "\u30b3\u30f3\u30dd\u30b8\u30b7\u30e7\u30f3": 5366, "\\cal": 5366, "=(\\": 5366, "\u30d3\u30c3\u30c8\u30d5\u30ea\u30c3\u30d7\u30a8\u30e9\u30fc": 5366, "_flip": 5366, "('z": 5366, "qasmqobjinstructions": [5366, 5368], "bitphase": 5366, "(bitphase": 5366, ", {": 5366, "_sop": 5366, "$ p": 5366, "miss": 5366, "-assignement": 5366, "0given": 5366, "1given": 5366, "p1given": 5366, "1given0": 5366, "p0given": 5366, "p0given1": 5366, "\u3068\u3069": 5366, "['u1": 5366, "\u3002\u30c7\u30e2": 5366, "\u306a\u304a": 5366, "\u3082\u3061\u3083": 5366, "\u30d3\u30c3\u30c8\u30a8\u30e9\u30fc": 5366, "_tnoise": 5366, "\u73fe\u5b9f": 5366, "\u30a8\u30e9\u30fc\u30e2\u30c7\u30eb": 5366, "\u548c\u6642": 5366, "\u9593\u5b9a": 5366, "\u8131\u4f4d": 5366, "(dephasing": 5366, "\u6c7a\u3081": 5366, ".normal": 5366, "microsec": 5366, "t1s": 5366, "# (": 5366, "2b": 5366, "_thermal": 5366, "(errors": 5366, "\"u1": 5366, "_tthermal": 5366, "\u30e6\u30cb\u30bf\u30ea\u30fc\u30b2\u30fc\u30c8": 5367, "\u30ce\u30a4\u30ba\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3": 5367, "{cnot": 5367, "{iswap": 5367, "<iswap": 5367, "(iswap": 5367, "\"iswap": 5367, "\u3067\u3053\u306e": 5367, "\u8b58\u5225": 5367, "_ave": 5367, "{:": 5367, "(qerror": 5367, "\u30ab\u30b9\u30bf\u30e0\u30e9\u30d9\u30eb": 5367, "\u306f\u3053\u306e": 5367, "\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3": 5367, "'u3": 5367, "iswaps": 5367, ";iswap": 5367, "\u30d4\u30fc\u30af": 5367, "tbell": 5367, "(tbell": 5367, "(ideal": 5367, "\u4e88\u60f3": 5367, "\u30ce\u30a4\u30ba\u30c1\u30e3\u30cd\u30eb": 5368, "\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3": 5368, "\u975e\u666e": 5368, "\u904d\u7684": 5368, "\u305d\u3053\u3067": 5368, "\u76ee\u6307": 5368, "\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3": 5368, "\u201capproximate": 5368, "-schmidt\u30e1\u30c8\u30ea\u30c3\u30af": 5368, "\u6b63\u5024": 5368, "\u30c8\u30ec\u30fc\u30b9": 5368, "\u3082\u3064\u3088\u3046": 5368, "(\u201c": 5368, "\u30b4\u30fc\u30eb": 5368, "\u201d)": 5368, "\u30e1\u30c8\u30ea\u30c3\u30af": 5368, "\u306b\u5f93\u3063": 5368, "\u30d2\u30eb\u30d9\u30eb\u30c8": 5368, "\u30b7\u30e5\u30df\u30c3\u30c8\u30e1\u30c8\u30ea\u30c3\u30af": 5368, "honest": 5368, "\u304a\u304a\u3088\u305d\u306e": 5368, "\u4e0a\u9650": 5368, "\u5c3a\u5ea6": 5368, "\u30a2\u30a4\u30c7\u30f3\u30c6\u30a3\u30c6\u30a3\u30c1\u30e3\u30cd\u30eb": 5368, "cc": 5368, "\\le": 5368, "+q": 5368, "\u601d\u3046": 5368, "\u6700\u826f": [5368, 5370], "\u6c7a\u3081\u308b": 5368, "\u305d\u3093\u306a": 5368, "\u96e3\u3057\u304f": 5368, "\u3067\u3057": [5368, 5372], "(results": 5368, "\u96c6\u307e\u308a": 5368, "k1": 5368, ",[": 5368, "\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9": 5368, "\u306e\u3044": 5368, "\u4e00\u4f8b": 5368, "=reset": 5368, ")]}": 5368, "\u30aa\u30da\u30ec\u30fc\u30bf": 5368, "\u6e21\u3059\u65b9": 5368, "0ignisnoneaquanoneibm": 5368, "_tutorial": 5369, "\u672c\u624b\u6cd5": 5369, "browne": 5369, "calpin": 5369, "howard": 5369, "\u3089\u306b\u3088\u308b": 5369, "7fbd": 5369, "\u308f\u305a\u304b": 5369, "\u30d9\u30af\u30c8\u30eb\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": 5369, "\u30c6\u30e9\u30d0\u30a4\u30c8": 5369, "ram": 5369, "?:": 5369, ".success": 5369, "stabilizer\u30e1\u30bd\u30c3\u30c9": 5369, "\u3046\u307e\u304f": [5369, 5370], "\u6570\u5206": [5369, 5370], "(extended": 5369, "\u6271\u3048\u308b": 5369, "\u8aad\u3080": 5369, "\u975eclifford": 5369, "\u6bd4\u4f8b": 5369, "[qubit": 5369, "[control": 5369, "[target": 5369, "_angle": 5369, "tsmall": 5369, "(small": 5369, "\u307b\u3069": 5369, "\u304b\u304b\u308b": [5369, 5370], "\u9577\u304f": 5369, "opts": 5369, "\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6\u30e1\u30bd\u30c3\u30c9": 5369, "\u5fae\u8abf": 5369, "\u30de\u30eb\u30b3\u30d5": 5369, "\u3057\u3070\u3089\u304f": 5369, "\u9593\u5b9f\u884c": 5369, "\u518d\u6df7\u5408": 5369, "\u96c6\u4e2d": 5369, "mixing": 5369, "dialing": 5369, "(optimized": 5369, "\u30b3\u30b9\u30c8": 5369, "\u518d\u6df7": 5369, "multishot": 5369, "(multishot": 5369, "statevector\u30e1\u30bd\u30c3\u30c9": 5369, "\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6\u30fc": 5369, "\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9": 5369, "\u307f\u3066": [5369, 5370], "\u7126\u70b9": 5370, "\u6982\u5ff5": 5370, "vidal": 5370, "schollwoeck": 5370, "renormalization": 5370, "age": 5370, "\u4f34\u3044": 5370, "\uff08matrix": 5370, "\u306b\u3066": 5370, "\u7e2e\u7d04": 5370, "\u30c7\u30b3\u30f3\u30dd\u30fc\u30ba": 5370, "\u3059\u304b\u3082": 5370, "\u518d\u3073": 5370, "\u623b\u3057": 5370, "\u6700\u60aa": 5370, "\u6210\u9577": 5370, "\u6301\u305f": 5370, "\u307e\u307e\u3067\u3059": 5370, "\u306f\u308b\u304b": 5370, "\u30e1\u30e2\u30ea\u30fc": 5370, "\u6069\u6075": 5370, "\u52d5\u304b\u3057": 5370, "\u3053\u308c\u3089\u3059\u3079\u3066": 5370, "epr": 5370, "\u5b9f\u8cea": 5370, "\u614b\u6cd5": 5370, "\u30b3\u30fc\u30d2\u30fc": 5370, "\u676f\u98f2": 5370, "/textbook": 5372, "\u03c6m": 5372, "\u3082\u3061\u308d\u3093\u3082": 5372, "\u9032\u8868": 5372, "\u3067\u3082\u3063\u3068": 5372, "\u30b3\u30f3\u30d1\u30af\u30c8": 5372, "(\u5024": 5372, "\u6642\u30b2\u30fc\u30c8": 5372, "/miniconda": 5372, "envs": 5372, "/aqua": 5372, "/operator": 5372, "_immutable": 5372, "(primitiveop": 5372, "1terra": 5372, "6ignis": 5372, "2aqua": 5372, "2ibm": 5372}, "objects": {"": [[45, 0, 0, "-", "qiskit"]], "qiskit": [[8, 0, 0, "-", "algorithms"], [9, 0, 0, "-", "assembler"], [10, 0, 0, "-", "circuit"], [13, 0, 0, "-", "compiler"], [14, 0, 0, "-", "converters"], [15, 0, 0, "-", "dagcircuit"], [16, 0, 0, "-", "execute_function"], [17, 0, 0, "-", "extensions"], [28, 0, 0, "-", "opflow"], [30, 0, 0, "-", "primitives"], [31, 0, 0, "-", "providers"], [35, 0, 0, "-", "pulse"], [36, 0, 0, "-", "qasm"], [37, 0, 0, "-", "qasm3"], [38, 0, 0, "-", "qobj"], [39, 0, 0, "-", "qpy"], [40, 0, 0, "-", "quantum_info"], [41, 0, 0, "-", "result"], [42, 0, 0, "-", "scheduler"], [43, 0, 0, "-", "synthesis"], [46, 0, 0, "-", "tools"], [48, 0, 0, "-", "transpiler"], [53, 0, 0, "-", "utils"], [55, 0, 0, "-", "visualization"]], "qiskit.algorithms": [[65, 1, 1, "", "AlgorithmError"], [66, 2, 1, "", "AmplificationProblem"], [67, 2, 1, "", "AmplitudeAmplifier"], [69, 2, 1, "", "AmplitudeEstimation"], [75, 2, 1, "", "AmplitudeEstimationResult"], [77, 2, 1, "", "AmplitudeEstimator"], [79, 2, 1, "", "AmplitudeEstimatorResult"], [81, 2, 1, "", "Eigensolver"], [84, 2, 1, "", "EigensolverResult"], [86, 2, 1, "", "EstimationProblem"], [88, 2, 1, "", "EvolutionProblem"], [90, 2, 1, "", "EvolutionResult"], [92, 2, 1, "", "FasterAmplitudeEstimation"], [95, 2, 1, "", "FasterAmplitudeEstimationResult"], [97, 2, 1, "", "Grover"], [101, 2, 1, "", "GroverResult"], [103, 2, 1, "", "HamiltonianPhaseEstimation"], [105, 2, 1, "", "HamiltonianPhaseEstimationResult"], [108, 2, 1, "", "ImaginaryEvolver"], [110, 2, 1, "", "IterativeAmplitudeEstimation"], [113, 2, 1, "", "IterativeAmplitudeEstimationResult"], [115, 2, 1, "", "IterativePhaseEstimation"], [118, 2, 1, "", "MaximumLikelihoodAmplitudeEstimation"], [123, 2, 1, "", "MaximumLikelihoodAmplitudeEstimationResult"], [125, 2, 1, "", "MinimumEigensolver"], [128, 2, 1, "", "MinimumEigensolverResult"], [130, 2, 1, "", "NumPyEigensolver"], [133, 2, 1, "", "NumPyMinimumEigensolver"], [136, 2, 1, "", "PhaseEstimation"], [140, 2, 1, "", "PhaseEstimationResult"], [143, 2, 1, "", "PhaseEstimationScale"], [147, 2, 1, "", "QAOA"], [154, 2, 1, "", "RealEvolver"], [156, 2, 1, "", "Shor"], [160, 2, 1, "", "ShorResult"], [162, 2, 1, "", "TrotterQRTE"], [165, 2, 1, "", "VQD"], [172, 2, 1, "", "VQE"], [179, 5, 1, "", "eval_observables"], [180, 0, 0, "-", "linear_solvers"], [682, 0, 0, "-", "optimizers"]], "qiskit.algorithms.AmplificationProblem": [[66, 3, 1, "", "grover_operator"], [66, 3, 1, "", "is_good_state"], [66, 3, 1, "", "objective_qubits"], [66, 3, 1, "", "oracle"], [66, 3, 1, "", "post_processing"], [66, 3, 1, "", "state_preparation"]], "qiskit.algorithms.AmplitudeAmplifier": [[68, 4, 1, "", "amplify"]], "qiskit.algorithms.AmplitudeEstimation": [[70, 4, 1, "", "compute_confidence_interval"], [71, 4, 1, "", "compute_mle"], [72, 4, 1, "", "construct_circuit"], [73, 4, 1, "", "estimate"], [74, 4, 1, "", "evaluate_measurements"], [69, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.AmplitudeEstimationResult": [[75, 3, 1, "", "circuit_results"], [76, 4, 1, "", "combine"], [75, 3, 1, "", "confidence_interval"], [75, 3, 1, "", "confidence_interval_processed"], [75, 3, 1, "", "estimation"], [75, 3, 1, "", "estimation_processed"], [75, 3, 1, "", "max_probability"], [75, 3, 1, "", "measurements"], [75, 3, 1, "", "mle"], [75, 3, 1, "", "mle_processed"], [75, 3, 1, "", "num_evaluation_qubits"], [75, 3, 1, "", "num_oracle_queries"], [75, 3, 1, "", "post_processing"], [75, 3, 1, "", "samples"], [75, 3, 1, "", "samples_processed"], [75, 3, 1, "", "shots"]], "qiskit.algorithms.AmplitudeEstimator": [[78, 4, 1, "", "estimate"]], "qiskit.algorithms.AmplitudeEstimatorResult": [[79, 3, 1, "", "circuit_results"], [80, 4, 1, "", "combine"], [79, 3, 1, "", "confidence_interval"], [79, 3, 1, "", "confidence_interval_processed"], [79, 3, 1, "", "estimation"], [79, 3, 1, "", "estimation_processed"], [79, 3, 1, "", "num_oracle_queries"], [79, 3, 1, "", "post_processing"], [79, 3, 1, "", "shots"]], "qiskit.algorithms.Eigensolver": [[82, 4, 1, "", "compute_eigenvalues"], [83, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.EigensolverResult": [[84, 3, 1, "", "aux_operator_eigenvalues"], [85, 4, 1, "", "combine"], [84, 3, 1, "", "eigenstates"], [84, 3, 1, "", "eigenvalues"]], "qiskit.algorithms.EstimationProblem": [[86, 3, 1, "", "grover_operator"], [86, 3, 1, "", "is_good_state"], [86, 3, 1, "", "objective_qubits"], [86, 3, 1, "", "post_processing"], [87, 4, 1, "", "rescale"], [86, 3, 1, "", "state_preparation"]], "qiskit.algorithms.EvolutionProblem": [[88, 3, 1, "", "time"], [89, 4, 1, "", "validate_params"]], "qiskit.algorithms.EvolutionResult": [[91, 4, 1, "", "combine"]], "qiskit.algorithms.FasterAmplitudeEstimation": [[93, 4, 1, "", "construct_circuit"], [94, 4, 1, "", "estimate"], [92, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.FasterAmplitudeEstimationResult": [[95, 3, 1, "", "circuit_results"], [96, 4, 1, "", "combine"], [95, 3, 1, "", "confidence_interval"], [95, 3, 1, "", "confidence_interval_processed"], [95, 3, 1, "", "estimation"], [95, 3, 1, "", "estimation_processed"], [95, 3, 1, "", "num_first_state_steps"], [95, 3, 1, "", "num_oracle_queries"], [95, 3, 1, "", "num_steps"], [95, 3, 1, "", "post_processing"], [95, 3, 1, "", "shots"], [95, 3, 1, "", "success_probability"], [95, 3, 1, "", "theta_intervals"]], "qiskit.algorithms.Grover": [[98, 4, 1, "", "amplify"], [99, 4, 1, "", "construct_circuit"], [100, 4, 1, "", "optimal_num_iterations"], [97, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.GroverResult": [[101, 3, 1, "", "assignment"], [101, 3, 1, "", "circuit_results"], [102, 4, 1, "", "combine"], [101, 3, 1, "", "iterations"], [101, 3, 1, "", "max_probability"], [101, 3, 1, "", "oracle_evaluation"], [101, 3, 1, "", "top_measurement"]], "qiskit.algorithms.HamiltonianPhaseEstimation": [[104, 4, 1, "", "estimate"]], "qiskit.algorithms.HamiltonianPhaseEstimationResult": [[106, 4, 1, "", "combine"], [107, 4, 1, "", "filter_phases"], [105, 3, 1, "", "most_likely_eigenvalue"], [105, 3, 1, "", "phase"]], "qiskit.algorithms.ImaginaryEvolver": [[109, 4, 1, "", "evolve"]], "qiskit.algorithms.IterativeAmplitudeEstimation": [[111, 4, 1, "", "construct_circuit"], [110, 3, 1, "", "epsilon_target"], [112, 4, 1, "", "estimate"], [110, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.IterativeAmplitudeEstimationResult": [[113, 3, 1, "", "alpha"], [113, 3, 1, "", "circuit_results"], [114, 4, 1, "", "combine"], [113, 3, 1, "", "confidence_interval"], [113, 3, 1, "", "confidence_interval_processed"], [113, 3, 1, "", "epsilon_estimated"], [113, 3, 1, "", "epsilon_estimated_processed"], [113, 3, 1, "", "epsilon_target"], [113, 3, 1, "", "estimate_intervals"], [113, 3, 1, "", "estimation"], [113, 3, 1, "", "estimation_processed"], [113, 3, 1, "", "num_oracle_queries"], [113, 3, 1, "", "post_processing"], [113, 3, 1, "", "powers"], [113, 3, 1, "", "ratios"], [113, 3, 1, "", "shots"], [113, 3, 1, "", "theta_intervals"]], "qiskit.algorithms.IterativePhaseEstimation": [[116, 4, 1, "", "construct_circuit"], [117, 4, 1, "", "estimate"]], "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimation": [[119, 4, 1, "", "compute_confidence_interval"], [120, 4, 1, "", "compute_mle"], [121, 4, 1, "", "construct_circuits"], [122, 4, 1, "", "estimate"], [118, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.MaximumLikelihoodAmplitudeEstimationResult": [[123, 3, 1, "", "circuit_results"], [124, 4, 1, "", "combine"], [123, 3, 1, "", "confidence_interval"], [123, 3, 1, "", "confidence_interval_processed"], [123, 3, 1, "", "estimation"], [123, 3, 1, "", "estimation_processed"], [123, 3, 1, "", "evaluation_schedule"], [123, 3, 1, "", "fisher_information"], [123, 3, 1, "", "good_counts"], [123, 3, 1, "", "minimizer"], [123, 3, 1, "", "num_oracle_queries"], [123, 3, 1, "", "post_processing"], [123, 3, 1, "", "shots"], [123, 3, 1, "", "theta"]], "qiskit.algorithms.MinimumEigensolver": [[126, 4, 1, "", "compute_minimum_eigenvalue"], [127, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.MinimumEigensolverResult": [[128, 3, 1, "", "aux_operator_eigenvalues"], [129, 4, 1, "", "combine"], [128, 3, 1, "", "eigenstate"], [128, 3, 1, "", "eigenvalue"]], "qiskit.algorithms.NumPyEigensolver": [[131, 4, 1, "", "compute_eigenvalues"], [130, 3, 1, "", "filter_criterion"], [130, 3, 1, "", "k"], [132, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.NumPyMinimumEigensolver": [[134, 4, 1, "", "compute_minimum_eigenvalue"], [133, 3, 1, "", "filter_criterion"], [135, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.PhaseEstimation": [[137, 4, 1, "", "construct_circuit"], [138, 4, 1, "", "estimate"], [139, 4, 1, "", "estimate_from_pe_circuit"]], "qiskit.algorithms.PhaseEstimationResult": [[140, 3, 1, "", "circuit_result"], [141, 4, 1, "", "combine"], [142, 4, 1, "", "filter_phases"], [140, 3, 1, "", "most_likely_phase"], [140, 3, 1, "", "phase"], [140, 3, 1, "", "phases"]], "qiskit.algorithms.PhaseEstimationScale": [[144, 4, 1, "", "from_pauli_sum"], [143, 3, 1, "", "scale"], [145, 4, 1, "", "scale_phase"], [146, 4, 1, "", "scale_phases"]], "qiskit.algorithms.QAOA": [[147, 3, 1, "", "ansatz"], [147, 3, 1, "", "callback"], [148, 4, 1, "", "compute_minimum_eigenvalue"], [149, 4, 1, "", "construct_circuit"], [150, 4, 1, "", "construct_expectation"], [147, 3, 1, "", "expectation"], [151, 4, 1, "", "get_energy_evaluation"], [147, 3, 1, "", "gradient"], [147, 3, 1, "", "include_custom"], [147, 3, 1, "", "initial_point"], [147, 3, 1, "", "initial_state"], [147, 3, 1, "", "max_evals_grouped"], [147, 3, 1, "", "mixer"], [147, 3, 1, "", "optimizer"], [152, 4, 1, "", "print_settings"], [147, 3, 1, "", "quantum_instance"], [147, 3, 1, "", "setting"], [153, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.RealEvolver": [[155, 4, 1, "", "evolve"]], "qiskit.algorithms.Shor": [[157, 4, 1, "", "construct_circuit"], [158, 4, 1, "", "factor"], [159, 4, 1, "", "modinv"], [156, 3, 1, "", "quantum_instance"]], "qiskit.algorithms.ShorResult": [[161, 4, 1, "", "combine"], [160, 3, 1, "", "factors"], [160, 3, 1, "", "successful_counts"], [160, 3, 1, "", "total_counts"]], "qiskit.algorithms.TrotterQRTE": [[163, 4, 1, "", "evolve"], [162, 3, 1, "", "expectation"], [162, 3, 1, "", "product_formula"], [162, 3, 1, "", "quantum_instance"], [164, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.VQD": [[165, 3, 1, "", "ansatz"], [165, 3, 1, "", "callback"], [166, 4, 1, "", "compute_eigenvalues"], [167, 4, 1, "", "construct_circuit"], [168, 4, 1, "", "construct_expectation"], [165, 3, 1, "", "expectation"], [169, 4, 1, "", "get_energy_evaluation"], [165, 3, 1, "", "gradient"], [165, 3, 1, "", "include_custom"], [165, 3, 1, "", "initial_point"], [165, 3, 1, "", "max_evals_grouped"], [165, 3, 1, "", "optimizer"], [170, 4, 1, "", "print_settings"], [165, 3, 1, "", "quantum_instance"], [165, 3, 1, "", "setting"], [171, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.VQE": [[172, 3, 1, "", "ansatz"], [172, 3, 1, "", "callback"], [173, 4, 1, "", "compute_minimum_eigenvalue"], [174, 4, 1, "", "construct_circuit"], [175, 4, 1, "", "construct_expectation"], [172, 3, 1, "", "expectation"], [176, 4, 1, "", "get_energy_evaluation"], [172, 3, 1, "", "gradient"], [172, 3, 1, "", "include_custom"], [172, 3, 1, "", "initial_point"], [172, 3, 1, "", "max_evals_grouped"], [172, 3, 1, "", "optimizer"], [177, 4, 1, "", "print_settings"], [172, 3, 1, "", "quantum_instance"], [172, 3, 1, "", "setting"], [178, 4, 1, "", "supports_aux_operators"]], "qiskit.algorithms.linear_solvers": [[181, 2, 1, "", "AbsoluteAverage"], [186, 2, 1, "", "HHL"], [189, 2, 1, "", "LinearSolver"], [191, 2, 1, "", "LinearSolverResult"], [193, 2, 1, "", "LinearSystemMatrix"], [352, 2, 1, "", "LinearSystemObservable"], [357, 2, 1, "", "MatrixFunctional"], [362, 2, 1, "", "NumPyLinearSolver"], [364, 2, 1, "", "NumPyMatrix"], [523, 2, 1, "", "TridiagonalToeplitz"]], "qiskit.algorithms.linear_solvers.AbsoluteAverage": [[182, 4, 1, "", "evaluate_classically"], [183, 4, 1, "", "observable"], [184, 4, 1, "", "observable_circuit"], [185, 4, 1, "", "post_processing"]], "qiskit.algorithms.linear_solvers.HHL": [[187, 4, 1, "", "construct_circuit"], [186, 3, 1, "", "expectation"], [186, 3, 1, "", "quantum_instance"], [186, 3, 1, "", "scaling"], [188, 4, 1, "", "solve"]], "qiskit.algorithms.linear_solvers.LinearSolver": [[190, 4, 1, "", "solve"]], "qiskit.algorithms.linear_solvers.LinearSolverResult": [[191, 3, 1, "", "circuit_results"], [192, 4, 1, "", "combine"], [191, 3, 1, "", "euclidean_norm"], [191, 3, 1, "", "observable"], [191, 3, 1, "", "state"]], "qiskit.algorithms.linear_solvers.LinearSystemMatrix": [[194, 4, 1, "", "add_bits"], [195, 4, 1, "", "add_calibration"], [196, 4, 1, "", "add_register"], [193, 3, 1, "", "ancillas"], [197, 4, 1, "", "append"], [198, 4, 1, "", "assign_parameters"], [199, 4, 1, "", "barrier"], [200, 4, 1, "", "bind_parameters"], [201, 4, 1, "", "break_loop"], [193, 3, 1, "", "calibrations"], [202, 4, 1, "", "cast"], [203, 4, 1, "", "cbit_argument_conversion"], [204, 4, 1, "", "ccx"], [205, 4, 1, "", "ch"], [193, 3, 1, "", "clbits"], [206, 4, 1, "", "clear"], [207, 4, 1, "", "cls_instances"], [208, 4, 1, "", "cls_prefix"], [209, 4, 1, "", "cnot"], [210, 4, 1, "", "combine"], [211, 4, 1, "", "compose"], [212, 4, 1, "", "condition_bounds"], [213, 4, 1, "", "continue_loop"], [214, 4, 1, "", "control"], [215, 4, 1, "", "copy"], [216, 4, 1, "", "copy_empty_like"], [217, 4, 1, "", "count_ops"], [218, 4, 1, "", "cp"], [219, 4, 1, "", "crx"], [220, 4, 1, "", "cry"], [221, 4, 1, "", "crz"], [222, 4, 1, "", "cswap"], [223, 4, 1, "", "csx"], [224, 4, 1, "", "cu"], [225, 4, 1, "", "cu1"], [226, 4, 1, "", "cu3"], [227, 4, 1, "", "cx"], [228, 4, 1, "", "cy"], [229, 4, 1, "", "cz"], [193, 3, 1, "", "data"], [230, 4, 1, "", "dcx"], [231, 4, 1, "", "decompose"], [232, 4, 1, "", "delay"], [233, 4, 1, "", "depth"], [234, 4, 1, "", "diagonal"], [235, 4, 1, "", "draw"], [236, 4, 1, "", "ecr"], [237, 4, 1, "", "eigs_bounds"], [193, 3, 1, "", "evolution_time"], [238, 4, 1, "", "extend"], [193, 3, 1, "", "extension_lib"], [239, 4, 1, "", "find_bit"], [240, 4, 1, "", "for_loop"], [241, 4, 1, "", "fredkin"], [242, 4, 1, "", "from_qasm_file"], [243, 4, 1, "", "from_qasm_str"], [244, 4, 1, "", "get_instructions"], [193, 3, 1, "", "global_phase"], [245, 4, 1, "", "h"], [246, 4, 1, "", "hamiltonian"], [247, 4, 1, "", "has_calibration_for"], [248, 4, 1, "", "has_register"], [193, 3, 1, "", "header"], [249, 4, 1, "", "i"], [250, 4, 1, "", "id"], [251, 4, 1, "", "if_else"], [252, 4, 1, "", "if_test"], [253, 4, 1, "", "initialize"], [193, 3, 1, "", "instances"], [254, 4, 1, "", "inverse"], [255, 4, 1, "", "iso"], [256, 4, 1, "", "isometry"], [257, 4, 1, "", "iswap"], [258, 4, 1, "", "mcp"], [259, 4, 1, "", "mcrx"], [260, 4, 1, "", "mcry"], [261, 4, 1, "", "mcrz"], [262, 4, 1, "", "mct"], [263, 4, 1, "", "mcu1"], [264, 4, 1, "", "mcx"], [265, 4, 1, "", "measure"], [266, 4, 1, "", "measure_active"], [267, 4, 1, "", "measure_all"], [193, 3, 1, "", "metadata"], [268, 4, 1, "", "ms"], [193, 3, 1, "", "num_ancillas"], [193, 3, 1, "", "num_clbits"], [269, 4, 1, "", "num_connected_components"], [270, 4, 1, "", "num_nonlocal_gates"], [193, 3, 1, "", "num_parameters"], [193, 3, 1, "", "num_qubits"], [193, 3, 1, "", "num_state_qubits"], [271, 4, 1, "", "num_tensor_factors"], [272, 4, 1, "", "num_unitary_factors"], [193, 3, 1, "", "op_start_times"], [273, 4, 1, "", "p"], [193, 3, 1, "", "parameters"], [274, 4, 1, "", "pauli"], [275, 4, 1, "", "power"], [193, 3, 1, "", "prefix"], [276, 4, 1, "", "prepare_state"], [277, 4, 1, "", "qasm"], [278, 4, 1, "", "qbit_argument_conversion"], [193, 3, 1, "", "qregs"], [279, 4, 1, "", "qubit_duration"], [280, 4, 1, "", "qubit_start_time"], [281, 4, 1, "", "qubit_stop_time"], [193, 3, 1, "", "qubits"], [282, 4, 1, "", "r"], [283, 4, 1, "", "rcccx"], [284, 4, 1, "", "rccx"], [285, 4, 1, "", "remove_final_measurements"], [286, 4, 1, "", "repeat"], [287, 4, 1, "", "reset"], [288, 4, 1, "", "reverse_bits"], [289, 4, 1, "", "reverse_ops"], [290, 4, 1, "", "rv"], [291, 4, 1, "", "rx"], [292, 4, 1, "", "rxx"], [293, 4, 1, "", "ry"], [294, 4, 1, "", "ryy"], [295, 4, 1, "", "rz"], [296, 4, 1, "", "rzx"], [297, 4, 1, "", "rzz"], [298, 4, 1, "", "s"], [299, 4, 1, "", "save_amplitudes"], [300, 4, 1, "", "save_amplitudes_squared"], [301, 4, 1, "", "save_clifford"], [302, 4, 1, "", "save_density_matrix"], [303, 4, 1, "", "save_expectation_value"], [304, 4, 1, "", "save_expectation_value_variance"], [305, 4, 1, "", "save_matrix_product_state"], [306, 4, 1, "", "save_probabilities"], [307, 4, 1, "", "save_probabilities_dict"], [308, 4, 1, "", "save_stabilizer"], [309, 4, 1, "", "save_state"], [310, 4, 1, "", "save_statevector"], [311, 4, 1, "", "save_statevector_dict"], [312, 4, 1, "", "save_superop"], [313, 4, 1, "", "save_unitary"], [314, 4, 1, "", "sdg"], [315, 4, 1, "", "set_density_matrix"], [316, 4, 1, "", "set_matrix_product_state"], [317, 4, 1, "", "set_stabilizer"], [318, 4, 1, "", "set_statevector"], [319, 4, 1, "", "set_superop"], [320, 4, 1, "", "set_unitary"], [321, 4, 1, "", "size"], [322, 4, 1, "", "snapshot"], [323, 4, 1, "", "snapshot_density_matrix"], [324, 4, 1, "", "snapshot_expectation_value"], [325, 4, 1, "", "snapshot_probabilities"], [326, 4, 1, "", "snapshot_stabilizer"], [327, 4, 1, "", "snapshot_statevector"], [328, 4, 1, "", "squ"], [329, 4, 1, "", "swap"], [330, 4, 1, "", "sx"], [331, 4, 1, "", "sxdg"], [332, 4, 1, "", "t"], [333, 4, 1, "", "tdg"], [334, 4, 1, "", "tensor"], [335, 4, 1, "", "to_gate"], [336, 4, 1, "", "to_instruction"], [337, 4, 1, "", "toffoli"], [193, 3, 1, "", "tolerance"], [338, 4, 1, "", "u"], [339, 4, 1, "", "u1"], [340, 4, 1, "", "u2"], [341, 4, 1, "", "u3"], [342, 4, 1, "", "uc"], [343, 4, 1, "", "ucrx"], [344, 4, 1, "", "ucry"], [345, 4, 1, "", "ucrz"], [346, 4, 1, "", "unitary"], [347, 4, 1, "", "while_loop"], [348, 4, 1, "", "width"], [349, 4, 1, "", "x"], [350, 4, 1, "", "y"], [351, 4, 1, "", "z"]], "qiskit.algorithms.linear_solvers.LinearSystemObservable": [[353, 4, 1, "", "evaluate_classically"], [354, 4, 1, "", "observable"], [355, 4, 1, "", "observable_circuit"], [356, 4, 1, "", "post_processing"]], "qiskit.algorithms.linear_solvers.MatrixFunctional": [[358, 4, 1, "", "evaluate_classically"], [359, 4, 1, "", "observable"], [360, 4, 1, "", "observable_circuit"], [361, 4, 1, "", "post_processing"]], "qiskit.algorithms.linear_solvers.NumPyLinearSolver": [[363, 4, 1, "", "solve"]], "qiskit.algorithms.linear_solvers.NumPyMatrix": [[365, 4, 1, "", "add_bits"], [366, 4, 1, "", "add_calibration"], [367, 4, 1, "", "add_register"], [364, 3, 1, "", "ancillas"], [368, 4, 1, "", "append"], [369, 4, 1, "", "assign_parameters"], [370, 4, 1, "", "barrier"], [371, 4, 1, "", "bind_parameters"], [372, 4, 1, "", "break_loop"], [364, 3, 1, "", "calibrations"], [373, 4, 1, "", "cast"], [374, 4, 1, "", "cbit_argument_conversion"], [375, 4, 1, "", "ccx"], [376, 4, 1, "", "ch"], [364, 3, 1, "", "clbits"], [377, 4, 1, "", "clear"], [378, 4, 1, "", "cls_instances"], [379, 4, 1, "", "cls_prefix"], [380, 4, 1, "", "cnot"], [381, 4, 1, "", "combine"], [382, 4, 1, "", "compose"], [383, 4, 1, "", "condition_bounds"], [384, 4, 1, "", "continue_loop"], [385, 4, 1, "", "control"], [386, 4, 1, "", "copy"], [387, 4, 1, "", "copy_empty_like"], [388, 4, 1, "", "count_ops"], [389, 4, 1, "", "cp"], [390, 4, 1, "", "crx"], [391, 4, 1, "", "cry"], [392, 4, 1, "", "crz"], [393, 4, 1, "", "cswap"], [394, 4, 1, "", "csx"], [395, 4, 1, "", "cu"], [396, 4, 1, "", "cu1"], [397, 4, 1, "", "cu3"], [398, 4, 1, "", "cx"], [399, 4, 1, "", "cy"], [400, 4, 1, "", "cz"], [364, 3, 1, "", "data"], [401, 4, 1, "", "dcx"], [402, 4, 1, "", "decompose"], [403, 4, 1, "", "delay"], [404, 4, 1, "", "depth"], [405, 4, 1, "", "diagonal"], [406, 4, 1, "", "draw"], [407, 4, 1, "", "ecr"], [408, 4, 1, "", "eigs_bounds"], [364, 3, 1, "", "evolution_time"], [409, 4, 1, "", "extend"], [364, 3, 1, "", "extension_lib"], [410, 4, 1, "", "find_bit"], [411, 4, 1, "", "for_loop"], [412, 4, 1, "", "fredkin"], [413, 4, 1, "", "from_qasm_file"], [414, 4, 1, "", "from_qasm_str"], [415, 4, 1, "", "get_instructions"], [364, 3, 1, "", "global_phase"], [416, 4, 1, "", "h"], [417, 4, 1, "", "hamiltonian"], [418, 4, 1, "", "has_calibration_for"], [419, 4, 1, "", "has_register"], [364, 3, 1, "", "header"], [420, 4, 1, "", "i"], [421, 4, 1, "", "id"], [422, 4, 1, "", "if_else"], [423, 4, 1, "", "if_test"], [424, 4, 1, "", "initialize"], [364, 3, 1, "", "instances"], [425, 4, 1, "", "inverse"], [426, 4, 1, "", "iso"], [427, 4, 1, "", "isometry"], [428, 4, 1, "", "iswap"], [364, 3, 1, "", "matrix"], [429, 4, 1, "", "mcp"], [430, 4, 1, "", "mcrx"], [431, 4, 1, "", "mcry"], [432, 4, 1, "", "mcrz"], [433, 4, 1, "", "mct"], [434, 4, 1, "", "mcu1"], [435, 4, 1, "", "mcx"], [436, 4, 1, "", "measure"], [437, 4, 1, "", "measure_active"], [438, 4, 1, "", "measure_all"], [364, 3, 1, "", "metadata"], [439, 4, 1, "", "ms"], [364, 3, 1, "", "num_ancillas"], [364, 3, 1, "", "num_clbits"], [440, 4, 1, "", "num_connected_components"], [441, 4, 1, "", "num_nonlocal_gates"], [364, 3, 1, "", "num_parameters"], [364, 3, 1, "", "num_qubits"], [364, 3, 1, "", "num_state_qubits"], [442, 4, 1, "", "num_tensor_factors"], [443, 4, 1, "", "num_unitary_factors"], [364, 3, 1, "", "op_start_times"], [444, 4, 1, "", "p"], [364, 3, 1, "", "parameters"], [445, 4, 1, "", "pauli"], [446, 4, 1, "", "power"], [364, 3, 1, "", "prefix"], [447, 4, 1, "", "prepare_state"], [448, 4, 1, "", "qasm"], [449, 4, 1, "", "qbit_argument_conversion"], [364, 3, 1, "", "qregs"], [450, 4, 1, "", "qubit_duration"], [451, 4, 1, "", "qubit_start_time"], [452, 4, 1, "", "qubit_stop_time"], [364, 3, 1, "", "qubits"], [453, 4, 1, "", "r"], [454, 4, 1, "", "rcccx"], [455, 4, 1, "", "rccx"], [456, 4, 1, "", "remove_final_measurements"], [457, 4, 1, "", "repeat"], [458, 4, 1, "", "reset"], [459, 4, 1, "", "reverse_bits"], [460, 4, 1, "", "reverse_ops"], [461, 4, 1, "", "rv"], [462, 4, 1, "", "rx"], [463, 4, 1, "", "rxx"], [464, 4, 1, "", "ry"], [465, 4, 1, "", "ryy"], [466, 4, 1, "", "rz"], [467, 4, 1, "", "rzx"], [468, 4, 1, "", "rzz"], [469, 4, 1, "", "s"], [470, 4, 1, "", "save_amplitudes"], [471, 4, 1, "", "save_amplitudes_squared"], [472, 4, 1, "", "save_clifford"], [473, 4, 1, "", "save_density_matrix"], [474, 4, 1, "", "save_expectation_value"], [475, 4, 1, "", "save_expectation_value_variance"], [476, 4, 1, "", "save_matrix_product_state"], [477, 4, 1, "", "save_probabilities"], [478, 4, 1, "", "save_probabilities_dict"], [479, 4, 1, "", "save_stabilizer"], [480, 4, 1, "", "save_state"], [481, 4, 1, "", "save_statevector"], [482, 4, 1, "", "save_statevector_dict"], [483, 4, 1, "", "save_superop"], [484, 4, 1, "", "save_unitary"], [485, 4, 1, "", "sdg"], [486, 4, 1, "", "set_density_matrix"], [487, 4, 1, "", "set_matrix_product_state"], [488, 4, 1, "", "set_stabilizer"], [489, 4, 1, "", "set_statevector"], [490, 4, 1, "", "set_superop"], [491, 4, 1, "", "set_unitary"], [492, 4, 1, "", "size"], [493, 4, 1, "", "snapshot"], [494, 4, 1, "", "snapshot_density_matrix"], [495, 4, 1, "", "snapshot_expectation_value"], [496, 4, 1, "", "snapshot_probabilities"], [497, 4, 1, "", "snapshot_stabilizer"], [498, 4, 1, "", "snapshot_statevector"], [499, 4, 1, "", "squ"], [500, 4, 1, "", "swap"], [501, 4, 1, "", "sx"], [502, 4, 1, "", "sxdg"], [503, 4, 1, "", "t"], [504, 4, 1, "", "tdg"], [505, 4, 1, "", "tensor"], [506, 4, 1, "", "to_gate"], [507, 4, 1, "", "to_instruction"], [508, 4, 1, "", "toffoli"], [364, 3, 1, "", "tolerance"], [509, 4, 1, "", "u"], [510, 4, 1, "", "u1"], [511, 4, 1, "", "u2"], [512, 4, 1, "", "u3"], [513, 4, 1, "", "uc"], [514, 4, 1, "", "ucrx"], [515, 4, 1, "", "ucry"], [516, 4, 1, "", "ucrz"], [517, 4, 1, "", "unitary"], [518, 4, 1, "", "while_loop"], [519, 4, 1, "", "width"], [520, 4, 1, "", "x"], [521, 4, 1, "", "y"], [522, 4, 1, "", "z"]], "qiskit.algorithms.linear_solvers.TridiagonalToeplitz": [[524, 4, 1, "", "add_bits"], [525, 4, 1, "", "add_calibration"], [526, 4, 1, "", "add_register"], [523, 3, 1, "", "ancillas"], [527, 4, 1, "", "append"], [528, 4, 1, "", "assign_parameters"], [529, 4, 1, "", "barrier"], [530, 4, 1, "", "bind_parameters"], [531, 4, 1, "", "break_loop"], [523, 3, 1, "", "calibrations"], [532, 4, 1, "", "cast"], [533, 4, 1, "", "cbit_argument_conversion"], [534, 4, 1, "", "ccx"], [535, 4, 1, "", "ch"], [523, 3, 1, "", "clbits"], [536, 4, 1, "", "clear"], [537, 4, 1, "", "cls_instances"], [538, 4, 1, "", "cls_prefix"], [539, 4, 1, "", "cnot"], [540, 4, 1, "", "combine"], [541, 4, 1, "", "compose"], [542, 4, 1, "", "condition_bounds"], [543, 4, 1, "", "continue_loop"], [544, 4, 1, "", "control"], [545, 4, 1, "", "copy"], [546, 4, 1, "", "copy_empty_like"], [547, 4, 1, "", "count_ops"], [548, 4, 1, "", "cp"], [549, 4, 1, "", "crx"], [550, 4, 1, "", "cry"], [551, 4, 1, "", "crz"], [552, 4, 1, "", "cswap"], [553, 4, 1, "", "csx"], [554, 4, 1, "", "cu"], [555, 4, 1, "", "cu1"], [556, 4, 1, "", "cu3"], [557, 4, 1, "", "cx"], [558, 4, 1, "", "cy"], [559, 4, 1, "", "cz"], [523, 3, 1, "", "data"], [560, 4, 1, "", "dcx"], [561, 4, 1, "", "decompose"], [562, 4, 1, "", "delay"], [563, 4, 1, "", "depth"], [564, 4, 1, "", "diagonal"], [565, 4, 1, "", "draw"], [566, 4, 1, "", "ecr"], [567, 4, 1, "", "eigs_bounds"], [523, 3, 1, "", "evolution_time"], [568, 4, 1, "", "extend"], [523, 3, 1, "", "extension_lib"], [569, 4, 1, "", "find_bit"], [570, 4, 1, "", "for_loop"], [571, 4, 1, "", "fredkin"], [572, 4, 1, "", "from_qasm_file"], [573, 4, 1, "", "from_qasm_str"], [574, 4, 1, "", "get_instructions"], [523, 3, 1, "", "global_phase"], [575, 4, 1, "", "h"], [576, 4, 1, "", "hamiltonian"], [577, 4, 1, "", "has_calibration_for"], [578, 4, 1, "", "has_register"], [523, 3, 1, "", "header"], [579, 4, 1, "", "i"], [580, 4, 1, "", "id"], [581, 4, 1, "", "if_else"], [582, 4, 1, "", "if_test"], [583, 4, 1, "", "initialize"], [523, 3, 1, "", "instances"], [584, 4, 1, "", "inverse"], [585, 4, 1, "", "iso"], [586, 4, 1, "", "isometry"], [587, 4, 1, "", "iswap"], [523, 3, 1, "", "main_diag"], [523, 3, 1, "", "matrix"], [588, 4, 1, "", "mcp"], [589, 4, 1, "", "mcrx"], [590, 4, 1, "", "mcry"], [591, 4, 1, "", "mcrz"], [592, 4, 1, "", "mct"], [593, 4, 1, "", "mcu1"], [594, 4, 1, "", "mcx"], [595, 4, 1, "", "measure"], [596, 4, 1, "", "measure_active"], [597, 4, 1, "", "measure_all"], [523, 3, 1, "", "metadata"], [598, 4, 1, "", "ms"], [523, 3, 1, "", "num_ancillas"], [523, 3, 1, "", "num_clbits"], [599, 4, 1, "", "num_connected_components"], [600, 4, 1, "", "num_nonlocal_gates"], [523, 3, 1, "", "num_parameters"], [523, 3, 1, "", "num_qubits"], [523, 3, 1, "", "num_state_qubits"], [601, 4, 1, "", "num_tensor_factors"], [602, 4, 1, "", "num_unitary_factors"], [523, 3, 1, "", "off_diag"], [523, 3, 1, "", "op_start_times"], [603, 4, 1, "", "p"], [523, 3, 1, "", "parameters"], [604, 4, 1, "", "pauli"], [605, 4, 1, "", "power"], [523, 3, 1, "", "prefix"], [606, 4, 1, "", "prepare_state"], [607, 4, 1, "", "qasm"], [608, 4, 1, "", "qbit_argument_conversion"], [523, 3, 1, "", "qregs"], [609, 4, 1, "", "qubit_duration"], [610, 4, 1, "", "qubit_start_time"], [611, 4, 1, "", "qubit_stop_time"], [523, 3, 1, "", "qubits"], [612, 4, 1, "", "r"], [613, 4, 1, "", "rcccx"], [614, 4, 1, "", "rccx"], [615, 4, 1, "", "remove_final_measurements"], [616, 4, 1, "", "repeat"], [617, 4, 1, "", "reset"], [618, 4, 1, "", "reverse_bits"], [619, 4, 1, "", "reverse_ops"], [620, 4, 1, "", "rv"], [621, 4, 1, "", "rx"], [622, 4, 1, "", "rxx"], [623, 4, 1, "", "ry"], [624, 4, 1, "", "ryy"], [625, 4, 1, "", "rz"], [626, 4, 1, "", "rzx"], [627, 4, 1, "", "rzz"], [628, 4, 1, "", "s"], [629, 4, 1, "", "save_amplitudes"], [630, 4, 1, "", "save_amplitudes_squared"], [631, 4, 1, "", "save_clifford"], [632, 4, 1, "", "save_density_matrix"], [633, 4, 1, "", "save_expectation_value"], [634, 4, 1, "", "save_expectation_value_variance"], [635, 4, 1, "", "save_matrix_product_state"], [636, 4, 1, "", "save_probabilities"], [637, 4, 1, "", "save_probabilities_dict"], [638, 4, 1, "", "save_stabilizer"], [639, 4, 1, "", "save_state"], [640, 4, 1, "", "save_statevector"], [641, 4, 1, "", "save_statevector_dict"], [642, 4, 1, "", "save_superop"], [643, 4, 1, "", "save_unitary"], [644, 4, 1, "", "sdg"], [645, 4, 1, "", "set_density_matrix"], [646, 4, 1, "", "set_matrix_product_state"], [647, 4, 1, "", "set_stabilizer"], [648, 4, 1, "", "set_statevector"], [649, 4, 1, "", "set_superop"], [650, 4, 1, "", "set_unitary"], [651, 4, 1, "", "size"], [652, 4, 1, "", "snapshot"], [653, 4, 1, "", "snapshot_density_matrix"], [654, 4, 1, "", "snapshot_expectation_value"], [655, 4, 1, "", "snapshot_probabilities"], [656, 4, 1, "", "snapshot_stabilizer"], [657, 4, 1, "", "snapshot_statevector"], [658, 4, 1, "", "squ"], [659, 4, 1, "", "swap"], [660, 4, 1, "", "sx"], [661, 4, 1, "", "sxdg"], [662, 4, 1, "", "t"], [663, 4, 1, "", "tdg"], [664, 4, 1, "", "tensor"], [665, 4, 1, "", "to_gate"], [666, 4, 1, "", "to_instruction"], [667, 4, 1, "", "toffoli"], [523, 3, 1, "", "tolerance"], [523, 3, 1, "", "trotter_steps"], [668, 4, 1, "", "u"], [669, 4, 1, "", "u1"], [670, 4, 1, "", "u2"], [671, 4, 1, "", "u3"], [672, 4, 1, "", "uc"], [673, 4, 1, "", "ucrx"], [674, 4, 1, "", "ucry"], [675, 4, 1, "", "ucrz"], [676, 4, 1, "", "unitary"], [677, 4, 1, "", "while_loop"], [678, 4, 1, "", "width"], [679, 4, 1, "", "x"], [680, 4, 1, "", "y"], [681, 4, 1, "", "z"]], "qiskit.algorithms.optimizers": [[683, 2, 1, "", "ADAM"], [693, 2, 1, "", "AQGD"], [701, 2, 1, "", "BOBYQA"], [709, 2, 1, "", "CG"], [717, 2, 1, "", "COBYLA"], [725, 2, 1, "", "CRS"], [734, 2, 1, "", "DIRECT_L"], [743, 2, 1, "", "DIRECT_L_RAND"], [752, 2, 1, "", "ESCH"], [761, 2, 1, "", "GSLS"], [773, 2, 1, "", "GradientDescent"], [781, 2, 1, "", "IMFIL"], [789, 2, 1, "", "ISRES"], [798, 2, 1, "", "L_BFGS_B"], [806, 2, 1, "", "NELDER_MEAD"], [814, 2, 1, "", "NFT"], [822, 2, 1, "", "Optimizer"], [830, 2, 1, "", "OptimizerResult"], [832, 2, 1, "", "OptimizerSupportLevel"], [833, 2, 1, "", "POWELL"], [841, 2, 1, "", "P_BFGS"], [849, 2, 1, "", "QNSPSA"], [861, 2, 1, "", "SLSQP"], [869, 2, 1, "", "SNOBFIT"], [877, 2, 1, "", "SPSA"], [888, 2, 1, "", "SciPyOptimizer"], [896, 2, 1, "", "TNC"], [904, 2, 1, "", "UMDA"], [912, 0, 0, "-", "nlopts"]], "qiskit.algorithms.optimizers.ADAM": [[683, 3, 1, "", "bounds_support_level"], [684, 4, 1, "", "get_support_level"], [685, 4, 1, "", "gradient_num_diff"], [683, 3, 1, "", "gradient_support_level"], [683, 3, 1, "", "initial_point_support_level"], [683, 3, 1, "", "is_bounds_ignored"], [683, 3, 1, "", "is_bounds_required"], [683, 3, 1, "", "is_bounds_supported"], [683, 3, 1, "", "is_gradient_ignored"], [683, 3, 1, "", "is_gradient_required"], [683, 3, 1, "", "is_gradient_supported"], [683, 3, 1, "", "is_initial_point_ignored"], [683, 3, 1, "", "is_initial_point_required"], [683, 3, 1, "", "is_initial_point_supported"], [686, 4, 1, "", "load_params"], [687, 4, 1, "", "minimize"], [688, 4, 1, "", "print_options"], [689, 4, 1, "", "save_params"], [690, 4, 1, "", "set_max_evals_grouped"], [691, 4, 1, "", "set_options"], [683, 3, 1, "", "setting"], [683, 3, 1, "", "settings"], [692, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.AQGD": [[693, 3, 1, "", "bounds_support_level"], [694, 4, 1, "", "get_support_level"], [695, 4, 1, "", "gradient_num_diff"], [693, 3, 1, "", "gradient_support_level"], [693, 3, 1, "", "initial_point_support_level"], [693, 3, 1, "", "is_bounds_ignored"], [693, 3, 1, "", "is_bounds_required"], [693, 3, 1, "", "is_bounds_supported"], [693, 3, 1, "", "is_gradient_ignored"], [693, 3, 1, "", "is_gradient_required"], [693, 3, 1, "", "is_gradient_supported"], [693, 3, 1, "", "is_initial_point_ignored"], [693, 3, 1, "", "is_initial_point_required"], [693, 3, 1, "", "is_initial_point_supported"], [696, 4, 1, "", "minimize"], [697, 4, 1, "", "print_options"], [698, 4, 1, "", "set_max_evals_grouped"], [699, 4, 1, "", "set_options"], [693, 3, 1, "", "setting"], [693, 3, 1, "", "settings"], [700, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.BOBYQA": [[701, 3, 1, "", "bounds_support_level"], [702, 4, 1, "", "get_support_level"], [703, 4, 1, "", "gradient_num_diff"], [701, 3, 1, "", "gradient_support_level"], [701, 3, 1, "", "initial_point_support_level"], [701, 3, 1, "", "is_bounds_ignored"], [701, 3, 1, "", "is_bounds_required"], [701, 3, 1, "", "is_bounds_supported"], [701, 3, 1, "", "is_gradient_ignored"], [701, 3, 1, "", "is_gradient_required"], [701, 3, 1, "", "is_gradient_supported"], [701, 3, 1, "", "is_initial_point_ignored"], [701, 3, 1, "", "is_initial_point_required"], [701, 3, 1, "", "is_initial_point_supported"], [704, 4, 1, "", "minimize"], [705, 4, 1, "", "print_options"], [706, 4, 1, "", "set_max_evals_grouped"], [707, 4, 1, "", "set_options"], [701, 3, 1, "", "setting"], [701, 3, 1, "", "settings"], [708, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.CG": [[709, 3, 1, "", "bounds_support_level"], [710, 4, 1, "", "get_support_level"], [711, 4, 1, "", "gradient_num_diff"], [709, 3, 1, "", "gradient_support_level"], [709, 3, 1, "", "initial_point_support_level"], [709, 3, 1, "", "is_bounds_ignored"], [709, 3, 1, "", "is_bounds_required"], [709, 3, 1, "", "is_bounds_supported"], [709, 3, 1, "", "is_gradient_ignored"], [709, 3, 1, "", "is_gradient_required"], [709, 3, 1, "", "is_gradient_supported"], [709, 3, 1, "", "is_initial_point_ignored"], [709, 3, 1, "", "is_initial_point_required"], [709, 3, 1, "", "is_initial_point_supported"], [712, 4, 1, "", "minimize"], [713, 4, 1, "", "print_options"], [714, 4, 1, "", "set_max_evals_grouped"], [715, 4, 1, "", "set_options"], [709, 3, 1, "", "setting"], [709, 3, 1, "", "settings"], [716, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.COBYLA": [[717, 3, 1, "", "bounds_support_level"], [718, 4, 1, "", "get_support_level"], [719, 4, 1, "", "gradient_num_diff"], [717, 3, 1, "", "gradient_support_level"], [717, 3, 1, "", "initial_point_support_level"], [717, 3, 1, "", "is_bounds_ignored"], [717, 3, 1, "", "is_bounds_required"], [717, 3, 1, "", "is_bounds_supported"], [717, 3, 1, "", "is_gradient_ignored"], [717, 3, 1, "", "is_gradient_required"], [717, 3, 1, "", "is_gradient_supported"], [717, 3, 1, "", "is_initial_point_ignored"], [717, 3, 1, "", "is_initial_point_required"], [717, 3, 1, "", "is_initial_point_supported"], [720, 4, 1, "", "minimize"], [721, 4, 1, "", "print_options"], [722, 4, 1, "", "set_max_evals_grouped"], [723, 4, 1, "", "set_options"], [717, 3, 1, "", "setting"], [717, 3, 1, "", "settings"], [724, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.CRS": [[725, 3, 1, "", "bounds_support_level"], [726, 4, 1, "", "get_nlopt_optimizer"], [727, 4, 1, "", "get_support_level"], [728, 4, 1, "", "gradient_num_diff"], [725, 3, 1, "", "gradient_support_level"], [725, 3, 1, "", "initial_point_support_level"], [725, 3, 1, "", "is_bounds_ignored"], [725, 3, 1, "", "is_bounds_required"], [725, 3, 1, "", "is_bounds_supported"], [725, 3, 1, "", "is_gradient_ignored"], [725, 3, 1, "", "is_gradient_required"], [725, 3, 1, "", "is_gradient_supported"], [725, 3, 1, "", "is_initial_point_ignored"], [725, 3, 1, "", "is_initial_point_required"], [725, 3, 1, "", "is_initial_point_supported"], [729, 4, 1, "", "minimize"], [730, 4, 1, "", "print_options"], [731, 4, 1, "", "set_max_evals_grouped"], [732, 4, 1, "", "set_options"], [725, 3, 1, "", "setting"], [725, 3, 1, "", "settings"], [733, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.DIRECT_L": [[734, 3, 1, "", "bounds_support_level"], [735, 4, 1, "", "get_nlopt_optimizer"], [736, 4, 1, "", "get_support_level"], [737, 4, 1, "", "gradient_num_diff"], [734, 3, 1, "", "gradient_support_level"], [734, 3, 1, "", "initial_point_support_level"], [734, 3, 1, "", "is_bounds_ignored"], [734, 3, 1, "", "is_bounds_required"], [734, 3, 1, "", "is_bounds_supported"], [734, 3, 1, "", "is_gradient_ignored"], [734, 3, 1, "", "is_gradient_required"], [734, 3, 1, "", "is_gradient_supported"], [734, 3, 1, "", "is_initial_point_ignored"], [734, 3, 1, "", "is_initial_point_required"], [734, 3, 1, "", "is_initial_point_supported"], [738, 4, 1, "", "minimize"], [739, 4, 1, "", "print_options"], [740, 4, 1, "", "set_max_evals_grouped"], [741, 4, 1, "", "set_options"], [734, 3, 1, "", "setting"], [734, 3, 1, "", "settings"], [742, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.DIRECT_L_RAND": [[743, 3, 1, "", "bounds_support_level"], [744, 4, 1, "", "get_nlopt_optimizer"], [745, 4, 1, "", "get_support_level"], [746, 4, 1, "", "gradient_num_diff"], [743, 3, 1, "", "gradient_support_level"], [743, 3, 1, "", "initial_point_support_level"], [743, 3, 1, "", "is_bounds_ignored"], [743, 3, 1, "", "is_bounds_required"], [743, 3, 1, "", "is_bounds_supported"], [743, 3, 1, "", "is_gradient_ignored"], [743, 3, 1, "", "is_gradient_required"], [743, 3, 1, "", "is_gradient_supported"], [743, 3, 1, "", "is_initial_point_ignored"], [743, 3, 1, "", "is_initial_point_required"], [743, 3, 1, "", "is_initial_point_supported"], [747, 4, 1, "", "minimize"], [748, 4, 1, "", "print_options"], [749, 4, 1, "", "set_max_evals_grouped"], [750, 4, 1, "", "set_options"], [743, 3, 1, "", "setting"], [743, 3, 1, "", "settings"], [751, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.ESCH": [[752, 3, 1, "", "bounds_support_level"], [753, 4, 1, "", "get_nlopt_optimizer"], [754, 4, 1, "", "get_support_level"], [755, 4, 1, "", "gradient_num_diff"], [752, 3, 1, "", "gradient_support_level"], [752, 3, 1, "", "initial_point_support_level"], [752, 3, 1, "", "is_bounds_ignored"], [752, 3, 1, "", "is_bounds_required"], [752, 3, 1, "", "is_bounds_supported"], [752, 3, 1, "", "is_gradient_ignored"], [752, 3, 1, "", "is_gradient_required"], [752, 3, 1, "", "is_gradient_supported"], [752, 3, 1, "", "is_initial_point_ignored"], [752, 3, 1, "", "is_initial_point_required"], [752, 3, 1, "", "is_initial_point_supported"], [756, 4, 1, "", "minimize"], [757, 4, 1, "", "print_options"], [758, 4, 1, "", "set_max_evals_grouped"], [759, 4, 1, "", "set_options"], [752, 3, 1, "", "setting"], [752, 3, 1, "", "settings"], [760, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.GSLS": [[761, 3, 1, "", "bounds_support_level"], [762, 4, 1, "", "get_support_level"], [763, 4, 1, "", "gradient_approximation"], [764, 4, 1, "", "gradient_num_diff"], [761, 3, 1, "", "gradient_support_level"], [761, 3, 1, "", "initial_point_support_level"], [761, 3, 1, "", "is_bounds_ignored"], [761, 3, 1, "", "is_bounds_required"], [761, 3, 1, "", "is_bounds_supported"], [761, 3, 1, "", "is_gradient_ignored"], [761, 3, 1, "", "is_gradient_required"], [761, 3, 1, "", "is_gradient_supported"], [761, 3, 1, "", "is_initial_point_ignored"], [761, 3, 1, "", "is_initial_point_required"], [761, 3, 1, "", "is_initial_point_supported"], [765, 4, 1, "", "ls_optimize"], [766, 4, 1, "", "minimize"], [767, 4, 1, "", "print_options"], [768, 4, 1, "", "sample_points"], [769, 4, 1, "", "sample_set"], [770, 4, 1, "", "set_max_evals_grouped"], [771, 4, 1, "", "set_options"], [761, 3, 1, "", "setting"], [761, 3, 1, "", "settings"], [772, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.GradientDescent": [[773, 3, 1, "", "bounds_support_level"], [774, 4, 1, "", "get_support_level"], [775, 4, 1, "", "gradient_num_diff"], [773, 3, 1, "", "gradient_support_level"], [773, 3, 1, "", "initial_point_support_level"], [773, 3, 1, "", "is_bounds_ignored"], [773, 3, 1, "", "is_bounds_required"], [773, 3, 1, "", "is_bounds_supported"], [773, 3, 1, "", "is_gradient_ignored"], [773, 3, 1, "", "is_gradient_required"], [773, 3, 1, "", "is_gradient_supported"], [773, 3, 1, "", "is_initial_point_ignored"], [773, 3, 1, "", "is_initial_point_required"], [773, 3, 1, "", "is_initial_point_supported"], [776, 4, 1, "", "minimize"], [777, 4, 1, "", "print_options"], [778, 4, 1, "", "set_max_evals_grouped"], [779, 4, 1, "", "set_options"], [773, 3, 1, "", "setting"], [773, 3, 1, "", "settings"], [780, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.IMFIL": [[781, 3, 1, "", "bounds_support_level"], [782, 4, 1, "", "get_support_level"], [783, 4, 1, "", "gradient_num_diff"], [781, 3, 1, "", "gradient_support_level"], [781, 3, 1, "", "initial_point_support_level"], [781, 3, 1, "", "is_bounds_ignored"], [781, 3, 1, "", "is_bounds_required"], [781, 3, 1, "", "is_bounds_supported"], [781, 3, 1, "", "is_gradient_ignored"], [781, 3, 1, "", "is_gradient_required"], [781, 3, 1, "", "is_gradient_supported"], [781, 3, 1, "", "is_initial_point_ignored"], [781, 3, 1, "", "is_initial_point_required"], [781, 3, 1, "", "is_initial_point_supported"], [784, 4, 1, "", "minimize"], [785, 4, 1, "", "print_options"], [786, 4, 1, "", "set_max_evals_grouped"], [787, 4, 1, "", "set_options"], [781, 3, 1, "", "setting"], [781, 3, 1, "", "settings"], [788, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.ISRES": [[789, 3, 1, "", "bounds_support_level"], [790, 4, 1, "", "get_nlopt_optimizer"], [791, 4, 1, "", "get_support_level"], [792, 4, 1, "", "gradient_num_diff"], [789, 3, 1, "", "gradient_support_level"], [789, 3, 1, "", "initial_point_support_level"], [789, 3, 1, "", "is_bounds_ignored"], [789, 3, 1, "", "is_bounds_required"], [789, 3, 1, "", "is_bounds_supported"], [789, 3, 1, "", "is_gradient_ignored"], [789, 3, 1, "", "is_gradient_required"], [789, 3, 1, "", "is_gradient_supported"], [789, 3, 1, "", "is_initial_point_ignored"], [789, 3, 1, "", "is_initial_point_required"], [789, 3, 1, "", "is_initial_point_supported"], [793, 4, 1, "", "minimize"], [794, 4, 1, "", "print_options"], [795, 4, 1, "", "set_max_evals_grouped"], [796, 4, 1, "", "set_options"], [789, 3, 1, "", "setting"], [789, 3, 1, "", "settings"], [797, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.L_BFGS_B": [[798, 3, 1, "", "bounds_support_level"], [799, 4, 1, "", "get_support_level"], [800, 4, 1, "", "gradient_num_diff"], [798, 3, 1, "", "gradient_support_level"], [798, 3, 1, "", "initial_point_support_level"], [798, 3, 1, "", "is_bounds_ignored"], [798, 3, 1, "", "is_bounds_required"], [798, 3, 1, "", "is_bounds_supported"], [798, 3, 1, "", "is_gradient_ignored"], [798, 3, 1, "", "is_gradient_required"], [798, 3, 1, "", "is_gradient_supported"], [798, 3, 1, "", "is_initial_point_ignored"], [798, 3, 1, "", "is_initial_point_required"], [798, 3, 1, "", "is_initial_point_supported"], [801, 4, 1, "", "minimize"], [802, 4, 1, "", "print_options"], [803, 4, 1, "", "set_max_evals_grouped"], [804, 4, 1, "", "set_options"], [798, 3, 1, "", "setting"], [798, 3, 1, "", "settings"], [805, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.NELDER_MEAD": [[806, 3, 1, "", "bounds_support_level"], [807, 4, 1, "", "get_support_level"], [808, 4, 1, "", "gradient_num_diff"], [806, 3, 1, "", "gradient_support_level"], [806, 3, 1, "", "initial_point_support_level"], [806, 3, 1, "", "is_bounds_ignored"], [806, 3, 1, "", "is_bounds_required"], [806, 3, 1, "", "is_bounds_supported"], [806, 3, 1, "", "is_gradient_ignored"], [806, 3, 1, "", "is_gradient_required"], [806, 3, 1, "", "is_gradient_supported"], [806, 3, 1, "", "is_initial_point_ignored"], [806, 3, 1, "", "is_initial_point_required"], [806, 3, 1, "", "is_initial_point_supported"], [809, 4, 1, "", "minimize"], [810, 4, 1, "", "print_options"], [811, 4, 1, "", "set_max_evals_grouped"], [812, 4, 1, "", "set_options"], [806, 3, 1, "", "setting"], [806, 3, 1, "", "settings"], [813, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.NFT": [[814, 3, 1, "", "bounds_support_level"], [815, 4, 1, "", "get_support_level"], [816, 4, 1, "", "gradient_num_diff"], [814, 3, 1, "", "gradient_support_level"], [814, 3, 1, "", "initial_point_support_level"], [814, 3, 1, "", "is_bounds_ignored"], [814, 3, 1, "", "is_bounds_required"], [814, 3, 1, "", "is_bounds_supported"], [814, 3, 1, "", "is_gradient_ignored"], [814, 3, 1, "", "is_gradient_required"], [814, 3, 1, "", "is_gradient_supported"], [814, 3, 1, "", "is_initial_point_ignored"], [814, 3, 1, "", "is_initial_point_required"], [814, 3, 1, "", "is_initial_point_supported"], [817, 4, 1, "", "minimize"], [818, 4, 1, "", "print_options"], [819, 4, 1, "", "set_max_evals_grouped"], [820, 4, 1, "", "set_options"], [814, 3, 1, "", "setting"], [814, 3, 1, "", "settings"], [821, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.Optimizer": [[822, 3, 1, "", "bounds_support_level"], [823, 4, 1, "", "get_support_level"], [824, 4, 1, "", "gradient_num_diff"], [822, 3, 1, "", "gradient_support_level"], [822, 3, 1, "", "initial_point_support_level"], [822, 3, 1, "", "is_bounds_ignored"], [822, 3, 1, "", "is_bounds_required"], [822, 3, 1, "", "is_bounds_supported"], [822, 3, 1, "", "is_gradient_ignored"], [822, 3, 1, "", "is_gradient_required"], [822, 3, 1, "", "is_gradient_supported"], [822, 3, 1, "", "is_initial_point_ignored"], [822, 3, 1, "", "is_initial_point_required"], [822, 3, 1, "", "is_initial_point_supported"], [825, 4, 1, "", "minimize"], [826, 4, 1, "", "print_options"], [827, 4, 1, "", "set_max_evals_grouped"], [828, 4, 1, "", "set_options"], [822, 3, 1, "", "setting"], [822, 3, 1, "", "settings"], [829, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.OptimizerResult": [[831, 4, 1, "", "combine"], [830, 3, 1, "", "fun"], [830, 3, 1, "", "jac"], [830, 3, 1, "", "nfev"], [830, 3, 1, "", "nit"], [830, 3, 1, "", "njev"], [830, 3, 1, "", "x"]], "qiskit.algorithms.optimizers.OptimizerSupportLevel": [[832, 3, 1, "", "ignored"], [832, 3, 1, "", "not_supported"], [832, 3, 1, "", "required"], [832, 3, 1, "", "supported"]], "qiskit.algorithms.optimizers.POWELL": [[833, 3, 1, "", "bounds_support_level"], [834, 4, 1, "", "get_support_level"], [835, 4, 1, "", "gradient_num_diff"], [833, 3, 1, "", "gradient_support_level"], [833, 3, 1, "", "initial_point_support_level"], [833, 3, 1, "", "is_bounds_ignored"], [833, 3, 1, "", "is_bounds_required"], [833, 3, 1, "", "is_bounds_supported"], [833, 3, 1, "", "is_gradient_ignored"], [833, 3, 1, "", "is_gradient_required"], [833, 3, 1, "", "is_gradient_supported"], [833, 3, 1, "", "is_initial_point_ignored"], [833, 3, 1, "", "is_initial_point_required"], [833, 3, 1, "", "is_initial_point_supported"], [836, 4, 1, "", "minimize"], [837, 4, 1, "", "print_options"], [838, 4, 1, "", "set_max_evals_grouped"], [839, 4, 1, "", "set_options"], [833, 3, 1, "", "setting"], [833, 3, 1, "", "settings"], [840, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.P_BFGS": [[841, 3, 1, "", "bounds_support_level"], [842, 4, 1, "", "get_support_level"], [843, 4, 1, "", "gradient_num_diff"], [841, 3, 1, "", "gradient_support_level"], [841, 3, 1, "", "initial_point_support_level"], [841, 3, 1, "", "is_bounds_ignored"], [841, 3, 1, "", "is_bounds_required"], [841, 3, 1, "", "is_bounds_supported"], [841, 3, 1, "", "is_gradient_ignored"], [841, 3, 1, "", "is_gradient_required"], [841, 3, 1, "", "is_gradient_supported"], [841, 3, 1, "", "is_initial_point_ignored"], [841, 3, 1, "", "is_initial_point_required"], [841, 3, 1, "", "is_initial_point_supported"], [844, 4, 1, "", "minimize"], [845, 4, 1, "", "print_options"], [846, 4, 1, "", "set_max_evals_grouped"], [847, 4, 1, "", "set_options"], [841, 3, 1, "", "setting"], [841, 3, 1, "", "settings"], [848, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.QNSPSA": [[849, 3, 1, "", "bounds_support_level"], [850, 4, 1, "", "calibrate"], [851, 4, 1, "", "estimate_stddev"], [852, 4, 1, "", "get_fidelity"], [853, 4, 1, "", "get_support_level"], [854, 4, 1, "", "gradient_num_diff"], [849, 3, 1, "", "gradient_support_level"], [849, 3, 1, "", "initial_point_support_level"], [849, 3, 1, "", "is_bounds_ignored"], [849, 3, 1, "", "is_bounds_required"], [849, 3, 1, "", "is_bounds_supported"], [849, 3, 1, "", "is_gradient_ignored"], [849, 3, 1, "", "is_gradient_required"], [849, 3, 1, "", "is_gradient_supported"], [849, 3, 1, "", "is_initial_point_ignored"], [849, 3, 1, "", "is_initial_point_required"], [849, 3, 1, "", "is_initial_point_supported"], [855, 4, 1, "", "minimize"], [856, 4, 1, "", "optimize"], [857, 4, 1, "", "print_options"], [858, 4, 1, "", "set_max_evals_grouped"], [859, 4, 1, "", "set_options"], [849, 3, 1, "", "setting"], [849, 3, 1, "", "settings"], [860, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.SLSQP": [[861, 3, 1, "", "bounds_support_level"], [862, 4, 1, "", "get_support_level"], [863, 4, 1, "", "gradient_num_diff"], [861, 3, 1, "", "gradient_support_level"], [861, 3, 1, "", "initial_point_support_level"], [861, 3, 1, "", "is_bounds_ignored"], [861, 3, 1, "", "is_bounds_required"], [861, 3, 1, "", "is_bounds_supported"], [861, 3, 1, "", "is_gradient_ignored"], [861, 3, 1, "", "is_gradient_required"], [861, 3, 1, "", "is_gradient_supported"], [861, 3, 1, "", "is_initial_point_ignored"], [861, 3, 1, "", "is_initial_point_required"], [861, 3, 1, "", "is_initial_point_supported"], [864, 4, 1, "", "minimize"], [865, 4, 1, "", "print_options"], [866, 4, 1, "", "set_max_evals_grouped"], [867, 4, 1, "", "set_options"], [861, 3, 1, "", "setting"], [861, 3, 1, "", "settings"], [868, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.SNOBFIT": [[869, 3, 1, "", "bounds_support_level"], [870, 4, 1, "", "get_support_level"], [871, 4, 1, "", "gradient_num_diff"], [869, 3, 1, "", "gradient_support_level"], [869, 3, 1, "", "initial_point_support_level"], [869, 3, 1, "", "is_bounds_ignored"], [869, 3, 1, "", "is_bounds_required"], [869, 3, 1, "", "is_bounds_supported"], [869, 3, 1, "", "is_gradient_ignored"], [869, 3, 1, "", "is_gradient_required"], [869, 3, 1, "", "is_gradient_supported"], [869, 3, 1, "", "is_initial_point_ignored"], [869, 3, 1, "", "is_initial_point_required"], [869, 3, 1, "", "is_initial_point_supported"], [872, 4, 1, "", "minimize"], [873, 4, 1, "", "print_options"], [874, 4, 1, "", "set_max_evals_grouped"], [875, 4, 1, "", "set_options"], [869, 3, 1, "", "setting"], [869, 3, 1, "", "settings"], [876, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.SPSA": [[877, 3, 1, "", "bounds_support_level"], [878, 4, 1, "", "calibrate"], [879, 4, 1, "", "estimate_stddev"], [880, 4, 1, "", "get_support_level"], [881, 4, 1, "", "gradient_num_diff"], [877, 3, 1, "", "gradient_support_level"], [877, 3, 1, "", "initial_point_support_level"], [877, 3, 1, "", "is_bounds_ignored"], [877, 3, 1, "", "is_bounds_required"], [877, 3, 1, "", "is_bounds_supported"], [877, 3, 1, "", "is_gradient_ignored"], [877, 3, 1, "", "is_gradient_required"], [877, 3, 1, "", "is_gradient_supported"], [877, 3, 1, "", "is_initial_point_ignored"], [877, 3, 1, "", "is_initial_point_required"], [877, 3, 1, "", "is_initial_point_supported"], [882, 4, 1, "", "minimize"], [883, 4, 1, "", "optimize"], [884, 4, 1, "", "print_options"], [885, 4, 1, "", "set_max_evals_grouped"], [886, 4, 1, "", "set_options"], [877, 3, 1, "", "setting"], [877, 3, 1, "", "settings"], [887, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.SciPyOptimizer": [[888, 3, 1, "", "bounds_support_level"], [889, 4, 1, "", "get_support_level"], [890, 4, 1, "", "gradient_num_diff"], [888, 3, 1, "", "gradient_support_level"], [888, 3, 1, "", "initial_point_support_level"], [888, 3, 1, "", "is_bounds_ignored"], [888, 3, 1, "", "is_bounds_required"], [888, 3, 1, "", "is_bounds_supported"], [888, 3, 1, "", "is_gradient_ignored"], [888, 3, 1, "", "is_gradient_required"], [888, 3, 1, "", "is_gradient_supported"], [888, 3, 1, "", "is_initial_point_ignored"], [888, 3, 1, "", "is_initial_point_required"], [888, 3, 1, "", "is_initial_point_supported"], [891, 4, 1, "", "minimize"], [892, 4, 1, "", "print_options"], [893, 4, 1, "", "set_max_evals_grouped"], [894, 4, 1, "", "set_options"], [888, 3, 1, "", "setting"], [888, 3, 1, "", "settings"], [895, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.TNC": [[896, 3, 1, "", "bounds_support_level"], [897, 4, 1, "", "get_support_level"], [898, 4, 1, "", "gradient_num_diff"], [896, 3, 1, "", "gradient_support_level"], [896, 3, 1, "", "initial_point_support_level"], [896, 3, 1, "", "is_bounds_ignored"], [896, 3, 1, "", "is_bounds_required"], [896, 3, 1, "", "is_bounds_supported"], [896, 3, 1, "", "is_gradient_ignored"], [896, 3, 1, "", "is_gradient_required"], [896, 3, 1, "", "is_gradient_supported"], [896, 3, 1, "", "is_initial_point_ignored"], [896, 3, 1, "", "is_initial_point_required"], [896, 3, 1, "", "is_initial_point_supported"], [899, 4, 1, "", "minimize"], [900, 4, 1, "", "print_options"], [901, 4, 1, "", "set_max_evals_grouped"], [902, 4, 1, "", "set_options"], [896, 3, 1, "", "setting"], [896, 3, 1, "", "settings"], [903, 4, 1, "", "wrap_function"]], "qiskit.algorithms.optimizers.UMDA": [[904, 3, 1, "", "ELITE_FACTOR"], [904, 3, 1, "", "STD_BOUND"], [904, 3, 1, "", "alpha"], [904, 3, 1, "", "bounds_support_level"], [905, 4, 1, "", "get_support_level"], [906, 4, 1, "", "gradient_num_diff"], [904, 3, 1, "", "gradient_support_level"], [904, 3, 1, "", "initial_point_support_level"], [904, 3, 1, "", "is_bounds_ignored"], [904, 3, 1, "", "is_bounds_required"], [904, 3, 1, "", "is_bounds_supported"], [904, 3, 1, "", "is_gradient_ignored"], [904, 3, 1, "", "is_gradient_required"], [904, 3, 1, "", "is_gradient_supported"], [904, 3, 1, "", "is_initial_point_ignored"], [904, 3, 1, "", "is_initial_point_required"], [904, 3, 1, "", "is_initial_point_supported"], [904, 3, 1, "", "maxiter"], [907, 4, 1, "", "minimize"], [908, 4, 1, "", "print_options"], [909, 4, 1, "", "set_max_evals_grouped"], [910, 4, 1, "", "set_options"], [904, 3, 1, "", "setting"], [904, 3, 1, "", "settings"], [904, 3, 1, "", "size_gen"], [911, 4, 1, "", "wrap_function"]], "qiskit.assembler": [[913, 2, 1, "", "RunConfig"], [916, 5, 1, "", "assemble_circuits"], [917, 5, 1, "", "assemble_schedules"], [918, 5, 1, "", "disassemble"]], "qiskit.assembler.RunConfig": [[914, 4, 1, "", "from_dict"], [913, 3, 1, "", "max_credits"], [913, 3, 1, "", "memory"], [913, 3, 1, "", "parameter_binds"], [913, 3, 1, "", "seed_simulator"], [913, 3, 1, "", "shots"], [915, 4, 1, "", "to_dict"]], "qiskit.circuit": [[919, 2, 1, "", "AncillaQubit"], [920, 2, 1, "", "AncillaRegister"], [923, 2, 1, "", "BreakLoopOp"], [936, 2, 1, "", "CircuitInstruction"], [939, 2, 1, "", "ClassicalRegister"], [942, 2, 1, "", "Clbit"], [943, 2, 1, "", "ContinueLoopOp"], [956, 2, 1, "", "ControlFlowOp"], [970, 2, 1, "", "ControlledGate"], [986, 2, 1, "", "Delay"], [1000, 2, 1, "", "EquivalenceLibrary"], [1006, 2, 1, "", "ForLoopOp"], [1020, 2, 1, "", "Gate"], [1036, 2, 1, "", "IfElseOp"], [1050, 2, 1, "", "Instruction"], [1063, 2, 1, "", "InstructionSet"], [1067, 2, 1, "", "Parameter"], [1083, 2, 1, "", "ParameterExpression"], [1099, 2, 1, "", "ParameterVector"], [1102, 2, 1, "", "QuantumCircuit"], [1259, 2, 1, "", "QuantumRegister"], [1262, 2, 1, "", "Qubit"], [1263, 2, 1, "", "WhileLoopOp"], [12, 0, 0, "-", "classicalfunction"], [11, 0, 0, "-", "library"]], "qiskit.circuit.AncillaQubit": [[919, 3, 1, "", "index"], [919, 3, 1, "", "register"]], "qiskit.circuit.AncillaRegister": [[921, 4, 1, "", "index"], [920, 3, 1, "", "instances_counter"], [920, 3, 1, "", "name"], [920, 3, 1, "", "name_format"], [920, 3, 1, "", "prefix"], [922, 4, 1, "", "qasm"], [920, 3, 1, "", "size"]], "qiskit.circuit.BreakLoopOp": [[924, 4, 1, "", "add_decomposition"], [925, 4, 1, "", "assemble"], [926, 4, 1, "", "broadcast_arguments"], [927, 4, 1, "", "c_if"], [923, 3, 1, "", "condition_bits"], [928, 4, 1, "", "copy"], [923, 3, 1, "", "decompositions"], [923, 3, 1, "", "definition"], [923, 3, 1, "", "duration"], [929, 4, 1, "", "inverse"], [930, 4, 1, "", "is_parameterized"], [923, 3, 1, "", "label"], [923, 3, 1, "", "name"], [923, 3, 1, "", "num_clbits"], [923, 3, 1, "", "num_qubits"], [923, 3, 1, "", "params"], [931, 4, 1, "", "qasm"], [932, 4, 1, "", "repeat"], [933, 4, 1, "", "reverse_ops"], [934, 4, 1, "", "soft_compare"], [923, 3, 1, "", "unit"], [935, 4, 1, "", "validate_parameter"]], "qiskit.circuit.CircuitInstruction": [[936, 3, 1, "", "clbits"], [937, 4, 1, "", "copy"], [936, 3, 1, "", "operation"], [936, 3, 1, "", "qubits"], [938, 4, 1, "", "replace"]], "qiskit.circuit.ClassicalRegister": [[940, 4, 1, "", "index"], [939, 3, 1, "", "instances_counter"], [939, 3, 1, "", "name"], [939, 3, 1, "", "name_format"], [939, 3, 1, "", "prefix"], [941, 4, 1, "", "qasm"], [939, 3, 1, "", "size"]], "qiskit.circuit.Clbit": [[942, 3, 1, "", "index"], [942, 3, 1, "", "register"]], "qiskit.circuit.ContinueLoopOp": [[944, 4, 1, "", "add_decomposition"], [945, 4, 1, "", "assemble"], [946, 4, 1, "", "broadcast_arguments"], [947, 4, 1, "", "c_if"], [943, 3, 1, "", "condition_bits"], [948, 4, 1, "", "copy"], [943, 3, 1, "", "decompositions"], [943, 3, 1, "", "definition"], [943, 3, 1, "", "duration"], [949, 4, 1, "", "inverse"], [950, 4, 1, "", "is_parameterized"], [943, 3, 1, "", "label"], [943, 3, 1, "", "name"], [943, 3, 1, "", "num_clbits"], [943, 3, 1, "", "num_qubits"], [943, 3, 1, "", "params"], [951, 4, 1, "", "qasm"], [952, 4, 1, "", "repeat"], [953, 4, 1, "", "reverse_ops"], [954, 4, 1, "", "soft_compare"], [943, 3, 1, "", "unit"], [955, 4, 1, "", "validate_parameter"]], "qiskit.circuit.ControlFlowOp": [[957, 4, 1, "", "add_decomposition"], [958, 4, 1, "", "assemble"], [956, 3, 1, "", "blocks"], [959, 4, 1, "", "broadcast_arguments"], [960, 4, 1, "", "c_if"], [956, 3, 1, "", "condition_bits"], [961, 4, 1, "", "copy"], [956, 3, 1, "", "decompositions"], [956, 3, 1, "", "definition"], [956, 3, 1, "", "duration"], [962, 4, 1, "", "inverse"], [963, 4, 1, "", "is_parameterized"], [956, 3, 1, "", "label"], [956, 3, 1, "", "name"], [956, 3, 1, "", "num_clbits"], [956, 3, 1, "", "num_qubits"], [956, 3, 1, "", "params"], [964, 4, 1, "", "qasm"], [965, 4, 1, "", "repeat"], [966, 4, 1, "", "replace_blocks"], [967, 4, 1, "", "reverse_ops"], [968, 4, 1, "", "soft_compare"], [956, 3, 1, "", "unit"], [969, 4, 1, "", "validate_parameter"]], "qiskit.circuit.ControlledGate": [[971, 4, 1, "", "add_decomposition"], [972, 4, 1, "", "assemble"], [973, 4, 1, "", "broadcast_arguments"], [974, 4, 1, "", "c_if"], [970, 3, 1, "", "condition_bits"], [975, 4, 1, "", "control"], [976, 4, 1, "", "copy"], [970, 3, 1, "", "ctrl_state"], [970, 3, 1, "", "decompositions"], [970, 3, 1, "", "definition"], [970, 3, 1, "", "duration"], [977, 4, 1, "", "inverse"], [978, 4, 1, "", "is_parameterized"], [970, 3, 1, "", "label"], [970, 3, 1, "", "name"], [970, 3, 1, "", "num_clbits"], [970, 3, 1, "", "num_ctrl_qubits"], [970, 3, 1, "", "num_qubits"], [970, 3, 1, "", "params"], [979, 4, 1, "", "power"], [980, 4, 1, "", "qasm"], [981, 4, 1, "", "repeat"], [982, 4, 1, "", "reverse_ops"], [983, 4, 1, "", "soft_compare"], [984, 4, 1, "", "to_matrix"], [970, 3, 1, "", "unit"], [985, 4, 1, "", "validate_parameter"]], "qiskit.circuit.Delay": [[987, 4, 1, "", "add_decomposition"], [988, 4, 1, "", "assemble"], [989, 4, 1, "", "broadcast_arguments"], [990, 4, 1, "", "c_if"], [986, 3, 1, "", "condition_bits"], [991, 4, 1, "", "copy"], [986, 3, 1, "", "decompositions"], [986, 3, 1, "", "definition"], [986, 3, 1, "", "duration"], [992, 4, 1, "", "inverse"], [993, 4, 1, "", "is_parameterized"], [986, 3, 1, "", "label"], [986, 3, 1, "", "name"], [986, 3, 1, "", "num_clbits"], [986, 3, 1, "", "num_qubits"], [986, 3, 1, "", "params"], [994, 4, 1, "", "qasm"], [995, 4, 1, "", "repeat"], [996, 4, 1, "", "reverse_ops"], [997, 4, 1, "", "soft_compare"], [998, 4, 1, "", "to_matrix"], [986, 3, 1, "", "unit"], [999, 4, 1, "", "validate_parameter"]], "qiskit.circuit.EquivalenceLibrary": [[1001, 4, 1, "", "add_equivalence"], [1002, 4, 1, "", "draw"], [1003, 4, 1, "", "get_entry"], [1004, 4, 1, "", "has_entry"], [1005, 4, 1, "", "set_entry"]], "qiskit.circuit.ForLoopOp": [[1007, 4, 1, "", "add_decomposition"], [1008, 4, 1, "", "assemble"], [1006, 3, 1, "", "blocks"], [1009, 4, 1, "", "broadcast_arguments"], [1010, 4, 1, "", "c_if"], [1006, 3, 1, "", "condition_bits"], [1011, 4, 1, "", "copy"], [1006, 3, 1, "", "decompositions"], [1006, 3, 1, "", "definition"], [1006, 3, 1, "", "duration"], [1012, 4, 1, "", "inverse"], [1013, 4, 1, "", "is_parameterized"], [1006, 3, 1, "", "label"], [1006, 3, 1, "", "name"], [1006, 3, 1, "", "num_clbits"], [1006, 3, 1, "", "num_qubits"], [1006, 3, 1, "", "params"], [1014, 4, 1, "", "qasm"], [1015, 4, 1, "", "repeat"], [1016, 4, 1, "", "replace_blocks"], [1017, 4, 1, "", "reverse_ops"], [1018, 4, 1, "", "soft_compare"], [1006, 3, 1, "", "unit"], [1019, 4, 1, "", "validate_parameter"]], "qiskit.circuit.Gate": [[1021, 4, 1, "", "add_decomposition"], [1022, 4, 1, "", "assemble"], [1023, 4, 1, "", "broadcast_arguments"], [1024, 4, 1, "", "c_if"], [1020, 3, 1, "", "condition_bits"], [1025, 4, 1, "", "control"], [1026, 4, 1, "", "copy"], [1020, 3, 1, "", "decompositions"], [1020, 3, 1, "", "definition"], [1020, 3, 1, "", "duration"], [1027, 4, 1, "", "inverse"], [1028, 4, 1, "", "is_parameterized"], [1020, 3, 1, "", "label"], [1020, 3, 1, "", "name"], [1020, 3, 1, "", "num_clbits"], [1020, 3, 1, "", "num_qubits"], [1020, 3, 1, "", "params"], [1029, 4, 1, "", "power"], [1030, 4, 1, "", "qasm"], [1031, 4, 1, "", "repeat"], [1032, 4, 1, "", "reverse_ops"], [1033, 4, 1, "", "soft_compare"], [1034, 4, 1, "", "to_matrix"], [1020, 3, 1, "", "unit"], [1035, 4, 1, "", "validate_parameter"]], "qiskit.circuit.IfElseOp": [[1037, 4, 1, "", "add_decomposition"], [1038, 4, 1, "", "assemble"], [1036, 3, 1, "", "blocks"], [1039, 4, 1, "", "broadcast_arguments"], [1040, 4, 1, "", "c_if"], [1036, 3, 1, "", "condition_bits"], [1041, 4, 1, "", "copy"], [1036, 3, 1, "", "decompositions"], [1036, 3, 1, "", "definition"], [1036, 3, 1, "", "duration"], [1042, 4, 1, "", "inverse"], [1043, 4, 1, "", "is_parameterized"], [1036, 3, 1, "", "label"], [1036, 3, 1, "", "name"], [1036, 3, 1, "", "num_clbits"], [1036, 3, 1, "", "num_qubits"], [1036, 3, 1, "", "params"], [1044, 4, 1, "", "qasm"], [1045, 4, 1, "", "repeat"], [1046, 4, 1, "", "replace_blocks"], [1047, 4, 1, "", "reverse_ops"], [1048, 4, 1, "", "soft_compare"], [1036, 3, 1, "", "unit"], [1049, 4, 1, "", "validate_parameter"]], "qiskit.circuit.Instruction": [[1051, 4, 1, "", "add_decomposition"], [1052, 4, 1, "", "assemble"], [1053, 4, 1, "", "broadcast_arguments"], [1054, 4, 1, "", "c_if"], [1050, 3, 1, "", "condition_bits"], [1055, 4, 1, "", "copy"], [1050, 3, 1, "", "decompositions"], [1050, 3, 1, "", "definition"], [1050, 3, 1, "", "duration"], [1056, 4, 1, "", "inverse"], [1057, 4, 1, "", "is_parameterized"], [1050, 3, 1, "", "label"], [1050, 3, 1, "", "name"], [1050, 3, 1, "", "num_clbits"], [1050, 3, 1, "", "num_qubits"], [1050, 3, 1, "", "params"], [1058, 4, 1, "", "qasm"], [1059, 4, 1, "", "repeat"], [1060, 4, 1, "", "reverse_ops"], [1061, 4, 1, "", "soft_compare"], [1050, 3, 1, "", "unit"], [1062, 4, 1, "", "validate_parameter"]], "qiskit.circuit.InstructionSet": [[1064, 4, 1, "", "add"], [1065, 4, 1, "", "c_if"], [1063, 3, 1, "", "cargs"], [1063, 3, 1, "", "instructions"], [1066, 4, 1, "", "inverse"], [1063, 3, 1, "", "qargs"]], "qiskit.circuit.Parameter": [[1068, 4, 1, "", "arccos"], [1069, 4, 1, "", "arcsin"], [1070, 4, 1, "", "arctan"], [1071, 4, 1, "", "assign"], [1072, 4, 1, "", "bind"], [1073, 4, 1, "", "conjugate"], [1074, 4, 1, "", "cos"], [1075, 4, 1, "", "exp"], [1076, 4, 1, "", "gradient"], [1077, 4, 1, "", "is_real"], [1078, 4, 1, "", "log"], [1067, 3, 1, "", "name"], [1067, 3, 1, "", "parameters"], [1079, 4, 1, "", "sin"], [1080, 4, 1, "", "subs"], [1081, 4, 1, "", "sympify"], [1082, 4, 1, "", "tan"]], "qiskit.circuit.ParameterExpression": [[1084, 4, 1, "", "arccos"], [1085, 4, 1, "", "arcsin"], [1086, 4, 1, "", "arctan"], [1087, 4, 1, "", "assign"], [1088, 4, 1, "", "bind"], [1089, 4, 1, "", "conjugate"], [1090, 4, 1, "", "cos"], [1091, 4, 1, "", "exp"], [1092, 4, 1, "", "gradient"], [1093, 4, 1, "", "is_real"], [1094, 4, 1, "", "log"], [1083, 3, 1, "", "parameters"], [1095, 4, 1, "", "sin"], [1096, 4, 1, "", "subs"], [1097, 4, 1, "", "sympify"], [1098, 4, 1, "", "tan"]], "qiskit.circuit.ParameterVector": [[1100, 4, 1, "", "index"], [1099, 3, 1, "", "name"], [1099, 3, 1, "", "params"], [1101, 4, 1, "", "resize"]], "qiskit.circuit.QuantumCircuit": [[1103, 4, 1, "", "add_bits"], [1104, 4, 1, "", "add_calibration"], [1105, 4, 1, "", "add_register"], [1102, 3, 1, "", "ancillas"], [1106, 4, 1, "", "append"], [1107, 4, 1, "", "assign_parameters"], [1108, 4, 1, "", "barrier"], [1109, 4, 1, "", "bind_parameters"], [1110, 4, 1, "", "break_loop"], [1102, 3, 1, "", "calibrations"], [1111, 4, 1, "", "cast"], [1112, 4, 1, "", "cbit_argument_conversion"], [1113, 4, 1, "", "ccx"], [1114, 4, 1, "", "ch"], [1102, 3, 1, "", "clbits"], [1115, 4, 1, "", "clear"], [1116, 4, 1, "", "cls_instances"], [1117, 4, 1, "", "cls_prefix"], [1118, 4, 1, "", "cnot"], [1119, 4, 1, "", "combine"], [1120, 4, 1, "", "compose"], [1121, 4, 1, "", "continue_loop"], [1122, 4, 1, "", "control"], [1123, 4, 1, "", "copy"], [1124, 4, 1, "", "copy_empty_like"], [1125, 4, 1, "", "count_ops"], [1126, 4, 1, "", "cp"], [1127, 4, 1, "", "crx"], [1128, 4, 1, "", "cry"], [1129, 4, 1, "", "crz"], [1130, 4, 1, "", "cswap"], [1131, 4, 1, "", "csx"], [1132, 4, 1, "", "cu"], [1133, 4, 1, "", "cu1"], [1134, 4, 1, "", "cu3"], [1135, 4, 1, "", "cx"], [1136, 4, 1, "", "cy"], [1137, 4, 1, "", "cz"], [1102, 3, 1, "", "data"], [1138, 4, 1, "", "dcx"], [1139, 4, 1, "", "decompose"], [1140, 4, 1, "", "delay"], [1141, 4, 1, "", "depth"], [1142, 4, 1, "", "diagonal"], [1143, 4, 1, "", "draw"], [1144, 4, 1, "", "ecr"], [1145, 4, 1, "", "extend"], [1102, 3, 1, "", "extension_lib"], [1146, 4, 1, "", "find_bit"], [1147, 4, 1, "", "for_loop"], [1148, 4, 1, "", "fredkin"], [1149, 4, 1, "", "from_qasm_file"], [1150, 4, 1, "", "from_qasm_str"], [1151, 4, 1, "", "get_instructions"], [1102, 3, 1, "", "global_phase"], [1152, 4, 1, "", "h"], [1153, 4, 1, "", "hamiltonian"], [1154, 4, 1, "", "has_calibration_for"], [1155, 4, 1, "", "has_register"], [1102, 3, 1, "", "header"], [1156, 4, 1, "", "i"], [1157, 4, 1, "", "id"], [1158, 4, 1, "", "if_else"], [1159, 4, 1, "", "if_test"], [1160, 4, 1, "", "initialize"], [1102, 3, 1, "", "instances"], [1161, 4, 1, "", "inverse"], [1162, 4, 1, "", "iso"], [1163, 4, 1, "", "isometry"], [1164, 4, 1, "", "iswap"], [1165, 4, 1, "", "mcp"], [1166, 4, 1, "", "mcrx"], [1167, 4, 1, "", "mcry"], [1168, 4, 1, "", "mcrz"], [1169, 4, 1, "", "mct"], [1170, 4, 1, "", "mcu1"], [1171, 4, 1, "", "mcx"], [1172, 4, 1, "", "measure"], [1173, 4, 1, "", "measure_active"], [1174, 4, 1, "", "measure_all"], [1102, 3, 1, "", "metadata"], [1175, 4, 1, "", "ms"], [1102, 3, 1, "", "num_ancillas"], [1102, 3, 1, "", "num_clbits"], [1176, 4, 1, "", "num_connected_components"], [1177, 4, 1, "", "num_nonlocal_gates"], [1102, 3, 1, "", "num_parameters"], [1102, 3, 1, "", "num_qubits"], [1178, 4, 1, "", "num_tensor_factors"], [1179, 4, 1, "", "num_unitary_factors"], [1102, 3, 1, "", "op_start_times"], [1180, 4, 1, "", "p"], [1102, 3, 1, "", "parameters"], [1181, 4, 1, "", "pauli"], [1182, 4, 1, "", "power"], [1102, 3, 1, "", "prefix"], [1183, 4, 1, "", "prepare_state"], [1184, 4, 1, "", "qasm"], [1185, 4, 1, "", "qbit_argument_conversion"], [1186, 4, 1, "", "qubit_duration"], [1187, 4, 1, "", "qubit_start_time"], [1188, 4, 1, "", "qubit_stop_time"], [1102, 3, 1, "", "qubits"], [1189, 4, 1, "", "r"], [1190, 4, 1, "", "rcccx"], [1191, 4, 1, "", "rccx"], [1192, 4, 1, "", "remove_final_measurements"], [1193, 4, 1, "", "repeat"], [1194, 4, 1, "", "reset"], [1195, 4, 1, "", "reverse_bits"], [1196, 4, 1, "", "reverse_ops"], [1197, 4, 1, "", "rv"], [1198, 4, 1, "", "rx"], [1199, 4, 1, "", "rxx"], [1200, 4, 1, "", "ry"], [1201, 4, 1, "", "ryy"], [1202, 4, 1, "", "rz"], [1203, 4, 1, "", "rzx"], [1204, 4, 1, "", "rzz"], [1205, 4, 1, "", "s"], [1206, 4, 1, "", "save_amplitudes"], [1207, 4, 1, "", "save_amplitudes_squared"], [1208, 4, 1, "", "save_clifford"], [1209, 4, 1, "", "save_density_matrix"], [1210, 4, 1, "", "save_expectation_value"], [1211, 4, 1, "", "save_expectation_value_variance"], [1212, 4, 1, "", "save_matrix_product_state"], [1213, 4, 1, "", "save_probabilities"], [1214, 4, 1, "", "save_probabilities_dict"], [1215, 4, 1, "", "save_stabilizer"], [1216, 4, 1, "", "save_state"], [1217, 4, 1, "", "save_statevector"], [1218, 4, 1, "", "save_statevector_dict"], [1219, 4, 1, "", "save_superop"], [1220, 4, 1, "", "save_unitary"], [1221, 4, 1, "", "sdg"], [1222, 4, 1, "", "set_density_matrix"], [1223, 4, 1, "", "set_matrix_product_state"], [1224, 4, 1, "", "set_stabilizer"], [1225, 4, 1, "", "set_statevector"], [1226, 4, 1, "", "set_superop"], [1227, 4, 1, "", "set_unitary"], [1228, 4, 1, "", "size"], [1229, 4, 1, "", "snapshot"], [1230, 4, 1, "", "snapshot_density_matrix"], [1231, 4, 1, "", "snapshot_expectation_value"], [1232, 4, 1, "", "snapshot_probabilities"], [1233, 4, 1, "", "snapshot_stabilizer"], [1234, 4, 1, "", "snapshot_statevector"], [1235, 4, 1, "", "squ"], [1236, 4, 1, "", "swap"], [1237, 4, 1, "", "sx"], [1238, 4, 1, "", "sxdg"], [1239, 4, 1, "", "t"], [1240, 4, 1, "", "tdg"], [1241, 4, 1, "", "tensor"], [1242, 4, 1, "", "to_gate"], [1243, 4, 1, "", "to_instruction"], [1244, 4, 1, "", "toffoli"], [1245, 4, 1, "", "u"], [1246, 4, 1, "", "u1"], [1247, 4, 1, "", "u2"], [1248, 4, 1, "", "u3"], [1249, 4, 1, "", "uc"], [1250, 4, 1, "", "ucrx"], [1251, 4, 1, "", "ucry"], [1252, 4, 1, "", "ucrz"], [1253, 4, 1, "", "unitary"], [1254, 4, 1, "", "while_loop"], [1255, 4, 1, "", "width"], [1256, 4, 1, "", "x"], [1257, 4, 1, "", "y"], [1258, 4, 1, "", "z"]], "qiskit.circuit.QuantumRegister": [[1260, 4, 1, "", "index"], [1259, 3, 1, "", "instances_counter"], [1259, 3, 1, "", "name"], [1259, 3, 1, "", "name_format"], [1259, 3, 1, "", "prefix"], [1261, 4, 1, "", "qasm"], [1259, 3, 1, "", "size"]], "qiskit.circuit.Qubit": [[1262, 3, 1, "", "index"], [1262, 3, 1, "", "register"]], "qiskit.circuit.WhileLoopOp": [[1264, 4, 1, "", "add_decomposition"], [1265, 4, 1, "", "assemble"], [1263, 3, 1, "", "blocks"], [1266, 4, 1, "", "broadcast_arguments"], [1267, 4, 1, "", "c_if"], [1263, 3, 1, "", "condition_bits"], [1268, 4, 1, "", "copy"], [1263, 3, 1, "", "decompositions"], [1263, 3, 1, "", "definition"], [1263, 3, 1, "", "duration"], [1269, 4, 1, "", "inverse"], [1270, 4, 1, "", "is_parameterized"], [1263, 3, 1, "", "label"], [1263, 3, 1, "", "name"], [1263, 3, 1, "", "num_clbits"], [1263, 3, 1, "", "num_qubits"], [1263, 3, 1, "", "params"], [1271, 4, 1, "", "qasm"], [1272, 4, 1, "", "repeat"], [1273, 4, 1, "", "replace_blocks"], [1274, 4, 1, "", "reverse_ops"], [1275, 4, 1, "", "soft_compare"], [1263, 3, 1, "", "unit"], [1276, 4, 1, "", "validate_parameter"]], "qiskit.circuit.classicalfunction": [[1277, 2, 1, "", "BooleanExpression"], [1296, 2, 1, "", "ClassicalFunction"], [1316, 1, 1, "", "ClassicalFunctionCompilerTypeError"], [1317, 1, 1, "", "ClassicalFunctionParseError"]], "qiskit.circuit.classicalfunction.BooleanExpression": [[1278, 4, 1, "", "add_decomposition"], [1279, 4, 1, "", "assemble"], [1280, 4, 1, "", "broadcast_arguments"], [1281, 4, 1, "", "c_if"], [1277, 3, 1, "", "condition_bits"], [1282, 4, 1, "", "control"], [1283, 4, 1, "", "copy"], [1277, 3, 1, "", "decompositions"], [1277, 3, 1, "", "definition"], [1277, 3, 1, "", "duration"], [1284, 4, 1, "", "from_dimacs_file"], [1285, 4, 1, "", "inverse"], [1286, 4, 1, "", "is_parameterized"], [1277, 3, 1, "", "label"], [1277, 3, 1, "", "name"], [1277, 3, 1, "", "num_clbits"], [1277, 3, 1, "", "num_qubits"], [1277, 3, 1, "", "params"], [1287, 4, 1, "", "power"], [1288, 4, 1, "", "qasm"], [1289, 4, 1, "", "repeat"], [1290, 4, 1, "", "reverse_ops"], [1291, 4, 1, "", "simulate"], [1292, 4, 1, "", "soft_compare"], [1293, 4, 1, "", "synth"], [1294, 4, 1, "", "to_matrix"], [1277, 3, 1, "", "unit"], [1295, 4, 1, "", "validate_parameter"]], "qiskit.circuit.classicalfunction.ClassicalFunction": [[1297, 4, 1, "", "add_decomposition"], [1296, 3, 1, "", "args"], [1298, 4, 1, "", "assemble"], [1299, 4, 1, "", "broadcast_arguments"], [1300, 4, 1, "", "c_if"], [1301, 4, 1, "", "compile"], [1296, 3, 1, "", "condition_bits"], [1302, 4, 1, "", "control"], [1303, 4, 1, "", "copy"], [1296, 3, 1, "", "decompositions"], [1296, 3, 1, "", "definition"], [1296, 3, 1, "", "duration"], [1304, 4, 1, "", "inverse"], [1305, 4, 1, "", "is_parameterized"], [1296, 3, 1, "", "label"], [1296, 3, 1, "", "name"], [1296, 3, 1, "", "network"], [1296, 3, 1, "", "num_clbits"], [1296, 3, 1, "", "num_qubits"], [1296, 3, 1, "", "params"], [1306, 4, 1, "", "power"], [1307, 4, 1, "", "qasm"], [1296, 3, 1, "", "qregs"], [1308, 4, 1, "", "repeat"], [1309, 4, 1, "", "reverse_ops"], [1296, 3, 1, "", "scopes"], [1310, 4, 1, "", "simulate"], [1311, 4, 1, "", "simulate_all"], [1312, 4, 1, "", "soft_compare"], [1313, 4, 1, "", "synth"], [1314, 4, 1, "", "to_matrix"], [1296, 3, 1, "", "truth_table"], [1296, 3, 1, "", "types"], [1296, 3, 1, "", "unit"], [1315, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library": [[1318, 2, 1, "", "AND"], [1319, 2, 1, "", "Barrier"], [1332, 2, 1, "", "C3SXGate"], [1333, 2, 1, "", "C3XGate"], [1336, 2, 1, "", "C4XGate"], [1339, 2, 1, "", "CCXGate"], [1342, 2, 1, "", "CDKMRippleCarryAdder"], [1343, 2, 1, "", "CHGate"], [1345, 2, 1, "", "CPhaseGate"], [1348, 2, 1, "", "CRXGate"], [1350, 2, 1, "", "CRYGate"], [1352, 2, 1, "", "CRZGate"], [1354, 2, 1, "", "CSXGate"], [1355, 2, 1, "", "CSwapGate"], [1357, 2, 1, "", "CU1Gate"], [1360, 2, 1, "", "CU3Gate"], [1362, 2, 1, "", "CUGate"], [1364, 2, 1, "", "CXGate"], [1367, 2, 1, "", "CYGate"], [1369, 2, 1, "", "CZGate"], [1371, 2, 1, "", "DCXGate"], [1372, 2, 1, "", "Diagonal"], [1373, 2, 1, "", "DraperQFTAdder"], [1374, 2, 1, "", "ECRGate"], [1376, 2, 1, "", "EfficientSU2"], [1377, 2, 1, "", "EvolvedOperatorAnsatz"], [1378, 2, 1, "", "ExactReciprocal"], [1379, 2, 1, "", "ExcitationPreserving"], [1380, 2, 1, "", "FourierChecking"], [1381, 2, 1, "", "FunctionalPauliRotations"], [1382, 2, 1, "", "GMS"], [1383, 2, 1, "", "GR"], [1384, 2, 1, "", "GRX"], [1385, 2, 1, "", "GRY"], [1386, 2, 1, "", "GRZ"], [1387, 2, 1, "", "GraphState"], [1388, 2, 1, "", "GroverOperator"], [1389, 2, 1, "", "HGate"], [1392, 2, 1, "", "HRSCumulativeMultiplier"], [1393, 2, 1, "", "HiddenLinearFunction"], [1394, 2, 1, "", "IGate"], [1396, 2, 1, "", "IQP"], [1397, 2, 1, "", "InnerProduct"], [1398, 2, 1, "", "IntegerComparator"], [1399, 2, 1, "", "LinearAmplitudeFunction"], [1401, 2, 1, "", "LinearFunction"], [1406, 2, 1, "", "LinearPauliRotations"], [1407, 2, 1, "", "MCMT"], [1410, 2, 1, "", "MCMTVChain"], [1412, 2, 1, "", "MCPhaseGate"], [1415, 2, 1, "", "MCXGate"], [1419, 2, 1, "", "MCXGrayCode"], [1421, 2, 1, "", "MCXRecursive"], [1424, 2, 1, "", "MCXVChain"], [1427, 2, 1, "", "MSGate"], [1428, 2, 1, "", "Measure"], [1441, 2, 1, "", "NLocal"], [1447, 2, 1, "", "OR"], [1448, 2, 1, "", "PauliEvolutionGate"], [1450, 2, 1, "", "PauliFeatureMap"], [1453, 2, 1, "", "PauliGate"], [1456, 2, 1, "", "PauliTwoDesign"], [1457, 2, 1, "", "Permutation"], [1458, 2, 1, "", "PhaseEstimation"], [1459, 2, 1, "", "PhaseGate"], [1462, 2, 1, "", "PhaseOracle"], [1465, 2, 1, "", "PiecewiseChebyshev"], [1466, 2, 1, "", "PiecewiseLinearPauliRotations"], [1468, 2, 1, "", "PiecewisePolynomialPauliRotations"], [1470, 2, 1, "", "PolynomialPauliRotations"], [1471, 2, 1, "", "QAOAAnsatz"], [1472, 2, 1, "", "QFT"], [1475, 2, 1, "", "QuadraticForm"], [1477, 2, 1, "", "QuantumVolume"], [1478, 2, 1, "", "RC3XGate"], [1479, 2, 1, "", "RCCXGate"], [1480, 2, 1, "", "RGQFTMultiplier"], [1481, 2, 1, "", "RGate"], [1483, 2, 1, "", "RVGate"], [1486, 2, 1, "", "RXGate"], [1489, 2, 1, "", "RXXGate"], [1491, 2, 1, "", "RYGate"], [1494, 2, 1, "", "RYYGate"], [1496, 2, 1, "", "RZGate"], [1499, 2, 1, "", "RZXGate"], [1501, 2, 1, "", "RZZGate"], [1503, 2, 1, "", "RealAmplitudes"], [1504, 2, 1, "", "Reset"], [1517, 2, 1, "", "SGate"], [1519, 2, 1, "", "SXGate"], [1522, 2, 1, "", "SXdgGate"], [1524, 2, 1, "", "SdgGate"], [1526, 2, 1, "", "StatePreparation"], [1530, 2, 1, "", "SwapGate"], [1533, 2, 1, "", "TGate"], [1535, 2, 1, "", "TdgGate"], [1537, 2, 1, "", "TwoLocal"], [1539, 2, 1, "", "U1Gate"], [1542, 2, 1, "", "U2Gate"], [1544, 2, 1, "", "U3Gate"], [1547, 2, 1, "", "UGate"], [1550, 2, 1, "", "VBERippleCarryAdder"], [1551, 2, 1, "", "WeightedAdder"], [1552, 2, 1, "", "XGate"], [1555, 2, 1, "", "XOR"], [1556, 2, 1, "", "XXMinusYYGate"], [1558, 2, 1, "", "XXPlusYYGate"], [1560, 2, 1, "", "YGate"], [1563, 2, 1, "", "ZFeatureMap"], [1564, 2, 1, "", "ZGate"], [1567, 2, 1, "", "ZZFeatureMap"], [1568, 5, 1, "", "clifford_2_1"], [1569, 5, 1, "", "clifford_2_2"], [1570, 5, 1, "", "clifford_2_3"], [1571, 5, 1, "", "clifford_2_4"], [1572, 5, 1, "", "clifford_3_1"], [1573, 5, 1, "", "clifford_4_1"], [1574, 5, 1, "", "clifford_4_2"], [1575, 5, 1, "", "clifford_4_3"], [1576, 5, 1, "", "clifford_4_4"], [1577, 5, 1, "", "clifford_5_1"], [1578, 5, 1, "", "clifford_6_1"], [1579, 5, 1, "", "clifford_6_2"], [1580, 5, 1, "", "clifford_6_3"], [1581, 5, 1, "", "clifford_6_4"], [1582, 5, 1, "", "clifford_6_5"], [1583, 5, 1, "", "clifford_8_1"], [1584, 5, 1, "", "clifford_8_2"], [1585, 5, 1, "", "clifford_8_3"], [1586, 2, 1, "", "iSwapGate"], [1587, 5, 1, "", "rzx_cy"], [1588, 5, 1, "", "rzx_xz"], [1589, 5, 1, "", "rzx_yz"], [1590, 5, 1, "", "rzx_zz1"], [1591, 5, 1, "", "rzx_zz2"], [1592, 5, 1, "", "rzx_zz3"]], "qiskit.circuit.library.AND": [[1318, 3, 1, "", "ancillas"], [1318, 3, 1, "", "calibrations"], [1318, 3, 1, "", "clbits"], [1318, 3, 1, "", "data"], [1318, 3, 1, "", "extension_lib"], [1318, 3, 1, "", "global_phase"], [1318, 3, 1, "", "header"], [1318, 3, 1, "", "instances"], [1318, 3, 1, "", "metadata"], [1318, 3, 1, "", "num_ancillas"], [1318, 3, 1, "", "num_clbits"], [1318, 3, 1, "", "num_parameters"], [1318, 3, 1, "", "num_qubits"], [1318, 3, 1, "", "op_start_times"], [1318, 3, 1, "", "parameters"], [1318, 3, 1, "", "prefix"], [1318, 3, 1, "", "qubits"]], "qiskit.circuit.library.Barrier": [[1320, 4, 1, "", "add_decomposition"], [1321, 4, 1, "", "assemble"], [1322, 4, 1, "", "broadcast_arguments"], [1323, 4, 1, "", "c_if"], [1319, 3, 1, "", "condition_bits"], [1324, 4, 1, "", "copy"], [1319, 3, 1, "", "decompositions"], [1319, 3, 1, "", "definition"], [1319, 3, 1, "", "duration"], [1325, 4, 1, "", "inverse"], [1326, 4, 1, "", "is_parameterized"], [1319, 3, 1, "", "label"], [1319, 3, 1, "", "name"], [1319, 3, 1, "", "num_clbits"], [1319, 3, 1, "", "num_qubits"], [1319, 3, 1, "", "params"], [1327, 4, 1, "", "qasm"], [1328, 4, 1, "", "repeat"], [1329, 4, 1, "", "reverse_ops"], [1330, 4, 1, "", "soft_compare"], [1319, 3, 1, "", "unit"], [1331, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.C3SXGate": [[1332, 3, 1, "", "condition_bits"], [1332, 3, 1, "", "ctrl_state"], [1332, 3, 1, "", "decompositions"], [1332, 3, 1, "", "definition"], [1332, 3, 1, "", "duration"], [1332, 3, 1, "", "label"], [1332, 3, 1, "", "name"], [1332, 3, 1, "", "num_clbits"], [1332, 3, 1, "", "num_ctrl_qubits"], [1332, 3, 1, "", "num_qubits"], [1332, 3, 1, "", "params"], [1332, 3, 1, "", "unit"]], "qiskit.circuit.library.C3XGate": [[1333, 3, 1, "", "condition_bits"], [1334, 4, 1, "", "control"], [1333, 3, 1, "", "ctrl_state"], [1333, 3, 1, "", "decompositions"], [1333, 3, 1, "", "definition"], [1333, 3, 1, "", "duration"], [1335, 4, 1, "", "inverse"], [1333, 3, 1, "", "label"], [1333, 3, 1, "", "name"], [1333, 3, 1, "", "num_clbits"], [1333, 3, 1, "", "num_ctrl_qubits"], [1333, 3, 1, "", "num_qubits"], [1333, 3, 1, "", "params"], [1333, 3, 1, "", "unit"]], "qiskit.circuit.library.C4XGate": [[1336, 3, 1, "", "condition_bits"], [1337, 4, 1, "", "control"], [1336, 3, 1, "", "ctrl_state"], [1336, 3, 1, "", "decompositions"], [1336, 3, 1, "", "definition"], [1336, 3, 1, "", "duration"], [1338, 4, 1, "", "inverse"], [1336, 3, 1, "", "label"], [1336, 3, 1, "", "name"], [1336, 3, 1, "", "num_clbits"], [1336, 3, 1, "", "num_ctrl_qubits"], [1336, 3, 1, "", "num_qubits"], [1336, 3, 1, "", "params"], [1336, 3, 1, "", "unit"]], "qiskit.circuit.library.CCXGate": [[1339, 3, 1, "", "condition_bits"], [1340, 4, 1, "", "control"], [1339, 3, 1, "", "ctrl_state"], [1339, 3, 1, "", "decompositions"], [1339, 3, 1, "", "definition"], [1339, 3, 1, "", "duration"], [1341, 4, 1, "", "inverse"], [1339, 3, 1, "", "label"], [1339, 3, 1, "", "name"], [1339, 3, 1, "", "num_clbits"], [1339, 3, 1, "", "num_ctrl_qubits"], [1339, 3, 1, "", "num_qubits"], [1339, 3, 1, "", "params"], [1339, 3, 1, "", "unit"]], "qiskit.circuit.library.CDKMRippleCarryAdder": [[1342, 3, 1, "", "ancillas"], [1342, 3, 1, "", "calibrations"], [1342, 3, 1, "", "clbits"], [1342, 3, 1, "", "data"], [1342, 3, 1, "", "extension_lib"], [1342, 3, 1, "", "global_phase"], [1342, 3, 1, "", "header"], [1342, 3, 1, "", "instances"], [1342, 3, 1, "", "metadata"], [1342, 3, 1, "", "num_ancillas"], [1342, 3, 1, "", "num_clbits"], [1342, 3, 1, "", "num_parameters"], [1342, 3, 1, "", "num_qubits"], [1342, 3, 1, "", "num_state_qubits"], [1342, 3, 1, "", "op_start_times"], [1342, 3, 1, "", "parameters"], [1342, 3, 1, "", "prefix"], [1342, 3, 1, "", "qubits"]], "qiskit.circuit.library.CHGate": [[1343, 3, 1, "", "condition_bits"], [1343, 3, 1, "", "ctrl_state"], [1343, 3, 1, "", "decompositions"], [1343, 3, 1, "", "definition"], [1343, 3, 1, "", "duration"], [1344, 4, 1, "", "inverse"], [1343, 3, 1, "", "label"], [1343, 3, 1, "", "name"], [1343, 3, 1, "", "num_clbits"], [1343, 3, 1, "", "num_ctrl_qubits"], [1343, 3, 1, "", "num_qubits"], [1343, 3, 1, "", "params"], [1343, 3, 1, "", "unit"]], "qiskit.circuit.library.CPhaseGate": [[1345, 3, 1, "", "condition_bits"], [1346, 4, 1, "", "control"], [1345, 3, 1, "", "ctrl_state"], [1345, 3, 1, "", "decompositions"], [1345, 3, 1, "", "definition"], [1345, 3, 1, "", "duration"], [1347, 4, 1, "", "inverse"], [1345, 3, 1, "", "label"], [1345, 3, 1, "", "name"], [1345, 3, 1, "", "num_clbits"], [1345, 3, 1, "", "num_ctrl_qubits"], [1345, 3, 1, "", "num_qubits"], [1345, 3, 1, "", "params"], [1345, 3, 1, "", "unit"]], "qiskit.circuit.library.CRXGate": [[1348, 3, 1, "", "condition_bits"], [1348, 3, 1, "", "ctrl_state"], [1348, 3, 1, "", "decompositions"], [1348, 3, 1, "", "definition"], [1348, 3, 1, "", "duration"], [1349, 4, 1, "", "inverse"], [1348, 3, 1, "", "label"], [1348, 3, 1, "", "name"], [1348, 3, 1, "", "num_clbits"], [1348, 3, 1, "", "num_ctrl_qubits"], [1348, 3, 1, "", "num_qubits"], [1348, 3, 1, "", "params"], [1348, 3, 1, "", "unit"]], "qiskit.circuit.library.CRYGate": [[1350, 3, 1, "", "condition_bits"], [1350, 3, 1, "", "ctrl_state"], [1350, 3, 1, "", "decompositions"], [1350, 3, 1, "", "definition"], [1350, 3, 1, "", "duration"], [1351, 4, 1, "", "inverse"], [1350, 3, 1, "", "label"], [1350, 3, 1, "", "name"], [1350, 3, 1, "", "num_clbits"], [1350, 3, 1, "", "num_ctrl_qubits"], [1350, 3, 1, "", "num_qubits"], [1350, 3, 1, "", "params"], [1350, 3, 1, "", "unit"]], "qiskit.circuit.library.CRZGate": [[1352, 3, 1, "", "condition_bits"], [1352, 3, 1, "", "ctrl_state"], [1352, 3, 1, "", "decompositions"], [1352, 3, 1, "", "definition"], [1352, 3, 1, "", "duration"], [1353, 4, 1, "", "inverse"], [1352, 3, 1, "", "label"], [1352, 3, 1, "", "name"], [1352, 3, 1, "", "num_clbits"], [1352, 3, 1, "", "num_ctrl_qubits"], [1352, 3, 1, "", "num_qubits"], [1352, 3, 1, "", "params"], [1352, 3, 1, "", "unit"]], "qiskit.circuit.library.CSXGate": [[1354, 3, 1, "", "condition_bits"], [1354, 3, 1, "", "ctrl_state"], [1354, 3, 1, "", "decompositions"], [1354, 3, 1, "", "definition"], [1354, 3, 1, "", "duration"], [1354, 3, 1, "", "label"], [1354, 3, 1, "", "name"], [1354, 3, 1, "", "num_clbits"], [1354, 3, 1, "", "num_ctrl_qubits"], [1354, 3, 1, "", "num_qubits"], [1354, 3, 1, "", "params"], [1354, 3, 1, "", "unit"]], "qiskit.circuit.library.CSwapGate": [[1355, 3, 1, "", "condition_bits"], [1355, 3, 1, "", "ctrl_state"], [1355, 3, 1, "", "decompositions"], [1355, 3, 1, "", "definition"], [1355, 3, 1, "", "duration"], [1356, 4, 1, "", "inverse"], [1355, 3, 1, "", "label"], [1355, 3, 1, "", "name"], [1355, 3, 1, "", "num_clbits"], [1355, 3, 1, "", "num_ctrl_qubits"], [1355, 3, 1, "", "num_qubits"], [1355, 3, 1, "", "params"], [1355, 3, 1, "", "unit"]], "qiskit.circuit.library.CU1Gate": [[1357, 3, 1, "", "condition_bits"], [1358, 4, 1, "", "control"], [1357, 3, 1, "", "ctrl_state"], [1357, 3, 1, "", "decompositions"], [1357, 3, 1, "", "definition"], [1357, 3, 1, "", "duration"], [1359, 4, 1, "", "inverse"], [1357, 3, 1, "", "label"], [1357, 3, 1, "", "name"], [1357, 3, 1, "", "num_clbits"], [1357, 3, 1, "", "num_ctrl_qubits"], [1357, 3, 1, "", "num_qubits"], [1357, 3, 1, "", "params"], [1357, 3, 1, "", "unit"]], "qiskit.circuit.library.CU3Gate": [[1360, 3, 1, "", "condition_bits"], [1360, 3, 1, "", "ctrl_state"], [1360, 3, 1, "", "decompositions"], [1360, 3, 1, "", "definition"], [1360, 3, 1, "", "duration"], [1361, 4, 1, "", "inverse"], [1360, 3, 1, "", "label"], [1360, 3, 1, "", "name"], [1360, 3, 1, "", "num_clbits"], [1360, 3, 1, "", "num_ctrl_qubits"], [1360, 3, 1, "", "num_qubits"], [1360, 3, 1, "", "params"], [1360, 3, 1, "", "unit"]], "qiskit.circuit.library.CUGate": [[1362, 3, 1, "", "condition_bits"], [1362, 3, 1, "", "ctrl_state"], [1362, 3, 1, "", "decompositions"], [1362, 3, 1, "", "definition"], [1362, 3, 1, "", "duration"], [1363, 4, 1, "", "inverse"], [1362, 3, 1, "", "label"], [1362, 3, 1, "", "name"], [1362, 3, 1, "", "num_clbits"], [1362, 3, 1, "", "num_ctrl_qubits"], [1362, 3, 1, "", "num_qubits"], [1362, 3, 1, "", "params"], [1362, 3, 1, "", "unit"]], "qiskit.circuit.library.CXGate": [[1364, 3, 1, "", "condition_bits"], [1365, 4, 1, "", "control"], [1364, 3, 1, "", "ctrl_state"], [1364, 3, 1, "", "decompositions"], [1364, 3, 1, "", "definition"], [1364, 3, 1, "", "duration"], [1366, 4, 1, "", "inverse"], [1364, 3, 1, "", "label"], [1364, 3, 1, "", "name"], [1364, 3, 1, "", "num_clbits"], [1364, 3, 1, "", "num_ctrl_qubits"], [1364, 3, 1, "", "num_qubits"], [1364, 3, 1, "", "params"], [1364, 3, 1, "", "unit"]], "qiskit.circuit.library.CYGate": [[1367, 3, 1, "", "condition_bits"], [1367, 3, 1, "", "ctrl_state"], [1367, 3, 1, "", "decompositions"], [1367, 3, 1, "", "definition"], [1367, 3, 1, "", "duration"], [1368, 4, 1, "", "inverse"], [1367, 3, 1, "", "label"], [1367, 3, 1, "", "name"], [1367, 3, 1, "", "num_clbits"], [1367, 3, 1, "", "num_ctrl_qubits"], [1367, 3, 1, "", "num_qubits"], [1367, 3, 1, "", "params"], [1367, 3, 1, "", "unit"]], "qiskit.circuit.library.CZGate": [[1369, 3, 1, "", "condition_bits"], [1369, 3, 1, "", "ctrl_state"], [1369, 3, 1, "", "decompositions"], [1369, 3, 1, "", "definition"], [1369, 3, 1, "", "duration"], [1370, 4, 1, "", "inverse"], [1369, 3, 1, "", "label"], [1369, 3, 1, "", "name"], [1369, 3, 1, "", "num_clbits"], [1369, 3, 1, "", "num_ctrl_qubits"], [1369, 3, 1, "", "num_qubits"], [1369, 3, 1, "", "params"], [1369, 3, 1, "", "unit"]], "qiskit.circuit.library.DCXGate": [[1371, 3, 1, "", "condition_bits"], [1371, 3, 1, "", "decompositions"], [1371, 3, 1, "", "definition"], [1371, 3, 1, "", "duration"], [1371, 3, 1, "", "label"], [1371, 3, 1, "", "name"], [1371, 3, 1, "", "num_clbits"], [1371, 3, 1, "", "num_qubits"], [1371, 3, 1, "", "params"], [1371, 3, 1, "", "unit"]], "qiskit.circuit.library.Diagonal": [[1372, 3, 1, "", "ancillas"], [1372, 3, 1, "", "calibrations"], [1372, 3, 1, "", "clbits"], [1372, 3, 1, "", "data"], [1372, 3, 1, "", "extension_lib"], [1372, 3, 1, "", "global_phase"], [1372, 3, 1, "", "header"], [1372, 3, 1, "", "instances"], [1372, 3, 1, "", "metadata"], [1372, 3, 1, "", "num_ancillas"], [1372, 3, 1, "", "num_clbits"], [1372, 3, 1, "", "num_parameters"], [1372, 3, 1, "", "num_qubits"], [1372, 3, 1, "", "op_start_times"], [1372, 3, 1, "", "parameters"], [1372, 3, 1, "", "prefix"], [1372, 3, 1, "", "qubits"]], "qiskit.circuit.library.DraperQFTAdder": [[1373, 3, 1, "", "ancillas"], [1373, 3, 1, "", "calibrations"], [1373, 3, 1, "", "clbits"], [1373, 3, 1, "", "data"], [1373, 3, 1, "", "extension_lib"], [1373, 3, 1, "", "global_phase"], [1373, 3, 1, "", "header"], [1373, 3, 1, "", "instances"], [1373, 3, 1, "", "metadata"], [1373, 3, 1, "", "num_ancillas"], [1373, 3, 1, "", "num_clbits"], [1373, 3, 1, "", "num_parameters"], [1373, 3, 1, "", "num_qubits"], [1373, 3, 1, "", "num_state_qubits"], [1373, 3, 1, "", "op_start_times"], [1373, 3, 1, "", "parameters"], [1373, 3, 1, "", "prefix"], [1373, 3, 1, "", "qubits"]], "qiskit.circuit.library.ECRGate": [[1374, 3, 1, "", "condition_bits"], [1374, 3, 1, "", "decompositions"], [1374, 3, 1, "", "definition"], [1374, 3, 1, "", "duration"], [1374, 3, 1, "", "label"], [1374, 3, 1, "", "name"], [1374, 3, 1, "", "num_clbits"], [1374, 3, 1, "", "num_qubits"], [1374, 3, 1, "", "params"], [1375, 4, 1, "", "to_matrix"], [1374, 3, 1, "", "unit"]], "qiskit.circuit.library.EfficientSU2": [[1376, 3, 1, "", "ancillas"], [1376, 3, 1, "", "calibrations"], [1376, 3, 1, "", "clbits"], [1376, 3, 1, "", "data"], [1376, 3, 1, "", "entanglement"], [1376, 3, 1, "", "entanglement_blocks"], [1376, 3, 1, "", "extension_lib"], [1376, 3, 1, "", "global_phase"], [1376, 3, 1, "", "header"], [1376, 3, 1, "", "initial_state"], [1376, 3, 1, "", "insert_barriers"], [1376, 3, 1, "", "instances"], [1376, 3, 1, "", "metadata"], [1376, 3, 1, "", "num_ancillas"], [1376, 3, 1, "", "num_clbits"], [1376, 3, 1, "", "num_layers"], [1376, 3, 1, "", "num_parameters"], [1376, 3, 1, "", "num_parameters_settable"], [1376, 3, 1, "", "num_qubits"], [1376, 3, 1, "", "op_start_times"], [1376, 3, 1, "", "ordered_parameters"], [1376, 3, 1, "", "parameter_bounds"], [1376, 3, 1, "", "parameters"], [1376, 3, 1, "", "preferred_init_points"], [1376, 3, 1, "", "prefix"], [1376, 3, 1, "", "qregs"], [1376, 3, 1, "", "qubits"], [1376, 3, 1, "", "reps"], [1376, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.EvolvedOperatorAnsatz": [[1377, 3, 1, "", "ancillas"], [1377, 3, 1, "", "calibrations"], [1377, 3, 1, "", "clbits"], [1377, 3, 1, "", "data"], [1377, 3, 1, "", "entanglement"], [1377, 3, 1, "", "entanglement_blocks"], [1377, 3, 1, "", "evolution"], [1377, 3, 1, "", "extension_lib"], [1377, 3, 1, "", "global_phase"], [1377, 3, 1, "", "header"], [1377, 3, 1, "", "initial_state"], [1377, 3, 1, "", "insert_barriers"], [1377, 3, 1, "", "instances"], [1377, 3, 1, "", "metadata"], [1377, 3, 1, "", "num_ancillas"], [1377, 3, 1, "", "num_clbits"], [1377, 3, 1, "", "num_layers"], [1377, 3, 1, "", "num_parameters"], [1377, 3, 1, "", "num_parameters_settable"], [1377, 3, 1, "", "num_qubits"], [1377, 3, 1, "", "op_start_times"], [1377, 3, 1, "", "operators"], [1377, 3, 1, "", "ordered_parameters"], [1377, 3, 1, "", "parameter_bounds"], [1377, 3, 1, "", "parameters"], [1377, 3, 1, "", "preferred_init_points"], [1377, 3, 1, "", "prefix"], [1377, 3, 1, "", "qregs"], [1377, 3, 1, "", "qubits"], [1377, 3, 1, "", "reps"], [1377, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.ExactReciprocal": [[1378, 3, 1, "", "ancillas"], [1378, 3, 1, "", "calibrations"], [1378, 3, 1, "", "clbits"], [1378, 3, 1, "", "data"], [1378, 3, 1, "", "extension_lib"], [1378, 3, 1, "", "global_phase"], [1378, 3, 1, "", "header"], [1378, 3, 1, "", "instances"], [1378, 3, 1, "", "metadata"], [1378, 3, 1, "", "num_ancillas"], [1378, 3, 1, "", "num_clbits"], [1378, 3, 1, "", "num_parameters"], [1378, 3, 1, "", "num_qubits"], [1378, 3, 1, "", "op_start_times"], [1378, 3, 1, "", "parameters"], [1378, 3, 1, "", "prefix"], [1378, 3, 1, "", "qubits"]], "qiskit.circuit.library.ExcitationPreserving": [[1379, 3, 1, "", "ancillas"], [1379, 3, 1, "", "calibrations"], [1379, 3, 1, "", "clbits"], [1379, 3, 1, "", "data"], [1379, 3, 1, "", "entanglement"], [1379, 3, 1, "", "entanglement_blocks"], [1379, 3, 1, "", "extension_lib"], [1379, 3, 1, "", "global_phase"], [1379, 3, 1, "", "header"], [1379, 3, 1, "", "initial_state"], [1379, 3, 1, "", "insert_barriers"], [1379, 3, 1, "", "instances"], [1379, 3, 1, "", "metadata"], [1379, 3, 1, "", "num_ancillas"], [1379, 3, 1, "", "num_clbits"], [1379, 3, 1, "", "num_layers"], [1379, 3, 1, "", "num_parameters"], [1379, 3, 1, "", "num_parameters_settable"], [1379, 3, 1, "", "num_qubits"], [1379, 3, 1, "", "op_start_times"], [1379, 3, 1, "", "ordered_parameters"], [1379, 3, 1, "", "parameter_bounds"], [1379, 3, 1, "", "parameters"], [1379, 3, 1, "", "preferred_init_points"], [1379, 3, 1, "", "prefix"], [1379, 3, 1, "", "qregs"], [1379, 3, 1, "", "qubits"], [1379, 3, 1, "", "reps"], [1379, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.FourierChecking": [[1380, 3, 1, "", "ancillas"], [1380, 3, 1, "", "calibrations"], [1380, 3, 1, "", "clbits"], [1380, 3, 1, "", "data"], [1380, 3, 1, "", "extension_lib"], [1380, 3, 1, "", "global_phase"], [1380, 3, 1, "", "header"], [1380, 3, 1, "", "instances"], [1380, 3, 1, "", "metadata"], [1380, 3, 1, "", "num_ancillas"], [1380, 3, 1, "", "num_clbits"], [1380, 3, 1, "", "num_parameters"], [1380, 3, 1, "", "num_qubits"], [1380, 3, 1, "", "op_start_times"], [1380, 3, 1, "", "parameters"], [1380, 3, 1, "", "prefix"], [1380, 3, 1, "", "qubits"]], "qiskit.circuit.library.FunctionalPauliRotations": [[1381, 3, 1, "", "ancillas"], [1381, 3, 1, "", "basis"], [1381, 3, 1, "", "calibrations"], [1381, 3, 1, "", "clbits"], [1381, 3, 1, "", "data"], [1381, 3, 1, "", "extension_lib"], [1381, 3, 1, "", "global_phase"], [1381, 3, 1, "", "header"], [1381, 3, 1, "", "instances"], [1381, 3, 1, "", "metadata"], [1381, 3, 1, "", "num_ancilla_qubits"], [1381, 3, 1, "", "num_ancillas"], [1381, 3, 1, "", "num_clbits"], [1381, 3, 1, "", "num_parameters"], [1381, 3, 1, "", "num_qubits"], [1381, 3, 1, "", "num_state_qubits"], [1381, 3, 1, "", "op_start_times"], [1381, 3, 1, "", "parameters"], [1381, 3, 1, "", "prefix"], [1381, 3, 1, "", "qregs"], [1381, 3, 1, "", "qubits"]], "qiskit.circuit.library.GMS": [[1382, 3, 1, "", "ancillas"], [1382, 3, 1, "", "calibrations"], [1382, 3, 1, "", "clbits"], [1382, 3, 1, "", "data"], [1382, 3, 1, "", "extension_lib"], [1382, 3, 1, "", "global_phase"], [1382, 3, 1, "", "header"], [1382, 3, 1, "", "instances"], [1382, 3, 1, "", "metadata"], [1382, 3, 1, "", "num_ancillas"], [1382, 3, 1, "", "num_clbits"], [1382, 3, 1, "", "num_parameters"], [1382, 3, 1, "", "num_qubits"], [1382, 3, 1, "", "op_start_times"], [1382, 3, 1, "", "parameters"], [1382, 3, 1, "", "prefix"], [1382, 3, 1, "", "qubits"]], "qiskit.circuit.library.GR": [[1383, 3, 1, "", "ancillas"], [1383, 3, 1, "", "calibrations"], [1383, 3, 1, "", "clbits"], [1383, 3, 1, "", "data"], [1383, 3, 1, "", "extension_lib"], [1383, 3, 1, "", "global_phase"], [1383, 3, 1, "", "header"], [1383, 3, 1, "", "instances"], [1383, 3, 1, "", "metadata"], [1383, 3, 1, "", "num_ancillas"], [1383, 3, 1, "", "num_clbits"], [1383, 3, 1, "", "num_parameters"], [1383, 3, 1, "", "num_qubits"], [1383, 3, 1, "", "op_start_times"], [1383, 3, 1, "", "parameters"], [1383, 3, 1, "", "prefix"], [1383, 3, 1, "", "qubits"]], "qiskit.circuit.library.GRX": [[1384, 3, 1, "", "ancillas"], [1384, 3, 1, "", "calibrations"], [1384, 3, 1, "", "clbits"], [1384, 3, 1, "", "data"], [1384, 3, 1, "", "extension_lib"], [1384, 3, 1, "", "global_phase"], [1384, 3, 1, "", "header"], [1384, 3, 1, "", "instances"], [1384, 3, 1, "", "metadata"], [1384, 3, 1, "", "num_ancillas"], [1384, 3, 1, "", "num_clbits"], [1384, 3, 1, "", "num_parameters"], [1384, 3, 1, "", "num_qubits"], [1384, 3, 1, "", "op_start_times"], [1384, 3, 1, "", "parameters"], [1384, 3, 1, "", "prefix"], [1384, 3, 1, "", "qubits"]], "qiskit.circuit.library.GRY": [[1385, 3, 1, "", "ancillas"], [1385, 3, 1, "", "calibrations"], [1385, 3, 1, "", "clbits"], [1385, 3, 1, "", "data"], [1385, 3, 1, "", "extension_lib"], [1385, 3, 1, "", "global_phase"], [1385, 3, 1, "", "header"], [1385, 3, 1, "", "instances"], [1385, 3, 1, "", "metadata"], [1385, 3, 1, "", "num_ancillas"], [1385, 3, 1, "", "num_clbits"], [1385, 3, 1, "", "num_parameters"], [1385, 3, 1, "", "num_qubits"], [1385, 3, 1, "", "op_start_times"], [1385, 3, 1, "", "parameters"], [1385, 3, 1, "", "prefix"], [1385, 3, 1, "", "qubits"]], "qiskit.circuit.library.GRZ": [[1386, 3, 1, "", "ancillas"], [1386, 3, 1, "", "calibrations"], [1386, 3, 1, "", "clbits"], [1386, 3, 1, "", "data"], [1386, 3, 1, "", "extension_lib"], [1386, 3, 1, "", "global_phase"], [1386, 3, 1, "", "header"], [1386, 3, 1, "", "instances"], [1386, 3, 1, "", "metadata"], [1386, 3, 1, "", "num_ancillas"], [1386, 3, 1, "", "num_clbits"], [1386, 3, 1, "", "num_parameters"], [1386, 3, 1, "", "num_qubits"], [1386, 3, 1, "", "op_start_times"], [1386, 3, 1, "", "parameters"], [1386, 3, 1, "", "prefix"], [1386, 3, 1, "", "qubits"]], "qiskit.circuit.library.GraphState": [[1387, 3, 1, "", "ancillas"], [1387, 3, 1, "", "calibrations"], [1387, 3, 1, "", "clbits"], [1387, 3, 1, "", "data"], [1387, 3, 1, "", "extension_lib"], [1387, 3, 1, "", "global_phase"], [1387, 3, 1, "", "header"], [1387, 3, 1, "", "instances"], [1387, 3, 1, "", "metadata"], [1387, 3, 1, "", "num_ancillas"], [1387, 3, 1, "", "num_clbits"], [1387, 3, 1, "", "num_parameters"], [1387, 3, 1, "", "num_qubits"], [1387, 3, 1, "", "op_start_times"], [1387, 3, 1, "", "parameters"], [1387, 3, 1, "", "prefix"], [1387, 3, 1, "", "qubits"]], "qiskit.circuit.library.GroverOperator": [[1388, 3, 1, "", "ancillas"], [1388, 3, 1, "", "calibrations"], [1388, 3, 1, "", "clbits"], [1388, 3, 1, "", "data"], [1388, 3, 1, "", "extension_lib"], [1388, 3, 1, "", "global_phase"], [1388, 3, 1, "", "header"], [1388, 3, 1, "", "instances"], [1388, 3, 1, "", "metadata"], [1388, 3, 1, "", "num_ancillas"], [1388, 3, 1, "", "num_clbits"], [1388, 3, 1, "", "num_parameters"], [1388, 3, 1, "", "num_qubits"], [1388, 3, 1, "", "op_start_times"], [1388, 3, 1, "", "oracle"], [1388, 3, 1, "", "parameters"], [1388, 3, 1, "", "prefix"], [1388, 3, 1, "", "qubits"], [1388, 3, 1, "", "reflection_qubits"], [1388, 3, 1, "", "state_preparation"], [1388, 3, 1, "", "zero_reflection"]], "qiskit.circuit.library.HGate": [[1389, 3, 1, "", "condition_bits"], [1390, 4, 1, "", "control"], [1389, 3, 1, "", "decompositions"], [1389, 3, 1, "", "definition"], [1389, 3, 1, "", "duration"], [1391, 4, 1, "", "inverse"], [1389, 3, 1, "", "label"], [1389, 3, 1, "", "name"], [1389, 3, 1, "", "num_clbits"], [1389, 3, 1, "", "num_qubits"], [1389, 3, 1, "", "params"], [1389, 3, 1, "", "unit"]], "qiskit.circuit.library.HRSCumulativeMultiplier": [[1392, 3, 1, "", "ancillas"], [1392, 3, 1, "", "calibrations"], [1392, 3, 1, "", "clbits"], [1392, 3, 1, "", "data"], [1392, 3, 1, "", "extension_lib"], [1392, 3, 1, "", "global_phase"], [1392, 3, 1, "", "header"], [1392, 3, 1, "", "instances"], [1392, 3, 1, "", "metadata"], [1392, 3, 1, "", "num_ancillas"], [1392, 3, 1, "", "num_clbits"], [1392, 3, 1, "", "num_parameters"], [1392, 3, 1, "", "num_qubits"], [1392, 3, 1, "", "num_result_qubits"], [1392, 3, 1, "", "num_state_qubits"], [1392, 3, 1, "", "op_start_times"], [1392, 3, 1, "", "parameters"], [1392, 3, 1, "", "prefix"], [1392, 3, 1, "", "qubits"]], "qiskit.circuit.library.HiddenLinearFunction": [[1393, 3, 1, "", "ancillas"], [1393, 3, 1, "", "calibrations"], [1393, 3, 1, "", "clbits"], [1393, 3, 1, "", "data"], [1393, 3, 1, "", "extension_lib"], [1393, 3, 1, "", "global_phase"], [1393, 3, 1, "", "header"], [1393, 3, 1, "", "instances"], [1393, 3, 1, "", "metadata"], [1393, 3, 1, "", "num_ancillas"], [1393, 3, 1, "", "num_clbits"], [1393, 3, 1, "", "num_parameters"], [1393, 3, 1, "", "num_qubits"], [1393, 3, 1, "", "op_start_times"], [1393, 3, 1, "", "parameters"], [1393, 3, 1, "", "prefix"], [1393, 3, 1, "", "qubits"]], "qiskit.circuit.library.IGate": [[1394, 3, 1, "", "condition_bits"], [1394, 3, 1, "", "decompositions"], [1394, 3, 1, "", "definition"], [1394, 3, 1, "", "duration"], [1395, 4, 1, "", "inverse"], [1394, 3, 1, "", "label"], [1394, 3, 1, "", "name"], [1394, 3, 1, "", "num_clbits"], [1394, 3, 1, "", "num_qubits"], [1394, 3, 1, "", "params"], [1394, 3, 1, "", "unit"]], "qiskit.circuit.library.IQP": [[1396, 3, 1, "", "ancillas"], [1396, 3, 1, "", "calibrations"], [1396, 3, 1, "", "clbits"], [1396, 3, 1, "", "data"], [1396, 3, 1, "", "extension_lib"], [1396, 3, 1, "", "global_phase"], [1396, 3, 1, "", "header"], [1396, 3, 1, "", "instances"], [1396, 3, 1, "", "metadata"], [1396, 3, 1, "", "num_ancillas"], [1396, 3, 1, "", "num_clbits"], [1396, 3, 1, "", "num_parameters"], [1396, 3, 1, "", "num_qubits"], [1396, 3, 1, "", "op_start_times"], [1396, 3, 1, "", "parameters"], [1396, 3, 1, "", "prefix"], [1396, 3, 1, "", "qubits"]], "qiskit.circuit.library.InnerProduct": [[1397, 3, 1, "", "ancillas"], [1397, 3, 1, "", "calibrations"], [1397, 3, 1, "", "clbits"], [1397, 3, 1, "", "data"], [1397, 3, 1, "", "extension_lib"], [1397, 3, 1, "", "global_phase"], [1397, 3, 1, "", "header"], [1397, 3, 1, "", "instances"], [1397, 3, 1, "", "metadata"], [1397, 3, 1, "", "num_ancillas"], [1397, 3, 1, "", "num_clbits"], [1397, 3, 1, "", "num_parameters"], [1397, 3, 1, "", "num_qubits"], [1397, 3, 1, "", "op_start_times"], [1397, 3, 1, "", "parameters"], [1397, 3, 1, "", "prefix"], [1397, 3, 1, "", "qubits"]], "qiskit.circuit.library.IntegerComparator": [[1398, 3, 1, "", "ancillas"], [1398, 3, 1, "", "calibrations"], [1398, 3, 1, "", "clbits"], [1398, 3, 1, "", "data"], [1398, 3, 1, "", "extension_lib"], [1398, 3, 1, "", "geq"], [1398, 3, 1, "", "global_phase"], [1398, 3, 1, "", "header"], [1398, 3, 1, "", "instances"], [1398, 3, 1, "", "metadata"], [1398, 3, 1, "", "num_ancilla_qubits"], [1398, 3, 1, "", "num_ancillas"], [1398, 3, 1, "", "num_clbits"], [1398, 3, 1, "", "num_parameters"], [1398, 3, 1, "", "num_qubits"], [1398, 3, 1, "", "num_state_qubits"], [1398, 3, 1, "", "op_start_times"], [1398, 3, 1, "", "parameters"], [1398, 3, 1, "", "prefix"], [1398, 3, 1, "", "qregs"], [1398, 3, 1, "", "qubits"], [1398, 3, 1, "", "value"]], "qiskit.circuit.library.LinearAmplitudeFunction": [[1399, 3, 1, "", "ancillas"], [1399, 3, 1, "", "calibrations"], [1399, 3, 1, "", "clbits"], [1399, 3, 1, "", "data"], [1399, 3, 1, "", "extension_lib"], [1399, 3, 1, "", "global_phase"], [1399, 3, 1, "", "header"], [1399, 3, 1, "", "instances"], [1399, 3, 1, "", "metadata"], [1399, 3, 1, "", "num_ancillas"], [1399, 3, 1, "", "num_clbits"], [1399, 3, 1, "", "num_parameters"], [1399, 3, 1, "", "num_qubits"], [1399, 3, 1, "", "op_start_times"], [1399, 3, 1, "", "parameters"], [1400, 4, 1, "", "post_processing"], [1399, 3, 1, "", "prefix"], [1399, 3, 1, "", "qubits"]], "qiskit.circuit.library.LinearFunction": [[1401, 3, 1, "", "condition_bits"], [1401, 3, 1, "", "decompositions"], [1401, 3, 1, "", "definition"], [1401, 3, 1, "", "duration"], [1402, 4, 1, "", "is_permutation"], [1401, 3, 1, "", "label"], [1401, 3, 1, "", "linear"], [1401, 3, 1, "", "name"], [1401, 3, 1, "", "num_clbits"], [1401, 3, 1, "", "num_qubits"], [1401, 3, 1, "", "original_circuit"], [1401, 3, 1, "", "params"], [1403, 4, 1, "", "permutation_pattern"], [1404, 4, 1, "", "synthesize"], [1401, 3, 1, "", "unit"], [1405, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.LinearPauliRotations": [[1406, 3, 1, "", "ancillas"], [1406, 3, 1, "", "basis"], [1406, 3, 1, "", "calibrations"], [1406, 3, 1, "", "clbits"], [1406, 3, 1, "", "data"], [1406, 3, 1, "", "extension_lib"], [1406, 3, 1, "", "global_phase"], [1406, 3, 1, "", "header"], [1406, 3, 1, "", "instances"], [1406, 3, 1, "", "metadata"], [1406, 3, 1, "", "num_ancilla_qubits"], [1406, 3, 1, "", "num_ancillas"], [1406, 3, 1, "", "num_clbits"], [1406, 3, 1, "", "num_parameters"], [1406, 3, 1, "", "num_qubits"], [1406, 3, 1, "", "num_state_qubits"], [1406, 3, 1, "", "offset"], [1406, 3, 1, "", "op_start_times"], [1406, 3, 1, "", "parameters"], [1406, 3, 1, "", "prefix"], [1406, 3, 1, "", "qregs"], [1406, 3, 1, "", "qubits"], [1406, 3, 1, "", "slope"]], "qiskit.circuit.library.MCMT": [[1407, 3, 1, "", "ancillas"], [1407, 3, 1, "", "calibrations"], [1407, 3, 1, "", "clbits"], [1408, 4, 1, "", "control"], [1407, 3, 1, "", "data"], [1407, 3, 1, "", "extension_lib"], [1407, 3, 1, "", "global_phase"], [1407, 3, 1, "", "header"], [1407, 3, 1, "", "instances"], [1409, 4, 1, "", "inverse"], [1407, 3, 1, "", "label"], [1407, 3, 1, "", "metadata"], [1407, 3, 1, "", "num_ancilla_qubits"], [1407, 3, 1, "", "num_ancillas"], [1407, 3, 1, "", "num_clbits"], [1407, 3, 1, "", "num_parameters"], [1407, 3, 1, "", "num_qubits"], [1407, 3, 1, "", "op_start_times"], [1407, 3, 1, "", "parameters"], [1407, 3, 1, "", "prefix"], [1407, 3, 1, "", "qubits"]], "qiskit.circuit.library.MCMTVChain": [[1410, 3, 1, "", "ancillas"], [1410, 3, 1, "", "calibrations"], [1410, 3, 1, "", "clbits"], [1410, 3, 1, "", "data"], [1410, 3, 1, "", "extension_lib"], [1410, 3, 1, "", "global_phase"], [1410, 3, 1, "", "header"], [1410, 3, 1, "", "instances"], [1411, 4, 1, "", "inverse"], [1410, 3, 1, "", "label"], [1410, 3, 1, "", "metadata"], [1410, 3, 1, "", "num_ancilla_qubits"], [1410, 3, 1, "", "num_ancillas"], [1410, 3, 1, "", "num_clbits"], [1410, 3, 1, "", "num_parameters"], [1410, 3, 1, "", "num_qubits"], [1410, 3, 1, "", "op_start_times"], [1410, 3, 1, "", "parameters"], [1410, 3, 1, "", "prefix"], [1410, 3, 1, "", "qubits"]], "qiskit.circuit.library.MCPhaseGate": [[1412, 3, 1, "", "condition_bits"], [1413, 4, 1, "", "control"], [1412, 3, 1, "", "ctrl_state"], [1412, 3, 1, "", "decompositions"], [1412, 3, 1, "", "definition"], [1412, 3, 1, "", "duration"], [1414, 4, 1, "", "inverse"], [1412, 3, 1, "", "label"], [1412, 3, 1, "", "name"], [1412, 3, 1, "", "num_clbits"], [1412, 3, 1, "", "num_ctrl_qubits"], [1412, 3, 1, "", "num_qubits"], [1412, 3, 1, "", "params"], [1412, 3, 1, "", "unit"]], "qiskit.circuit.library.MCXGate": [[1415, 3, 1, "", "condition_bits"], [1416, 4, 1, "", "control"], [1415, 3, 1, "", "ctrl_state"], [1415, 3, 1, "", "decompositions"], [1415, 3, 1, "", "definition"], [1415, 3, 1, "", "duration"], [1417, 4, 1, "", "get_num_ancilla_qubits"], [1418, 4, 1, "", "inverse"], [1415, 3, 1, "", "label"], [1415, 3, 1, "", "name"], [1415, 3, 1, "", "num_ancilla_qubits"], [1415, 3, 1, "", "num_clbits"], [1415, 3, 1, "", "num_ctrl_qubits"], [1415, 3, 1, "", "num_qubits"], [1415, 3, 1, "", "params"], [1415, 3, 1, "", "unit"]], "qiskit.circuit.library.MCXGrayCode": [[1419, 3, 1, "", "condition_bits"], [1419, 3, 1, "", "ctrl_state"], [1419, 3, 1, "", "decompositions"], [1419, 3, 1, "", "definition"], [1419, 3, 1, "", "duration"], [1420, 4, 1, "", "inverse"], [1419, 3, 1, "", "label"], [1419, 3, 1, "", "name"], [1419, 3, 1, "", "num_ancilla_qubits"], [1419, 3, 1, "", "num_clbits"], [1419, 3, 1, "", "num_ctrl_qubits"], [1419, 3, 1, "", "num_qubits"], [1419, 3, 1, "", "params"], [1419, 3, 1, "", "unit"]], "qiskit.circuit.library.MCXRecursive": [[1421, 3, 1, "", "condition_bits"], [1421, 3, 1, "", "ctrl_state"], [1421, 3, 1, "", "decompositions"], [1421, 3, 1, "", "definition"], [1421, 3, 1, "", "duration"], [1422, 4, 1, "", "get_num_ancilla_qubits"], [1423, 4, 1, "", "inverse"], [1421, 3, 1, "", "label"], [1421, 3, 1, "", "name"], [1421, 3, 1, "", "num_ancilla_qubits"], [1421, 3, 1, "", "num_clbits"], [1421, 3, 1, "", "num_ctrl_qubits"], [1421, 3, 1, "", "num_qubits"], [1421, 3, 1, "", "params"], [1421, 3, 1, "", "unit"]], "qiskit.circuit.library.MCXVChain": [[1424, 3, 1, "", "condition_bits"], [1424, 3, 1, "", "ctrl_state"], [1424, 3, 1, "", "decompositions"], [1424, 3, 1, "", "definition"], [1424, 3, 1, "", "duration"], [1425, 4, 1, "", "get_num_ancilla_qubits"], [1426, 4, 1, "", "inverse"], [1424, 3, 1, "", "label"], [1424, 3, 1, "", "name"], [1424, 3, 1, "", "num_ancilla_qubits"], [1424, 3, 1, "", "num_clbits"], [1424, 3, 1, "", "num_ctrl_qubits"], [1424, 3, 1, "", "num_qubits"], [1424, 3, 1, "", "params"], [1424, 3, 1, "", "unit"]], "qiskit.circuit.library.MSGate": [[1427, 3, 1, "", "condition_bits"], [1427, 3, 1, "", "decompositions"], [1427, 3, 1, "", "definition"], [1427, 3, 1, "", "duration"], [1427, 3, 1, "", "label"], [1427, 3, 1, "", "name"], [1427, 3, 1, "", "num_clbits"], [1427, 3, 1, "", "num_qubits"], [1427, 3, 1, "", "params"], [1427, 3, 1, "", "unit"]], "qiskit.circuit.library.Measure": [[1429, 4, 1, "", "add_decomposition"], [1430, 4, 1, "", "assemble"], [1431, 4, 1, "", "broadcast_arguments"], [1432, 4, 1, "", "c_if"], [1428, 3, 1, "", "condition_bits"], [1433, 4, 1, "", "copy"], [1428, 3, 1, "", "decompositions"], [1428, 3, 1, "", "definition"], [1428, 3, 1, "", "duration"], [1434, 4, 1, "", "inverse"], [1435, 4, 1, "", "is_parameterized"], [1428, 3, 1, "", "label"], [1428, 3, 1, "", "name"], [1428, 3, 1, "", "num_clbits"], [1428, 3, 1, "", "num_qubits"], [1428, 3, 1, "", "params"], [1436, 4, 1, "", "qasm"], [1437, 4, 1, "", "repeat"], [1438, 4, 1, "", "reverse_ops"], [1439, 4, 1, "", "soft_compare"], [1428, 3, 1, "", "unit"], [1440, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.NLocal": [[1442, 4, 1, "", "add_layer"], [1441, 3, 1, "", "ancillas"], [1443, 4, 1, "", "assign_parameters"], [1441, 3, 1, "", "calibrations"], [1441, 3, 1, "", "clbits"], [1441, 3, 1, "", "data"], [1441, 3, 1, "", "entanglement"], [1441, 3, 1, "", "entanglement_blocks"], [1441, 3, 1, "", "extension_lib"], [1444, 4, 1, "", "get_entangler_map"], [1445, 4, 1, "", "get_unentangled_qubits"], [1441, 3, 1, "", "global_phase"], [1441, 3, 1, "", "header"], [1441, 3, 1, "", "initial_state"], [1441, 3, 1, "", "insert_barriers"], [1441, 3, 1, "", "instances"], [1441, 3, 1, "", "metadata"], [1441, 3, 1, "", "num_ancillas"], [1441, 3, 1, "", "num_clbits"], [1441, 3, 1, "", "num_layers"], [1441, 3, 1, "", "num_parameters"], [1441, 3, 1, "", "num_parameters_settable"], [1441, 3, 1, "", "num_qubits"], [1441, 3, 1, "", "op_start_times"], [1441, 3, 1, "", "ordered_parameters"], [1441, 3, 1, "", "parameter_bounds"], [1441, 3, 1, "", "parameters"], [1441, 3, 1, "", "preferred_init_points"], [1441, 3, 1, "", "prefix"], [1446, 4, 1, "", "print_settings"], [1441, 3, 1, "", "qregs"], [1441, 3, 1, "", "qubits"], [1441, 3, 1, "", "reps"], [1441, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.OR": [[1447, 3, 1, "", "ancillas"], [1447, 3, 1, "", "calibrations"], [1447, 3, 1, "", "clbits"], [1447, 3, 1, "", "data"], [1447, 3, 1, "", "extension_lib"], [1447, 3, 1, "", "global_phase"], [1447, 3, 1, "", "header"], [1447, 3, 1, "", "instances"], [1447, 3, 1, "", "metadata"], [1447, 3, 1, "", "num_ancillas"], [1447, 3, 1, "", "num_clbits"], [1447, 3, 1, "", "num_parameters"], [1447, 3, 1, "", "num_qubits"], [1447, 3, 1, "", "op_start_times"], [1447, 3, 1, "", "parameters"], [1447, 3, 1, "", "prefix"], [1447, 3, 1, "", "qubits"]], "qiskit.circuit.library.PauliEvolutionGate": [[1448, 3, 1, "", "condition_bits"], [1448, 3, 1, "", "decompositions"], [1448, 3, 1, "", "definition"], [1448, 3, 1, "", "duration"], [1448, 3, 1, "", "label"], [1448, 3, 1, "", "name"], [1448, 3, 1, "", "num_clbits"], [1448, 3, 1, "", "num_qubits"], [1448, 3, 1, "", "params"], [1448, 3, 1, "", "time"], [1448, 3, 1, "", "unit"], [1449, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.PauliFeatureMap": [[1450, 3, 1, "", "alpha"], [1450, 3, 1, "", "ancillas"], [1450, 3, 1, "", "calibrations"], [1450, 3, 1, "", "clbits"], [1450, 3, 1, "", "data"], [1450, 3, 1, "", "entanglement"], [1450, 3, 1, "", "entanglement_blocks"], [1450, 3, 1, "", "extension_lib"], [1450, 3, 1, "", "feature_dimension"], [1450, 3, 1, "", "global_phase"], [1450, 3, 1, "", "header"], [1450, 3, 1, "", "initial_state"], [1450, 3, 1, "", "insert_barriers"], [1450, 3, 1, "", "instances"], [1450, 3, 1, "", "metadata"], [1450, 3, 1, "", "num_ancillas"], [1450, 3, 1, "", "num_clbits"], [1450, 3, 1, "", "num_layers"], [1450, 3, 1, "", "num_parameters"], [1450, 3, 1, "", "num_parameters_settable"], [1450, 3, 1, "", "num_qubits"], [1450, 3, 1, "", "op_start_times"], [1450, 3, 1, "", "ordered_parameters"], [1450, 3, 1, "", "parameter_bounds"], [1450, 3, 1, "", "parameters"], [1451, 4, 1, "", "pauli_block"], [1452, 4, 1, "", "pauli_evolution"], [1450, 3, 1, "", "paulis"], [1450, 3, 1, "", "preferred_init_points"], [1450, 3, 1, "", "prefix"], [1450, 3, 1, "", "qregs"], [1450, 3, 1, "", "qubits"], [1450, 3, 1, "", "reps"], [1450, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.PauliGate": [[1453, 3, 1, "", "condition_bits"], [1453, 3, 1, "", "decompositions"], [1453, 3, 1, "", "definition"], [1453, 3, 1, "", "duration"], [1454, 4, 1, "", "inverse"], [1453, 3, 1, "", "label"], [1453, 3, 1, "", "name"], [1453, 3, 1, "", "num_clbits"], [1453, 3, 1, "", "num_qubits"], [1453, 3, 1, "", "params"], [1453, 3, 1, "", "unit"], [1455, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.PauliTwoDesign": [[1456, 3, 1, "", "ancillas"], [1456, 3, 1, "", "calibrations"], [1456, 3, 1, "", "clbits"], [1456, 3, 1, "", "data"], [1456, 3, 1, "", "entanglement"], [1456, 3, 1, "", "entanglement_blocks"], [1456, 3, 1, "", "extension_lib"], [1456, 3, 1, "", "global_phase"], [1456, 3, 1, "", "header"], [1456, 3, 1, "", "initial_state"], [1456, 3, 1, "", "insert_barriers"], [1456, 3, 1, "", "instances"], [1456, 3, 1, "", "metadata"], [1456, 3, 1, "", "num_ancillas"], [1456, 3, 1, "", "num_clbits"], [1456, 3, 1, "", "num_layers"], [1456, 3, 1, "", "num_parameters"], [1456, 3, 1, "", "num_parameters_settable"], [1456, 3, 1, "", "num_qubits"], [1456, 3, 1, "", "op_start_times"], [1456, 3, 1, "", "ordered_parameters"], [1456, 3, 1, "", "parameter_bounds"], [1456, 3, 1, "", "parameters"], [1456, 3, 1, "", "preferred_init_points"], [1456, 3, 1, "", "prefix"], [1456, 3, 1, "", "qregs"], [1456, 3, 1, "", "qubits"], [1456, 3, 1, "", "reps"], [1456, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.Permutation": [[1457, 3, 1, "", "ancillas"], [1457, 3, 1, "", "calibrations"], [1457, 3, 1, "", "clbits"], [1457, 3, 1, "", "data"], [1457, 3, 1, "", "extension_lib"], [1457, 3, 1, "", "global_phase"], [1457, 3, 1, "", "header"], [1457, 3, 1, "", "instances"], [1457, 3, 1, "", "metadata"], [1457, 3, 1, "", "num_ancillas"], [1457, 3, 1, "", "num_clbits"], [1457, 3, 1, "", "num_parameters"], [1457, 3, 1, "", "num_qubits"], [1457, 3, 1, "", "op_start_times"], [1457, 3, 1, "", "parameters"], [1457, 3, 1, "", "prefix"], [1457, 3, 1, "", "qubits"]], "qiskit.circuit.library.PhaseEstimation": [[1458, 3, 1, "", "ancillas"], [1458, 3, 1, "", "calibrations"], [1458, 3, 1, "", "clbits"], [1458, 3, 1, "", "data"], [1458, 3, 1, "", "extension_lib"], [1458, 3, 1, "", "global_phase"], [1458, 3, 1, "", "header"], [1458, 3, 1, "", "instances"], [1458, 3, 1, "", "metadata"], [1458, 3, 1, "", "num_ancillas"], [1458, 3, 1, "", "num_clbits"], [1458, 3, 1, "", "num_parameters"], [1458, 3, 1, "", "num_qubits"], [1458, 3, 1, "", "op_start_times"], [1458, 3, 1, "", "parameters"], [1458, 3, 1, "", "prefix"], [1458, 3, 1, "", "qubits"]], "qiskit.circuit.library.PhaseGate": [[1459, 3, 1, "", "condition_bits"], [1460, 4, 1, "", "control"], [1459, 3, 1, "", "decompositions"], [1459, 3, 1, "", "definition"], [1459, 3, 1, "", "duration"], [1461, 4, 1, "", "inverse"], [1459, 3, 1, "", "label"], [1459, 3, 1, "", "name"], [1459, 3, 1, "", "num_clbits"], [1459, 3, 1, "", "num_qubits"], [1459, 3, 1, "", "params"], [1459, 3, 1, "", "unit"]], "qiskit.circuit.library.PhaseOracle": [[1462, 3, 1, "", "ancillas"], [1462, 3, 1, "", "calibrations"], [1462, 3, 1, "", "clbits"], [1462, 3, 1, "", "data"], [1463, 4, 1, "", "evaluate_bitstring"], [1462, 3, 1, "", "extension_lib"], [1464, 4, 1, "", "from_dimacs_file"], [1462, 3, 1, "", "global_phase"], [1462, 3, 1, "", "header"], [1462, 3, 1, "", "instances"], [1462, 3, 1, "", "metadata"], [1462, 3, 1, "", "num_ancillas"], [1462, 3, 1, "", "num_clbits"], [1462, 3, 1, "", "num_parameters"], [1462, 3, 1, "", "num_qubits"], [1462, 3, 1, "", "op_start_times"], [1462, 3, 1, "", "parameters"], [1462, 3, 1, "", "prefix"], [1462, 3, 1, "", "qubits"]], "qiskit.circuit.library.PiecewiseChebyshev": [[1465, 3, 1, "", "ancillas"], [1465, 3, 1, "", "breakpoints"], [1465, 3, 1, "", "calibrations"], [1465, 3, 1, "", "clbits"], [1465, 3, 1, "", "data"], [1465, 3, 1, "", "degree"], [1465, 3, 1, "", "extension_lib"], [1465, 3, 1, "", "f_x"], [1465, 3, 1, "", "global_phase"], [1465, 3, 1, "", "header"], [1465, 3, 1, "", "instances"], [1465, 3, 1, "", "metadata"], [1465, 3, 1, "", "num_ancillas"], [1465, 3, 1, "", "num_clbits"], [1465, 3, 1, "", "num_parameters"], [1465, 3, 1, "", "num_qubits"], [1465, 3, 1, "", "num_state_qubits"], [1465, 3, 1, "", "op_start_times"], [1465, 3, 1, "", "parameters"], [1465, 3, 1, "", "polynomials"], [1465, 3, 1, "", "prefix"], [1465, 3, 1, "", "qregs"], [1465, 3, 1, "", "qubits"]], "qiskit.circuit.library.PiecewiseLinearPauliRotations": [[1466, 3, 1, "", "ancillas"], [1466, 3, 1, "", "basis"], [1466, 3, 1, "", "breakpoints"], [1466, 3, 1, "", "calibrations"], [1466, 3, 1, "", "clbits"], [1466, 3, 1, "", "contains_zero_breakpoint"], [1466, 3, 1, "", "data"], [1467, 4, 1, "", "evaluate"], [1466, 3, 1, "", "extension_lib"], [1466, 3, 1, "", "global_phase"], [1466, 3, 1, "", "header"], [1466, 3, 1, "", "instances"], [1466, 3, 1, "", "mapped_offsets"], [1466, 3, 1, "", "mapped_slopes"], [1466, 3, 1, "", "metadata"], [1466, 3, 1, "", "num_ancilla_qubits"], [1466, 3, 1, "", "num_ancillas"], [1466, 3, 1, "", "num_clbits"], [1466, 3, 1, "", "num_parameters"], [1466, 3, 1, "", "num_qubits"], [1466, 3, 1, "", "num_state_qubits"], [1466, 3, 1, "", "offsets"], [1466, 3, 1, "", "op_start_times"], [1466, 3, 1, "", "parameters"], [1466, 3, 1, "", "prefix"], [1466, 3, 1, "", "qregs"], [1466, 3, 1, "", "qubits"], [1466, 3, 1, "", "slopes"]], "qiskit.circuit.library.PiecewisePolynomialPauliRotations": [[1468, 3, 1, "", "ancillas"], [1468, 3, 1, "", "basis"], [1468, 3, 1, "", "breakpoints"], [1468, 3, 1, "", "calibrations"], [1468, 3, 1, "", "clbits"], [1468, 3, 1, "", "coeffs"], [1468, 3, 1, "", "contains_zero_breakpoint"], [1468, 3, 1, "", "data"], [1469, 4, 1, "", "evaluate"], [1468, 3, 1, "", "extension_lib"], [1468, 3, 1, "", "global_phase"], [1468, 3, 1, "", "header"], [1468, 3, 1, "", "instances"], [1468, 3, 1, "", "mapped_coeffs"], [1468, 3, 1, "", "metadata"], [1468, 3, 1, "", "num_ancilla_qubits"], [1468, 3, 1, "", "num_ancillas"], [1468, 3, 1, "", "num_clbits"], [1468, 3, 1, "", "num_parameters"], [1468, 3, 1, "", "num_qubits"], [1468, 3, 1, "", "num_state_qubits"], [1468, 3, 1, "", "op_start_times"], [1468, 3, 1, "", "parameters"], [1468, 3, 1, "", "prefix"], [1468, 3, 1, "", "qregs"], [1468, 3, 1, "", "qubits"]], "qiskit.circuit.library.PolynomialPauliRotations": [[1470, 3, 1, "", "ancillas"], [1470, 3, 1, "", "basis"], [1470, 3, 1, "", "calibrations"], [1470, 3, 1, "", "clbits"], [1470, 3, 1, "", "coeffs"], [1470, 3, 1, "", "data"], [1470, 3, 1, "", "degree"], [1470, 3, 1, "", "extension_lib"], [1470, 3, 1, "", "global_phase"], [1470, 3, 1, "", "header"], [1470, 3, 1, "", "instances"], [1470, 3, 1, "", "metadata"], [1470, 3, 1, "", "num_ancilla_qubits"], [1470, 3, 1, "", "num_ancillas"], [1470, 3, 1, "", "num_clbits"], [1470, 3, 1, "", "num_parameters"], [1470, 3, 1, "", "num_qubits"], [1470, 3, 1, "", "num_state_qubits"], [1470, 3, 1, "", "op_start_times"], [1470, 3, 1, "", "parameters"], [1470, 3, 1, "", "prefix"], [1470, 3, 1, "", "qregs"], [1470, 3, 1, "", "qubits"]], "qiskit.circuit.library.QAOAAnsatz": [[1471, 3, 1, "", "ancillas"], [1471, 3, 1, "", "calibrations"], [1471, 3, 1, "", "clbits"], [1471, 3, 1, "", "cost_operator"], [1471, 3, 1, "", "data"], [1471, 3, 1, "", "entanglement"], [1471, 3, 1, "", "entanglement_blocks"], [1471, 3, 1, "", "evolution"], [1471, 3, 1, "", "extension_lib"], [1471, 3, 1, "", "global_phase"], [1471, 3, 1, "", "header"], [1471, 3, 1, "", "initial_state"], [1471, 3, 1, "", "insert_barriers"], [1471, 3, 1, "", "instances"], [1471, 3, 1, "", "metadata"], [1471, 3, 1, "", "mixer_operator"], [1471, 3, 1, "", "num_ancillas"], [1471, 3, 1, "", "num_clbits"], [1471, 3, 1, "", "num_layers"], [1471, 3, 1, "", "num_parameters"], [1471, 3, 1, "", "num_parameters_settable"], [1471, 3, 1, "", "num_qubits"], [1471, 3, 1, "", "op_start_times"], [1471, 3, 1, "", "operators"], [1471, 3, 1, "", "ordered_parameters"], [1471, 3, 1, "", "parameter_bounds"], [1471, 3, 1, "", "parameters"], [1471, 3, 1, "", "preferred_init_points"], [1471, 3, 1, "", "prefix"], [1471, 3, 1, "", "qregs"], [1471, 3, 1, "", "qubits"], [1471, 3, 1, "", "reps"], [1471, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.QFT": [[1472, 3, 1, "", "ancillas"], [1472, 3, 1, "", "approximation_degree"], [1472, 3, 1, "", "calibrations"], [1472, 3, 1, "", "clbits"], [1472, 3, 1, "", "data"], [1472, 3, 1, "", "do_swaps"], [1472, 3, 1, "", "extension_lib"], [1472, 3, 1, "", "global_phase"], [1472, 3, 1, "", "header"], [1472, 3, 1, "", "insert_barriers"], [1472, 3, 1, "", "instances"], [1473, 4, 1, "", "inverse"], [1474, 4, 1, "", "is_inverse"], [1472, 3, 1, "", "metadata"], [1472, 3, 1, "", "num_ancillas"], [1472, 3, 1, "", "num_clbits"], [1472, 3, 1, "", "num_parameters"], [1472, 3, 1, "", "num_qubits"], [1472, 3, 1, "", "op_start_times"], [1472, 3, 1, "", "parameters"], [1472, 3, 1, "", "prefix"], [1472, 3, 1, "", "qregs"], [1472, 3, 1, "", "qubits"]], "qiskit.circuit.library.QuadraticForm": [[1475, 3, 1, "", "ancillas"], [1475, 3, 1, "", "calibrations"], [1475, 3, 1, "", "clbits"], [1475, 3, 1, "", "data"], [1475, 3, 1, "", "extension_lib"], [1475, 3, 1, "", "global_phase"], [1475, 3, 1, "", "header"], [1475, 3, 1, "", "instances"], [1475, 3, 1, "", "metadata"], [1475, 3, 1, "", "num_ancillas"], [1475, 3, 1, "", "num_clbits"], [1475, 3, 1, "", "num_parameters"], [1475, 3, 1, "", "num_qubits"], [1475, 3, 1, "", "op_start_times"], [1475, 3, 1, "", "parameters"], [1475, 3, 1, "", "prefix"], [1475, 3, 1, "", "qubits"], [1476, 4, 1, "", "required_result_qubits"]], "qiskit.circuit.library.QuantumVolume": [[1477, 3, 1, "", "ancillas"], [1477, 3, 1, "", "calibrations"], [1477, 3, 1, "", "clbits"], [1477, 3, 1, "", "data"], [1477, 3, 1, "", "extension_lib"], [1477, 3, 1, "", "global_phase"], [1477, 3, 1, "", "header"], [1477, 3, 1, "", "instances"], [1477, 3, 1, "", "metadata"], [1477, 3, 1, "", "num_ancillas"], [1477, 3, 1, "", "num_clbits"], [1477, 3, 1, "", "num_parameters"], [1477, 3, 1, "", "num_qubits"], [1477, 3, 1, "", "op_start_times"], [1477, 3, 1, "", "parameters"], [1477, 3, 1, "", "prefix"], [1477, 3, 1, "", "qubits"]], "qiskit.circuit.library.RC3XGate": [[1478, 3, 1, "", "condition_bits"], [1478, 3, 1, "", "decompositions"], [1478, 3, 1, "", "definition"], [1478, 3, 1, "", "duration"], [1478, 3, 1, "", "label"], [1478, 3, 1, "", "name"], [1478, 3, 1, "", "num_clbits"], [1478, 3, 1, "", "num_qubits"], [1478, 3, 1, "", "params"], [1478, 3, 1, "", "unit"]], "qiskit.circuit.library.RCCXGate": [[1479, 3, 1, "", "condition_bits"], [1479, 3, 1, "", "decompositions"], [1479, 3, 1, "", "definition"], [1479, 3, 1, "", "duration"], [1479, 3, 1, "", "label"], [1479, 3, 1, "", "name"], [1479, 3, 1, "", "num_clbits"], [1479, 3, 1, "", "num_qubits"], [1479, 3, 1, "", "params"], [1479, 3, 1, "", "unit"]], "qiskit.circuit.library.RGQFTMultiplier": [[1480, 3, 1, "", "ancillas"], [1480, 3, 1, "", "calibrations"], [1480, 3, 1, "", "clbits"], [1480, 3, 1, "", "data"], [1480, 3, 1, "", "extension_lib"], [1480, 3, 1, "", "global_phase"], [1480, 3, 1, "", "header"], [1480, 3, 1, "", "instances"], [1480, 3, 1, "", "metadata"], [1480, 3, 1, "", "num_ancillas"], [1480, 3, 1, "", "num_clbits"], [1480, 3, 1, "", "num_parameters"], [1480, 3, 1, "", "num_qubits"], [1480, 3, 1, "", "num_result_qubits"], [1480, 3, 1, "", "num_state_qubits"], [1480, 3, 1, "", "op_start_times"], [1480, 3, 1, "", "parameters"], [1480, 3, 1, "", "prefix"], [1480, 3, 1, "", "qubits"]], "qiskit.circuit.library.RGate": [[1481, 3, 1, "", "condition_bits"], [1481, 3, 1, "", "decompositions"], [1481, 3, 1, "", "definition"], [1481, 3, 1, "", "duration"], [1482, 4, 1, "", "inverse"], [1481, 3, 1, "", "label"], [1481, 3, 1, "", "name"], [1481, 3, 1, "", "num_clbits"], [1481, 3, 1, "", "num_qubits"], [1481, 3, 1, "", "params"], [1481, 3, 1, "", "unit"]], "qiskit.circuit.library.RVGate": [[1483, 3, 1, "", "condition_bits"], [1483, 3, 1, "", "decompositions"], [1483, 3, 1, "", "definition"], [1483, 3, 1, "", "duration"], [1484, 4, 1, "", "inverse"], [1483, 3, 1, "", "label"], [1483, 3, 1, "", "name"], [1483, 3, 1, "", "num_clbits"], [1483, 3, 1, "", "num_qubits"], [1483, 3, 1, "", "params"], [1485, 4, 1, "", "to_matrix"], [1483, 3, 1, "", "unit"]], "qiskit.circuit.library.RXGate": [[1486, 3, 1, "", "condition_bits"], [1487, 4, 1, "", "control"], [1486, 3, 1, "", "decompositions"], [1486, 3, 1, "", "definition"], [1486, 3, 1, "", "duration"], [1488, 4, 1, "", "inverse"], [1486, 3, 1, "", "label"], [1486, 3, 1, "", "name"], [1486, 3, 1, "", "num_clbits"], [1486, 3, 1, "", "num_qubits"], [1486, 3, 1, "", "params"], [1486, 3, 1, "", "unit"]], "qiskit.circuit.library.RXXGate": [[1489, 3, 1, "", "condition_bits"], [1489, 3, 1, "", "decompositions"], [1489, 3, 1, "", "definition"], [1489, 3, 1, "", "duration"], [1490, 4, 1, "", "inverse"], [1489, 3, 1, "", "label"], [1489, 3, 1, "", "name"], [1489, 3, 1, "", "num_clbits"], [1489, 3, 1, "", "num_qubits"], [1489, 3, 1, "", "params"], [1489, 3, 1, "", "unit"]], "qiskit.circuit.library.RYGate": [[1491, 3, 1, "", "condition_bits"], [1492, 4, 1, "", "control"], [1491, 3, 1, "", "decompositions"], [1491, 3, 1, "", "definition"], [1491, 3, 1, "", "duration"], [1493, 4, 1, "", "inverse"], [1491, 3, 1, "", "label"], [1491, 3, 1, "", "name"], [1491, 3, 1, "", "num_clbits"], [1491, 3, 1, "", "num_qubits"], [1491, 3, 1, "", "params"], [1491, 3, 1, "", "unit"]], "qiskit.circuit.library.RYYGate": [[1494, 3, 1, "", "condition_bits"], [1494, 3, 1, "", "decompositions"], [1494, 3, 1, "", "definition"], [1494, 3, 1, "", "duration"], [1495, 4, 1, "", "inverse"], [1494, 3, 1, "", "label"], [1494, 3, 1, "", "name"], [1494, 3, 1, "", "num_clbits"], [1494, 3, 1, "", "num_qubits"], [1494, 3, 1, "", "params"], [1494, 3, 1, "", "unit"]], "qiskit.circuit.library.RZGate": [[1496, 3, 1, "", "condition_bits"], [1497, 4, 1, "", "control"], [1496, 3, 1, "", "decompositions"], [1496, 3, 1, "", "definition"], [1496, 3, 1, "", "duration"], [1498, 4, 1, "", "inverse"], [1496, 3, 1, "", "label"], [1496, 3, 1, "", "name"], [1496, 3, 1, "", "num_clbits"], [1496, 3, 1, "", "num_qubits"], [1496, 3, 1, "", "params"], [1496, 3, 1, "", "unit"]], "qiskit.circuit.library.RZXGate": [[1499, 3, 1, "", "condition_bits"], [1499, 3, 1, "", "decompositions"], [1499, 3, 1, "", "definition"], [1499, 3, 1, "", "duration"], [1500, 4, 1, "", "inverse"], [1499, 3, 1, "", "label"], [1499, 3, 1, "", "name"], [1499, 3, 1, "", "num_clbits"], [1499, 3, 1, "", "num_qubits"], [1499, 3, 1, "", "params"], [1499, 3, 1, "", "unit"]], "qiskit.circuit.library.RZZGate": [[1501, 3, 1, "", "condition_bits"], [1501, 3, 1, "", "decompositions"], [1501, 3, 1, "", "definition"], [1501, 3, 1, "", "duration"], [1502, 4, 1, "", "inverse"], [1501, 3, 1, "", "label"], [1501, 3, 1, "", "name"], [1501, 3, 1, "", "num_clbits"], [1501, 3, 1, "", "num_qubits"], [1501, 3, 1, "", "params"], [1501, 3, 1, "", "unit"]], "qiskit.circuit.library.RealAmplitudes": [[1503, 3, 1, "", "ancillas"], [1503, 3, 1, "", "calibrations"], [1503, 3, 1, "", "clbits"], [1503, 3, 1, "", "data"], [1503, 3, 1, "", "entanglement"], [1503, 3, 1, "", "entanglement_blocks"], [1503, 3, 1, "", "extension_lib"], [1503, 3, 1, "", "global_phase"], [1503, 3, 1, "", "header"], [1503, 3, 1, "", "initial_state"], [1503, 3, 1, "", "insert_barriers"], [1503, 3, 1, "", "instances"], [1503, 3, 1, "", "metadata"], [1503, 3, 1, "", "num_ancillas"], [1503, 3, 1, "", "num_clbits"], [1503, 3, 1, "", "num_layers"], [1503, 3, 1, "", "num_parameters"], [1503, 3, 1, "", "num_parameters_settable"], [1503, 3, 1, "", "num_qubits"], [1503, 3, 1, "", "op_start_times"], [1503, 3, 1, "", "ordered_parameters"], [1503, 3, 1, "", "parameter_bounds"], [1503, 3, 1, "", "parameters"], [1503, 3, 1, "", "preferred_init_points"], [1503, 3, 1, "", "prefix"], [1503, 3, 1, "", "qregs"], [1503, 3, 1, "", "qubits"], [1503, 3, 1, "", "reps"], [1503, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.Reset": [[1505, 4, 1, "", "add_decomposition"], [1506, 4, 1, "", "assemble"], [1507, 4, 1, "", "broadcast_arguments"], [1508, 4, 1, "", "c_if"], [1504, 3, 1, "", "condition_bits"], [1509, 4, 1, "", "copy"], [1504, 3, 1, "", "decompositions"], [1504, 3, 1, "", "definition"], [1504, 3, 1, "", "duration"], [1510, 4, 1, "", "inverse"], [1511, 4, 1, "", "is_parameterized"], [1504, 3, 1, "", "label"], [1504, 3, 1, "", "name"], [1504, 3, 1, "", "num_clbits"], [1504, 3, 1, "", "num_qubits"], [1504, 3, 1, "", "params"], [1512, 4, 1, "", "qasm"], [1513, 4, 1, "", "repeat"], [1514, 4, 1, "", "reverse_ops"], [1515, 4, 1, "", "soft_compare"], [1504, 3, 1, "", "unit"], [1516, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.SGate": [[1517, 3, 1, "", "condition_bits"], [1517, 3, 1, "", "decompositions"], [1517, 3, 1, "", "definition"], [1517, 3, 1, "", "duration"], [1518, 4, 1, "", "inverse"], [1517, 3, 1, "", "label"], [1517, 3, 1, "", "name"], [1517, 3, 1, "", "num_clbits"], [1517, 3, 1, "", "num_qubits"], [1517, 3, 1, "", "params"], [1517, 3, 1, "", "unit"]], "qiskit.circuit.library.SXGate": [[1519, 3, 1, "", "condition_bits"], [1520, 4, 1, "", "control"], [1519, 3, 1, "", "decompositions"], [1519, 3, 1, "", "definition"], [1519, 3, 1, "", "duration"], [1521, 4, 1, "", "inverse"], [1519, 3, 1, "", "label"], [1519, 3, 1, "", "name"], [1519, 3, 1, "", "num_clbits"], [1519, 3, 1, "", "num_qubits"], [1519, 3, 1, "", "params"], [1519, 3, 1, "", "unit"]], "qiskit.circuit.library.SXdgGate": [[1522, 3, 1, "", "condition_bits"], [1522, 3, 1, "", "decompositions"], [1522, 3, 1, "", "definition"], [1522, 3, 1, "", "duration"], [1523, 4, 1, "", "inverse"], [1522, 3, 1, "", "label"], [1522, 3, 1, "", "name"], [1522, 3, 1, "", "num_clbits"], [1522, 3, 1, "", "num_qubits"], [1522, 3, 1, "", "params"], [1522, 3, 1, "", "unit"]], "qiskit.circuit.library.SdgGate": [[1524, 3, 1, "", "condition_bits"], [1524, 3, 1, "", "decompositions"], [1524, 3, 1, "", "definition"], [1524, 3, 1, "", "duration"], [1525, 4, 1, "", "inverse"], [1524, 3, 1, "", "label"], [1524, 3, 1, "", "name"], [1524, 3, 1, "", "num_clbits"], [1524, 3, 1, "", "num_qubits"], [1524, 3, 1, "", "params"], [1524, 3, 1, "", "unit"]], "qiskit.circuit.library.StatePreparation": [[1527, 4, 1, "", "broadcast_arguments"], [1526, 3, 1, "", "condition_bits"], [1526, 3, 1, "", "decompositions"], [1526, 3, 1, "", "definition"], [1526, 3, 1, "", "duration"], [1528, 4, 1, "", "inverse"], [1526, 3, 1, "", "label"], [1526, 3, 1, "", "name"], [1526, 3, 1, "", "num_clbits"], [1526, 3, 1, "", "num_qubits"], [1526, 3, 1, "", "params"], [1526, 3, 1, "", "unit"], [1529, 4, 1, "", "validate_parameter"]], "qiskit.circuit.library.SwapGate": [[1530, 3, 1, "", "condition_bits"], [1531, 4, 1, "", "control"], [1530, 3, 1, "", "decompositions"], [1530, 3, 1, "", "definition"], [1530, 3, 1, "", "duration"], [1532, 4, 1, "", "inverse"], [1530, 3, 1, "", "label"], [1530, 3, 1, "", "name"], [1530, 3, 1, "", "num_clbits"], [1530, 3, 1, "", "num_qubits"], [1530, 3, 1, "", "params"], [1530, 3, 1, "", "unit"]], "qiskit.circuit.library.TGate": [[1533, 3, 1, "", "condition_bits"], [1533, 3, 1, "", "decompositions"], [1533, 3, 1, "", "definition"], [1533, 3, 1, "", "duration"], [1534, 4, 1, "", "inverse"], [1533, 3, 1, "", "label"], [1533, 3, 1, "", "name"], [1533, 3, 1, "", "num_clbits"], [1533, 3, 1, "", "num_qubits"], [1533, 3, 1, "", "params"], [1533, 3, 1, "", "unit"]], "qiskit.circuit.library.TdgGate": [[1535, 3, 1, "", "condition_bits"], [1535, 3, 1, "", "decompositions"], [1535, 3, 1, "", "definition"], [1535, 3, 1, "", "duration"], [1536, 4, 1, "", "inverse"], [1535, 3, 1, "", "label"], [1535, 3, 1, "", "name"], [1535, 3, 1, "", "num_clbits"], [1535, 3, 1, "", "num_qubits"], [1535, 3, 1, "", "params"], [1535, 3, 1, "", "unit"]], "qiskit.circuit.library.TwoLocal": [[1537, 3, 1, "", "ancillas"], [1537, 3, 1, "", "calibrations"], [1537, 3, 1, "", "clbits"], [1537, 3, 1, "", "data"], [1537, 3, 1, "", "entanglement"], [1537, 3, 1, "", "entanglement_blocks"], [1537, 3, 1, "", "extension_lib"], [1538, 4, 1, "", "get_entangler_map"], [1537, 3, 1, "", "global_phase"], [1537, 3, 1, "", "header"], [1537, 3, 1, "", "initial_state"], [1537, 3, 1, "", "insert_barriers"], [1537, 3, 1, "", "instances"], [1537, 3, 1, "", "metadata"], [1537, 3, 1, "", "num_ancillas"], [1537, 3, 1, "", "num_clbits"], [1537, 3, 1, "", "num_layers"], [1537, 3, 1, "", "num_parameters"], [1537, 3, 1, "", "num_parameters_settable"], [1537, 3, 1, "", "num_qubits"], [1537, 3, 1, "", "op_start_times"], [1537, 3, 1, "", "ordered_parameters"], [1537, 3, 1, "", "parameter_bounds"], [1537, 3, 1, "", "parameters"], [1537, 3, 1, "", "preferred_init_points"], [1537, 3, 1, "", "prefix"], [1537, 3, 1, "", "qregs"], [1537, 3, 1, "", "qubits"], [1537, 3, 1, "", "reps"], [1537, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.U1Gate": [[1539, 3, 1, "", "condition_bits"], [1540, 4, 1, "", "control"], [1539, 3, 1, "", "decompositions"], [1539, 3, 1, "", "definition"], [1539, 3, 1, "", "duration"], [1541, 4, 1, "", "inverse"], [1539, 3, 1, "", "label"], [1539, 3, 1, "", "name"], [1539, 3, 1, "", "num_clbits"], [1539, 3, 1, "", "num_qubits"], [1539, 3, 1, "", "params"], [1539, 3, 1, "", "unit"]], "qiskit.circuit.library.U2Gate": [[1542, 3, 1, "", "condition_bits"], [1542, 3, 1, "", "decompositions"], [1542, 3, 1, "", "definition"], [1542, 3, 1, "", "duration"], [1543, 4, 1, "", "inverse"], [1542, 3, 1, "", "label"], [1542, 3, 1, "", "name"], [1542, 3, 1, "", "num_clbits"], [1542, 3, 1, "", "num_qubits"], [1542, 3, 1, "", "params"], [1542, 3, 1, "", "unit"]], "qiskit.circuit.library.U3Gate": [[1544, 3, 1, "", "condition_bits"], [1545, 4, 1, "", "control"], [1544, 3, 1, "", "decompositions"], [1544, 3, 1, "", "definition"], [1544, 3, 1, "", "duration"], [1546, 4, 1, "", "inverse"], [1544, 3, 1, "", "label"], [1544, 3, 1, "", "name"], [1544, 3, 1, "", "num_clbits"], [1544, 3, 1, "", "num_qubits"], [1544, 3, 1, "", "params"], [1544, 3, 1, "", "unit"]], "qiskit.circuit.library.UGate": [[1547, 3, 1, "", "condition_bits"], [1548, 4, 1, "", "control"], [1547, 3, 1, "", "decompositions"], [1547, 3, 1, "", "definition"], [1547, 3, 1, "", "duration"], [1549, 4, 1, "", "inverse"], [1547, 3, 1, "", "label"], [1547, 3, 1, "", "name"], [1547, 3, 1, "", "num_clbits"], [1547, 3, 1, "", "num_qubits"], [1547, 3, 1, "", "params"], [1547, 3, 1, "", "unit"]], "qiskit.circuit.library.VBERippleCarryAdder": [[1550, 3, 1, "", "ancillas"], [1550, 3, 1, "", "calibrations"], [1550, 3, 1, "", "clbits"], [1550, 3, 1, "", "data"], [1550, 3, 1, "", "extension_lib"], [1550, 3, 1, "", "global_phase"], [1550, 3, 1, "", "header"], [1550, 3, 1, "", "instances"], [1550, 3, 1, "", "metadata"], [1550, 3, 1, "", "num_ancillas"], [1550, 3, 1, "", "num_clbits"], [1550, 3, 1, "", "num_parameters"], [1550, 3, 1, "", "num_qubits"], [1550, 3, 1, "", "num_state_qubits"], [1550, 3, 1, "", "op_start_times"], [1550, 3, 1, "", "parameters"], [1550, 3, 1, "", "prefix"], [1550, 3, 1, "", "qubits"]], "qiskit.circuit.library.WeightedAdder": [[1551, 3, 1, "", "ancillas"], [1551, 3, 1, "", "calibrations"], [1551, 3, 1, "", "clbits"], [1551, 3, 1, "", "data"], [1551, 3, 1, "", "extension_lib"], [1551, 3, 1, "", "global_phase"], [1551, 3, 1, "", "header"], [1551, 3, 1, "", "instances"], [1551, 3, 1, "", "metadata"], [1551, 3, 1, "", "num_ancillas"], [1551, 3, 1, "", "num_carry_qubits"], [1551, 3, 1, "", "num_clbits"], [1551, 3, 1, "", "num_control_qubits"], [1551, 3, 1, "", "num_parameters"], [1551, 3, 1, "", "num_qubits"], [1551, 3, 1, "", "num_state_qubits"], [1551, 3, 1, "", "num_sum_qubits"], [1551, 3, 1, "", "op_start_times"], [1551, 3, 1, "", "parameters"], [1551, 3, 1, "", "prefix"], [1551, 3, 1, "", "qregs"], [1551, 3, 1, "", "qubits"], [1551, 3, 1, "", "weights"]], "qiskit.circuit.library.XGate": [[1552, 3, 1, "", "condition_bits"], [1553, 4, 1, "", "control"], [1552, 3, 1, "", "decompositions"], [1552, 3, 1, "", "definition"], [1552, 3, 1, "", "duration"], [1554, 4, 1, "", "inverse"], [1552, 3, 1, "", "label"], [1552, 3, 1, "", "name"], [1552, 3, 1, "", "num_clbits"], [1552, 3, 1, "", "num_qubits"], [1552, 3, 1, "", "params"], [1552, 3, 1, "", "unit"]], "qiskit.circuit.library.XOR": [[1555, 3, 1, "", "ancillas"], [1555, 3, 1, "", "calibrations"], [1555, 3, 1, "", "clbits"], [1555, 3, 1, "", "data"], [1555, 3, 1, "", "extension_lib"], [1555, 3, 1, "", "global_phase"], [1555, 3, 1, "", "header"], [1555, 3, 1, "", "instances"], [1555, 3, 1, "", "metadata"], [1555, 3, 1, "", "num_ancillas"], [1555, 3, 1, "", "num_clbits"], [1555, 3, 1, "", "num_parameters"], [1555, 3, 1, "", "num_qubits"], [1555, 3, 1, "", "op_start_times"], [1555, 3, 1, "", "parameters"], [1555, 3, 1, "", "prefix"], [1555, 3, 1, "", "qubits"]], "qiskit.circuit.library.XXMinusYYGate": [[1556, 3, 1, "", "condition_bits"], [1556, 3, 1, "", "decompositions"], [1556, 3, 1, "", "definition"], [1556, 3, 1, "", "duration"], [1557, 4, 1, "", "inverse"], [1556, 3, 1, "", "label"], [1556, 3, 1, "", "name"], [1556, 3, 1, "", "num_clbits"], [1556, 3, 1, "", "num_qubits"], [1556, 3, 1, "", "params"], [1556, 3, 1, "", "unit"]], "qiskit.circuit.library.XXPlusYYGate": [[1558, 3, 1, "", "condition_bits"], [1558, 3, 1, "", "decompositions"], [1558, 3, 1, "", "definition"], [1558, 3, 1, "", "duration"], [1559, 4, 1, "", "inverse"], [1558, 3, 1, "", "label"], [1558, 3, 1, "", "name"], [1558, 3, 1, "", "num_clbits"], [1558, 3, 1, "", "num_qubits"], [1558, 3, 1, "", "params"], [1558, 3, 1, "", "unit"]], "qiskit.circuit.library.YGate": [[1560, 3, 1, "", "condition_bits"], [1561, 4, 1, "", "control"], [1560, 3, 1, "", "decompositions"], [1560, 3, 1, "", "definition"], [1560, 3, 1, "", "duration"], [1562, 4, 1, "", "inverse"], [1560, 3, 1, "", "label"], [1560, 3, 1, "", "name"], [1560, 3, 1, "", "num_clbits"], [1560, 3, 1, "", "num_qubits"], [1560, 3, 1, "", "params"], [1560, 3, 1, "", "unit"]], "qiskit.circuit.library.ZFeatureMap": [[1563, 3, 1, "", "alpha"], [1563, 3, 1, "", "ancillas"], [1563, 3, 1, "", "calibrations"], [1563, 3, 1, "", "clbits"], [1563, 3, 1, "", "data"], [1563, 3, 1, "", "entanglement"], [1563, 3, 1, "", "entanglement_blocks"], [1563, 3, 1, "", "extension_lib"], [1563, 3, 1, "", "feature_dimension"], [1563, 3, 1, "", "global_phase"], [1563, 3, 1, "", "header"], [1563, 3, 1, "", "initial_state"], [1563, 3, 1, "", "insert_barriers"], [1563, 3, 1, "", "instances"], [1563, 3, 1, "", "metadata"], [1563, 3, 1, "", "num_ancillas"], [1563, 3, 1, "", "num_clbits"], [1563, 3, 1, "", "num_layers"], [1563, 3, 1, "", "num_parameters"], [1563, 3, 1, "", "num_parameters_settable"], [1563, 3, 1, "", "num_qubits"], [1563, 3, 1, "", "op_start_times"], [1563, 3, 1, "", "ordered_parameters"], [1563, 3, 1, "", "parameter_bounds"], [1563, 3, 1, "", "parameters"], [1563, 3, 1, "", "paulis"], [1563, 3, 1, "", "preferred_init_points"], [1563, 3, 1, "", "prefix"], [1563, 3, 1, "", "qregs"], [1563, 3, 1, "", "qubits"], [1563, 3, 1, "", "reps"], [1563, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.ZGate": [[1564, 3, 1, "", "condition_bits"], [1565, 4, 1, "", "control"], [1564, 3, 1, "", "decompositions"], [1564, 3, 1, "", "definition"], [1564, 3, 1, "", "duration"], [1566, 4, 1, "", "inverse"], [1564, 3, 1, "", "label"], [1564, 3, 1, "", "name"], [1564, 3, 1, "", "num_clbits"], [1564, 3, 1, "", "num_qubits"], [1564, 3, 1, "", "params"], [1564, 3, 1, "", "unit"]], "qiskit.circuit.library.ZZFeatureMap": [[1567, 3, 1, "", "alpha"], [1567, 3, 1, "", "ancillas"], [1567, 3, 1, "", "calibrations"], [1567, 3, 1, "", "clbits"], [1567, 3, 1, "", "data"], [1567, 3, 1, "", "entanglement"], [1567, 3, 1, "", "entanglement_blocks"], [1567, 3, 1, "", "extension_lib"], [1567, 3, 1, "", "feature_dimension"], [1567, 3, 1, "", "global_phase"], [1567, 3, 1, "", "header"], [1567, 3, 1, "", "initial_state"], [1567, 3, 1, "", "insert_barriers"], [1567, 3, 1, "", "instances"], [1567, 3, 1, "", "metadata"], [1567, 3, 1, "", "num_ancillas"], [1567, 3, 1, "", "num_clbits"], [1567, 3, 1, "", "num_layers"], [1567, 3, 1, "", "num_parameters"], [1567, 3, 1, "", "num_parameters_settable"], [1567, 3, 1, "", "num_qubits"], [1567, 3, 1, "", "op_start_times"], [1567, 3, 1, "", "ordered_parameters"], [1567, 3, 1, "", "parameter_bounds"], [1567, 3, 1, "", "parameters"], [1567, 3, 1, "", "paulis"], [1567, 3, 1, "", "preferred_init_points"], [1567, 3, 1, "", "prefix"], [1567, 3, 1, "", "qregs"], [1567, 3, 1, "", "qubits"], [1567, 3, 1, "", "reps"], [1567, 3, 1, "", "rotation_blocks"]], "qiskit.circuit.library.iSwapGate": [[1586, 3, 1, "", "condition_bits"], [1586, 3, 1, "", "decompositions"], [1586, 3, 1, "", "definition"], [1586, 3, 1, "", "duration"], [1586, 3, 1, "", "label"], [1586, 3, 1, "", "name"], [1586, 3, 1, "", "num_clbits"], [1586, 3, 1, "", "num_qubits"], [1586, 3, 1, "", "params"], [1586, 3, 1, "", "unit"]], "qiskit.circuit.library.templates.nct": [[1593, 5, 1, "", "template_nct_2a_1"], [1594, 5, 1, "", "template_nct_2a_2"], [1595, 5, 1, "", "template_nct_2a_3"], [1596, 5, 1, "", "template_nct_4a_1"], [1597, 5, 1, "", "template_nct_4a_2"], [1598, 5, 1, "", "template_nct_4a_3"], [1599, 5, 1, "", "template_nct_4b_1"], [1600, 5, 1, "", "template_nct_4b_2"], [1601, 5, 1, "", "template_nct_5a_1"], [1602, 5, 1, "", "template_nct_5a_2"], [1603, 5, 1, "", "template_nct_5a_3"], [1604, 5, 1, "", "template_nct_5a_4"], [1605, 5, 1, "", "template_nct_6a_1"], [1606, 5, 1, "", "template_nct_6a_2"], [1607, 5, 1, "", "template_nct_6a_3"], [1608, 5, 1, "", "template_nct_6a_4"], [1609, 5, 1, "", "template_nct_6b_1"], [1610, 5, 1, "", "template_nct_6b_2"], [1611, 5, 1, "", "template_nct_6c_1"], [1612, 5, 1, "", "template_nct_7a_1"], [1613, 5, 1, "", "template_nct_7b_1"], [1614, 5, 1, "", "template_nct_7c_1"], [1615, 5, 1, "", "template_nct_7d_1"], [1616, 5, 1, "", "template_nct_7e_1"], [1617, 5, 1, "", "template_nct_9a_1"], [1618, 5, 1, "", "template_nct_9c_1"], [1619, 5, 1, "", "template_nct_9c_10"], [1620, 5, 1, "", "template_nct_9c_11"], [1621, 5, 1, "", "template_nct_9c_12"], [1622, 5, 1, "", "template_nct_9c_2"], [1623, 5, 1, "", "template_nct_9c_3"], [1624, 5, 1, "", "template_nct_9c_4"], [1625, 5, 1, "", "template_nct_9c_5"], [1626, 5, 1, "", "template_nct_9c_6"], [1627, 5, 1, "", "template_nct_9c_7"], [1628, 5, 1, "", "template_nct_9c_8"], [1629, 5, 1, "", "template_nct_9c_9"], [1630, 5, 1, "", "template_nct_9d_1"], [1631, 5, 1, "", "template_nct_9d_10"], [1632, 5, 1, "", "template_nct_9d_2"], [1633, 5, 1, "", "template_nct_9d_3"], [1634, 5, 1, "", "template_nct_9d_4"], [1635, 5, 1, "", "template_nct_9d_5"], [1636, 5, 1, "", "template_nct_9d_6"], [1637, 5, 1, "", "template_nct_9d_7"], [1638, 5, 1, "", "template_nct_9d_8"], [1639, 5, 1, "", "template_nct_9d_9"]], "qiskit.circuit.random": [[1640, 5, 1, "", "random_circuit"]], "qiskit.compiler": [[1641, 5, 1, "", "assemble"], [1642, 5, 1, "", "schedule"], [1643, 5, 1, "", "sequence"], [1644, 5, 1, "", "transpile"]], "qiskit.converters": [[1645, 5, 1, "", "ast_to_dag"], [1646, 5, 1, "", "circuit_to_dag"], [1647, 5, 1, "", "circuit_to_dagdependency"], [1648, 5, 1, "", "circuit_to_gate"], [1649, 5, 1, "", "circuit_to_instruction"], [1650, 5, 1, "", "dag_to_circuit"], [1651, 5, 1, "", "dag_to_dagdependency"], [1652, 5, 1, "", "dagdependency_to_circuit"], [1653, 5, 1, "", "dagdependency_to_dag"]], "qiskit.dagcircuit": [[1654, 2, 1, "", "DAGCircuit"], [1718, 1, 1, "", "DAGCircuitError"], [1719, 2, 1, "", "DAGDepNode"], [1722, 2, 1, "", "DAGDependency"], [1745, 2, 1, "", "DAGInNode"], [1747, 2, 1, "", "DAGNode"], [1749, 2, 1, "", "DAGOpNode"], [1751, 2, 1, "", "DAGOutNode"]], "qiskit.dagcircuit.DAGCircuit": [[1655, 4, 1, "", "add_calibration"], [1656, 4, 1, "", "add_clbits"], [1657, 4, 1, "", "add_creg"], [1658, 4, 1, "", "add_qreg"], [1659, 4, 1, "", "add_qubits"], [1660, 4, 1, "", "ancestors"], [1661, 4, 1, "", "apply_operation_back"], [1662, 4, 1, "", "apply_operation_front"], [1663, 4, 1, "", "bfs_successors"], [1654, 3, 1, "", "calibrations"], [1664, 4, 1, "", "collect_1q_runs"], [1665, 4, 1, "", "collect_2q_runs"], [1666, 4, 1, "", "collect_runs"], [1667, 4, 1, "", "compose"], [1668, 4, 1, "", "copy_empty_like"], [1669, 4, 1, "", "count_ops"], [1670, 4, 1, "", "count_ops_longest_path"], [1671, 4, 1, "", "depth"], [1672, 4, 1, "", "descendants"], [1673, 4, 1, "", "draw"], [1674, 4, 1, "", "edges"], [1675, 4, 1, "", "from_networkx"], [1676, 4, 1, "", "front_layer"], [1677, 4, 1, "", "gate_nodes"], [1654, 3, 1, "", "global_phase"], [1678, 4, 1, "", "has_calibration_for"], [1679, 4, 1, "", "idle_wires"], [1680, 4, 1, "", "is_predecessor"], [1681, 4, 1, "", "is_successor"], [1682, 4, 1, "", "layers"], [1683, 4, 1, "", "longest_path"], [1684, 4, 1, "", "multi_qubit_ops"], [1685, 4, 1, "", "multigraph_layers"], [1686, 4, 1, "", "named_nodes"], [1687, 4, 1, "", "node"], [1654, 3, 1, "", "node_counter"], [1688, 4, 1, "", "nodes"], [1689, 4, 1, "", "nodes_on_wire"], [1690, 4, 1, "", "num_clbits"], [1691, 4, 1, "", "num_qubits"], [1692, 4, 1, "", "num_tensor_factors"], [1693, 4, 1, "", "op_nodes"], [1694, 4, 1, "", "predecessors"], [1695, 4, 1, "", "properties"], [1696, 4, 1, "", "quantum_predecessors"], [1697, 4, 1, "", "quantum_successors"], [1698, 4, 1, "", "remove_all_ops_named"], [1699, 4, 1, "", "remove_ancestors_of"], [1700, 4, 1, "", "remove_clbits"], [1701, 4, 1, "", "remove_cregs"], [1702, 4, 1, "", "remove_descendants_of"], [1703, 4, 1, "", "remove_nonancestors_of"], [1704, 4, 1, "", "remove_nondescendants_of"], [1705, 4, 1, "", "remove_op_node"], [1706, 4, 1, "", "replace_block_with_op"], [1707, 4, 1, "", "reverse_ops"], [1708, 4, 1, "", "serial_layers"], [1709, 4, 1, "", "size"], [1710, 4, 1, "", "substitute_node"], [1711, 4, 1, "", "substitute_node_with_dag"], [1712, 4, 1, "", "successors"], [1713, 4, 1, "", "to_networkx"], [1714, 4, 1, "", "topological_nodes"], [1715, 4, 1, "", "topological_op_nodes"], [1716, 4, 1, "", "two_qubit_ops"], [1717, 4, 1, "", "width"], [1654, 3, 1, "", "wires"]], "qiskit.dagcircuit.DAGDepNode": [[1719, 3, 1, "", "cargs"], [1719, 3, 1, "", "cindices"], [1719, 3, 1, "", "condition"], [1720, 4, 1, "", "copy"], [1719, 3, 1, "", "isblocked"], [1719, 3, 1, "", "matchedwith"], [1719, 3, 1, "", "name"], [1719, 3, 1, "", "node_id"], [1719, 3, 1, "", "op"], [1719, 3, 1, "", "predecessors"], [1719, 3, 1, "", "qargs"], [1719, 3, 1, "", "qindices"], [1719, 3, 1, "", "reachable"], [1721, 4, 1, "", "semantic_eq"], [1719, 3, 1, "", "sort_key"], [1719, 3, 1, "", "successors"], [1719, 3, 1, "", "successorstovisit"], [1719, 3, 1, "", "type"]], "qiskit.dagcircuit.DAGDependency": [[1723, 4, 1, "", "add_clbits"], [1724, 4, 1, "", "add_creg"], [1725, 4, 1, "", "add_op_node"], [1726, 4, 1, "", "add_qreg"], [1727, 4, 1, "", "add_qubits"], [1722, 3, 1, "", "calibrations"], [1728, 4, 1, "", "copy"], [1729, 4, 1, "", "depth"], [1730, 4, 1, "", "direct_predecessors"], [1731, 4, 1, "", "direct_successors"], [1732, 4, 1, "", "draw"], [1733, 4, 1, "", "get_all_edges"], [1734, 4, 1, "", "get_edges"], [1735, 4, 1, "", "get_in_edges"], [1736, 4, 1, "", "get_node"], [1737, 4, 1, "", "get_nodes"], [1738, 4, 1, "", "get_out_edges"], [1722, 3, 1, "", "global_phase"], [1739, 4, 1, "", "predecessors"], [1740, 4, 1, "", "size"], [1741, 4, 1, "", "successors"], [1742, 4, 1, "", "to_networkx"], [1743, 4, 1, "", "to_retworkx"], [1744, 4, 1, "", "topological_nodes"]], "qiskit.dagcircuit.DAGInNode": [[1746, 4, 1, "", "semantic_eq"], [1745, 3, 1, "", "sort_key"], [1745, 3, 1, "", "wire"]], "qiskit.dagcircuit.DAGNode": [[1748, 4, 1, "", "semantic_eq"]], "qiskit.dagcircuit.DAGOpNode": [[1749, 3, 1, "", "cargs"], [1749, 3, 1, "", "name"], [1749, 3, 1, "", "op"], [1749, 3, 1, "", "qargs"], [1750, 4, 1, "", "semantic_eq"], [1749, 3, 1, "", "sort_key"]], "qiskit.dagcircuit.DAGOutNode": [[1752, 4, 1, "", "semantic_eq"], [1751, 3, 1, "", "sort_key"], [1751, 3, 1, "", "wire"]], "qiskit.execute_function": [[16, 5, 1, "", "execute"]], "qiskit.extensions": [[1753, 2, 1, "", "HamiltonianGate"], [1772, 2, 1, "", "Initialize"], [1786, 2, 1, "", "SingleQubitUnitary"], [1802, 2, 1, "", "Snapshot"], [1815, 2, 1, "", "UCPauliRotGate"], [1831, 2, 1, "", "UCRXGate"], [1847, 2, 1, "", "UCRYGate"], [1863, 2, 1, "", "UCRZGate"], [1879, 2, 1, "", "UnitaryGate"]], "qiskit.extensions.HamiltonianGate": [[1754, 4, 1, "", "add_decomposition"], [1755, 4, 1, "", "adjoint"], [1756, 4, 1, "", "assemble"], [1757, 4, 1, "", "broadcast_arguments"], [1758, 4, 1, "", "c_if"], [1753, 3, 1, "", "condition_bits"], [1759, 4, 1, "", "conjugate"], [1760, 4, 1, "", "control"], [1761, 4, 1, "", "copy"], [1753, 3, 1, "", "decompositions"], [1753, 3, 1, "", "definition"], [1753, 3, 1, "", "duration"], [1762, 4, 1, "", "inverse"], [1763, 4, 1, "", "is_parameterized"], [1753, 3, 1, "", "label"], [1753, 3, 1, "", "name"], [1753, 3, 1, "", "num_clbits"], [1753, 3, 1, "", "num_qubits"], [1753, 3, 1, "", "params"], [1764, 4, 1, "", "power"], [1765, 4, 1, "", "qasm"], [1766, 4, 1, "", "repeat"], [1767, 4, 1, "", "reverse_ops"], [1768, 4, 1, "", "soft_compare"], [1769, 4, 1, "", "to_matrix"], [1770, 4, 1, "", "transpose"], [1753, 3, 1, "", "unit"], [1771, 4, 1, "", "validate_parameter"]], "qiskit.extensions.Initialize": [[1773, 4, 1, "", "add_decomposition"], [1774, 4, 1, "", "assemble"], [1775, 4, 1, "", "broadcast_arguments"], [1776, 4, 1, "", "c_if"], [1772, 3, 1, "", "condition_bits"], [1777, 4, 1, "", "copy"], [1772, 3, 1, "", "decompositions"], [1772, 3, 1, "", "definition"], [1772, 3, 1, "", "duration"], [1778, 4, 1, "", "gates_to_uncompute"], [1779, 4, 1, "", "inverse"], [1780, 4, 1, "", "is_parameterized"], [1772, 3, 1, "", "label"], [1772, 3, 1, "", "name"], [1772, 3, 1, "", "num_clbits"], [1772, 3, 1, "", "num_qubits"], [1772, 3, 1, "", "params"], [1781, 4, 1, "", "qasm"], [1782, 4, 1, "", "repeat"], [1783, 4, 1, "", "reverse_ops"], [1784, 4, 1, "", "soft_compare"], [1772, 3, 1, "", "unit"], [1785, 4, 1, "", "validate_parameter"]], "qiskit.extensions.SingleQubitUnitary": [[1787, 4, 1, "", "add_decomposition"], [1788, 4, 1, "", "assemble"], [1789, 4, 1, "", "broadcast_arguments"], [1790, 4, 1, "", "c_if"], [1786, 3, 1, "", "condition_bits"], [1791, 4, 1, "", "control"], [1792, 4, 1, "", "copy"], [1786, 3, 1, "", "decompositions"], [1786, 3, 1, "", "definition"], [1786, 3, 1, "", "diag"], [1786, 3, 1, "", "duration"], [1793, 4, 1, "", "inverse"], [1794, 4, 1, "", "is_parameterized"], [1786, 3, 1, "", "label"], [1786, 3, 1, "", "name"], [1786, 3, 1, "", "num_clbits"], [1786, 3, 1, "", "num_qubits"], [1786, 3, 1, "", "params"], [1795, 4, 1, "", "power"], [1796, 4, 1, "", "qasm"], [1797, 4, 1, "", "repeat"], [1798, 4, 1, "", "reverse_ops"], [1799, 4, 1, "", "soft_compare"], [1800, 4, 1, "", "to_matrix"], [1786, 3, 1, "", "unit"], [1801, 4, 1, "", "validate_parameter"]], "qiskit.extensions.Snapshot": [[1803, 4, 1, "", "add_decomposition"], [1804, 4, 1, "", "assemble"], [1805, 4, 1, "", "broadcast_arguments"], [1806, 4, 1, "", "c_if"], [1802, 3, 1, "", "condition_bits"], [1807, 4, 1, "", "copy"], [1802, 3, 1, "", "decompositions"], [1802, 3, 1, "", "definition"], [1802, 3, 1, "", "duration"], [1808, 4, 1, "", "inverse"], [1809, 4, 1, "", "is_parameterized"], [1802, 3, 1, "", "label"], [1802, 3, 1, "", "name"], [1802, 3, 1, "", "num_clbits"], [1802, 3, 1, "", "num_qubits"], [1802, 3, 1, "", "params"], [1810, 4, 1, "", "qasm"], [1811, 4, 1, "", "repeat"], [1812, 4, 1, "", "reverse_ops"], [1802, 3, 1, "", "snapshot_type"], [1813, 4, 1, "", "soft_compare"], [1802, 3, 1, "", "unit"], [1814, 4, 1, "", "validate_parameter"]], "qiskit.extensions.UCPauliRotGate": [[1816, 4, 1, "", "add_decomposition"], [1817, 4, 1, "", "assemble"], [1818, 4, 1, "", "broadcast_arguments"], [1819, 4, 1, "", "c_if"], [1815, 3, 1, "", "condition_bits"], [1820, 4, 1, "", "control"], [1821, 4, 1, "", "copy"], [1815, 3, 1, "", "decompositions"], [1815, 3, 1, "", "definition"], [1815, 3, 1, "", "duration"], [1822, 4, 1, "", "inverse"], [1823, 4, 1, "", "is_parameterized"], [1815, 3, 1, "", "label"], [1815, 3, 1, "", "name"], [1815, 3, 1, "", "num_clbits"], [1815, 3, 1, "", "num_qubits"], [1815, 3, 1, "", "params"], [1824, 4, 1, "", "power"], [1825, 4, 1, "", "qasm"], [1826, 4, 1, "", "repeat"], [1827, 4, 1, "", "reverse_ops"], [1828, 4, 1, "", "soft_compare"], [1829, 4, 1, "", "to_matrix"], [1815, 3, 1, "", "unit"], [1830, 4, 1, "", "validate_parameter"]], "qiskit.extensions.UCRXGate": [[1832, 4, 1, "", "add_decomposition"], [1833, 4, 1, "", "assemble"], [1834, 4, 1, "", "broadcast_arguments"], [1835, 4, 1, "", "c_if"], [1831, 3, 1, "", "condition_bits"], [1836, 4, 1, "", "control"], [1837, 4, 1, "", "copy"], [1831, 3, 1, "", "decompositions"], [1831, 3, 1, "", "definition"], [1831, 3, 1, "", "duration"], [1838, 4, 1, "", "inverse"], [1839, 4, 1, "", "is_parameterized"], [1831, 3, 1, "", "label"], [1831, 3, 1, "", "name"], [1831, 3, 1, "", "num_clbits"], [1831, 3, 1, "", "num_qubits"], [1831, 3, 1, "", "params"], [1840, 4, 1, "", "power"], [1841, 4, 1, "", "qasm"], [1842, 4, 1, "", "repeat"], [1843, 4, 1, "", "reverse_ops"], [1844, 4, 1, "", "soft_compare"], [1845, 4, 1, "", "to_matrix"], [1831, 3, 1, "", "unit"], [1846, 4, 1, "", "validate_parameter"]], "qiskit.extensions.UCRYGate": [[1848, 4, 1, "", "add_decomposition"], [1849, 4, 1, "", "assemble"], [1850, 4, 1, "", "broadcast_arguments"], [1851, 4, 1, "", "c_if"], [1847, 3, 1, "", "condition_bits"], [1852, 4, 1, "", "control"], [1853, 4, 1, "", "copy"], [1847, 3, 1, "", "decompositions"], [1847, 3, 1, "", "definition"], [1847, 3, 1, "", "duration"], [1854, 4, 1, "", "inverse"], [1855, 4, 1, "", "is_parameterized"], [1847, 3, 1, "", "label"], [1847, 3, 1, "", "name"], [1847, 3, 1, "", "num_clbits"], [1847, 3, 1, "", "num_qubits"], [1847, 3, 1, "", "params"], [1856, 4, 1, "", "power"], [1857, 4, 1, "", "qasm"], [1858, 4, 1, "", "repeat"], [1859, 4, 1, "", "reverse_ops"], [1860, 4, 1, "", "soft_compare"], [1861, 4, 1, "", "to_matrix"], [1847, 3, 1, "", "unit"], [1862, 4, 1, "", "validate_parameter"]], "qiskit.extensions.UCRZGate": [[1864, 4, 1, "", "add_decomposition"], [1865, 4, 1, "", "assemble"], [1866, 4, 1, "", "broadcast_arguments"], [1867, 4, 1, "", "c_if"], [1863, 3, 1, "", "condition_bits"], [1868, 4, 1, "", "control"], [1869, 4, 1, "", "copy"], [1863, 3, 1, "", "decompositions"], [1863, 3, 1, "", "definition"], [1863, 3, 1, "", "duration"], [1870, 4, 1, "", "inverse"], [1871, 4, 1, "", "is_parameterized"], [1863, 3, 1, "", "label"], [1863, 3, 1, "", "name"], [1863, 3, 1, "", "num_clbits"], [1863, 3, 1, "", "num_qubits"], [1863, 3, 1, "", "params"], [1872, 4, 1, "", "power"], [1873, 4, 1, "", "qasm"], [1874, 4, 1, "", "repeat"], [1875, 4, 1, "", "reverse_ops"], [1876, 4, 1, "", "soft_compare"], [1877, 4, 1, "", "to_matrix"], [1863, 3, 1, "", "unit"], [1878, 4, 1, "", "validate_parameter"]], "qiskit.extensions.UnitaryGate": [[1880, 4, 1, "", "add_decomposition"], [1881, 4, 1, "", "adjoint"], [1882, 4, 1, "", "assemble"], [1883, 4, 1, "", "broadcast_arguments"], [1884, 4, 1, "", "c_if"], [1879, 3, 1, "", "condition_bits"], [1885, 4, 1, "", "conjugate"], [1886, 4, 1, "", "control"], [1887, 4, 1, "", "copy"], [1879, 3, 1, "", "decompositions"], [1879, 3, 1, "", "definition"], [1879, 3, 1, "", "duration"], [1888, 4, 1, "", "inverse"], [1889, 4, 1, "", "is_parameterized"], [1879, 3, 1, "", "label"], [1879, 3, 1, "", "name"], [1879, 3, 1, "", "num_clbits"], [1879, 3, 1, "", "num_qubits"], [1879, 3, 1, "", "params"], [1890, 4, 1, "", "power"], [1891, 4, 1, "", "qasm"], [1892, 4, 1, "", "repeat"], [1893, 4, 1, "", "reverse_ops"], [1894, 4, 1, "", "soft_compare"], [1895, 4, 1, "", "to_matrix"], [1896, 4, 1, "", "transpose"], [1879, 3, 1, "", "unit"], [1897, 4, 1, "", "validate_parameter"]], "qiskit.opflow": [[1898, 2, 1, "", "OperatorBase"], [1919, 1, 1, "", "OpflowError"], [1920, 5, 1, "", "anti_commutator"], [1921, 5, 1, "", "commutator"], [1922, 0, 0, "-", "converters"], [1947, 5, 1, "", "double_commutator"], [1948, 0, 0, "-", "evolutions"], [1983, 0, 0, "-", "expectations"], [2001, 0, 0, "-", "gradients"], [2024, 0, 0, "-", "list_ops"], [2068, 0, 0, "-", "primitive_ops"], [2161, 0, 0, "-", "state_fns"]], "qiskit.opflow.OperatorBase": [[1898, 3, 1, "", "INDENTATION"], [1899, 4, 1, "", "add"], [1900, 4, 1, "", "adjoint"], [1901, 4, 1, "", "assign_parameters"], [1902, 4, 1, "", "bind_parameters"], [1903, 4, 1, "", "compose"], [1904, 4, 1, "", "copy"], [1905, 4, 1, "", "equals"], [1906, 4, 1, "", "eval"], [1898, 3, 1, "", "instance_id"], [1907, 4, 1, "", "is_hermitian"], [1908, 4, 1, "", "mul"], [1909, 4, 1, "", "neg"], [1898, 3, 1, "", "num_qubits"], [1898, 3, 1, "", "parameters"], [1910, 4, 1, "", "permute"], [1911, 4, 1, "", "primitive_strings"], [1912, 4, 1, "", "reduce"], [1898, 3, 1, "", "settings"], [1913, 4, 1, "", "tensor"], [1914, 4, 1, "", "tensorpower"], [1915, 4, 1, "", "to_circuit_op"], [1916, 4, 1, "", "to_matrix"], [1917, 4, 1, "", "to_matrix_op"], [1918, 4, 1, "", "to_spmatrix"]], "qiskit.opflow.converters": [[1923, 2, 1, "", "AbelianGrouper"], [1926, 2, 1, "", "CircuitSampler"], [1930, 2, 1, "", "ConverterBase"], [1932, 2, 1, "", "DictToCircuitSum"], [1934, 2, 1, "", "PauliBasisChange"], [1945, 2, 1, "", "TwoQubitReduction"]], "qiskit.opflow.converters.AbelianGrouper": [[1924, 4, 1, "", "convert"], [1925, 4, 1, "", "group_subops"]], "qiskit.opflow.converters.CircuitSampler": [[1927, 4, 1, "", "clear_cache"], [1928, 4, 1, "", "convert"], [1926, 3, 1, "", "quantum_instance"], [1929, 4, 1, "", "sample_circuits"]], "qiskit.opflow.converters.ConverterBase": [[1931, 4, 1, "", "convert"]], "qiskit.opflow.converters.DictToCircuitSum": [[1933, 4, 1, "", "convert"]], "qiskit.opflow.converters.PauliBasisChange": [[1935, 4, 1, "", "construct_cnot_chain"], [1936, 4, 1, "", "convert"], [1934, 3, 1, "", "destination"], [1937, 4, 1, "", "get_cob_circuit"], [1938, 4, 1, "", "get_diagonal_pauli_op"], [1939, 4, 1, "", "get_diagonalizing_clifford"], [1940, 4, 1, "", "get_tpb_pauli"], [1941, 4, 1, "", "measurement_replacement_fn"], [1942, 4, 1, "", "operator_replacement_fn"], [1943, 4, 1, "", "pad_paulis_to_equal_length"], [1944, 4, 1, "", "statefn_replacement_fn"]], "qiskit.opflow.converters.TwoQubitReduction": [[1946, 4, 1, "", "convert"]], "qiskit.opflow.evolutions": [[1949, 2, 1, "", "EvolutionBase"], [1951, 2, 1, "", "EvolutionFactory"], [1953, 2, 1, "", "EvolvedOp"], [1968, 2, 1, "", "MatrixEvolution"], [1970, 2, 1, "", "PauliTrotterEvolution"], [1974, 2, 1, "", "QDrift"], [1976, 2, 1, "", "Suzuki"], [1978, 2, 1, "", "Trotter"], [1979, 2, 1, "", "TrotterizationBase"], [1981, 2, 1, "", "TrotterizationFactory"]], "qiskit.opflow.evolutions.EvolutionBase": [[1950, 4, 1, "", "convert"]], "qiskit.opflow.evolutions.EvolutionFactory": [[1952, 4, 1, "", "build"]], "qiskit.opflow.evolutions.EvolvedOp": [[1953, 3, 1, "", "INDENTATION"], [1954, 4, 1, "", "add"], [1955, 4, 1, "", "adjoint"], [1956, 4, 1, "", "assign_parameters"], [1953, 3, 1, "", "coeff"], [1957, 4, 1, "", "compose"], [1958, 4, 1, "", "equals"], [1959, 4, 1, "", "eval"], [1953, 3, 1, "", "instance_id"], [1960, 4, 1, "", "log_i"], [1953, 3, 1, "", "num_qubits"], [1953, 3, 1, "", "parameters"], [1961, 4, 1, "", "permute"], [1953, 3, 1, "", "primitive"], [1962, 4, 1, "", "primitive_strings"], [1963, 4, 1, "", "reduce"], [1953, 3, 1, "", "settings"], [1964, 4, 1, "", "tensor"], [1965, 4, 1, "", "to_instruction"], [1966, 4, 1, "", "to_matrix"], [1967, 4, 1, "", "to_matrix_op"]], "qiskit.opflow.evolutions.MatrixEvolution": [[1969, 4, 1, "", "convert"]], "qiskit.opflow.evolutions.PauliTrotterEvolution": [[1971, 4, 1, "", "convert"], [1972, 4, 1, "", "evolution_for_abelian_paulisum"], [1973, 4, 1, "", "evolution_for_pauli"], [1970, 3, 1, "", "trotter"]], "qiskit.opflow.evolutions.QDrift": [[1975, 4, 1, "", "convert"], [1974, 3, 1, "", "reps"]], "qiskit.opflow.evolutions.Suzuki": [[1977, 4, 1, "", "convert"], [1976, 3, 1, "", "order"], [1976, 3, 1, "", "reps"]], "qiskit.opflow.evolutions.Trotter": [[1978, 3, 1, "", "order"], [1978, 3, 1, "", "reps"]], "qiskit.opflow.evolutions.TrotterizationBase": [[1980, 4, 1, "", "convert"], [1979, 3, 1, "", "reps"]], "qiskit.opflow.evolutions.TrotterizationFactory": [[1982, 4, 1, "", "build"]], "qiskit.opflow.expectations": [[1984, 2, 1, "", "AerPauliExpectation"], [1987, 2, 1, "", "CVaRExpectation"], [1990, 2, 1, "", "ExpectationBase"], [1993, 2, 1, "", "ExpectationFactory"], [1995, 2, 1, "", "MatrixExpectation"], [1998, 2, 1, "", "PauliExpectation"]], "qiskit.opflow.expectations.AerPauliExpectation": [[1985, 4, 1, "", "compute_variance"], [1986, 4, 1, "", "convert"]], "qiskit.opflow.expectations.CVaRExpectation": [[1988, 4, 1, "", "compute_variance"], [1989, 4, 1, "", "convert"]], "qiskit.opflow.expectations.ExpectationBase": [[1991, 4, 1, "", "compute_variance"], [1992, 4, 1, "", "convert"]], "qiskit.opflow.expectations.ExpectationFactory": [[1994, 4, 1, "", "build"]], "qiskit.opflow.expectations.MatrixExpectation": [[1996, 4, 1, "", "compute_variance"], [1997, 4, 1, "", "convert"]], "qiskit.opflow.expectations.PauliExpectation": [[1999, 4, 1, "", "compute_variance"], [2000, 4, 1, "", "convert"]], "qiskit.opflow.gradients": [[2002, 2, 1, "", "CircuitGradient"], [2004, 2, 1, "", "CircuitQFI"], [2006, 2, 1, "", "DerivativeBase"], [2010, 2, 1, "", "Gradient"], [2013, 2, 1, "", "GradientBase"], [2014, 2, 1, "", "Hessian"], [2017, 2, 1, "", "HessianBase"], [2018, 2, 1, "", "NaturalGradient"], [2021, 2, 1, "", "QFI"], [2023, 2, 1, "", "QFIBase"]], "qiskit.opflow.gradients.CircuitGradient": [[2003, 4, 1, "", "convert"]], "qiskit.opflow.gradients.CircuitQFI": [[2005, 4, 1, "", "convert"]], "qiskit.opflow.gradients.DerivativeBase": [[2007, 4, 1, "", "convert"], [2008, 4, 1, "", "gradient_wrapper"], [2009, 4, 1, "", "parameter_expression_grad"]], "qiskit.opflow.gradients.Gradient": [[2011, 4, 1, "", "convert"], [2012, 4, 1, "", "get_gradient"], [2010, 3, 1, "", "grad_method"]], "qiskit.opflow.gradients.GradientBase": [[2013, 3, 1, "", "grad_method"]], "qiskit.opflow.gradients.Hessian": [[2015, 4, 1, "", "convert"], [2016, 4, 1, "", "get_hessian"], [2014, 3, 1, "", "hess_method"]], "qiskit.opflow.gradients.HessianBase": [[2017, 3, 1, "", "hess_method"]], "qiskit.opflow.gradients.NaturalGradient": [[2019, 4, 1, "", "convert"], [2018, 3, 1, "", "grad_method"], [2020, 4, 1, "", "nat_grad_combo_fn"], [2018, 3, 1, "", "qfi_method"], [2018, 3, 1, "", "regularization"]], "qiskit.opflow.gradients.QFI": [[2022, 4, 1, "", "convert"], [2021, 3, 1, "", "qfi_method"]], "qiskit.opflow.gradients.QFIBase": [[2023, 3, 1, "", "qfi_method"]], "qiskit.opflow.list_ops": [[2025, 2, 1, "", "ComposedOp"], [2032, 2, 1, "", "ListOp"], [2055, 2, 1, "", "SummedOp"], [2063, 2, 1, "", "TensoredOp"]], "qiskit.opflow.list_ops.ComposedOp": [[2025, 3, 1, "", "INDENTATION"], [2025, 3, 1, "", "abelian"], [2026, 4, 1, "", "adjoint"], [2025, 3, 1, "", "coeff"], [2025, 3, 1, "", "coeffs"], [2025, 3, 1, "", "combo_fn"], [2027, 4, 1, "", "compose"], [2025, 3, 1, "", "distributive"], [2028, 4, 1, "", "eval"], [2025, 3, 1, "", "grad_combo_fn"], [2025, 3, 1, "", "instance_id"], [2029, 4, 1, "", "non_distributive_reduce"], [2025, 3, 1, "", "num_qubits"], [2025, 3, 1, "", "oplist"], [2025, 3, 1, "", "parameters"], [2030, 4, 1, "", "reduce"], [2025, 3, 1, "", "settings"], [2031, 4, 1, "", "to_circuit"]], "qiskit.opflow.list_ops.ListOp": [[2032, 3, 1, "", "INDENTATION"], [2032, 3, 1, "", "abelian"], [2033, 4, 1, "", "add"], [2034, 4, 1, "", "adjoint"], [2035, 4, 1, "", "assign_parameters"], [2032, 3, 1, "", "coeff"], [2032, 3, 1, "", "coeffs"], [2032, 3, 1, "", "combo_fn"], [2036, 4, 1, "", "compose"], [2037, 4, 1, "", "default_combo_fn"], [2032, 3, 1, "", "distributive"], [2038, 4, 1, "", "equals"], [2039, 4, 1, "", "eval"], [2040, 4, 1, "", "exp_i"], [2032, 3, 1, "", "grad_combo_fn"], [2032, 3, 1, "", "instance_id"], [2041, 4, 1, "", "log_i"], [2042, 4, 1, "", "mul"], [2032, 3, 1, "", "num_qubits"], [2032, 3, 1, "", "oplist"], [2032, 3, 1, "", "parameters"], [2043, 4, 1, "", "permute"], [2044, 4, 1, "", "power"], [2045, 4, 1, "", "primitive_strings"], [2046, 4, 1, "", "reduce"], [2032, 3, 1, "", "settings"], [2047, 4, 1, "", "tensor"], [2048, 4, 1, "", "tensorpower"], [2049, 4, 1, "", "to_circuit_op"], [2050, 4, 1, "", "to_matrix"], [2051, 4, 1, "", "to_matrix_op"], [2052, 4, 1, "", "to_pauli_op"], [2053, 4, 1, "", "to_spmatrix"], [2054, 4, 1, "", "traverse"]], "qiskit.opflow.list_ops.SummedOp": [[2055, 3, 1, "", "INDENTATION"], [2055, 3, 1, "", "abelian"], [2056, 4, 1, "", "add"], [2055, 3, 1, "", "coeff"], [2055, 3, 1, "", "coeffs"], [2057, 4, 1, "", "collapse_summands"], [2055, 3, 1, "", "combo_fn"], [2055, 3, 1, "", "distributive"], [2058, 4, 1, "", "equals"], [2055, 3, 1, "", "grad_combo_fn"], [2055, 3, 1, "", "instance_id"], [2055, 3, 1, "", "num_qubits"], [2055, 3, 1, "", "oplist"], [2055, 3, 1, "", "parameters"], [2059, 4, 1, "", "reduce"], [2055, 3, 1, "", "settings"], [2060, 4, 1, "", "to_circuit"], [2061, 4, 1, "", "to_matrix_op"], [2062, 4, 1, "", "to_pauli_op"]], "qiskit.opflow.list_ops.TensoredOp": [[2063, 3, 1, "", "INDENTATION"], [2063, 3, 1, "", "abelian"], [2063, 3, 1, "", "coeff"], [2063, 3, 1, "", "coeffs"], [2063, 3, 1, "", "combo_fn"], [2063, 3, 1, "", "distributive"], [2064, 4, 1, "", "eval"], [2063, 3, 1, "", "grad_combo_fn"], [2063, 3, 1, "", "instance_id"], [2063, 3, 1, "", "num_qubits"], [2063, 3, 1, "", "oplist"], [2063, 3, 1, "", "parameters"], [2065, 4, 1, "", "reduce"], [2063, 3, 1, "", "settings"], [2066, 4, 1, "", "tensor"], [2067, 4, 1, "", "to_circuit"]], "qiskit.opflow.primitive_ops": [[2069, 2, 1, "", "CircuitOp"], [2084, 2, 1, "", "MatrixOp"], [2097, 2, 1, "", "PauliOp"], [2112, 2, 1, "", "PauliSumOp"], [2132, 2, 1, "", "PrimitiveOp"], [2153, 2, 1, "", "TaperedPauliSumOp"], [2155, 2, 1, "", "Z2Symmetries"]], "qiskit.opflow.primitive_ops.CircuitOp": [[2069, 3, 1, "", "INDENTATION"], [2070, 4, 1, "", "add"], [2071, 4, 1, "", "adjoint"], [2072, 4, 1, "", "assign_parameters"], [2069, 3, 1, "", "coeff"], [2073, 4, 1, "", "compose"], [2074, 4, 1, "", "equals"], [2075, 4, 1, "", "eval"], [2069, 3, 1, "", "instance_id"], [2069, 3, 1, "", "num_qubits"], [2069, 3, 1, "", "parameters"], [2076, 4, 1, "", "permute"], [2069, 3, 1, "", "primitive"], [2077, 4, 1, "", "primitive_strings"], [2078, 4, 1, "", "reduce"], [2069, 3, 1, "", "settings"], [2079, 4, 1, "", "tensor"], [2080, 4, 1, "", "to_circuit"], [2081, 4, 1, "", "to_circuit_op"], [2082, 4, 1, "", "to_instruction"], [2083, 4, 1, "", "to_matrix"]], "qiskit.opflow.primitive_ops.MatrixOp": [[2084, 3, 1, "", "INDENTATION"], [2085, 4, 1, "", "add"], [2086, 4, 1, "", "adjoint"], [2084, 3, 1, "", "coeff"], [2087, 4, 1, "", "compose"], [2088, 4, 1, "", "equals"], [2089, 4, 1, "", "eval"], [2090, 4, 1, "", "exp_i"], [2084, 3, 1, "", "instance_id"], [2084, 3, 1, "", "num_qubits"], [2084, 3, 1, "", "parameters"], [2091, 4, 1, "", "permute"], [2084, 3, 1, "", "primitive"], [2092, 4, 1, "", "primitive_strings"], [2084, 3, 1, "", "settings"], [2093, 4, 1, "", "tensor"], [2094, 4, 1, "", "to_instruction"], [2095, 4, 1, "", "to_matrix"], [2096, 4, 1, "", "to_matrix_op"]], "qiskit.opflow.primitive_ops.PauliOp": [[2097, 3, 1, "", "INDENTATION"], [2098, 4, 1, "", "add"], [2099, 4, 1, "", "adjoint"], [2097, 3, 1, "", "coeff"], [2100, 4, 1, "", "compose"], [2101, 4, 1, "", "equals"], [2102, 4, 1, "", "eval"], [2103, 4, 1, "", "exp_i"], [2097, 3, 1, "", "instance_id"], [2097, 3, 1, "", "num_qubits"], [2097, 3, 1, "", "parameters"], [2104, 4, 1, "", "permute"], [2097, 3, 1, "", "primitive"], [2105, 4, 1, "", "primitive_strings"], [2097, 3, 1, "", "settings"], [2106, 4, 1, "", "tensor"], [2107, 4, 1, "", "to_circuit"], [2108, 4, 1, "", "to_instruction"], [2109, 4, 1, "", "to_matrix"], [2110, 4, 1, "", "to_pauli_op"], [2111, 4, 1, "", "to_spmatrix"]], "qiskit.opflow.primitive_ops.PauliSumOp": [[2112, 3, 1, "", "INDENTATION"], [2113, 4, 1, "", "add"], [2114, 4, 1, "", "adjoint"], [2112, 3, 1, "", "coeff"], [2112, 3, 1, "", "coeffs"], [2115, 4, 1, "", "compose"], [2116, 4, 1, "", "equals"], [2117, 4, 1, "", "eval"], [2118, 4, 1, "", "exp_i"], [2119, 4, 1, "", "from_list"], [2112, 3, 1, "", "grouping_type"], [2112, 3, 1, "", "instance_id"], [2120, 4, 1, "", "is_hermitian"], [2121, 4, 1, "", "is_zero"], [2122, 4, 1, "", "matrix_iter"], [2123, 4, 1, "", "mul"], [2112, 3, 1, "", "num_qubits"], [2112, 3, 1, "", "parameters"], [2124, 4, 1, "", "permute"], [2112, 3, 1, "", "primitive"], [2125, 4, 1, "", "primitive_strings"], [2126, 4, 1, "", "reduce"], [2112, 3, 1, "", "settings"], [2127, 4, 1, "", "tensor"], [2128, 4, 1, "", "to_instruction"], [2129, 4, 1, "", "to_matrix"], [2130, 4, 1, "", "to_pauli_op"], [2131, 4, 1, "", "to_spmatrix"]], "qiskit.opflow.primitive_ops.PrimitiveOp": [[2132, 3, 1, "", "INDENTATION"], [2133, 4, 1, "", "add"], [2134, 4, 1, "", "adjoint"], [2135, 4, 1, "", "assign_parameters"], [2132, 3, 1, "", "coeff"], [2136, 4, 1, "", "compose"], [2137, 4, 1, "", "equals"], [2138, 4, 1, "", "eval"], [2139, 4, 1, "", "exp_i"], [2132, 3, 1, "", "instance_id"], [2140, 4, 1, "", "log_i"], [2141, 4, 1, "", "mul"], [2132, 3, 1, "", "num_qubits"], [2132, 3, 1, "", "parameters"], [2142, 4, 1, "", "permute"], [2132, 3, 1, "", "primitive"], [2143, 4, 1, "", "primitive_strings"], [2144, 4, 1, "", "reduce"], [2132, 3, 1, "", "settings"], [2145, 4, 1, "", "tensor"], [2146, 4, 1, "", "tensorpower"], [2147, 4, 1, "", "to_circuit"], [2148, 4, 1, "", "to_circuit_op"], [2149, 4, 1, "", "to_instruction"], [2150, 4, 1, "", "to_matrix"], [2151, 4, 1, "", "to_matrix_op"], [2152, 4, 1, "", "to_pauli_op"]], "qiskit.opflow.primitive_ops.TaperedPauliSumOp": [[2153, 3, 1, "", "INDENTATION"], [2154, 4, 1, "", "assign_parameters"], [2153, 3, 1, "", "coeff"], [2153, 3, 1, "", "coeffs"], [2153, 3, 1, "", "grouping_type"], [2153, 3, 1, "", "instance_id"], [2153, 3, 1, "", "num_qubits"], [2153, 3, 1, "", "parameters"], [2153, 3, 1, "", "primitive"], [2153, 3, 1, "", "settings"], [2153, 3, 1, "", "z2_symmetries"]], "qiskit.opflow.primitive_ops.Z2Symmetries": [[2155, 3, 1, "", "cliffords"], [2156, 4, 1, "", "consistent_tapering"], [2157, 4, 1, "", "copy"], [2158, 4, 1, "", "find_Z2_symmetries"], [2159, 4, 1, "", "is_empty"], [2155, 3, 1, "", "settings"], [2155, 3, 1, "", "sq_list"], [2155, 3, 1, "", "sq_paulis"], [2155, 3, 1, "", "symmetries"], [2160, 4, 1, "", "taper"], [2155, 3, 1, "", "tapering_values"], [2155, 3, 1, "", "tol"]], "qiskit.opflow.state_fns": [[2162, 2, 1, "", "CVaRMeasurement"], [2177, 2, 1, "", "CircuitStateFn"], [2195, 2, 1, "", "DictStateFn"], [2208, 2, 1, "", "OperatorStateFn"], [2220, 2, 1, "", "SparseVectorStateFn"], [2232, 2, 1, "", "StateFn"], [2252, 2, 1, "", "VectorStateFn"]], "qiskit.opflow.state_fns.CVaRMeasurement": [[2162, 3, 1, "", "INDENTATION"], [2163, 4, 1, "", "add"], [2164, 4, 1, "", "adjoint"], [2162, 3, 1, "", "alpha"], [2162, 3, 1, "", "coeff"], [2165, 4, 1, "", "compute_cvar"], [2166, 4, 1, "", "eval"], [2167, 4, 1, "", "eval_variance"], [2168, 4, 1, "", "get_outcome_energies_probabilities"], [2162, 3, 1, "", "instance_id"], [2162, 3, 1, "", "is_measurement"], [2169, 4, 1, "", "mul"], [2162, 3, 1, "", "num_qubits"], [2162, 3, 1, "", "parameters"], [2162, 3, 1, "", "primitive"], [2170, 4, 1, "", "sample"], [2162, 3, 1, "", "settings"], [2171, 4, 1, "", "tensor"], [2172, 4, 1, "", "to_circuit_op"], [2173, 4, 1, "", "to_density_matrix"], [2174, 4, 1, "", "to_matrix"], [2175, 4, 1, "", "to_matrix_op"], [2176, 4, 1, "", "traverse"]], "qiskit.opflow.state_fns.CircuitStateFn": [[2177, 3, 1, "", "INDENTATION"], [2178, 4, 1, "", "add"], [2179, 4, 1, "", "adjoint"], [2180, 4, 1, "", "assign_parameters"], [2177, 3, 1, "", "coeff"], [2181, 4, 1, "", "compose"], [2182, 4, 1, "", "eval"], [2183, 4, 1, "", "from_dict"], [2184, 4, 1, "", "from_vector"], [2177, 3, 1, "", "instance_id"], [2177, 3, 1, "", "is_measurement"], [2177, 3, 1, "", "num_qubits"], [2177, 3, 1, "", "parameters"], [2185, 4, 1, "", "permute"], [2177, 3, 1, "", "primitive"], [2186, 4, 1, "", "primitive_strings"], [2187, 4, 1, "", "reduce"], [2188, 4, 1, "", "sample"], [2177, 3, 1, "", "settings"], [2189, 4, 1, "", "tensor"], [2190, 4, 1, "", "to_circuit"], [2191, 4, 1, "", "to_circuit_op"], [2192, 4, 1, "", "to_density_matrix"], [2193, 4, 1, "", "to_instruction"], [2194, 4, 1, "", "to_matrix"]], "qiskit.opflow.state_fns.DictStateFn": [[2195, 3, 1, "", "INDENTATION"], [2196, 4, 1, "", "add"], [2197, 4, 1, "", "adjoint"], [2195, 3, 1, "", "coeff"], [2198, 4, 1, "", "eval"], [2195, 3, 1, "", "instance_id"], [2195, 3, 1, "", "is_measurement"], [2195, 3, 1, "", "num_qubits"], [2195, 3, 1, "", "parameters"], [2199, 4, 1, "", "permute"], [2195, 3, 1, "", "primitive"], [2200, 4, 1, "", "primitive_strings"], [2201, 4, 1, "", "sample"], [2195, 3, 1, "", "settings"], [2202, 4, 1, "", "tensor"], [2203, 4, 1, "", "to_circuit_op"], [2204, 4, 1, "", "to_density_matrix"], [2205, 4, 1, "", "to_matrix"], [2206, 4, 1, "", "to_spmatrix"], [2207, 4, 1, "", "to_spmatrix_op"]], "qiskit.opflow.state_fns.OperatorStateFn": [[2208, 3, 1, "", "INDENTATION"], [2209, 4, 1, "", "add"], [2210, 4, 1, "", "adjoint"], [2208, 3, 1, "", "coeff"], [2211, 4, 1, "", "eval"], [2208, 3, 1, "", "instance_id"], [2208, 3, 1, "", "is_measurement"], [2208, 3, 1, "", "num_qubits"], [2208, 3, 1, "", "parameters"], [2212, 4, 1, "", "permute"], [2208, 3, 1, "", "primitive"], [2213, 4, 1, "", "primitive_strings"], [2214, 4, 1, "", "sample"], [2208, 3, 1, "", "settings"], [2215, 4, 1, "", "tensor"], [2216, 4, 1, "", "to_circuit_op"], [2217, 4, 1, "", "to_density_matrix"], [2218, 4, 1, "", "to_matrix"], [2219, 4, 1, "", "to_matrix_op"]], "qiskit.opflow.state_fns.SparseVectorStateFn": [[2220, 3, 1, "", "INDENTATION"], [2221, 4, 1, "", "add"], [2222, 4, 1, "", "adjoint"], [2220, 3, 1, "", "coeff"], [2223, 4, 1, "", "equals"], [2224, 4, 1, "", "eval"], [2220, 3, 1, "", "instance_id"], [2220, 3, 1, "", "is_measurement"], [2220, 3, 1, "", "num_qubits"], [2220, 3, 1, "", "parameters"], [2220, 3, 1, "", "primitive"], [2225, 4, 1, "", "primitive_strings"], [2226, 4, 1, "", "sample"], [2220, 3, 1, "", "settings"], [2227, 4, 1, "", "to_circuit_op"], [2228, 4, 1, "", "to_dict_fn"], [2229, 4, 1, "", "to_matrix"], [2230, 4, 1, "", "to_matrix_op"], [2231, 4, 1, "", "to_spmatrix"]], "qiskit.opflow.state_fns.StateFn": [[2232, 3, 1, "", "INDENTATION"], [2233, 4, 1, "", "add"], [2234, 4, 1, "", "adjoint"], [2235, 4, 1, "", "assign_parameters"], [2232, 3, 1, "", "coeff"], [2236, 4, 1, "", "compose"], [2237, 4, 1, "", "equals"], [2238, 4, 1, "", "eval"], [2232, 3, 1, "", "instance_id"], [2232, 3, 1, "", "is_measurement"], [2239, 4, 1, "", "mul"], [2232, 3, 1, "", "num_qubits"], [2232, 3, 1, "", "parameters"], [2240, 4, 1, "", "permute"], [2241, 4, 1, "", "power"], [2232, 3, 1, "", "primitive"], [2242, 4, 1, "", "primitive_strings"], [2243, 4, 1, "", "reduce"], [2244, 4, 1, "", "sample"], [2232, 3, 1, "", "settings"], [2245, 4, 1, "", "tensor"], [2246, 4, 1, "", "tensorpower"], [2247, 4, 1, "", "to_circuit_op"], [2248, 4, 1, "", "to_density_matrix"], [2249, 4, 1, "", "to_matrix"], [2250, 4, 1, "", "to_matrix_op"], [2251, 4, 1, "", "traverse"]], "qiskit.opflow.state_fns.VectorStateFn": [[2252, 3, 1, "", "INDENTATION"], [2253, 4, 1, "", "add"], [2254, 4, 1, "", "adjoint"], [2252, 3, 1, "", "coeff"], [2255, 4, 1, "", "eval"], [2252, 3, 1, "", "instance_id"], [2252, 3, 1, "", "is_measurement"], [2252, 3, 1, "", "num_qubits"], [2252, 3, 1, "", "parameters"], [2256, 4, 1, "", "permute"], [2252, 3, 1, "", "primitive"], [2257, 4, 1, "", "primitive_strings"], [2258, 4, 1, "", "sample"], [2252, 3, 1, "", "settings"], [2259, 4, 1, "", "tensor"], [2260, 4, 1, "", "to_circuit_op"], [2261, 4, 1, "", "to_density_matrix"], [2262, 4, 1, "", "to_dict_fn"], [2263, 4, 1, "", "to_matrix"], [2264, 4, 1, "", "to_matrix_op"]], "qiskit.primitives": [[2265, 2, 1, "", "BaseEstimator"], [2267, 2, 1, "", "BaseSampler"], [2269, 2, 1, "", "Estimator"], [2271, 2, 1, "", "EstimatorResult"], [2272, 2, 1, "", "Sampler"], [2274, 2, 1, "", "SamplerResult"], [30, 0, 0, "-", "base_estimator"], [30, 0, 0, "-", "base_sampler"]], "qiskit.primitives.BaseEstimator": [[2265, 3, 1, "", "circuits"], [2266, 4, 1, "", "close"], [2265, 3, 1, "", "observables"], [2265, 3, 1, "", "parameters"]], "qiskit.primitives.BaseSampler": [[2267, 3, 1, "", "circuits"], [2268, 4, 1, "", "close"], [2267, 3, 1, "", "parameters"]], "qiskit.primitives.Estimator": [[2269, 3, 1, "", "circuits"], [2270, 4, 1, "", "close"], [2269, 3, 1, "", "observables"], [2269, 3, 1, "", "parameters"]], "qiskit.primitives.EstimatorResult": [[2271, 3, 1, "", "metadata"], [2271, 3, 1, "", "values"]], "qiskit.primitives.Sampler": [[2272, 3, 1, "", "circuits"], [2273, 4, 1, "", "close"], [2272, 3, 1, "", "parameters"]], "qiskit.primitives.SamplerResult": [[2274, 3, 1, "", "metadata"], [2274, 3, 1, "", "quasi_dists"]], "qiskit.providers": [[2275, 2, 1, "", "Backend"], [2276, 1, 1, "", "BackendPropertyError"], [2277, 2, 1, "", "BackendV1"], [2285, 2, 1, "", "BackendV2"], [2293, 2, 1, "", "Job"], [2294, 1, 1, "", "JobError"], [2295, 2, 1, "", "JobStatus"], [2296, 1, 1, "", "JobTimeoutError"], [2297, 2, 1, "", "JobV1"], [2309, 2, 1, "", "Options"], [2313, 2, 1, "", "Provider"], [2314, 2, 1, "", "ProviderV1"], [2317, 1, 1, "", "QiskitBackendNotFoundError"], [2318, 2, 1, "", "QubitProperties"], [5, 0, 0, "-", "aer"], [32, 0, 0, "-", "basicaer"], [33, 0, 0, "-", "fake_provider"], [24, 0, 0, "-", "ibmq"], [34, 0, 0, "-", "models"]], "qiskit.providers.Backend": [[2275, 3, 1, "", "version"]], "qiskit.providers.BackendV1": [[2277, 4, 1, "", "_default_options"], [2278, 4, 1, "", "configuration"], [2279, 4, 1, "", "name"], [2277, 3, 1, "", "options"], [2280, 4, 1, "", "properties"], [2281, 4, 1, "", "provider"], [2282, 4, 1, "", "run"], [2283, 4, 1, "", "set_options"], [2284, 4, 1, "", "status"], [2277, 3, 1, "", "version"]], "qiskit.providers.BackendV2": [[2286, 4, 1, "", "acquire_channel"], [2287, 4, 1, "", "control_channel"], [2285, 3, 1, "", "coupling_map"], [2288, 4, 1, "", "drive_channel"], [2285, 3, 1, "", "dt"], [2285, 3, 1, "", "dtm"], [2285, 3, 1, "", "instruction_durations"], [2285, 3, 1, "", "instruction_schedule_map"], [2285, 3, 1, "", "instructions"], [2285, 3, 1, "", "max_circuits"], [2285, 3, 1, "", "meas_map"], [2289, 4, 1, "", "measure_channel"], [2285, 3, 1, "", "num_qubits"], [2285, 3, 1, "", "operation_names"], [2285, 3, 1, "", "operations"], [2285, 3, 1, "", "options"], [2285, 3, 1, "", "provider"], [2290, 4, 1, "", "qubit_properties"], [2291, 4, 1, "", "run"], [2292, 4, 1, "", "set_options"], [2285, 3, 1, "", "target"], [2285, 3, 1, "", "version"]], "qiskit.providers.Job": [[2293, 3, 1, "", "version"]], "qiskit.providers.JobStatus": [[2295, 3, 1, "", "CANCELLED"], [2295, 3, 1, "", "DONE"], [2295, 3, 1, "", "ERROR"], [2295, 3, 1, "", "INITIALIZING"], [2295, 3, 1, "", "QUEUED"], [2295, 3, 1, "", "RUNNING"], [2295, 3, 1, "", "VALIDATING"]], "qiskit.providers.JobV1": [[2298, 4, 1, "", "backend"], [2299, 4, 1, "", "cancel"], [2300, 4, 1, "", "cancelled"], [2301, 4, 1, "", "done"], [2302, 4, 1, "", "in_final_state"], [2303, 4, 1, "", "job_id"], [2304, 4, 1, "", "result"], [2305, 4, 1, "", "running"], [2306, 4, 1, "", "status"], [2307, 4, 1, "", "submit"], [2297, 3, 1, "", "version"], [2308, 4, 1, "", "wait_for_final_state"]], "qiskit.providers.Options": [[2310, 4, 1, "", "get"], [2311, 4, 1, "", "set_validator"], [2312, 4, 1, "", "update_options"], [2309, 3, 1, "", "validator"]], "qiskit.providers.Provider": [[2313, 3, 1, "", "version"]], "qiskit.providers.ProviderV1": [[2315, 4, 1, "", "backends"], [2316, 4, 1, "", "get_backend"], [2314, 3, 1, "", "version"]], "qiskit.providers.QubitProperties": [[2318, 3, 1, "", "frequency"], [2318, 3, 1, "", "t1"], [2318, 3, 1, "", "t2"]], "qiskit.providers.aer": [[2319, 1, 1, "", "AerError"], [2320, 2, 1, "", "AerProvider"], [2323, 2, 1, "", "AerSimulator"], [2337, 2, 1, "", "PulseSimulator"], [2349, 2, 1, "", "QasmSimulator"], [2363, 2, 1, "", "StatevectorSimulator"], [2376, 2, 1, "", "UnitarySimulator"], [1, 0, 0, "-", "extensions"], [2, 0, 0, "-", "jobs"], [3, 0, 0, "-", "library"], [4, 0, 0, "-", "noise"], [6, 0, 0, "-", "pulse"], [7, 0, 0, "-", "utils"]], "qiskit.providers.aer.AerProvider": [[2321, 4, 1, "", "backends"], [2322, 4, 1, "", "get_backend"], [2320, 3, 1, "", "version"]], "qiskit.providers.aer.AerSimulator": [[2324, 4, 1, "", "available_devices"], [2325, 4, 1, "", "available_methods"], [2326, 4, 1, "", "clear_options"], [2327, 4, 1, "", "configuration"], [2328, 4, 1, "", "defaults"], [2329, 4, 1, "", "from_backend"], [2330, 4, 1, "", "name"], [2323, 3, 1, "", "options"], [2331, 4, 1, "", "properties"], [2332, 4, 1, "", "provider"], [2333, 4, 1, "", "run"], [2334, 4, 1, "", "set_option"], [2335, 4, 1, "", "set_options"], [2336, 4, 1, "", "status"], [2323, 3, 1, "", "version"]], "qiskit.providers.aer.PulseSimulator": [[2338, 4, 1, "", "clear_options"], [2339, 4, 1, "", "configuration"], [2340, 4, 1, "", "defaults"], [2341, 4, 1, "", "from_backend"], [2342, 4, 1, "", "name"], [2337, 3, 1, "", "options"], [2343, 4, 1, "", "properties"], [2344, 4, 1, "", "provider"], [2345, 4, 1, "", "run"], [2346, 4, 1, "", "set_option"], [2347, 4, 1, "", "set_options"], [2348, 4, 1, "", "status"], [2337, 3, 1, "", "version"]], "qiskit.providers.aer.QasmSimulator": [[2350, 4, 1, "", "available_devices"], [2351, 4, 1, "", "available_methods"], [2352, 4, 1, "", "clear_options"], [2353, 4, 1, "", "configuration"], [2354, 4, 1, "", "defaults"], [2355, 4, 1, "", "from_backend"], [2356, 4, 1, "", "name"], [2349, 3, 1, "", "options"], [2357, 4, 1, "", "properties"], [2358, 4, 1, "", "provider"], [2359, 4, 1, "", "run"], [2360, 4, 1, "", "set_option"], [2361, 4, 1, "", "set_options"], [2362, 4, 1, "", "status"], [2349, 3, 1, "", "version"]], "qiskit.providers.aer.StatevectorSimulator": [[2364, 4, 1, "", "available_devices"], [2365, 4, 1, "", "available_methods"], [2366, 4, 1, "", "clear_options"], [2367, 4, 1, "", "configuration"], [2368, 4, 1, "", "defaults"], [2369, 4, 1, "", "name"], [2363, 3, 1, "", "options"], [2370, 4, 1, "", "properties"], [2371, 4, 1, "", "provider"], [2372, 4, 1, "", "run"], [2373, 4, 1, "", "set_option"], [2374, 4, 1, "", "set_options"], [2375, 4, 1, "", "status"], [2363, 3, 1, "", "version"]], "qiskit.providers.aer.UnitarySimulator": [[2377, 4, 1, "", "available_devices"], [2378, 4, 1, "", "available_methods"], [2379, 4, 1, "", "clear_options"], [2380, 4, 1, "", "configuration"], [2381, 4, 1, "", "defaults"], [2382, 4, 1, "", "name"], [2376, 3, 1, "", "options"], [2383, 4, 1, "", "properties"], [2384, 4, 1, "", "provider"], [2385, 4, 1, "", "run"], [2386, 4, 1, "", "set_option"], [2387, 4, 1, "", "set_options"], [2388, 4, 1, "", "status"], [2376, 3, 1, "", "version"]], "qiskit.providers.aer.extensions": [[2389, 2, 1, "", "Snapshot"], [2403, 2, 1, "", "SnapshotDensityMatrix"], [2417, 2, 1, "", "SnapshotExpectationValue"], [2431, 2, 1, "", "SnapshotProbabilities"], [2445, 2, 1, "", "SnapshotStabilizer"], [2459, 2, 1, "", "SnapshotStatevector"]], "qiskit.providers.aer.extensions.Snapshot": [[2390, 4, 1, "", "add_decomposition"], [2391, 4, 1, "", "assemble"], [2392, 4, 1, "", "broadcast_arguments"], [2393, 4, 1, "", "c_if"], [2389, 3, 1, "", "condition_bits"], [2394, 4, 1, "", "copy"], [2389, 3, 1, "", "decompositions"], [2395, 4, 1, "", "define_snapshot_register"], [2389, 3, 1, "", "definition"], [2389, 3, 1, "", "duration"], [2396, 4, 1, "", "inverse"], [2397, 4, 1, "", "is_parameterized"], [2389, 3, 1, "", "label"], [2389, 3, 1, "", "name"], [2389, 3, 1, "", "num_clbits"], [2389, 3, 1, "", "num_qubits"], [2389, 3, 1, "", "params"], [2398, 4, 1, "", "qasm"], [2399, 4, 1, "", "repeat"], [2400, 4, 1, "", "reverse_ops"], [2389, 3, 1, "", "snapshot_type"], [2401, 4, 1, "", "soft_compare"], [2389, 3, 1, "", "unit"], [2402, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.extensions.SnapshotDensityMatrix": [[2404, 4, 1, "", "add_decomposition"], [2405, 4, 1, "", "assemble"], [2406, 4, 1, "", "broadcast_arguments"], [2407, 4, 1, "", "c_if"], [2403, 3, 1, "", "condition_bits"], [2408, 4, 1, "", "copy"], [2403, 3, 1, "", "decompositions"], [2409, 4, 1, "", "define_snapshot_register"], [2403, 3, 1, "", "definition"], [2403, 3, 1, "", "duration"], [2410, 4, 1, "", "inverse"], [2411, 4, 1, "", "is_parameterized"], [2403, 3, 1, "", "label"], [2403, 3, 1, "", "name"], [2403, 3, 1, "", "num_clbits"], [2403, 3, 1, "", "num_qubits"], [2403, 3, 1, "", "params"], [2412, 4, 1, "", "qasm"], [2413, 4, 1, "", "repeat"], [2414, 4, 1, "", "reverse_ops"], [2403, 3, 1, "", "snapshot_type"], [2415, 4, 1, "", "soft_compare"], [2403, 3, 1, "", "unit"], [2416, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.extensions.SnapshotExpectationValue": [[2418, 4, 1, "", "add_decomposition"], [2419, 4, 1, "", "assemble"], [2420, 4, 1, "", "broadcast_arguments"], [2421, 4, 1, "", "c_if"], [2417, 3, 1, "", "condition_bits"], [2422, 4, 1, "", "copy"], [2417, 3, 1, "", "decompositions"], [2423, 4, 1, "", "define_snapshot_register"], [2417, 3, 1, "", "definition"], [2417, 3, 1, "", "duration"], [2424, 4, 1, "", "inverse"], [2425, 4, 1, "", "is_parameterized"], [2417, 3, 1, "", "label"], [2417, 3, 1, "", "name"], [2417, 3, 1, "", "num_clbits"], [2417, 3, 1, "", "num_qubits"], [2417, 3, 1, "", "params"], [2426, 4, 1, "", "qasm"], [2427, 4, 1, "", "repeat"], [2428, 4, 1, "", "reverse_ops"], [2417, 3, 1, "", "snapshot_type"], [2429, 4, 1, "", "soft_compare"], [2417, 3, 1, "", "unit"], [2430, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.extensions.SnapshotProbabilities": [[2432, 4, 1, "", "add_decomposition"], [2433, 4, 1, "", "assemble"], [2434, 4, 1, "", "broadcast_arguments"], [2435, 4, 1, "", "c_if"], [2431, 3, 1, "", "condition_bits"], [2436, 4, 1, "", "copy"], [2431, 3, 1, "", "decompositions"], [2437, 4, 1, "", "define_snapshot_register"], [2431, 3, 1, "", "definition"], [2431, 3, 1, "", "duration"], [2438, 4, 1, "", "inverse"], [2439, 4, 1, "", "is_parameterized"], [2431, 3, 1, "", "label"], [2431, 3, 1, "", "name"], [2431, 3, 1, "", "num_clbits"], [2431, 3, 1, "", "num_qubits"], [2431, 3, 1, "", "params"], [2440, 4, 1, "", "qasm"], [2441, 4, 1, "", "repeat"], [2442, 4, 1, "", "reverse_ops"], [2431, 3, 1, "", "snapshot_type"], [2443, 4, 1, "", "soft_compare"], [2431, 3, 1, "", "unit"], [2444, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.extensions.SnapshotStabilizer": [[2446, 4, 1, "", "add_decomposition"], [2447, 4, 1, "", "assemble"], [2448, 4, 1, "", "broadcast_arguments"], [2449, 4, 1, "", "c_if"], [2445, 3, 1, "", "condition_bits"], [2450, 4, 1, "", "copy"], [2445, 3, 1, "", "decompositions"], [2451, 4, 1, "", "define_snapshot_register"], [2445, 3, 1, "", "definition"], [2445, 3, 1, "", "duration"], [2452, 4, 1, "", "inverse"], [2453, 4, 1, "", "is_parameterized"], [2445, 3, 1, "", "label"], [2445, 3, 1, "", "name"], [2445, 3, 1, "", "num_clbits"], [2445, 3, 1, "", "num_qubits"], [2445, 3, 1, "", "params"], [2454, 4, 1, "", "qasm"], [2455, 4, 1, "", "repeat"], [2456, 4, 1, "", "reverse_ops"], [2445, 3, 1, "", "snapshot_type"], [2457, 4, 1, "", "soft_compare"], [2445, 3, 1, "", "unit"], [2458, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.extensions.SnapshotStatevector": [[2460, 4, 1, "", "add_decomposition"], [2461, 4, 1, "", "assemble"], [2462, 4, 1, "", "broadcast_arguments"], [2463, 4, 1, "", "c_if"], [2459, 3, 1, "", "condition_bits"], [2464, 4, 1, "", "copy"], [2459, 3, 1, "", "decompositions"], [2465, 4, 1, "", "define_snapshot_register"], [2459, 3, 1, "", "definition"], [2459, 3, 1, "", "duration"], [2466, 4, 1, "", "inverse"], [2467, 4, 1, "", "is_parameterized"], [2459, 3, 1, "", "label"], [2459, 3, 1, "", "name"], [2459, 3, 1, "", "num_clbits"], [2459, 3, 1, "", "num_qubits"], [2459, 3, 1, "", "params"], [2468, 4, 1, "", "qasm"], [2469, 4, 1, "", "repeat"], [2470, 4, 1, "", "reverse_ops"], [2459, 3, 1, "", "snapshot_type"], [2471, 4, 1, "", "soft_compare"], [2459, 3, 1, "", "unit"], [2472, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.jobs": [[2473, 2, 1, "", "AerJob"], [2487, 2, 1, "", "AerJobSet"]], "qiskit.providers.aer.jobs.AerJob": [[2474, 4, 1, "", "backend"], [2475, 4, 1, "", "cancel"], [2476, 4, 1, "", "cancelled"], [2477, 4, 1, "", "done"], [2478, 4, 1, "", "executor"], [2479, 4, 1, "", "in_final_state"], [2480, 4, 1, "", "job_id"], [2481, 4, 1, "", "qobj"], [2482, 4, 1, "", "result"], [2483, 4, 1, "", "running"], [2484, 4, 1, "", "status"], [2485, 4, 1, "", "submit"], [2473, 3, 1, "", "version"], [2486, 4, 1, "", "wait_for_final_state"]], "qiskit.providers.aer.jobs.AerJobSet": [[2488, 4, 1, "", "backend"], [2489, 4, 1, "", "cancel"], [2490, 4, 1, "", "cancelled"], [2491, 4, 1, "", "done"], [2492, 4, 1, "", "executor"], [2493, 4, 1, "", "in_final_state"], [2494, 4, 1, "", "job"], [2495, 4, 1, "", "job_id"], [2496, 4, 1, "", "result"], [2497, 4, 1, "", "running"], [2498, 4, 1, "", "status"], [2499, 4, 1, "", "submit"], [2487, 3, 1, "", "version"], [2500, 4, 1, "", "wait_for_final_state"], [2501, 4, 1, "", "worker"], [2502, 4, 1, "", "worker_job"], [2503, 4, 1, "", "worker_results"]], "qiskit.providers.aer.library": [[2504, 2, 1, "", "SaveAmplitudes"], [2517, 2, 1, "", "SaveAmplitudesSquared"], [2530, 2, 1, "", "SaveClifford"], [2543, 2, 1, "", "SaveDensityMatrix"], [2556, 2, 1, "", "SaveExpectationValue"], [2569, 2, 1, "", "SaveExpectationValueVariance"], [2582, 2, 1, "", "SaveMatrixProductState"], [2595, 2, 1, "", "SaveProbabilities"], [2608, 2, 1, "", "SaveProbabilitiesDict"], [2621, 2, 1, "", "SaveStabilizer"], [2634, 2, 1, "", "SaveState"], [2647, 2, 1, "", "SaveStatevector"], [2660, 2, 1, "", "SaveStatevectorDict"], [2673, 2, 1, "", "SaveSuperOp"], [2686, 2, 1, "", "SaveUnitary"], [2699, 2, 1, "", "SetDensityMatrix"], [2712, 2, 1, "", "SetMatrixProductState"], [2725, 2, 1, "", "SetStabilizer"], [2738, 2, 1, "", "SetStatevector"], [2751, 2, 1, "", "SetSuperOp"], [2764, 2, 1, "", "SetUnitary"], [2777, 5, 1, "", "save_amplitudes"], [2778, 5, 1, "", "save_amplitudes_squared"], [2779, 5, 1, "", "save_clifford"], [2780, 5, 1, "", "save_density_matrix"], [2781, 5, 1, "", "save_expectation_value"], [2782, 5, 1, "", "save_expectation_value_variance"], [2783, 5, 1, "", "save_matrix_product_state"], [2784, 5, 1, "", "save_probabilities"], [2785, 5, 1, "", "save_probabilities_dict"], [2786, 5, 1, "", "save_stabilizer"], [2787, 5, 1, "", "save_state"], [2788, 5, 1, "", "save_statevector"], [2789, 5, 1, "", "save_statevector_dict"], [2790, 5, 1, "", "save_superop"], [2791, 5, 1, "", "save_unitary"], [2792, 5, 1, "", "set_density_matrix"], [2793, 5, 1, "", "set_matrix_product_state"], [2794, 5, 1, "", "set_stabilizer"], [2795, 5, 1, "", "set_statevector"], [2796, 5, 1, "", "set_superop"], [2797, 5, 1, "", "set_unitary"]], "qiskit.providers.aer.library.SaveAmplitudes": [[2505, 4, 1, "", "add_decomposition"], [2506, 4, 1, "", "assemble"], [2507, 4, 1, "", "broadcast_arguments"], [2508, 4, 1, "", "c_if"], [2504, 3, 1, "", "condition_bits"], [2509, 4, 1, "", "copy"], [2504, 3, 1, "", "decompositions"], [2504, 3, 1, "", "definition"], [2504, 3, 1, "", "duration"], [2510, 4, 1, "", "inverse"], [2511, 4, 1, "", "is_parameterized"], [2504, 3, 1, "", "label"], [2504, 3, 1, "", "name"], [2504, 3, 1, "", "num_clbits"], [2504, 3, 1, "", "num_qubits"], [2504, 3, 1, "", "params"], [2512, 4, 1, "", "qasm"], [2513, 4, 1, "", "repeat"], [2514, 4, 1, "", "reverse_ops"], [2515, 4, 1, "", "soft_compare"], [2504, 3, 1, "", "unit"], [2516, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveAmplitudesSquared": [[2518, 4, 1, "", "add_decomposition"], [2519, 4, 1, "", "assemble"], [2520, 4, 1, "", "broadcast_arguments"], [2521, 4, 1, "", "c_if"], [2517, 3, 1, "", "condition_bits"], [2522, 4, 1, "", "copy"], [2517, 3, 1, "", "decompositions"], [2517, 3, 1, "", "definition"], [2517, 3, 1, "", "duration"], [2523, 4, 1, "", "inverse"], [2524, 4, 1, "", "is_parameterized"], [2517, 3, 1, "", "label"], [2517, 3, 1, "", "name"], [2517, 3, 1, "", "num_clbits"], [2517, 3, 1, "", "num_qubits"], [2517, 3, 1, "", "params"], [2525, 4, 1, "", "qasm"], [2526, 4, 1, "", "repeat"], [2527, 4, 1, "", "reverse_ops"], [2528, 4, 1, "", "soft_compare"], [2517, 3, 1, "", "unit"], [2529, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveClifford": [[2531, 4, 1, "", "add_decomposition"], [2532, 4, 1, "", "assemble"], [2533, 4, 1, "", "broadcast_arguments"], [2534, 4, 1, "", "c_if"], [2530, 3, 1, "", "condition_bits"], [2535, 4, 1, "", "copy"], [2530, 3, 1, "", "decompositions"], [2530, 3, 1, "", "definition"], [2530, 3, 1, "", "duration"], [2536, 4, 1, "", "inverse"], [2537, 4, 1, "", "is_parameterized"], [2530, 3, 1, "", "label"], [2530, 3, 1, "", "name"], [2530, 3, 1, "", "num_clbits"], [2530, 3, 1, "", "num_qubits"], [2530, 3, 1, "", "params"], [2538, 4, 1, "", "qasm"], [2539, 4, 1, "", "repeat"], [2540, 4, 1, "", "reverse_ops"], [2541, 4, 1, "", "soft_compare"], [2530, 3, 1, "", "unit"], [2542, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveDensityMatrix": [[2544, 4, 1, "", "add_decomposition"], [2545, 4, 1, "", "assemble"], [2546, 4, 1, "", "broadcast_arguments"], [2547, 4, 1, "", "c_if"], [2543, 3, 1, "", "condition_bits"], [2548, 4, 1, "", "copy"], [2543, 3, 1, "", "decompositions"], [2543, 3, 1, "", "definition"], [2543, 3, 1, "", "duration"], [2549, 4, 1, "", "inverse"], [2550, 4, 1, "", "is_parameterized"], [2543, 3, 1, "", "label"], [2543, 3, 1, "", "name"], [2543, 3, 1, "", "num_clbits"], [2543, 3, 1, "", "num_qubits"], [2543, 3, 1, "", "params"], [2551, 4, 1, "", "qasm"], [2552, 4, 1, "", "repeat"], [2553, 4, 1, "", "reverse_ops"], [2554, 4, 1, "", "soft_compare"], [2543, 3, 1, "", "unit"], [2555, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveExpectationValue": [[2557, 4, 1, "", "add_decomposition"], [2558, 4, 1, "", "assemble"], [2559, 4, 1, "", "broadcast_arguments"], [2560, 4, 1, "", "c_if"], [2556, 3, 1, "", "condition_bits"], [2561, 4, 1, "", "copy"], [2556, 3, 1, "", "decompositions"], [2556, 3, 1, "", "definition"], [2556, 3, 1, "", "duration"], [2562, 4, 1, "", "inverse"], [2563, 4, 1, "", "is_parameterized"], [2556, 3, 1, "", "label"], [2556, 3, 1, "", "name"], [2556, 3, 1, "", "num_clbits"], [2556, 3, 1, "", "num_qubits"], [2556, 3, 1, "", "params"], [2564, 4, 1, "", "qasm"], [2565, 4, 1, "", "repeat"], [2566, 4, 1, "", "reverse_ops"], [2567, 4, 1, "", "soft_compare"], [2556, 3, 1, "", "unit"], [2568, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveExpectationValueVariance": [[2570, 4, 1, "", "add_decomposition"], [2571, 4, 1, "", "assemble"], [2572, 4, 1, "", "broadcast_arguments"], [2573, 4, 1, "", "c_if"], [2569, 3, 1, "", "condition_bits"], [2574, 4, 1, "", "copy"], [2569, 3, 1, "", "decompositions"], [2569, 3, 1, "", "definition"], [2569, 3, 1, "", "duration"], [2575, 4, 1, "", "inverse"], [2576, 4, 1, "", "is_parameterized"], [2569, 3, 1, "", "label"], [2569, 3, 1, "", "name"], [2569, 3, 1, "", "num_clbits"], [2569, 3, 1, "", "num_qubits"], [2569, 3, 1, "", "params"], [2577, 4, 1, "", "qasm"], [2578, 4, 1, "", "repeat"], [2579, 4, 1, "", "reverse_ops"], [2580, 4, 1, "", "soft_compare"], [2569, 3, 1, "", "unit"], [2581, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveMatrixProductState": [[2583, 4, 1, "", "add_decomposition"], [2584, 4, 1, "", "assemble"], [2585, 4, 1, "", "broadcast_arguments"], [2586, 4, 1, "", "c_if"], [2582, 3, 1, "", "condition_bits"], [2587, 4, 1, "", "copy"], [2582, 3, 1, "", "decompositions"], [2582, 3, 1, "", "definition"], [2582, 3, 1, "", "duration"], [2588, 4, 1, "", "inverse"], [2589, 4, 1, "", "is_parameterized"], [2582, 3, 1, "", "label"], [2582, 3, 1, "", "name"], [2582, 3, 1, "", "num_clbits"], [2582, 3, 1, "", "num_qubits"], [2582, 3, 1, "", "params"], [2590, 4, 1, "", "qasm"], [2591, 4, 1, "", "repeat"], [2592, 4, 1, "", "reverse_ops"], [2593, 4, 1, "", "soft_compare"], [2582, 3, 1, "", "unit"], [2594, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveProbabilities": [[2596, 4, 1, "", "add_decomposition"], [2597, 4, 1, "", "assemble"], [2598, 4, 1, "", "broadcast_arguments"], [2599, 4, 1, "", "c_if"], [2595, 3, 1, "", "condition_bits"], [2600, 4, 1, "", "copy"], [2595, 3, 1, "", "decompositions"], [2595, 3, 1, "", "definition"], [2595, 3, 1, "", "duration"], [2601, 4, 1, "", "inverse"], [2602, 4, 1, "", "is_parameterized"], [2595, 3, 1, "", "label"], [2595, 3, 1, "", "name"], [2595, 3, 1, "", "num_clbits"], [2595, 3, 1, "", "num_qubits"], [2595, 3, 1, "", "params"], [2603, 4, 1, "", "qasm"], [2604, 4, 1, "", "repeat"], [2605, 4, 1, "", "reverse_ops"], [2606, 4, 1, "", "soft_compare"], [2595, 3, 1, "", "unit"], [2607, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveProbabilitiesDict": [[2609, 4, 1, "", "add_decomposition"], [2610, 4, 1, "", "assemble"], [2611, 4, 1, "", "broadcast_arguments"], [2612, 4, 1, "", "c_if"], [2608, 3, 1, "", "condition_bits"], [2613, 4, 1, "", "copy"], [2608, 3, 1, "", "decompositions"], [2608, 3, 1, "", "definition"], [2608, 3, 1, "", "duration"], [2614, 4, 1, "", "inverse"], [2615, 4, 1, "", "is_parameterized"], [2608, 3, 1, "", "label"], [2608, 3, 1, "", "name"], [2608, 3, 1, "", "num_clbits"], [2608, 3, 1, "", "num_qubits"], [2608, 3, 1, "", "params"], [2616, 4, 1, "", "qasm"], [2617, 4, 1, "", "repeat"], [2618, 4, 1, "", "reverse_ops"], [2619, 4, 1, "", "soft_compare"], [2608, 3, 1, "", "unit"], [2620, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveStabilizer": [[2622, 4, 1, "", "add_decomposition"], [2623, 4, 1, "", "assemble"], [2624, 4, 1, "", "broadcast_arguments"], [2625, 4, 1, "", "c_if"], [2621, 3, 1, "", "condition_bits"], [2626, 4, 1, "", "copy"], [2621, 3, 1, "", "decompositions"], [2621, 3, 1, "", "definition"], [2621, 3, 1, "", "duration"], [2627, 4, 1, "", "inverse"], [2628, 4, 1, "", "is_parameterized"], [2621, 3, 1, "", "label"], [2621, 3, 1, "", "name"], [2621, 3, 1, "", "num_clbits"], [2621, 3, 1, "", "num_qubits"], [2621, 3, 1, "", "params"], [2629, 4, 1, "", "qasm"], [2630, 4, 1, "", "repeat"], [2631, 4, 1, "", "reverse_ops"], [2632, 4, 1, "", "soft_compare"], [2621, 3, 1, "", "unit"], [2633, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveState": [[2635, 4, 1, "", "add_decomposition"], [2636, 4, 1, "", "assemble"], [2637, 4, 1, "", "broadcast_arguments"], [2638, 4, 1, "", "c_if"], [2634, 3, 1, "", "condition_bits"], [2639, 4, 1, "", "copy"], [2634, 3, 1, "", "decompositions"], [2634, 3, 1, "", "definition"], [2634, 3, 1, "", "duration"], [2640, 4, 1, "", "inverse"], [2641, 4, 1, "", "is_parameterized"], [2634, 3, 1, "", "label"], [2634, 3, 1, "", "name"], [2634, 3, 1, "", "num_clbits"], [2634, 3, 1, "", "num_qubits"], [2634, 3, 1, "", "params"], [2642, 4, 1, "", "qasm"], [2643, 4, 1, "", "repeat"], [2644, 4, 1, "", "reverse_ops"], [2645, 4, 1, "", "soft_compare"], [2634, 3, 1, "", "unit"], [2646, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveStatevector": [[2648, 4, 1, "", "add_decomposition"], [2649, 4, 1, "", "assemble"], [2650, 4, 1, "", "broadcast_arguments"], [2651, 4, 1, "", "c_if"], [2647, 3, 1, "", "condition_bits"], [2652, 4, 1, "", "copy"], [2647, 3, 1, "", "decompositions"], [2647, 3, 1, "", "definition"], [2647, 3, 1, "", "duration"], [2653, 4, 1, "", "inverse"], [2654, 4, 1, "", "is_parameterized"], [2647, 3, 1, "", "label"], [2647, 3, 1, "", "name"], [2647, 3, 1, "", "num_clbits"], [2647, 3, 1, "", "num_qubits"], [2647, 3, 1, "", "params"], [2655, 4, 1, "", "qasm"], [2656, 4, 1, "", "repeat"], [2657, 4, 1, "", "reverse_ops"], [2658, 4, 1, "", "soft_compare"], [2647, 3, 1, "", "unit"], [2659, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveStatevectorDict": [[2661, 4, 1, "", "add_decomposition"], [2662, 4, 1, "", "assemble"], [2663, 4, 1, "", "broadcast_arguments"], [2664, 4, 1, "", "c_if"], [2660, 3, 1, "", "condition_bits"], [2665, 4, 1, "", "copy"], [2660, 3, 1, "", "decompositions"], [2660, 3, 1, "", "definition"], [2660, 3, 1, "", "duration"], [2666, 4, 1, "", "inverse"], [2667, 4, 1, "", "is_parameterized"], [2660, 3, 1, "", "label"], [2660, 3, 1, "", "name"], [2660, 3, 1, "", "num_clbits"], [2660, 3, 1, "", "num_qubits"], [2660, 3, 1, "", "params"], [2668, 4, 1, "", "qasm"], [2669, 4, 1, "", "repeat"], [2670, 4, 1, "", "reverse_ops"], [2671, 4, 1, "", "soft_compare"], [2660, 3, 1, "", "unit"], [2672, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveSuperOp": [[2674, 4, 1, "", "add_decomposition"], [2675, 4, 1, "", "assemble"], [2676, 4, 1, "", "broadcast_arguments"], [2677, 4, 1, "", "c_if"], [2673, 3, 1, "", "condition_bits"], [2678, 4, 1, "", "copy"], [2673, 3, 1, "", "decompositions"], [2673, 3, 1, "", "definition"], [2673, 3, 1, "", "duration"], [2679, 4, 1, "", "inverse"], [2680, 4, 1, "", "is_parameterized"], [2673, 3, 1, "", "label"], [2673, 3, 1, "", "name"], [2673, 3, 1, "", "num_clbits"], [2673, 3, 1, "", "num_qubits"], [2673, 3, 1, "", "params"], [2681, 4, 1, "", "qasm"], [2682, 4, 1, "", "repeat"], [2683, 4, 1, "", "reverse_ops"], [2684, 4, 1, "", "soft_compare"], [2673, 3, 1, "", "unit"], [2685, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SaveUnitary": [[2687, 4, 1, "", "add_decomposition"], [2688, 4, 1, "", "assemble"], [2689, 4, 1, "", "broadcast_arguments"], [2690, 4, 1, "", "c_if"], [2686, 3, 1, "", "condition_bits"], [2691, 4, 1, "", "copy"], [2686, 3, 1, "", "decompositions"], [2686, 3, 1, "", "definition"], [2686, 3, 1, "", "duration"], [2692, 4, 1, "", "inverse"], [2693, 4, 1, "", "is_parameterized"], [2686, 3, 1, "", "label"], [2686, 3, 1, "", "name"], [2686, 3, 1, "", "num_clbits"], [2686, 3, 1, "", "num_qubits"], [2686, 3, 1, "", "params"], [2694, 4, 1, "", "qasm"], [2695, 4, 1, "", "repeat"], [2696, 4, 1, "", "reverse_ops"], [2697, 4, 1, "", "soft_compare"], [2686, 3, 1, "", "unit"], [2698, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetDensityMatrix": [[2700, 4, 1, "", "add_decomposition"], [2701, 4, 1, "", "assemble"], [2702, 4, 1, "", "broadcast_arguments"], [2703, 4, 1, "", "c_if"], [2699, 3, 1, "", "condition_bits"], [2704, 4, 1, "", "copy"], [2699, 3, 1, "", "decompositions"], [2699, 3, 1, "", "definition"], [2699, 3, 1, "", "duration"], [2705, 4, 1, "", "inverse"], [2706, 4, 1, "", "is_parameterized"], [2699, 3, 1, "", "label"], [2699, 3, 1, "", "name"], [2699, 3, 1, "", "num_clbits"], [2699, 3, 1, "", "num_qubits"], [2699, 3, 1, "", "params"], [2707, 4, 1, "", "qasm"], [2708, 4, 1, "", "repeat"], [2709, 4, 1, "", "reverse_ops"], [2710, 4, 1, "", "soft_compare"], [2699, 3, 1, "", "unit"], [2711, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetMatrixProductState": [[2713, 4, 1, "", "add_decomposition"], [2714, 4, 1, "", "assemble"], [2715, 4, 1, "", "broadcast_arguments"], [2716, 4, 1, "", "c_if"], [2712, 3, 1, "", "condition_bits"], [2717, 4, 1, "", "copy"], [2712, 3, 1, "", "decompositions"], [2712, 3, 1, "", "definition"], [2712, 3, 1, "", "duration"], [2718, 4, 1, "", "inverse"], [2719, 4, 1, "", "is_parameterized"], [2712, 3, 1, "", "label"], [2712, 3, 1, "", "name"], [2712, 3, 1, "", "num_clbits"], [2712, 3, 1, "", "num_qubits"], [2712, 3, 1, "", "params"], [2720, 4, 1, "", "qasm"], [2721, 4, 1, "", "repeat"], [2722, 4, 1, "", "reverse_ops"], [2723, 4, 1, "", "soft_compare"], [2712, 3, 1, "", "unit"], [2724, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetStabilizer": [[2726, 4, 1, "", "add_decomposition"], [2727, 4, 1, "", "assemble"], [2728, 4, 1, "", "broadcast_arguments"], [2729, 4, 1, "", "c_if"], [2725, 3, 1, "", "condition_bits"], [2730, 4, 1, "", "copy"], [2725, 3, 1, "", "decompositions"], [2725, 3, 1, "", "definition"], [2725, 3, 1, "", "duration"], [2731, 4, 1, "", "inverse"], [2732, 4, 1, "", "is_parameterized"], [2725, 3, 1, "", "label"], [2725, 3, 1, "", "name"], [2725, 3, 1, "", "num_clbits"], [2725, 3, 1, "", "num_qubits"], [2725, 3, 1, "", "params"], [2733, 4, 1, "", "qasm"], [2734, 4, 1, "", "repeat"], [2735, 4, 1, "", "reverse_ops"], [2736, 4, 1, "", "soft_compare"], [2725, 3, 1, "", "unit"], [2737, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetStatevector": [[2739, 4, 1, "", "add_decomposition"], [2740, 4, 1, "", "assemble"], [2741, 4, 1, "", "broadcast_arguments"], [2742, 4, 1, "", "c_if"], [2738, 3, 1, "", "condition_bits"], [2743, 4, 1, "", "copy"], [2738, 3, 1, "", "decompositions"], [2738, 3, 1, "", "definition"], [2738, 3, 1, "", "duration"], [2744, 4, 1, "", "inverse"], [2745, 4, 1, "", "is_parameterized"], [2738, 3, 1, "", "label"], [2738, 3, 1, "", "name"], [2738, 3, 1, "", "num_clbits"], [2738, 3, 1, "", "num_qubits"], [2738, 3, 1, "", "params"], [2746, 4, 1, "", "qasm"], [2747, 4, 1, "", "repeat"], [2748, 4, 1, "", "reverse_ops"], [2749, 4, 1, "", "soft_compare"], [2738, 3, 1, "", "unit"], [2750, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetSuperOp": [[2752, 4, 1, "", "add_decomposition"], [2753, 4, 1, "", "assemble"], [2754, 4, 1, "", "broadcast_arguments"], [2755, 4, 1, "", "c_if"], [2751, 3, 1, "", "condition_bits"], [2756, 4, 1, "", "copy"], [2751, 3, 1, "", "decompositions"], [2751, 3, 1, "", "definition"], [2751, 3, 1, "", "duration"], [2757, 4, 1, "", "inverse"], [2758, 4, 1, "", "is_parameterized"], [2751, 3, 1, "", "label"], [2751, 3, 1, "", "name"], [2751, 3, 1, "", "num_clbits"], [2751, 3, 1, "", "num_qubits"], [2751, 3, 1, "", "params"], [2759, 4, 1, "", "qasm"], [2760, 4, 1, "", "repeat"], [2761, 4, 1, "", "reverse_ops"], [2762, 4, 1, "", "soft_compare"], [2751, 3, 1, "", "unit"], [2763, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.library.SetUnitary": [[2765, 4, 1, "", "add_decomposition"], [2766, 4, 1, "", "assemble"], [2767, 4, 1, "", "broadcast_arguments"], [2768, 4, 1, "", "c_if"], [2764, 3, 1, "", "condition_bits"], [2769, 4, 1, "", "copy"], [2764, 3, 1, "", "decompositions"], [2764, 3, 1, "", "definition"], [2764, 3, 1, "", "duration"], [2770, 4, 1, "", "inverse"], [2771, 4, 1, "", "is_parameterized"], [2764, 3, 1, "", "label"], [2764, 3, 1, "", "name"], [2764, 3, 1, "", "num_clbits"], [2764, 3, 1, "", "num_qubits"], [2764, 3, 1, "", "params"], [2772, 4, 1, "", "qasm"], [2773, 4, 1, "", "repeat"], [2774, 4, 1, "", "reverse_ops"], [2775, 4, 1, "", "soft_compare"], [2764, 3, 1, "", "unit"], [2776, 4, 1, "", "validate_parameter"]], "qiskit.providers.aer.noise": [[2798, 2, 1, "", "LocalNoisePass"], [2801, 2, 1, "", "NoiseModel"], [2813, 2, 1, "", "QuantumError"], [2830, 2, 1, "", "ReadoutError"], [2842, 2, 1, "", "RelaxationNoisePass"], [2845, 5, 1, "", "amplitude_damping_error"], [2846, 5, 1, "", "coherent_unitary_error"], [2847, 5, 1, "", "depolarizing_error"], [2855, 5, 1, "", "kraus_error"], [2856, 5, 1, "", "mixed_unitary_error"], [2857, 5, 1, "", "pauli_error"], [2858, 5, 1, "", "phase_amplitude_damping_error"], [2859, 5, 1, "", "phase_damping_error"], [2860, 5, 1, "", "reset_error"], [2861, 5, 1, "", "thermal_relaxation_error"]], "qiskit.providers.aer.noise.LocalNoisePass": [[2798, 3, 1, "", "is_analysis_pass"], [2798, 3, 1, "", "is_transformation_pass"], [2799, 4, 1, "", "name"], [2800, 4, 1, "", "run"]], "qiskit.providers.aer.noise.NoiseModel": [[2802, 4, 1, "", "add_all_qubit_quantum_error"], [2803, 4, 1, "", "add_all_qubit_readout_error"], [2804, 4, 1, "", "add_basis_gates"], [2805, 4, 1, "", "add_nonlocal_quantum_error"], [2806, 4, 1, "", "add_quantum_error"], [2807, 4, 1, "", "add_readout_error"], [2801, 3, 1, "", "basis_gates"], [2808, 4, 1, "", "from_backend"], [2809, 4, 1, "", "from_dict"], [2810, 4, 1, "", "is_ideal"], [2801, 3, 1, "", "noise_instructions"], [2801, 3, 1, "", "noise_qubits"], [2811, 4, 1, "", "reset"], [2812, 4, 1, "", "to_dict"]], "qiskit.providers.aer.noise.QuantumError": [[2813, 3, 1, "", "atol"], [2813, 3, 1, "", "circuits"], [2814, 4, 1, "", "compose"], [2815, 4, 1, "", "copy"], [2813, 3, 1, "", "dim"], [2816, 4, 1, "", "dot"], [2817, 4, 1, "", "error_term"], [2818, 4, 1, "", "expand"], [2813, 3, 1, "", "id"], [2819, 4, 1, "", "ideal"], [2820, 4, 1, "", "input_dims"], [2813, 3, 1, "", "num_qubits"], [2813, 3, 1, "", "number_of_qubits"], [2821, 4, 1, "", "output_dims"], [2822, 4, 1, "", "power"], [2813, 3, 1, "", "probabilities"], [2813, 3, 1, "", "qargs"], [2823, 4, 1, "", "reshape"], [2813, 3, 1, "", "rtol"], [2824, 4, 1, "", "set_atol"], [2825, 4, 1, "", "set_rtol"], [2813, 3, 1, "", "size"], [2826, 4, 1, "", "tensor"], [2827, 4, 1, "", "to_dict"], [2828, 4, 1, "", "to_instruction"], [2829, 4, 1, "", "to_quantumchannel"]], "qiskit.providers.aer.noise.ReadoutError": [[2830, 3, 1, "", "atol"], [2831, 4, 1, "", "compose"], [2832, 4, 1, "", "copy"], [2833, 4, 1, "", "dot"], [2834, 4, 1, "", "expand"], [2835, 4, 1, "", "ideal"], [2830, 3, 1, "", "number_of_qubits"], [2836, 4, 1, "", "power"], [2830, 3, 1, "", "probabilities"], [2830, 3, 1, "", "rtol"], [2837, 4, 1, "", "set_atol"], [2838, 4, 1, "", "set_rtol"], [2839, 4, 1, "", "tensor"], [2840, 4, 1, "", "to_dict"], [2841, 4, 1, "", "to_instruction"]], "qiskit.providers.aer.noise.RelaxationNoisePass": [[2842, 3, 1, "", "is_analysis_pass"], [2842, 3, 1, "", "is_transformation_pass"], [2843, 4, 1, "", "name"], [2844, 4, 1, "", "run"]], "qiskit.providers.aer.noise.device": [[2848, 5, 1, "", "basic_device_gate_errors"], [2849, 5, 1, "", "basic_device_readout_errors"], [2850, 5, 1, "", "gate_error_values"], [2851, 5, 1, "", "gate_length_values"], [2852, 5, 1, "", "gate_param_values"], [2853, 5, 1, "", "readout_error_values"], [2854, 5, 1, "", "thermal_relaxation_values"]], "qiskit.providers.aer.pulse": [[2862, 2, 1, "", "PulseSystemModel"], [2867, 5, 1, "", "duffing_system_model"]], "qiskit.providers.aer.pulse.PulseSystemModel": [[2863, 4, 1, "", "calculate_channel_frequencies"], [2864, 4, 1, "", "control_channel_index"], [2865, 4, 1, "", "from_backend"], [2866, 4, 1, "", "from_config"]], "qiskit.providers.aer.utils": [[2868, 2, 1, "", "NoiseTransformer"], [2886, 5, 1, "", "approximate_noise_model"], [2887, 5, 1, "", "approximate_quantum_error"], [2888, 5, 1, "", "insert_noise"], [2889, 5, 1, "", "remap_noise_model"], [2890, 5, 1, "", "transform_noise_model"], [2891, 5, 1, "", "transpile_noise_model"], [2892, 5, 1, "", "transpile_quantum_error"]], "qiskit.providers.aer.utils.NoiseTransformer": [[2869, 4, 1, "", "channel_matrix_representation"], [2870, 4, 1, "", "compute_P"], [2871, 4, 1, "", "compute_channel_operation"], [2872, 4, 1, "", "compute_q"], [2873, 4, 1, "", "fidelity"], [2874, 4, 1, "", "flatten_matrix"], [2875, 4, 1, "", "generate_channel_matrices"], [2876, 4, 1, "", "generate_channel_quadratic_programming_matrices"], [2877, 4, 1, "", "get_const_matrix_from_channel"], [2878, 4, 1, "", "get_matrix_from_channel"], [2879, 4, 1, "", "operator_circuit"], [2880, 4, 1, "", "operator_matrix"], [2881, 4, 1, "", "prepare_channel_operator_list"], [2882, 4, 1, "", "prepare_honesty_constraint"], [2883, 4, 1, "", "solve_quadratic_program"], [2884, 4, 1, "", "transform_by_given_channel"], [2885, 4, 1, "", "transform_by_operator_list"]], "qiskit.providers.basicaer": [[2893, 1, 1, "", "BasicAerError"], [2894, 2, 1, "", "BasicAerJob"], [2906, 2, 1, "", "BasicAerProvider"], [2909, 2, 1, "", "QasmSimulatorPy"], [2918, 2, 1, "", "StatevectorSimulatorPy"], [2927, 2, 1, "", "UnitarySimulatorPy"]], "qiskit.providers.basicaer.BasicAerJob": [[2895, 4, 1, "", "backend"], [2896, 4, 1, "", "cancel"], [2897, 4, 1, "", "cancelled"], [2898, 4, 1, "", "done"], [2899, 4, 1, "", "in_final_state"], [2900, 4, 1, "", "job_id"], [2901, 4, 1, "", "result"], [2902, 4, 1, "", "running"], [2903, 4, 1, "", "status"], [2904, 4, 1, "", "submit"], [2894, 3, 1, "", "version"], [2905, 4, 1, "", "wait_for_final_state"]], "qiskit.providers.basicaer.BasicAerProvider": [[2907, 4, 1, "", "backends"], [2908, 4, 1, "", "get_backend"], [2906, 3, 1, "", "version"]], "qiskit.providers.basicaer.QasmSimulatorPy": [[2909, 3, 1, "", "DEFAULT_CONFIGURATION"], [2909, 3, 1, "", "DEFAULT_OPTIONS"], [2909, 3, 1, "", "MAX_QUBITS_MEMORY"], [2909, 3, 1, "", "SHOW_FINAL_STATE"], [2909, 4, 1, "", "_default_options"], [2910, 4, 1, "", "configuration"], [2911, 4, 1, "", "name"], [2909, 3, 1, "", "options"], [2912, 4, 1, "", "properties"], [2913, 4, 1, "", "provider"], [2914, 4, 1, "", "run"], [2915, 4, 1, "", "run_experiment"], [2916, 4, 1, "", "set_options"], [2917, 4, 1, "", "status"], [2909, 3, 1, "", "version"]], "qiskit.providers.basicaer.StatevectorSimulatorPy": [[2918, 3, 1, "", "DEFAULT_CONFIGURATION"], [2918, 3, 1, "", "DEFAULT_OPTIONS"], [2918, 3, 1, "", "MAX_QUBITS_MEMORY"], [2918, 3, 1, "", "SHOW_FINAL_STATE"], [2918, 4, 1, "", "_default_options"], [2919, 4, 1, "", "configuration"], [2920, 4, 1, "", "name"], [2918, 3, 1, "", "options"], [2921, 4, 1, "", "properties"], [2922, 4, 1, "", "provider"], [2923, 4, 1, "", "run"], [2924, 4, 1, "", "run_experiment"], [2925, 4, 1, "", "set_options"], [2926, 4, 1, "", "status"], [2918, 3, 1, "", "version"]], "qiskit.providers.basicaer.UnitarySimulatorPy": [[2927, 3, 1, "", "DEFAULT_CONFIGURATION"], [2927, 3, 1, "", "DEFAULT_OPTIONS"], [2927, 3, 1, "", "MAX_QUBITS_MEMORY"], [2927, 4, 1, "", "_default_options"], [2928, 4, 1, "", "configuration"], [2929, 4, 1, "", "name"], [2927, 3, 1, "", "options"], [2930, 4, 1, "", "properties"], [2931, 4, 1, "", "provider"], [2932, 4, 1, "", "run"], [2933, 4, 1, "", "run_experiment"], [2934, 4, 1, "", "set_options"], [2935, 4, 1, "", "status"], [2927, 3, 1, "", "version"]], "qiskit.providers.fake_provider": [[2936, 2, 1, "", "ConfigurableFakeBackend"], [2945, 2, 1, "", "Fake1Q"], [2954, 2, 1, "", "FakeAlmaden"], [2963, 2, 1, "", "FakeAlmadenV2"], [2971, 2, 1, "", "FakeArmonk"], [2980, 2, 1, "", "FakeArmonkV2"], [2988, 2, 1, "", "FakeAthens"], [2997, 2, 1, "", "FakeAthensV2"], [3005, 2, 1, "", "FakeBackend5QV2"], [3013, 2, 1, "", "FakeBackendV2"], [3021, 2, 1, "", "FakeBelem"], [3030, 2, 1, "", "FakeBelemV2"], [3038, 2, 1, "", "FakeBoeblingen"], [3047, 2, 1, "", "FakeBoeblingenV2"], [3055, 2, 1, "", "FakeBogota"], [3064, 2, 1, "", "FakeBogotaV2"], [3072, 2, 1, "", "FakeBrooklyn"], [3081, 2, 1, "", "FakeBrooklynV2"], [3089, 2, 1, "", "FakeBurlington"], [3097, 2, 1, "", "FakeBurlingtonV2"], [3105, 2, 1, "", "FakeCairo"], [3114, 2, 1, "", "FakeCairoV2"], [3122, 2, 1, "", "FakeCambridge"], [3130, 2, 1, "", "FakeCambridgeV2"], [3138, 2, 1, "", "FakeCasablanca"], [3147, 2, 1, "", "FakeCasablancaV2"], [3155, 2, 1, "", "FakeEssex"], [3163, 2, 1, "", "FakeEssexV2"], [3171, 2, 1, "", "FakeGuadalupe"], [3180, 2, 1, "", "FakeGuadalupeV2"], [3188, 2, 1, "", "FakeHanoi"], [3197, 2, 1, "", "FakeHanoiV2"], [3205, 2, 1, "", "FakeJakarta"], [3214, 2, 1, "", "FakeJakartaV2"], [3222, 2, 1, "", "FakeJohannesburg"], [3231, 2, 1, "", "FakeJohannesburgV2"], [3239, 2, 1, "", "FakeKolkata"], [3248, 2, 1, "", "FakeKolkataV2"], [3256, 2, 1, "", "FakeLagos"], [3265, 2, 1, "", "FakeLagosV2"], [3273, 2, 1, "", "FakeLima"], [3282, 2, 1, "", "FakeLimaV2"], [3290, 2, 1, "", "FakeLondon"], [3298, 2, 1, "", "FakeLondonV2"], [3306, 2, 1, "", "FakeManhattan"], [3315, 2, 1, "", "FakeManhattanV2"], [3323, 2, 1, "", "FakeManila"], [3332, 2, 1, "", "FakeManilaV2"], [3340, 2, 1, "", "FakeMelbourne"], [3348, 2, 1, "", "FakeMelbourneV2"], [3356, 2, 1, "", "FakeMontreal"], [3365, 2, 1, "", "FakeMontrealV2"], [3373, 2, 1, "", "FakeMumbai"], [3382, 2, 1, "", "FakeMumbaiFractionalCX"], [3390, 2, 1, "", "FakeMumbaiV2"], [3398, 2, 1, "", "FakeNairobi"], [3407, 2, 1, "", "FakeNairobiV2"], [3415, 2, 1, "", "FakeOpenPulse2Q"], [3424, 2, 1, "", "FakeOpenPulse3Q"], [3433, 2, 1, "", "FakeOurense"], [3441, 2, 1, "", "FakeOurenseV2"], [3449, 2, 1, "", "FakeParis"], [3458, 2, 1, "", "FakeParisV2"], [3466, 2, 1, "", "FakePoughkeepsie"], [3474, 2, 1, "", "FakePoughkeepsieV2"], [3482, 2, 1, "", "FakeProvider"], [3485, 2, 1, "", "FakeProviderForBackendV2"], [3488, 2, 1, "", "FakeQasmSimulator"], [3496, 2, 1, "", "FakeQuito"], [3505, 2, 1, "", "FakeQuitoV2"], [3513, 2, 1, "", "FakeRochester"], [3521, 2, 1, "", "FakeRochesterV2"], [3529, 2, 1, "", "FakeRome"], [3538, 2, 1, "", "FakeRomeV2"], [3546, 2, 1, "", "FakeRueschlikon"], [3554, 2, 1, "", "FakeSantiago"], [3563, 2, 1, "", "FakeSantiagoV2"], [3571, 2, 1, "", "FakeSingapore"], [3580, 2, 1, "", "FakeSingaporeV2"], [3588, 2, 1, "", "FakeSydney"], [3597, 2, 1, "", "FakeSydneyV2"], [3605, 2, 1, "", "FakeTenerife"], [3613, 2, 1, "", "FakeTokyo"], [3621, 2, 1, "", "FakeToronto"], [3630, 2, 1, "", "FakeTorontoV2"], [3638, 2, 1, "", "FakeValencia"], [3647, 2, 1, "", "FakeValenciaV2"], [3655, 2, 1, "", "FakeVigo"], [3663, 2, 1, "", "FakeVigoV2"], [3671, 2, 1, "", "FakeWashington"], [3680, 2, 1, "", "FakeWashingtonV2"], [3688, 2, 1, "", "FakeYorktown"], [3696, 2, 1, "", "FakeYorktownV2"]], "qiskit.providers.fake_provider.ConfigurableFakeBackend": [[2937, 4, 1, "", "configuration"], [2938, 4, 1, "", "defaults"], [2939, 4, 1, "", "name"], [2936, 3, 1, "", "options"], [2940, 4, 1, "", "properties"], [2941, 4, 1, "", "provider"], [2942, 4, 1, "", "run"], [2943, 4, 1, "", "set_options"], [2944, 4, 1, "", "status"], [2936, 3, 1, "", "version"]], "qiskit.providers.fake_provider.Fake1Q": [[2946, 4, 1, "", "configuration"], [2947, 4, 1, "", "defaults"], [2948, 4, 1, "", "name"], [2945, 3, 1, "", "options"], [2949, 4, 1, "", "properties"], [2950, 4, 1, "", "provider"], [2951, 4, 1, "", "run"], [2952, 4, 1, "", "set_options"], [2953, 4, 1, "", "status"], [2945, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeAlmaden": [[2954, 3, 1, "", "backend_name"], [2954, 3, 1, "", "conf_filename"], [2955, 4, 1, "", "configuration"], [2956, 4, 1, "", "defaults"], [2954, 3, 1, "", "defs_filename"], [2954, 3, 1, "", "dirname"], [2957, 4, 1, "", "name"], [2954, 3, 1, "", "options"], [2958, 4, 1, "", "properties"], [2954, 3, 1, "", "props_filename"], [2959, 4, 1, "", "provider"], [2960, 4, 1, "", "run"], [2961, 4, 1, "", "set_options"], [2962, 4, 1, "", "status"], [2954, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeAlmadenV2": [[2964, 4, 1, "", "acquire_channel"], [2963, 3, 1, "", "backend_name"], [2963, 3, 1, "", "conf_filename"], [2965, 4, 1, "", "control_channel"], [2963, 3, 1, "", "coupling_map"], [2963, 3, 1, "", "defs_filename"], [2963, 3, 1, "", "dirname"], [2966, 4, 1, "", "drive_channel"], [2963, 3, 1, "", "dt"], [2963, 3, 1, "", "dtm"], [2963, 3, 1, "", "instruction_durations"], [2963, 3, 1, "", "instruction_schedule_map"], [2963, 3, 1, "", "instructions"], [2963, 3, 1, "", "max_circuits"], [2963, 3, 1, "", "meas_map"], [2967, 4, 1, "", "measure_channel"], [2963, 3, 1, "", "num_qubits"], [2963, 3, 1, "", "operation_names"], [2963, 3, 1, "", "operations"], [2963, 3, 1, "", "options"], [2963, 3, 1, "", "props_filename"], [2963, 3, 1, "", "provider"], [2968, 4, 1, "", "qubit_properties"], [2969, 4, 1, "", "run"], [2970, 4, 1, "", "set_options"], [2963, 3, 1, "", "target"], [2963, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeArmonk": [[2971, 3, 1, "", "backend_name"], [2971, 3, 1, "", "conf_filename"], [2972, 4, 1, "", "configuration"], [2973, 4, 1, "", "defaults"], [2971, 3, 1, "", "defs_filename"], [2971, 3, 1, "", "dirname"], [2974, 4, 1, "", "name"], [2971, 3, 1, "", "options"], [2975, 4, 1, "", "properties"], [2971, 3, 1, "", "props_filename"], [2976, 4, 1, "", "provider"], [2977, 4, 1, "", "run"], [2978, 4, 1, "", "set_options"], [2979, 4, 1, "", "status"], [2971, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeArmonkV2": [[2981, 4, 1, "", "acquire_channel"], [2980, 3, 1, "", "backend_name"], [2980, 3, 1, "", "conf_filename"], [2982, 4, 1, "", "control_channel"], [2980, 3, 1, "", "coupling_map"], [2980, 3, 1, "", "defs_filename"], [2980, 3, 1, "", "dirname"], [2983, 4, 1, "", "drive_channel"], [2980, 3, 1, "", "dt"], [2980, 3, 1, "", "dtm"], [2980, 3, 1, "", "instruction_durations"], [2980, 3, 1, "", "instruction_schedule_map"], [2980, 3, 1, "", "instructions"], [2980, 3, 1, "", "max_circuits"], [2980, 3, 1, "", "meas_map"], [2984, 4, 1, "", "measure_channel"], [2980, 3, 1, "", "num_qubits"], [2980, 3, 1, "", "operation_names"], [2980, 3, 1, "", "operations"], [2980, 3, 1, "", "options"], [2980, 3, 1, "", "props_filename"], [2980, 3, 1, "", "provider"], [2985, 4, 1, "", "qubit_properties"], [2986, 4, 1, "", "run"], [2987, 4, 1, "", "set_options"], [2980, 3, 1, "", "target"], [2980, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeAthens": [[2988, 3, 1, "", "backend_name"], [2988, 3, 1, "", "conf_filename"], [2989, 4, 1, "", "configuration"], [2990, 4, 1, "", "defaults"], [2988, 3, 1, "", "defs_filename"], [2988, 3, 1, "", "dirname"], [2991, 4, 1, "", "name"], [2988, 3, 1, "", "options"], [2992, 4, 1, "", "properties"], [2988, 3, 1, "", "props_filename"], [2993, 4, 1, "", "provider"], [2994, 4, 1, "", "run"], [2995, 4, 1, "", "set_options"], [2996, 4, 1, "", "status"], [2988, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeAthensV2": [[2998, 4, 1, "", "acquire_channel"], [2997, 3, 1, "", "backend_name"], [2997, 3, 1, "", "conf_filename"], [2999, 4, 1, "", "control_channel"], [2997, 3, 1, "", "coupling_map"], [2997, 3, 1, "", "defs_filename"], [2997, 3, 1, "", "dirname"], [3000, 4, 1, "", "drive_channel"], [2997, 3, 1, "", "dt"], [2997, 3, 1, "", "dtm"], [2997, 3, 1, "", "instruction_durations"], [2997, 3, 1, "", "instruction_schedule_map"], [2997, 3, 1, "", "instructions"], [2997, 3, 1, "", "max_circuits"], [2997, 3, 1, "", "meas_map"], [3001, 4, 1, "", "measure_channel"], [2997, 3, 1, "", "num_qubits"], [2997, 3, 1, "", "operation_names"], [2997, 3, 1, "", "operations"], [2997, 3, 1, "", "options"], [2997, 3, 1, "", "props_filename"], [2997, 3, 1, "", "provider"], [3002, 4, 1, "", "qubit_properties"], [3003, 4, 1, "", "run"], [3004, 4, 1, "", "set_options"], [2997, 3, 1, "", "target"], [2997, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBackend5QV2": [[3006, 4, 1, "", "acquire_channel"], [3007, 4, 1, "", "control_channel"], [3005, 3, 1, "", "coupling_map"], [3008, 4, 1, "", "drive_channel"], [3005, 3, 1, "", "dt"], [3005, 3, 1, "", "dtm"], [3005, 3, 1, "", "instruction_durations"], [3005, 3, 1, "", "instruction_schedule_map"], [3005, 3, 1, "", "instructions"], [3005, 3, 1, "", "max_circuits"], [3005, 3, 1, "", "meas_map"], [3009, 4, 1, "", "measure_channel"], [3005, 3, 1, "", "num_qubits"], [3005, 3, 1, "", "operation_names"], [3005, 3, 1, "", "operations"], [3005, 3, 1, "", "options"], [3005, 3, 1, "", "provider"], [3010, 4, 1, "", "qubit_properties"], [3011, 4, 1, "", "run"], [3012, 4, 1, "", "set_options"], [3005, 3, 1, "", "target"], [3005, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBackendV2": [[3014, 4, 1, "", "acquire_channel"], [3015, 4, 1, "", "control_channel"], [3013, 3, 1, "", "coupling_map"], [3016, 4, 1, "", "drive_channel"], [3013, 3, 1, "", "dt"], [3013, 3, 1, "", "dtm"], [3013, 3, 1, "", "instruction_durations"], [3013, 3, 1, "", "instruction_schedule_map"], [3013, 3, 1, "", "instructions"], [3013, 3, 1, "", "max_circuits"], [3013, 3, 1, "", "meas_map"], [3017, 4, 1, "", "measure_channel"], [3013, 3, 1, "", "num_qubits"], [3013, 3, 1, "", "operation_names"], [3013, 3, 1, "", "operations"], [3013, 3, 1, "", "options"], [3013, 3, 1, "", "provider"], [3018, 4, 1, "", "qubit_properties"], [3019, 4, 1, "", "run"], [3020, 4, 1, "", "set_options"], [3013, 3, 1, "", "target"], [3013, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBelem": [[3021, 3, 1, "", "backend_name"], [3021, 3, 1, "", "conf_filename"], [3022, 4, 1, "", "configuration"], [3023, 4, 1, "", "defaults"], [3021, 3, 1, "", "defs_filename"], [3021, 3, 1, "", "dirname"], [3024, 4, 1, "", "name"], [3021, 3, 1, "", "options"], [3025, 4, 1, "", "properties"], [3021, 3, 1, "", "props_filename"], [3026, 4, 1, "", "provider"], [3027, 4, 1, "", "run"], [3028, 4, 1, "", "set_options"], [3029, 4, 1, "", "status"], [3021, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBelemV2": [[3031, 4, 1, "", "acquire_channel"], [3030, 3, 1, "", "backend_name"], [3030, 3, 1, "", "conf_filename"], [3032, 4, 1, "", "control_channel"], [3030, 3, 1, "", "coupling_map"], [3030, 3, 1, "", "defs_filename"], [3030, 3, 1, "", "dirname"], [3033, 4, 1, "", "drive_channel"], [3030, 3, 1, "", "dt"], [3030, 3, 1, "", "dtm"], [3030, 3, 1, "", "instruction_durations"], [3030, 3, 1, "", "instruction_schedule_map"], [3030, 3, 1, "", "instructions"], [3030, 3, 1, "", "max_circuits"], [3030, 3, 1, "", "meas_map"], [3034, 4, 1, "", "measure_channel"], [3030, 3, 1, "", "num_qubits"], [3030, 3, 1, "", "operation_names"], [3030, 3, 1, "", "operations"], [3030, 3, 1, "", "options"], [3030, 3, 1, "", "props_filename"], [3030, 3, 1, "", "provider"], [3035, 4, 1, "", "qubit_properties"], [3036, 4, 1, "", "run"], [3037, 4, 1, "", "set_options"], [3030, 3, 1, "", "target"], [3030, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBoeblingen": [[3038, 3, 1, "", "backend_name"], [3038, 3, 1, "", "conf_filename"], [3039, 4, 1, "", "configuration"], [3040, 4, 1, "", "defaults"], [3038, 3, 1, "", "defs_filename"], [3038, 3, 1, "", "dirname"], [3041, 4, 1, "", "name"], [3038, 3, 1, "", "options"], [3042, 4, 1, "", "properties"], [3038, 3, 1, "", "props_filename"], [3043, 4, 1, "", "provider"], [3044, 4, 1, "", "run"], [3045, 4, 1, "", "set_options"], [3046, 4, 1, "", "status"], [3038, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBoeblingenV2": [[3048, 4, 1, "", "acquire_channel"], [3047, 3, 1, "", "backend_name"], [3047, 3, 1, "", "conf_filename"], [3049, 4, 1, "", "control_channel"], [3047, 3, 1, "", "coupling_map"], [3047, 3, 1, "", "defs_filename"], [3047, 3, 1, "", "dirname"], [3050, 4, 1, "", "drive_channel"], [3047, 3, 1, "", "dt"], [3047, 3, 1, "", "dtm"], [3047, 3, 1, "", "instruction_durations"], [3047, 3, 1, "", "instruction_schedule_map"], [3047, 3, 1, "", "instructions"], [3047, 3, 1, "", "max_circuits"], [3047, 3, 1, "", "meas_map"], [3051, 4, 1, "", "measure_channel"], [3047, 3, 1, "", "num_qubits"], [3047, 3, 1, "", "operation_names"], [3047, 3, 1, "", "operations"], [3047, 3, 1, "", "options"], [3047, 3, 1, "", "props_filename"], [3047, 3, 1, "", "provider"], [3052, 4, 1, "", "qubit_properties"], [3053, 4, 1, "", "run"], [3054, 4, 1, "", "set_options"], [3047, 3, 1, "", "target"], [3047, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBogota": [[3055, 3, 1, "", "backend_name"], [3055, 3, 1, "", "conf_filename"], [3056, 4, 1, "", "configuration"], [3057, 4, 1, "", "defaults"], [3055, 3, 1, "", "defs_filename"], [3055, 3, 1, "", "dirname"], [3058, 4, 1, "", "name"], [3055, 3, 1, "", "options"], [3059, 4, 1, "", "properties"], [3055, 3, 1, "", "props_filename"], [3060, 4, 1, "", "provider"], [3061, 4, 1, "", "run"], [3062, 4, 1, "", "set_options"], [3063, 4, 1, "", "status"], [3055, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBogotaV2": [[3065, 4, 1, "", "acquire_channel"], [3064, 3, 1, "", "backend_name"], [3064, 3, 1, "", "conf_filename"], [3066, 4, 1, "", "control_channel"], [3064, 3, 1, "", "coupling_map"], [3064, 3, 1, "", "defs_filename"], [3064, 3, 1, "", "dirname"], [3067, 4, 1, "", "drive_channel"], [3064, 3, 1, "", "dt"], [3064, 3, 1, "", "dtm"], [3064, 3, 1, "", "instruction_durations"], [3064, 3, 1, "", "instruction_schedule_map"], [3064, 3, 1, "", "instructions"], [3064, 3, 1, "", "max_circuits"], [3064, 3, 1, "", "meas_map"], [3068, 4, 1, "", "measure_channel"], [3064, 3, 1, "", "num_qubits"], [3064, 3, 1, "", "operation_names"], [3064, 3, 1, "", "operations"], [3064, 3, 1, "", "options"], [3064, 3, 1, "", "props_filename"], [3064, 3, 1, "", "provider"], [3069, 4, 1, "", "qubit_properties"], [3070, 4, 1, "", "run"], [3071, 4, 1, "", "set_options"], [3064, 3, 1, "", "target"], [3064, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBrooklyn": [[3072, 3, 1, "", "backend_name"], [3072, 3, 1, "", "conf_filename"], [3073, 4, 1, "", "configuration"], [3074, 4, 1, "", "defaults"], [3072, 3, 1, "", "defs_filename"], [3072, 3, 1, "", "dirname"], [3075, 4, 1, "", "name"], [3072, 3, 1, "", "options"], [3076, 4, 1, "", "properties"], [3072, 3, 1, "", "props_filename"], [3077, 4, 1, "", "provider"], [3078, 4, 1, "", "run"], [3079, 4, 1, "", "set_options"], [3080, 4, 1, "", "status"], [3072, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBrooklynV2": [[3082, 4, 1, "", "acquire_channel"], [3081, 3, 1, "", "backend_name"], [3081, 3, 1, "", "conf_filename"], [3083, 4, 1, "", "control_channel"], [3081, 3, 1, "", "coupling_map"], [3081, 3, 1, "", "defs_filename"], [3081, 3, 1, "", "dirname"], [3084, 4, 1, "", "drive_channel"], [3081, 3, 1, "", "dt"], [3081, 3, 1, "", "dtm"], [3081, 3, 1, "", "instruction_durations"], [3081, 3, 1, "", "instruction_schedule_map"], [3081, 3, 1, "", "instructions"], [3081, 3, 1, "", "max_circuits"], [3081, 3, 1, "", "meas_map"], [3085, 4, 1, "", "measure_channel"], [3081, 3, 1, "", "num_qubits"], [3081, 3, 1, "", "operation_names"], [3081, 3, 1, "", "operations"], [3081, 3, 1, "", "options"], [3081, 3, 1, "", "props_filename"], [3081, 3, 1, "", "provider"], [3086, 4, 1, "", "qubit_properties"], [3087, 4, 1, "", "run"], [3088, 4, 1, "", "set_options"], [3081, 3, 1, "", "target"], [3081, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBurlington": [[3089, 3, 1, "", "backend_name"], [3089, 3, 1, "", "conf_filename"], [3090, 4, 1, "", "configuration"], [3089, 3, 1, "", "dirname"], [3091, 4, 1, "", "name"], [3089, 3, 1, "", "options"], [3092, 4, 1, "", "properties"], [3089, 3, 1, "", "props_filename"], [3093, 4, 1, "", "provider"], [3094, 4, 1, "", "run"], [3095, 4, 1, "", "set_options"], [3096, 4, 1, "", "status"], [3089, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeBurlingtonV2": [[3098, 4, 1, "", "acquire_channel"], [3097, 3, 1, "", "backend_name"], [3097, 3, 1, "", "conf_filename"], [3099, 4, 1, "", "control_channel"], [3097, 3, 1, "", "coupling_map"], [3097, 3, 1, "", "defs_filename"], [3097, 3, 1, "", "dirname"], [3100, 4, 1, "", "drive_channel"], [3097, 3, 1, "", "dt"], [3097, 3, 1, "", "dtm"], [3097, 3, 1, "", "instruction_durations"], [3097, 3, 1, "", "instruction_schedule_map"], [3097, 3, 1, "", "instructions"], [3097, 3, 1, "", "max_circuits"], [3097, 3, 1, "", "meas_map"], [3101, 4, 1, "", "measure_channel"], [3097, 3, 1, "", "num_qubits"], [3097, 3, 1, "", "operation_names"], [3097, 3, 1, "", "operations"], [3097, 3, 1, "", "options"], [3097, 3, 1, "", "props_filename"], [3097, 3, 1, "", "provider"], [3102, 4, 1, "", "qubit_properties"], [3103, 4, 1, "", "run"], [3104, 4, 1, "", "set_options"], [3097, 3, 1, "", "target"], [3097, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCairo": [[3105, 3, 1, "", "backend_name"], [3105, 3, 1, "", "conf_filename"], [3106, 4, 1, "", "configuration"], [3107, 4, 1, "", "defaults"], [3105, 3, 1, "", "defs_filename"], [3105, 3, 1, "", "dirname"], [3108, 4, 1, "", "name"], [3105, 3, 1, "", "options"], [3109, 4, 1, "", "properties"], [3105, 3, 1, "", "props_filename"], [3110, 4, 1, "", "provider"], [3111, 4, 1, "", "run"], [3112, 4, 1, "", "set_options"], [3113, 4, 1, "", "status"], [3105, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCairoV2": [[3115, 4, 1, "", "acquire_channel"], [3114, 3, 1, "", "backend_name"], [3114, 3, 1, "", "conf_filename"], [3116, 4, 1, "", "control_channel"], [3114, 3, 1, "", "coupling_map"], [3114, 3, 1, "", "defs_filename"], [3114, 3, 1, "", "dirname"], [3117, 4, 1, "", "drive_channel"], [3114, 3, 1, "", "dt"], [3114, 3, 1, "", "dtm"], [3114, 3, 1, "", "instruction_durations"], [3114, 3, 1, "", "instruction_schedule_map"], [3114, 3, 1, "", "instructions"], [3114, 3, 1, "", "max_circuits"], [3114, 3, 1, "", "meas_map"], [3118, 4, 1, "", "measure_channel"], [3114, 3, 1, "", "num_qubits"], [3114, 3, 1, "", "operation_names"], [3114, 3, 1, "", "operations"], [3114, 3, 1, "", "options"], [3114, 3, 1, "", "props_filename"], [3114, 3, 1, "", "provider"], [3119, 4, 1, "", "qubit_properties"], [3120, 4, 1, "", "run"], [3121, 4, 1, "", "set_options"], [3114, 3, 1, "", "target"], [3114, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCambridge": [[3122, 3, 1, "", "backend_name"], [3122, 3, 1, "", "conf_filename"], [3123, 4, 1, "", "configuration"], [3122, 3, 1, "", "dirname"], [3124, 4, 1, "", "name"], [3122, 3, 1, "", "options"], [3125, 4, 1, "", "properties"], [3122, 3, 1, "", "props_filename"], [3126, 4, 1, "", "provider"], [3127, 4, 1, "", "run"], [3128, 4, 1, "", "set_options"], [3129, 4, 1, "", "status"], [3122, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCambridgeV2": [[3131, 4, 1, "", "acquire_channel"], [3130, 3, 1, "", "backend_name"], [3130, 3, 1, "", "conf_filename"], [3132, 4, 1, "", "control_channel"], [3130, 3, 1, "", "coupling_map"], [3130, 3, 1, "", "defs_filename"], [3130, 3, 1, "", "dirname"], [3133, 4, 1, "", "drive_channel"], [3130, 3, 1, "", "dt"], [3130, 3, 1, "", "dtm"], [3130, 3, 1, "", "instruction_durations"], [3130, 3, 1, "", "instruction_schedule_map"], [3130, 3, 1, "", "instructions"], [3130, 3, 1, "", "max_circuits"], [3130, 3, 1, "", "meas_map"], [3134, 4, 1, "", "measure_channel"], [3130, 3, 1, "", "num_qubits"], [3130, 3, 1, "", "operation_names"], [3130, 3, 1, "", "operations"], [3130, 3, 1, "", "options"], [3130, 3, 1, "", "props_filename"], [3130, 3, 1, "", "provider"], [3135, 4, 1, "", "qubit_properties"], [3136, 4, 1, "", "run"], [3137, 4, 1, "", "set_options"], [3130, 3, 1, "", "target"], [3130, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCasablanca": [[3138, 3, 1, "", "backend_name"], [3138, 3, 1, "", "conf_filename"], [3139, 4, 1, "", "configuration"], [3140, 4, 1, "", "defaults"], [3138, 3, 1, "", "defs_filename"], [3138, 3, 1, "", "dirname"], [3141, 4, 1, "", "name"], [3138, 3, 1, "", "options"], [3142, 4, 1, "", "properties"], [3138, 3, 1, "", "props_filename"], [3143, 4, 1, "", "provider"], [3144, 4, 1, "", "run"], [3145, 4, 1, "", "set_options"], [3146, 4, 1, "", "status"], [3138, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeCasablancaV2": [[3148, 4, 1, "", "acquire_channel"], [3147, 3, 1, "", "backend_name"], [3147, 3, 1, "", "conf_filename"], [3149, 4, 1, "", "control_channel"], [3147, 3, 1, "", "coupling_map"], [3147, 3, 1, "", "defs_filename"], [3147, 3, 1, "", "dirname"], [3150, 4, 1, "", "drive_channel"], [3147, 3, 1, "", "dt"], [3147, 3, 1, "", "dtm"], [3147, 3, 1, "", "instruction_durations"], [3147, 3, 1, "", "instruction_schedule_map"], [3147, 3, 1, "", "instructions"], [3147, 3, 1, "", "max_circuits"], [3147, 3, 1, "", "meas_map"], [3151, 4, 1, "", "measure_channel"], [3147, 3, 1, "", "num_qubits"], [3147, 3, 1, "", "operation_names"], [3147, 3, 1, "", "operations"], [3147, 3, 1, "", "options"], [3147, 3, 1, "", "props_filename"], [3147, 3, 1, "", "provider"], [3152, 4, 1, "", "qubit_properties"], [3153, 4, 1, "", "run"], [3154, 4, 1, "", "set_options"], [3147, 3, 1, "", "target"], [3147, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeEssex": [[3155, 3, 1, "", "backend_name"], [3155, 3, 1, "", "conf_filename"], [3156, 4, 1, "", "configuration"], [3155, 3, 1, "", "dirname"], [3157, 4, 1, "", "name"], [3155, 3, 1, "", "options"], [3158, 4, 1, "", "properties"], [3155, 3, 1, "", "props_filename"], [3159, 4, 1, "", "provider"], [3160, 4, 1, "", "run"], [3161, 4, 1, "", "set_options"], [3162, 4, 1, "", "status"], [3155, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeEssexV2": [[3164, 4, 1, "", "acquire_channel"], [3163, 3, 1, "", "backend_name"], [3163, 3, 1, "", "conf_filename"], [3165, 4, 1, "", "control_channel"], [3163, 3, 1, "", "coupling_map"], [3163, 3, 1, "", "defs_filename"], [3163, 3, 1, "", "dirname"], [3166, 4, 1, "", "drive_channel"], [3163, 3, 1, "", "dt"], [3163, 3, 1, "", "dtm"], [3163, 3, 1, "", "instruction_durations"], [3163, 3, 1, "", "instruction_schedule_map"], [3163, 3, 1, "", "instructions"], [3163, 3, 1, "", "max_circuits"], [3163, 3, 1, "", "meas_map"], [3167, 4, 1, "", "measure_channel"], [3163, 3, 1, "", "num_qubits"], [3163, 3, 1, "", "operation_names"], [3163, 3, 1, "", "operations"], [3163, 3, 1, "", "options"], [3163, 3, 1, "", "props_filename"], [3163, 3, 1, "", "provider"], [3168, 4, 1, "", "qubit_properties"], [3169, 4, 1, "", "run"], [3170, 4, 1, "", "set_options"], [3163, 3, 1, "", "target"], [3163, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeGuadalupe": [[3171, 3, 1, "", "backend_name"], [3171, 3, 1, "", "conf_filename"], [3172, 4, 1, "", "configuration"], [3173, 4, 1, "", "defaults"], [3171, 3, 1, "", "defs_filename"], [3171, 3, 1, "", "dirname"], [3174, 4, 1, "", "name"], [3171, 3, 1, "", "options"], [3175, 4, 1, "", "properties"], [3171, 3, 1, "", "props_filename"], [3176, 4, 1, "", "provider"], [3177, 4, 1, "", "run"], [3178, 4, 1, "", "set_options"], [3179, 4, 1, "", "status"], [3171, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeGuadalupeV2": [[3181, 4, 1, "", "acquire_channel"], [3180, 3, 1, "", "backend_name"], [3180, 3, 1, "", "conf_filename"], [3182, 4, 1, "", "control_channel"], [3180, 3, 1, "", "coupling_map"], [3180, 3, 1, "", "defs_filename"], [3180, 3, 1, "", "dirname"], [3183, 4, 1, "", "drive_channel"], [3180, 3, 1, "", "dt"], [3180, 3, 1, "", "dtm"], [3180, 3, 1, "", "instruction_durations"], [3180, 3, 1, "", "instruction_schedule_map"], [3180, 3, 1, "", "instructions"], [3180, 3, 1, "", "max_circuits"], [3180, 3, 1, "", "meas_map"], [3184, 4, 1, "", "measure_channel"], [3180, 3, 1, "", "num_qubits"], [3180, 3, 1, "", "operation_names"], [3180, 3, 1, "", "operations"], [3180, 3, 1, "", "options"], [3180, 3, 1, "", "props_filename"], [3180, 3, 1, "", "provider"], [3185, 4, 1, "", "qubit_properties"], [3186, 4, 1, "", "run"], [3187, 4, 1, "", "set_options"], [3180, 3, 1, "", "target"], [3180, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeHanoi": [[3188, 3, 1, "", "backend_name"], [3188, 3, 1, "", "conf_filename"], [3189, 4, 1, "", "configuration"], [3190, 4, 1, "", "defaults"], [3188, 3, 1, "", "defs_filename"], [3188, 3, 1, "", "dirname"], [3191, 4, 1, "", "name"], [3188, 3, 1, "", "options"], [3192, 4, 1, "", "properties"], [3188, 3, 1, "", "props_filename"], [3193, 4, 1, "", "provider"], [3194, 4, 1, "", "run"], [3195, 4, 1, "", "set_options"], [3196, 4, 1, "", "status"], [3188, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeHanoiV2": [[3198, 4, 1, "", "acquire_channel"], [3197, 3, 1, "", "backend_name"], [3197, 3, 1, "", "conf_filename"], [3199, 4, 1, "", "control_channel"], [3197, 3, 1, "", "coupling_map"], [3197, 3, 1, "", "defs_filename"], [3197, 3, 1, "", "dirname"], [3200, 4, 1, "", "drive_channel"], [3197, 3, 1, "", "dt"], [3197, 3, 1, "", "dtm"], [3197, 3, 1, "", "instruction_durations"], [3197, 3, 1, "", "instruction_schedule_map"], [3197, 3, 1, "", "instructions"], [3197, 3, 1, "", "max_circuits"], [3197, 3, 1, "", "meas_map"], [3201, 4, 1, "", "measure_channel"], [3197, 3, 1, "", "num_qubits"], [3197, 3, 1, "", "operation_names"], [3197, 3, 1, "", "operations"], [3197, 3, 1, "", "options"], [3197, 3, 1, "", "props_filename"], [3197, 3, 1, "", "provider"], [3202, 4, 1, "", "qubit_properties"], [3203, 4, 1, "", "run"], [3204, 4, 1, "", "set_options"], [3197, 3, 1, "", "target"], [3197, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeJakarta": [[3205, 3, 1, "", "backend_name"], [3205, 3, 1, "", "conf_filename"], [3206, 4, 1, "", "configuration"], [3207, 4, 1, "", "defaults"], [3205, 3, 1, "", "defs_filename"], [3205, 3, 1, "", "dirname"], [3208, 4, 1, "", "name"], [3205, 3, 1, "", "options"], [3209, 4, 1, "", "properties"], [3205, 3, 1, "", "props_filename"], [3210, 4, 1, "", "provider"], [3211, 4, 1, "", "run"], [3212, 4, 1, "", "set_options"], [3213, 4, 1, "", "status"], [3205, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeJakartaV2": [[3215, 4, 1, "", "acquire_channel"], [3214, 3, 1, "", "backend_name"], [3214, 3, 1, "", "conf_filename"], [3216, 4, 1, "", "control_channel"], [3214, 3, 1, "", "coupling_map"], [3214, 3, 1, "", "defs_filename"], [3214, 3, 1, "", "dirname"], [3217, 4, 1, "", "drive_channel"], [3214, 3, 1, "", "dt"], [3214, 3, 1, "", "dtm"], [3214, 3, 1, "", "instruction_durations"], [3214, 3, 1, "", "instruction_schedule_map"], [3214, 3, 1, "", "instructions"], [3214, 3, 1, "", "max_circuits"], [3214, 3, 1, "", "meas_map"], [3218, 4, 1, "", "measure_channel"], [3214, 3, 1, "", "num_qubits"], [3214, 3, 1, "", "operation_names"], [3214, 3, 1, "", "operations"], [3214, 3, 1, "", "options"], [3214, 3, 1, "", "props_filename"], [3214, 3, 1, "", "provider"], [3219, 4, 1, "", "qubit_properties"], [3220, 4, 1, "", "run"], [3221, 4, 1, "", "set_options"], [3214, 3, 1, "", "target"], [3214, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeJohannesburg": [[3222, 3, 1, "", "backend_name"], [3222, 3, 1, "", "conf_filename"], [3223, 4, 1, "", "configuration"], [3224, 4, 1, "", "defaults"], [3222, 3, 1, "", "defs_filename"], [3222, 3, 1, "", "dirname"], [3225, 4, 1, "", "name"], [3222, 3, 1, "", "options"], [3226, 4, 1, "", "properties"], [3222, 3, 1, "", "props_filename"], [3227, 4, 1, "", "provider"], [3228, 4, 1, "", "run"], [3229, 4, 1, "", "set_options"], [3230, 4, 1, "", "status"], [3222, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeJohannesburgV2": [[3232, 4, 1, "", "acquire_channel"], [3231, 3, 1, "", "backend_name"], [3231, 3, 1, "", "conf_filename"], [3233, 4, 1, "", "control_channel"], [3231, 3, 1, "", "coupling_map"], [3231, 3, 1, "", "defs_filename"], [3231, 3, 1, "", "dirname"], [3234, 4, 1, "", "drive_channel"], [3231, 3, 1, "", "dt"], [3231, 3, 1, "", "dtm"], [3231, 3, 1, "", "instruction_durations"], [3231, 3, 1, "", "instruction_schedule_map"], [3231, 3, 1, "", "instructions"], [3231, 3, 1, "", "max_circuits"], [3231, 3, 1, "", "meas_map"], [3235, 4, 1, "", "measure_channel"], [3231, 3, 1, "", "num_qubits"], [3231, 3, 1, "", "operation_names"], [3231, 3, 1, "", "operations"], [3231, 3, 1, "", "options"], [3231, 3, 1, "", "props_filename"], [3231, 3, 1, "", "provider"], [3236, 4, 1, "", "qubit_properties"], [3237, 4, 1, "", "run"], [3238, 4, 1, "", "set_options"], [3231, 3, 1, "", "target"], [3231, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeKolkata": [[3239, 3, 1, "", "backend_name"], [3239, 3, 1, "", "conf_filename"], [3240, 4, 1, "", "configuration"], [3241, 4, 1, "", "defaults"], [3239, 3, 1, "", "defs_filename"], [3239, 3, 1, "", "dirname"], [3242, 4, 1, "", "name"], [3239, 3, 1, "", "options"], [3243, 4, 1, "", "properties"], [3239, 3, 1, "", "props_filename"], [3244, 4, 1, "", "provider"], [3245, 4, 1, "", "run"], [3246, 4, 1, "", "set_options"], [3247, 4, 1, "", "status"], [3239, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeKolkataV2": [[3249, 4, 1, "", "acquire_channel"], [3248, 3, 1, "", "backend_name"], [3248, 3, 1, "", "conf_filename"], [3250, 4, 1, "", "control_channel"], [3248, 3, 1, "", "coupling_map"], [3248, 3, 1, "", "defs_filename"], [3248, 3, 1, "", "dirname"], [3251, 4, 1, "", "drive_channel"], [3248, 3, 1, "", "dt"], [3248, 3, 1, "", "dtm"], [3248, 3, 1, "", "instruction_durations"], [3248, 3, 1, "", "instruction_schedule_map"], [3248, 3, 1, "", "instructions"], [3248, 3, 1, "", "max_circuits"], [3248, 3, 1, "", "meas_map"], [3252, 4, 1, "", "measure_channel"], [3248, 3, 1, "", "num_qubits"], [3248, 3, 1, "", "operation_names"], [3248, 3, 1, "", "operations"], [3248, 3, 1, "", "options"], [3248, 3, 1, "", "props_filename"], [3248, 3, 1, "", "provider"], [3253, 4, 1, "", "qubit_properties"], [3254, 4, 1, "", "run"], [3255, 4, 1, "", "set_options"], [3248, 3, 1, "", "target"], [3248, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLagos": [[3256, 3, 1, "", "backend_name"], [3256, 3, 1, "", "conf_filename"], [3257, 4, 1, "", "configuration"], [3258, 4, 1, "", "defaults"], [3256, 3, 1, "", "defs_filename"], [3256, 3, 1, "", "dirname"], [3259, 4, 1, "", "name"], [3256, 3, 1, "", "options"], [3260, 4, 1, "", "properties"], [3256, 3, 1, "", "props_filename"], [3261, 4, 1, "", "provider"], [3262, 4, 1, "", "run"], [3263, 4, 1, "", "set_options"], [3264, 4, 1, "", "status"], [3256, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLagosV2": [[3266, 4, 1, "", "acquire_channel"], [3265, 3, 1, "", "backend_name"], [3265, 3, 1, "", "conf_filename"], [3267, 4, 1, "", "control_channel"], [3265, 3, 1, "", "coupling_map"], [3265, 3, 1, "", "defs_filename"], [3265, 3, 1, "", "dirname"], [3268, 4, 1, "", "drive_channel"], [3265, 3, 1, "", "dt"], [3265, 3, 1, "", "dtm"], [3265, 3, 1, "", "instruction_durations"], [3265, 3, 1, "", "instruction_schedule_map"], [3265, 3, 1, "", "instructions"], [3265, 3, 1, "", "max_circuits"], [3265, 3, 1, "", "meas_map"], [3269, 4, 1, "", "measure_channel"], [3265, 3, 1, "", "num_qubits"], [3265, 3, 1, "", "operation_names"], [3265, 3, 1, "", "operations"], [3265, 3, 1, "", "options"], [3265, 3, 1, "", "props_filename"], [3265, 3, 1, "", "provider"], [3270, 4, 1, "", "qubit_properties"], [3271, 4, 1, "", "run"], [3272, 4, 1, "", "set_options"], [3265, 3, 1, "", "target"], [3265, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLima": [[3273, 3, 1, "", "backend_name"], [3273, 3, 1, "", "conf_filename"], [3274, 4, 1, "", "configuration"], [3275, 4, 1, "", "defaults"], [3273, 3, 1, "", "defs_filename"], [3273, 3, 1, "", "dirname"], [3276, 4, 1, "", "name"], [3273, 3, 1, "", "options"], [3277, 4, 1, "", "properties"], [3273, 3, 1, "", "props_filename"], [3278, 4, 1, "", "provider"], [3279, 4, 1, "", "run"], [3280, 4, 1, "", "set_options"], [3281, 4, 1, "", "status"], [3273, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLimaV2": [[3283, 4, 1, "", "acquire_channel"], [3282, 3, 1, "", "backend_name"], [3282, 3, 1, "", "conf_filename"], [3284, 4, 1, "", "control_channel"], [3282, 3, 1, "", "coupling_map"], [3282, 3, 1, "", "defs_filename"], [3282, 3, 1, "", "dirname"], [3285, 4, 1, "", "drive_channel"], [3282, 3, 1, "", "dt"], [3282, 3, 1, "", "dtm"], [3282, 3, 1, "", "instruction_durations"], [3282, 3, 1, "", "instruction_schedule_map"], [3282, 3, 1, "", "instructions"], [3282, 3, 1, "", "max_circuits"], [3282, 3, 1, "", "meas_map"], [3286, 4, 1, "", "measure_channel"], [3282, 3, 1, "", "num_qubits"], [3282, 3, 1, "", "operation_names"], [3282, 3, 1, "", "operations"], [3282, 3, 1, "", "options"], [3282, 3, 1, "", "props_filename"], [3282, 3, 1, "", "provider"], [3287, 4, 1, "", "qubit_properties"], [3288, 4, 1, "", "run"], [3289, 4, 1, "", "set_options"], [3282, 3, 1, "", "target"], [3282, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLondon": [[3290, 3, 1, "", "backend_name"], [3290, 3, 1, "", "conf_filename"], [3291, 4, 1, "", "configuration"], [3290, 3, 1, "", "dirname"], [3292, 4, 1, "", "name"], [3290, 3, 1, "", "options"], [3293, 4, 1, "", "properties"], [3290, 3, 1, "", "props_filename"], [3294, 4, 1, "", "provider"], [3295, 4, 1, "", "run"], [3296, 4, 1, "", "set_options"], [3297, 4, 1, "", "status"], [3290, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeLondonV2": [[3299, 4, 1, "", "acquire_channel"], [3298, 3, 1, "", "backend_name"], [3298, 3, 1, "", "conf_filename"], [3300, 4, 1, "", "control_channel"], [3298, 3, 1, "", "coupling_map"], [3298, 3, 1, "", "defs_filename"], [3298, 3, 1, "", "dirname"], [3301, 4, 1, "", "drive_channel"], [3298, 3, 1, "", "dt"], [3298, 3, 1, "", "dtm"], [3298, 3, 1, "", "instruction_durations"], [3298, 3, 1, "", "instruction_schedule_map"], [3298, 3, 1, "", "instructions"], [3298, 3, 1, "", "max_circuits"], [3298, 3, 1, "", "meas_map"], [3302, 4, 1, "", "measure_channel"], [3298, 3, 1, "", "num_qubits"], [3298, 3, 1, "", "operation_names"], [3298, 3, 1, "", "operations"], [3298, 3, 1, "", "options"], [3298, 3, 1, "", "props_filename"], [3298, 3, 1, "", "provider"], [3303, 4, 1, "", "qubit_properties"], [3304, 4, 1, "", "run"], [3305, 4, 1, "", "set_options"], [3298, 3, 1, "", "target"], [3298, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeManhattan": [[3306, 3, 1, "", "backend_name"], [3306, 3, 1, "", "conf_filename"], [3307, 4, 1, "", "configuration"], [3308, 4, 1, "", "defaults"], [3306, 3, 1, "", "defs_filename"], [3306, 3, 1, "", "dirname"], [3309, 4, 1, "", "name"], [3306, 3, 1, "", "options"], [3310, 4, 1, "", "properties"], [3306, 3, 1, "", "props_filename"], [3311, 4, 1, "", "provider"], [3312, 4, 1, "", "run"], [3313, 4, 1, "", "set_options"], [3314, 4, 1, "", "status"], [3306, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeManhattanV2": [[3316, 4, 1, "", "acquire_channel"], [3315, 3, 1, "", "backend_name"], [3315, 3, 1, "", "conf_filename"], [3317, 4, 1, "", "control_channel"], [3315, 3, 1, "", "coupling_map"], [3315, 3, 1, "", "defs_filename"], [3315, 3, 1, "", "dirname"], [3318, 4, 1, "", "drive_channel"], [3315, 3, 1, "", "dt"], [3315, 3, 1, "", "dtm"], [3315, 3, 1, "", "instruction_durations"], [3315, 3, 1, "", "instruction_schedule_map"], [3315, 3, 1, "", "instructions"], [3315, 3, 1, "", "max_circuits"], [3315, 3, 1, "", "meas_map"], [3319, 4, 1, "", "measure_channel"], [3315, 3, 1, "", "num_qubits"], [3315, 3, 1, "", "operation_names"], [3315, 3, 1, "", "operations"], [3315, 3, 1, "", "options"], [3315, 3, 1, "", "props_filename"], [3315, 3, 1, "", "provider"], [3320, 4, 1, "", "qubit_properties"], [3321, 4, 1, "", "run"], [3322, 4, 1, "", "set_options"], [3315, 3, 1, "", "target"], [3315, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeManila": [[3323, 3, 1, "", "backend_name"], [3323, 3, 1, "", "conf_filename"], [3324, 4, 1, "", "configuration"], [3325, 4, 1, "", "defaults"], [3323, 3, 1, "", "defs_filename"], [3323, 3, 1, "", "dirname"], [3326, 4, 1, "", "name"], [3323, 3, 1, "", "options"], [3327, 4, 1, "", "properties"], [3323, 3, 1, "", "props_filename"], [3328, 4, 1, "", "provider"], [3329, 4, 1, "", "run"], [3330, 4, 1, "", "set_options"], [3331, 4, 1, "", "status"], [3323, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeManilaV2": [[3333, 4, 1, "", "acquire_channel"], [3332, 3, 1, "", "backend_name"], [3332, 3, 1, "", "conf_filename"], [3334, 4, 1, "", "control_channel"], [3332, 3, 1, "", "coupling_map"], [3332, 3, 1, "", "defs_filename"], [3332, 3, 1, "", "dirname"], [3335, 4, 1, "", "drive_channel"], [3332, 3, 1, "", "dt"], [3332, 3, 1, "", "dtm"], [3332, 3, 1, "", "instruction_durations"], [3332, 3, 1, "", "instruction_schedule_map"], [3332, 3, 1, "", "instructions"], [3332, 3, 1, "", "max_circuits"], [3332, 3, 1, "", "meas_map"], [3336, 4, 1, "", "measure_channel"], [3332, 3, 1, "", "num_qubits"], [3332, 3, 1, "", "operation_names"], [3332, 3, 1, "", "operations"], [3332, 3, 1, "", "options"], [3332, 3, 1, "", "props_filename"], [3332, 3, 1, "", "provider"], [3337, 4, 1, "", "qubit_properties"], [3338, 4, 1, "", "run"], [3339, 4, 1, "", "set_options"], [3332, 3, 1, "", "target"], [3332, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMelbourne": [[3341, 4, 1, "", "configuration"], [3342, 4, 1, "", "name"], [3340, 3, 1, "", "options"], [3343, 4, 1, "", "properties"], [3344, 4, 1, "", "provider"], [3345, 4, 1, "", "run"], [3346, 4, 1, "", "set_options"], [3347, 4, 1, "", "status"], [3340, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMelbourneV2": [[3349, 4, 1, "", "acquire_channel"], [3348, 3, 1, "", "backend_name"], [3348, 3, 1, "", "conf_filename"], [3350, 4, 1, "", "control_channel"], [3348, 3, 1, "", "coupling_map"], [3348, 3, 1, "", "defs_filename"], [3348, 3, 1, "", "dirname"], [3351, 4, 1, "", "drive_channel"], [3348, 3, 1, "", "dt"], [3348, 3, 1, "", "dtm"], [3348, 3, 1, "", "instruction_durations"], [3348, 3, 1, "", "instruction_schedule_map"], [3348, 3, 1, "", "instructions"], [3348, 3, 1, "", "max_circuits"], [3348, 3, 1, "", "meas_map"], [3352, 4, 1, "", "measure_channel"], [3348, 3, 1, "", "num_qubits"], [3348, 3, 1, "", "operation_names"], [3348, 3, 1, "", "operations"], [3348, 3, 1, "", "options"], [3348, 3, 1, "", "props_filename"], [3348, 3, 1, "", "provider"], [3353, 4, 1, "", "qubit_properties"], [3354, 4, 1, "", "run"], [3355, 4, 1, "", "set_options"], [3348, 3, 1, "", "target"], [3348, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMontreal": [[3356, 3, 1, "", "backend_name"], [3356, 3, 1, "", "conf_filename"], [3357, 4, 1, "", "configuration"], [3358, 4, 1, "", "defaults"], [3356, 3, 1, "", "defs_filename"], [3356, 3, 1, "", "dirname"], [3359, 4, 1, "", "name"], [3356, 3, 1, "", "options"], [3360, 4, 1, "", "properties"], [3356, 3, 1, "", "props_filename"], [3361, 4, 1, "", "provider"], [3362, 4, 1, "", "run"], [3363, 4, 1, "", "set_options"], [3364, 4, 1, "", "status"], [3356, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMontrealV2": [[3366, 4, 1, "", "acquire_channel"], [3365, 3, 1, "", "backend_name"], [3365, 3, 1, "", "conf_filename"], [3367, 4, 1, "", "control_channel"], [3365, 3, 1, "", "coupling_map"], [3365, 3, 1, "", "defs_filename"], [3365, 3, 1, "", "dirname"], [3368, 4, 1, "", "drive_channel"], [3365, 3, 1, "", "dt"], [3365, 3, 1, "", "dtm"], [3365, 3, 1, "", "instruction_durations"], [3365, 3, 1, "", "instruction_schedule_map"], [3365, 3, 1, "", "instructions"], [3365, 3, 1, "", "max_circuits"], [3365, 3, 1, "", "meas_map"], [3369, 4, 1, "", "measure_channel"], [3365, 3, 1, "", "num_qubits"], [3365, 3, 1, "", "operation_names"], [3365, 3, 1, "", "operations"], [3365, 3, 1, "", "options"], [3365, 3, 1, "", "props_filename"], [3365, 3, 1, "", "provider"], [3370, 4, 1, "", "qubit_properties"], [3371, 4, 1, "", "run"], [3372, 4, 1, "", "set_options"], [3365, 3, 1, "", "target"], [3365, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMumbai": [[3373, 3, 1, "", "backend_name"], [3373, 3, 1, "", "conf_filename"], [3374, 4, 1, "", "configuration"], [3375, 4, 1, "", "defaults"], [3373, 3, 1, "", "defs_filename"], [3373, 3, 1, "", "dirname"], [3376, 4, 1, "", "name"], [3373, 3, 1, "", "options"], [3377, 4, 1, "", "properties"], [3373, 3, 1, "", "props_filename"], [3378, 4, 1, "", "provider"], [3379, 4, 1, "", "run"], [3380, 4, 1, "", "set_options"], [3381, 4, 1, "", "status"], [3373, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMumbaiFractionalCX": [[3383, 4, 1, "", "acquire_channel"], [3384, 4, 1, "", "control_channel"], [3382, 3, 1, "", "coupling_map"], [3385, 4, 1, "", "drive_channel"], [3382, 3, 1, "", "dt"], [3382, 3, 1, "", "dtm"], [3382, 3, 1, "", "instruction_durations"], [3382, 3, 1, "", "instruction_schedule_map"], [3382, 3, 1, "", "instructions"], [3382, 3, 1, "", "max_circuits"], [3382, 3, 1, "", "meas_map"], [3386, 4, 1, "", "measure_channel"], [3382, 3, 1, "", "num_qubits"], [3382, 3, 1, "", "operation_names"], [3382, 3, 1, "", "operations"], [3382, 3, 1, "", "options"], [3382, 3, 1, "", "provider"], [3387, 4, 1, "", "qubit_properties"], [3388, 4, 1, "", "run"], [3389, 4, 1, "", "set_options"], [3382, 3, 1, "", "target"], [3382, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeMumbaiV2": [[3391, 4, 1, "", "acquire_channel"], [3390, 3, 1, "", "backend_name"], [3390, 3, 1, "", "conf_filename"], [3392, 4, 1, "", "control_channel"], [3390, 3, 1, "", "coupling_map"], [3390, 3, 1, "", "defs_filename"], [3390, 3, 1, "", "dirname"], [3393, 4, 1, "", "drive_channel"], [3390, 3, 1, "", "dt"], [3390, 3, 1, "", "dtm"], [3390, 3, 1, "", "instruction_durations"], [3390, 3, 1, "", "instruction_schedule_map"], [3390, 3, 1, "", "instructions"], [3390, 3, 1, "", "max_circuits"], [3390, 3, 1, "", "meas_map"], [3394, 4, 1, "", "measure_channel"], [3390, 3, 1, "", "num_qubits"], [3390, 3, 1, "", "operation_names"], [3390, 3, 1, "", "operations"], [3390, 3, 1, "", "options"], [3390, 3, 1, "", "props_filename"], [3390, 3, 1, "", "provider"], [3395, 4, 1, "", "qubit_properties"], [3396, 4, 1, "", "run"], [3397, 4, 1, "", "set_options"], [3390, 3, 1, "", "target"], [3390, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeNairobi": [[3398, 3, 1, "", "backend_name"], [3398, 3, 1, "", "conf_filename"], [3399, 4, 1, "", "configuration"], [3400, 4, 1, "", "defaults"], [3398, 3, 1, "", "defs_filename"], [3398, 3, 1, "", "dirname"], [3401, 4, 1, "", "name"], [3398, 3, 1, "", "options"], [3402, 4, 1, "", "properties"], [3398, 3, 1, "", "props_filename"], [3403, 4, 1, "", "provider"], [3404, 4, 1, "", "run"], [3405, 4, 1, "", "set_options"], [3406, 4, 1, "", "status"], [3398, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeNairobiV2": [[3408, 4, 1, "", "acquire_channel"], [3407, 3, 1, "", "backend_name"], [3407, 3, 1, "", "conf_filename"], [3409, 4, 1, "", "control_channel"], [3407, 3, 1, "", "coupling_map"], [3407, 3, 1, "", "defs_filename"], [3407, 3, 1, "", "dirname"], [3410, 4, 1, "", "drive_channel"], [3407, 3, 1, "", "dt"], [3407, 3, 1, "", "dtm"], [3407, 3, 1, "", "instruction_durations"], [3407, 3, 1, "", "instruction_schedule_map"], [3407, 3, 1, "", "instructions"], [3407, 3, 1, "", "max_circuits"], [3407, 3, 1, "", "meas_map"], [3411, 4, 1, "", "measure_channel"], [3407, 3, 1, "", "num_qubits"], [3407, 3, 1, "", "operation_names"], [3407, 3, 1, "", "operations"], [3407, 3, 1, "", "options"], [3407, 3, 1, "", "props_filename"], [3407, 3, 1, "", "provider"], [3412, 4, 1, "", "qubit_properties"], [3413, 4, 1, "", "run"], [3414, 4, 1, "", "set_options"], [3407, 3, 1, "", "target"], [3407, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeOpenPulse2Q": [[3416, 4, 1, "", "configuration"], [3417, 4, 1, "", "defaults"], [3418, 4, 1, "", "name"], [3415, 3, 1, "", "options"], [3419, 4, 1, "", "properties"], [3420, 4, 1, "", "provider"], [3421, 4, 1, "", "run"], [3422, 4, 1, "", "set_options"], [3423, 4, 1, "", "status"], [3415, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeOpenPulse3Q": [[3425, 4, 1, "", "configuration"], [3426, 4, 1, "", "defaults"], [3427, 4, 1, "", "name"], [3424, 3, 1, "", "options"], [3428, 4, 1, "", "properties"], [3429, 4, 1, "", "provider"], [3430, 4, 1, "", "run"], [3431, 4, 1, "", "set_options"], [3432, 4, 1, "", "status"], [3424, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeOurense": [[3433, 3, 1, "", "backend_name"], [3433, 3, 1, "", "conf_filename"], [3434, 4, 1, "", "configuration"], [3433, 3, 1, "", "dirname"], [3435, 4, 1, "", "name"], [3433, 3, 1, "", "options"], [3436, 4, 1, "", "properties"], [3433, 3, 1, "", "props_filename"], [3437, 4, 1, "", "provider"], [3438, 4, 1, "", "run"], [3439, 4, 1, "", "set_options"], [3440, 4, 1, "", "status"], [3433, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeOurenseV2": [[3442, 4, 1, "", "acquire_channel"], [3441, 3, 1, "", "backend_name"], [3441, 3, 1, "", "conf_filename"], [3443, 4, 1, "", "control_channel"], [3441, 3, 1, "", "coupling_map"], [3441, 3, 1, "", "defs_filename"], [3441, 3, 1, "", "dirname"], [3444, 4, 1, "", "drive_channel"], [3441, 3, 1, "", "dt"], [3441, 3, 1, "", "dtm"], [3441, 3, 1, "", "instruction_durations"], [3441, 3, 1, "", "instruction_schedule_map"], [3441, 3, 1, "", "instructions"], [3441, 3, 1, "", "max_circuits"], [3441, 3, 1, "", "meas_map"], [3445, 4, 1, "", "measure_channel"], [3441, 3, 1, "", "num_qubits"], [3441, 3, 1, "", "operation_names"], [3441, 3, 1, "", "operations"], [3441, 3, 1, "", "options"], [3441, 3, 1, "", "props_filename"], [3441, 3, 1, "", "provider"], [3446, 4, 1, "", "qubit_properties"], [3447, 4, 1, "", "run"], [3448, 4, 1, "", "set_options"], [3441, 3, 1, "", "target"], [3441, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeParis": [[3449, 3, 1, "", "backend_name"], [3449, 3, 1, "", "conf_filename"], [3450, 4, 1, "", "configuration"], [3451, 4, 1, "", "defaults"], [3449, 3, 1, "", "defs_filename"], [3449, 3, 1, "", "dirname"], [3452, 4, 1, "", "name"], [3449, 3, 1, "", "options"], [3453, 4, 1, "", "properties"], [3449, 3, 1, "", "props_filename"], [3454, 4, 1, "", "provider"], [3455, 4, 1, "", "run"], [3456, 4, 1, "", "set_options"], [3457, 4, 1, "", "status"], [3449, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeParisV2": [[3459, 4, 1, "", "acquire_channel"], [3458, 3, 1, "", "backend_name"], [3458, 3, 1, "", "conf_filename"], [3460, 4, 1, "", "control_channel"], [3458, 3, 1, "", "coupling_map"], [3458, 3, 1, "", "defs_filename"], [3458, 3, 1, "", "dirname"], [3461, 4, 1, "", "drive_channel"], [3458, 3, 1, "", "dt"], [3458, 3, 1, "", "dtm"], [3458, 3, 1, "", "instruction_durations"], [3458, 3, 1, "", "instruction_schedule_map"], [3458, 3, 1, "", "instructions"], [3458, 3, 1, "", "max_circuits"], [3458, 3, 1, "", "meas_map"], [3462, 4, 1, "", "measure_channel"], [3458, 3, 1, "", "num_qubits"], [3458, 3, 1, "", "operation_names"], [3458, 3, 1, "", "operations"], [3458, 3, 1, "", "options"], [3458, 3, 1, "", "props_filename"], [3458, 3, 1, "", "provider"], [3463, 4, 1, "", "qubit_properties"], [3464, 4, 1, "", "run"], [3465, 4, 1, "", "set_options"], [3458, 3, 1, "", "target"], [3458, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakePoughkeepsie": [[3467, 4, 1, "", "configuration"], [3468, 4, 1, "", "name"], [3466, 3, 1, "", "options"], [3469, 4, 1, "", "properties"], [3470, 4, 1, "", "provider"], [3471, 4, 1, "", "run"], [3472, 4, 1, "", "set_options"], [3473, 4, 1, "", "status"], [3466, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakePoughkeepsieV2": [[3475, 4, 1, "", "acquire_channel"], [3474, 3, 1, "", "backend_name"], [3474, 3, 1, "", "conf_filename"], [3476, 4, 1, "", "control_channel"], [3474, 3, 1, "", "coupling_map"], [3474, 3, 1, "", "defs_filename"], [3474, 3, 1, "", "dirname"], [3477, 4, 1, "", "drive_channel"], [3474, 3, 1, "", "dt"], [3474, 3, 1, "", "dtm"], [3474, 3, 1, "", "instruction_durations"], [3474, 3, 1, "", "instruction_schedule_map"], [3474, 3, 1, "", "instructions"], [3474, 3, 1, "", "max_circuits"], [3474, 3, 1, "", "meas_map"], [3478, 4, 1, "", "measure_channel"], [3474, 3, 1, "", "num_qubits"], [3474, 3, 1, "", "operation_names"], [3474, 3, 1, "", "operations"], [3474, 3, 1, "", "options"], [3474, 3, 1, "", "props_filename"], [3474, 3, 1, "", "provider"], [3479, 4, 1, "", "qubit_properties"], [3480, 4, 1, "", "run"], [3481, 4, 1, "", "set_options"], [3474, 3, 1, "", "target"], [3474, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeProvider": [[3483, 4, 1, "", "backends"], [3484, 4, 1, "", "get_backend"], [3482, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeProviderForBackendV2": [[3486, 4, 1, "", "backends"], [3487, 4, 1, "", "get_backend"], [3485, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeQasmSimulator": [[3489, 4, 1, "", "configuration"], [3490, 4, 1, "", "name"], [3488, 3, 1, "", "options"], [3491, 4, 1, "", "properties"], [3492, 4, 1, "", "provider"], [3493, 4, 1, "", "run"], [3494, 4, 1, "", "set_options"], [3495, 4, 1, "", "status"], [3488, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeQuito": [[3496, 3, 1, "", "backend_name"], [3496, 3, 1, "", "conf_filename"], [3497, 4, 1, "", "configuration"], [3498, 4, 1, "", "defaults"], [3496, 3, 1, "", "defs_filename"], [3496, 3, 1, "", "dirname"], [3499, 4, 1, "", "name"], [3496, 3, 1, "", "options"], [3500, 4, 1, "", "properties"], [3496, 3, 1, "", "props_filename"], [3501, 4, 1, "", "provider"], [3502, 4, 1, "", "run"], [3503, 4, 1, "", "set_options"], [3504, 4, 1, "", "status"], [3496, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeQuitoV2": [[3506, 4, 1, "", "acquire_channel"], [3505, 3, 1, "", "backend_name"], [3505, 3, 1, "", "conf_filename"], [3507, 4, 1, "", "control_channel"], [3505, 3, 1, "", "coupling_map"], [3505, 3, 1, "", "defs_filename"], [3505, 3, 1, "", "dirname"], [3508, 4, 1, "", "drive_channel"], [3505, 3, 1, "", "dt"], [3505, 3, 1, "", "dtm"], [3505, 3, 1, "", "instruction_durations"], [3505, 3, 1, "", "instruction_schedule_map"], [3505, 3, 1, "", "instructions"], [3505, 3, 1, "", "max_circuits"], [3505, 3, 1, "", "meas_map"], [3509, 4, 1, "", "measure_channel"], [3505, 3, 1, "", "num_qubits"], [3505, 3, 1, "", "operation_names"], [3505, 3, 1, "", "operations"], [3505, 3, 1, "", "options"], [3505, 3, 1, "", "props_filename"], [3505, 3, 1, "", "provider"], [3510, 4, 1, "", "qubit_properties"], [3511, 4, 1, "", "run"], [3512, 4, 1, "", "set_options"], [3505, 3, 1, "", "target"], [3505, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeRochester": [[3513, 3, 1, "", "backend_name"], [3513, 3, 1, "", "conf_filename"], [3514, 4, 1, "", "configuration"], [3513, 3, 1, "", "dirname"], [3515, 4, 1, "", "name"], [3513, 3, 1, "", "options"], [3516, 4, 1, "", "properties"], [3513, 3, 1, "", "props_filename"], [3517, 4, 1, "", "provider"], [3518, 4, 1, "", "run"], [3519, 4, 1, "", "set_options"], [3520, 4, 1, "", "status"], [3513, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeRochesterV2": [[3522, 4, 1, "", "acquire_channel"], [3521, 3, 1, "", "backend_name"], [3521, 3, 1, "", "conf_filename"], [3523, 4, 1, "", "control_channel"], [3521, 3, 1, "", "coupling_map"], [3521, 3, 1, "", "defs_filename"], [3521, 3, 1, "", "dirname"], [3524, 4, 1, "", "drive_channel"], [3521, 3, 1, "", "dt"], [3521, 3, 1, "", "dtm"], [3521, 3, 1, "", "instruction_durations"], [3521, 3, 1, "", "instruction_schedule_map"], [3521, 3, 1, "", "instructions"], [3521, 3, 1, "", "max_circuits"], [3521, 3, 1, "", "meas_map"], [3525, 4, 1, "", "measure_channel"], [3521, 3, 1, "", "num_qubits"], [3521, 3, 1, "", "operation_names"], [3521, 3, 1, "", "operations"], [3521, 3, 1, "", "options"], [3521, 3, 1, "", "props_filename"], [3521, 3, 1, "", "provider"], [3526, 4, 1, "", "qubit_properties"], [3527, 4, 1, "", "run"], [3528, 4, 1, "", "set_options"], [3521, 3, 1, "", "target"], [3521, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeRome": [[3529, 3, 1, "", "backend_name"], [3529, 3, 1, "", "conf_filename"], [3530, 4, 1, "", "configuration"], [3531, 4, 1, "", "defaults"], [3529, 3, 1, "", "defs_filename"], [3529, 3, 1, "", "dirname"], [3532, 4, 1, "", "name"], [3529, 3, 1, "", "options"], [3533, 4, 1, "", "properties"], [3529, 3, 1, "", "props_filename"], [3534, 4, 1, "", "provider"], [3535, 4, 1, "", "run"], [3536, 4, 1, "", "set_options"], [3537, 4, 1, "", "status"], [3529, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeRomeV2": [[3539, 4, 1, "", "acquire_channel"], [3538, 3, 1, "", "backend_name"], [3538, 3, 1, "", "conf_filename"], [3540, 4, 1, "", "control_channel"], [3538, 3, 1, "", "coupling_map"], [3538, 3, 1, "", "defs_filename"], [3538, 3, 1, "", "dirname"], [3541, 4, 1, "", "drive_channel"], [3538, 3, 1, "", "dt"], [3538, 3, 1, "", "dtm"], [3538, 3, 1, "", "instruction_durations"], [3538, 3, 1, "", "instruction_schedule_map"], [3538, 3, 1, "", "instructions"], [3538, 3, 1, "", "max_circuits"], [3538, 3, 1, "", "meas_map"], [3542, 4, 1, "", "measure_channel"], [3538, 3, 1, "", "num_qubits"], [3538, 3, 1, "", "operation_names"], [3538, 3, 1, "", "operations"], [3538, 3, 1, "", "options"], [3538, 3, 1, "", "props_filename"], [3538, 3, 1, "", "provider"], [3543, 4, 1, "", "qubit_properties"], [3544, 4, 1, "", "run"], [3545, 4, 1, "", "set_options"], [3538, 3, 1, "", "target"], [3538, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeRueschlikon": [[3547, 4, 1, "", "configuration"], [3548, 4, 1, "", "name"], [3546, 3, 1, "", "options"], [3549, 4, 1, "", "properties"], [3550, 4, 1, "", "provider"], [3551, 4, 1, "", "run"], [3552, 4, 1, "", "set_options"], [3553, 4, 1, "", "status"], [3546, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSantiago": [[3554, 3, 1, "", "backend_name"], [3554, 3, 1, "", "conf_filename"], [3555, 4, 1, "", "configuration"], [3556, 4, 1, "", "defaults"], [3554, 3, 1, "", "defs_filename"], [3554, 3, 1, "", "dirname"], [3557, 4, 1, "", "name"], [3554, 3, 1, "", "options"], [3558, 4, 1, "", "properties"], [3554, 3, 1, "", "props_filename"], [3559, 4, 1, "", "provider"], [3560, 4, 1, "", "run"], [3561, 4, 1, "", "set_options"], [3562, 4, 1, "", "status"], [3554, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSantiagoV2": [[3564, 4, 1, "", "acquire_channel"], [3563, 3, 1, "", "backend_name"], [3563, 3, 1, "", "conf_filename"], [3565, 4, 1, "", "control_channel"], [3563, 3, 1, "", "coupling_map"], [3563, 3, 1, "", "defs_filename"], [3563, 3, 1, "", "dirname"], [3566, 4, 1, "", "drive_channel"], [3563, 3, 1, "", "dt"], [3563, 3, 1, "", "dtm"], [3563, 3, 1, "", "instruction_durations"], [3563, 3, 1, "", "instruction_schedule_map"], [3563, 3, 1, "", "instructions"], [3563, 3, 1, "", "max_circuits"], [3563, 3, 1, "", "meas_map"], [3567, 4, 1, "", "measure_channel"], [3563, 3, 1, "", "num_qubits"], [3563, 3, 1, "", "operation_names"], [3563, 3, 1, "", "operations"], [3563, 3, 1, "", "options"], [3563, 3, 1, "", "props_filename"], [3563, 3, 1, "", "provider"], [3568, 4, 1, "", "qubit_properties"], [3569, 4, 1, "", "run"], [3570, 4, 1, "", "set_options"], [3563, 3, 1, "", "target"], [3563, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSingapore": [[3571, 3, 1, "", "backend_name"], [3571, 3, 1, "", "conf_filename"], [3572, 4, 1, "", "configuration"], [3573, 4, 1, "", "defaults"], [3571, 3, 1, "", "defs_filename"], [3571, 3, 1, "", "dirname"], [3574, 4, 1, "", "name"], [3571, 3, 1, "", "options"], [3575, 4, 1, "", "properties"], [3571, 3, 1, "", "props_filename"], [3576, 4, 1, "", "provider"], [3577, 4, 1, "", "run"], [3578, 4, 1, "", "set_options"], [3579, 4, 1, "", "status"], [3571, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSingaporeV2": [[3581, 4, 1, "", "acquire_channel"], [3580, 3, 1, "", "backend_name"], [3580, 3, 1, "", "conf_filename"], [3582, 4, 1, "", "control_channel"], [3580, 3, 1, "", "coupling_map"], [3580, 3, 1, "", "defs_filename"], [3580, 3, 1, "", "dirname"], [3583, 4, 1, "", "drive_channel"], [3580, 3, 1, "", "dt"], [3580, 3, 1, "", "dtm"], [3580, 3, 1, "", "instruction_durations"], [3580, 3, 1, "", "instruction_schedule_map"], [3580, 3, 1, "", "instructions"], [3580, 3, 1, "", "max_circuits"], [3580, 3, 1, "", "meas_map"], [3584, 4, 1, "", "measure_channel"], [3580, 3, 1, "", "num_qubits"], [3580, 3, 1, "", "operation_names"], [3580, 3, 1, "", "operations"], [3580, 3, 1, "", "options"], [3580, 3, 1, "", "props_filename"], [3580, 3, 1, "", "provider"], [3585, 4, 1, "", "qubit_properties"], [3586, 4, 1, "", "run"], [3587, 4, 1, "", "set_options"], [3580, 3, 1, "", "target"], [3580, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSydney": [[3588, 3, 1, "", "backend_name"], [3588, 3, 1, "", "conf_filename"], [3589, 4, 1, "", "configuration"], [3590, 4, 1, "", "defaults"], [3588, 3, 1, "", "defs_filename"], [3588, 3, 1, "", "dirname"], [3591, 4, 1, "", "name"], [3588, 3, 1, "", "options"], [3592, 4, 1, "", "properties"], [3588, 3, 1, "", "props_filename"], [3593, 4, 1, "", "provider"], [3594, 4, 1, "", "run"], [3595, 4, 1, "", "set_options"], [3596, 4, 1, "", "status"], [3588, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeSydneyV2": [[3598, 4, 1, "", "acquire_channel"], [3597, 3, 1, "", "backend_name"], [3597, 3, 1, "", "conf_filename"], [3599, 4, 1, "", "control_channel"], [3597, 3, 1, "", "coupling_map"], [3597, 3, 1, "", "defs_filename"], [3597, 3, 1, "", "dirname"], [3600, 4, 1, "", "drive_channel"], [3597, 3, 1, "", "dt"], [3597, 3, 1, "", "dtm"], [3597, 3, 1, "", "instruction_durations"], [3597, 3, 1, "", "instruction_schedule_map"], [3597, 3, 1, "", "instructions"], [3597, 3, 1, "", "max_circuits"], [3597, 3, 1, "", "meas_map"], [3601, 4, 1, "", "measure_channel"], [3597, 3, 1, "", "num_qubits"], [3597, 3, 1, "", "operation_names"], [3597, 3, 1, "", "operations"], [3597, 3, 1, "", "options"], [3597, 3, 1, "", "props_filename"], [3597, 3, 1, "", "provider"], [3602, 4, 1, "", "qubit_properties"], [3603, 4, 1, "", "run"], [3604, 4, 1, "", "set_options"], [3597, 3, 1, "", "target"], [3597, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeTenerife": [[3606, 4, 1, "", "configuration"], [3607, 4, 1, "", "name"], [3605, 3, 1, "", "options"], [3608, 4, 1, "", "properties"], [3609, 4, 1, "", "provider"], [3610, 4, 1, "", "run"], [3611, 4, 1, "", "set_options"], [3612, 4, 1, "", "status"], [3605, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeTokyo": [[3614, 4, 1, "", "configuration"], [3615, 4, 1, "", "name"], [3613, 3, 1, "", "options"], [3616, 4, 1, "", "properties"], [3617, 4, 1, "", "provider"], [3618, 4, 1, "", "run"], [3619, 4, 1, "", "set_options"], [3620, 4, 1, "", "status"], [3613, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeToronto": [[3621, 3, 1, "", "backend_name"], [3621, 3, 1, "", "conf_filename"], [3622, 4, 1, "", "configuration"], [3623, 4, 1, "", "defaults"], [3621, 3, 1, "", "defs_filename"], [3621, 3, 1, "", "dirname"], [3624, 4, 1, "", "name"], [3621, 3, 1, "", "options"], [3625, 4, 1, "", "properties"], [3621, 3, 1, "", "props_filename"], [3626, 4, 1, "", "provider"], [3627, 4, 1, "", "run"], [3628, 4, 1, "", "set_options"], [3629, 4, 1, "", "status"], [3621, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeTorontoV2": [[3631, 4, 1, "", "acquire_channel"], [3630, 3, 1, "", "backend_name"], [3630, 3, 1, "", "conf_filename"], [3632, 4, 1, "", "control_channel"], [3630, 3, 1, "", "coupling_map"], [3630, 3, 1, "", "defs_filename"], [3630, 3, 1, "", "dirname"], [3633, 4, 1, "", "drive_channel"], [3630, 3, 1, "", "dt"], [3630, 3, 1, "", "dtm"], [3630, 3, 1, "", "instruction_durations"], [3630, 3, 1, "", "instruction_schedule_map"], [3630, 3, 1, "", "instructions"], [3630, 3, 1, "", "max_circuits"], [3630, 3, 1, "", "meas_map"], [3634, 4, 1, "", "measure_channel"], [3630, 3, 1, "", "num_qubits"], [3630, 3, 1, "", "operation_names"], [3630, 3, 1, "", "operations"], [3630, 3, 1, "", "options"], [3630, 3, 1, "", "props_filename"], [3630, 3, 1, "", "provider"], [3635, 4, 1, "", "qubit_properties"], [3636, 4, 1, "", "run"], [3637, 4, 1, "", "set_options"], [3630, 3, 1, "", "target"], [3630, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeValencia": [[3638, 3, 1, "", "backend_name"], [3638, 3, 1, "", "conf_filename"], [3639, 4, 1, "", "configuration"], [3640, 4, 1, "", "defaults"], [3638, 3, 1, "", "defs_filename"], [3638, 3, 1, "", "dirname"], [3641, 4, 1, "", "name"], [3638, 3, 1, "", "options"], [3642, 4, 1, "", "properties"], [3638, 3, 1, "", "props_filename"], [3643, 4, 1, "", "provider"], [3644, 4, 1, "", "run"], [3645, 4, 1, "", "set_options"], [3646, 4, 1, "", "status"], [3638, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeValenciaV2": [[3648, 4, 1, "", "acquire_channel"], [3647, 3, 1, "", "backend_name"], [3647, 3, 1, "", "conf_filename"], [3649, 4, 1, "", "control_channel"], [3647, 3, 1, "", "coupling_map"], [3647, 3, 1, "", "defs_filename"], [3647, 3, 1, "", "dirname"], [3650, 4, 1, "", "drive_channel"], [3647, 3, 1, "", "dt"], [3647, 3, 1, "", "dtm"], [3647, 3, 1, "", "instruction_durations"], [3647, 3, 1, "", "instruction_schedule_map"], [3647, 3, 1, "", "instructions"], [3647, 3, 1, "", "max_circuits"], [3647, 3, 1, "", "meas_map"], [3651, 4, 1, "", "measure_channel"], [3647, 3, 1, "", "num_qubits"], [3647, 3, 1, "", "operation_names"], [3647, 3, 1, "", "operations"], [3647, 3, 1, "", "options"], [3647, 3, 1, "", "props_filename"], [3647, 3, 1, "", "provider"], [3652, 4, 1, "", "qubit_properties"], [3653, 4, 1, "", "run"], [3654, 4, 1, "", "set_options"], [3647, 3, 1, "", "target"], [3647, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeVigo": [[3655, 3, 1, "", "backend_name"], [3655, 3, 1, "", "conf_filename"], [3656, 4, 1, "", "configuration"], [3655, 3, 1, "", "dirname"], [3657, 4, 1, "", "name"], [3655, 3, 1, "", "options"], [3658, 4, 1, "", "properties"], [3655, 3, 1, "", "props_filename"], [3659, 4, 1, "", "provider"], [3660, 4, 1, "", "run"], [3661, 4, 1, "", "set_options"], [3662, 4, 1, "", "status"], [3655, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeVigoV2": [[3664, 4, 1, "", "acquire_channel"], [3663, 3, 1, "", "backend_name"], [3663, 3, 1, "", "conf_filename"], [3665, 4, 1, "", "control_channel"], [3663, 3, 1, "", "coupling_map"], [3663, 3, 1, "", "defs_filename"], [3663, 3, 1, "", "dirname"], [3666, 4, 1, "", "drive_channel"], [3663, 3, 1, "", "dt"], [3663, 3, 1, "", "dtm"], [3663, 3, 1, "", "instruction_durations"], [3663, 3, 1, "", "instruction_schedule_map"], [3663, 3, 1, "", "instructions"], [3663, 3, 1, "", "max_circuits"], [3663, 3, 1, "", "meas_map"], [3667, 4, 1, "", "measure_channel"], [3663, 3, 1, "", "num_qubits"], [3663, 3, 1, "", "operation_names"], [3663, 3, 1, "", "operations"], [3663, 3, 1, "", "options"], [3663, 3, 1, "", "props_filename"], [3663, 3, 1, "", "provider"], [3668, 4, 1, "", "qubit_properties"], [3669, 4, 1, "", "run"], [3670, 4, 1, "", "set_options"], [3663, 3, 1, "", "target"], [3663, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeWashington": [[3671, 3, 1, "", "backend_name"], [3671, 3, 1, "", "conf_filename"], [3672, 4, 1, "", "configuration"], [3673, 4, 1, "", "defaults"], [3671, 3, 1, "", "defs_filename"], [3671, 3, 1, "", "dirname"], [3674, 4, 1, "", "name"], [3671, 3, 1, "", "options"], [3675, 4, 1, "", "properties"], [3671, 3, 1, "", "props_filename"], [3676, 4, 1, "", "provider"], [3677, 4, 1, "", "run"], [3678, 4, 1, "", "set_options"], [3679, 4, 1, "", "status"], [3671, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeWashingtonV2": [[3681, 4, 1, "", "acquire_channel"], [3680, 3, 1, "", "backend_name"], [3680, 3, 1, "", "conf_filename"], [3682, 4, 1, "", "control_channel"], [3680, 3, 1, "", "coupling_map"], [3680, 3, 1, "", "defs_filename"], [3680, 3, 1, "", "dirname"], [3683, 4, 1, "", "drive_channel"], [3680, 3, 1, "", "dt"], [3680, 3, 1, "", "dtm"], [3680, 3, 1, "", "instruction_durations"], [3680, 3, 1, "", "instruction_schedule_map"], [3680, 3, 1, "", "instructions"], [3680, 3, 1, "", "max_circuits"], [3680, 3, 1, "", "meas_map"], [3684, 4, 1, "", "measure_channel"], [3680, 3, 1, "", "num_qubits"], [3680, 3, 1, "", "operation_names"], [3680, 3, 1, "", "operations"], [3680, 3, 1, "", "options"], [3680, 3, 1, "", "props_filename"], [3680, 3, 1, "", "provider"], [3685, 4, 1, "", "qubit_properties"], [3686, 4, 1, "", "run"], [3687, 4, 1, "", "set_options"], [3680, 3, 1, "", "target"], [3680, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeYorktown": [[3688, 3, 1, "", "backend_name"], [3688, 3, 1, "", "conf_filename"], [3689, 4, 1, "", "configuration"], [3688, 3, 1, "", "dirname"], [3690, 4, 1, "", "name"], [3688, 3, 1, "", "options"], [3691, 4, 1, "", "properties"], [3688, 3, 1, "", "props_filename"], [3692, 4, 1, "", "provider"], [3693, 4, 1, "", "run"], [3694, 4, 1, "", "set_options"], [3695, 4, 1, "", "status"], [3688, 3, 1, "", "version"]], "qiskit.providers.fake_provider.FakeYorktownV2": [[3697, 4, 1, "", "acquire_channel"], [3696, 3, 1, "", "backend_name"], [3696, 3, 1, "", "conf_filename"], [3698, 4, 1, "", "control_channel"], [3696, 3, 1, "", "coupling_map"], [3696, 3, 1, "", "defs_filename"], [3696, 3, 1, "", "dirname"], [3699, 4, 1, "", "drive_channel"], [3696, 3, 1, "", "dt"], [3696, 3, 1, "", "dtm"], [3696, 3, 1, "", "instruction_durations"], [3696, 3, 1, "", "instruction_schedule_map"], [3696, 3, 1, "", "instructions"], [3696, 3, 1, "", "max_circuits"], [3696, 3, 1, "", "meas_map"], [3700, 4, 1, "", "measure_channel"], [3696, 3, 1, "", "num_qubits"], [3696, 3, 1, "", "operation_names"], [3696, 3, 1, "", "operations"], [3696, 3, 1, "", "options"], [3696, 3, 1, "", "props_filename"], [3696, 3, 1, "", "provider"], [3701, 4, 1, "", "qubit_properties"], [3702, 4, 1, "", "run"], [3703, 4, 1, "", "set_options"], [3696, 3, 1, "", "target"], [3696, 3, 1, "", "version"]], "qiskit.providers.ibmq": [[3704, 2, 1, "", "AccountProvider"], [3711, 2, 1, "", "BackendJobLimit"], [3712, 1, 1, "", "IBMQAccountCredentialsInvalidFormat"], [3713, 1, 1, "", "IBMQAccountCredentialsInvalidToken"], [3714, 1, 1, "", "IBMQAccountCredentialsInvalidUrl"], [3715, 1, 1, "", "IBMQAccountCredentialsNotFound"], [3716, 1, 1, "", "IBMQAccountError"], [3717, 1, 1, "", "IBMQAccountMultipleCredentialsFound"], [3718, 2, 1, "", "IBMQBackend"], [3733, 1, 1, "", "IBMQBackendApiError"], [3734, 1, 1, "", "IBMQBackendApiProtocolError"], [3735, 1, 1, "", "IBMQBackendError"], [3736, 2, 1, "", "IBMQBackendService"], [3742, 1, 1, "", "IBMQBackendValueError"], [3743, 1, 1, "", "IBMQError"], [3744, 2, 1, "", "IBMQFactory"], [3755, 1, 1, "", "IBMQProviderError"], [3756, 2, 1, "", "RunnerResult"], [19, 0, 0, "-", "credentials"], [20, 0, 0, "-", "experiment"], [21, 0, 0, "-", "job"], [3833, 5, 1, "", "least_busy"], [23, 0, 0, "-", "managed"], [25, 0, 0, "-", "runtime"], [26, 0, 0, "-", "utils"]], "qiskit.providers.ibmq.AccountProvider": [[3704, 3, 1, "", "backend"], [3705, 4, 1, "", "backends"], [3704, 3, 1, "", "experiment"], [3706, 4, 1, "", "get_backend"], [3707, 4, 1, "", "has_service"], [3708, 4, 1, "", "run_circuits"], [3704, 3, 1, "", "runtime"], [3709, 4, 1, "", "service"], [3710, 4, 1, "", "services"], [3704, 3, 1, "", "version"]], "qiskit.providers.ibmq.BackendJobLimit": [[3711, 3, 1, "", "maximum_jobs"], [3711, 3, 1, "", "running_jobs"]], "qiskit.providers.ibmq.IBMQBackend": [[3719, 4, 1, "", "active_jobs"], [3720, 4, 1, "", "configuration"], [3721, 4, 1, "", "defaults"], [3718, 3, 1, "", "id_warning_issued"], [3722, 4, 1, "", "job_limit"], [3723, 4, 1, "", "jobs"], [3724, 4, 1, "", "name"], [3718, 3, 1, "", "options"], [3725, 4, 1, "", "properties"], [3726, 4, 1, "", "provider"], [3718, 3, 1, "", "qobj_warning_issued"], [3727, 4, 1, "", "remaining_jobs_count"], [3728, 4, 1, "", "reservations"], [3729, 4, 1, "", "retrieve_job"], [3730, 4, 1, "", "run"], [3731, 4, 1, "", "set_options"], [3732, 4, 1, "", "status"], [3718, 3, 1, "", "version"]], "qiskit.providers.ibmq.IBMQBackendService": [[3737, 4, 1, "", "backends"], [3738, 4, 1, "", "job_ids"], [3739, 4, 1, "", "jobs"], [3740, 4, 1, "", "my_reservations"], [3741, 4, 1, "", "retrieve_job"]], "qiskit.providers.ibmq.IBMQFactory": [[3745, 4, 1, "", "active_account"], [3746, 4, 1, "", "delete_account"], [3747, 4, 1, "", "disable_account"], [3748, 4, 1, "", "enable_account"], [3749, 4, 1, "", "get_provider"], [3750, 4, 1, "", "load_account"], [3751, 4, 1, "", "providers"], [3752, 4, 1, "", "save_account"], [3753, 4, 1, "", "stored_account"], [3754, 4, 1, "", "update_account"]], "qiskit.providers.ibmq.RunnerResult": [[3757, 4, 1, "", "data"], [3758, 4, 1, "", "decode"], [3759, 4, 1, "", "from_dict"], [3760, 4, 1, "", "get_counts"], [3761, 4, 1, "", "get_memory"], [3762, 4, 1, "", "get_quasiprobabilities"], [3763, 4, 1, "", "get_statevector"], [3764, 4, 1, "", "get_unitary"], [3765, 4, 1, "", "to_dict"]], "qiskit.providers.ibmq.credentials": [[3766, 2, 1, "", "Credentials"], [3770, 1, 1, "", "CredentialsError"], [3771, 1, 1, "", "CredentialsNotFoundError"], [3772, 1, 1, "", "InvalidCredentialsFormatError"]], "qiskit.providers.ibmq.credentials.Credentials": [[3767, 4, 1, "", "connection_parameters"], [3768, 4, 1, "", "is_ibmq"], [3769, 4, 1, "", "unique_id"]], "qiskit.providers.ibmq.experiment": [[3773, 2, 1, "", "DeviceComponent"], [3774, 1, 1, "", "IBMExperimentEntryExists"], [3775, 1, 1, "", "IBMExperimentEntryNotFound"], [3776, 1, 1, "", "IBMExperimentError"], [3777, 2, 1, "", "IBMExperimentService"], [3795, 2, 1, "", "ResultQuality"]], "qiskit.providers.ibmq.experiment.IBMExperimentService": [[3778, 4, 1, "", "analysis_result"], [3779, 4, 1, "", "analysis_results"], [3780, 4, 1, "", "backends"], [3781, 4, 1, "", "create_analysis_result"], [3782, 4, 1, "", "create_experiment"], [3783, 4, 1, "", "create_figure"], [3784, 4, 1, "", "delete_analysis_result"], [3785, 4, 1, "", "delete_experiment"], [3786, 4, 1, "", "delete_figure"], [3787, 4, 1, "", "device_components"], [3788, 4, 1, "", "experiment"], [3789, 4, 1, "", "experiments"], [3790, 4, 1, "", "figure"], [3777, 3, 1, "", "preferences"], [3791, 4, 1, "", "save_preferences"], [3792, 4, 1, "", "update_analysis_result"], [3793, 4, 1, "", "update_experiment"], [3794, 4, 1, "", "update_figure"]], "qiskit.providers.ibmq.experiment.ResultQuality": [[3795, 3, 1, "", "BAD"], [3795, 3, 1, "", "GOOD"], [3795, 3, 1, "", "UNKNOWN"]], "qiskit.providers.ibmq.job": [[3796, 2, 1, "", "IBMQJob"], [3825, 1, 1, "", "IBMQJobApiError"], [3826, 1, 1, "", "IBMQJobError"], [3827, 1, 1, "", "IBMQJobFailureError"], [3828, 1, 1, "", "IBMQJobInvalidStateError"], [3829, 1, 1, "", "IBMQJobTimeoutError"], [3830, 2, 1, "", "QueueInfo"], [3832, 5, 1, "", "job_monitor"]], "qiskit.providers.ibmq.job.IBMQJob": [[3797, 4, 1, "", "backend"], [3798, 4, 1, "", "backend_options"], [3799, 4, 1, "", "cancel"], [3800, 4, 1, "", "cancelled"], [3801, 4, 1, "", "circuits"], [3796, 3, 1, "", "client_version"], [3802, 4, 1, "", "creation_date"], [3803, 4, 1, "", "done"], [3804, 4, 1, "", "error_message"], [3796, 3, 1, "", "experiment_id"], [3805, 4, 1, "", "header"], [3806, 4, 1, "", "in_final_state"], [3807, 4, 1, "", "job_id"], [3808, 4, 1, "", "name"], [3809, 4, 1, "", "properties"], [3810, 4, 1, "", "qobj"], [3811, 4, 1, "", "queue_info"], [3812, 4, 1, "", "queue_position"], [3813, 4, 1, "", "refresh"], [3814, 4, 1, "", "result"], [3815, 4, 1, "", "running"], [3816, 4, 1, "", "scheduling_mode"], [3817, 4, 1, "", "share_level"], [3818, 4, 1, "", "status"], [3819, 4, 1, "", "submit"], [3820, 4, 1, "", "tags"], [3821, 4, 1, "", "time_per_step"], [3822, 4, 1, "", "update_name"], [3823, 4, 1, "", "update_tags"], [3796, 3, 1, "", "version"], [3824, 4, 1, "", "wait_for_final_state"]], "qiskit.providers.ibmq.job.QueueInfo": [[3830, 3, 1, "", "estimated_complete_time"], [3830, 3, 1, "", "estimated_start_time"], [3831, 4, 1, "", "format"]], "qiskit.providers.ibmq.managed": [[3834, 2, 1, "", "IBMQJobManager"], [3839, 1, 1, "", "IBMQJobManagerError"], [3840, 1, 1, "", "IBMQJobManagerInvalidStateError"], [3841, 1, 1, "", "IBMQJobManagerJobNotFound"], [3842, 1, 1, "", "IBMQJobManagerTimeoutError"], [3843, 1, 1, "", "IBMQJobManagerUnknownJobSet"], [3844, 1, 1, "", "IBMQManagedResultDataNotAvailable"], [3845, 2, 1, "", "ManagedJob"], [3852, 2, 1, "", "ManagedJobSet"], [3869, 2, 1, "", "ManagedResults"]], "qiskit.providers.ibmq.managed.IBMQJobManager": [[3835, 4, 1, "", "job_sets"], [3836, 4, 1, "", "report"], [3837, 4, 1, "", "retrieve_job_set"], [3838, 4, 1, "", "run"]], "qiskit.providers.ibmq.managed.ManagedJob": [[3846, 4, 1, "", "cancel"], [3847, 4, 1, "", "error_message"], [3848, 4, 1, "", "qobj"], [3849, 4, 1, "", "result"], [3850, 4, 1, "", "status"], [3851, 4, 1, "", "submit"]], "qiskit.providers.ibmq.managed.ManagedJobSet": [[3853, 4, 1, "", "cancel"], [3854, 4, 1, "", "error_messages"], [3855, 4, 1, "", "job"], [3856, 4, 1, "", "job_set_id"], [3857, 4, 1, "", "jobs"], [3858, 4, 1, "", "managed_jobs"], [3859, 4, 1, "", "name"], [3860, 4, 1, "", "qobjs"], [3861, 4, 1, "", "report"], [3862, 4, 1, "", "results"], [3863, 4, 1, "", "retrieve_jobs"], [3864, 4, 1, "", "run"], [3865, 4, 1, "", "statuses"], [3866, 4, 1, "", "tags"], [3867, 4, 1, "", "update_name"], [3868, 4, 1, "", "update_tags"]], "qiskit.providers.ibmq.managed.ManagedResults": [[3869, 3, 1, "", "backend_name"], [3870, 4, 1, "", "combine_results"], [3871, 4, 1, "", "data"], [3872, 4, 1, "", "get_counts"], [3873, 4, 1, "", "get_memory"], [3874, 4, 1, "", "get_statevector"], [3875, 4, 1, "", "get_unitary"], [3869, 3, 1, "", "success"]], "qiskit.providers.ibmq.runtime": [[3876, 2, 1, "", "IBMRuntimeService"], [3889, 2, 1, "", "ParameterNamespace"], [3891, 2, 1, "", "ProgramBackend"], [3899, 2, 1, "", "ResultDecoder"], [3901, 2, 1, "", "RuntimeDecoder"], [3905, 2, 1, "", "RuntimeEncoder"], [3909, 2, 1, "", "RuntimeJob"], [3920, 2, 1, "", "RuntimeOptions"], [3922, 2, 1, "", "RuntimeProgram"], [3925, 2, 1, "", "UserMessenger"]], "qiskit.providers.ibmq.runtime.IBMRuntimeService": [[3877, 4, 1, "", "delete_job"], [3878, 4, 1, "", "delete_program"], [3879, 4, 1, "", "job"], [3880, 4, 1, "", "jobs"], [3881, 4, 1, "", "logout"], [3882, 4, 1, "", "pprint_programs"], [3883, 4, 1, "", "program"], [3884, 4, 1, "", "programs"], [3885, 4, 1, "", "run"], [3886, 4, 1, "", "set_program_visibility"], [3887, 4, 1, "", "update_program"], [3888, 4, 1, "", "upload_program"]], "qiskit.providers.ibmq.runtime.ParameterNamespace": [[3889, 3, 1, "", "metadata"], [3890, 4, 1, "", "validate"]], "qiskit.providers.ibmq.runtime.ProgramBackend": [[3891, 4, 1, "", "_default_options"], [3892, 4, 1, "", "configuration"], [3893, 4, 1, "", "name"], [3891, 3, 1, "", "options"], [3894, 4, 1, "", "properties"], [3895, 4, 1, "", "provider"], [3896, 4, 1, "", "run"], [3897, 4, 1, "", "set_options"], [3898, 4, 1, "", "status"], [3891, 3, 1, "", "version"]], "qiskit.providers.ibmq.runtime.ResultDecoder": [[3900, 4, 1, "", "decode"]], "qiskit.providers.ibmq.runtime.RuntimeDecoder": [[3902, 4, 1, "", "decode"], [3903, 4, 1, "", "object_hook"], [3904, 4, 1, "", "raw_decode"]], "qiskit.providers.ibmq.runtime.RuntimeEncoder": [[3906, 4, 1, "", "default"], [3907, 4, 1, "", "encode"], [3905, 3, 1, "", "item_separator"], [3908, 4, 1, "", "iterencode"], [3905, 3, 1, "", "key_separator"]], "qiskit.providers.ibmq.runtime.RuntimeJob": [[3910, 4, 1, "", "backend"], [3911, 4, 1, "", "cancel"], [3912, 4, 1, "", "cancel_result_streaming"], [3909, 3, 1, "", "creation_date"], [3913, 4, 1, "", "error_message"], [3909, 3, 1, "", "image"], [3909, 3, 1, "", "inputs"], [3914, 4, 1, "", "job_id"], [3915, 4, 1, "", "logs"], [3909, 3, 1, "", "program_id"], [3916, 4, 1, "", "result"], [3917, 4, 1, "", "status"], [3918, 4, 1, "", "stream_results"], [3919, 4, 1, "", "wait_for_final_state"]], "qiskit.providers.ibmq.runtime.RuntimeOptions": [[3920, 3, 1, "", "backend_name"], [3920, 3, 1, "", "image"], [3920, 3, 1, "", "log_level"], [3921, 4, 1, "", "validate"]], "qiskit.providers.ibmq.runtime.RuntimeProgram": [[3922, 3, 1, "", "backend_requirements"], [3922, 3, 1, "", "creation_date"], [3922, 3, 1, "", "data"], [3922, 3, 1, "", "description"], [3922, 3, 1, "", "interim_results"], [3922, 3, 1, "", "is_public"], [3922, 3, 1, "", "max_execution_time"], [3922, 3, 1, "", "name"], [3923, 4, 1, "", "parameters"], [3922, 3, 1, "", "program_id"], [3922, 3, 1, "", "return_values"], [3924, 4, 1, "", "to_dict"], [3922, 3, 1, "", "update_date"]], "qiskit.providers.ibmq.runtime.UserMessenger": [[3926, 4, 1, "", "publish"]], "qiskit.providers.ibmq.utils": [[3927, 5, 1, "", "seconds_to_duration"], [3928, 5, 1, "", "to_python_identifier"], [3929, 5, 1, "", "update_qobj_config"], [3930, 5, 1, "", "utc_to_local"], [3931, 5, 1, "", "validate_job_tags"]], "qiskit.providers.models": [[3932, 2, 1, "", "BackendConfiguration"], [3935, 2, 1, "", "BackendProperties"], [3951, 2, 1, "", "BackendStatus"], [3954, 2, 1, "", "Command"], [3957, 2, 1, "", "GateConfig"], [3960, 2, 1, "", "JobStatus"], [3963, 2, 1, "", "PulseBackendConfiguration"], [3973, 2, 1, "", "PulseDefaults"], [3976, 2, 1, "", "QasmBackendConfiguration"], [3979, 2, 1, "", "UchannelLO"]], "qiskit.providers.models.BackendConfiguration": [[3933, 4, 1, "", "from_dict"], [3932, 3, 1, "", "num_qubits"], [3934, 4, 1, "", "to_dict"]], "qiskit.providers.models.BackendProperties": [[3936, 4, 1, "", "faulty_gates"], [3937, 4, 1, "", "faulty_qubits"], [3938, 4, 1, "", "frequency"], [3939, 4, 1, "", "from_dict"], [3940, 4, 1, "", "gate_error"], [3941, 4, 1, "", "gate_length"], [3942, 4, 1, "", "gate_property"], [3943, 4, 1, "", "is_gate_operational"], [3944, 4, 1, "", "is_qubit_operational"], [3945, 4, 1, "", "qubit_property"], [3946, 4, 1, "", "readout_error"], [3947, 4, 1, "", "readout_length"], [3948, 4, 1, "", "t1"], [3949, 4, 1, "", "t2"], [3950, 4, 1, "", "to_dict"]], "qiskit.providers.models.BackendStatus": [[3952, 4, 1, "", "from_dict"], [3953, 4, 1, "", "to_dict"]], "qiskit.providers.models.Command": [[3955, 4, 1, "", "from_dict"], [3954, 3, 1, "", "name"], [3956, 4, 1, "", "to_dict"]], "qiskit.providers.models.GateConfig": [[3958, 4, 1, "", "from_dict"], [3957, 3, 1, "", "name"], [3957, 3, 1, "", "parameters"], [3957, 3, 1, "", "qasm_def"], [3959, 4, 1, "", "to_dict"]], "qiskit.providers.models.JobStatus": [[3961, 4, 1, "", "from_dict"], [3960, 3, 1, "", "job_id"], [3960, 3, 1, "", "status"], [3960, 3, 1, "", "status_msg"], [3962, 4, 1, "", "to_dict"]], "qiskit.providers.models.PulseBackendConfiguration": [[3964, 4, 1, "", "acquire"], [3965, 4, 1, "", "control"], [3963, 3, 1, "", "control_channels"], [3966, 4, 1, "", "describe"], [3967, 4, 1, "", "drive"], [3968, 4, 1, "", "from_dict"], [3969, 4, 1, "", "get_channel_qubits"], [3970, 4, 1, "", "get_qubit_channels"], [3971, 4, 1, "", "measure"], [3963, 3, 1, "", "num_qubits"], [3963, 3, 1, "", "sample_rate"], [3972, 4, 1, "", "to_dict"]], "qiskit.providers.models.PulseDefaults": [[3974, 4, 1, "", "from_dict"], [3973, 3, 1, "", "meas_freq_est"], [3973, 3, 1, "", "qubit_freq_est"], [3975, 4, 1, "", "to_dict"]], "qiskit.providers.models.QasmBackendConfiguration": [[3976, 3, 1, "", "backend_name"], [3976, 3, 1, "", "backend_version"], [3976, 3, 1, "", "basis_gates"], [3976, 3, 1, "", "conditional"], [3977, 4, 1, "", "from_dict"], [3976, 3, 1, "", "gates"], [3976, 3, 1, "", "local"], [3976, 3, 1, "", "max_shots"], [3976, 3, 1, "", "memory"], [3976, 3, 1, "", "n_qubits"], [3976, 3, 1, "", "num_qubits"], [3976, 3, 1, "", "open_pulse"], [3976, 3, 1, "", "simulator"], [3978, 4, 1, "", "to_dict"]], "qiskit.providers.models.UchannelLO": [[3980, 4, 1, "", "from_dict"], [3979, 3, 1, "", "q"], [3979, 3, 1, "", "scale"], [3981, 4, 1, "", "to_dict"]], "qiskit.pulse": [[3982, 2, 1, "", "InstructionScheduleMap"], [35, 2, 1, "", "PulseError"], [3993, 2, 1, "", "Schedule"], [4008, 2, 1, "", "ScheduleBlock"], [35, 0, 0, "-", "builder"], [35, 0, 0, "-", "channels"], [35, 0, 0, "-", "instructions"], [35, 0, 0, "-", "library"], [35, 0, 0, "-", "schedule"], [35, 0, 0, "-", "transforms"]], "qiskit.pulse.InstructionScheduleMap": [[3983, 4, 1, "", "add"], [3984, 4, 1, "", "assert_has"], [3985, 4, 1, "", "get"], [3986, 4, 1, "", "get_parameters"], [3987, 4, 1, "", "has"], [3988, 4, 1, "", "has_custom_gate"], [3982, 3, 1, "", "instructions"], [3989, 4, 1, "", "pop"], [3990, 4, 1, "", "qubit_instructions"], [3991, 4, 1, "", "qubits_with_instruction"], [3992, 4, 1, "", "remove"]], "qiskit.pulse.Schedule": [[3994, 4, 1, "", "append"], [3995, 4, 1, "", "assign_parameters"], [3996, 4, 1, "", "ch_duration"], [3997, 4, 1, "", "ch_start_time"], [3998, 4, 1, "", "ch_stop_time"], [3993, 3, 1, "", "channels"], [3993, 3, 1, "", "children"], [3999, 4, 1, "", "draw"], [3993, 3, 1, "", "duration"], [4000, 4, 1, "", "exclude"], [4001, 4, 1, "", "filter"], [4002, 4, 1, "", "get_parameters"], [4003, 4, 1, "", "initialize_from"], [4004, 4, 1, "", "insert"], [3993, 3, 1, "", "instances_counter"], [3993, 3, 1, "", "instructions"], [4005, 4, 1, "", "is_parameterized"], [3993, 3, 1, "", "metadata"], [3993, 3, 1, "", "name"], [3993, 3, 1, "", "parameters"], [3993, 3, 1, "", "prefix"], [4006, 4, 1, "", "replace"], [4007, 4, 1, "", "shift"], [3993, 3, 1, "", "start_time"], [3993, 3, 1, "", "stop_time"], [3993, 3, 1, "", "timeslots"]], "qiskit.pulse.ScheduleBlock": [[4008, 3, 1, "", "alignment_context"], [4009, 4, 1, "", "append"], [4010, 4, 1, "", "assign_parameters"], [4008, 3, 1, "", "blocks"], [4011, 4, 1, "", "ch_duration"], [4008, 3, 1, "", "channels"], [4012, 4, 1, "", "draw"], [4008, 3, 1, "", "duration"], [4013, 4, 1, "", "exclude"], [4014, 4, 1, "", "filter"], [4015, 4, 1, "", "get_parameters"], [4016, 4, 1, "", "initialize_from"], [4008, 3, 1, "", "instances_counter"], [4008, 3, 1, "", "instructions"], [4017, 4, 1, "", "is_parameterized"], [4018, 4, 1, "", "is_schedulable"], [4008, 3, 1, "", "metadata"], [4008, 3, 1, "", "name"], [4008, 3, 1, "", "parameters"], [4008, 3, 1, "", "prefix"], [4019, 4, 1, "", "replace"]], "qiskit.pulse.builder": [[4020, 5, 1, "", "acquire"], [4021, 5, 1, "", "acquire_channel"], [4022, 5, 1, "", "active_backend"], [4023, 5, 1, "", "active_circuit_scheduler_settings"], [4024, 5, 1, "", "active_transpiler_settings"], [4025, 5, 1, "", "align_equispaced"], [4026, 5, 1, "", "align_func"], [4027, 5, 1, "", "align_left"], [4028, 5, 1, "", "align_right"], [4029, 5, 1, "", "align_sequential"], [4030, 5, 1, "", "barrier"], [4031, 5, 1, "", "build"], [4032, 5, 1, "", "call"], [4033, 5, 1, "", "circuit_scheduler_settings"], [4034, 5, 1, "", "control_channels"], [4035, 5, 1, "", "cx"], [4036, 5, 1, "", "delay"], [4037, 5, 1, "", "delay_qubits"], [4038, 5, 1, "", "drive_channel"], [4039, 5, 1, "", "frequency_offset"], [4040, 5, 1, "", "inline"], [4041, 5, 1, "", "measure"], [4042, 5, 1, "", "measure_all"], [4043, 5, 1, "", "measure_channel"], [4044, 5, 1, "", "num_qubits"], [4045, 5, 1, "", "pad"], [4046, 5, 1, "", "phase_offset"], [4047, 5, 1, "", "play"], [4048, 5, 1, "", "qubit_channels"], [4049, 5, 1, "", "samples_to_seconds"], [4050, 5, 1, "", "seconds_to_samples"], [4051, 5, 1, "", "set_frequency"], [4052, 5, 1, "", "set_phase"], [4053, 5, 1, "", "shift_frequency"], [4054, 5, 1, "", "shift_phase"], [4055, 5, 1, "", "snapshot"], [4056, 5, 1, "", "transpiler_settings"], [4057, 5, 1, "", "u1"], [4058, 5, 1, "", "u2"], [4059, 5, 1, "", "u3"], [4060, 5, 1, "", "x"]], "qiskit.pulse.channels": [[4061, 2, 1, "", "AcquireChannel"], [35, 2, 1, "", "Channel"], [4063, 2, 1, "", "ControlChannel"], [4065, 2, 1, "", "DriveChannel"], [4067, 2, 1, "", "MeasureChannel"], [4069, 2, 1, "", "MemorySlot"], [4071, 2, 1, "", "RegisterSlot"], [4073, 2, 1, "", "SnapshotChannel"]], "qiskit.pulse.channels.AcquireChannel": [[4061, 3, 1, "", "index"], [4062, 4, 1, "", "is_parameterized"], [4061, 3, 1, "", "name"], [4061, 3, 1, "", "parameters"], [4061, 3, 1, "", "prefix"]], "qiskit.pulse.channels.ControlChannel": [[4063, 3, 1, "", "index"], [4064, 4, 1, "", "is_parameterized"], [4063, 3, 1, "", "name"], [4063, 3, 1, "", "parameters"], [4063, 3, 1, "", "prefix"]], "qiskit.pulse.channels.DriveChannel": [[4065, 3, 1, "", "index"], [4066, 4, 1, "", "is_parameterized"], [4065, 3, 1, "", "name"], [4065, 3, 1, "", "parameters"], [4065, 3, 1, "", "prefix"]], "qiskit.pulse.channels.MeasureChannel": [[4067, 3, 1, "", "index"], [4068, 4, 1, "", "is_parameterized"], [4067, 3, 1, "", "name"], [4067, 3, 1, "", "parameters"], [4067, 3, 1, "", "prefix"]], "qiskit.pulse.channels.MemorySlot": [[4069, 3, 1, "", "index"], [4070, 4, 1, "", "is_parameterized"], [4069, 3, 1, "", "name"], [4069, 3, 1, "", "parameters"], [4069, 3, 1, "", "prefix"]], "qiskit.pulse.channels.RegisterSlot": [[4071, 3, 1, "", "index"], [4072, 4, 1, "", "is_parameterized"], [4071, 3, 1, "", "name"], [4071, 3, 1, "", "parameters"], [4071, 3, 1, "", "prefix"]], "qiskit.pulse.channels.SnapshotChannel": [[4073, 3, 1, "", "index"], [4074, 4, 1, "", "is_parameterized"], [4073, 3, 1, "", "name"], [4073, 3, 1, "", "parameters"], [4073, 3, 1, "", "prefix"]], "qiskit.pulse.instructions": [[4075, 2, 1, "", "Acquire"], [4084, 2, 1, "", "Call"], [4094, 2, 1, "", "Delay"], [35, 2, 1, "", "Instruction"], [4103, 2, 1, "", "Play"], [4112, 2, 1, "", "SetFrequency"], [4121, 2, 1, "", "SetPhase"], [4130, 2, 1, "", "ShiftFrequency"], [4139, 2, 1, "", "ShiftPhase"], [4148, 2, 1, "", "Snapshot"]], "qiskit.pulse.instructions.Acquire": [[4075, 3, 1, "", "acquire"], [4076, 4, 1, "", "append"], [4077, 4, 1, "", "ch_duration"], [4078, 4, 1, "", "ch_start_time"], [4079, 4, 1, "", "ch_stop_time"], [4075, 3, 1, "", "channel"], [4075, 3, 1, "", "channels"], [4075, 3, 1, "", "discriminator"], [4080, 4, 1, "", "draw"], [4075, 3, 1, "", "duration"], [4075, 3, 1, "", "id"], [4081, 4, 1, "", "insert"], [4075, 3, 1, "", "instructions"], [4082, 4, 1, "", "is_parameterized"], [4075, 3, 1, "", "kernel"], [4075, 3, 1, "", "mem_slot"], [4075, 3, 1, "", "name"], [4075, 3, 1, "", "operands"], [4075, 3, 1, "", "parameters"], [4075, 3, 1, "", "reg_slot"], [4083, 4, 1, "", "shift"], [4075, 3, 1, "", "start_time"], [4075, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.Call": [[4085, 4, 1, "", "append"], [4084, 3, 1, "", "arguments"], [4086, 4, 1, "", "assigned_subroutine"], [4087, 4, 1, "", "ch_duration"], [4088, 4, 1, "", "ch_start_time"], [4089, 4, 1, "", "ch_stop_time"], [4084, 3, 1, "", "channels"], [4090, 4, 1, "", "draw"], [4084, 3, 1, "", "duration"], [4084, 3, 1, "", "id"], [4091, 4, 1, "", "insert"], [4084, 3, 1, "", "instructions"], [4092, 4, 1, "", "is_parameterized"], [4084, 3, 1, "", "name"], [4084, 3, 1, "", "operands"], [4084, 3, 1, "", "parameters"], [4084, 3, 1, "", "prefix"], [4093, 4, 1, "", "shift"], [4084, 3, 1, "", "start_time"], [4084, 3, 1, "", "stop_time"], [4084, 3, 1, "", "subroutine"]], "qiskit.pulse.instructions.Delay": [[4095, 4, 1, "", "append"], [4096, 4, 1, "", "ch_duration"], [4097, 4, 1, "", "ch_start_time"], [4098, 4, 1, "", "ch_stop_time"], [4094, 3, 1, "", "channel"], [4094, 3, 1, "", "channels"], [4099, 4, 1, "", "draw"], [4094, 3, 1, "", "duration"], [4094, 3, 1, "", "id"], [4100, 4, 1, "", "insert"], [4094, 3, 1, "", "instructions"], [4101, 4, 1, "", "is_parameterized"], [4094, 3, 1, "", "name"], [4094, 3, 1, "", "operands"], [4094, 3, 1, "", "parameters"], [4102, 4, 1, "", "shift"], [4094, 3, 1, "", "start_time"], [4094, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.Play": [[4104, 4, 1, "", "append"], [4105, 4, 1, "", "ch_duration"], [4106, 4, 1, "", "ch_start_time"], [4107, 4, 1, "", "ch_stop_time"], [4103, 3, 1, "", "channel"], [4103, 3, 1, "", "channels"], [4108, 4, 1, "", "draw"], [4103, 3, 1, "", "duration"], [4103, 3, 1, "", "id"], [4109, 4, 1, "", "insert"], [4103, 3, 1, "", "instructions"], [4110, 4, 1, "", "is_parameterized"], [4103, 3, 1, "", "name"], [4103, 3, 1, "", "operands"], [4103, 3, 1, "", "parameters"], [4103, 3, 1, "", "pulse"], [4111, 4, 1, "", "shift"], [4103, 3, 1, "", "start_time"], [4103, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.SetFrequency": [[4113, 4, 1, "", "append"], [4114, 4, 1, "", "ch_duration"], [4115, 4, 1, "", "ch_start_time"], [4116, 4, 1, "", "ch_stop_time"], [4112, 3, 1, "", "channel"], [4112, 3, 1, "", "channels"], [4117, 4, 1, "", "draw"], [4112, 3, 1, "", "duration"], [4112, 3, 1, "", "frequency"], [4112, 3, 1, "", "id"], [4118, 4, 1, "", "insert"], [4112, 3, 1, "", "instructions"], [4119, 4, 1, "", "is_parameterized"], [4112, 3, 1, "", "name"], [4112, 3, 1, "", "operands"], [4112, 3, 1, "", "parameters"], [4120, 4, 1, "", "shift"], [4112, 3, 1, "", "start_time"], [4112, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.SetPhase": [[4122, 4, 1, "", "append"], [4123, 4, 1, "", "ch_duration"], [4124, 4, 1, "", "ch_start_time"], [4125, 4, 1, "", "ch_stop_time"], [4121, 3, 1, "", "channel"], [4121, 3, 1, "", "channels"], [4126, 4, 1, "", "draw"], [4121, 3, 1, "", "duration"], [4121, 3, 1, "", "id"], [4127, 4, 1, "", "insert"], [4121, 3, 1, "", "instructions"], [4128, 4, 1, "", "is_parameterized"], [4121, 3, 1, "", "name"], [4121, 3, 1, "", "operands"], [4121, 3, 1, "", "parameters"], [4121, 3, 1, "", "phase"], [4129, 4, 1, "", "shift"], [4121, 3, 1, "", "start_time"], [4121, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.ShiftFrequency": [[4131, 4, 1, "", "append"], [4132, 4, 1, "", "ch_duration"], [4133, 4, 1, "", "ch_start_time"], [4134, 4, 1, "", "ch_stop_time"], [4130, 3, 1, "", "channel"], [4130, 3, 1, "", "channels"], [4135, 4, 1, "", "draw"], [4130, 3, 1, "", "duration"], [4130, 3, 1, "", "frequency"], [4130, 3, 1, "", "id"], [4136, 4, 1, "", "insert"], [4130, 3, 1, "", "instructions"], [4137, 4, 1, "", "is_parameterized"], [4130, 3, 1, "", "name"], [4130, 3, 1, "", "operands"], [4130, 3, 1, "", "parameters"], [4138, 4, 1, "", "shift"], [4130, 3, 1, "", "start_time"], [4130, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.ShiftPhase": [[4140, 4, 1, "", "append"], [4141, 4, 1, "", "ch_duration"], [4142, 4, 1, "", "ch_start_time"], [4143, 4, 1, "", "ch_stop_time"], [4139, 3, 1, "", "channel"], [4139, 3, 1, "", "channels"], [4144, 4, 1, "", "draw"], [4139, 3, 1, "", "duration"], [4139, 3, 1, "", "id"], [4145, 4, 1, "", "insert"], [4139, 3, 1, "", "instructions"], [4146, 4, 1, "", "is_parameterized"], [4139, 3, 1, "", "name"], [4139, 3, 1, "", "operands"], [4139, 3, 1, "", "parameters"], [4139, 3, 1, "", "phase"], [4147, 4, 1, "", "shift"], [4139, 3, 1, "", "start_time"], [4139, 3, 1, "", "stop_time"]], "qiskit.pulse.instructions.Snapshot": [[4149, 4, 1, "", "append"], [4150, 4, 1, "", "ch_duration"], [4151, 4, 1, "", "ch_start_time"], [4152, 4, 1, "", "ch_stop_time"], [4148, 3, 1, "", "channel"], [4148, 3, 1, "", "channels"], [4153, 4, 1, "", "draw"], [4148, 3, 1, "", "duration"], [4148, 3, 1, "", "id"], [4154, 4, 1, "", "insert"], [4148, 3, 1, "", "instructions"], [4155, 4, 1, "", "is_parameterized"], [4148, 3, 1, "", "label"], [4148, 3, 1, "", "name"], [4148, 3, 1, "", "operands"], [4148, 3, 1, "", "parameters"], [4156, 4, 1, "", "shift"], [4148, 3, 1, "", "start_time"], [4148, 3, 1, "", "stop_time"], [4148, 3, 1, "", "type"]], "qiskit.pulse.library": [[4157, 2, 1, "", "Constant"], [4162, 2, 1, "", "Drag"], [4167, 2, 1, "", "Gaussian"], [4172, 2, 1, "", "GaussianSquare"], [4177, 2, 1, "", "ParametricPulse"], [4182, 2, 1, "", "SymbolicPulse"], [4187, 2, 1, "", "Waveform"], [4190, 5, 1, "", "constant"], [4191, 5, 1, "", "cos"], [4192, 5, 1, "", "drag"], [4193, 5, 1, "", "gaussian"], [4194, 5, 1, "", "gaussian_deriv"], [4195, 5, 1, "", "gaussian_square"], [4196, 5, 1, "", "sawtooth"], [4197, 5, 1, "", "sech"], [4198, 5, 1, "", "sech_deriv"], [4199, 5, 1, "", "sin"], [4200, 5, 1, "", "square"], [4201, 5, 1, "", "triangle"], [4202, 5, 1, "", "zero"]], "qiskit.pulse.library.Constant": [[4157, 3, 1, "", "constraints"], [4158, 4, 1, "", "draw"], [4157, 3, 1, "", "duration"], [4157, 3, 1, "", "envelope"], [4159, 4, 1, "", "get_waveform"], [4157, 3, 1, "", "id"], [4160, 4, 1, "", "is_parameterized"], [4157, 3, 1, "", "limit_amplitude"], [4157, 3, 1, "", "name"], [4157, 3, 1, "", "parameters"], [4157, 3, 1, "", "pulse_type"], [4157, 3, 1, "", "valid_amp_conditions"], [4161, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.Drag": [[4162, 3, 1, "", "constraints"], [4163, 4, 1, "", "draw"], [4162, 3, 1, "", "duration"], [4162, 3, 1, "", "envelope"], [4164, 4, 1, "", "get_waveform"], [4162, 3, 1, "", "id"], [4165, 4, 1, "", "is_parameterized"], [4162, 3, 1, "", "limit_amplitude"], [4162, 3, 1, "", "name"], [4162, 3, 1, "", "parameters"], [4162, 3, 1, "", "pulse_type"], [4162, 3, 1, "", "valid_amp_conditions"], [4166, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.Gaussian": [[4167, 3, 1, "", "constraints"], [4168, 4, 1, "", "draw"], [4167, 3, 1, "", "duration"], [4167, 3, 1, "", "envelope"], [4169, 4, 1, "", "get_waveform"], [4167, 3, 1, "", "id"], [4170, 4, 1, "", "is_parameterized"], [4167, 3, 1, "", "limit_amplitude"], [4167, 3, 1, "", "name"], [4167, 3, 1, "", "parameters"], [4167, 3, 1, "", "pulse_type"], [4167, 3, 1, "", "valid_amp_conditions"], [4171, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.GaussianSquare": [[4172, 3, 1, "", "constraints"], [4173, 4, 1, "", "draw"], [4172, 3, 1, "", "duration"], [4172, 3, 1, "", "envelope"], [4174, 4, 1, "", "get_waveform"], [4172, 3, 1, "", "id"], [4175, 4, 1, "", "is_parameterized"], [4172, 3, 1, "", "limit_amplitude"], [4172, 3, 1, "", "name"], [4172, 3, 1, "", "parameters"], [4172, 3, 1, "", "pulse_type"], [4172, 3, 1, "", "risefall_sigma_ratio"], [4172, 3, 1, "", "valid_amp_conditions"], [4176, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.ParametricPulse": [[4178, 4, 1, "", "draw"], [4177, 3, 1, "", "duration"], [4179, 4, 1, "", "get_waveform"], [4177, 3, 1, "", "id"], [4180, 4, 1, "", "is_parameterized"], [4177, 3, 1, "", "limit_amplitude"], [4177, 3, 1, "", "name"], [4177, 3, 1, "", "parameters"], [4181, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.SymbolicPulse": [[4182, 3, 1, "", "constraints"], [4183, 4, 1, "", "draw"], [4182, 3, 1, "", "duration"], [4182, 3, 1, "", "envelope"], [4184, 4, 1, "", "get_waveform"], [4182, 3, 1, "", "id"], [4185, 4, 1, "", "is_parameterized"], [4182, 3, 1, "", "limit_amplitude"], [4182, 3, 1, "", "name"], [4182, 3, 1, "", "parameters"], [4182, 3, 1, "", "pulse_type"], [4182, 3, 1, "", "valid_amp_conditions"], [4186, 4, 1, "", "validate_parameters"]], "qiskit.pulse.library.Waveform": [[4188, 4, 1, "", "draw"], [4187, 3, 1, "", "duration"], [4187, 3, 1, "", "id"], [4189, 4, 1, "", "is_parameterized"], [4187, 3, 1, "", "limit_amplitude"], [4187, 3, 1, "", "name"], [4187, 3, 1, "", "parameters"], [4187, 3, 1, "", "samples"]], "qiskit.pulse.transforms": [[4203, 2, 1, "", "AlignEquispaced"], [4206, 2, 1, "", "AlignFunc"], [4209, 2, 1, "", "AlignLeft"], [4212, 2, 1, "", "AlignRight"], [4215, 2, 1, "", "AlignSequential"], [35, 2, 1, "", "AlignmentKind"], [4218, 5, 1, "", "add_implicit_acquires"], [4219, 5, 1, "", "align_measures"], [4220, 5, 1, "", "block_to_dag"], [4221, 5, 1, "", "block_to_schedule"], [4222, 5, 1, "", "compress_pulses"], [4223, 5, 1, "", "flatten"], [4224, 5, 1, "", "inline_subroutines"], [4225, 5, 1, "", "pad"], [4226, 5, 1, "", "remove_directives"], [4227, 5, 1, "", "remove_trivial_barriers"], [4228, 5, 1, "", "target_qobj_transform"]], "qiskit.pulse.transforms.AlignEquispaced": [[4204, 4, 1, "", "align"], [4203, 3, 1, "", "duration"], [4203, 3, 1, "", "is_sequential"], [4205, 4, 1, "", "to_dict"]], "qiskit.pulse.transforms.AlignFunc": [[4207, 4, 1, "", "align"], [4206, 3, 1, "", "duration"], [4206, 3, 1, "", "func"], [4206, 3, 1, "", "is_sequential"], [4208, 4, 1, "", "to_dict"]], "qiskit.pulse.transforms.AlignLeft": [[4210, 4, 1, "", "align"], [4209, 3, 1, "", "is_sequential"], [4211, 4, 1, "", "to_dict"]], "qiskit.pulse.transforms.AlignRight": [[4213, 4, 1, "", "align"], [4212, 3, 1, "", "is_sequential"], [4214, 4, 1, "", "to_dict"]], "qiskit.pulse.transforms.AlignSequential": [[4216, 4, 1, "", "align"], [4215, 3, 1, "", "is_sequential"], [4217, 4, 1, "", "to_dict"]], "qiskit.qasm": [[4229, 2, 1, "", "OpenQASMLexer"], [4234, 2, 1, "", "Qasm"], [4238, 1, 1, "", "QasmError"], [4239, 2, 1, "", "QasmHTMLStyle"], [4240, 2, 1, "", "QasmTerminalStyle"]], "qiskit.qasm.OpenQASMLexer": [[4230, 4, 1, "", "add_filter"], [4229, 3, 1, "", "alias_filenames"], [4229, 3, 1, "", "aliases"], [4231, 4, 1, "", "analyse_text"], [4229, 3, 1, "", "filenames"], [4229, 3, 1, "", "flags"], [4229, 3, 1, "", "gates"], [4232, 4, 1, "", "get_tokens"], [4233, 4, 1, "", "get_tokens_unprocessed"], [4229, 3, 1, "", "mimetypes"], [4229, 3, 1, "", "name"], [4229, 3, 1, "", "priority"], [4229, 3, 1, "", "tokens"], [4229, 3, 1, "", "url"]], "qiskit.qasm.Qasm": [[4235, 4, 1, "", "generate_tokens"], [4236, 4, 1, "", "parse"], [4237, 4, 1, "", "return_filename"]], "qiskit.qasm.QasmHTMLStyle": [[4239, 3, 1, "", "background_color"], [4239, 3, 1, "", "highlight_color"], [4239, 3, 1, "", "line_number_background_color"], [4239, 3, 1, "", "line_number_color"], [4239, 3, 1, "", "line_number_special_background_color"], [4239, 3, 1, "", "line_number_special_color"], [4239, 3, 1, "", "styles"], [4239, 3, 1, "", "web_style_gallery_exclude"]], "qiskit.qasm.QasmTerminalStyle": [[4240, 3, 1, "", "background_color"], [4240, 3, 1, "", "highlight_color"], [4240, 3, 1, "", "line_number_background_color"], [4240, 3, 1, "", "line_number_color"], [4240, 3, 1, "", "line_number_special_background_color"], [4240, 3, 1, "", "line_number_special_color"], [4240, 3, 1, "", "styles"], [4240, 3, 1, "", "web_style_gallery_exclude"]], "qiskit.qasm3": [[4241, 2, 1, "", "Exporter"], [4244, 5, 1, "", "dump"], [4245, 5, 1, "", "dumps"]], "qiskit.qasm3.Exporter": [[4242, 4, 1, "", "dump"], [4243, 4, 1, "", "dumps"]], "qiskit.qobj": [[4246, 2, 1, "", "GateCalibration"], [4249, 2, 1, "", "PulseLibraryItem"], [4252, 2, 1, "", "PulseQobj"], [4255, 2, 1, "", "PulseQobjConfig"], [4258, 2, 1, "", "PulseQobjExperiment"], [4261, 2, 1, "", "PulseQobjExperimentConfig"], [4264, 2, 1, "", "PulseQobjInstruction"], [4267, 2, 1, "", "QasmExperimentCalibrations"], [4270, 2, 1, "", "QasmQobj"], [4273, 2, 1, "", "QasmQobjConfig"], [4276, 2, 1, "", "QasmQobjExperiment"], [4279, 2, 1, "", "QasmQobjExperimentConfig"], [4282, 2, 1, "", "QasmQobjInstruction"], [4285, 2, 1, "", "Qobj"], [4288, 2, 1, "", "QobjExperimentHeader"], [4291, 2, 1, "", "QobjHeader"], [4294, 2, 1, "", "QobjMeasurementOption"]], "qiskit.qobj.GateCalibration": [[4247, 4, 1, "", "from_dict"], [4248, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseLibraryItem": [[4250, 4, 1, "", "from_dict"], [4251, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseQobj": [[4253, 4, 1, "", "from_dict"], [4254, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseQobjConfig": [[4256, 4, 1, "", "from_dict"], [4257, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseQobjExperiment": [[4259, 4, 1, "", "from_dict"], [4260, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseQobjExperimentConfig": [[4262, 4, 1, "", "from_dict"], [4263, 4, 1, "", "to_dict"]], "qiskit.qobj.PulseQobjInstruction": [[4265, 4, 1, "", "from_dict"], [4266, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmExperimentCalibrations": [[4268, 4, 1, "", "from_dict"], [4269, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmQobj": [[4271, 4, 1, "", "from_dict"], [4272, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmQobjConfig": [[4274, 4, 1, "", "from_dict"], [4275, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmQobjExperiment": [[4277, 4, 1, "", "from_dict"], [4278, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmQobjExperimentConfig": [[4280, 4, 1, "", "from_dict"], [4281, 4, 1, "", "to_dict"]], "qiskit.qobj.QasmQobjInstruction": [[4283, 4, 1, "", "from_dict"], [4284, 4, 1, "", "to_dict"]], "qiskit.qobj.Qobj": [[4286, 4, 1, "", "from_dict"], [4287, 4, 1, "", "to_dict"]], "qiskit.qobj.QobjExperimentHeader": [[4289, 4, 1, "", "from_dict"], [4290, 4, 1, "", "to_dict"]], "qiskit.qobj.QobjHeader": [[4292, 4, 1, "", "from_dict"], [4293, 4, 1, "", "to_dict"]], "qiskit.qobj.QobjMeasurementOption": [[4295, 4, 1, "", "from_dict"], [4296, 4, 1, "", "to_dict"]], "qiskit.qpy": [[4297, 5, 1, "", "dump"], [4298, 5, 1, "", "load"]], "qiskit.quantum_info": [[4299, 2, 1, "", "CNOTDihedral"], [4316, 2, 1, "", "Chi"], [4335, 2, 1, "", "Choi"], [4354, 2, 1, "", "Clifford"], [4376, 2, 1, "", "DensityMatrix"], [4402, 2, 1, "", "Kraus"], [4421, 2, 1, "", "OneQubitEulerDecomposer"], [4424, 2, 1, "", "Operator"], [4444, 2, 1, "", "PTM"], [4463, 2, 1, "", "Pauli"], [4487, 2, 1, "", "PauliList"], [4519, 2, 1, "", "PauliTable"], [4545, 2, 1, "", "Quaternion"], [4552, 2, 1, "", "ScalarOp"], [4568, 2, 1, "", "SparsePauliOp"], [4595, 2, 1, "", "StabilizerState"], [4614, 2, 1, "", "StabilizerTable"], [4640, 2, 1, "", "Statevector"], [4667, 2, 1, "", "Stinespring"], [4686, 2, 1, "", "SuperOp"], [4705, 2, 1, "", "TwoQubitBasisDecomposer"], [4712, 2, 1, "", "XXDecomposer"], [4714, 5, 1, "", "average_gate_fidelity"], [4715, 5, 1, "", "concurrence"], [4716, 5, 1, "", "decompose_clifford"], [4717, 5, 1, "", "diamond_norm"], [4718, 5, 1, "", "entanglement_of_formation"], [4719, 5, 1, "", "entropy"], [4720, 5, 1, "", "gate_error"], [4721, 5, 1, "", "hellinger_distance"], [4722, 5, 1, "", "hellinger_fidelity"], [4723, 5, 1, "", "mutual_information"], [4724, 5, 1, "", "partial_trace"], [4725, 5, 1, "", "pauli_basis"], [4726, 5, 1, "", "process_fidelity"], [4727, 5, 1, "", "purity"], [4728, 5, 1, "", "random_clifford"], [4729, 5, 1, "", "random_cnotdihedral"], [4730, 5, 1, "", "random_density_matrix"], [4731, 5, 1, "", "random_hermitian"], [4732, 5, 1, "", "random_pauli"], [4733, 5, 1, "", "random_pauli_list"], [4734, 5, 1, "", "random_pauli_table"], [4735, 5, 1, "", "random_quantum_channel"], [4736, 5, 1, "", "random_stabilizer_table"], [4737, 5, 1, "", "random_statevector"], [4738, 5, 1, "", "random_unitary"], [4739, 5, 1, "", "shannon_entropy"], [4740, 5, 1, "", "state_fidelity"], [4741, 6, 1, "", "two_qubit_cnot_decompose"]], "qiskit.quantum_info.CNOTDihedral": [[4300, 4, 1, "", "adjoint"], [4301, 4, 1, "", "compose"], [4302, 4, 1, "", "conjugate"], [4303, 4, 1, "", "copy"], [4299, 3, 1, "", "dim"], [4304, 4, 1, "", "dot"], [4305, 4, 1, "", "expand"], [4306, 4, 1, "", "input_dims"], [4299, 3, 1, "", "name"], [4299, 3, 1, "", "num_clbits"], [4299, 3, 1, "", "num_qubits"], [4307, 4, 1, "", "output_dims"], [4308, 4, 1, "", "power"], [4299, 3, 1, "", "qargs"], [4309, 4, 1, "", "reshape"], [4310, 4, 1, "", "tensor"], [4311, 4, 1, "", "to_circuit"], [4312, 4, 1, "", "to_instruction"], [4313, 4, 1, "", "to_matrix"], [4314, 4, 1, "", "to_operator"], [4315, 4, 1, "", "transpose"]], "qiskit.quantum_info.Chi": [[4317, 4, 1, "", "adjoint"], [4316, 3, 1, "", "atol"], [4318, 4, 1, "", "compose"], [4319, 4, 1, "", "conjugate"], [4320, 4, 1, "", "copy"], [4316, 3, 1, "", "data"], [4316, 3, 1, "", "dim"], [4321, 4, 1, "", "dot"], [4322, 4, 1, "", "expand"], [4323, 4, 1, "", "input_dims"], [4324, 4, 1, "", "is_cp"], [4325, 4, 1, "", "is_cptp"], [4326, 4, 1, "", "is_tp"], [4327, 4, 1, "", "is_unitary"], [4316, 3, 1, "", "num_qubits"], [4328, 4, 1, "", "output_dims"], [4329, 4, 1, "", "power"], [4316, 3, 1, "", "qargs"], [4330, 4, 1, "", "reshape"], [4316, 3, 1, "", "rtol"], [4316, 3, 1, "", "settings"], [4331, 4, 1, "", "tensor"], [4332, 4, 1, "", "to_instruction"], [4333, 4, 1, "", "to_operator"], [4334, 4, 1, "", "transpose"]], "qiskit.quantum_info.Choi": [[4336, 4, 1, "", "adjoint"], [4335, 3, 1, "", "atol"], [4337, 4, 1, "", "compose"], [4338, 4, 1, "", "conjugate"], [4339, 4, 1, "", "copy"], [4335, 3, 1, "", "data"], [4335, 3, 1, "", "dim"], [4340, 4, 1, "", "dot"], [4341, 4, 1, "", "expand"], [4342, 4, 1, "", "input_dims"], [4343, 4, 1, "", "is_cp"], [4344, 4, 1, "", "is_cptp"], [4345, 4, 1, "", "is_tp"], [4346, 4, 1, "", "is_unitary"], [4335, 3, 1, "", "num_qubits"], [4347, 4, 1, "", "output_dims"], [4348, 4, 1, "", "power"], [4335, 3, 1, "", "qargs"], [4349, 4, 1, "", "reshape"], [4335, 3, 1, "", "rtol"], [4335, 3, 1, "", "settings"], [4350, 4, 1, "", "tensor"], [4351, 4, 1, "", "to_instruction"], [4352, 4, 1, "", "to_operator"], [4353, 4, 1, "", "transpose"]], "qiskit.quantum_info.Clifford": [[4355, 4, 1, "", "adjoint"], [4356, 4, 1, "", "compose"], [4357, 4, 1, "", "conjugate"], [4358, 4, 1, "", "copy"], [4354, 3, 1, "", "destabilizer"], [4354, 3, 1, "", "dim"], [4359, 4, 1, "", "dot"], [4360, 4, 1, "", "expand"], [4361, 4, 1, "", "from_circuit"], [4362, 4, 1, "", "from_dict"], [4363, 4, 1, "", "from_label"], [4364, 4, 1, "", "input_dims"], [4365, 4, 1, "", "is_unitary"], [4354, 3, 1, "", "name"], [4354, 3, 1, "", "num_clbits"], [4354, 3, 1, "", "num_qubits"], [4366, 4, 1, "", "output_dims"], [4367, 4, 1, "", "power"], [4354, 3, 1, "", "qargs"], [4368, 4, 1, "", "reshape"], [4354, 3, 1, "", "stabilizer"], [4354, 3, 1, "", "table"], [4369, 4, 1, "", "tensor"], [4370, 4, 1, "", "to_circuit"], [4371, 4, 1, "", "to_dict"], [4372, 4, 1, "", "to_instruction"], [4373, 4, 1, "", "to_matrix"], [4374, 4, 1, "", "to_operator"], [4375, 4, 1, "", "transpose"]], "qiskit.quantum_info.DensityMatrix": [[4376, 3, 1, "", "atol"], [4377, 4, 1, "", "conjugate"], [4378, 4, 1, "", "copy"], [4376, 3, 1, "", "data"], [4376, 3, 1, "", "dim"], [4379, 4, 1, "", "dims"], [4380, 4, 1, "", "draw"], [4381, 4, 1, "", "evolve"], [4382, 4, 1, "", "expand"], [4383, 4, 1, "", "expectation_value"], [4384, 4, 1, "", "from_instruction"], [4385, 4, 1, "", "from_int"], [4386, 4, 1, "", "from_label"], [4387, 4, 1, "", "is_valid"], [4388, 4, 1, "", "measure"], [4376, 3, 1, "", "num_qubits"], [4389, 4, 1, "", "probabilities"], [4390, 4, 1, "", "probabilities_dict"], [4391, 4, 1, "", "purity"], [4392, 4, 1, "", "reset"], [4393, 4, 1, "", "reverse_qargs"], [4376, 3, 1, "", "rtol"], [4394, 4, 1, "", "sample_counts"], [4395, 4, 1, "", "sample_memory"], [4396, 4, 1, "", "seed"], [4376, 3, 1, "", "settings"], [4397, 4, 1, "", "tensor"], [4398, 4, 1, "", "to_dict"], [4399, 4, 1, "", "to_operator"], [4400, 4, 1, "", "to_statevector"], [4401, 4, 1, "", "trace"]], "qiskit.quantum_info.Kraus": [[4403, 4, 1, "", "adjoint"], [4402, 3, 1, "", "atol"], [4404, 4, 1, "", "compose"], [4405, 4, 1, "", "conjugate"], [4406, 4, 1, "", "copy"], [4402, 3, 1, "", "data"], [4402, 3, 1, "", "dim"], [4407, 4, 1, "", "dot"], [4408, 4, 1, "", "expand"], [4409, 4, 1, "", "input_dims"], [4410, 4, 1, "", "is_cp"], [4411, 4, 1, "", "is_cptp"], [4412, 4, 1, "", "is_tp"], [4413, 4, 1, "", "is_unitary"], [4402, 3, 1, "", "num_qubits"], [4414, 4, 1, "", "output_dims"], [4415, 4, 1, "", "power"], [4402, 3, 1, "", "qargs"], [4416, 4, 1, "", "reshape"], [4402, 3, 1, "", "rtol"], [4402, 3, 1, "", "settings"], [4417, 4, 1, "", "tensor"], [4418, 4, 1, "", "to_instruction"], [4419, 4, 1, "", "to_operator"], [4420, 4, 1, "", "transpose"]], "qiskit.quantum_info.OneQubitEulerDecomposer": [[4422, 4, 1, "", "angles"], [4423, 4, 1, "", "angles_and_phase"], [4421, 3, 1, "", "basis"]], "qiskit.quantum_info.Operator": [[4425, 4, 1, "", "adjoint"], [4424, 3, 1, "", "atol"], [4426, 4, 1, "", "compose"], [4427, 4, 1, "", "conjugate"], [4428, 4, 1, "", "copy"], [4424, 3, 1, "", "data"], [4424, 3, 1, "", "dim"], [4429, 4, 1, "", "dot"], [4430, 4, 1, "", "equiv"], [4431, 4, 1, "", "expand"], [4432, 4, 1, "", "from_circuit"], [4433, 4, 1, "", "from_label"], [4434, 4, 1, "", "input_dims"], [4435, 4, 1, "", "is_unitary"], [4424, 3, 1, "", "num_qubits"], [4436, 4, 1, "", "output_dims"], [4437, 4, 1, "", "power"], [4424, 3, 1, "", "qargs"], [4438, 4, 1, "", "reshape"], [4439, 4, 1, "", "reverse_qargs"], [4424, 3, 1, "", "rtol"], [4424, 3, 1, "", "settings"], [4440, 4, 1, "", "tensor"], [4441, 4, 1, "", "to_instruction"], [4442, 4, 1, "", "to_operator"], [4443, 4, 1, "", "transpose"]], "qiskit.quantum_info.PTM": [[4445, 4, 1, "", "adjoint"], [4444, 3, 1, "", "atol"], [4446, 4, 1, "", "compose"], [4447, 4, 1, "", "conjugate"], [4448, 4, 1, "", "copy"], [4444, 3, 1, "", "data"], [4444, 3, 1, "", "dim"], [4449, 4, 1, "", "dot"], [4450, 4, 1, "", "expand"], [4451, 4, 1, "", "input_dims"], [4452, 4, 1, "", "is_cp"], [4453, 4, 1, "", "is_cptp"], [4454, 4, 1, "", "is_tp"], [4455, 4, 1, "", "is_unitary"], [4444, 3, 1, "", "num_qubits"], [4456, 4, 1, "", "output_dims"], [4457, 4, 1, "", "power"], [4444, 3, 1, "", "qargs"], [4458, 4, 1, "", "reshape"], [4444, 3, 1, "", "rtol"], [4444, 3, 1, "", "settings"], [4459, 4, 1, "", "tensor"], [4460, 4, 1, "", "to_instruction"], [4461, 4, 1, "", "to_operator"], [4462, 4, 1, "", "transpose"]], "qiskit.quantum_info.Pauli": [[4464, 4, 1, "", "adjoint"], [4465, 4, 1, "", "anticommutes"], [4466, 4, 1, "", "commutes"], [4467, 4, 1, "", "compose"], [4468, 4, 1, "", "conjugate"], [4469, 4, 1, "", "copy"], [4470, 4, 1, "", "delete"], [4463, 3, 1, "", "dim"], [4471, 4, 1, "", "dot"], [4472, 4, 1, "", "equiv"], [4473, 4, 1, "", "evolve"], [4474, 4, 1, "", "expand"], [4475, 4, 1, "", "input_dims"], [4476, 4, 1, "", "insert"], [4477, 4, 1, "", "inverse"], [4463, 3, 1, "", "name"], [4463, 3, 1, "", "num_clbits"], [4463, 3, 1, "", "num_qubits"], [4478, 4, 1, "", "output_dims"], [4463, 3, 1, "", "phase"], [4479, 4, 1, "", "power"], [4463, 3, 1, "", "qargs"], [4480, 4, 1, "", "reshape"], [4481, 4, 1, "", "set_truncation"], [4463, 3, 1, "", "settings"], [4482, 4, 1, "", "tensor"], [4483, 4, 1, "", "to_instruction"], [4484, 4, 1, "", "to_label"], [4485, 4, 1, "", "to_matrix"], [4486, 4, 1, "", "transpose"], [4463, 3, 1, "", "x"], [4463, 3, 1, "", "z"]], "qiskit.quantum_info.PauliList": [[4488, 4, 1, "", "adjoint"], [4489, 4, 1, "", "anticommutes"], [4490, 4, 1, "", "anticommutes_with_all"], [4491, 4, 1, "", "argsort"], [4492, 4, 1, "", "commutes"], [4493, 4, 1, "", "commutes_with_all"], [4494, 4, 1, "", "compose"], [4495, 4, 1, "", "conjugate"], [4496, 4, 1, "", "copy"], [4497, 4, 1, "", "delete"], [4487, 3, 1, "", "dim"], [4498, 4, 1, "", "dot"], [4499, 4, 1, "", "equiv"], [4500, 4, 1, "", "evolve"], [4501, 4, 1, "", "expand"], [4502, 4, 1, "", "from_symplectic"], [4503, 4, 1, "", "group_commuting"], [4504, 4, 1, "", "group_qubit_wise_commuting"], [4505, 4, 1, "", "input_dims"], [4506, 4, 1, "", "insert"], [4507, 4, 1, "", "inverse"], [4508, 4, 1, "", "label_iter"], [4509, 4, 1, "", "matrix_iter"], [4487, 3, 1, "", "num_qubits"], [4510, 4, 1, "", "output_dims"], [4487, 3, 1, "", "phase"], [4511, 4, 1, "", "power"], [4487, 3, 1, "", "qargs"], [4512, 4, 1, "", "reshape"], [4487, 3, 1, "", "settings"], [4487, 3, 1, "", "shape"], [4487, 3, 1, "", "size"], [4513, 4, 1, "", "sort"], [4514, 4, 1, "", "tensor"], [4515, 4, 1, "", "to_labels"], [4516, 4, 1, "", "to_matrix"], [4517, 4, 1, "", "transpose"], [4518, 4, 1, "", "unique"], [4487, 3, 1, "", "x"], [4487, 3, 1, "", "z"]], "qiskit.quantum_info.PauliTable": [[4519, 3, 1, "", "X"], [4519, 3, 1, "", "Z"], [4520, 4, 1, "", "adjoint"], [4521, 4, 1, "", "anticommutes_with_all"], [4522, 4, 1, "", "argsort"], [4519, 3, 1, "", "array"], [4523, 4, 1, "", "commutes"], [4524, 4, 1, "", "commutes_with_all"], [4525, 4, 1, "", "compose"], [4526, 4, 1, "", "conjugate"], [4527, 4, 1, "", "copy"], [4528, 4, 1, "", "delete"], [4519, 3, 1, "", "dim"], [4529, 4, 1, "", "dot"], [4530, 4, 1, "", "expand"], [4531, 4, 1, "", "from_labels"], [4532, 4, 1, "", "input_dims"], [4533, 4, 1, "", "insert"], [4534, 4, 1, "", "label_iter"], [4535, 4, 1, "", "matrix_iter"], [4519, 3, 1, "", "num_qubits"], [4536, 4, 1, "", "output_dims"], [4537, 4, 1, "", "power"], [4519, 3, 1, "", "qargs"], [4538, 4, 1, "", "reshape"], [4519, 3, 1, "", "settings"], [4519, 3, 1, "", "shape"], [4519, 3, 1, "", "size"], [4539, 4, 1, "", "sort"], [4540, 4, 1, "", "tensor"], [4541, 4, 1, "", "to_labels"], [4542, 4, 1, "", "to_matrix"], [4543, 4, 1, "", "transpose"], [4544, 4, 1, "", "unique"]], "qiskit.quantum_info.Quaternion": [[4546, 4, 1, "", "from_axis_rotation"], [4547, 4, 1, "", "from_euler"], [4548, 4, 1, "", "norm"], [4549, 4, 1, "", "normalize"], [4550, 4, 1, "", "to_matrix"], [4551, 4, 1, "", "to_zyz"]], "qiskit.quantum_info.ScalarOp": [[4553, 4, 1, "", "adjoint"], [4552, 3, 1, "", "atol"], [4552, 3, 1, "", "coeff"], [4554, 4, 1, "", "compose"], [4555, 4, 1, "", "conjugate"], [4556, 4, 1, "", "copy"], [4552, 3, 1, "", "dim"], [4557, 4, 1, "", "dot"], [4558, 4, 1, "", "expand"], [4559, 4, 1, "", "input_dims"], [4560, 4, 1, "", "is_unitary"], [4552, 3, 1, "", "num_qubits"], [4561, 4, 1, "", "output_dims"], [4562, 4, 1, "", "power"], [4552, 3, 1, "", "qargs"], [4563, 4, 1, "", "reshape"], [4552, 3, 1, "", "rtol"], [4564, 4, 1, "", "tensor"], [4565, 4, 1, "", "to_matrix"], [4566, 4, 1, "", "to_operator"], [4567, 4, 1, "", "transpose"]], "qiskit.quantum_info.SparsePauliOp": [[4569, 4, 1, "", "adjoint"], [4568, 3, 1, "", "atol"], [4570, 4, 1, "", "chop"], [4568, 3, 1, "", "coeffs"], [4571, 4, 1, "", "compose"], [4572, 4, 1, "", "conjugate"], [4573, 4, 1, "", "copy"], [4568, 3, 1, "", "dim"], [4574, 4, 1, "", "dot"], [4575, 4, 1, "", "equiv"], [4576, 4, 1, "", "expand"], [4577, 4, 1, "", "from_list"], [4578, 4, 1, "", "from_operator"], [4579, 4, 1, "", "from_sparse_list"], [4580, 4, 1, "", "group_commuting"], [4581, 4, 1, "", "input_dims"], [4582, 4, 1, "", "is_unitary"], [4583, 4, 1, "", "label_iter"], [4584, 4, 1, "", "matrix_iter"], [4568, 3, 1, "", "num_qubits"], [4585, 4, 1, "", "output_dims"], [4568, 3, 1, "", "paulis"], [4586, 4, 1, "", "power"], [4568, 3, 1, "", "qargs"], [4587, 4, 1, "", "reshape"], [4568, 3, 1, "", "rtol"], [4568, 3, 1, "", "settings"], [4588, 4, 1, "", "simplify"], [4568, 3, 1, "", "size"], [4589, 4, 1, "", "sum"], [4568, 3, 1, "", "table"], [4590, 4, 1, "", "tensor"], [4591, 4, 1, "", "to_list"], [4592, 4, 1, "", "to_matrix"], [4593, 4, 1, "", "to_operator"], [4594, 4, 1, "", "transpose"]], "qiskit.quantum_info.StabilizerState": [[4595, 3, 1, "", "clifford"], [4596, 4, 1, "", "conjugate"], [4597, 4, 1, "", "copy"], [4595, 3, 1, "", "dim"], [4598, 4, 1, "", "dims"], [4599, 4, 1, "", "evolve"], [4600, 4, 1, "", "expand"], [4601, 4, 1, "", "expectation_value"], [4602, 4, 1, "", "is_valid"], [4603, 4, 1, "", "measure"], [4595, 3, 1, "", "num_qubits"], [4604, 4, 1, "", "probabilities"], [4605, 4, 1, "", "probabilities_dict"], [4606, 4, 1, "", "purity"], [4607, 4, 1, "", "reset"], [4608, 4, 1, "", "sample_counts"], [4609, 4, 1, "", "sample_memory"], [4610, 4, 1, "", "seed"], [4611, 4, 1, "", "tensor"], [4612, 4, 1, "", "to_operator"], [4613, 4, 1, "", "trace"]], "qiskit.quantum_info.StabilizerTable": [[4614, 3, 1, "", "X"], [4614, 3, 1, "", "Z"], [4615, 4, 1, "", "adjoint"], [4616, 4, 1, "", "anticommutes_with_all"], [4617, 4, 1, "", "argsort"], [4614, 3, 1, "", "array"], [4618, 4, 1, "", "commutes"], [4619, 4, 1, "", "commutes_with_all"], [4620, 4, 1, "", "compose"], [4621, 4, 1, "", "conjugate"], [4622, 4, 1, "", "copy"], [4623, 4, 1, "", "delete"], [4614, 3, 1, "", "dim"], [4624, 4, 1, "", "dot"], [4625, 4, 1, "", "expand"], [4626, 4, 1, "", "from_labels"], [4627, 4, 1, "", "input_dims"], [4628, 4, 1, "", "insert"], [4629, 4, 1, "", "label_iter"], [4630, 4, 1, "", "matrix_iter"], [4614, 3, 1, "", "num_qubits"], [4631, 4, 1, "", "output_dims"], [4614, 3, 1, "", "pauli"], [4614, 3, 1, "", "phase"], [4632, 4, 1, "", "power"], [4614, 3, 1, "", "qargs"], [4633, 4, 1, "", "reshape"], [4614, 3, 1, "", "settings"], [4614, 3, 1, "", "shape"], [4614, 3, 1, "", "size"], [4634, 4, 1, "", "sort"], [4635, 4, 1, "", "tensor"], [4636, 4, 1, "", "to_labels"], [4637, 4, 1, "", "to_matrix"], [4638, 4, 1, "", "transpose"], [4639, 4, 1, "", "unique"]], "qiskit.quantum_info.Statevector": [[4640, 3, 1, "", "atol"], [4641, 4, 1, "", "conjugate"], [4642, 4, 1, "", "copy"], [4640, 3, 1, "", "data"], [4640, 3, 1, "", "dim"], [4643, 4, 1, "", "dims"], [4644, 4, 1, "", "draw"], [4645, 4, 1, "", "equiv"], [4646, 4, 1, "", "evolve"], [4647, 4, 1, "", "expand"], [4648, 4, 1, "", "expectation_value"], [4649, 4, 1, "", "from_instruction"], [4650, 4, 1, "", "from_int"], [4651, 4, 1, "", "from_label"], [4652, 4, 1, "", "inner"], [4653, 4, 1, "", "is_valid"], [4654, 4, 1, "", "measure"], [4640, 3, 1, "", "num_qubits"], [4655, 4, 1, "", "probabilities"], [4656, 4, 1, "", "probabilities_dict"], [4657, 4, 1, "", "purity"], [4658, 4, 1, "", "reset"], [4659, 4, 1, "", "reverse_qargs"], [4640, 3, 1, "", "rtol"], [4660, 4, 1, "", "sample_counts"], [4661, 4, 1, "", "sample_memory"], [4662, 4, 1, "", "seed"], [4640, 3, 1, "", "settings"], [4663, 4, 1, "", "tensor"], [4664, 4, 1, "", "to_dict"], [4665, 4, 1, "", "to_operator"], [4666, 4, 1, "", "trace"]], "qiskit.quantum_info.Stinespring": [[4668, 4, 1, "", "adjoint"], [4667, 3, 1, "", "atol"], [4669, 4, 1, "", "compose"], [4670, 4, 1, "", "conjugate"], [4671, 4, 1, "", "copy"], [4667, 3, 1, "", "data"], [4667, 3, 1, "", "dim"], [4672, 4, 1, "", "dot"], [4673, 4, 1, "", "expand"], [4674, 4, 1, "", "input_dims"], [4675, 4, 1, "", "is_cp"], [4676, 4, 1, "", "is_cptp"], [4677, 4, 1, "", "is_tp"], [4678, 4, 1, "", "is_unitary"], [4667, 3, 1, "", "num_qubits"], [4679, 4, 1, "", "output_dims"], [4680, 4, 1, "", "power"], [4667, 3, 1, "", "qargs"], [4681, 4, 1, "", "reshape"], [4667, 3, 1, "", "rtol"], [4667, 3, 1, "", "settings"], [4682, 4, 1, "", "tensor"], [4683, 4, 1, "", "to_instruction"], [4684, 4, 1, "", "to_operator"], [4685, 4, 1, "", "transpose"]], "qiskit.quantum_info.SuperOp": [[4687, 4, 1, "", "adjoint"], [4686, 3, 1, "", "atol"], [4688, 4, 1, "", "compose"], [4689, 4, 1, "", "conjugate"], [4690, 4, 1, "", "copy"], [4686, 3, 1, "", "data"], [4686, 3, 1, "", "dim"], [4691, 4, 1, "", "dot"], [4692, 4, 1, "", "expand"], [4693, 4, 1, "", "input_dims"], [4694, 4, 1, "", "is_cp"], [4695, 4, 1, "", "is_cptp"], [4696, 4, 1, "", "is_tp"], [4697, 4, 1, "", "is_unitary"], [4686, 3, 1, "", "num_qubits"], [4698, 4, 1, "", "output_dims"], [4699, 4, 1, "", "power"], [4686, 3, 1, "", "qargs"], [4700, 4, 1, "", "reshape"], [4686, 3, 1, "", "rtol"], [4686, 3, 1, "", "settings"], [4701, 4, 1, "", "tensor"], [4702, 4, 1, "", "to_instruction"], [4703, 4, 1, "", "to_operator"], [4704, 4, 1, "", "transpose"]], "qiskit.quantum_info.TwoQubitBasisDecomposer": [[4706, 4, 1, "", "decomp0"], [4707, 4, 1, "", "decomp1"], [4708, 4, 1, "", "decomp2_supercontrolled"], [4709, 4, 1, "", "decomp3_supercontrolled"], [4710, 4, 1, "", "num_basis_gates"], [4711, 4, 1, "", "traces"]], "qiskit.quantum_info.XXDecomposer": [[4713, 4, 1, "", "num_basis_gates"]], "qiskit.result": [[4742, 2, 1, "", "BaseReadoutMitigator"], [4745, 2, 1, "", "CorrelatedReadoutMitigator"], [4751, 2, 1, "", "Counts"], [4767, 2, 1, "", "LocalReadoutMitigator"], [4773, 2, 1, "", "ProbDistribution"], [4787, 2, 1, "", "QuasiDistribution"], [4802, 2, 1, "", "Result"], [4810, 1, 1, "", "ResultError"], [4811, 5, 1, "", "marginal_counts"], [4812, 5, 1, "", "marginal_distribution"], [4813, 5, 1, "", "marginal_memory"]], "qiskit.result.BaseReadoutMitigator": [[4743, 4, 1, "", "expectation_value"], [4744, 4, 1, "", "quasi_probabilities"]], "qiskit.result.CorrelatedReadoutMitigator": [[4746, 4, 1, "", "assignment_matrix"], [4747, 4, 1, "", "expectation_value"], [4748, 4, 1, "", "mitigation_matrix"], [4749, 4, 1, "", "quasi_probabilities"], [4745, 3, 1, "", "qubits"], [4745, 3, 1, "", "settings"], [4750, 4, 1, "", "stddev_upper_bound"]], "qiskit.result.Counts": [[4751, 3, 1, "", "bitstring_regex"], [4752, 4, 1, "", "clear"], [4753, 4, 1, "", "copy"], [4754, 4, 1, "", "fromkeys"], [4755, 4, 1, "", "get"], [4756, 4, 1, "", "hex_outcomes"], [4757, 4, 1, "", "int_outcomes"], [4758, 4, 1, "", "items"], [4759, 4, 1, "", "keys"], [4760, 4, 1, "", "most_frequent"], [4761, 4, 1, "", "pop"], [4762, 4, 1, "", "popitem"], [4763, 4, 1, "", "setdefault"], [4764, 4, 1, "", "shots"], [4765, 4, 1, "", "update"], [4766, 4, 1, "", "values"]], "qiskit.result.LocalReadoutMitigator": [[4768, 4, 1, "", "assignment_matrix"], [4769, 4, 1, "", "expectation_value"], [4770, 4, 1, "", "mitigation_matrix"], [4771, 4, 1, "", "quasi_probabilities"], [4767, 3, 1, "", "qubits"], [4767, 3, 1, "", "settings"], [4772, 4, 1, "", "stddev_upper_bound"]], "qiskit.result.ProbDistribution": [[4774, 4, 1, "", "binary_probabilities"], [4775, 4, 1, "", "clear"], [4776, 4, 1, "", "copy"], [4777, 4, 1, "", "fromkeys"], [4778, 4, 1, "", "get"], [4779, 4, 1, "", "hex_probabilities"], [4780, 4, 1, "", "items"], [4781, 4, 1, "", "keys"], [4782, 4, 1, "", "pop"], [4783, 4, 1, "", "popitem"], [4784, 4, 1, "", "setdefault"], [4785, 4, 1, "", "update"], [4786, 4, 1, "", "values"]], "qiskit.result.QuasiDistribution": [[4788, 4, 1, "", "binary_probabilities"], [4789, 4, 1, "", "clear"], [4790, 4, 1, "", "copy"], [4791, 4, 1, "", "fromkeys"], [4792, 4, 1, "", "get"], [4793, 4, 1, "", "hex_probabilities"], [4794, 4, 1, "", "items"], [4795, 4, 1, "", "keys"], [4796, 4, 1, "", "nearest_probability_distribution"], [4797, 4, 1, "", "pop"], [4798, 4, 1, "", "popitem"], [4799, 4, 1, "", "setdefault"], [4787, 3, 1, "", "stddev_upper_bound"], [4800, 4, 1, "", "update"], [4801, 4, 1, "", "values"]], "qiskit.result.Result": [[4802, 3, 1, "", "backend_name"], [4802, 3, 1, "", "backend_version"], [4803, 4, 1, "", "data"], [4804, 4, 1, "", "from_dict"], [4805, 4, 1, "", "get_counts"], [4806, 4, 1, "", "get_memory"], [4807, 4, 1, "", "get_statevector"], [4808, 4, 1, "", "get_unitary"], [4802, 3, 1, "", "job_id"], [4802, 3, 1, "", "qobj_id"], [4802, 3, 1, "", "results"], [4802, 3, 1, "", "success"], [4809, 4, 1, "", "to_dict"]], "qiskit.scheduler": [[4814, 2, 1, "", "ScheduleConfig"], [42, 0, 0, "-", "methods"], [4816, 0, 0, "-", "schedule_circuit"]], "qiskit.scheduler.methods": [[4815, 0, 0, "-", "basic"]], "qiskit.synthesis": [[4817, 2, 1, "", "EvolutionSynthesis"], [4819, 2, 1, "", "LieTrotter"], [4821, 2, 1, "", "MatrixExponential"], [4823, 2, 1, "", "ProductFormula"], [4825, 2, 1, "", "SuzukiTrotter"]], "qiskit.synthesis.EvolutionSynthesis": [[4817, 3, 1, "", "settings"], [4818, 4, 1, "", "synthesize"]], "qiskit.synthesis.LieTrotter": [[4819, 3, 1, "", "settings"], [4820, 4, 1, "", "synthesize"]], "qiskit.synthesis.MatrixExponential": [[4821, 3, 1, "", "settings"], [4822, 4, 1, "", "synthesize"]], "qiskit.synthesis.ProductFormula": [[4823, 3, 1, "", "settings"], [4824, 4, 1, "", "synthesize"]], "qiskit.synthesis.SuzukiTrotter": [[4825, 3, 1, "", "settings"], [4826, 4, 1, "", "synthesize"]], "qiskit.tools": [[4827, 5, 1, "", "backend_monitor"], [4828, 5, 1, "", "backend_overview"], [4829, 5, 1, "", "job_monitor"], [47, 0, 0, "-", "jupyter"], [4830, 5, 1, "", "parallel_map"]], "qiskit.transpiler": [[4831, 2, 1, "", "AnalysisPass"], [4834, 2, 1, "", "ConditionalController"], [4839, 2, 1, "", "CouplingMap"], [4861, 2, 1, "", "DoWhileController"], [4866, 2, 1, "", "FencedDAGCircuit"], [4867, 2, 1, "", "FencedPropertySet"], [4868, 2, 1, "", "FlowController"], [4873, 2, 1, "", "InstructionDurations"], [4878, 2, 1, "", "InstructionProperties"], [4879, 2, 1, "", "Layout"], [4894, 2, 1, "", "PassManager"], [4901, 2, 1, "", "PassManagerConfig"], [4903, 2, 1, "", "PropertySet"], [4915, 2, 1, "", "StagedPassManager"], [4922, 2, 1, "", "Target"], [4941, 2, 1, "", "TransformationPass"], [4944, 1, 1, "", "TranspilerAccessError"], [4945, 1, 1, "", "TranspilerError"], [50, 0, 0, "-", "passes"], [52, 0, 0, "-", "preset_passmanagers"]], "qiskit.transpiler.AnalysisPass": [[4831, 3, 1, "", "is_analysis_pass"], [4831, 3, 1, "", "is_transformation_pass"], [4832, 4, 1, "", "name"], [4833, 4, 1, "", "run"]], "qiskit.transpiler.ConditionalController": [[4835, 4, 1, "", "add_flow_controller"], [4836, 4, 1, "", "controller_factory"], [4837, 4, 1, "", "dump_passes"], [4834, 3, 1, "", "registered_controllers"], [4838, 4, 1, "", "remove_flow_controller"]], "qiskit.transpiler.CouplingMap": [[4840, 4, 1, "", "add_edge"], [4841, 4, 1, "", "add_physical_qubit"], [4842, 4, 1, "", "compute_distance_matrix"], [4839, 3, 1, "", "description"], [4843, 4, 1, "", "distance"], [4839, 3, 1, "", "distance_matrix"], [4844, 4, 1, "", "draw"], [4845, 4, 1, "", "from_full"], [4846, 4, 1, "", "from_grid"], [4847, 4, 1, "", "from_heavy_hex"], [4848, 4, 1, "", "from_heavy_square"], [4849, 4, 1, "", "from_hexagonal_lattice"], [4850, 4, 1, "", "from_line"], [4851, 4, 1, "", "from_ring"], [4852, 4, 1, "", "get_edges"], [4839, 3, 1, "", "graph"], [4853, 4, 1, "", "is_connected"], [4839, 3, 1, "", "is_symmetric"], [4854, 4, 1, "", "largest_connected_component"], [4855, 4, 1, "", "make_symmetric"], [4856, 4, 1, "", "neighbors"], [4839, 3, 1, "", "physical_qubits"], [4857, 4, 1, "", "reduce"], [4858, 4, 1, "", "shortest_undirected_path"], [4859, 4, 1, "", "size"], [4860, 4, 1, "", "subgraph"]], "qiskit.transpiler.DoWhileController": [[4862, 4, 1, "", "add_flow_controller"], [4863, 4, 1, "", "controller_factory"], [4864, 4, 1, "", "dump_passes"], [4861, 3, 1, "", "registered_controllers"], [4865, 4, 1, "", "remove_flow_controller"]], "qiskit.transpiler.FlowController": [[4869, 4, 1, "", "add_flow_controller"], [4870, 4, 1, "", "controller_factory"], [4871, 4, 1, "", "dump_passes"], [4868, 3, 1, "", "registered_controllers"], [4872, 4, 1, "", "remove_flow_controller"]], "qiskit.transpiler.InstructionDurations": [[4874, 4, 1, "", "from_backend"], [4875, 4, 1, "", "get"], [4876, 4, 1, "", "units_used"], [4877, 4, 1, "", "update"]], "qiskit.transpiler.InstructionProperties": [[4878, 3, 1, "", "calibration"], [4878, 3, 1, "", "duration"], [4878, 3, 1, "", "error"]], "qiskit.transpiler.Layout": [[4880, 4, 1, "", "add"], [4881, 4, 1, "", "add_register"], [4882, 4, 1, "", "combine_into_edge_map"], [4883, 4, 1, "", "copy"], [4884, 4, 1, "", "from_dict"], [4885, 4, 1, "", "from_intlist"], [4886, 4, 1, "", "from_qubit_list"], [4887, 4, 1, "", "generate_trivial_layout"], [4888, 4, 1, "", "get_physical_bits"], [4889, 4, 1, "", "get_registers"], [4890, 4, 1, "", "get_virtual_bits"], [4891, 4, 1, "", "order_based_on_type"], [4892, 4, 1, "", "reorder_bits"], [4893, 4, 1, "", "swap"]], "qiskit.transpiler.PassManager": [[4895, 4, 1, "", "append"], [4896, 4, 1, "", "draw"], [4897, 4, 1, "", "passes"], [4898, 4, 1, "", "remove"], [4899, 4, 1, "", "replace"], [4900, 4, 1, "", "run"]], "qiskit.transpiler.PassManagerConfig": [[4902, 4, 1, "", "from_backend"]], "qiskit.transpiler.PropertySet": [[4904, 4, 1, "", "clear"], [4905, 4, 1, "", "copy"], [4906, 4, 1, "", "fromkeys"], [4907, 4, 1, "", "get"], [4908, 4, 1, "", "items"], [4909, 4, 1, "", "keys"], [4910, 4, 1, "", "pop"], [4911, 4, 1, "", "popitem"], [4912, 4, 1, "", "setdefault"], [4913, 4, 1, "", "update"], [4914, 4, 1, "", "values"]], "qiskit.transpiler.StagedPassManager": [[4916, 4, 1, "", "append"], [4917, 4, 1, "", "draw"], [4915, 3, 1, "", "expanded_stages"], [4915, 3, 1, "", "invalid_stage_regex"], [4918, 4, 1, "", "passes"], [4919, 4, 1, "", "remove"], [4920, 4, 1, "", "replace"], [4921, 4, 1, "", "run"], [4915, 3, 1, "", "stages"]], "qiskit.transpiler.Target": [[4923, 4, 1, "", "add_instruction"], [4922, 3, 1, "", "aquire_alignment"], [4924, 4, 1, "", "build_coupling_map"], [4922, 3, 1, "", "description"], [4922, 3, 1, "", "dt"], [4925, 4, 1, "", "durations"], [4926, 4, 1, "", "get"], [4927, 4, 1, "", "get_non_global_operation_names"], [4922, 3, 1, "", "granularity"], [4928, 4, 1, "", "instruction_properties"], [4929, 4, 1, "", "instruction_schedule_map"], [4930, 4, 1, "", "instruction_supported"], [4922, 3, 1, "", "instructions"], [4931, 4, 1, "", "items"], [4932, 4, 1, "", "keys"], [4922, 3, 1, "", "min_length"], [4922, 3, 1, "", "num_qubits"], [4933, 4, 1, "", "operation_from_name"], [4922, 3, 1, "", "operation_names"], [4934, 4, 1, "", "operation_names_for_qargs"], [4922, 3, 1, "", "operations"], [4935, 4, 1, "", "operations_for_qargs"], [4922, 3, 1, "", "physical_qubits"], [4922, 3, 1, "", "pulse_alignment"], [4922, 3, 1, "", "qargs"], [4936, 4, 1, "", "qargs_for_operation_name"], [4922, 3, 1, "", "qubit_properties"], [4937, 4, 1, "", "timing_constraints"], [4938, 4, 1, "", "update_from_instruction_schedule_map"], [4939, 4, 1, "", "update_instruction_properties"], [4940, 4, 1, "", "values"]], "qiskit.transpiler.TransformationPass": [[4941, 3, 1, "", "is_analysis_pass"], [4941, 3, 1, "", "is_transformation_pass"], [4942, 4, 1, "", "name"], [4943, 4, 1, "", "run"]], "qiskit.transpiler.passes": [[4946, 2, 1, "", "ALAPSchedule"], [4949, 2, 1, "", "ALAPScheduleAnalysis"], [4952, 2, 1, "", "ASAPSchedule"], [4955, 2, 1, "", "ASAPScheduleAnalysis"], [4958, 2, 1, "", "AlignMeasures"], [4961, 2, 1, "", "ApplyLayout"], [4964, 2, 1, "", "BIPMapping"], [4967, 2, 1, "", "BarrierBeforeFinalMeasurements"], [4970, 2, 1, "", "BasicSwap"], [4973, 2, 1, "", "BasisTranslator"], [4976, 2, 1, "", "CSPLayout"], [4979, 2, 1, "", "CXCancellation"], [4982, 2, 1, "", "CXDirection"], [4985, 2, 1, "", "CheckCXDirection"], [4988, 2, 1, "", "CheckGateDirection"], [4991, 2, 1, "", "CheckMap"], [4994, 2, 1, "", "Collect1qRuns"], [4997, 2, 1, "", "Collect2qBlocks"], [5000, 2, 1, "", "CollectLinearFunctions"], [5003, 2, 1, "", "CollectMultiQBlocks"], [5008, 2, 1, "", "CommutationAnalysis"], [5011, 2, 1, "", "CommutativeCancellation"], [5014, 2, 1, "", "Commuting2qGateRouter"], [5018, 2, 1, "", "ConsolidateBlocks"], [5021, 2, 1, "", "ConstrainedReschedule"], [5024, 2, 1, "", "ContainsInstruction"], [5027, 2, 1, "", "CountOps"], [5030, 2, 1, "", "CountOpsLongestPath"], [5033, 2, 1, "", "CrosstalkAdaptiveSchedule"], [5062, 2, 1, "", "DAGFixedPoint"], [5065, 2, 1, "", "DAGLongestPath"], [5068, 2, 1, "", "Decompose"], [5071, 2, 1, "", "DenseLayout"], [5074, 2, 1, "", "Depth"], [5077, 2, 1, "", "DynamicalDecoupling"], [5080, 2, 1, "", "EchoRZXWeylDecomposition"], [5083, 2, 1, "", "EnlargeWithAncilla"], [5086, 2, 1, "", "FixedPoint"], [5089, 2, 1, "", "FullAncillaAllocation"], [5093, 2, 1, "", "GateDirection"], [5096, 2, 1, "", "GatesInBasis"], [5099, 2, 1, "", "HoareOptimizer"], [5102, 2, 1, "", "InstructionDurationCheck"], [5105, 2, 1, "", "InverseCancellation"], [5108, 2, 1, "", "Layout2qDistance"], [5111, 2, 1, "", "LinearFunctionsSynthesis"], [5114, 2, 1, "", "LinearFunctionsToPermutations"], [5117, 2, 1, "", "LookaheadSwap"], [5120, 2, 1, "", "MergeAdjacentBarriers"], [5123, 2, 1, "", "NoiseAdaptiveLayout"], [5126, 2, 1, "", "NumTensorFactors"], [5129, 2, 1, "", "Optimize1qGates"], [5134, 2, 1, "", "Optimize1qGatesDecomposition"], [5137, 2, 1, "", "Optimize1qGatesSimpleCommutation"], [5140, 2, 1, "", "PadDelay"], [5143, 2, 1, "", "PadDynamicalDecoupling"], [5146, 2, 1, "", "PulseGates"], [5151, 2, 1, "", "RZXCalibrationBuilder"], [5157, 2, 1, "", "RZXCalibrationBuilderNoEcho"], [5163, 2, 1, "", "RemoveBarriers"], [5166, 2, 1, "", "RemoveDiagonalGatesBeforeMeasure"], [5169, 2, 1, "", "RemoveFinalMeasurements"], [5172, 2, 1, "", "RemoveResetInZeroState"], [5175, 2, 1, "", "SabreLayout"], [5178, 2, 1, "", "SabreSwap"], [5181, 2, 1, "", "SetIOLatency"], [5184, 2, 1, "", "SetLayout"], [5187, 2, 1, "", "Size"], [5190, 2, 1, "", "StochasticSwap"], [5193, 2, 1, "", "TemplateOptimization"], [5196, 2, 1, "", "TimeUnitConversion"], [5199, 2, 1, "", "TrivialLayout"], [5202, 2, 1, "", "UnitarySynthesis"], [5205, 2, 1, "", "Unroll3qOrMore"], [5208, 2, 1, "", "UnrollCustomDefinitions"], [5211, 2, 1, "", "Unroller"], [5214, 2, 1, "", "VF2Layout"], [5217, 2, 1, "", "VF2PostLayout"], [5220, 2, 1, "", "ValidatePulseGates"], [5223, 2, 1, "", "Width"]], "qiskit.transpiler.passes.ALAPSchedule": [[4946, 3, 1, "", "CONDITIONAL_SUPPORTED"], [4946, 3, 1, "", "is_analysis_pass"], [4946, 3, 1, "", "is_transformation_pass"], [4947, 4, 1, "", "name"], [4948, 4, 1, "", "run"]], "qiskit.transpiler.passes.ALAPScheduleAnalysis": [[4949, 3, 1, "", "CONDITIONAL_SUPPORTED"], [4949, 3, 1, "", "is_analysis_pass"], [4949, 3, 1, "", "is_transformation_pass"], [4950, 4, 1, "", "name"], [4951, 4, 1, "", "run"]], "qiskit.transpiler.passes.ASAPSchedule": [[4952, 3, 1, "", "CONDITIONAL_SUPPORTED"], [4952, 3, 1, "", "is_analysis_pass"], [4952, 3, 1, "", "is_transformation_pass"], [4953, 4, 1, "", "name"], [4954, 4, 1, "", "run"]], "qiskit.transpiler.passes.ASAPScheduleAnalysis": [[4955, 3, 1, "", "CONDITIONAL_SUPPORTED"], [4955, 3, 1, "", "is_analysis_pass"], [4955, 3, 1, "", "is_transformation_pass"], [4956, 4, 1, "", "name"], [4957, 4, 1, "", "run"]], "qiskit.transpiler.passes.AlignMeasures": [[4958, 3, 1, "", "is_analysis_pass"], [4958, 3, 1, "", "is_transformation_pass"], [4959, 4, 1, "", "name"], [4960, 4, 1, "", "run"]], "qiskit.transpiler.passes.ApplyLayout": [[4961, 3, 1, "", "is_analysis_pass"], [4961, 3, 1, "", "is_transformation_pass"], [4962, 4, 1, "", "name"], [4963, 4, 1, "", "run"]], "qiskit.transpiler.passes.BIPMapping": [[4964, 3, 1, "", "is_analysis_pass"], [4964, 3, 1, "", "is_transformation_pass"], [4965, 4, 1, "", "name"], [4966, 4, 1, "", "run"]], "qiskit.transpiler.passes.BarrierBeforeFinalMeasurements": [[4967, 3, 1, "", "is_analysis_pass"], [4967, 3, 1, "", "is_transformation_pass"], [4968, 4, 1, "", "name"], [4969, 4, 1, "", "run"]], "qiskit.transpiler.passes.BasicSwap": [[4970, 3, 1, "", "is_analysis_pass"], [4970, 3, 1, "", "is_transformation_pass"], [4971, 4, 1, "", "name"], [4972, 4, 1, "", "run"]], "qiskit.transpiler.passes.BasisTranslator": [[4973, 3, 1, "", "is_analysis_pass"], [4973, 3, 1, "", "is_transformation_pass"], [4974, 4, 1, "", "name"], [4975, 4, 1, "", "run"]], "qiskit.transpiler.passes.CSPLayout": [[4976, 3, 1, "", "is_analysis_pass"], [4976, 3, 1, "", "is_transformation_pass"], [4977, 4, 1, "", "name"], [4978, 4, 1, "", "run"]], "qiskit.transpiler.passes.CXCancellation": [[4979, 3, 1, "", "is_analysis_pass"], [4979, 3, 1, "", "is_transformation_pass"], [4980, 4, 1, "", "name"], [4981, 4, 1, "", "run"]], "qiskit.transpiler.passes.CXDirection": [[4982, 3, 1, "", "is_analysis_pass"], [4982, 3, 1, "", "is_transformation_pass"], [4983, 4, 1, "", "name"], [4984, 4, 1, "", "run"]], "qiskit.transpiler.passes.CheckCXDirection": [[4985, 3, 1, "", "is_analysis_pass"], [4985, 3, 1, "", "is_transformation_pass"], [4986, 4, 1, "", "name"], [4987, 4, 1, "", "run"]], "qiskit.transpiler.passes.CheckGateDirection": [[4988, 3, 1, "", "is_analysis_pass"], [4988, 3, 1, "", "is_transformation_pass"], [4989, 4, 1, "", "name"], [4990, 4, 1, "", "run"]], "qiskit.transpiler.passes.CheckMap": [[4991, 3, 1, "", "is_analysis_pass"], [4991, 3, 1, "", "is_transformation_pass"], [4992, 4, 1, "", "name"], [4993, 4, 1, "", "run"]], "qiskit.transpiler.passes.Collect1qRuns": [[4994, 3, 1, "", "is_analysis_pass"], [4994, 3, 1, "", "is_transformation_pass"], [4995, 4, 1, "", "name"], [4996, 4, 1, "", "run"]], "qiskit.transpiler.passes.Collect2qBlocks": [[4997, 3, 1, "", "is_analysis_pass"], [4997, 3, 1, "", "is_transformation_pass"], [4998, 4, 1, "", "name"], [4999, 4, 1, "", "run"]], "qiskit.transpiler.passes.CollectLinearFunctions": [[5000, 3, 1, "", "is_analysis_pass"], [5000, 3, 1, "", "is_transformation_pass"], [5001, 4, 1, "", "name"], [5002, 4, 1, "", "run"]], "qiskit.transpiler.passes.CollectMultiQBlocks": [[5004, 4, 1, "", "find_set"], [5003, 3, 1, "", "is_analysis_pass"], [5003, 3, 1, "", "is_transformation_pass"], [5005, 4, 1, "", "name"], [5006, 4, 1, "", "run"], [5007, 4, 1, "", "union_set"]], "qiskit.transpiler.passes.CommutationAnalysis": [[5008, 3, 1, "", "is_analysis_pass"], [5008, 3, 1, "", "is_transformation_pass"], [5009, 4, 1, "", "name"], [5010, 4, 1, "", "run"]], "qiskit.transpiler.passes.CommutativeCancellation": [[5011, 3, 1, "", "is_analysis_pass"], [5011, 3, 1, "", "is_transformation_pass"], [5012, 4, 1, "", "name"], [5013, 4, 1, "", "run"]], "qiskit.transpiler.passes.Commuting2qGateRouter": [[5014, 3, 1, "", "is_analysis_pass"], [5014, 3, 1, "", "is_transformation_pass"], [5015, 4, 1, "", "name"], [5016, 4, 1, "", "run"], [5017, 4, 1, "", "swap_decompose"]], "qiskit.transpiler.passes.ConsolidateBlocks": [[5018, 3, 1, "", "is_analysis_pass"], [5018, 3, 1, "", "is_transformation_pass"], [5019, 4, 1, "", "name"], [5020, 4, 1, "", "run"]], "qiskit.transpiler.passes.ConstrainedReschedule": [[5021, 3, 1, "", "is_analysis_pass"], [5021, 3, 1, "", "is_transformation_pass"], [5022, 4, 1, "", "name"], [5023, 4, 1, "", "run"]], "qiskit.transpiler.passes.ContainsInstruction": [[5024, 3, 1, "", "is_analysis_pass"], [5024, 3, 1, "", "is_transformation_pass"], [5025, 4, 1, "", "name"], [5026, 4, 1, "", "run"]], "qiskit.transpiler.passes.CountOps": [[5027, 3, 1, "", "is_analysis_pass"], [5027, 3, 1, "", "is_transformation_pass"], [5028, 4, 1, "", "name"], [5029, 4, 1, "", "run"]], "qiskit.transpiler.passes.CountOpsLongestPath": [[5030, 3, 1, "", "is_analysis_pass"], [5030, 3, 1, "", "is_transformation_pass"], [5031, 4, 1, "", "name"], [5032, 4, 1, "", "run"]], "qiskit.transpiler.passes.CrosstalkAdaptiveSchedule": [[5034, 4, 1, "", "assign_gate_id"], [5035, 4, 1, "", "basic_bounds"], [5036, 4, 1, "", "check_dag_dependency"], [5037, 4, 1, "", "check_xtalk_dependency"], [5038, 4, 1, "", "coherence_constraints"], [5039, 4, 1, "", "create_updated_dag"], [5040, 4, 1, "", "create_z3_vars"], [5041, 4, 1, "", "cx_tuple"], [5042, 4, 1, "", "enforce_schedule_on_dag"], [5043, 4, 1, "", "extract_crosstalk_relevant_sets"], [5044, 4, 1, "", "extract_dag_overlap_sets"], [5045, 4, 1, "", "extract_solution"], [5046, 4, 1, "", "fidelity_constraints"], [5047, 4, 1, "", "filter_candidates"], [5048, 4, 1, "", "find_layer"], [5049, 4, 1, "", "gate_tuple"], [5050, 4, 1, "", "generate_barriers"], [5033, 3, 1, "", "is_analysis_pass"], [5051, 4, 1, "", "is_significant_xtalk"], [5033, 3, 1, "", "is_transformation_pass"], [5052, 4, 1, "", "name"], [5053, 4, 1, "", "objective_function"], [5054, 4, 1, "", "parse_backend_properties"], [5055, 4, 1, "", "powerset"], [5056, 4, 1, "", "r2f"], [5057, 4, 1, "", "reset"], [5058, 4, 1, "", "run"], [5059, 4, 1, "", "scheduling_constraints"], [5060, 4, 1, "", "singleq_tuple"], [5061, 4, 1, "", "solve_optimization"]], "qiskit.transpiler.passes.DAGFixedPoint": [[5062, 3, 1, "", "is_analysis_pass"], [5062, 3, 1, "", "is_transformation_pass"], [5063, 4, 1, "", "name"], [5064, 4, 1, "", "run"]], "qiskit.transpiler.passes.DAGLongestPath": [[5065, 3, 1, "", "is_analysis_pass"], [5065, 3, 1, "", "is_transformation_pass"], [5066, 4, 1, "", "name"], [5067, 4, 1, "", "run"]], "qiskit.transpiler.passes.Decompose": [[5068, 3, 1, "", "gate"], [5068, 3, 1, "", "is_analysis_pass"], [5068, 3, 1, "", "is_transformation_pass"], [5069, 4, 1, "", "name"], [5070, 4, 1, "", "run"]], "qiskit.transpiler.passes.DenseLayout": [[5071, 3, 1, "", "is_analysis_pass"], [5071, 3, 1, "", "is_transformation_pass"], [5072, 4, 1, "", "name"], [5073, 4, 1, "", "run"]], "qiskit.transpiler.passes.Depth": [[5074, 3, 1, "", "is_analysis_pass"], [5074, 3, 1, "", "is_transformation_pass"], [5075, 4, 1, "", "name"], [5076, 4, 1, "", "run"]], "qiskit.transpiler.passes.DynamicalDecoupling": [[5077, 3, 1, "", "is_analysis_pass"], [5077, 3, 1, "", "is_transformation_pass"], [5078, 4, 1, "", "name"], [5079, 4, 1, "", "run"]], "qiskit.transpiler.passes.EchoRZXWeylDecomposition": [[5080, 3, 1, "", "is_analysis_pass"], [5080, 3, 1, "", "is_transformation_pass"], [5081, 4, 1, "", "name"], [5082, 4, 1, "", "run"]], "qiskit.transpiler.passes.EnlargeWithAncilla": [[5083, 3, 1, "", "is_analysis_pass"], [5083, 3, 1, "", "is_transformation_pass"], [5084, 4, 1, "", "name"], [5085, 4, 1, "", "run"]], "qiskit.transpiler.passes.FixedPoint": [[5086, 3, 1, "", "is_analysis_pass"], [5086, 3, 1, "", "is_transformation_pass"], [5087, 4, 1, "", "name"], [5088, 4, 1, "", "run"]], "qiskit.transpiler.passes.FullAncillaAllocation": [[5089, 3, 1, "", "is_analysis_pass"], [5089, 3, 1, "", "is_transformation_pass"], [5090, 4, 1, "", "name"], [5091, 4, 1, "", "run"], [5092, 4, 1, "", "validate_layout"]], "qiskit.transpiler.passes.GateDirection": [[5093, 3, 1, "", "is_analysis_pass"], [5093, 3, 1, "", "is_transformation_pass"], [5094, 4, 1, "", "name"], [5095, 4, 1, "", "run"]], "qiskit.transpiler.passes.GatesInBasis": [[5096, 3, 1, "", "is_analysis_pass"], [5096, 3, 1, "", "is_transformation_pass"], [5097, 4, 1, "", "name"], [5098, 4, 1, "", "run"]], "qiskit.transpiler.passes.HoareOptimizer": [[5099, 3, 1, "", "is_analysis_pass"], [5099, 3, 1, "", "is_transformation_pass"], [5100, 4, 1, "", "name"], [5101, 4, 1, "", "run"]], "qiskit.transpiler.passes.InstructionDurationCheck": [[5102, 3, 1, "", "is_analysis_pass"], [5102, 3, 1, "", "is_transformation_pass"], [5103, 4, 1, "", "name"], [5104, 4, 1, "", "run"]], "qiskit.transpiler.passes.InverseCancellation": [[5105, 3, 1, "", "is_analysis_pass"], [5105, 3, 1, "", "is_transformation_pass"], [5106, 4, 1, "", "name"], [5107, 4, 1, "", "run"]], "qiskit.transpiler.passes.Layout2qDistance": [[5108, 3, 1, "", "is_analysis_pass"], [5108, 3, 1, "", "is_transformation_pass"], [5109, 4, 1, "", "name"], [5110, 4, 1, "", "run"]], "qiskit.transpiler.passes.LinearFunctionsSynthesis": [[5111, 3, 1, "", "is_analysis_pass"], [5111, 3, 1, "", "is_transformation_pass"], [5112, 4, 1, "", "name"], [5113, 4, 1, "", "run"]], "qiskit.transpiler.passes.LinearFunctionsToPermutations": [[5114, 3, 1, "", "is_analysis_pass"], [5114, 3, 1, "", "is_transformation_pass"], [5115, 4, 1, "", "name"], [5116, 4, 1, "", "run"]], "qiskit.transpiler.passes.LookaheadSwap": [[5117, 3, 1, "", "is_analysis_pass"], [5117, 3, 1, "", "is_transformation_pass"], [5118, 4, 1, "", "name"], [5119, 4, 1, "", "run"]], "qiskit.transpiler.passes.MergeAdjacentBarriers": [[5120, 3, 1, "", "is_analysis_pass"], [5120, 3, 1, "", "is_transformation_pass"], [5121, 4, 1, "", "name"], [5122, 4, 1, "", "run"]], "qiskit.transpiler.passes.NoiseAdaptiveLayout": [[5123, 4, 1, "", "Initialization"], [5123, 4, 1, "", "Notes"], [5123, 3, 1, "", "is_analysis_pass"], [5123, 3, 1, "", "is_transformation_pass"], [5124, 4, 1, "", "name"], [5125, 4, 1, "", "run"]], "qiskit.transpiler.passes.NumTensorFactors": [[5126, 3, 1, "", "is_analysis_pass"], [5126, 3, 1, "", "is_transformation_pass"], [5127, 4, 1, "", "name"], [5128, 4, 1, "", "run"]], "qiskit.transpiler.passes.Optimize1qGates": [[5130, 4, 1, "", "compose_u3"], [5129, 3, 1, "", "is_analysis_pass"], [5129, 3, 1, "", "is_transformation_pass"], [5131, 4, 1, "", "name"], [5132, 4, 1, "", "run"], [5133, 4, 1, "", "yzy_to_zyz"]], "qiskit.transpiler.passes.Optimize1qGatesDecomposition": [[5134, 3, 1, "", "is_analysis_pass"], [5134, 3, 1, "", "is_transformation_pass"], [5135, 4, 1, "", "name"], [5136, 4, 1, "", "run"]], "qiskit.transpiler.passes.Optimize1qGatesSimpleCommutation": [[5137, 3, 1, "", "is_analysis_pass"], [5137, 3, 1, "", "is_transformation_pass"], [5138, 4, 1, "", "name"], [5139, 4, 1, "", "run"]], "qiskit.transpiler.passes.PadDelay": [[5140, 3, 1, "", "is_analysis_pass"], [5140, 3, 1, "", "is_transformation_pass"], [5141, 4, 1, "", "name"], [5142, 4, 1, "", "run"]], "qiskit.transpiler.passes.PadDynamicalDecoupling": [[5143, 3, 1, "", "is_analysis_pass"], [5143, 3, 1, "", "is_transformation_pass"], [5144, 4, 1, "", "name"], [5145, 4, 1, "", "run"]], "qiskit.transpiler.passes.PulseGates": [[5147, 4, 1, "", "get_calibration"], [5146, 3, 1, "", "is_analysis_pass"], [5146, 3, 1, "", "is_transformation_pass"], [5148, 4, 1, "", "name"], [5149, 4, 1, "", "run"], [5150, 4, 1, "", "supported"]], "qiskit.transpiler.passes.RZXCalibrationBuilder": [[5152, 4, 1, "", "get_calibration"], [5151, 3, 1, "", "is_analysis_pass"], [5151, 3, 1, "", "is_transformation_pass"], [5153, 4, 1, "", "name"], [5154, 4, 1, "", "rescale_cr_inst"], [5155, 4, 1, "", "run"], [5156, 4, 1, "", "supported"]], "qiskit.transpiler.passes.RZXCalibrationBuilderNoEcho": [[5158, 4, 1, "", "get_calibration"], [5157, 3, 1, "", "is_analysis_pass"], [5157, 3, 1, "", "is_transformation_pass"], [5159, 4, 1, "", "name"], [5160, 4, 1, "", "rescale_cr_inst"], [5161, 4, 1, "", "run"], [5162, 4, 1, "", "supported"]], "qiskit.transpiler.passes.RemoveBarriers": [[5163, 3, 1, "", "is_analysis_pass"], [5163, 3, 1, "", "is_transformation_pass"], [5164, 4, 1, "", "name"], [5165, 4, 1, "", "run"]], "qiskit.transpiler.passes.RemoveDiagonalGatesBeforeMeasure": [[5166, 3, 1, "", "is_analysis_pass"], [5166, 3, 1, "", "is_transformation_pass"], [5167, 4, 1, "", "name"], [5168, 4, 1, "", "run"]], "qiskit.transpiler.passes.RemoveFinalMeasurements": [[5169, 3, 1, "", "is_analysis_pass"], [5169, 3, 1, "", "is_transformation_pass"], [5170, 4, 1, "", "name"], [5171, 4, 1, "", "run"]], "qiskit.transpiler.passes.RemoveResetInZeroState": [[5172, 3, 1, "", "is_analysis_pass"], [5172, 3, 1, "", "is_transformation_pass"], [5173, 4, 1, "", "name"], [5174, 4, 1, "", "run"]], "qiskit.transpiler.passes.SabreLayout": [[5175, 3, 1, "", "is_analysis_pass"], [5175, 3, 1, "", "is_transformation_pass"], [5176, 4, 1, "", "name"], [5177, 4, 1, "", "run"]], "qiskit.transpiler.passes.SabreSwap": [[5178, 3, 1, "", "is_analysis_pass"], [5178, 3, 1, "", "is_transformation_pass"], [5179, 4, 1, "", "name"], [5180, 4, 1, "", "run"]], "qiskit.transpiler.passes.SetIOLatency": [[5181, 3, 1, "", "is_analysis_pass"], [5181, 3, 1, "", "is_transformation_pass"], [5182, 4, 1, "", "name"], [5183, 4, 1, "", "run"]], "qiskit.transpiler.passes.SetLayout": [[5184, 3, 1, "", "is_analysis_pass"], [5184, 3, 1, "", "is_transformation_pass"], [5185, 4, 1, "", "name"], [5186, 4, 1, "", "run"]], "qiskit.transpiler.passes.Size": [[5187, 3, 1, "", "is_analysis_pass"], [5187, 3, 1, "", "is_transformation_pass"], [5188, 4, 1, "", "name"], [5189, 4, 1, "", "run"]], "qiskit.transpiler.passes.StochasticSwap": [[5190, 3, 1, "", "is_analysis_pass"], [5190, 3, 1, "", "is_transformation_pass"], [5191, 4, 1, "", "name"], [5192, 4, 1, "", "run"]], "qiskit.transpiler.passes.TemplateOptimization": [[5193, 3, 1, "", "is_analysis_pass"], [5193, 3, 1, "", "is_transformation_pass"], [5194, 4, 1, "", "name"], [5195, 4, 1, "", "run"]], "qiskit.transpiler.passes.TimeUnitConversion": [[5196, 3, 1, "", "is_analysis_pass"], [5196, 3, 1, "", "is_transformation_pass"], [5197, 4, 1, "", "name"], [5198, 4, 1, "", "run"]], "qiskit.transpiler.passes.TrivialLayout": [[5199, 3, 1, "", "is_analysis_pass"], [5199, 3, 1, "", "is_transformation_pass"], [5200, 4, 1, "", "name"], [5201, 4, 1, "", "run"]], "qiskit.transpiler.passes.UnitarySynthesis": [[5202, 3, 1, "", "is_analysis_pass"], [5202, 3, 1, "", "is_transformation_pass"], [5203, 4, 1, "", "name"], [5204, 4, 1, "", "run"]], "qiskit.transpiler.passes.Unroll3qOrMore": [[5205, 3, 1, "", "is_analysis_pass"], [5205, 3, 1, "", "is_transformation_pass"], [5206, 4, 1, "", "name"], [5207, 4, 1, "", "run"]], "qiskit.transpiler.passes.UnrollCustomDefinitions": [[5208, 3, 1, "", "is_analysis_pass"], [5208, 3, 1, "", "is_transformation_pass"], [5209, 4, 1, "", "name"], [5210, 4, 1, "", "run"]], "qiskit.transpiler.passes.Unroller": [[5211, 3, 1, "", "is_analysis_pass"], [5211, 3, 1, "", "is_transformation_pass"], [5212, 4, 1, "", "name"], [5213, 4, 1, "", "run"]], "qiskit.transpiler.passes.VF2Layout": [[5214, 3, 1, "", "is_analysis_pass"], [5214, 3, 1, "", "is_transformation_pass"], [5215, 4, 1, "", "name"], [5216, 4, 1, "", "run"]], "qiskit.transpiler.passes.VF2PostLayout": [[5217, 3, 1, "", "is_analysis_pass"], [5217, 3, 1, "", "is_transformation_pass"], [5218, 4, 1, "", "name"], [5219, 4, 1, "", "run"]], "qiskit.transpiler.passes.ValidatePulseGates": [[5220, 3, 1, "", "is_analysis_pass"], [5220, 3, 1, "", "is_transformation_pass"], [5221, 4, 1, "", "name"], [5222, 4, 1, "", "run"]], "qiskit.transpiler.passes.Width": [[5223, 3, 1, "", "is_analysis_pass"], [5223, 3, 1, "", "is_transformation_pass"], [5224, 4, 1, "", "name"], [5225, 4, 1, "", "run"]], "qiskit.transpiler.passes.synthesis": [[51, 0, 0, "-", "plugin"]], "qiskit.transpiler.passes.synthesis.plugin": [[5226, 2, 1, "", "UnitarySynthesisPlugin"], [5228, 2, 1, "", "UnitarySynthesisPluginManager"], [5229, 5, 1, "", "unitary_synthesis_plugin_names"]], "qiskit.transpiler.passes.synthesis.plugin.UnitarySynthesisPlugin": [[5226, 3, 1, "", "max_qubits"], [5226, 3, 1, "", "min_qubits"], [5227, 4, 1, "", "run"], [5226, 3, 1, "", "supported_bases"], [5226, 3, 1, "", "supports_basis_gates"], [5226, 3, 1, "", "supports_coupling_map"], [5226, 3, 1, "", "supports_gate_errors"], [5226, 3, 1, "", "supports_gate_lengths"], [5226, 3, 1, "", "supports_natural_direction"], [5226, 3, 1, "", "supports_pulse_optimize"], [5226, 3, 1, "", "supports_target"]], "qiskit.transpiler.preset_passmanagers": [[5230, 5, 1, "", "generate_preset_pass_manager"], [5231, 5, 1, "", "level_0_pass_manager"], [5232, 5, 1, "", "level_1_pass_manager"], [5233, 5, 1, "", "level_2_pass_manager"], [5234, 5, 1, "", "level_3_pass_manager"]], "qiskit.transpiler.synthesis": [[44, 0, 0, "-", "aqc"]], "qiskit.transpiler.synthesis.aqc": [[5235, 2, 1, "", "AQC"], [5237, 2, 1, "", "AQCSynthesisPlugin"], [5239, 2, 1, "", "ApproximateCircuit"], [5241, 2, 1, "", "ApproximatingObjective"], [5244, 2, 1, "", "CNOTUnitCircuit"], [5246, 2, 1, "", "CNOTUnitObjective"], [5247, 2, 1, "", "DefaultCNOTUnitObjective"], [44, 5, 1, "", "make_cnot_network"]], "qiskit.transpiler.synthesis.aqc.AQC": [[5236, 4, 1, "", "compile_unitary"]], "qiskit.transpiler.synthesis.aqc.AQCSynthesisPlugin": [[5237, 3, 1, "", "max_qubits"], [5237, 3, 1, "", "min_qubits"], [5238, 4, 1, "", "run"], [5237, 3, 1, "", "supported_bases"], [5237, 3, 1, "", "supports_basis_gates"], [5237, 3, 1, "", "supports_coupling_map"], [5237, 3, 1, "", "supports_gate_errors"], [5237, 3, 1, "", "supports_gate_lengths"], [5237, 3, 1, "", "supports_natural_direction"], [5237, 3, 1, "", "supports_pulse_optimize"], [5237, 3, 1, "", "supports_target"]], "qiskit.transpiler.synthesis.aqc.ApproximateCircuit": [[5239, 3, 1, "", "ancillas"], [5240, 4, 1, "", "build"], [5239, 3, 1, "", "calibrations"], [5239, 3, 1, "", "clbits"], [5239, 3, 1, "", "data"], [5239, 3, 1, "", "extension_lib"], [5239, 3, 1, "", "global_phase"], [5239, 3, 1, "", "header"], [5239, 3, 1, "", "instances"], [5239, 3, 1, "", "metadata"], [5239, 3, 1, "", "num_ancillas"], [5239, 3, 1, "", "num_clbits"], [5239, 3, 1, "", "num_parameters"], [5239, 3, 1, "", "num_qubits"], [5239, 3, 1, "", "op_start_times"], [5239, 3, 1, "", "parameters"], [5239, 3, 1, "", "prefix"], [5239, 3, 1, "", "qubits"], [5239, 3, 1, "", "thetas"]], "qiskit.transpiler.synthesis.aqc.ApproximatingObjective": [[5242, 4, 1, "", "gradient"], [5241, 3, 1, "", "num_thetas"], [5243, 4, 1, "", "objective"], [5241, 3, 1, "", "target_matrix"]], "qiskit.transpiler.synthesis.aqc.CNOTUnitCircuit": [[5244, 3, 1, "", "ancillas"], [5245, 4, 1, "", "build"], [5244, 3, 1, "", "calibrations"], [5244, 3, 1, "", "clbits"], [5244, 3, 1, "", "data"], [5244, 3, 1, "", "extension_lib"], [5244, 3, 1, "", "global_phase"], [5244, 3, 1, "", "header"], [5244, 3, 1, "", "instances"], [5244, 3, 1, "", "metadata"], [5244, 3, 1, "", "num_ancillas"], [5244, 3, 1, "", "num_clbits"], [5244, 3, 1, "", "num_parameters"], [5244, 3, 1, "", "num_qubits"], [5244, 3, 1, "", "op_start_times"], [5244, 3, 1, "", "parameters"], [5244, 3, 1, "", "prefix"], [5244, 3, 1, "", "qubits"], [5244, 3, 1, "", "thetas"]], "qiskit.transpiler.synthesis.aqc.CNOTUnitObjective": [[5246, 3, 1, "", "num_cnots"], [5246, 3, 1, "", "num_thetas"], [5246, 3, 1, "", "target_matrix"]], "qiskit.transpiler.synthesis.aqc.DefaultCNOTUnitObjective": [[5248, 4, 1, "", "gradient"], [5247, 3, 1, "", "num_cnots"], [5247, 3, 1, "", "num_thetas"], [5249, 4, 1, "", "objective"], [5247, 3, 1, "", "target_matrix"]], "qiskit.utils": [[53, 2, 1, "", "LazyDependencyManager"], [53, 2, 1, "", "LazyImportTester"], [53, 2, 1, "", "LazySubprocessTester"], [5250, 2, 1, "", "QuantumInstance"], [5258, 6, 1, "", "algorithm_globals"], [5259, 5, 1, "", "apply_prefix"], [5260, 5, 1, "", "deprecate_arguments"], [5261, 5, 1, "", "deprecate_function"], [5262, 5, 1, "", "detach_prefix"], [5263, 5, 1, "", "get_entangler_map"], [5264, 5, 1, "", "has_aer"], [5265, 5, 1, "", "has_ibmq"], [5266, 5, 1, "", "is_main_process"], [5267, 5, 1, "", "local_hardware_info"], [54, 0, 0, "-", "mitigation"], [5275, 5, 1, "", "name_args"], [53, 0, 0, "-", "optionals"], [5276, 5, 1, "", "summarize_circuits"], [5277, 5, 1, "", "validate_entangler_map"], [5278, 5, 1, "", "wrap_method"]], "qiskit.utils.LazyDependencyManager": [[53, 4, 1, "", "_is_available"], [53, 4, 1, "", "disable_locally"], [53, 4, 1, "", "require_in_call"], [53, 4, 1, "", "require_in_instance"], [53, 4, 1, "", "require_now"]], "qiskit.utils.QuantumInstance": [[5251, 4, 1, "", "assemble"], [5250, 3, 1, "", "backend"], [5250, 3, 1, "", "backend_config"], [5250, 3, 1, "", "backend_name"], [5250, 3, 1, "", "backend_options"], [5250, 3, 1, "", "bound_pass_manager"], [5252, 4, 1, "", "cals_matrix"], [5250, 3, 1, "", "cals_matrix_refresh_period"], [5250, 3, 1, "", "circuit_summary"], [5250, 3, 1, "", "compile_config"], [5253, 4, 1, "", "execute"], [5250, 3, 1, "", "is_local"], [5250, 3, 1, "", "is_simulator"], [5250, 3, 1, "", "is_statevector"], [5250, 3, 1, "", "max_job_retries"], [5254, 4, 1, "", "maybe_refresh_cals_matrix"], [5250, 3, 1, "", "measurement_error_mitigation_cls"], [5250, 3, 1, "", "measurement_error_mitigation_shots"], [5250, 3, 1, "", "noise_config"], [5250, 3, 1, "", "qjob_config"], [5255, 4, 1, "", "reset_execution_results"], [5250, 3, 1, "", "run_config"], [5256, 4, 1, "", "set_config"], [5250, 3, 1, "", "skip_qobj_validation"], [5250, 3, 1, "", "time_taken"], [5257, 4, 1, "", "transpile"], [5250, 3, 1, "", "unbound_pass_manager"]], "qiskit.utils.mitigation": [[5268, 2, 1, "", "CompleteMeasFitter"], [5272, 2, 1, "", "TensoredMeasFitter"]], "qiskit.utils.mitigation.CompleteMeasFitter": [[5269, 4, 1, "", "add_data"], [5268, 3, 1, "", "cal_matrix"], [5268, 3, 1, "", "filter"], [5268, 3, 1, "", "qubit_list"], [5270, 4, 1, "", "readout_fidelity"], [5268, 3, 1, "", "state_labels"], [5271, 4, 1, "", "subset_fitter"]], "qiskit.utils.mitigation.TensoredMeasFitter": [[5273, 4, 1, "", "add_data"], [5272, 3, 1, "", "cal_matrices"], [5272, 3, 1, "", "filter"], [5272, 3, 1, "", "nqubits"], [5274, 4, 1, "", "readout_fidelity"], [5272, 3, 1, "", "substate_labels_list"]], "qiskit.utils.optionals": [[53, 6, 1, "", "HAS_AER"], [53, 6, 1, "", "HAS_CONSTRAINT"], [53, 6, 1, "", "HAS_CPLEX"], [53, 6, 1, "", "HAS_CVXPY"], [53, 6, 1, "", "HAS_DOCPLEX"], [53, 6, 1, "", "HAS_FIXTURES"], [53, 6, 1, "", "HAS_GRAPHVIZ"], [53, 6, 1, "", "HAS_IBMQ"], [53, 6, 1, "", "HAS_IGNIS"], [53, 6, 1, "", "HAS_IPYTHON"], [53, 6, 1, "", "HAS_IPYWIDGETS"], [53, 6, 1, "", "HAS_JAX"], [53, 6, 1, "", "HAS_MATPLOTLIB"], [53, 6, 1, "", "HAS_NETWORKX"], [53, 6, 1, "", "HAS_NLOPT"], [53, 6, 1, "", "HAS_PDFLATEX"], [53, 6, 1, "", "HAS_PDFTOCAIRO"], [53, 6, 1, "", "HAS_PIL"], [53, 6, 1, "", "HAS_PYDOT"], [53, 6, 1, "", "HAS_PYLATEX"], [53, 6, 1, "", "HAS_SEABORN"], [53, 6, 1, "", "HAS_SKLEARN"], [53, 6, 1, "", "HAS_SKQUANT"], [53, 6, 1, "", "HAS_SQSNOBFIT"], [53, 6, 1, "", "HAS_SYMENGINE"], [53, 6, 1, "", "HAS_TESTTOOLS"], [53, 6, 1, "", "HAS_TOQM"], [53, 6, 1, "", "HAS_Z3"]], "qiskit.visualization": [[5279, 1, 1, "", "VisualizationError"], [5280, 5, 1, "", "array_to_latex"], [5281, 5, 1, "", "circuit_drawer"], [5282, 5, 1, "", "dag_drawer"], [5283, 5, 1, "", "pass_manager_drawer"], [5284, 5, 1, "", "plot_bloch_multivector"], [5285, 5, 1, "", "plot_bloch_vector"], [5286, 5, 1, "", "plot_circuit_layout"], [5287, 5, 1, "", "plot_coupling_map"], [5288, 5, 1, "", "plot_error_map"], [5289, 5, 1, "", "plot_gate_map"], [5290, 5, 1, "", "plot_histogram"], [5291, 5, 1, "", "plot_state_city"], [5292, 5, 1, "", "plot_state_hinton"], [5293, 5, 1, "", "plot_state_paulivec"], [5294, 5, 1, "", "plot_state_qsphere"], [5334, 5, 1, "", "timeline_drawer"], [5335, 5, 1, "", "visualize_transition"]], "qiskit.visualization.pulse_v2": [[5295, 2, 1, "", "IQXDebugging"], [5307, 2, 1, "", "IQXSimple"], [5319, 2, 1, "", "IQXStandard"], [5331, 5, 1, "", "draw"]], "qiskit.visualization.pulse_v2.IQXDebugging": [[5296, 4, 1, "", "clear"], [5297, 4, 1, "", "copy"], [5298, 4, 1, "", "fromkeys"], [5299, 4, 1, "", "get"], [5300, 4, 1, "", "items"], [5301, 4, 1, "", "keys"], [5302, 4, 1, "", "pop"], [5303, 4, 1, "", "popitem"], [5304, 4, 1, "", "setdefault"], [5305, 4, 1, "", "update"], [5306, 4, 1, "", "values"]], "qiskit.visualization.pulse_v2.IQXSimple": [[5308, 4, 1, "", "clear"], [5309, 4, 1, "", "copy"], [5310, 4, 1, "", "fromkeys"], [5311, 4, 1, "", "get"], [5312, 4, 1, "", "items"], [5313, 4, 1, "", "keys"], [5314, 4, 1, "", "pop"], [5315, 4, 1, "", "popitem"], [5316, 4, 1, "", "setdefault"], [5317, 4, 1, "", "update"], [5318, 4, 1, "", "values"]], "qiskit.visualization.pulse_v2.IQXStandard": [[5320, 4, 1, "", "clear"], [5321, 4, 1, "", "copy"], [5322, 4, 1, "", "fromkeys"], [5323, 4, 1, "", "get"], [5324, 4, 1, "", "items"], [5325, 4, 1, "", "keys"], [5326, 4, 1, "", "pop"], [5327, 4, 1, "", "popitem"], [5328, 4, 1, "", "setdefault"], [5329, 4, 1, "", "update"], [5330, 4, 1, "", "values"]], "qiskit.visualization.qcstyle": [[5332, 2, 1, "", "DefaultStyle"]], "qiskit.visualization.timeline": [[5333, 5, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python \u30e2\u30b8\u30e5\u30fc\u30eb"], "1": ["py", "exception", "Python \u4f8b\u5916"], "2": ["py", "class", "Python \u30af\u30e9\u30b9"], "3": ["py", "attribute", "Python \u306e\u5c5e\u6027"], "4": ["py", "method", "Python \u30e1\u30bd\u30c3\u30c9"], "5": ["py", "function", "Python \u306e\u95a2\u6570"], "6": ["py", "data", "Python \u30c7\u30fc\u30bf"]}, "titleterms": {"qiskit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 60, 62, 64, 65, 68, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 94, 96, 98, 99, 100, 102, 104, 106, 107, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 129, 131, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 940, 941, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1337, 1338, 1340, 1341, 1344, 1346, 1347, 1349, 1351, 1353, 1356, 1358, 1359, 1361, 1363, 1365, 1366, 1368, 1370, 1375, 1390, 1391, 1395, 1400, 1402, 1403, 1404, 1405, 1408, 1409, 1411, 1413, 1414, 1416, 1417, 1418, 1420, 1422, 1423, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1449, 1451, 1452, 1454, 1455, 1460, 1461, 1463, 1464, 1467, 1469, 1473, 1474, 1476, 1482, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1495, 1497, 1498, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1531, 1532, 1534, 1536, 1538, 1540, 1541, 1543, 1545, 1546, 1548, 1549, 1553, 1554, 1557, 1559, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1750, 1752, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1928, 1929, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1971, 1972, 1973, 1975, 1977, 1980, 1982, 1983, 1985, 1986, 1988, 1989, 1991, 1992, 1994, 1996, 1997, 1999, 2000, 2001, 2003, 2005, 2007, 2008, 2009, 2011, 2012, 2015, 2016, 2019, 2020, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2266, 2268, 2270, 2273, 2276, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2294, 2296, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2310, 2311, 2312, 2315, 2316, 2317, 2319, 2321, 2322, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2799, 2800, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2863, 2864, 2865, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2907, 2908, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3483, 3484, 3486, 3487, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3705, 3706, 3707, 3708, 3709, 3710, 3712, 3713, 3714, 3715, 3716, 3717, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3767, 3768, 3769, 3770, 3771, 3772, 3774, 3775, 3776, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3831, 3832, 3833, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3900, 3902, 3903, 3904, 3906, 3907, 3908, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3921, 3923, 3924, 3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3977, 3978, 3980, 3981, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4158, 4159, 4160, 4161, 4163, 4164, 4165, 4166, 4168, 4169, 4170, 4171, 4173, 4174, 4175, 4176, 4178, 4179, 4180, 4181, 4183, 4184, 4185, 4186, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4204, 4205, 4207, 4208, 4210, 4211, 4213, 4214, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4230, 4231, 4232, 4233, 4235, 4236, 4237, 4238, 4242, 4243, 4244, 4245, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4265, 4266, 4268, 4269, 4271, 4272, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4289, 4290, 4292, 4293, 4295, 4296, 4297, 4298, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4422, 4423, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4546, 4547, 4548, 4549, 4550, 4551, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4706, 4707, 4708, 4709, 4710, 4711, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4743, 4744, 4746, 4747, 4748, 4749, 4750, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4768, 4769, 4770, 4771, 4772, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4815, 4816, 4818, 4820, 4822, 4824, 4826, 4827, 4828, 4829, 4830, 4832, 4833, 4835, 4836, 4837, 4838, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4862, 4863, 4864, 4865, 4869, 4870, 4871, 4872, 4874, 4875, 4876, 4877, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4895, 4896, 4897, 4898, 4899, 4900, 4902, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4916, 4917, 4918, 4919, 4920, 4921, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4942, 4943, 4944, 4945, 4947, 4948, 4950, 4951, 4953, 4954, 4956, 4957, 4959, 4960, 4962, 4963, 4965, 4966, 4968, 4969, 4971, 4972, 4974, 4975, 4977, 4978, 4980, 4981, 4983, 4984, 4986, 4987, 4989, 4990, 4992, 4993, 4995, 4996, 4998, 4999, 5001, 5002, 5004, 5005, 5006, 5007, 5009, 5010, 5012, 5013, 5015, 5016, 5017, 5019, 5020, 5022, 5023, 5025, 5026, 5028, 5029, 5031, 5032, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5063, 5064, 5066, 5067, 5069, 5070, 5072, 5073, 5075, 5076, 5078, 5079, 5081, 5082, 5084, 5085, 5087, 5088, 5090, 5091, 5092, 5094, 5095, 5097, 5098, 5100, 5101, 5103, 5104, 5106, 5107, 5109, 5110, 5112, 5113, 5115, 5116, 5118, 5119, 5121, 5122, 5124, 5125, 5127, 5128, 5130, 5131, 5132, 5133, 5135, 5136, 5138, 5139, 5141, 5142, 5144, 5145, 5147, 5148, 5149, 5150, 5152, 5153, 5154, 5155, 5156, 5158, 5159, 5160, 5161, 5162, 5164, 5165, 5167, 5168, 5170, 5171, 5173, 5174, 5176, 5177, 5179, 5180, 5182, 5183, 5185, 5186, 5188, 5189, 5191, 5192, 5194, 5195, 5197, 5198, 5200, 5201, 5203, 5204, 5206, 5207, 5209, 5210, 5212, 5213, 5215, 5216, 5218, 5219, 5221, 5222, 5224, 5225, 5227, 5229, 5230, 5231, 5232, 5233, 5234, 5236, 5238, 5240, 5242, 5243, 5245, 5248, 5249, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5269, 5270, 5271, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5333, 5334, 5335, 5336, 5337, 5348, 5349, 5350, 5359, 5362, 5366, 5373], "aer": [0, 2, 5, 29, 57, 64, 5339, 5348, 5364, 5366], "api": [0, 10, 12, 18, 31, 39, 45, 48, 51, 64], "reference": [0, 18, 45], "circuit": [1, 9, 10, 11, 13, 14, 17, 35, 39, 42, 43, 50, 55, 4421, 5354], "extensions": [1, 17], ".providers": [1, 2, 3, 4, 5, 6, 7, 19, 20, 21, 23, 24, 25, 26, 31, 32, 33, 34, 2276, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2294, 2296, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2310, 2311, 2312, 2315, 2316, 2317, 2319, 2321, 2322, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2799, 2800, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2863, 2864, 2865, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2907, 2908, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3483, 3484, 3486, 3487, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3705, 3706, 3707, 3708, 3709, 3710, 3712, 3713, 3714, 3715, 3716, 3717, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3767, 3768, 3769, 3770, 3771, 3772, 3774, 3775, 3776, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3831, 3832, 3833, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3900, 3902, 3903, 3904, 3906, 3907, 3908, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3921, 3923, 3924, 3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3977, 3978, 3980, 3981], ".aer": [1, 2, 3, 4, 5, 6, 7, 2319, 2321, 2322, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2799, 2800, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2863, 2864, 2865, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892], ".extensions": [1, 17, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472], "snapshots": 1, "jobs": [2, 25], ".jobs": [2, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 3723, 3739, 3857, 3880], "classes": [2, 3, 4, 6, 7, 19, 20, 21, 23, 24, 25, 31, 53, 2001], "instruction": [3, 39, 1050], "library": [3, 11, 35], ".library": [3, 11, 35, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1337, 1338, 1340, 1341, 1344, 1346, 1347, 1349, 1351, 1353, 1356, 1358, 1359, 1361, 1363, 1365, 1366, 1368, 1370, 1375, 1390, 1391, 1395, 1400, 1402, 1403, 1404, 1405, 1408, 1409, 1411, 1413, 1414, 1416, 1417, 1418, 1420, 1422, 1423, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1449, 1451, 1452, 1454, 1455, 1460, 1461, 1463, 1464, 1467, 1469, 1473, 1474, 1476, 1482, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1495, 1497, 1498, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1531, 1532, 1534, 1536, 1538, 1540, 1541, 1543, 1545, 1546, 1548, 1549, 1553, 1554, 1557, 1559, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 4158, 4159, 4160, 4161, 4163, 4164, 4165, 4166, 4168, 4169, 4170, 4171, 4173, 4174, 4175, 4176, 4178, 4179, 4180, 4181, 4183, 4184, 4185, 4186, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202], "setting": 3, "custom": [3, 4, 31, 39], "simulator": [3, 5, 17], "state": [3, 55, 2161, 4386, 4651], "quantumcircuit": [3, 64, 1102, 5359], "methods": [3, 8, 64], "saving": 3, "data": [3, 11], "save": 3, "derived": 3, "method": [3, 31], "compatibility": [3, 39, 64], "noise": [4, 5366], "models": [4, 6, 35], ".noise": [4, 2799, 2800, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861], "building": 4, "device": [4, 55], "quantum": [4, 10, 11, 17, 18, 24, 40, 44, 5336, 5340, 5366], "error": 4, "functions": [4, 6, 7, 11, 13, 21, 24, 26, 28, 40, 2161], "transpiler": [4, 31, 48, 49, 50, 64], "passes": [4, 48, 50], "parameters": [4, 64], "provider": [5, 18, 24, 31, 32, 33, 64, 2281, 2313], "backends": [5, 33, 47, 64, 2315, 3486], "legacy": 5, "exceptions": [5, 8, 12, 15, 19, 20, 23, 24, 28, 31, 32, 35, 48, 55], "pulse": [6, 13, 35, 38, 55, 5357], "system": 6, ".pulse": [6, 35, 2863, 2864, 2865, 2866, 2867, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4158, 4159, 4160, 4161, 4163, 4164, 4165, 4166, 4168, 4169, 4170, 4171, 4173, 4174, 4175, 4176, 4178, 4179, 4180, 4181, 4183, 4184, 4185, 4186, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4204, 4205, 4207, 4208, 4210, 4211, 4213, 4214, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331], "utilities": [7, 26, 35, 53], ".utils": [7, 26, 53, 54, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 3927, 3928, 3929, 3930, 3931, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5269, 5270, 5271, 5273, 5274, 5275, 5276, 5277, 5278], "algorithms": [8, 5336], ".algorithms": [8, 65, 68, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 94, 96, 98, 99, 100, 102, 104, 106, 107, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 129, 131, 132, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912], "amplitude": [8, 11], "amplifiers": 8, "estimators": 8, "eigensolvers": 8, "evolvers": 8, "factorizers": 8, "linear": [8, 180], "solvers": [8, 180], "minimum": 8, "optimizers": [8, 682], "phase": 8, "utility": [8, 28, 40], "and": [9, 10, 13, 29, 48, 55, 64, 1318], "schedule": [9, 39, 3993, 5357], "assembler": 9, ".assembler": [9, 914, 915, 916, 917, 918], "disassembler": 9, "runconfig": [9, 913], "circuits": [10, 11, 15, 64, 5336], ".circuit": [10, 11, 12, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 937, 938, 940, 941, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1337, 1338, 1340, 1341, 1344, 1346, 1347, 1349, 1351, 1353, 1356, 1358, 1359, 1361, 1363, 1365, 1366, 1368, 1370, 1375, 1390, 1391, 1395, 1400, 1402, 1403, 1404, 1405, 1408, 1409, 1411, 1413, 1414, 1416, 1417, 1418, 1420, 1422, 1423, 1425, 1426, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1449, 1451, 1452, 1454, 1455, 1460, 1461, 1463, 1464, 1467, 1469, 1473, 1474, 1476, 1482, 1484, 1485, 1487, 1488, 1490, 1492, 1493, 1495, 1497, 1498, 1500, 1502, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1531, 1532, 1534, 1536, 1538, 1540, 1541, 1543, 1545, 1546, 1548, 1549, 1553, 1554, 1557, 1559, 1561, 1562, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1646, 1647, 1648, 1649, 4033, 5281], "overview": [10, 12, 30, 33, 47, 48], "supplementary": [10, 12, 48], "information": [10, 12, 40, 47, 48], "construction": [10, 48], "gates": [10, 11, 31, 35], "instructions": [10, 35, 39], "control": [10, 2287, 2965, 2982, 2999, 3007, 3015, 3032, 3049, 3066, 3083, 3099, 3116, 3132, 3149, 3165, 3182, 3199, 3216, 3233, 3250, 3267, 3284, 3300, 3317, 3334, 3350, 3367, 3392, 3409, 3443, 3460, 3476, 3507, 3523, 3540, 3565, 3582, 3599, 3632, 3649, 3665, 3682, 3698], "flow": [10, 64, 5361], "operations": [10, 11], "parametric": [10, 35], "random": [10, 40], "standard": 11, "directives": 11, "generalized": 11, "boolean": 11, "logic": 11, "basis": [11, 31, 50], "change": [11, 50], "arithmetic": 11, "functional": 11, "pauli": [11, 39, 4463, 4515, 4516, 4519, 4541, 4542], "rotations": [11, 17], "adders": 11, "multipliers": 11, "comparators": 11, "on": [11, 47], "binary": 11, "variables": 11, "other": [11, 64], "particular": 11, "-local": 11, "encoding": 11, "template": 11, "nct": 11, "not": 11, "-cnot": 11, "-toffoli": 11, "clifford": [11, 4354], "rzxgate": [11, 1499], "classicalfunction": [12, 1296], "compiler": [12, 44, 64], ".classicalfunction": [12, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317], "classical": [12, 5336], "_function": [12, 16, 692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 5053, 5261], "compilation": 13, "routines": [13, 36, 46], ".compiler": [13, 1641, 1642, 1643, 1644], "converters": [14, 28, 1922, 2001], ".converters": [14, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1922, 1924, 1925, 1927, 1928, 1929, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946], "dag": [15, 35, 55, 5355], ".dagcircuit": [15, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1750, 1752], "executing": 16, "experiments": 16, ".execute": [16, 5253], "unitary": [17, 51], "initialization": 17, "uniformly": 17, "controlled": [17, 5372], "ibm": [18, 24, 57, 64], "credentials": [19, 3766], ".ibmq": [19, 20, 21, 23, 24, 25, 26, 3705, 3706, 3707, 3708, 3709, 3710, 3712, 3713, 3714, 3715, 3716, 3717, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3767, 3768, 3769, 3770, 3771, 3772, 3774, 3775, 3776, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3831, 3832, 3833, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3870, 3871, 3872, 3873, 3874, 3875, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3900, 3902, 3903, 3904, 3906, 3907, 3908, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3921, 3923, 3924, 3926, 3927, 3928, 3929, 3930, 3931], ".credentials": [19, 3767, 3768, 3769, 3770, 3771, 3772], "experiment": [20, 41], ".experiment": [20, 3774, 3775, 3776, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794], "job": [21, 23, 31, 32, 47, 64, 2293, 2303], ".job": [21, 2480, 2494, 2495, 2900, 3722, 3738, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3831, 3832, 3835, 3855, 3856, 3879, 3914, 4829], "exception": 21, "manager": [23, 48, 55, 64], ".managed": [23, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3846, 3847, 3848, 3849, 3850, 3851, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3870, 3871, 3872, 3873, 3874, 3875], "logging": 24, "runtime": 25, ".runtime": [25, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3890, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3900, 3902, 3903, 3904, 3906, 3907, 3908, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3921, 3923, 3924, 3926], "listing": 25, "programs": [25, 64], "invoking": 25, "program": 25, "interim": 25, "results": [25, 30, 41], "uploading": 25, "conversion": 26, "qobj": [26, 38, 64, 4285], "utils": [26, 54], "misc": 26, "operators": [28, 40, 2024, 2068, 5336], ".opflow": [28, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1928, 1929, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1971, 1972, 1973, 1975, 1977, 1980, 1982, 1983, 1985, 1986, 1988, 1989, 1991, 1992, 1994, 1996, 1997, 1999, 2000, 2001, 2003, 2005, 2007, 2008, 2009, 2011, 2012, 2015, 2016, 2019, 2020, 2022, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2156, 2157, 2158, 2159, 2160, 2161, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264], "operator": [28, 64, 1948, 4424, 5353, 5361], "base": [28, 38, 682, 1922, 1948, 1983, 2001], "class": [28, 32, 682, 1922, 1948, 1983], "globals": 28, "submodules": 28, "running": [29, 2305], "with": [29, 64], "threadpool": 29, "dask": 29, "installation": 29, "of": [29, 30, 47, 64], "packages": 29, "usage": [29, 33], "executor": 29, "example": [29, 33], "execution": 29, "primitives": 30, ".primitives": [30, 2266, 2268, 2270, 2273], "estimator": [30, 2269], "sampler": [30, 2272], "providers": [31, 33], "interface": [31, 44], "version": [31, 39, 47, 64], "support": 31, "changes": [31, 64], "policy": 31, "abstract": [31, 48], "backend": [31, 34, 47, 64, 2275, 2298, 5359], "options": [31, 2309], "status": [31, 2284, 2306], "writing": [31, 51], "new": [31, 64], "run": [31, 2282, 2291, 2969, 2986, 3003, 3011, 3019, 3036, 3053, 3070, 3087, 3103, 3120, 3136, 3153, 3169, 3186, 3203, 3220, 3237, 3254, 3271, 3288, 3304, 3321, 3338, 3354, 3371, 3396, 3413, 3447, 3464, 3480, 3511, 3527, 3544, 3569, 3586, 3603, 3636, 3653, 3669, 3686, 3702], "migrating": 31, "between": 31, "versions": 31, "backendv": [31, 2277, 2285], "migrate": 31, "from": 31, "to": [31, 64], "basicaer": 32, "python": [32, 53, 5355], "-based": 32, "simulators": [32, 5336], ".basicaer": [32, 2893, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2907, 2908, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935], "fake": [33, 2945], ".fake": [33, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3483, 3484, 3486, 3487, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3697, 3698, 3699, 3700, 3701, 3702, 3703], "_provider": [33, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3483, 3484, 3486, 3487, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3749], "special": 33, "objects": [34, 48, 64], ".models": [34, 3933, 3934, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3977, 3978, 3980, 3981], ".instructions": [35, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156], "waveform": [35, 39, 4187], "representation": 35, "channels": [35, 40], ".channels": [35, 4062, 4064, 4066, 4068, 4070, 4072, 4074], "schedules": 35, "transforms": 35, ".transforms": [35, 4204, 4205, 4207, 4208, 4210, 4211, 4213, 4214, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228], "alignments": 35, "canonicalization": 35, "composite": 35, "transform": 35, "builder": [35, 5357], "contexts": 35, "macros": 35, "configuration": [35, 51, 2278], "qasm": [36, 37, 38, 4234], ".qasm": [36, 37, 277, 448, 607, 922, 931, 941, 951, 964, 980, 994, 1014, 1030, 1044, 1058, 1184, 1261, 1271, 1288, 1307, 1327, 1436, 1512, 1765, 1781, 1796, 1810, 1825, 1841, 1857, 1873, 1891, 2398, 2412, 2426, 2440, 2454, 2468, 2512, 2525, 2538, 2551, 2564, 2577, 2590, 2603, 2616, 2629, 2642, 2655, 2668, 2681, 2694, 2707, 2720, 2733, 2746, 2759, 2772, 4230, 4231, 4232, 4233, 4235, 4236, 4237, 4238, 4242, 4243, 4244, 4245], "pygments": 36, ".qobj": [38, 2481, 3810, 3848, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4265, 4266, 4268, 4269, 4271, 4272, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4289, 4290, 4292, 4293, 4295, 4296], "qpy": 39, "serialization": 39, ".qpy": [39, 4297, 4298], "using": [39, 51], "documentation": [39, 60], "format": 39, "_block": [39, 1451, 1706], "_header": 39, "channel": 39, "symbolicpulse": [39, 4182], "mapping": 39, "_calibrations": 39, "_instruction": [39, 336, 507, 666, 1243, 1649, 1965, 2082, 2094, 2108, 2128, 2149, 2193, 2828, 2841, 3991, 4312, 4332, 4351, 4372, 4384, 4418, 4441, 4460, 4483, 4649, 4683, 4702, 4923, 4938, 4939], "range": 39, "sequence": 39, "_evolution": [39, 1452], "sparse": 39, "_pauli": [39, 144, 1938, 1940, 1973, 2052, 2062, 2110, 2130, 2152, 4732, 4733, 4734], "_op": [39, 1705, 1706, 1715, 1725, 1915, 1917, 1938, 1967, 2049, 2051, 2052, 2061, 2062, 2081, 2096, 2110, 2130, 2148, 2151, 2152, 2172, 2175, 2191, 2203, 2207, 2216, 2219, 2227, 2230, 2247, 2250, 2260, 2264], "_list": [39, 2119, 2881, 2885, 4577, 4579, 4591, 4733, 4886], "_elem": 39, "parameter": [39, 1067], "_vector": [39, 2184, 5285, 5349], "_element": 39, "_expr": 39, "header": 39, "metadata": 39, "registers": 39, "_definitions": 39, "complex": 39, ".quantum": [40, 64, 1696, 1697, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4422, 4423, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4546, 4547, 4548, 4549, 4550, 4551, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4706, 4707, 4708, 4709, 4710, 4711, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741], "_info": [40, 64, 3811, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4422, 4423, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4546, 4547, 4548, 4549, 4550, 4551, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4706, 4707, 4708, 4709, 4710, 4711, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 5267], "states": 40, "measures": 40, "analysis": [40, 50], "synthesis": [40, 43, 49, 50, 51], ".result": [41, 2482, 2496, 2901, 3814, 3849, 3916, 4743, 4744, 4746, 4747, 4748, 4749, 4750, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4768, 4769, 4770, 4771, 4772, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813], "distributions": 41, "mitigation": [41, 54], "scheduler": 42, ".scheduler": [42, 4815, 4816], ".synthesis": [43, 44, 51, 4818, 4820, 4822, 4824, 4826, 5227, 5229, 5236, 5238, 5240, 5242, 5243, 5245, 5248, 5249], "evolution": [43, 1948], "approximate": 44, ".transpiler": [44, 48, 50, 51, 52, 4056, 4832, 4833, 4835, 4836, 4837, 4838, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4862, 4863, 4864, 4865, 4869, 4870, 4871, 4872, 4874, 4875, 4876, 4877, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4895, 4896, 4897, 4898, 4899, 4900, 4902, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4916, 4917, 4918, 4919, 4920, 4921, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4942, 4943, 4944, 4945, 4947, 4948, 4950, 4951, 4953, 4954, 4956, 4957, 4959, 4960, 4962, 4963, 4965, 4966, 4968, 4969, 4971, 4972, 4974, 4975, 4977, 4978, 4980, 4981, 4983, 4984, 4986, 4987, 4989, 4990, 4992, 4993, 4995, 4996, 4998, 4999, 5001, 5002, 5004, 5005, 5006, 5007, 5009, 5010, 5012, 5013, 5015, 5016, 5017, 5019, 5020, 5022, 5023, 5025, 5026, 5028, 5029, 5031, 5032, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5063, 5064, 5066, 5067, 5069, 5070, 5072, 5073, 5075, 5076, 5078, 5079, 5081, 5082, 5084, 5085, 5087, 5088, 5090, 5091, 5092, 5094, 5095, 5097, 5098, 5100, 5101, 5103, 5104, 5106, 5107, 5109, 5110, 5112, 5113, 5115, 5116, 5118, 5119, 5121, 5122, 5124, 5125, 5127, 5128, 5130, 5131, 5132, 5133, 5135, 5136, 5138, 5139, 5141, 5142, 5144, 5145, 5147, 5148, 5149, 5150, 5152, 5153, 5154, 5155, 5156, 5158, 5159, 5160, 5161, 5162, 5164, 5165, 5167, 5168, 5170, 5171, 5173, 5174, 5176, 5177, 5179, 5180, 5182, 5183, 5185, 5186, 5188, 5189, 5191, 5192, 5194, 5195, 5197, 5198, 5200, 5201, 5203, 5204, 5206, 5207, 5209, 5210, 5212, 5213, 5215, 5216, 5218, 5219, 5221, 5222, 5224, 5225, 5227, 5229, 5230, 5231, 5232, 5233, 5234, 5236, 5238, 5240, 5242, 5243, 5245, 5248, 5249], ".aqc": [44, 5236, 5238, 5240, 5242, 5243, 5245, 5248, 5249], "mathematical": 44, "detail": 44, "terra": [45, 57, 64, 5365], "tools": [46, 47, 53, 64], ".tools": [46, 47, 64, 4827, 4828, 4829, 4830], "parallel": 46, "monitoring": 46, "jupyter": [47, 64], ".jupyter": 47, "all": 47, "available": [47, 53], "detailed": 47, "single": [47, 55, 4386, 4651], "load": 47, "watcher": 47, "htmlprogressbar": 47, "table": [47, 4614], "copyright": 47, "monospaced": 47, "output": 47, "target": [48, 4922], "pass": [48, 55, 5231, 5232, 5233, 5234], "layout": [48, 50, 4879, 5108], "topology": 48, "scheduling": [48, 50], "fenced": 48, "built": 49, "-in": 49, "plugins": [49, 51], ".passes": [50, 51, 4897, 4918, 4947, 4948, 4950, 4951, 4953, 4954, 4956, 4957, 4959, 4960, 4962, 4963, 4965, 4966, 4968, 4969, 4971, 4972, 4974, 4975, 4977, 4978, 4980, 4981, 4983, 4984, 4986, 4987, 4989, 4990, 4992, 4993, 4995, 4996, 4998, 4999, 5001, 5002, 5004, 5005, 5006, 5007, 5009, 5010, 5012, 5013, 5015, 5016, 5017, 5019, 5020, 5022, 5023, 5025, 5026, 5028, 5029, 5031, 5032, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5063, 5064, 5066, 5067, 5069, 5070, 5072, 5073, 5075, 5076, 5078, 5079, 5081, 5082, 5084, 5085, 5087, 5088, 5090, 5091, 5092, 5094, 5095, 5097, 5098, 5100, 5101, 5103, 5104, 5106, 5107, 5109, 5110, 5112, 5113, 5115, 5116, 5118, 5119, 5121, 5122, 5124, 5125, 5127, 5128, 5130, 5131, 5132, 5133, 5135, 5136, 5138, 5139, 5141, 5142, 5144, 5145, 5147, 5148, 5149, 5150, 5152, 5153, 5154, 5155, 5156, 5158, 5159, 5160, 5161, 5162, 5164, 5165, 5167, 5168, 5170, 5171, 5173, 5174, 5176, 5177, 5179, 5180, 5182, 5183, 5185, 5186, 5188, 5189, 5191, 5192, 5194, 5195, 5197, 5198, 5200, 5201, 5203, 5204, 5206, 5207, 5209, 5210, 5212, 5213, 5215, 5216, 5218, 5219, 5221, 5222, 5224, 5225, 5227, 5229], "selection": 50, "placement": 50, "routing": 50, "optimizations": 50, "calibration": 50, "post": [50, 5342], "transpile": 50, "qubit": [50, 55, 1262, 2290, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701], "additional": 50, ".plugin": [51, 5227, 5229], "plugin": 51, "preset": 52, "passmanagers": 52, ".preset": [52, 5230, 5231, 5232, 5233, 5234], "_passmanagers": [52, 5230, 5231, 5232, 5233, 5234], "algorithm": 53, "optional": 53, "depedency": 53, "checkers": 53, ".optionals": 53, "testers": 53, "components": [53, 64], "external": 53, "libraries": 53, "command": [53, 3954], "-line": 53, "lazy": 53, "checker": 53, "measurement": 54, ".mitigation": [54, 4748, 4770, 5269, 5270, 5271, 5273, 5274], "correction": 54, "visualizations": 55, ".visualization": [55, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5333, 5334, 5335], "counts": [55, 4751], "timeline": 55, "transition": 55, "array": 55, "/matrix": 55, "\u30ed\u30fc\u30ab\u30eb": [56, 5366], "\u69cb\u6210": [56, 5337, 5359], "\u30e6\u30fc\u30b6\u30fc": 56, "\u30d5\u30a1\u30a4\u30eb": 56, "\u74b0\u5883": [56, 57], "\u5909\u6570": [56, 62], "\u8ca2\u732e": 57, "\u3059\u308b": [57, 60, 5337, 5342, 5349, 5353, 5355, 5361, 5365, 5366, 5367, 5370], "\u30b3\u30fc\u30c9": 57, "\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3": 57, "\u306b\u3064\u3044\u3066": [57, 5342, 5359], "\u306f\u3058\u3081": [57, 59, 5355, 5361, 5364, 5365, 5366, 5367, 5368, 5369], "\u30d0\u30b0": 57, "\u5831\u544a": 57, "\u6a5f\u80fd": 57, "\u5f37\u5316": 57, "\u30ea\u30af\u30a8\u30b9\u30c8": 57, "\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9": 57, "contributor": 57, "license": 57, "agreement": 57, "cla": 57, "\u30e9\u30a4\u30bb\u30f3\u30b9": 57, "\u610f\u66f8": 57, "\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8": 57, "\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc": 57, "\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8": 57, "\u6587\u66f8": 57, "\u4e0a\u624b": 57, "\u6700\u521d": 57, "\u63a8\u5968": 57, "\u306b\u95a2\u3059\u308b": [57, 5346, 5351, 5359, 5360, 5362], "\u65b9\u91dd": 57, "\u8b66\u544a": 57, "\u30d6\u30e9\u30f3\u30c1": 57, "\u5b89\u5b9a": 57, "\u30dd\u30ea\u30b7\u30fc": 57, "\u30d0\u30c3\u30af\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0": 57, "\u65b9\u6cd5": [57, 5364, 5370], "\u30d0\u30c3\u30af\u30dd\u30fc\u30c8": 57, "\u30fb\u30e9\u30d9\u30eb": 57, "\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3": 57, "\u69cb\u9020": 57, "\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8": 57, "\u7d71\u5408": 57, "\u7ffb\u8a33": 57, "\u30bd\u30fc\u30b9": 57, "\u304b\u3089": [57, 5349, 5354], "\u30d3\u30eb\u30c9": 57, "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb": [57, 59], "\u4eee\u60f3": 57, "\u958b\u767a": 57, "\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7": 57, "wheel": 57, "\u30ab\u30b9\u30bf\u30e0": [57, 5358, 5364], "\u30aa\u30d7\u30b7\u30e7\u30f3": [57, 5349, 5364], "\u91cf\u5b50": [57, 60, 63, 5341, 5345, 5346, 5350, 5354, 5362, 5364, 5366, 5372], "\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc": [57, 5364], "\u30d0\u30fc\u30b8\u30e7\u30f3": 57, "\u7ba1\u7406": 57, "\u30e1\u30bf\u30d1\u30c3\u30b1\u30fc\u30b8": 57, "\u65b0\u3057\u3044": 57, "\u8ffd\u8de1": 57, "\u8981\u7d20": [57, 5361], "\u8ffd\u52a0": [57, 62, 5362, 5366], "\u30d1\u30c3\u30c1": 57, "\u5897\u52a0": 57, "\u30de\u30a4\u30ca\u30fc": 57, "\u30e1\u30b8\u30e3\u30fc": 57, "\u8981\u4ef6": 57, "\u3088\u304f": 58, "\u3042\u308b": [58, 5339, 5366, 5367], "\u8cea\u554f": 58, "\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0": 59, "\u30b5\u30dd\u30fc\u30c8": 59, "\u30c6\u30a3\u30a2": 59, "\u6e96\u5099": [59, 5342, 5350], "\u3044\u3044": 59, "\u3067\u3059": 59, "\uff1f\u2026": 59, "\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0": [60, 63], "\u9069\u7528": [60, 5342, 5345, 5361, 5367, 5372], "\u8208\u5473": 60, "\u3042\u308a": 60, "\u307e\u3059": [60, 5359, 5364, 5369], "\u5b9f\u969b": 60, "\u30d3\u30c3\u30c8": [60, 5350, 5354, 5366], "\u5b9f\u9a13": [60, 62], "\u5b9f\u884c": [60, 5337, 5342, 5355, 5361, 5365, 5366, 5367], "\u3053\u3068": 60, "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2": 60, "\u8a2d\u8a08": 60, "\u5165\u9580": [62, 5337, 5348], "\u30ef\u30fc\u30af\u30d5\u30ed\u30fc": 62, "\u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7": 62, "\u30b9\u30c6\u30c3\u30d7": [62, 5345, 5372], "\u30d1\u30c3\u30b1\u30fc\u30b8": 62, "\u30a4\u30f3\u30dd\u30fc\u30c8": [62, 5362], "\u521d\u671f\u5316": [62, 5345, 5350, 5364, 5372], "\u30b2\u30fc\u30c8": [62, 5345, 5350, 5352, 5358, 5372], "\u56de\u8def": [62, 63, 5347, 5348, 5351, 5352, 5353, 5354, 5356, 5360, 5362, 5364, 5365, 5367], "\u53ef\u8996": [62, 5347, 5348, 5349, 5354], "\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3": [62, 5340, 5347, 5348, 5364, 5365, 5366, 5367, 5370], "\u7d50\u679c": [62, 5364], "\u6982\u8981": [63, 5350, 5368], "\u5e72\u6e09": 63, "\u30a8\u30f3\u30bf\u30f3\u30b0\u30eb\u30e1\u30f3\u30c8": 63, "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc": 63, "\u6b21\u306a\u308b": 63, "\u5b66\u3073": 63, "release": 64, "notes": 64, "history": 64, "notable": 64, "prelude": 64, "features": 64, "upgrade": 64, "deprecation": 64, "bug": 64, "fixes": 64, "ignis": 64, "known": 64, "issues": 64, "aqua": 64, "critical": 64, "optimization": 64, "module": [64, 5366], "native": 64, "declarative": 64, "json": 64, "gate": [64, 1020], "name": [64, 2279], "arguments": 64, "added": 64, "fixed": 64, "changed": 64, "deprecated": 64, "signatures": 64, "for": 64, ".qi": 64, "replacements": 64, ".states": 64, "removed": 64, "modifications": 64, ".backends": [64, 2321, 2907, 3483, 3705, 3737, 3780], "improvements": 64, "updating": 64, "the": 64, "experience": 64, "your": 64, "highlights": 64, "considerations": 64, "cython": 64, "workflow": 64, "visualization": 64, "mapper": 64, "result": [64, 2304, 4802], "unrollers": 64, "removal": 64, "quantumprogram": 64, "authentication": 64, "qconfig": 64, ".py": 64, "working": 64, "better": 64, "more": 64, "flexible": 64, "names": 64, ".algorithmerror": 65, "amplificationproblem": 66, "amplitudeamplifier": 67, ".amplitudeamplifier": 68, ".amplify": [68, 98], "amplitudeestimation": 69, ".amplitudeestimation": [70, 71, 72, 73, 74], ".compute": [70, 71, 82, 119, 120, 126, 131, 134, 148, 166, 173, 1985, 1988, 1991, 1996, 1999, 2165, 2870, 2871, 2872, 4842], "_confidence": [70, 119], "_interval": [70, 119], "_mle": [71, 120], ".construct": [72, 93, 99, 111, 116, 121, 137, 149, 150, 157, 167, 168, 174, 175, 187, 1935], "_circuit": [72, 93, 99, 111, 116, 137, 139, 149, 157, 167, 174, 184, 187, 355, 360, 1640, 1650, 1652, 1915, 1937, 2031, 2049, 2060, 2067, 2080, 2081, 2107, 2147, 2148, 2172, 2190, 2191, 2203, 2216, 2227, 2247, 2260, 2879, 4023, 4311, 4361, 4370, 4432, 4816, 5286], ".estimate": [73, 78, 94, 104, 112, 117, 122, 138, 139, 851, 879], ".evaluate": [74, 182, 353, 358, 1463, 1467, 1469], "_measurements": [74, 285, 456, 615, 1192], "amplitudeestimationresult": 75, ".amplitudeestimationresult": 76, ".combine": [76, 80, 85, 91, 96, 102, 106, 114, 124, 129, 141, 161, 192, 210, 381, 540, 831, 1119, 3870, 4882], "amplitudeestimator": 77, ".amplitudeestimator": 78, "amplitudeestimatorresult": 79, ".amplitudeestimatorresult": 80, "eigensolver": 81, ".eigensolver": [82, 83], "_eigenvalues": [82, 131, 166], ".supports": [83, 127, 132, 135, 153, 164, 171, 178], "_aux": [83, 127, 132, 135, 153, 164, 171, 178], "_operators": [83, 127, 132, 135, 153, 164, 171, 178], "eigensolverresult": 84, ".eigensolverresult": 85, "estimationproblem": 86, ".estimationproblem": 87, ".rescale": [87, 5154, 5160], "evolutionproblem": 88, ".evolutionproblem": 89, ".validate": [89, 935, 955, 969, 985, 999, 1019, 1035, 1049, 1062, 1276, 1295, 1315, 1331, 1405, 1440, 1449, 1455, 1516, 1529, 1771, 1785, 1801, 1814, 1830, 1846, 1862, 1878, 1897, 2402, 2416, 2430, 2444, 2458, 2472, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2711, 2724, 2737, 2750, 2763, 2776, 3890, 3921, 3931, 4161, 4166, 4171, 4176, 4181, 4186, 5092, 5277], "_params": [89, 686, 689], "evolutionresult": 90, ".evolutionresult": 91, "fasteramplitudeestimation": 92, ".fasteramplitudeestimation": [93, 94], "fasteramplitudeestimationresult": 95, ".fasteramplitudeestimationresult": 96, "grover": [97, 5342, 5343], ".grover": [98, 99, 100], ".optimal": 100, "_num": [100, 685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1417, 1422, 1425], "_iterations": 100, "groverresult": 101, ".groverresult": 102, "hamiltonianphaseestimation": 103, ".hamiltonianphaseestimation": 104, "hamiltonianphaseestimationresult": 105, ".hamiltonianphaseestimationresult": [106, 107], ".filter": [107, 142, 4001, 4014, 5047], "_phases": [107, 142, 146], "imaginaryevolver": 108, ".imaginaryevolver": 109, ".evolve": [109, 155, 163, 4381, 4473, 4500, 4599, 4646], "iterativeamplitudeestimation": 110, ".iterativeamplitudeestimation": [111, 112], "iterativeamplitudeestimationresult": 113, ".iterativeamplitudeestimationresult": 114, "iterativephaseestimation": 115, ".iterativephaseestimation": [116, 117], "maximumlikelihoodamplitudeestimation": 118, ".maximumlikelihoodamplitudeestimation": [119, 120, 121, 122], "_circuits": [121, 916, 1929, 3708, 5276], "maximumlikelihoodamplitudeestimationresult": 123, ".maximumlikelihoodamplitudeestimationresult": 124, "minimumeigensolver": 125, ".minimumeigensolver": [126, 127], "_minimum": [126, 134, 148, 173], "_eigenvalue": [126, 134, 148, 173], "minimumeigensolverresult": 128, ".minimumeigensolverresult": 129, "numpyeigensolver": 130, ".numpyeigensolver": [131, 132], "numpyminimumeigensolver": 133, ".numpyminimumeigensolver": [134, 135], "phaseestimation": [136, 1458], ".phaseestimation": [137, 138, 139], "_from": [139, 2877, 2878, 4003, 4016, 4933, 4938], "_pe": 139, "phaseestimationresult": 140, ".phaseestimationresult": [141, 142], "phaseestimationscale": 143, ".phaseestimationscale": [144, 145, 146], ".from": [144, 242, 243, 413, 414, 572, 573, 914, 1149, 1150, 1284, 1464, 1675, 2119, 2183, 2184, 2329, 2341, 2355, 2808, 2809, 2865, 2866, 3759, 3933, 3939, 3952, 3955, 3958, 3961, 3968, 3974, 3977, 3980, 4247, 4250, 4253, 4256, 4259, 4262, 4265, 4268, 4271, 4274, 4277, 4280, 4283, 4286, 4289, 4292, 4295, 4361, 4362, 4363, 4384, 4385, 4386, 4432, 4433, 4502, 4531, 4546, 4547, 4577, 4578, 4579, 4626, 4649, 4650, 4651, 4804, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4874, 4884, 4885, 4886, 4902], "_sum": 144, ".scale": [145, 146], "_phase": [145, 4052, 4054, 4423, 5357], "qaoa": 147, ".qaoa": [148, 149, 150, 151, 152, 153], "_expectation": [150, 168, 175, 303, 304, 324, 474, 475, 495, 633, 634, 654, 1210, 1211, 1231, 2781, 2782], ".get": [151, 169, 176, 244, 415, 574, 684, 694, 702, 710, 718, 726, 727, 735, 736, 744, 745, 753, 754, 762, 774, 782, 790, 791, 799, 807, 815, 823, 834, 842, 852, 853, 862, 870, 880, 889, 897, 905, 1003, 1151, 1417, 1422, 1425, 1444, 1445, 1538, 1733, 1734, 1735, 1736, 1737, 1738, 1937, 1938, 1939, 1940, 2012, 2016, 2168, 2310, 2322, 2877, 2878, 2908, 3484, 3706, 3749, 3760, 3761, 3762, 3763, 3764, 3872, 3873, 3874, 3875, 3969, 3970, 3985, 3986, 4002, 4015, 4159, 4164, 4169, 4174, 4179, 4184, 4232, 4233, 4755, 4778, 4792, 4805, 4806, 4807, 4808, 4852, 4875, 4888, 4889, 4890, 4907, 4926, 4927, 5147, 5152, 5158, 5263, 5299, 5311, 5323], "_energy": [151, 169, 176], "_evaluation": [151, 169, 176], ".print": [152, 170, 177, 688, 697, 705, 713, 721, 730, 739, 748, 757, 767, 777, 785, 794, 802, 810, 818, 826, 837, 845, 857, 865, 873, 884, 892, 900, 908, 1446], "_settings": [152, 170, 177, 1446, 4023, 4024, 4033, 4056], "realevolver": 154, ".realevolver": 155, "shor": [156, 5344], ".shor": [157, 158, 159], ".factor": 158, ".modinv": 159, "shorresult": 160, ".shorresult": 161, "trotterqrte": 162, ".trotterqrte": [163, 164], "vqd": 165, ".vqd": [166, 167, 168, 169, 170, 171], "vqe": [172, 5337, 5338, 5339, 5340, 5362], ".vqe": [173, 174, 175, 176, 177, 178], ".eval": [179, 1906, 1959, 2028, 2039, 2064, 2075, 2089, 2102, 2117, 2138, 2166, 2167, 2182, 2198, 2211, 2224, 2238, 2255], "_observables": 179, ".linear": [180, 182, 183, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681], "_solvers": [180, 182, 183, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681], "matrices": 180, "observables": 180, "absoluteaverage": 181, ".absoluteaverage": [182, 183, 184, 185], "_classically": [182, 353, 358], ".observable": [183, 184, 354, 355, 359, 360], ".post": [185, 356, 361, 1400], "_processing": [185, 356, 361, 1400, 5342], "hhl": 186, ".hhl": [187, 188], ".solve": [188, 190, 363, 2883, 5061], "linearsolver": 189, ".linearsolver": 190, "linearsolverresult": 191, ".linearsolverresult": 192, "linearsystemmatrix": 193, ".linearsystemmatrix": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351], ".add": [194, 195, 196, 365, 366, 367, 524, 525, 526, 924, 944, 957, 971, 987, 1001, 1007, 1021, 1037, 1051, 1064, 1103, 1104, 1105, 1264, 1278, 1297, 1320, 1429, 1442, 1505, 1655, 1656, 1657, 1658, 1659, 1723, 1724, 1725, 1726, 1727, 1754, 1773, 1787, 1803, 1816, 1832, 1848, 1864, 1880, 1899, 1954, 2033, 2056, 2070, 2085, 2098, 2113, 2133, 2163, 2178, 2196, 2209, 2221, 2233, 2253, 2390, 2404, 2418, 2432, 2446, 2460, 2505, 2518, 2531, 2544, 2557, 2570, 2583, 2596, 2609, 2622, 2635, 2648, 2661, 2674, 2687, 2700, 2713, 2726, 2739, 2752, 2765, 2802, 2803, 2804, 2805, 2806, 2807, 3983, 4218, 4230, 4835, 4840, 4841, 4862, 4869, 4880, 4881, 4923, 5269, 5273], "_bits": [194, 288, 365, 459, 524, 618, 1103, 1195, 4888, 4890, 4892], "_calibration": [195, 247, 366, 418, 525, 577, 1104, 1154, 1655, 1678, 5147, 5152, 5158], "_register": [196, 248, 367, 419, 526, 578, 1105, 1155, 2395, 2409, 2423, 2437, 2451, 2465, 4881], ".append": [197, 368, 527, 1106, 3994, 4009, 4076, 4085, 4095, 4104, 4113, 4122, 4131, 4140, 4149, 4895, 4916], ".assign": [198, 369, 528, 1071, 1087, 1107, 1443, 1901, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 3995, 4010, 5034], "_parameters": [198, 200, 369, 371, 528, 530, 1107, 1109, 1443, 1901, 1902, 1956, 2035, 2072, 2135, 2154, 2180, 2235, 3767, 3986, 3995, 4002, 4010, 4015, 4161, 4166, 4171, 4176, 4181, 4186], ".barrier": [199, 370, 529, 1108, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 4030], ".bind": [200, 371, 530, 1072, 1088, 1109, 1902], ".break": [201, 372, 531, 1110], "_loop": [201, 213, 240, 347, 372, 384, 411, 518, 531, 543, 570, 677, 1110, 1121, 1147, 1254], ".cast": [202, 373, 532, 1111], ".cbit": [203, 374, 533, 1112], "_argument": [203, 278, 374, 449, 533, 608, 1112, 1185], "_conversion": [203, 278, 374, 449, 533, 608, 1112, 1185], ".ccx": [204, 375, 534, 1113], ".ch": [205, 376, 535, 1114, 3996, 3997, 3998, 4011, 4077, 4078, 4079, 4087, 4088, 4089, 4096, 4097, 4098, 4105, 4106, 4107, 4114, 4115, 4116, 4123, 4124, 4125, 4132, 4133, 4134, 4141, 4142, 4143, 4150, 4151, 4152], ".clear": [206, 377, 536, 1115, 1927, 2326, 2338, 2352, 2366, 2379, 4752, 4775, 4789, 4904, 5296, 5308, 5320], ".cls": [207, 208, 378, 379, 537, 538, 1116, 1117], "_instances": [207, 378, 537, 1116], "_prefix": [208, 379, 538, 1117, 5259, 5262], ".cnot": [209, 380, 539, 1118], ".compose": [211, 382, 541, 1120, 1667, 1903, 1957, 2027, 2036, 2073, 2087, 2100, 2115, 2136, 2181, 2236, 2814, 2831, 4301, 4318, 4337, 4356, 4404, 4426, 4446, 4467, 4494, 4525, 4554, 4571, 4620, 4669, 4688, 5130], ".condition": [212, 383, 542], "_bounds": [212, 237, 383, 408, 542, 567, 5035], ".continue": [213, 384, 543, 1121], ".control": [214, 385, 544, 975, 1025, 1122, 1282, 1302, 1334, 1337, 1340, 1346, 1358, 1365, 1390, 1408, 1413, 1416, 1460, 1487, 1492, 1497, 1520, 1531, 1540, 1545, 1548, 1553, 1561, 1565, 1760, 1791, 1820, 1836, 1852, 1868, 1886, 2864, 3384, 3965, 4034], ".copy": [215, 216, 386, 387, 545, 546, 928, 937, 948, 961, 976, 991, 1011, 1026, 1041, 1055, 1123, 1124, 1268, 1283, 1303, 1324, 1433, 1509, 1668, 1720, 1728, 1761, 1777, 1792, 1807, 1821, 1837, 1853, 1869, 1887, 1904, 2157, 2394, 2408, 2422, 2436, 2450, 2464, 2509, 2522, 2535, 2548, 2561, 2574, 2587, 2600, 2613, 2626, 2639, 2652, 2665, 2678, 2691, 2704, 2717, 2730, 2743, 2756, 2769, 2815, 2832, 4303, 4320, 4339, 4358, 4378, 4406, 4428, 4448, 4469, 4496, 4527, 4556, 4573, 4597, 4622, 4642, 4671, 4690, 4753, 4776, 4790, 4883, 4905, 5297, 5309, 5321], "_empty": [216, 387, 546, 1124, 1668, 2159], "_like": [216, 387, 546, 1124, 1668], ".count": [217, 388, 547, 1125, 1669, 1670], "_ops": [217, 289, 388, 460, 547, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1125, 1196, 1274, 1290, 1309, 1329, 1438, 1514, 1669, 1670, 1684, 1698, 1707, 1716, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 2024, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2156, 2157, 2158, 2159, 2160, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774], ".cp": [218, 389, 548, 1126], ".crx": [219, 390, 549, 1127], ".cry": [220, 391, 550, 1128], ".crz": [221, 392, 551, 1129], ".cswap": [222, 393, 552, 1130], ".csx": [223, 394, 553, 1131], ".cu": [224, 395, 554, 1132, 1358, 1359, 1361], ".cu1": [225, 396, 555, 1133], ".cu3": [226, 397, 556, 1134], ".cx": [227, 398, 557, 1135, 4035, 5041], ".cy": [228, 399, 558, 1136], ".cz": [229, 400, 559, 1137], ".dcx": [230, 401, 560, 1138], ".decompose": [231, 402, 561, 1139, 4716, 5069, 5070], ".delay": [232, 403, 562, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1140, 4036, 4037, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102], ".depth": [233, 404, 563, 1141, 1671, 1729, 5075, 5076], ".diagonal": [234, 405, 564, 1142], ".draw": [235, 406, 565, 1002, 1143, 1673, 1732, 3999, 4012, 4080, 4090, 4099, 4108, 4117, 4126, 4135, 4144, 4153, 4158, 4163, 4168, 4173, 4178, 4183, 4188, 4380, 4644, 4844, 4896, 4917, 5333, 5354], ".ecr": [236, 407, 566, 1144], ".eigs": [237, 408, 567], ".extend": [238, 409, 568, 1145], ".find": [239, 410, 569, 1146, 2158, 5004, 5048], "_bit": [239, 410, 569, 1146], ".for": [240, 411, 570, 1147], ".fredkin": [241, 412, 571, 1148], "_qasm": [242, 243, 413, 414, 572, 573, 1149, 1150], "_file": [242, 413, 572, 1149, 1284, 1464], "_str": [243, 414, 573, 1150], "_instructions": [244, 415, 574, 1151, 3990], ".h": [245, 416, 575, 1152], ".hamiltonian": [246, 417, 576, 1153], ".has": [247, 248, 418, 419, 577, 578, 1004, 1154, 1155, 1678, 3707, 3987, 3988, 5264, 5265], "_for": [247, 418, 577, 1154, 1678, 1972, 1973, 2308, 2486, 2500, 2905, 3824, 3919, 4934, 4935, 4936], ".i": [249, 420, 579, 1156], ".id": [250, 421, 580, 1157], ".if": [251, 252, 422, 423, 581, 582, 1158, 1159], "_else": [251, 422, 581, 1158], "_test": [252, 423, 582, 1159], ".initialize": [253, 424, 583, 1160, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 4003, 4016], ".inverse": [254, 425, 584, 929, 949, 962, 977, 992, 1012, 1027, 1042, 1056, 1066, 1161, 1269, 1285, 1304, 1325, 1335, 1338, 1341, 1344, 1347, 1349, 1351, 1353, 1356, 1359, 1361, 1363, 1366, 1368, 1370, 1391, 1395, 1409, 1411, 1414, 1418, 1420, 1423, 1426, 1434, 1454, 1461, 1473, 1482, 1484, 1488, 1490, 1493, 1495, 1498, 1500, 1502, 1510, 1518, 1521, 1523, 1525, 1528, 1532, 1534, 1536, 1541, 1543, 1546, 1549, 1554, 1557, 1559, 1562, 1566, 1762, 1779, 1793, 1808, 1822, 1838, 1854, 1870, 1888, 2396, 2410, 2424, 2438, 2452, 2466, 2510, 2523, 2536, 2549, 2562, 2575, 2588, 2601, 2614, 2627, 2640, 2653, 2666, 2679, 2692, 2705, 2718, 2731, 2744, 2757, 2770, 4477, 4507], ".iso": [255, 426, 585, 1162], ".isometry": [256, 427, 586, 1163], ".iswap": [257, 428, 587, 1164], ".mcp": [258, 429, 588, 1165], ".mcrx": [259, 430, 589, 1166], ".mcry": [260, 431, 590, 1167], ".mcrz": [261, 432, 591, 1168], ".mct": [262, 433, 592, 1169], ".mcu": [263, 434, 593, 1170], ".mcx": [264, 435, 594, 1171], ".measure": [265, 266, 267, 436, 437, 438, 595, 596, 597, 1172, 1173, 1174, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 3386, 3971, 4041, 4042, 4043, 4388, 4603, 4654], "_active": [266, 437, 596, 1173], "_all": [267, 438, 597, 1174, 1311, 1698, 1733, 2802, 2803, 4042, 4490, 4493, 4521, 4524, 4616, 4619], ".ms": [268, 439, 598, 1175], ".num": [269, 270, 271, 272, 440, 441, 442, 443, 599, 600, 601, 602, 1176, 1177, 1178, 1179, 1690, 1691, 1692, 4044, 4710, 4713], "_connected": [269, 440, 599, 1176, 4853, 4854], "_components": [269, 440, 599, 1176, 3787], "_nonlocal": [270, 441, 600, 1177, 2805], "_gates": [270, 441, 600, 1177, 2804, 3936, 4710, 4713], "_tensor": [271, 442, 601, 1178, 1692], "_factors": [271, 272, 442, 443, 601, 602, 1178, 1179, 1692], "_unitary": [272, 313, 320, 443, 484, 491, 602, 643, 650, 1179, 1220, 1227, 2791, 2797, 2846, 2856, 3764, 3875, 4327, 4346, 4365, 4413, 4435, 4455, 4560, 4582, 4678, 4697, 4738, 4808, 5236], ".p": [273, 444, 603, 842, 843, 844, 845, 846, 847, 848, 1180], ".pauli": [274, 445, 604, 1181, 1451, 1452, 2857, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4725], ".power": [275, 446, 605, 979, 1029, 1182, 1287, 1306, 1764, 1795, 1824, 1840, 1856, 1872, 1890, 2044, 2241, 2822, 2836, 4308, 4329, 4348, 4367, 4415, 4437, 4457, 4479, 4511, 4537, 4562, 4586, 4632, 4680, 4699], ".prepare": [276, 447, 606, 1183, 2881, 2882], "_state": [276, 305, 309, 316, 447, 476, 480, 487, 606, 635, 639, 646, 1183, 1212, 1216, 1223, 2302, 2308, 2479, 2486, 2493, 2500, 2783, 2787, 2793, 2899, 2905, 3806, 3824, 3919, 5291, 5292, 5293, 5294, 5342], ".qbit": [278, 449, 608, 1185], ".qubit": [279, 280, 281, 450, 451, 452, 609, 610, 611, 1186, 1187, 1188, 3387, 3945, 3990, 4048], "_duration": [279, 450, 609, 1186, 3927, 3996, 4011, 4077, 4087, 4096, 4105, 4114, 4123, 4132, 4141, 4150], "_start": [280, 451, 610, 1187, 3997, 4078, 4088, 4097, 4106, 4115, 4124, 4133, 4142, 4151], "_time": [280, 281, 451, 452, 610, 611, 1187, 1188, 3997, 3998, 4078, 4079, 4088, 4089, 4097, 4098, 4106, 4107, 4115, 4116, 4124, 4125, 4133, 4134, 4142, 4143, 4151, 4152], "_stop": [281, 452, 611, 1188, 3998, 4079, 4089, 4098, 4107, 4116, 4125, 4134, 4143, 4152], ".r": [282, 453, 612, 1189, 5056], ".rcccx": [283, 454, 613, 1190], ".rccx": [284, 455, 614, 1191], ".remove": [285, 456, 615, 1192, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 3992, 4226, 4227, 4838, 4865, 4872, 4898, 4919], "_final": [285, 456, 615, 1192, 2302, 2308, 2479, 2486, 2493, 2500, 2899, 2905, 3806, 3824, 3919], ".repeat": [286, 457, 616, 932, 952, 965, 981, 995, 1015, 1031, 1045, 1059, 1193, 1272, 1289, 1308, 1328, 1437, 1513, 1766, 1782, 1797, 1811, 1826, 1842, 1858, 1874, 1892, 2399, 2413, 2427, 2441, 2455, 2469, 2513, 2526, 2539, 2552, 2565, 2578, 2591, 2604, 2617, 2630, 2643, 2656, 2669, 2682, 2695, 2708, 2721, 2734, 2747, 2760, 2773], ".reset": [287, 458, 617, 1194, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 2811, 2860, 4392, 4607, 4658, 5057, 5255], ".reverse": [288, 289, 459, 460, 618, 619, 933, 953, 967, 982, 996, 1017, 1032, 1047, 1060, 1195, 1196, 1274, 1290, 1309, 1329, 1438, 1514, 1707, 1767, 1783, 1798, 1812, 1827, 1843, 1859, 1875, 1893, 2400, 2414, 2428, 2442, 2456, 2470, 2514, 2527, 2540, 2553, 2566, 2579, 2592, 2605, 2618, 2631, 2644, 2657, 2670, 2683, 2696, 2709, 2722, 2735, 2748, 2761, 2774, 4393, 4439, 4659], ".rv": [290, 461, 620, 1197], ".rx": [291, 462, 621, 1198], ".rxx": [292, 463, 622, 1199], ".ry": [293, 464, 623, 1200], ".ryy": [294, 465, 624, 1201], ".rz": [295, 466, 625, 1202], ".rzx": [296, 467, 626, 1203, 1587, 1588, 1589, 1590, 1591, 1592], ".rzz": [297, 468, 627, 1204], ".s": [298, 469, 628, 1205], ".save": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 689, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 3752, 3791], "_amplitudes": [299, 300, 470, 471, 629, 630, 1206, 1207, 2777, 2778], "_squared": [300, 471, 630, 1207, 2778], "_clifford": [301, 472, 631, 1208, 1939, 2779, 4716, 4728], "_density": [302, 315, 323, 473, 486, 494, 632, 645, 653, 1209, 1222, 1230, 2173, 2192, 2204, 2217, 2248, 2261, 2780, 2792, 4730], "_matrix": [302, 305, 315, 316, 323, 473, 476, 486, 487, 494, 632, 635, 645, 646, 653, 984, 998, 1034, 1209, 1212, 1222, 1223, 1230, 1294, 1314, 1375, 1485, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 1916, 1917, 1966, 1967, 2050, 2051, 2061, 2083, 2095, 2096, 2109, 2129, 2150, 2151, 2173, 2174, 2175, 2192, 2194, 2204, 2205, 2217, 2218, 2219, 2229, 2230, 2248, 2249, 2250, 2261, 2263, 2264, 2780, 2783, 2792, 2793, 2869, 2874, 2877, 2878, 2880, 4313, 4373, 4485, 4516, 4542, 4550, 4565, 4592, 4637, 4730, 4746, 4748, 4768, 4770, 4842, 5252, 5254], "_value": [303, 304, 324, 474, 475, 495, 633, 634, 654, 1210, 1211, 1231, 2781, 2782, 4383, 4601, 4648, 4743, 4747, 4769], "_variance": [304, 475, 634, 1211, 1985, 1988, 1991, 1996, 1999, 2167, 2782], "_product": [305, 316, 476, 487, 635, 646, 1212, 1223, 2783, 2793], "_probabilities": [306, 307, 325, 477, 478, 496, 636, 637, 655, 1213, 1214, 1232, 2168, 2784, 2785, 4744, 4749, 4771, 4774, 4779, 4788, 4793], "_dict": [307, 311, 478, 482, 637, 641, 914, 915, 1214, 1218, 2183, 2228, 2262, 2785, 2789, 2809, 2812, 2827, 2840, 3759, 3765, 3924, 3933, 3934, 3939, 3950, 3952, 3953, 3955, 3956, 3958, 3959, 3961, 3962, 3968, 3972, 3974, 3975, 3977, 3978, 3980, 3981, 4205, 4208, 4211, 4214, 4217, 4247, 4248, 4250, 4251, 4253, 4254, 4256, 4257, 4259, 4260, 4262, 4263, 4265, 4266, 4268, 4269, 4271, 4272, 4274, 4275, 4277, 4278, 4280, 4281, 4283, 4284, 4286, 4287, 4289, 4290, 4292, 4293, 4295, 4296, 4362, 4371, 4390, 4398, 4605, 4656, 4664, 4804, 4809, 4884], "_stabilizer": [308, 317, 326, 479, 488, 497, 638, 647, 656, 1215, 1224, 1233, 2786, 2794, 4736], "_statevector": [310, 311, 318, 327, 481, 482, 489, 498, 640, 641, 648, 657, 1217, 1218, 1225, 1234, 2788, 2789, 2795, 3763, 3874, 4400, 4737, 4807], "_superop": [312, 319, 483, 490, 642, 649, 1219, 1226, 2790, 2796], ".sdg": [314, 485, 644, 1221], ".set": [315, 316, 317, 318, 319, 320, 486, 487, 488, 489, 490, 491, 645, 646, 647, 648, 649, 650, 690, 691, 698, 699, 706, 707, 714, 715, 722, 723, 731, 732, 740, 741, 749, 750, 758, 759, 770, 771, 778, 779, 786, 787, 795, 796, 803, 804, 811, 812, 819, 820, 827, 828, 838, 839, 846, 847, 858, 859, 866, 867, 874, 875, 885, 886, 893, 894, 901, 902, 909, 910, 1005, 1222, 1223, 1224, 1225, 1226, 1227, 2311, 2334, 2335, 2346, 2347, 2360, 2361, 2373, 2374, 2386, 2387, 2792, 2793, 2794, 2795, 2796, 2797, 2824, 2825, 2837, 2838, 2916, 2925, 2934, 2943, 2952, 2961, 2978, 2995, 3028, 3045, 3062, 3079, 3095, 3112, 3128, 3145, 3161, 3178, 3195, 3212, 3229, 3246, 3263, 3280, 3296, 3313, 3330, 3346, 3363, 3380, 3389, 3405, 3422, 3431, 3439, 3456, 3472, 3494, 3503, 3519, 3536, 3552, 3561, 3578, 3595, 3611, 3619, 3628, 3645, 3661, 3678, 3694, 3731, 3886, 3897, 4051, 4052, 4481, 5256], ".size": [321, 492, 651, 1228, 1709, 1740, 4859, 5188, 5189], ".snapshot": [322, 323, 324, 325, 326, 327, 493, 494, 495, 496, 497, 498, 652, 653, 654, 655, 656, 657, 1229, 1230, 1231, 1232, 1233, 1234, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 4055, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156], ".squ": [328, 499, 658, 1235], ".swap": [329, 500, 659, 1236, 4893, 5017], ".sx": [330, 501, 660, 1237], ".sxdg": [331, 502, 661, 1238], ".t": [332, 503, 662, 1239, 3948, 3949], ".tdg": [333, 504, 663, 1240], ".tensor": [334, 505, 664, 1241, 1913, 1964, 2047, 2066, 2079, 2093, 2106, 2127, 2145, 2171, 2189, 2202, 2215, 2245, 2259, 2826, 2839, 4310, 4331, 4350, 4369, 4397, 4417, 4440, 4459, 4482, 4514, 4540, 4564, 4590, 4611, 4635, 4663, 4682, 4701], ".to": [335, 336, 506, 507, 665, 666, 915, 984, 998, 1034, 1242, 1243, 1294, 1314, 1375, 1485, 1713, 1742, 1743, 1769, 1800, 1829, 1845, 1861, 1877, 1895, 1915, 1916, 1917, 1918, 1965, 1966, 1967, 2031, 2049, 2050, 2051, 2052, 2053, 2060, 2061, 2062, 2067, 2080, 2081, 2082, 2083, 2094, 2095, 2096, 2107, 2108, 2109, 2110, 2111, 2128, 2129, 2130, 2131, 2147, 2148, 2149, 2150, 2151, 2152, 2172, 2173, 2174, 2175, 2190, 2191, 2192, 2193, 2194, 2203, 2204, 2205, 2206, 2207, 2216, 2217, 2218, 2219, 2227, 2228, 2229, 2230, 2231, 2247, 2248, 2249, 2250, 2260, 2261, 2262, 2263, 2264, 2812, 2827, 2828, 2829, 2840, 2841, 3765, 3924, 3928, 3934, 3950, 3953, 3956, 3959, 3962, 3972, 3975, 3978, 3981, 4205, 4208, 4211, 4214, 4217, 4248, 4251, 4254, 4257, 4260, 4263, 4266, 4269, 4272, 4275, 4278, 4281, 4284, 4287, 4290, 4293, 4296, 4311, 4312, 4313, 4314, 4332, 4333, 4351, 4352, 4370, 4371, 4372, 4373, 4374, 4398, 4399, 4400, 4418, 4419, 4441, 4442, 4460, 4461, 4483, 4484, 4485, 4515, 4516, 4541, 4542, 4550, 4551, 4565, 4566, 4591, 4592, 4593, 4612, 4636, 4637, 4664, 4665, 4683, 4684, 4702, 4703, 4809], "_gate": [335, 506, 665, 1242, 1648, 2848, 3943, 3988, 4714, 5034, 5289], ".toffoli": [337, 508, 667, 1244], ".u": [338, 339, 340, 341, 509, 510, 511, 512, 668, 669, 670, 671, 1245, 1246, 1247, 1248, 1540, 1541, 1543, 1545, 1546, 4057, 4058, 4059], ".uc": [342, 513, 672, 1249], ".ucrx": [343, 514, 673, 1250], ".ucry": [344, 515, 674, 1251], ".ucrz": [345, 516, 675, 1252], ".unitary": [346, 517, 676, 1253, 5229], ".while": [347, 518, 677, 1254], ".width": [348, 519, 678, 1255, 1717, 5224, 5225], ".x": [349, 520, 679, 1256, 4060], ".y": [350, 521, 680, 1257], ".z": [351, 522, 681, 1258, 2156, 2157, 2158, 2159, 2160], "linearsystemobservable": 352, ".linearsystemobservable": [353, 354, 355, 356], "matrixfunctional": 357, ".matrixfunctional": [358, 359, 360, 361], "numpylinearsolver": 362, ".numpylinearsolver": 363, "numpymatrix": 364, ".numpymatrix": [365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522], "tridiagonaltoeplitz": 523, ".tridiagonaltoeplitz": [524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681], ".optimizers": [682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912], "optimizer": [682, 822], "local": 682, "global": 682, "adam": 683, ".adam": [684, 685, 686, 687, 688, 689, 690, 691, 692], "_support": [684, 694, 702, 710, 718, 727, 736, 745, 754, 762, 774, 782, 791, 799, 807, 815, 823, 834, 842, 853, 862, 870, 880, 889, 897, 905], "_level": [684, 694, 702, 710, 718, 727, 736, 745, 754, 762, 774, 782, 791, 799, 807, 815, 823, 834, 842, 853, 862, 870, 880, 889, 897, 905, 3817], ".gradient": [685, 695, 703, 711, 719, 728, 737, 746, 755, 763, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906, 1076, 1092, 2008, 2011, 2012, 5242, 5248], "_diff": [685, 695, 703, 711, 719, 728, 737, 746, 755, 764, 775, 783, 792, 800, 808, 816, 824, 835, 843, 854, 863, 871, 881, 890, 898, 906], ".load": [686, 3750, 4298], ".minimize": [687, 696, 704, 712, 720, 729, 738, 747, 756, 766, 776, 784, 793, 801, 809, 817, 825, 836, 844, 855, 864, 872, 882, 891, 899, 907], "_options": [688, 691, 697, 699, 705, 707, 713, 715, 721, 723, 730, 732, 739, 741, 748, 750, 757, 759, 767, 771, 777, 779, 785, 787, 794, 796, 802, 804, 810, 812, 818, 820, 826, 828, 837, 839, 845, 847, 857, 859, 865, 867, 873, 875, 884, 886, 892, 894, 900, 902, 908, 910, 2283, 2292, 2312, 2326, 2335, 2338, 2347, 2352, 2361, 2366, 2374, 2379, 2387, 2916, 2925, 2934, 2943, 2952, 2961, 2970, 2978, 2987, 2995, 3004, 3012, 3020, 3028, 3037, 3045, 3054, 3062, 3071, 3079, 3088, 3095, 3104, 3112, 3121, 3128, 3137, 3145, 3154, 3161, 3170, 3178, 3187, 3195, 3204, 3212, 3221, 3229, 3238, 3246, 3255, 3263, 3272, 3280, 3289, 3296, 3305, 3313, 3322, 3330, 3339, 3346, 3355, 3363, 3372, 3380, 3389, 3397, 3405, 3414, 3422, 3431, 3439, 3448, 3456, 3465, 3472, 3481, 3494, 3503, 3512, 3519, 3528, 3536, 3545, 3552, 3561, 3570, 3578, 3587, 3595, 3604, 3611, 3619, 3628, 3637, 3645, 3654, 3661, 3670, 3678, 3687, 3694, 3703, 3731, 3798, 3897], "_max": [690, 698, 706, 714, 722, 731, 740, 749, 758, 770, 778, 786, 795, 803, 811, 819, 827, 838, 846, 858, 866, 874, 885, 893, 901, 909], "_evals": [690, 698, 706, 714, 722, 731, 740, 749, 758, 770, 778, 786, 795, 803, 811, 819, 827, 838, 846, 858, 866, 874, 885, 893, 901, 909], "_grouped": [690, 698, 706, 714, 722, 731, 740, 749, 758, 770, 778, 786, 795, 803, 811, 819, 827, 838, 846, 858, 866, 874, 885, 893, 901, 909], ".wrap": [692, 700, 708, 716, 724, 733, 742, 751, 760, 772, 780, 788, 797, 805, 813, 821, 829, 840, 848, 860, 868, 876, 887, 895, 903, 911, 5278], "aqgd": 693, ".aqgd": [694, 695, 696, 697, 698, 699, 700], "bobyqa": 701, ".bobyqa": [702, 703, 704, 705, 706, 707, 708], "cg": 709, ".cg": [710, 711, 712, 713, 714, 715, 716], "cobyla": 717, ".cobyla": [718, 719, 720, 721, 722, 723, 724], "crs": 725, ".crs": [726, 727, 728, 729, 730, 731, 732, 733], "_nlopt": [726, 735, 744, 753, 790], "_optimizer": [726, 735, 744, 753, 790], "direct": [734, 743], "_l": [734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751], ".direct": [735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 1730, 1731], "_rand": [743, 744, 745, 746, 747, 748, 749, 750, 751], "esch": 752, ".esch": [753, 754, 755, 756, 757, 758, 759, 760], "gsls": 761, ".gsls": [762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772], "_approximation": 763, ".ls": 765, "_optimize": 765, ".sample": [768, 769, 1929, 2170, 2188, 2201, 2214, 2226, 2244, 2258, 4394, 4395, 4608, 4609, 4660, 4661], "_points": 768, "_set": [769, 3837, 3856, 5004, 5007], "gradientdescent": 773, ".gradientdescent": [774, 775, 776, 777, 778, 779, 780], "imfil": 781, ".imfil": [782, 783, 784, 785, 786, 787, 788], "isres": 789, ".isres": [790, 791, 792, 793, 794, 795, 796, 797], "_bfgs": [798, 799, 800, 801, 802, 803, 804, 805, 841, 842, 843, 844, 845, 846, 847, 848], "_b": [798, 799, 800, 801, 802, 803, 804, 805], ".l": [799, 800, 801, 802, 803, 804, 805], "nelder": 806, "_mead": [806, 807, 808, 809, 810, 811, 812, 813], ".nelder": [807, 808, 809, 810, 811, 812, 813], "nft": 814, ".nft": [815, 816, 817, 818, 819, 820, 821], ".optimizer": [823, 824, 825, 826, 827, 828, 829], "optimizerresult": 830, ".optimizerresult": 831, "optimizersupportlevel": 832, "powell": 833, ".powell": [834, 835, 836, 837, 838, 839, 840], "qnspsa": 849, ".qnspsa": [850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860], ".calibrate": [850, 878], "_stddev": [851, 879], "_fidelity": [852, 4714, 4722, 4726, 4740, 5270, 5274], ".optimize": [856, 883, 5130, 5131, 5132, 5133, 5135, 5136, 5138, 5139], "slsqp": 861, ".slsqp": [862, 863, 864, 865, 866, 867, 868], "snobfit": 869, ".snobfit": [870, 871, 872, 873, 874, 875, 876], "spsa": 877, ".spsa": [878, 879, 880, 881, 882, 883, 884, 885, 886, 887], "scipyoptimizer": 888, ".scipyoptimizer": [889, 890, 891, 892, 893, 894, 895], "tnc": 896, ".tnc": [897, 898, 899, 900, 901, 902, 903], "umda": 904, ".umda": [905, 906, 907, 908, 909, 910, 911], ".nlopts": 912, "installing": 912, "nlopt": 912, ".runconfig": [914, 915], ".assemble": [916, 917, 925, 945, 958, 972, 988, 1008, 1022, 1038, 1052, 1265, 1279, 1298, 1321, 1430, 1506, 1641, 1756, 1774, 1788, 1804, 1817, 1833, 1849, 1865, 1882, 2391, 2405, 2419, 2433, 2447, 2461, 2506, 2519, 2532, 2545, 2558, 2571, 2584, 2597, 2610, 2623, 2636, 2649, 2662, 2675, 2688, 2701, 2714, 2727, 2740, 2753, 2766, 5251], "_schedules": 917, ".disassemble": 918, "ancillaqubit": 919, "ancillaregister": 920, ".ancillaregister": [921, 922], ".index": [921, 940, 1100, 1260], "breakloopop": 923, ".breakloopop": [924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "_decomposition": [924, 944, 957, 971, 987, 1007, 1021, 1037, 1051, 1264, 1278, 1297, 1320, 1429, 1505, 1754, 1773, 1787, 1803, 1816, 1832, 1848, 1864, 1880, 2390, 2404, 2418, 2432, 2446, 2460, 2505, 2518, 2531, 2544, 2557, 2570, 2583, 2596, 2609, 2622, 2635, 2648, 2661, 2674, 2687, 2700, 2713, 2726, 2739, 2752, 2765], ".broadcast": [926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767], "_arguments": [926, 946, 959, 973, 989, 1009, 1023, 1039, 1053, 1266, 1280, 1299, 1322, 1431, 1507, 1527, 1757, 1775, 1789, 1805, 1818, 1834, 1850, 1866, 1883, 2392, 2406, 2420, 2434, 2448, 2462, 2507, 2520, 2533, 2546, 2559, 2572, 2585, 2598, 2611, 2624, 2637, 2650, 2663, 2676, 2689, 2702, 2715, 2728, 2741, 2754, 2767, 5260], ".c": [927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1334, 1335, 1337, 1338, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768], "_if": [927, 947, 960, 974, 990, 1010, 1024, 1040, 1054, 1065, 1267, 1281, 1300, 1323, 1432, 1508, 1758, 1776, 1790, 1806, 1819, 1835, 1851, 1867, 1884, 2393, 2407, 2421, 2435, 2449, 2463, 2508, 2521, 2534, 2547, 2560, 2573, 2586, 2599, 2612, 2625, 2638, 2651, 2664, 2677, 2690, 2703, 2716, 2729, 2742, 2755, 2768, 5345, 5372], ".is": [930, 950, 963, 978, 993, 1013, 1028, 1043, 1057, 1077, 1093, 1270, 1286, 1305, 1326, 1402, 1435, 1474, 1511, 1680, 1681, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 1907, 2120, 2121, 2159, 2397, 2411, 2425, 2439, 2453, 2467, 2511, 2524, 2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 2641, 2654, 2667, 2680, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 2810, 3768, 3943, 3944, 4005, 4017, 4018, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4082, 4092, 4101, 4110, 4119, 4128, 4137, 4146, 4155, 4160, 4165, 4170, 4175, 4180, 4185, 4189, 4324, 4325, 4326, 4327, 4343, 4344, 4345, 4346, 4365, 4387, 4410, 4411, 4412, 4413, 4435, 4452, 4453, 4454, 4455, 4560, 4582, 4602, 4653, 4675, 4676, 4677, 4678, 4694, 4695, 4696, 4697, 4853, 5051, 5266], "_parameterized": [930, 950, 963, 978, 993, 1013, 1028, 1043, 1057, 1270, 1286, 1305, 1326, 1435, 1511, 1763, 1780, 1794, 1809, 1823, 1839, 1855, 1871, 1889, 2397, 2411, 2425, 2439, 2453, 2467, 2511, 2524, 2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 2641, 2654, 2667, 2680, 2693, 2706, 2719, 2732, 2745, 2758, 2771, 4005, 4017, 4062, 4064, 4066, 4068, 4070, 4072, 4074, 4082, 4092, 4101, 4110, 4119, 4128, 4137, 4146, 4155, 4160, 4165, 4170, 4175, 4180, 4185, 4189], ".soft": [934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775], "_compare": [934, 954, 968, 983, 997, 1018, 1033, 1048, 1061, 1275, 1292, 1312, 1330, 1439, 1515, 1768, 1784, 1799, 1813, 1828, 1844, 1860, 1876, 1894, 2401, 2415, 2429, 2443, 2457, 2471, 2515, 2528, 2541, 2554, 2567, 2580, 2593, 2606, 2619, 2632, 2645, 2658, 2671, 2684, 2697, 2710, 2723, 2736, 2749, 2762, 2775], "_parameter": [935, 955, 969, 985, 999, 1019, 1035, 1049, 1062, 1276, 1295, 1315, 1331, 1405, 1440, 1449, 1455, 1516, 1529, 1771, 1785, 1801, 1814, 1830, 1846, 1862, 1878, 1897, 2402, 2416, 2430, 2444, 2458, 2472, 2516, 2529, 2542, 2555, 2568, 2581, 2594, 2607, 2620, 2633, 2646, 2659, 2672, 2685, 2698, 2711, 2724, 2737, 2750, 2763, 2776], "circuitinstruction": 936, ".circuitinstruction": [937, 938], ".replace": [938, 966, 1016, 1046, 1273, 1706, 4006, 4019, 4899, 4920], "classicalregister": 939, ".classicalregister": [940, 941], "clbit": 942, "continueloopop": 943, ".continueloopop": [944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955], "controlflowop": 956, ".controlflowop": [957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969], "_blocks": [966, 1016, 1046, 1273], "controlledgate": 970, ".controlledgate": [971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985], "delay": [986, 4094, 5357], "equivalencelibrary": 1000, ".equivalencelibrary": [1001, 1002, 1003, 1004, 1005], "_equivalence": 1001, "_entry": [1003, 1004, 1005], "forloopop": 1006, ".forloopop": [1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019], ".gate": [1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1677, 2850, 2851, 2852, 3940, 3941, 3942, 4720, 5049], "ifelseop": 1036, ".ifelseop": [1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049], ".instruction": [1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 4928, 4929, 4930], "instructionset": 1063, ".instructionset": [1064, 1065, 1066], ".parameter": [1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 2009], ".arccos": [1068, 1084], ".arcsin": [1069, 1085], ".arctan": [1070, 1086], ".conjugate": [1073, 1089, 1759, 1885, 4302, 4319, 4338, 4357, 4377, 4405, 4427, 4447, 4468, 4495, 4526, 4555, 4572, 4596, 4621, 4641, 4670, 4689], ".cos": [1074, 1090, 4191], ".exp": [1075, 1091, 2040, 2090, 2103, 2118, 2139], "_real": [1077, 1093], ".log": [1078, 1094, 1960, 2041, 2140], ".sin": [1079, 1095, 4199], ".subs": [1080, 1096], ".sympify": [1081, 1097], ".tan": [1082, 1098], "parameterexpression": 1083, ".parameterexpression": [1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098], "parametervector": 1099, ".parametervector": [1100, 1101], ".resize": 1101, ".quantumcircuit": [1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258], "quantumregister": 1259, ".quantumregister": [1260, 1261], "whileloopop": 1263, ".whileloopop": [1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276], "booleanexpression": 1277, ".booleanexpression": [1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295], "_dimacs": [1284, 1464], ".simulate": [1291, 1310, 1311], ".synth": [1293, 1313], ".compile": [1301, 5236], ".classicalfunctioncompilertypeerror": 1316, ".classicalfunctionparseerror": 1317, "barrier": 1319, "3sxgate": 1332, "3xgate": [1333, 1334, 1335, 1478], "4xgate": [1336, 1337, 1338], "ccxgate": 1339, ".ccxgate": [1340, 1341], "cdkmripplecarryadder": 1342, "chgate": 1343, ".chgate": 1344, "cphasegate": 1345, ".cphasegate": [1346, 1347], "crxgate": 1348, ".crxgate": 1349, "crygate": 1350, ".crygate": 1351, "crzgate": 1352, ".crzgate": 1353, "csxgate": 1354, "cswapgate": 1355, ".cswapgate": 1356, "cu": [1357, 1360], "1gate": [1357, 1358, 1359, 1539, 1540, 1541], "3gate": [1360, 1361, 1544, 1545, 1546], "cugate": 1362, ".cugate": 1363, "cxgate": 1364, ".cxgate": [1365, 1366], "cygate": 1367, ".cygate": 1368, "czgate": 1369, ".czgate": 1370, "dcxgate": 1371, "diagonal": 1372, "draperqftadder": 1373, "ecrgate": 1374, ".ecrgate": 1375, "efficientsu": 1376, "evolvedoperatoransatz": 1377, "exactreciprocal": 1378, "excitationpreserving": 1379, "fourierchecking": 1380, "functionalpaulirotations": 1381, "gms": 1382, "gr": 1383, "grx": 1384, "gry": 1385, "grz": 1386, "graphstate": 1387, "groveroperator": 1388, "hgate": 1389, ".hgate": [1390, 1391], "hrscumulativemultiplier": 1392, "hiddenlinearfunction": 1393, "igate": 1394, ".igate": 1395, "iqp": 1396, "innerproduct": 1397, "integercomparator": 1398, "linearamplitudefunction": 1399, ".linearamplitudefunction": 1400, "linearfunction": 1401, ".linearfunction": [1402, 1403, 1404, 1405], "_permutation": 1402, ".permutation": 1403, "_pattern": 1403, ".synthesize": [1404, 4818, 4820, 4822, 4824, 4826], "linearpaulirotations": 1406, "mcmt": 1407, ".mcmt": [1408, 1409], "mcmtvchain": 1410, ".mcmtvchain": 1411, "mcphasegate": 1412, ".mcphasegate": [1413, 1414], "mcxgate": 1415, ".mcxgate": [1416, 1417, 1418], "_ancilla": [1417, 1422, 1425], "_qubits": [1417, 1422, 1425, 1445, 1476, 1659, 1691, 1727, 3937, 3969, 4037, 4044], "mcxgraycode": 1419, ".mcxgraycode": 1420, "mcxrecursive": 1421, ".mcxrecursive": [1422, 1423], "mcxvchain": 1424, ".mcxvchain": [1425, 1426], "msgate": 1427, "measure": [1428, 2289, 2967, 2984, 3001, 3009, 3017, 3034, 3051, 3068, 3085, 3101, 3118, 3134, 3151, 3167, 3184, 3201, 3218, 3235, 3252, 3269, 3286, 3302, 3319, 3336, 3352, 3369, 3394, 3411, 3445, 3462, 3478, 3509, 3525, 3542, 3567, 3584, 3601, 3634, 3651, 3667, 3684, 3700], "nlocal": 1441, ".nlocal": [1442, 1443, 1444, 1445, 1446], "_layer": [1442, 1676, 5048], "_entangler": [1444, 1538, 5263, 5277], "_map": [1444, 1538, 4830, 4882, 4924, 4929, 4938, 5263, 5277, 5287, 5288, 5289], "_unentangled": 1445, "or": 1447, "paulievolutiongate": 1448, ".paulievolutiongate": 1449, "paulifeaturemap": 1450, ".paulifeaturemap": [1451, 1452], "pauligate": 1453, ".pauligate": [1454, 1455], "paulitwodesign": 1456, "permutation": 1457, "phasegate": 1459, ".phasegate": [1460, 1461], "phaseoracle": 1462, ".phaseoracle": [1463, 1464], "_bitstring": 1463, "piecewisechebyshev": 1465, "piecewiselinearpaulirotations": 1466, ".piecewiselinearpaulirotations": 1467, "piecewisepolynomialpaulirotations": 1468, ".piecewisepolynomialpaulirotations": 1469, "polynomialpaulirotations": 1470, "qaoaansatz": 1471, "qft": 1472, ".qft": [1473, 1474], "_inverse": 1474, "quadraticform": 1475, ".quadraticform": 1476, ".required": 1476, "_result": [1476, 3778, 3781, 3784, 3792, 3912], "quantumvolume": 1477, "rc": 1478, "rccxgate": 1479, "rgqftmultiplier": 1480, "rgate": 1481, ".rgate": 1482, "rvgate": 1483, ".rvgate": [1484, 1485], "rxgate": 1486, ".rxgate": [1487, 1488], "rxxgate": 1489, ".rxxgate": 1490, "rygate": 1491, ".rygate": [1492, 1493], "ryygate": 1494, ".ryygate": 1495, "rzgate": 1496, ".rzgate": [1497, 1498], ".rzxgate": 1500, "rzzgate": 1501, ".rzzgate": 1502, "realamplitudes": 1503, "reset": 1504, "sgate": 1517, ".sgate": 1518, "sxgate": 1519, ".sxgate": [1520, 1521], "sxdggate": 1522, ".sxdggate": 1523, "sdggate": 1524, ".sdggate": 1525, "statepreparation": 1526, ".statepreparation": [1527, 1528, 1529], "swapgate": 1530, ".swapgate": [1531, 1532], "tgate": 1533, ".tgate": 1534, "tdggate": 1535, ".tdggate": 1536, "twolocal": 1537, ".twolocal": 1538, "2gate": [1542, 1543], "ugate": 1547, ".ugate": [1548, 1549], "vberipplecarryadder": 1550, "weightedadder": 1551, "xgate": 1552, ".xgate": [1553, 1554], "xor": 1555, "xxminusyygate": 1556, ".xxminusyygate": 1557, "xxplusyygate": 1558, ".xxplusyygate": 1559, "ygate": 1560, ".ygate": [1561, 1562], "zfeaturemap": 1563, "zgate": 1564, ".zgate": [1565, 1566], "zzfeaturemap": 1567, ".clifford": [1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375], "iswapgate": 1586, "_cy": 1587, "_xz": 1588, "_yz": 1589, "_zz1": 1590, "_zz2": 1591, "_zz3": 1592, ".templates": [1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], ".nct": [1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], ".template": [1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], "_nct": [1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], "2a": [1593, 1594, 1595], "4a": [1596, 1597, 1598], "4b": [1599, 1600], "5a": [1601, 1602, 1603, 1604], "6a": [1605, 1606, 1607, 1608], "6b": [1609, 1610], "6c": 1611, "7a": 1612, "7b": 1613, "7c": 1614, "7d": 1615, "7e": 1616, "9a": 1617, "9c": [1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "9d": [1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639], ".random": [1640, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738], ".schedule": [1642, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4816], ".sequence": 1643, ".transpile": [1644, 2891, 2892, 5257], ".ast": 1645, "_to": [1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1778, 1943, 3927, 3930, 4049, 4050, 4220, 4221, 5133, 5280], "_dag": [1645, 1646, 1653, 1711, 4220, 5036, 5039, 5042, 5044], "_dagdependency": [1647, 1651], ".dag": [1650, 1651, 5282], ".dagdependency": [1652, 1653, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744], "dagcircuit": 1654, "_clbits": [1656, 1690, 1700, 1723], "_creg": [1657, 1724], "_qreg": [1658, 1726], ".ancestors": 1660, ".apply": [1661, 1662, 5259], "_operation": [1661, 1662, 2871, 4927, 4936], "_back": 1661, "_front": 1662, ".bfs": 1663, "_successors": [1663, 1697, 1731], ".collect": [1664, 1665, 1666, 4995, 4996, 4998, 4999], "1q": [1664, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953], "_runs": [1664, 1665, 1666], "2q": [1665, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423], "_longest": 1670, "_path": [1670, 1683, 4858], ".descendants": 1672, ".edges": 1674, "_networkx": [1675, 1713, 1742], ".front": 1676, "_nodes": [1677, 1686, 1693, 1714, 1715, 1737, 1744], ".idle": 1679, "_wires": 1679, "_predecessor": 1680, "_successor": 1681, ".layers": 1682, ".longest": 1683, ".multi": 1684, "_qubit": [1684, 1716, 2802, 2803, 3944, 3970, 4504, 4741, 4841, 4886], ".multigraph": 1685, "_layers": [1685, 1708], ".named": 1686, ".node": 1687, ".nodes": [1688, 1689], "_on": [1689, 4891, 5042], "_wire": 1689, ".op": 1693, ".predecessors": [1694, 1739], ".properties": [1695, 2331, 2343, 2357, 2370, 2383, 2912, 2921, 2930, 2940, 2949, 2958, 2975, 2992, 3025, 3042, 3059, 3076, 3092, 3109, 3125, 3142, 3158, 3175, 3192, 3209, 3226, 3243, 3260, 3277, 3293, 3310, 3327, 3343, 3360, 3377, 3402, 3419, 3428, 3436, 3453, 3469, 3491, 3500, 3516, 3533, 3549, 3558, 3575, 3592, 3608, 3616, 3625, 3642, 3658, 3675, 3691, 3725, 3809, 3894], "_predecessors": [1696, 1730], "_named": 1698, "_ancestors": 1699, "_of": [1699, 1702, 1703, 1704, 4718], "_cregs": 1701, "_descendants": 1702, "_nonancestors": 1703, "_nondescendants": 1704, "_node": [1705, 1710, 1711, 1725, 1736], "_with": [1706, 1711, 3991, 4490, 4493, 4521, 4524, 4616, 4619], ".serial": 1708, ".substitute": [1710, 1711], ".successors": [1712, 1741], ".topological": [1714, 1715, 1744], ".two": [1716, 4741], ".dagcircuiterror": 1718, "dagdepnode": 1719, ".dagdepnode": [1720, 1721], ".semantic": [1721, 1746, 1748, 1750, 1752], "_eq": [1721, 1746, 1748, 1750, 1752], "dagdependency": 1722, "_edges": [1733, 1734, 1735, 1738, 4852], "_in": 1735, "_out": 1738, "_retworkx": 1743, "daginnode": 1745, ".daginnode": 1746, "dagnode": 1747, ".dagnode": 1748, "dagopnode": 1749, ".dagopnode": 1750, "dagoutnode": 1751, ".dagoutnode": 1752, "hamiltoniangate": 1753, ".hamiltoniangate": [1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], ".adjoint": [1755, 1881, 1900, 1955, 2026, 2034, 2071, 2086, 2099, 2114, 2134, 2164, 2179, 2197, 2210, 2222, 2234, 2254, 4300, 4317, 4336, 4355, 4403, 4425, 4445, 4464, 4488, 4520, 4553, 4569, 4615, 4668, 4687], ".transpose": [1770, 1896, 4315, 4334, 4353, 4375, 4420, 4443, 4462, 4486, 4517, 4543, 4567, 4594, 4638, 4685, 4704], "initialize": 1772, ".gates": 1778, "_uncompute": 1778, "singlequbitunitary": 1786, ".singlequbitunitary": [1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801], "snapshot": [1802, 2389, 4148], "ucpaulirotgate": 1815, ".ucpaulirotgate": [1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830], "ucrxgate": 1831, ".ucrxgate": [1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846], "ucrygate": 1847, ".ucrygate": [1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862], "ucrzgate": 1863, ".ucrzgate": [1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878], "unitarygate": 1879, ".unitarygate": [1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897], "operatorbase": 1898, ".operatorbase": [1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918], ".equals": [1905, 1958, 2038, 2058, 2074, 2088, 2101, 2116, 2137, 2223, 2237], "_hermitian": [1907, 2120, 4731], ".mul": [1908, 2042, 2123, 2141, 2169, 2239], ".neg": 1909, ".permute": [1910, 1961, 2043, 2076, 2091, 2104, 2124, 2142, 2185, 2199, 2212, 2240, 2256], ".primitive": [1911, 1962, 2045, 2068, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2154, 2156, 2157, 2158, 2159, 2160, 2186, 2200, 2213, 2225, 2242, 2257], "_strings": [1911, 1962, 2045, 2077, 2092, 2105, 2125, 2143, 2186, 2200, 2213, 2225, 2242, 2257], ".reduce": [1912, 1963, 2030, 2046, 2059, 2065, 2078, 2126, 2144, 2187, 2243, 4857], ".tensorpower": [1914, 2048, 2146, 2246], "_spmatrix": [1918, 2053, 2111, 2131, 2206, 2207, 2231], ".opflowerror": 1919, ".anti": 1920, "_commutator": [1920, 1947], ".commutator": 1921, "converter": 1922, "abeliangrouper": 1923, ".abeliangrouper": [1924, 1925], ".convert": [1924, 1928, 1931, 1933, 1936, 1946, 1950, 1969, 1971, 1975, 1977, 1980, 1986, 1989, 1992, 1997, 2000, 2003, 2005, 2007, 2011, 2015, 2019, 2022], ".group": [1925, 4503, 4504, 4580], "_subops": 1925, "circuitsampler": [1926, 5361], ".circuitsampler": [1927, 1928, 1929], "_cache": 1927, "converterbase": 1930, ".converterbase": 1931, "dicttocircuitsum": 1932, ".dicttocircuitsum": 1933, "paulibasischange": 1934, ".paulibasischange": [1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944], "_cnot": [1935, 4741], "_chain": 1935, "_cob": 1937, "_diagonal": 1938, "_diagonalizing": 1939, "_tpb": 1940, ".measurement": 1941, "_replacement": [1941, 1942, 1944], "_fn": [1941, 1942, 1944, 2020, 2037, 2228, 2262], ".operator": [1942, 2879, 2880, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443], ".pad": [1943, 4045, 4225], "_paulis": 1943, "_equal": 1943, "_length": [1943, 2851, 3941, 3947], ".statefn": [1944, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251], "twoqubitreduction": 1945, ".twoqubitreduction": 1946, ".double": 1947, ".evolutions": [1948, 1950, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1971, 1972, 1973, 1975, 1977, 1980, 1982], "evolutions": 1948, "trotterizations": 1948, "evolutionbase": 1949, ".evolutionbase": 1950, "evolutionfactory": 1951, ".evolutionfactory": 1952, ".build": [1952, 1982, 1994, 4031, 4924, 5240, 5245], "evolvedop": [1953, 5361], ".evolvedop": [1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967], "_i": [1960, 2040, 2041, 2090, 2103, 2118, 2139, 2140, 5361], "matrixevolution": 1968, ".matrixevolution": 1969, "paulitrotterevolution": 1970, ".paulitrotterevolution": [1971, 1972, 1973], ".evolution": [1972, 1973], "_abelian": 1972, "_paulisum": 1972, "qdrift": 1974, ".qdrift": 1975, "suzuki": 1976, ".suzuki": 1977, "trotter": 1978, "trotterizationbase": 1979, ".trotterizationbase": 1980, "trotterizationfactory": 1981, ".trotterizationfactory": 1982, ".expectations": [1983, 1985, 1986, 1988, 1989, 1991, 1992, 1994, 1996, 1997, 1999, 2000], "expectations": 1983, "expectation": 1983, "aerpauliexpectation": 1984, ".aerpauliexpectation": [1985, 1986], "cvarexpectation": 1987, ".cvarexpectation": [1988, 1989], "expectationbase": 1990, ".expectationbase": [1991, 1992], "expectationfactory": 1993, ".expectationfactory": 1994, "matrixexpectation": 1995, ".matrixexpectation": [1996, 1997], "pauliexpectation": 1998, ".pauliexpectation": [1999, 2000], ".gradients": [2001, 2003, 2005, 2007, 2008, 2009, 2011, 2012, 2015, 2016, 2019, 2020, 2022], "gradients": 2001, "derivatives": 2001, "circuitgradient": 2002, ".circuitgradient": 2003, "circuitqfi": 2004, ".circuitqfi": 2005, "derivativebase": 2006, ".derivativebase": [2007, 2008, 2009], "_wrapper": 2008, "_expression": 2009, "_grad": [2009, 2020], "gradient": [2010, 5362], "_gradient": 2012, "gradientbase": 2013, "hessian": 2014, ".hessian": [2015, 2016], "_hessian": 2016, "hessianbase": 2017, "naturalgradient": 2018, ".naturalgradient": [2019, 2020], ".nat": 2020, "_combo": [2020, 2037], "qfi": [2021, 5362], ".qfi": 2022, "qfibase": 2023, ".list": [2024, 2026, 2027, 2028, 2029, 2030, 2031, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067], "list": 2024, "composedop": [2025, 5361], ".composedop": [2026, 2027, 2028, 2029, 2030, 2031], ".non": 2029, "_distributive": 2029, "_reduce": 2029, "listop": [2032, 5361], ".listop": [2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054], ".default": [2037, 3906], ".traverse": [2054, 2176, 2251], "summedop": [2055, 5361], ".summedop": [2056, 2057, 2058, 2059, 2060, 2061, 2062], ".collapse": 2057, "_summands": 2057, "tensoredop": [2063, 5361], ".tensoredop": [2064, 2065, 2066, 2067], "primitive": 2068, "symmetries": [2068, 2158], "circuitop": 2069, ".circuitop": [2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083], "matrixop": 2084, ".matrixop": [2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096], "pauliop": 2097, ".pauliop": [2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111], "paulisumop": 2112, ".paulisumop": [2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131], "_zero": 2121, ".matrix": [2122, 4509, 4535, 4584, 4630], "_iter": [2122, 4508, 4509, 4534, 4535, 4583, 4584, 4629, 4630], "primitiveop": [2132, 5361], ".primitiveop": [2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152], "taperedpaulisumop": 2153, ".taperedpaulisumop": 2154, "2symmetries": [2155, 2156, 2157, 2158, 2159, 2160], ".consistent": 2156, "_tapering": 2156, "_z": [2158, 5040], ".taper": 2160, ".state": [2161, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 4740], "_fns": [2161, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264], "cvarmeasurement": 2162, ".cvarmeasurement": [2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176], "_cvar": 2165, "_outcome": 2168, "_energies": 2168, "circuitstatefn": [2177, 5361], ".circuitstatefn": [2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194], "dictstatefn": 2195, ".dictstatefn": [2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207], "operatorstatefn": [2208, 5361], ".operatorstatefn": [2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219], "sparsevectorstatefn": 2220, ".sparsevectorstatefn": [2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231], "statefn": 2232, "vectorstatefn": 2252, ".vectorstatefn": [2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264], "baseestimator": 2265, ".baseestimator": 2266, ".close": [2266, 2268, 2270, 2273], "basesampler": 2267, ".basesampler": 2268, ".estimator": 2270, "estimatorresult": 2271, ".sampler": 2273, "samplerresult": 2274, ".backendpropertyerror": 2276, ".backendv": [2278, 2279, 2280, 2281, 2282, 2283, 2284, 2286, 2287, 2288, 2289, 2290, 2291, 2292], "properties": 2280, "set": [2283, 2292, 2970, 2987, 3004, 3012, 3020, 3037, 3054, 3071, 3088, 3104, 3121, 3137, 3154, 3170, 3187, 3204, 3221, 3238, 3255, 3272, 3289, 3305, 3322, 3339, 3355, 3372, 3397, 3414, 3448, 3465, 3481, 3512, 3528, 3545, 3570, 3587, 3604, 3637, 3654, 3670, 3687, 3703, 5357], "acquire": [2286, 2964, 2981, 2998, 3006, 3014, 3031, 3048, 3065, 3082, 3098, 3115, 3131, 3148, 3164, 3181, 3198, 3215, 3232, 3249, 3266, 3283, 3299, 3316, 3333, 3349, 3366, 3391, 3408, 3442, 3459, 3475, 3506, 3522, 3539, 3564, 3581, 3598, 3631, 3648, 3664, 3681, 3697, 4075, 5357], "_channel": [2286, 2287, 2288, 2289, 2863, 2864, 2871, 2875, 2876, 2877, 2878, 2881, 2884, 2964, 2965, 2966, 2967, 2981, 2982, 2983, 2984, 2998, 2999, 3000, 3001, 3006, 3007, 3008, 3009, 3014, 3015, 3016, 3017, 3031, 3032, 3033, 3034, 3048, 3049, 3050, 3051, 3065, 3066, 3067, 3068, 3082, 3083, 3084, 3085, 3098, 3099, 3100, 3101, 3115, 3116, 3117, 3118, 3131, 3132, 3133, 3134, 3148, 3149, 3150, 3151, 3164, 3165, 3166, 3167, 3181, 3182, 3183, 3184, 3198, 3199, 3200, 3201, 3215, 3216, 3217, 3218, 3232, 3233, 3234, 3235, 3249, 3250, 3251, 3252, 3266, 3267, 3268, 3269, 3283, 3284, 3285, 3286, 3299, 3300, 3301, 3302, 3316, 3317, 3318, 3319, 3333, 3334, 3335, 3336, 3349, 3350, 3351, 3352, 3366, 3367, 3368, 3369, 3383, 3384, 3385, 3386, 3391, 3392, 3393, 3394, 3408, 3409, 3410, 3411, 3442, 3443, 3444, 3445, 3459, 3460, 3461, 3462, 3475, 3476, 3477, 3478, 3506, 3507, 3508, 3509, 3522, 3523, 3524, 3525, 3539, 3540, 3541, 3542, 3564, 3565, 3566, 3567, 3581, 3582, 3583, 3584, 3598, 3599, 3600, 3601, 3631, 3632, 3633, 3634, 3648, 3649, 3650, 3651, 3664, 3665, 3666, 3667, 3681, 3682, 3683, 3684, 3697, 3698, 3699, 3700, 3969, 4021, 4038, 4043, 4735], "drive": [2288, 2966, 2983, 3000, 3008, 3016, 3033, 3050, 3067, 3084, 3100, 3117, 3133, 3150, 3166, 3183, 3200, 3217, 3234, 3251, 3268, 3285, 3301, 3318, 3335, 3351, 3368, 3393, 3410, 3444, 3461, 3477, 3508, 3524, 3541, 3566, 3583, 3600, 3633, 3650, 3666, 3683, 3699], "_properties": [2290, 2968, 2985, 3002, 3010, 3018, 3035, 3052, 3069, 3086, 3102, 3119, 3135, 3152, 3168, 3185, 3202, 3219, 3236, 3253, 3270, 3287, 3303, 3320, 3337, 3353, 3370, 3387, 3395, 3412, 3446, 3463, 3479, 3510, 3526, 3543, 3568, 3585, 3602, 3635, 3652, 3668, 3685, 3701, 4928, 4939, 5054], ".joberror": 2294, "jobstatus": [2295, 3960], ".jobtimeouterror": 2296, "jobv": 2297, ".jobv": [2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308], "cancel": 2299, "cancelled": 2300, "done": 2301, "in": [2302, 5336], "_id": [2303, 2480, 2495, 2900, 3769, 3807, 3856, 3914, 5034], "submit": 2307, "wait": 2308, ".options": [2310, 2311, 2312], "_validator": 2311, ".update": [2312, 3754, 3792, 3793, 3794, 3822, 3823, 3867, 3868, 3887, 3929, 4765, 4785, 4800, 4877, 4913, 4938, 4939, 5305, 5317, 5329], "providerv": 2314, ".providerv": [2315, 2316], "get": [2316, 3487], "_backend": [2316, 2322, 2329, 2341, 2355, 2808, 2865, 2908, 3484, 3487, 3706, 4022, 4874, 4902, 5054], ".qiskitbackendnotfounderror": 2317, "qubitproperties": 2318, ".aererror": 2319, "aerprovider": 2320, ".aerprovider": [2321, 2322], "aersimulator": 2323, ".aersimulator": [2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336], ".available": [2324, 2325, 2350, 2351, 2364, 2365, 2377, 2378], "_devices": [2324, 2350, 2364, 2377], "_methods": [2325, 2351, 2365, 2378], ".configuration": [2327, 2339, 2353, 2367, 2380, 2910, 2919, 2928, 2937, 2946, 2955, 2972, 2989, 3022, 3039, 3056, 3073, 3090, 3106, 3123, 3139, 3156, 3172, 3189, 3206, 3223, 3240, 3257, 3274, 3291, 3307, 3324, 3341, 3357, 3374, 3399, 3416, 3425, 3434, 3450, 3467, 3489, 3497, 3514, 3530, 3547, 3555, 3572, 3589, 3606, 3614, 3622, 3639, 3656, 3672, 3689, 3720, 3892], ".defaults": [2328, 2340, 2354, 2368, 2381, 2938, 2947, 2956, 2973, 2990, 3023, 3040, 3057, 3074, 3107, 3140, 3173, 3190, 3207, 3224, 3241, 3258, 3275, 3308, 3325, 3358, 3375, 3400, 3417, 3426, 3451, 3498, 3531, 3556, 3573, 3590, 3623, 3640, 3673, 3721], ".name": [2330, 2342, 2356, 2369, 2382, 2799, 2843, 2911, 2920, 2929, 2939, 2948, 2957, 2974, 2991, 3024, 3041, 3058, 3075, 3091, 3108, 3124, 3141, 3157, 3174, 3191, 3208, 3225, 3242, 3259, 3276, 3292, 3309, 3326, 3342, 3359, 3376, 3401, 3418, 3427, 3435, 3452, 3468, 3490, 3499, 3515, 3532, 3548, 3557, 3574, 3591, 3607, 3615, 3624, 3641, 3657, 3674, 3690, 3724, 3808, 3859, 3893, 4832, 4942, 4947, 4950, 4953, 4956, 4959, 4962, 4965, 4968, 4971, 4974, 4977, 4980, 4983, 4986, 4989, 4992, 4995, 4998, 5001, 5005, 5009, 5012, 5015, 5019, 5022, 5025, 5028, 5031, 5052, 5063, 5066, 5069, 5072, 5075, 5078, 5081, 5084, 5087, 5090, 5094, 5097, 5100, 5103, 5106, 5109, 5112, 5115, 5118, 5121, 5124, 5127, 5131, 5135, 5138, 5141, 5144, 5148, 5153, 5159, 5164, 5167, 5170, 5173, 5176, 5179, 5182, 5185, 5188, 5191, 5194, 5197, 5200, 5203, 5206, 5209, 5212, 5215, 5218, 5221, 5224, 5275], ".provider": [2332, 2344, 2358, 2371, 2384, 2913, 2922, 2931, 2941, 2950, 2959, 2976, 2993, 3026, 3043, 3060, 3077, 3093, 3110, 3126, 3143, 3159, 3176, 3193, 3210, 3227, 3244, 3261, 3278, 3294, 3311, 3328, 3344, 3361, 3378, 3403, 3420, 3429, 3437, 3454, 3470, 3492, 3501, 3517, 3534, 3550, 3559, 3576, 3593, 3609, 3617, 3626, 3643, 3659, 3676, 3692, 3726, 3895], ".run": [2333, 2345, 2359, 2372, 2385, 2800, 2844, 2914, 2915, 2923, 2924, 2932, 2933, 2942, 2951, 2960, 2977, 2994, 3027, 3044, 3061, 3078, 3094, 3111, 3127, 3144, 3160, 3177, 3194, 3211, 3228, 3245, 3262, 3279, 3295, 3312, 3329, 3345, 3362, 3379, 3388, 3404, 3421, 3430, 3438, 3455, 3471, 3493, 3502, 3518, 3535, 3551, 3560, 3577, 3594, 3610, 3618, 3627, 3644, 3660, 3677, 3693, 3708, 3730, 3838, 3864, 3885, 3896, 4833, 4900, 4921, 4943, 4948, 4951, 4954, 4957, 4960, 4963, 4966, 4969, 4972, 4975, 4978, 4981, 4984, 4987, 4990, 4993, 4996, 4999, 5002, 5006, 5010, 5013, 5016, 5020, 5023, 5026, 5029, 5032, 5058, 5064, 5067, 5070, 5073, 5076, 5079, 5082, 5085, 5088, 5091, 5095, 5098, 5101, 5104, 5107, 5110, 5113, 5116, 5119, 5122, 5125, 5128, 5132, 5136, 5139, 5142, 5145, 5149, 5155, 5161, 5165, 5168, 5171, 5174, 5177, 5180, 5183, 5186, 5189, 5192, 5195, 5198, 5201, 5204, 5207, 5210, 5213, 5216, 5219, 5222, 5225, 5227, 5238], "_option": [2334, 2346, 2360, 2373, 2386], ".status": [2336, 2348, 2362, 2375, 2388, 2484, 2498, 2903, 2917, 2926, 2935, 2944, 2953, 2962, 2979, 2996, 3029, 3046, 3063, 3080, 3096, 3113, 3129, 3146, 3162, 3179, 3196, 3213, 3230, 3247, 3264, 3281, 3297, 3314, 3331, 3347, 3364, 3381, 3406, 3423, 3432, 3440, 3457, 3473, 3495, 3504, 3520, 3537, 3553, 3562, 3579, 3596, 3612, 3620, 3629, 3646, 3662, 3679, 3695, 3732, 3818, 3850, 3898, 3917], "pulsesimulator": 2337, ".pulsesimulator": [2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348], "qasmsimulator": 2349, ".qasmsimulator": [2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362], "statevectorsimulator": 2363, ".statevectorsimulator": [2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375], "unitarysimulator": 2376, ".unitarysimulator": [2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388], ".define": [2395, 2409, 2423, 2437, 2451, 2465], "_snapshot": [2395, 2409, 2423, 2437, 2451, 2465], "snapshotdensitymatrix": 2403, ".snapshotdensitymatrix": [2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416], "snapshotexpectationvalue": 2417, ".snapshotexpectationvalue": [2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430], "snapshotprobabilities": 2431, ".snapshotprobabilities": [2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444], "snapshotstabilizer": 2445, ".snapshotstabilizer": [2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458], "snapshotstatevector": 2459, ".snapshotstatevector": [2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472], "aerjob": 2473, ".aerjob": [2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486], ".backend": [2474, 2488, 2895, 3797, 3798, 3910, 4827, 4828], ".cancel": [2475, 2489, 2896, 3799, 3846, 3853, 3911, 3912], ".cancelled": [2476, 2490, 2897, 3800], ".done": [2477, 2491, 2898, 3803], ".executor": [2478, 2492], ".in": [2479, 2493, 2899, 3806], ".running": [2483, 2497, 2902, 3815], ".submit": [2485, 2499, 2904, 3819, 3851], ".wait": [2486, 2500, 2905, 3824, 3919], "aerjobset": 2487, ".aerjobset": [2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503], ".worker": [2501, 2502, 2503], "_job": [2502, 3729, 3741, 3837, 3877, 3931], "_results": [2503, 3779, 3870, 3918, 5255], "saveamplitudes": 2504, ".saveamplitudes": [2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516], "saveamplitudessquared": 2517, ".saveamplitudessquared": [2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529], "saveclifford": 2530, ".saveclifford": [2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542], "savedensitymatrix": 2543, ".savedensitymatrix": [2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555], "saveexpectationvalue": 2556, ".saveexpectationvalue": [2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568], "saveexpectationvaluevariance": 2569, ".saveexpectationvaluevariance": [2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581], "savematrixproductstate": 2582, ".savematrixproductstate": [2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594], "saveprobabilities": 2595, ".saveprobabilities": [2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607], "saveprobabilitiesdict": 2608, ".saveprobabilitiesdict": [2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620], "savestabilizer": 2621, ".savestabilizer": [2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633], "savestate": 2634, ".savestate": [2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646], "savestatevector": 2647, ".savestatevector": [2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659], "savestatevectordict": 2660, ".savestatevectordict": [2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672], "savesuperop": 2673, ".savesuperop": [2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685], "saveunitary": 2686, ".saveunitary": [2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698], "setdensitymatrix": 2699, ".setdensitymatrix": [2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711], "setmatrixproductstate": 2712, ".setmatrixproductstate": [2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724], "setstabilizer": 2725, ".setstabilizer": [2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737], "setstatevector": 2738, ".setstatevector": [2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750], "setsuperop": 2751, ".setsuperop": [2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763], "setunitary": 2764, ".setunitary": [2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776], "localnoisepass": 2798, ".localnoisepass": [2799, 2800], "noisemodel": 2801, ".noisemodel": [2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812], "_quantum": [2802, 2805, 2806, 2887, 2892, 4735], "_error": [2802, 2803, 2805, 2806, 2807, 2845, 2846, 2847, 2850, 2853, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2887, 2892, 3940, 3946, 4720, 5288], "_readout": [2803, 2807, 2849], "_basis": [2804, 4710, 4713, 4725], "_ideal": 2810, "quantumerror": 2813, ".quantumerror": [2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829], ".dot": [2816, 2833, 4304, 4321, 4340, 4359, 4407, 4429, 4449, 4471, 4498, 4529, 4557, 4574, 4624, 4672, 4691], ".error": [2817, 3804, 3847, 3854, 3913], "_term": 2817, ".expand": [2818, 2834, 4305, 4322, 4341, 4360, 4382, 4408, 4431, 4450, 4474, 4501, 4530, 4558, 4576, 4600, 4625, 4647, 4673, 4692], ".ideal": [2819, 2835], ".input": [2820, 4306, 4323, 4342, 4364, 4409, 4434, 4451, 4475, 4505, 4532, 4559, 4581, 4627, 4674, 4693], "_dims": [2820, 2821, 4306, 4307, 4323, 4328, 4342, 4347, 4364, 4366, 4409, 4414, 4434, 4436, 4451, 4456, 4475, 4478, 4505, 4510, 4532, 4536, 4559, 4561, 4581, 4585, 4627, 4631, 4674, 4679, 4693, 4698], ".output": [2821, 4307, 4328, 4347, 4366, 4414, 4436, 4456, 4478, 4510, 4536, 4561, 4585, 4631, 4679, 4698], ".reshape": [2823, 4309, 4330, 4349, 4368, 4416, 4438, 4458, 4480, 4512, 4538, 4563, 4587, 4633, 4681, 4700], "_atol": [2824, 2837], "_rtol": [2825, 2838], "_quantumchannel": 2829, "readouterror": 2830, ".readouterror": [2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841], "relaxationnoisepass": 2842, ".relaxationnoisepass": [2843, 2844], ".amplitude": 2845, "_damping": [2845, 2858, 2859], ".coherent": 2846, ".depolarizing": 2847, ".device": [2848, 2849, 2850, 2851, 2852, 2853, 2854, 3787], ".basic": [2848, 2849, 4815, 5035], "_device": [2848, 2849], "_errors": [2848, 2849], "_values": [2850, 2851, 2852, 2853, 2854], "_param": 2852, ".readout": [2853, 3946, 3947, 5270, 5274], ".thermal": [2854, 2861], "_relaxation": [2854, 2861], ".kraus": [2855, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420], ".mixed": 2856, ".phase": [2858, 2859, 4046], "_amplitude": 2858, "pulsesystemmodel": 2862, ".pulsesystemmodel": [2863, 2864, 2865, 2866], ".calculate": 2863, "_frequencies": 2863, "_index": 2864, "_config": [2866, 3929, 5256], ".duffing": 2867, "_system": 2867, "_model": [2867, 2886, 2889, 2890, 2891], "noisetransformer": 2868, ".noisetransformer": [2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885], ".channel": 2869, "_representation": 2869, "_p": 2870, "_q": 2872, ".fidelity": [2873, 5046], ".flatten": [2874, 4223], ".generate": [2875, 2876, 4235, 4887, 5050, 5230], "_matrices": [2875, 2876], "_quadratic": [2876, 2883], "_programming": 2876, "_const": 2877, "_operator": [2881, 2885, 4314, 4333, 4352, 4374, 4399, 4419, 4442, 4461, 4566, 4578, 4593, 4612, 4665, 4684, 4703], "_honesty": 2882, "_constraint": 2882, "_program": [2883, 3878, 3886, 3887, 3888], ".transform": [2884, 2885, 2890], "_by": [2884, 2885], "_given": 2884, ".approximate": [2886, 2887], "_noise": [2886, 2888, 2889, 2890, 2891], ".insert": [2888, 4004, 4081, 4091, 4100, 4109, 4118, 4127, 4136, 4145, 4154, 4476, 4506, 4533, 4628], ".remap": 2889, ".basicaererror": 2893, "basicaerjob": 2894, ".basicaerjob": [2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905], "basicaerprovider": 2906, ".basicaerprovider": [2907, 2908], "qasmsimulatorpy": 2909, ".qasmsimulatorpy": [2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917], "_experiment": [2915, 2924, 2933, 3782, 3785, 3793], "statevectorsimulatorpy": 2918, ".statevectorsimulatorpy": [2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926], "unitarysimulatorpy": 2927, ".unitarysimulatorpy": [2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935], "configurablefakebackend": 2936, ".configurablefakebackend": [2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944], "fakealmaden": 2954, ".fakealmaden": [2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962], "fakealmadenv": 2963, ".fakealmadenv": [2964, 2965, 2966, 2967, 2968, 2969, 2970], "fakearmonk": 2971, ".fakearmonk": [2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979], "fakearmonkv": 2980, ".fakearmonkv": [2981, 2982, 2983, 2984, 2985, 2986, 2987], "fakeathens": 2988, ".fakeathens": [2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996], "fakeathensv": 2997, ".fakeathensv": [2998, 2999, 3000, 3001, 3002, 3003, 3004], "fakebackend": 3005, "5qv": [3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012], ".fakebackend": [3006, 3007, 3008, 3009, 3010, 3011, 3012], "fakebackendv": 3013, ".fakebackendv": [3014, 3015, 3016, 3017, 3018, 3019, 3020], "fakebelem": 3021, ".fakebelem": [3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029], "fakebelemv": 3030, ".fakebelemv": [3031, 3032, 3033, 3034, 3035, 3036, 3037], "fakeboeblingen": 3038, ".fakeboeblingen": [3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046], "fakeboeblingenv": 3047, ".fakeboeblingenv": [3048, 3049, 3050, 3051, 3052, 3053, 3054], "fakebogota": 3055, ".fakebogota": [3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063], "fakebogotav": 3064, ".fakebogotav": [3065, 3066, 3067, 3068, 3069, 3070, 3071], "fakebrooklyn": 3072, ".fakebrooklyn": [3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080], "fakebrooklynv": 3081, ".fakebrooklynv": [3082, 3083, 3084, 3085, 3086, 3087, 3088], "fakeburlington": 3089, ".fakeburlington": [3090, 3091, 3092, 3093, 3094, 3095, 3096], "fakeburlingtonv": 3097, ".fakeburlingtonv": [3098, 3099, 3100, 3101, 3102, 3103, 3104], "fakecairo": 3105, ".fakecairo": [3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113], "fakecairov": 3114, ".fakecairov": [3115, 3116, 3117, 3118, 3119, 3120, 3121], "fakecambridge": 3122, ".fakecambridge": [3123, 3124, 3125, 3126, 3127, 3128, 3129], "fakecambridgev": 3130, ".fakecambridgev": [3131, 3132, 3133, 3134, 3135, 3136, 3137], "fakecasablanca": 3138, ".fakecasablanca": [3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146], "fakecasablancav": 3147, ".fakecasablancav": [3148, 3149, 3150, 3151, 3152, 3153, 3154], "fakeessex": 3155, ".fakeessex": [3156, 3157, 3158, 3159, 3160, 3161, 3162], "fakeessexv": 3163, ".fakeessexv": [3164, 3165, 3166, 3167, 3168, 3169, 3170], "fakeguadalupe": 3171, ".fakeguadalupe": [3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179], "fakeguadalupev": 3180, ".fakeguadalupev": [3181, 3182, 3183, 3184, 3185, 3186, 3187], "fakehanoi": 3188, ".fakehanoi": [3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196], "fakehanoiv": 3197, ".fakehanoiv": [3198, 3199, 3200, 3201, 3202, 3203, 3204], "fakejakarta": 3205, ".fakejakarta": [3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213], "fakejakartav": 3214, ".fakejakartav": [3215, 3216, 3217, 3218, 3219, 3220, 3221], "fakejohannesburg": 3222, ".fakejohannesburg": [3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230], "fakejohannesburgv": 3231, ".fakejohannesburgv": [3232, 3233, 3234, 3235, 3236, 3237, 3238], "fakekolkata": 3239, ".fakekolkata": [3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247], "fakekolkatav": 3248, ".fakekolkatav": [3249, 3250, 3251, 3252, 3253, 3254, 3255], "fakelagos": 3256, ".fakelagos": [3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264], "fakelagosv": 3265, ".fakelagosv": [3266, 3267, 3268, 3269, 3270, 3271, 3272], "fakelima": 3273, ".fakelima": [3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281], "fakelimav": 3282, ".fakelimav": [3283, 3284, 3285, 3286, 3287, 3288, 3289], "fakelondon": 3290, ".fakelondon": [3291, 3292, 3293, 3294, 3295, 3296, 3297], "fakelondonv": 3298, ".fakelondonv": [3299, 3300, 3301, 3302, 3303, 3304, 3305], "fakemanhattan": 3306, ".fakemanhattan": [3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314], "fakemanhattanv": 3315, ".fakemanhattanv": [3316, 3317, 3318, 3319, 3320, 3321, 3322], "fakemanila": 3323, ".fakemanila": [3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331], "fakemanilav": 3332, ".fakemanilav": [3333, 3334, 3335, 3336, 3337, 3338, 3339], "fakemelbourne": 3340, ".fakemelbourne": [3341, 3342, 3343, 3344, 3345, 3346, 3347], "fakemelbournev": 3348, ".fakemelbournev": [3349, 3350, 3351, 3352, 3353, 3354, 3355], "fakemontreal": 3356, ".fakemontreal": [3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364], "fakemontrealv": 3365, ".fakemontrealv": [3366, 3367, 3368, 3369, 3370, 3371, 3372], "fakemumbai": 3373, ".fakemumbai": [3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381], "fakemumbaifractionalcx": 3382, ".fakemumbaifractionalcx": [3383, 3384, 3385, 3386, 3387, 3388, 3389], ".acquire": [3383, 3964, 4020, 4021, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083], ".drive": [3385, 3967, 4038], "fakemumbaiv": 3390, ".fakemumbaiv": [3391, 3392, 3393, 3394, 3395, 3396, 3397], "fakenairobi": 3398, ".fakenairobi": [3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406], "fakenairobiv": 3407, ".fakenairobiv": [3408, 3409, 3410, 3411, 3412, 3413, 3414], "fakeopenpulse": [3415, 3424], ".fakeopenpulse": [3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432], "3q": [3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432], "fakeourense": 3433, ".fakeourense": [3434, 3435, 3436, 3437, 3438, 3439, 3440], "fakeourensev": 3441, ".fakeourensev": [3442, 3443, 3444, 3445, 3446, 3447, 3448], "fakeparis": 3449, ".fakeparis": [3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457], "fakeparisv": 3458, ".fakeparisv": [3459, 3460, 3461, 3462, 3463, 3464, 3465], "fakepoughkeepsie": 3466, ".fakepoughkeepsie": [3467, 3468, 3469, 3470, 3471, 3472, 3473], "fakepoughkeepsiev": 3474, ".fakepoughkeepsiev": [3475, 3476, 3477, 3478, 3479, 3480, 3481], "fakeprovider": 3482, ".fakeprovider": [3483, 3484], "fakeproviderforbackendv": 3485, ".fakeproviderforbackendv": [3486, 3487], "fakeqasmsimulator": 3488, ".fakeqasmsimulator": [3489, 3490, 3491, 3492, 3493, 3494, 3495], "fakequito": 3496, ".fakequito": [3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504], "fakequitov": 3505, ".fakequitov": [3506, 3507, 3508, 3509, 3510, 3511, 3512], "fakerochester": 3513, ".fakerochester": [3514, 3515, 3516, 3517, 3518, 3519, 3520], "fakerochesterv": 3521, ".fakerochesterv": [3522, 3523, 3524, 3525, 3526, 3527, 3528], "fakerome": 3529, ".fakerome": [3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537], "fakeromev": 3538, ".fakeromev": [3539, 3540, 3541, 3542, 3543, 3544, 3545], "fakerueschlikon": 3546, ".fakerueschlikon": [3547, 3548, 3549, 3550, 3551, 3552, 3553], "fakesantiago": 3554, ".fakesantiago": [3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562], "fakesantiagov": 3563, ".fakesantiagov": [3564, 3565, 3566, 3567, 3568, 3569, 3570], "fakesingapore": 3571, ".fakesingapore": [3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579], "fakesingaporev": 3580, ".fakesingaporev": [3581, 3582, 3583, 3584, 3585, 3586, 3587], "fakesydney": 3588, ".fakesydney": [3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596], "fakesydneyv": 3597, ".fakesydneyv": [3598, 3599, 3600, 3601, 3602, 3603, 3604], "faketenerife": 3605, ".faketenerife": [3606, 3607, 3608, 3609, 3610, 3611, 3612], "faketokyo": 3613, ".faketokyo": [3614, 3615, 3616, 3617, 3618, 3619, 3620], "faketoronto": 3621, ".faketoronto": [3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629], "faketorontov": 3630, ".faketorontov": [3631, 3632, 3633, 3634, 3635, 3636, 3637], "fakevalencia": 3638, ".fakevalencia": [3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646], "fakevalenciav": 3647, ".fakevalenciav": [3648, 3649, 3650, 3651, 3652, 3653, 3654], "fakevigo": 3655, ".fakevigo": [3656, 3657, 3658, 3659, 3660, 3661, 3662], "fakevigov": 3663, ".fakevigov": [3664, 3665, 3666, 3667, 3668, 3669, 3670], "fakewashington": 3671, ".fakewashington": [3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679], "fakewashingtonv": 3680, ".fakewashingtonv": [3681, 3682, 3683, 3684, 3685, 3686, 3687], "fakeyorktown": 3688, ".fakeyorktown": [3689, 3690, 3691, 3692, 3693, 3694, 3695], "fakeyorktownv": 3696, ".fakeyorktownv": [3697, 3698, 3699, 3700, 3701, 3702, 3703], "accountprovider": 3704, ".accountprovider": [3705, 3706, 3707, 3708, 3709, 3710], "_service": 3707, ".service": 3709, ".services": 3710, "backendjoblimit": 3711, ".ibmqaccountcredentialsinvalidformat": 3712, ".ibmqaccountcredentialsinvalidtoken": 3713, ".ibmqaccountcredentialsinvalidurl": 3714, ".ibmqaccountcredentialsnotfound": 3715, ".ibmqaccounterror": 3716, ".ibmqaccountmultiplecredentialsfound": 3717, "ibmqbackend": 3718, ".ibmqbackend": [3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732], ".active": [3719, 3745, 4022, 4023, 4024], "_jobs": [3719, 3727, 3858, 3863], "_limit": 3722, ".remaining": 3727, "_count": 3727, ".reservations": 3728, ".retrieve": [3729, 3741, 3837, 3863], ".ibmqbackendapierror": 3733, ".ibmqbackendapiprotocolerror": 3734, ".ibmqbackenderror": 3735, "ibmqbackendservice": 3736, ".ibmqbackendservice": [3737, 3738, 3739, 3740, 3741], "_ids": 3738, ".my": 3740, "_reservations": 3740, ".ibmqbackendvalueerror": 3742, ".ibmqerror": 3743, "ibmqfactory": 3744, ".ibmqfactory": [3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754], "_account": [3745, 3746, 3747, 3748, 3750, 3752, 3753, 3754], ".delete": [3746, 3784, 3785, 3786, 3877, 3878, 4470, 4497, 4528, 4623], ".disable": 3747, ".enable": 3748, ".stored": 3753, ".ibmqprovidererror": 3755, "runnerresult": 3756, ".runnerresult": [3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765], ".data": [3757, 3871, 4803], ".decode": [3758, 3900, 3902], "_counts": [3760, 3872, 4394, 4608, 4660, 4805, 4811], "_memory": [3761, 3873, 4395, 4609, 4661, 4806, 4813], "_quasiprobabilities": 3762, ".connection": 3767, "_ibmq": [3768, 5265], ".unique": [3769, 4518, 4544, 4639], ".credentialserror": 3770, ".credentialsnotfounderror": 3771, ".invalidcredentialsformaterror": 3772, "devicecomponent": 3773, ".ibmexperimententryexists": 3774, ".ibmexperimententrynotfound": 3775, ".ibmexperimenterror": 3776, "ibmexperimentservice": 3777, ".ibmexperimentservice": [3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794], ".analysis": [3778, 3779], ".create": [3781, 3782, 3783, 5039, 5040], "_analysis": [3781, 3784, 3792], "_figure": [3783, 3786, 3794], ".experiments": 3789, ".figure": 3790, "_preferences": 3791, "resultquality": 3795, "ibmqjob": 3796, ".ibmqjob": [3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824], ".circuits": 3801, ".creation": 3802, "_date": 3802, "_message": [3804, 3847, 3913], ".header": 3805, ".queue": [3811, 3812], "_position": 3812, ".refresh": 3813, ".scheduling": [3816, 5059], "_mode": 3816, ".share": 3817, ".tags": [3820, 3866], ".time": 3821, "_per": 3821, "_step": 3821, "_name": [3822, 3867, 4933, 4936], "_tags": [3823, 3868, 3931], ".ibmqjobapierror": 3825, ".ibmqjoberror": 3826, ".ibmqjobfailureerror": 3827, ".ibmqjobinvalidstateerror": 3828, ".ibmqjobtimeouterror": 3829, "queueinfo": 3830, ".queueinfo": 3831, ".format": 3831, "_monitor": [3832, 4827, 4829], ".least": 3833, "_busy": 3833, "ibmqjobmanager": 3834, ".ibmqjobmanager": [3835, 3836, 3837, 3838], "_sets": [3835, 5043, 5044], ".report": [3836, 3861], ".ibmqjobmanagererror": 3839, ".ibmqjobmanagerinvalidstateerror": 3840, ".ibmqjobmanagerjobnotfound": 3841, ".ibmqjobmanagertimeouterror": 3842, ".ibmqjobmanagerunknownjobset": 3843, ".ibmqmanagedresultdatanotavailable": 3844, "managedjob": 3845, ".managedjob": [3846, 3847, 3848, 3849, 3850, 3851], "managedjobset": 3852, ".managedjobset": [3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868], "_messages": 3854, ".qobjs": 3860, ".results": 3862, ".statuses": 3865, "managedresults": 3869, ".managedresults": [3870, 3871, 3872, 3873, 3874, 3875], "ibmruntimeservice": 3876, ".ibmruntimeservice": [3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888], ".logout": 3881, ".pprint": 3882, "_programs": 3882, ".program": 3883, ".programs": 3884, "_visibility": 3886, ".upload": 3888, "parameternamespace": 3889, ".parameternamespace": 3890, "programbackend": 3891, ".programbackend": [3892, 3893, 3894, 3895, 3896, 3897, 3898], "resultdecoder": 3899, ".resultdecoder": 3900, "runtimedecoder": 3901, ".runtimedecoder": [3902, 3903, 3904], ".object": 3903, "_hook": 3903, ".raw": 3904, "_decode": 3904, "runtimeencoder": 3905, ".runtimeencoder": [3906, 3907, 3908], ".encode": 3907, ".iterencode": 3908, "runtimejob": 3909, ".runtimejob": [3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919], "_streaming": 3912, ".logs": 3915, ".stream": 3918, "runtimeoptions": 3920, ".runtimeoptions": 3921, "runtimeprogram": 3922, ".runtimeprogram": [3923, 3924], ".parameters": 3923, "usermessenger": 3925, ".usermessenger": 3926, ".publish": 3926, ".seconds": [3927, 4050], "_python": 3928, "_identifier": 3928, "_qobj": [3929, 4228], ".utc": 3930, "_local": 3930, "backendconfiguration": 3932, ".backendconfiguration": [3933, 3934], "backendproperties": 3935, ".backendproperties": [3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950], ".faulty": [3936, 3937], ".frequency": [3938, 4039], "_property": [3942, 3945], "_operational": [3943, 3944], "backendstatus": 3951, ".backendstatus": [3952, 3953], ".command": [3955, 3956], "gateconfig": 3957, ".gateconfig": [3958, 3959], ".jobstatus": [3961, 3962], "pulsebackendconfiguration": 3963, ".pulsebackendconfiguration": [3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972], ".describe": 3966, "_channels": [3970, 4034, 4048], "pulsedefaults": 3973, ".pulsedefaults": [3974, 3975], "qasmbackendconfiguration": 3976, ".qasmbackendconfiguration": [3977, 3978], "uchannello": 3979, ".uchannello": [3980, 3981], "instructionschedulemap": 3982, ".instructionschedulemap": [3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992], ".assert": 3984, "_has": 3984, "_custom": 3988, ".pop": [3989, 4761, 4782, 4797, 4910, 5302, 5314, 5326], ".qubits": 3991, ".exclude": [4000, 4013], ".shift": [4007, 4053, 4054, 4083, 4093, 4102, 4111, 4120, 4129, 4138, 4147, 4156], "scheduleblock": 4008, ".scheduleblock": [4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019], "_schedulable": 4018, ".builder": [4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060], "_scheduler": [4023, 4033], "_transpiler": 4024, ".align": [4025, 4026, 4027, 4028, 4029, 4204, 4207, 4210, 4213, 4216, 4219], "_equispaced": [4025, 5357], "_func": 4026, "_left": [4027, 5357], "_right": [4028, 5357], "_sequential": [4029, 5357], ".call": [4032, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093], "_offset": [4039, 4046], ".inline": [4040, 4224], ".play": [4047, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111], ".samples": 4049, "_seconds": 4049, "_samples": 4050, "_frequency": [4051, 4053, 5357], "acquirechannel": 4061, ".acquirechannel": 4062, "controlchannel": 4063, ".controlchannel": 4064, "drivechannel": 4065, ".drivechannel": 4066, "measurechannel": 4067, ".measurechannel": 4068, "memoryslot": 4069, ".memoryslot": 4070, "registerslot": 4071, ".registerslot": 4072, "snapshotchannel": 4073, ".snapshotchannel": 4074, "call": 4084, ".assigned": 4086, "_subroutine": 4086, "play": [4103, 5357], "setfrequency": 4112, ".setfrequency": [4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120], "setphase": 4121, ".setphase": [4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129], "shiftfrequency": 4130, ".shiftfrequency": [4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138], "shiftphase": 4139, ".shiftphase": [4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147], "constant": 4157, ".constant": [4158, 4159, 4160, 4161, 4190], "_waveform": [4159, 4164, 4169, 4174, 4179, 4184], "drag": 4162, ".drag": [4163, 4164, 4165, 4166, 4192], "gaussian": 4167, ".gaussian": [4168, 4169, 4170, 4171, 4193, 4194, 4195], "gaussiansquare": 4172, ".gaussiansquare": [4173, 4174, 4175, 4176], "parametricpulse": 4177, ".parametricpulse": [4178, 4179, 4180, 4181], ".symbolicpulse": [4183, 4184, 4185, 4186], ".waveform": [4188, 4189], "_deriv": [4194, 4198], "_square": [4195, 4848], ".sawtooth": 4196, ".sech": [4197, 4198], ".square": 4200, ".triangle": 4201, ".zero": 4202, "alignequispaced": 4203, ".alignequispaced": [4204, 4205], "alignfunc": 4206, ".alignfunc": [4207, 4208], "alignleft": 4209, ".alignleft": [4210, 4211], "alignright": 4212, ".alignright": [4213, 4214], "alignsequential": 4215, ".alignsequential": [4216, 4217], "_implicit": 4218, "_acquires": 4218, "_measures": 4219, ".block": [4220, 4221], "_schedule": [4221, 4929, 4938, 5042], ".compress": 4222, "_pulses": 4222, "_subroutines": 4224, "_directives": 4226, "_trivial": [4227, 4887], "_barriers": [4227, 5050], ".target": [4228, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940], "_transform": 4228, "openqasmlexer": 4229, ".openqasmlexer": [4230, 4231, 4232, 4233], "_filter": 4230, ".analyse": 4231, "_text": 4231, "_tokens": [4232, 4233, 4235], "_unprocessed": 4233, ".parse": [4236, 5054], ".return": 4237, "_filename": 4237, ".qasmerror": 4238, "qasmhtmlstyle": 4239, "qasmterminalstyle": 4240, "exporter": [4241, 4242, 4243], ".dump": [4242, 4297, 4837, 4864, 4871], ".dumps": 4243, "dump": 4244, "dumps": 4245, "gatecalibration": 4246, ".gatecalibration": [4247, 4248], "pulselibraryitem": 4249, ".pulselibraryitem": [4250, 4251], "pulseqobj": 4252, ".pulseqobj": [4253, 4254], "pulseqobjconfig": 4255, ".pulseqobjconfig": [4256, 4257], "pulseqobjexperiment": 4258, ".pulseqobjexperiment": [4259, 4260], "pulseqobjexperimentconfig": 4261, ".pulseqobjexperimentconfig": [4262, 4263], "pulseqobjinstruction": 4264, ".pulseqobjinstruction": [4265, 4266], "qasmexperimentcalibrations": 4267, ".qasmexperimentcalibrations": [4268, 4269], "qasmqobj": 4270, ".qasmqobj": [4271, 4272], "qasmqobjconfig": 4273, ".qasmqobjconfig": [4274, 4275], "qasmqobjexperiment": 4276, ".qasmqobjexperiment": [4277, 4278], "qasmqobjexperimentconfig": 4279, ".qasmqobjexperimentconfig": [4280, 4281], "qasmqobjinstruction": 4282, ".qasmqobjinstruction": [4283, 4284], "qobjexperimentheader": 4288, ".qobjexperimentheader": [4289, 4290], "qobjheader": 4291, ".qobjheader": [4292, 4293], "qobjmeasurementoption": 4294, ".qobjmeasurementoption": [4295, 4296], "cnotdihedral": 4299, ".cnotdihedral": [4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315], "chi": 4316, ".chi": [4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334], "_cp": [4324, 4343, 4410, 4452, 4675, 4694], "_cptp": [4325, 4344, 4411, 4453, 4676, 4695], "_tp": [4326, 4345, 4412, 4454, 4677, 4696], "choi": 4335, ".choi": [4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353], "_label": [4363, 4386, 4433, 4484, 4651], "densitymatrix": 4376, ".densitymatrix": [4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401], ".dims": [4379, 4598, 4643], ".expectation": [4383, 4601, 4648, 4743, 4747, 4769], "_int": [4385, 4650], "-qubit": [4386, 4651, 5350], "labels": [4386, 4651], "_valid": [4387, 4602, 4653], ".probabilities": [4389, 4390, 4604, 4605, 4655, 4656], ".purity": [4391, 4606, 4657, 4727], "_qargs": [4393, 4439, 4659, 4934, 4935], ".seed": [4396, 4610, 4662], ".trace": [4401, 4613, 4666], "kraus": 4402, "onequbiteulerdecomposer": 4421, "supported": 4421, "bases": 4421, ".onequbiteulerdecomposer": [4422, 4423], ".angles": [4422, 4423], "_and": 4423, ".equiv": [4430, 4472, 4499, 4575, 4645], "ptm": 4444, ".ptm": [4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462], ".anticommutes": [4465, 4489, 4490, 4521, 4616], ".commutes": [4466, 4492, 4493, 4523, 4524, 4618, 4619], "_truncation": 4481, "paulilist": 4487, ".paulilist": [4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518], ".argsort": [4491, 4522, 4617], "_symplectic": 4502, "_commuting": [4503, 4504, 4580], "_wise": 4504, ".label": [4508, 4534, 4583, 4629], ".sort": [4513, 4539, 4634], "_labels": [4515, 4531, 4541, 4626, 4636], "representations": [4515, 4516, 4519, 4541, 4542, 4614, 4626, 4636, 4637], "paulitable": 4519, ".paulitable": [4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544], "quaternion": 4545, ".quaternion": [4546, 4547, 4548, 4549, 4550, 4551], "_axis": 4546, "_rotation": 4546, "_euler": 4547, ".norm": 4548, ".normalize": 4549, "_zyz": [4551, 5133], "scalarop": 4552, ".scalarop": [4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567], "sparsepauliop": 4568, ".sparsepauliop": [4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594], ".chop": 4570, "_sparse": 4579, ".simplify": 4588, ".sum": 4589, "stabilizerstate": 4595, ".stabilizerstate": [4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613], "stabilizertable": 4614, "stabilizer": [4614, 4626, 4636, 4637], ".stabilizertable": [4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639], "statevector": 4640, ".statevector": [4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666], ".inner": 4652, "stinespring": 4667, ".stinespring": [4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685], "superop": 4686, ".superop": [4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704], "twoqubitbasisdecomposer": 4705, ".twoqubitbasisdecomposer": [4706, 4707, 4708, 4709, 4710, 4711], ".decomp": [4706, 4707, 4708, 4709], "supercontrolled": [4708, 4709], ".traces": 4711, "xxdecomposer": 4712, ".xxdecomposer": 4713, ".average": 4714, ".concurrence": 4715, ".diamond": 4717, "_norm": 4717, ".entanglement": 4718, "_formation": 4718, ".entropy": 4719, ".hellinger": [4721, 4722], "_distance": [4721, 4842], ".mutual": 4723, "_information": 4723, ".partial": 4724, "_trace": 4724, ".process": 4726, "_cnotdihedral": 4729, "_table": [4734, 4736], ".shannon": 4739, "_entropy": 4739, "_decompose": [4741, 5017], "basereadoutmitigator": 4742, ".basereadoutmitigator": [4743, 4744], ".quasi": [4744, 4749, 4771], "correlatedreadoutmitigator": 4745, ".correlatedreadoutmitigator": [4746, 4747, 4748, 4749, 4750], ".assignment": [4746, 4768], ".stddev": [4750, 4772], "_upper": [4750, 4772], "_bound": [4750, 4772], ".counts": [4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766], ".fromkeys": [4754, 4777, 4791, 4906, 5298, 5310, 5322], ".hex": [4756, 4779, 4793], "_outcomes": [4756, 4757], ".int": 4757, ".items": [4758, 4780, 4794, 4908, 4931, 5300, 5312, 5324], ".keys": [4759, 4781, 4795, 4909, 4932, 5301, 5313, 5325], ".most": 4760, "_frequent": 4760, ".popitem": [4762, 4783, 4798, 4911, 5303, 5315, 5327], ".setdefault": [4763, 4784, 4799, 4912, 5304, 5316, 5328], ".shots": 4764, ".values": [4766, 4786, 4801, 4914, 4940, 5306, 5318, 5330], "localreadoutmitigator": 4767, ".localreadoutmitigator": [4768, 4769, 4770, 4771, 4772], "probdistribution": 4773, ".probdistribution": [4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786], ".binary": [4774, 4788], "quasidistribution": 4787, ".quasidistribution": [4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801], ".nearest": 4796, "_probability": 4796, "_distribution": [4796, 4812], ".resulterror": 4810, ".marginal": [4811, 4812, 4813], "scheduleconfig": 4814, ".methods": 4815, "evolutionsynthesis": 4817, ".evolutionsynthesis": 4818, "lietrotter": 4819, ".lietrotter": 4820, "matrixexponential": 4821, ".matrixexponential": 4822, "productformula": 4823, ".productformula": 4824, "suzukitrotter": 4825, ".suzukitrotter": 4826, "_overview": 4828, ".parallel": 4830, "analysispass": 4831, ".analysispass": [4832, 4833], "conditionalcontroller": 4834, ".conditionalcontroller": [4835, 4836, 4837, 4838], "_flow": [4835, 4838, 4862, 4865, 4869, 4872], "_controller": [4835, 4838, 4862, 4865, 4869, 4872], ".controller": [4836, 4863, 4870], "_factory": [4836, 4863, 4870], "_passes": [4837, 4864, 4871], "couplingmap": 4839, ".couplingmap": [4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860], "_edge": [4840, 4882], "_physical": [4841, 4888], ".distance": 4843, "_full": 4845, "_grid": 4846, "_heavy": [4847, 4848], "_hex": 4847, "_hexagonal": 4849, "_lattice": 4849, "_line": 4850, "_ring": 4851, ".largest": 4854, "_component": 4854, ".make": 4855, "_symmetric": 4855, ".neighbors": 4856, ".shortest": 4858, "_undirected": 4858, ".subgraph": 4860, "dowhilecontroller": 4861, ".dowhilecontroller": [4862, 4863, 4864, 4865], "fenceddagcircuit": 4866, "fencedpropertyset": 4867, "flowcontroller": 4868, ".flowcontroller": [4869, 4870, 4871, 4872], "instructiondurations": 4873, ".instructiondurations": [4874, 4875, 4876, 4877], ".units": 4876, "_used": 4876, "instructionproperties": 4878, ".layout": [4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 5109, 5110], "_into": 4882, "_intlist": 4885, "_layout": [4887, 5092, 5286], "_registers": 4889, "_virtual": 4890, ".order": 4891, "_based": 4891, "_type": 4891, ".reorder": 4892, "passmanager": 4894, ".passmanager": [4895, 4896, 4897, 4898, 4899, 4900], "passmanagerconfig": 4901, ".passmanagerconfig": 4902, "propertyset": 4903, ".propertyset": [4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914], "stagedpassmanager": 4915, ".stagedpassmanager": [4916, 4917, 4918, 4919, 4920, 4921], "_coupling": [4924, 5287], ".durations": 4925, "_non": 4927, "_global": 4927, "_names": [4927, 4934, 5229], "_supported": 4930, ".operation": [4933, 4934], ".operations": 4935, ".qargs": 4936, ".timing": 4937, "_constraints": [4937, 5038, 5046, 5059], "transformationpass": 4941, ".transformationpass": [4942, 4943], ".transpileraccesserror": 4944, ".transpilererror": 4945, "alapschedule": 4946, ".alapschedule": [4947, 4948], "alapscheduleanalysis": 4949, ".alapscheduleanalysis": [4950, 4951], "asapschedule": 4952, ".asapschedule": [4953, 4954], "asapscheduleanalysis": 4955, ".asapscheduleanalysis": [4956, 4957], "alignmeasures": 4958, ".alignmeasures": [4959, 4960], "applylayout": 4961, ".applylayout": [4962, 4963], "bipmapping": 4964, ".bipmapping": [4965, 4966], "barrierbeforefinalmeasurements": 4967, ".barrierbeforefinalmeasurements": [4968, 4969], "basicswap": 4970, ".basicswap": [4971, 4972], "basistranslator": 4973, ".basistranslator": [4974, 4975], "csplayout": 4976, ".csplayout": [4977, 4978], "cxcancellation": 4979, ".cxcancellation": [4980, 4981], "cxdirection": 4982, ".cxdirection": [4983, 4984], "checkcxdirection": 4985, ".checkcxdirection": [4986, 4987], "checkgatedirection": 4988, ".checkgatedirection": [4989, 4990], "checkmap": 4991, ".checkmap": [4992, 4993], "collect": [4994, 4997], "1qruns": [4994, 4995, 4996], "2qblocks": [4997, 4998, 4999], "collectlinearfunctions": 5000, ".collectlinearfunctions": [5001, 5002], "collectmultiqblocks": 5003, ".collectmultiqblocks": [5004, 5005, 5006, 5007], ".union": 5007, "commutationanalysis": 5008, ".commutationanalysis": [5009, 5010], "commutativecancellation": 5011, ".commutativecancellation": [5012, 5013], "commuting": 5014, "2qgaterouter": [5014, 5015, 5016, 5017], ".commuting": [5015, 5016, 5017], "consolidateblocks": 5018, ".consolidateblocks": [5019, 5020], "constrainedreschedule": 5021, ".constrainedreschedule": [5022, 5023], "containsinstruction": 5024, ".containsinstruction": [5025, 5026], "countops": 5027, ".countops": [5028, 5029], "countopslongestpath": 5030, ".countopslongestpath": [5031, 5032], "crosstalkadaptiveschedule": 5033, ".crosstalkadaptiveschedule": [5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061], ".check": [5036, 5037], "_dependency": [5036, 5037], "_xtalk": [5037, 5051], ".coherence": 5038, "_updated": 5039, "vars": 5040, "_tuple": [5041, 5049, 5060], ".enforce": 5042, ".extract": [5043, 5044, 5045], "_crosstalk": 5043, "_relevant": 5043, "_overlap": 5044, "_solution": 5045, "_candidates": 5047, "_significant": 5051, ".objective": [5053, 5243, 5249], ".powerset": 5055, "2f": 5056, ".singleq": 5060, "_optimization": 5061, "dagfixedpoint": 5062, ".dagfixedpoint": [5063, 5064], "daglongestpath": 5065, ".daglongestpath": [5066, 5067], "decompose": 5068, "denselayout": 5071, ".denselayout": [5072, 5073], "depth": 5074, "dynamicaldecoupling": 5077, ".dynamicaldecoupling": [5078, 5079], "echorzxweyldecomposition": 5080, ".echorzxweyldecomposition": [5081, 5082], "enlargewithancilla": 5083, ".enlargewithancilla": [5084, 5085], "fixedpoint": 5086, ".fixedpoint": [5087, 5088], "fullancillaallocation": 5089, ".fullancillaallocation": [5090, 5091, 5092], "gatedirection": 5093, ".gatedirection": [5094, 5095], "gatesinbasis": 5096, ".gatesinbasis": [5097, 5098], "hoareoptimizer": 5099, ".hoareoptimizer": [5100, 5101], "instructiondurationcheck": 5102, ".instructiondurationcheck": [5103, 5104], "inversecancellation": 5105, ".inversecancellation": [5106, 5107], "2qdistance": [5108, 5109, 5110], "linearfunctionssynthesis": 5111, ".linearfunctionssynthesis": [5112, 5113], "linearfunctionstopermutations": 5114, ".linearfunctionstopermutations": [5115, 5116], "lookaheadswap": 5117, ".lookaheadswap": [5118, 5119], "mergeadjacentbarriers": 5120, ".mergeadjacentbarriers": [5121, 5122], "noiseadaptivelayout": 5123, ".noiseadaptivelayout": [5124, 5125], "numtensorfactors": 5126, ".numtensorfactors": [5127, 5128], "optimize": [5129, 5134, 5137], "1qgates": [5129, 5130, 5131, 5132, 5133], "_u": 5130, ".yzy": 5133, "1qgatesdecomposition": [5134, 5135, 5136], "1qgatessimplecommutation": [5137, 5138, 5139], "paddelay": 5140, ".paddelay": [5141, 5142], "paddynamicaldecoupling": 5143, ".paddynamicaldecoupling": [5144, 5145], "pulsegates": 5146, ".pulsegates": [5147, 5148, 5149, 5150], ".supported": [5150, 5156, 5162], "rzxcalibrationbuilder": 5151, ".rzxcalibrationbuilder": [5152, 5153, 5154, 5155, 5156], "_cr": [5154, 5160], "_inst": [5154, 5160], "rzxcalibrationbuildernoecho": 5157, ".rzxcalibrationbuildernoecho": [5158, 5159, 5160, 5161, 5162], "removebarriers": 5163, ".removebarriers": [5164, 5165], "removediagonalgatesbeforemeasure": 5166, ".removediagonalgatesbeforemeasure": [5167, 5168], "removefinalmeasurements": 5169, ".removefinalmeasurements": [5170, 5171], "removeresetinzerostate": 5172, ".removeresetinzerostate": [5173, 5174], "sabrelayout": 5175, ".sabrelayout": [5176, 5177], "sabreswap": 5178, ".sabreswap": [5179, 5180], "setiolatency": 5181, ".setiolatency": [5182, 5183], "setlayout": 5184, ".setlayout": [5185, 5186], "size": 5187, "stochasticswap": 5190, ".stochasticswap": [5191, 5192], "templateoptimization": 5193, ".templateoptimization": [5194, 5195], "timeunitconversion": 5196, ".timeunitconversion": [5197, 5198], "triviallayout": 5199, ".triviallayout": [5200, 5201], "unitarysynthesis": 5202, ".unitarysynthesis": [5203, 5204], "unroll": 5205, "3qormore": [5205, 5206, 5207], ".unroll": [5206, 5207], "unrollcustomdefinitions": 5208, ".unrollcustomdefinitions": [5209, 5210], "unroller": 5211, ".unroller": [5212, 5213], "vf": [5214, 5217], "2layout": [5214, 5215, 5216], ".vf": [5215, 5216, 5218, 5219], "2postlayout": [5217, 5218, 5219], "validatepulsegates": 5220, ".validatepulsegates": [5221, 5222], "width": 5223, "unitarysynthesisplugin": 5226, ".unitarysynthesisplugin": 5227, "unitarysynthesispluginmanager": 5228, "_synthesis": 5229, "_plugin": 5229, "_preset": 5230, "_pass": 5230, "_manager": [5230, 5231, 5232, 5233, 5234, 5283], ".level": [5231, 5232, 5233, 5234], "aqc": 5235, "aqcsynthesisplugin": 5237, ".aqcsynthesisplugin": 5238, "approximatecircuit": 5239, ".approximatecircuit": 5240, "approximatingobjective": 5241, ".approximatingobjective": [5242, 5243], "cnotunitcircuit": 5244, ".cnotunitcircuit": 5245, "cnotunitobjective": 5246, "defaultcnotunitobjective": 5247, ".defaultcnotunitobjective": [5248, 5249], "quantuminstance": [5250, 5337], ".quantuminstance": [5251, 5252, 5253, 5254, 5255, 5256, 5257], ".cals": 5252, ".maybe": 5254, "_refresh": 5254, "_cals": 5254, "_execution": 5255, ".algorithm": 5258, "_globals": 5258, ".deprecate": [5260, 5261], ".detach": 5262, "_aer": 5264, "_main": 5266, "_process": 5266, ".local": 5267, "_hardware": 5267, "completemeasfitter": 5268, ".completemeasfitter": [5269, 5270, 5271], "_data": [5269, 5273], ".subset": 5271, "_fitter": 5271, "tensoredmeasfitter": 5272, ".tensoredmeasfitter": [5273, 5274], "_args": 5275, ".summarize": 5276, "_method": 5278, ".visualizationerror": 5279, ".array": 5280, "_latex": 5280, "_drawer": [5281, 5282, 5283, 5334, 5354], ".pass": 5283, ".plot": [5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294], "_bloch": [5284, 5285, 5349], "_multivector": 5284, "_histogram": [5290, 5349], "_city": 5291, "_hinton": 5292, "_paulivec": 5293, "_qsphere": 5294, "iqxdebugging": [5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306], "_v": [5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331], "iqxsimple": [5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318], "iqxstandard": [5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330], "draw": 5331, "defaultstyle": 5332, ".timeline": [5333, 5334], ".visualize": 5335, "_transition": 5335, "tutorials": 5336, "introductory": 5336, "advanced": 5336, "sample": 5336, "\u306b\u304a\u3051\u308b": 5337, "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0": [5337, 5341, 5342, 5343, 5344, 5345, 5346, 5372, 5373], "\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea": 5337, "\u5b8c\u5168": [5337, 5342, 5362], "\u5b9f\u4f8b": 5337, "\u4f5c\u6210\u5f8c": 5337, "\u8a2d\u5b9a": [5337, 5355, 5364], "\u4f7f\u7528": [5337, 5342, 5349, 5358, 5364, 5367, 5369], "\u53ce\u675f": 5338, "\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0": 5338, "\u52fe\u914d": [5338, 5340, 5362], "\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af": [5338, 5362], "\u5229\u7528": [5338, 5353, 5370], "\u30ed\u30b0": [5338, 5355], "\u306b\u3088\u308b": [5338, 5345, 5349, 5358, 5362, 5372], "\u30ce\u30a4\u30ba": [5339, 5365, 5366, 5367, 5368], "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": [5339, 5364, 5365, 5371], "\u306a\u3044": 5339, "\u5834\u5408": [5339, 5345, 5372], "\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9": 5339, "\u304a\u3088\u3073": [5339, 5357, 5361], "\u6e2c\u5b9a": [5339, 5345, 5350, 5361, 5362, 5364, 5372], "\u8aa4\u5dee": 5339, "\u7de9\u548c": 5339, "\u9ad8\u5ea6": [5340, 5352, 5360], "\u4f7f\u3044\u65b9": [5340, 5358], "\u671f\u70b9": 5340, "(initial": 5340, "point": 5340, "\u671f\u5f85\u5024": [5340, 5361], "(expectation": 5340, "(gradient": 5340, "instance": 5340, "\u8fd1\u4f3c": [5341, 5362, 5368], "\u6700\u9069": [5341, 5362], "\u632f\u5e45": [5342, 5368], "\u5897\u5e45": 5342, "\u30aa\u30e9\u30af\u30eb": 5342, "\u3068\u3057\u3066": [5342, 5354], "\u3055\u307e\u3056\u307e\u306a": 5342, "\u30bf\u30a4\u30d7": [5342, 5368], "\u30af\u30e9\u30b9": [5342, 5353], "\u72b6\u614b": [5342, 5348, 5349, 5350, 5361, 5362, 5364], "\u67d4\u8edf": 5342, "\u5f15\u6570": 5342, "good": 5342, "\u6307\u5b9a": 5342, "iterations": 5342, "\u56de\u6570": 5342, "sat": 5343, "\u554f\u984c": 5343, "\u6c42\u89e3": 5343, "\u30d6\u30fc\u30eb": 5343, "\u8ad6\u7406": 5343, "\u8868\u73fe": [5343, 5347], "\u7d20\u56e0": 5344, "\u5206\u89e3": 5344, "\u53cd\u5fa9": [5345, 5372], "\u76f8\u63a8\u5b9a": [5345, 5372], "\u6761\u4ef6": [5345, 5350, 5372], "\u4ed8\u304d": [5345, 5350, 5372], "\u30e1\u30bd\u30c3\u30c9": [5345, 5358, 5372], "ipe": [5345, 5372], "\u30d3\u30c3\u30c8\u30b2\u30fc\u30c8": [5345, 5350, 5372], "\u671f\u5316": [5345, 5372], "\u5236\u5fa1": [5345, 5350, 5354, 5372], "\u57fa\u5e95": [5345, 5350, 5372], "\u30ea\u30bb\u30c3\u30c8": [5345, 5350, 5372], "\u4f4d\u76f8": [5345, 5350, 5357, 5372], "\u88dc\u6b63": [5345, 5372], "\u5168\u3066": [5345, 5359, 5372], "\u30b5\u30d6\u30b9\u30c6\u30c3\u30d7": [5345, 5372], "\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb": [5346, 5351, 5360, 5363, 5371], "\u57fa\u672c": [5347, 5348, 5358, 5366], "\u56de\u7dda": [5347, 5348], "\u69cb\u7bc9": [5347, 5348, 5356, 5357, 5366], "\u30e6\u30cb\u30bf\u30ea\u30fc": [5347, 5348, 5362, 5364], "openqasm": [5347, 5348], "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": [5347, 5348, 5354, 5359], "\u4f7f\u3063": 5348, "\u30d9\u30af\u30c8\u30eb": [5348, 5349, 5350, 5361, 5364], "\u30c4\u30fc\u30eb": 5349, "\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0": 5349, "\u30d7\u30ed\u30c3\u30c8": [5349, 5354], "\u3068\u304d": 5349, "plot": 5349, "()": [5349, 5354, 5361], "\u51fa\u529b": [5349, 5354, 5367], "\u95a2\u6570": [5349, 5354, 5357, 5361], "\u30d6\u30ed\u30c3\u30db": 5349, "\u8abf\u6574": [5349, 5355], "\u64cd\u4f5c": 5350, "\u5358\u4e00\u91cf\u5b50": 5350, "\u6052\u7b49": 5350, "\u30d1\u30a6\u30ea\u30b2\u30fc\u30c8": 5350, "\u30d5\u30ea\u30c3\u30d7": 5350, "\u30a2\u30f3\u30c9": 5350, "\u30d5\u30a7\u30fc\u30ba": 5350, "\u30af\u30ea\u30d5\u30a9\u30fc\u30c9\u30b2\u30fc\u30c8": 5350, "\u30a2\u30c0\u30de\u30fc\u30eb\u30b2\u30fc\u30c8": 5350, "\u307e\u305f": 5350, "sqrt": 5350, "{z": 5350, "^{": 5350, "dagger": 5350, "\u5171\u5f79": 5350, "{s": 5350, "\u6a19\u6e96": [5350, 5355], "\u56de\u8ee2": 5350, "\u8ef8\u307e\u308f\u308a": 5350, "\u8907\u6570": [5350, 5364], "\u6570\u5b66": 5350, "\u304a\u3051\u308b": 5350, "\u8868\u8a18": 5350, "\u9806\u756a": 5350, "\u306b\u5bfe\u3059\u308b": 5350, "two": 5350, "\u5236\u5fa1not": 5350, "\u53cd\u8ee2": [5350, 5354], "\u8ef8\u5468\u308a": 5350, "swap": 5350, "toffoli": 5350, "ccx": 5350, "\u5236\u5fa1swap": 5350, "fredkin": 5350, "\u30e6\u30cb\u30bf\u30ea": 5350, "\u4efb\u610f": 5350, "\u8a73\u7d30": 5350, "\u8aac\u660e": 5350, "\u62bd\u8c61": 5352, "(opaque": 5352, "\u8907\u5408": 5352, "(composite": 5352, "\u30d1\u30e9\u30e1\u30fc\u30bf": 5352, "\u30d0\u30a4\u30f3\u30c9": 5352, "\u30b3\u30f3\u30d1\u30a4\u30eb\u30b3\u30b9\u30c8": 5352, "\u6e1b\u3089": 5352, "\u30b3\u30f3\u30dd\u30b8\u30b7\u30e7\u30f3": [5352, 5353], "\u30aa\u30da\u30ec\u30fc\u30bf\u30fc": 5353, "\u4f5c\u6210": [5353, 5356, 5367], "\u30d7\u30ed\u30d1\u30c6\u30a3": 5353, "\u30a4\u30f3\u30d7\u30c3\u30c8\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8": 5353, "\u6b21\u5143": 5353, "\u5909\u63db": [5353, 5366, 5368], "\u7d50\u5408": [5353, 5362, 5366], "\u30c6\u30f3\u30bd\u30eb": [5353, 5361], "\u5c55\u958b": 5353, "\u30b5\u30d6\u30b7\u30b9\u30c6\u30e0": 5353, "\u5408\u6210": [5353, 5361], "\u7dda\u578b": 5353, "\u6697\u9ed9": 5353, "\u6bd4\u8f03": [5353, 5365], "\u30d7\u30ed\u30bb\u30b9\u30d5\u30a3\u30c7\u30ea\u30c6\u30a3\u30fc": 5353, "\u63cf\u753b": 5354, "\u30ec\u30f3\u30c0\u30e9\u30fc": 5354, "\u30ab\u30b9\u30bf\u30de\u30a4\u30ba": 5354, "\u30d0\u30ea\u30a2": 5354, "\u7121\u52b9": 5354, "\u9806\u5e8f": 5354, "\u7279\u6709": 5354, "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc": 5355, "\u30d1\u30b9": 5355, "\u30de\u30cd\u30fc\u30b8\u30e3\u30fc": 5355, "\u30d1\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8": 5355, "\u540c\u3058": 5355, "\u306a\u308b": 5355, "\u5b9f\u88c5": 5355, "\u30d7\u30ea\u30bb\u30c3\u30c8": 5355, "\u30d1\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc": 5355, "\u7d39\u4ecb": 5355, "basicmapper": 5355, "\u307f\u308b": 5355, "\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u30fc\u30ed\u30ae\u30f3\u30b0": 5355, "\u30ed\u30ae\u30f3\u30b0": 5355, "\u30e9\u30a4\u30d6\u30e9\u30ea": 5355, "\u30ed\u30b0\u30ec\u30d9\u30eb": 5355, "\u5e73\u884c": 5355, "\u6271\u3046": 5355, "\u305f\u3081": [5355, 5365], "\u30d1\u30eb\u30b9\u30b2\u30fc\u30c8": 5356, "\u8f03\u6b63": 5356, "\u30ea\u30f3\u30af": 5356, "\u30ab\u30b9\u30bf\u30e0\u30b2\u30fc\u30c8": 5356, "\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb": 5357, "\u547d\u4ee4": [5357, 5359, 5364], "\u30d1\u30eb\u30b9": 5357, "\u30d1\u30e9\u30e1\u30c8\u30ea\u30c3\u30af": 5357, "\u30b5\u30f3\u30d7\u30eb": 5357, "\u306b\u3088\u3063": 5357, "\u8a18\u8ff0": [5357, 5359], "\u6ce2\u5f62": 5357, "\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc": 5357, "shift": 5357, "\u914d\u7f6e": 5357, "\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8": 5357, "align": 5357, "(duration": 5357, "\u5468\u6ce2": [5357, 5359], "\u30aa\u30d5\u30bb\u30c3\u30c8": 5357, "\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc": 5358, "\u5b9a\u7fa9": [5358, 5359], "\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0": 5358, "\u60c5\u5831": [5359, 5362], "\u53d6\u5f97": 5359, "\u5c5e\u6027": 5359, "specifications": 5359, "\u8a73\u3057\u304f": 5359, "\u3053\u306e": 5359, "\u30da\u30fc\u30b8": 5359, "\u4ed5\u69d8": 5359, "\u4e00\u90e8": 5359, "\u898b\u76f4\u3057": 5359, "\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc": 5359, "\u30c7\u30d5\u30a9\u30eb\u30c8": 5359, "\u30c9\u30e9\u30a4\u30d6": 5359, "\u30d1\u30eb\u30b9\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb": 5359, "\u30d1\u30a6\u30ea": 5361, "\u6f14\u7b97\u5b50": [5361, 5362, 5363, 5366, 5367], "\u30d1\u30fc\u30c8i": 5361, "\u4ee3\u6570": 5361, "\u6f14\u7b97": 5361, "\u8ff0\u8a9e": 5361, "\u30d1\u30fc\u30c8": 5361, "ii": 5361, "\u884c\u5217": [5361, 5364, 5367, 5370], "iii": 5361, "\u30b5\u30d6\u30af\u30e9\u30b9": 5361, "\u30d1\u30fc\u30c8iv": 5361, "\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc": 5361, "\u6642\u9593": 5361, "\u767a\u5c55": 5361, "exp": 5361, "\u52a0\u91cd": 5361, "\u7528\u3044": [5361, 5365, 5368, 5370], "\u4e00\u6b21": 5362, "\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc": 5362, "\u30b7\u30d5\u30c8": 5362, "\u7dda\u5f62": 5362, "\u6709\u9650": 5362, "\u5dee\u5206": 5362, "\u81ea\u7136": 5362, "\u30d8\u30b7\u30a2\u30f3": 5362, "\u4e8c\u6b21": 5362, "\u30d5\u30a3\u30c3\u30b7\u30e3\u30fc": 5362, "\u30d6\u30ed\u30c3\u30af": 5362, "\u5bfe\u89d2": 5362, "\u5fdc\u7528\u4f8b": 5362, "\u30d9\u30fc\u30b9": 5362, "\u30b7\u30e7\u30c3\u30c8": 5364, "\u8fd4\u3057": 5364, "\u81ea\u52d5\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9": 5364, "gpu": 5364, "\u7cbe\u5ea6": 5364, "\u30ab\u30b9\u30bf\u30e0\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": 5364, "\u4fdd\u5b58": 5364, "\u6700\u7d42": 5364, "\u5bc6\u5ea6": 5364, "\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6\u30fc": 5364, "\u30ab\u30b9\u30bf\u30e0\u30e6\u30cb\u30bf\u30ea\u30fc": [5364, 5367], "\u30c7\u30d0\u30a4\u30b9\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5365, "\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": [5365, 5366, 5367], "\u30c7\u30d0\u30a4\u30b9\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": 5365, "\u30e2\u30c3\u30af\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": 5365, "\u30c7\u30d0\u30a4\u30b9": 5365, "\u30c6\u30b9\u30c8": 5365, "\u6a21\u5023": 5365, "\u751f\u6210": 5365, "errors": 5366, "\u30a8\u30e9\u30fc": 5366, "quantumchannel": 5366, "\u8aad\u307f\u51fa\u3057": 5366, "\u3059\u3079\u3066": 5366, "\u7279\u5b9a": 5366, "\u7406\u60f3": [5366, 5367], "\u30d3\u30c3\u30c8\u30d5\u30ea\u30c3\u30d7\u30a8\u30e9\u30fc\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": 5366, "\u71b1\u7de9\u548c": 5366, "\u30ab\u30b9\u30bf\u30e0\u30e6\u30cb\u30bf\u30ea\u30fc\u30b2\u30fc\u30c8": 5367, "\u30ab\u30b9\u30bf\u30e0\u30e6\u30cb\u30bf\u30ea\u30fc\u30ce\u30a4\u30ba\u30e2\u30c7\u30eb": 5367, "\u30ea\u30bb\u30c3\u30c8\u30ce\u30a4\u30ba": 5368, "\u6e1b\u8870": 5368, "\u7570\u306a\u308b": 5368, "\u5165\u529b": 5368, "\u62e1\u5f35": 5369, "\u30b9\u30bf\u30d3\u30e9\u30a4\u30b6\u30fc\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3": 5369, "\u3053\u308c": 5369, "\u3088\u3046": 5369, "\u52d5\u4f5c": 5369, "\u3044\u308b": 5369, "\u306e\u3067\u3057\u3087": 5369, "\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3": 5369, "\u3044\u3064": 5369, "\u7a4d\u72b6": 5370, "\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9": 5371, "-u": 5372, "\u30c6\u30ad\u30b9\u30c8": 5373, "\u30d6\u30c3\u30af": 5373}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})