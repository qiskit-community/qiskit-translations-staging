Search.setIndex({"docnames": ["apidocs/qiskit_machine_learning", "apidocs/qiskit_machine_learning.algorithms", "apidocs/qiskit_machine_learning.circuit.library", "apidocs/qiskit_machine_learning.connectors", "apidocs/qiskit_machine_learning.datasets", "apidocs/qiskit_machine_learning.kernels", "apidocs/qiskit_machine_learning.kernels.algorithms", "apidocs/qiskit_machine_learning.neural_networks", "apidocs/qiskit_machine_learning.runtime", "apidocs/qiskit_machine_learning.utils", "apidocs/qiskit_machine_learning.utils.loss_functions", "getting_started", "index", "release_notes", "stubs/qiskit_machine_learning.QiskitMachineLearningError", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.get_label", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.loss", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.save_model", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.set_seed", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.train", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.get_output", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.loss", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.parameter_values", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.train", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.discriminator_net", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.get_label", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.load_model", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.loss", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.save_model", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.set_seed", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.train", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.FITTED", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.fit", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.num_steps", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.precomputed", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.predict", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.discriminator_net", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.get_label", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.gradient_penalty", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.load_model", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.loss", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.save_model", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.set_seed", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.train", "stubs/qiskit_machine_learning.algorithms.QGAN", "stubs/qiskit_machine_learning.algorithms.QGAN.backend", "stubs/qiskit_machine_learning.algorithms.QGAN.d_loss", "stubs/qiskit_machine_learning.algorithms.QGAN.discriminator", "stubs/qiskit_machine_learning.algorithms.QGAN.g_loss", "stubs/qiskit_machine_learning.algorithms.QGAN.generator", "stubs/qiskit_machine_learning.algorithms.QGAN.get_rel_entr", "stubs/qiskit_machine_learning.algorithms.QGAN.quantum_instance", "stubs/qiskit_machine_learning.algorithms.QGAN.random", "stubs/qiskit_machine_learning.algorithms.QGAN.rel_entr", "stubs/qiskit_machine_learning.algorithms.QGAN.run", "stubs/qiskit_machine_learning.algorithms.QGAN.seed", "stubs/qiskit_machine_learning.algorithms.QGAN.set_backend", "stubs/qiskit_machine_learning.algorithms.QGAN.set_discriminator", "stubs/qiskit_machine_learning.algorithms.QGAN.set_generator", "stubs/qiskit_machine_learning.algorithms.QGAN.tol_rel_ent", "stubs/qiskit_machine_learning.algorithms.QGAN.train", "stubs/qiskit_machine_learning.algorithms.QSVC", "stubs/qiskit_machine_learning.algorithms.QSVC.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.QSVR", "stubs/qiskit_machine_learning.algorithms.QSVR.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.construct_circuit", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.discriminator", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.get_output", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.loss", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.optimizer", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.parameter_values", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.seed", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.train", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.load", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.save", "stubs/qiskit_machine_learning.algorithms.TrainableModel", "stubs/qiskit_machine_learning.algorithms.TrainableModel.fit", "stubs/qiskit_machine_learning.algorithms.TrainableModel.initial_point", "stubs/qiskit_machine_learning.algorithms.TrainableModel.loss", "stubs/qiskit_machine_learning.algorithms.TrainableModel.neural_network", "stubs/qiskit_machine_learning.algorithms.TrainableModel.optimizer", "stubs/qiskit_machine_learning.algorithms.TrainableModel.predict", "stubs/qiskit_machine_learning.algorithms.TrainableModel.score", "stubs/qiskit_machine_learning.algorithms.TrainableModel.warm_start", "stubs/qiskit_machine_learning.algorithms.VQC", "stubs/qiskit_machine_learning.algorithms.VQC.ansatz", "stubs/qiskit_machine_learning.algorithms.VQC.circuit", "stubs/qiskit_machine_learning.algorithms.VQC.feature_map", "stubs/qiskit_machine_learning.algorithms.VQC.fit", "stubs/qiskit_machine_learning.algorithms.VQC.num_qubits", "stubs/qiskit_machine_learning.algorithms.VQR", "stubs/qiskit_machine_learning.algorithms.VQR.ansatz", "stubs/qiskit_machine_learning.algorithms.VQR.feature_map", "stubs/qiskit_machine_learning.algorithms.VQR.num_qubits", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits", "stubs/qiskit_machine_learning.connectors.TorchConnector", "stubs/qiskit_machine_learning.connectors.TorchConnector.forward", "stubs/qiskit_machine_learning.connectors.TorchConnector.neural_network", "stubs/qiskit_machine_learning.connectors.TorchConnector.sparse", "stubs/qiskit_machine_learning.connectors.TorchConnector.weight", "stubs/qiskit_machine_learning.datasets.ad_hoc_data", "stubs/qiskit_machine_learning.datasets.breast_cancer", "stubs/qiskit_machine_learning.datasets.digits", "stubs/qiskit_machine_learning.datasets.gaussian", "stubs/qiskit_machine_learning.datasets.iris", "stubs/qiskit_machine_learning.datasets.wine", "stubs/qiskit_machine_learning.kernels.QuantumKernel", "stubs/qiskit_machine_learning.kernels.QuantumKernel.assign_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.bind_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.construct_circuit", "stubs/qiskit_machine_learning.kernels.QuantumKernel.evaluate", "stubs/qiskit_machine_learning.kernels.QuantumKernel.feature_map", "stubs/qiskit_machine_learning.kernels.QuantumKernel.get_unbound_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.quantum_instance", "stubs/qiskit_machine_learning.kernels.QuantumKernel.unbound_feature_map", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_param_binds", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_parameters", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.circuit", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_gradients", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_params", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.interpret", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.quantum_instance", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.set_interpret", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.weight_params", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.backward", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.forward", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.sparse", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.input_gradients", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.operator", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.quantum_instance", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probabilities", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probability_gradients", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sample", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sampling", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.ansatz", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.circuit", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.feature_map", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.num_qubits", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.fit", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.loss_func", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.measurement_error_mitigation", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.model", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.optimizer", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.predict", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.provider", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.score", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.shots", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.execution_time", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.job_id", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.model_state_dict", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.prediction", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.score", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.train_history", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.val_history", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.__call__", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.Loss", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.__call__", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate", "tutorials/01_neural_networks", "tutorials/02_neural_network_classifier_and_regressor", "tutorials/03_quantum_kernel", "tutorials/04_qgans_for_loading_random_distributions", "tutorials/05_torch_connector", "tutorials/06_torch_runtime", "tutorials/07_pegasos_qsvc", "tutorials/08_quantum_kernel_trainer", "tutorials/09_saving_and_loading models", "tutorials/10_effective_dimension", "tutorials/index"], "filenames": ["apidocs/qiskit_machine_learning.rst", "apidocs/qiskit_machine_learning.algorithms.rst", "apidocs/qiskit_machine_learning.circuit.library.rst", "apidocs/qiskit_machine_learning.connectors.rst", "apidocs/qiskit_machine_learning.datasets.rst", "apidocs/qiskit_machine_learning.kernels.rst", "apidocs/qiskit_machine_learning.kernels.algorithms.rst", "apidocs/qiskit_machine_learning.neural_networks.rst", "apidocs/qiskit_machine_learning.runtime.rst", "apidocs/qiskit_machine_learning.utils.rst", "apidocs/qiskit_machine_learning.utils.loss_functions.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_machine_learning.QiskitMachineLearningError.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.get_label.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.loss.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.save_model.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.train.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.get_output.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.loss.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.parameter_values.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.train.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.discriminator_net.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.get_label.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.load_model.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.loss.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.save_model.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.train.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.FITTED.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.fit.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.num_steps.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.precomputed.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.predict.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.discriminator_net.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.get_label.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.gradient_penalty.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.load_model.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.loss.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.save_model.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.train.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.backend.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.d_loss.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.g_loss.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.generator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.get_rel_entr.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.quantum_instance.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.random.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.rel_entr.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.run.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.seed.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_backend.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_generator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.tol_rel_ent.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.train.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.construct_circuit.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.get_output.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.loss.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.optimizer.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.parameter_values.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.seed.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.train.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.load.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.save.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.fit.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.initial_point.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.loss.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.neural_network.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.optimizer.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.predict.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.score.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.warm_start.rst", "stubs/qiskit_machine_learning.algorithms.VQC.rst", "stubs/qiskit_machine_learning.algorithms.VQC.ansatz.rst", "stubs/qiskit_machine_learning.algorithms.VQC.circuit.rst", "stubs/qiskit_machine_learning.algorithms.VQC.feature_map.rst", "stubs/qiskit_machine_learning.algorithms.VQC.fit.rst", "stubs/qiskit_machine_learning.algorithms.VQC.num_qubits.rst", "stubs/qiskit_machine_learning.algorithms.VQR.rst", "stubs/qiskit_machine_learning.algorithms.VQR.ansatz.rst", "stubs/qiskit_machine_learning.algorithms.VQR.feature_map.rst", "stubs/qiskit_machine_learning.algorithms.VQR.num_qubits.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.forward.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.neural_network.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.sparse.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.weight.rst", "stubs/qiskit_machine_learning.datasets.ad_hoc_data.rst", "stubs/qiskit_machine_learning.datasets.breast_cancer.rst", "stubs/qiskit_machine_learning.datasets.digits.rst", "stubs/qiskit_machine_learning.datasets.gaussian.rst", "stubs/qiskit_machine_learning.datasets.iris.rst", "stubs/qiskit_machine_learning.datasets.wine.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.assign_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.bind_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.construct_circuit.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.evaluate.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.feature_map.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.get_unbound_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.quantum_instance.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.unbound_feature_map.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_param_binds.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_parameters.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.circuit.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_params.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.interpret.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.quantum_instance.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.set_interpret.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.weight_params.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.backward.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.forward.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.sparse.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.operator.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.quantum_instance.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probabilities.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probability_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sample.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sampling.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.ansatz.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.circuit.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.feature_map.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.num_qubits.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.fit.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.loss_func.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.measurement_error_mitigation.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.model.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.optimizer.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.predict.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.provider.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.score.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.shots.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.execution_time.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.job_id.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.model_state_dict.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.prediction.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.score.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.train_history.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.val_history.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.__call__.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.__call__.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate.rst", "tutorials/01_neural_networks.ipynb", "tutorials/02_neural_network_classifier_and_regressor.ipynb", "tutorials/03_quantum_kernel.ipynb", "tutorials/04_qgans_for_loading_random_distributions.ipynb", "tutorials/05_torch_connector.ipynb", "tutorials/06_torch_runtime.ipynb", "tutorials/07_pegasos_qsvc.ipynb", "tutorials/08_quantum_kernel_trainer.ipynb", "tutorials/09_saving_and_loading models.ipynb", "tutorials/10_effective_dimension.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Machine Learning API Reference", "Machine Learning Base Classes", "Circuit library for Machine Learning applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.circuit.library</span></code>)", "Connectors (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.connectors</span></code>)", "Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.datasets</span></code>)", "Quantum Kernels", "Quantum Kernel Algorithms", "Neural Networks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.neural_networks</span></code>)", "Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.runtime</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils</span></code>)", "Loss Functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils.loss_functions</span></code>)", "Premiers Pas", "Qiskit Machine Learning overview", "Release Notes", "QiskitMachineLearningError", "BinaryObjectiveFunction", "BinaryObjectiveFunction.gradient", "BinaryObjectiveFunction.objective", "DiscriminativeNetwork", "DiscriminativeNetwork.get_label", "DiscriminativeNetwork.loss", "DiscriminativeNetwork.save_model", "DiscriminativeNetwork.set_seed", "DiscriminativeNetwork.train", "GenerativeNetwork", "GenerativeNetwork.get_output", "GenerativeNetwork.loss", "GenerativeNetwork.parameter_values", "GenerativeNetwork.train", "MultiClassObjectiveFunction", "MultiClassObjectiveFunction.gradient", "MultiClassObjectiveFunction.objective", "NeuralNetworkClassifier", "NeuralNetworkClassifier.fit", "NeuralNetworkClassifier.predict", "NeuralNetworkClassifier.score", "NeuralNetworkRegressor", "NeuralNetworkRegressor.fit", "NeuralNetworkRegressor.predict", "NeuralNetworkRegressor.score", "NumPyDiscriminator", "NumPyDiscriminator.discriminator_net", "NumPyDiscriminator.get_label", "NumPyDiscriminator.load_model", "NumPyDiscriminator.loss", "NumPyDiscriminator.save_model", "NumPyDiscriminator.set_seed", "NumPyDiscriminator.train", "ObjectiveFunction", "ObjectiveFunction.gradient", "ObjectiveFunction.objective", "OneHotObjectiveFunction", "OneHotObjectiveFunction.gradient", "OneHotObjectiveFunction.objective", "PegasosQSVC", "PegasosQSVC.FITTED", "PegasosQSVC.UNFITTED", "PegasosQSVC.fit", "PegasosQSVC.num_steps", "PegasosQSVC.precomputed", "PegasosQSVC.predict", "PegasosQSVC.quantum_kernel", "PyTorchDiscriminator", "PyTorchDiscriminator.discriminator_net", "PyTorchDiscriminator.get_label", "PyTorchDiscriminator.gradient_penalty", "PyTorchDiscriminator.load_model", "PyTorchDiscriminator.loss", "PyTorchDiscriminator.save_model", "PyTorchDiscriminator.set_seed", "PyTorchDiscriminator.train", "QGAN", "QGAN.backend", "QGAN.d_loss", "QGAN.discriminator", "QGAN.g_loss", "QGAN.generator", "QGAN.get_rel_entr", "QGAN.quantum_instance", "QGAN.random", "QGAN.rel_entr", "QGAN.run", "QGAN.seed", "QGAN.set_backend", "QGAN.set_discriminator", "QGAN.set_generator", "QGAN.tol_rel_ent", "QGAN.train", "QSVC", "QSVC.quantum_kernel", "QSVR", "QSVR.quantum_kernel", "QuantumGenerator", "QuantumGenerator.construct_circuit", "QuantumGenerator.discriminator", "QuantumGenerator.get_output", "QuantumGenerator.loss", "QuantumGenerator.optimizer", "QuantumGenerator.parameter_values", "QuantumGenerator.seed", "QuantumGenerator.train", "SerializableModelMixin", "SerializableModelMixin.load", "SerializableModelMixin.save", "TrainableModel", "TrainableModel.fit", "TrainableModel.initial_point", "TrainableModel.loss", "TrainableModel.neural_network", "TrainableModel.optimizer", "TrainableModel.predict", "TrainableModel.score", "TrainableModel.warm_start", "VQC", "VQC.ansatz", "VQC.circuit", "VQC.feature_map", "VQC.fit", "VQC.num_qubits", "VQR", "VQR.ansatz", "VQR.feature_map", "VQR.num_qubits", "RawFeatureVector", "RawFeatureVector.feature_dimension", "RawFeatureVector.num_qubits", "TorchConnector", "TorchConnector.forward", "TorchConnector.neural_network", "TorchConnector.sparse", "TorchConnector.weight", "ad_hoc_data", "breast_cancer", "digits", "gaussian", "iris", "wine", "QuantumKernel", "QuantumKernel.assign_user_parameters", "QuantumKernel.bind_user_parameters", "QuantumKernel.construct_circuit", "QuantumKernel.evaluate", "QuantumKernel.feature_map", "QuantumKernel.get_unbound_user_parameters", "QuantumKernel.quantum_instance", "QuantumKernel.unbound_feature_map", "QuantumKernel.user_param_binds", "QuantumKernel.user_parameters", "QuantumKernelTrainer", "QuantumKernelTrainer.fit", "QuantumKernelTrainer.initial_point", "QuantumKernelTrainer.loss", "QuantumKernelTrainer.optimizer", "QuantumKernelTrainer.quantum_kernel", "QuantumKernelTrainerResult", "QuantumKernelTrainerResult.quantum_kernel", "CircuitQNN", "CircuitQNN.circuit", "CircuitQNN.input_gradients", "CircuitQNN.input_params", "CircuitQNN.interpret", "CircuitQNN.quantum_instance", "CircuitQNN.set_interpret", "CircuitQNN.weight_params", "EffectiveDimension", "EffectiveDimension.get_effective_dimension", "EffectiveDimension.get_fisher_information", "EffectiveDimension.get_normalized_fisher", "EffectiveDimension.input_samples", "EffectiveDimension.run_monte_carlo", "EffectiveDimension.weight_samples", "LocalEffectiveDimension", "LocalEffectiveDimension.weight_samples", "NeuralNetwork", "NeuralNetwork.backward", "NeuralNetwork.forward", "NeuralNetwork.input_gradients", "NeuralNetwork.num_inputs", "NeuralNetwork.num_weights", "NeuralNetwork.output_shape", "NeuralNetwork.sparse", "OpflowQNN", "OpflowQNN.input_gradients", "OpflowQNN.operator", "OpflowQNN.quantum_instance", "SamplingNeuralNetwork", "SamplingNeuralNetwork.probabilities", "SamplingNeuralNetwork.probability_gradients", "SamplingNeuralNetwork.sample", "SamplingNeuralNetwork.sampling", "TwoLayerQNN", "TwoLayerQNN.ansatz", "TwoLayerQNN.circuit", "TwoLayerQNN.feature_map", "TwoLayerQNN.num_qubits", "TorchRuntimeClient", "TorchRuntimeClient.fit", "TorchRuntimeClient.loss_func", "TorchRuntimeClient.measurement_error_mitigation", "TorchRuntimeClient.model", "TorchRuntimeClient.optimizer", "TorchRuntimeClient.predict", "TorchRuntimeClient.provider", "TorchRuntimeClient.score", "TorchRuntimeClient.shots", "TorchRuntimeResult", "TorchRuntimeResult.execution_time", "TorchRuntimeResult.job_id", "TorchRuntimeResult.model_state_dict", "TorchRuntimeResult.prediction", "TorchRuntimeResult.score", "TorchRuntimeResult.train_history", "TorchRuntimeResult.val_history", "CrossEntropyLoss", "CrossEntropyLoss.evaluate", "CrossEntropyLoss.gradient", "CrossEntropySigmoidLoss", "CrossEntropySigmoidLoss.evaluate", "CrossEntropySigmoidLoss.gradient", "KernelLoss", "KernelLoss.__call__", "KernelLoss.evaluate", "L1Loss", "L1Loss.evaluate", "L1Loss.gradient", "L2Loss", "L2Loss.evaluate", "L2Loss.gradient", "Loss", "Loss.__call__", "Loss.evaluate", "Loss.gradient", "SVCLoss", "SVCLoss.evaluate", "R\u00e9seaux de neurones quantiques", "Classification et r\u00e9gression de r\u00e9seau de neurones", "Apprentissage automatique du noyau quantique", "qGANs pour le chargement de distributions al\u00e9atoires", "Connecteur \u00e0 Torch et QNNs hybrides", "Torch Runtime", "Pegasos Quantum Support Vector Classifier", "Quantum Kernel Training for Machine Learning Applications", "Saving, Loading Qiskit Machine Learning Models and Continuous Training", "Effective Dimension of Qiskit Neural Networks", "Didacticiels Machine Learning"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 244], "this": [0, 12, 15, 16, 17, 18, 24, 29, 30, 31, 32, 35, 36, 39, 48, 49, 50, 51, 52, 53, 54, 57, 71, 88, 90, 95, 101, 103, 104, 111, 113, 119, 123, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 148, 156, 158, 164, 165, 166, 167, 169, 171, 173, 176, 181, 182, 183, 185, 190, 213, 216, 220, 222, 225, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "is": [0, 7, 12, 18, 23, 24, 25, 32, 35, 36, 39, 54, 57, 59, 60, 70, 71, 92, 95, 102, 103, 104, 111, 113, 119, 123, 124, 126, 131, 132, 133, 134, 135, 136, 137, 140, 141, 148, 149, 156, 160, 162, 165, 171, 173, 174, 175, 180, 181, 185, 186, 187, 188, 190, 196, 198, 201, 203, 214, 215, 217, 218, 220, 223, 224, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "the": [0, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 62, 67, 68, 70, 71, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 137, 138, 140, 141, 143, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242], "ther": [0, 32, 36, 54, 104, 156, 239, 240, 243], "an": [0, 12, 15, 16, 17, 18, 24, 29, 30, 31, 32, 36, 48, 49, 50, 51, 52, 53, 57, 60, 81, 102, 104, 109, 113, 119, 123, 138, 148, 149, 152, 156, 162, 164, 165, 171, 186, 188, 190, 196, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 237, 239, 240, 242, 243], "initial": [0, 32, 36, 85, 104, 106, 113, 119, 126, 148, 150, 196, 237, 238, 239, 242], "set": [0, 12, 14, 22, 25, 32, 46, 54, 60, 69, 71, 83, 85, 87, 92, 95, 119, 126, 137, 156, 160, 162, 164, 166, 169, 171, 181, 185, 186, 187, 188, 190, 196, 201, 203, 234, 237, 238, 239, 240, 242], "of": [0, 2, 7, 8, 9, 10, 12, 15, 16, 17, 18, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 62, 67, 70, 71, 81, 85, 87, 92, 95, 100, 102, 104, 105, 111, 113, 118, 119, 122, 123, 125, 126, 127, 130, 131, 137, 138, 141, 143, 146, 147, 148, 149, 156, 159, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 177, 178, 181, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 198, 203, 204, 205, 208, 214, 217, 218, 219, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "function": [0, 15, 16, 17, 20, 23, 26, 29, 30, 31, 32, 36, 44, 48, 49, 50, 51, 52, 53, 67, 70, 85, 92, 96, 104, 113, 119, 132, 133, 134, 135, 136, 137, 139, 148, 156, 160, 162, 186, 187, 188, 195, 197, 203, 205, 214, 217, 218, 219, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243], "her": [0, 137, 240, 241, 242], "that": [0, 7, 8, 12, 25, 32, 36, 60, 95, 103, 104, 113, 119, 123, 126, 131, 156, 162, 164, 171, 181, 185, 190, 195, 219, 232, 235, 237, 238, 239, 240, 241, 242, 243], "will": [0, 92, 103, 126, 148, 149, 156, 164, 171, 196, 234, 238, 239, 240, 241, 242, 243], "be": [0, 7, 10, 12, 15, 16, 17, 25, 29, 30, 31, 32, 34, 35, 36, 38, 39, 43, 48, 49, 50, 51, 52, 53, 54, 57, 60, 66, 85, 88, 90, 92, 93, 95, 102, 103, 104, 109, 110, 111, 113, 117, 119, 123, 126, 127, 131, 137, 138, 141, 148, 149, 152, 156, 160, 162, 167, 171, 173, 181, 185, 190, 195, 196, 215, 216, 219, 232, 237, 238, 239, 240, 241, 242, 243], "built": 0, "out": [0, 11, 113, 238, 239], "over": [0, 54, 149, 232, 240, 243], "tim": [0, 156, 206, 236, 237, 238, 239, 240, 241, 242, 243], "at": [0, 71, 92, 113, 126, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "present": 0, "it": [0, 12, 32, 36, 54, 71, 88, 90, 104, 119, 123, 126, 138, 156, 160, 167, 174, 175, 185, 186, 187, 188, 189, 238, 239, 240, 241, 243], "has": [0, 12, 32, 36, 54, 57, 60, 71, 81, 104, 113, 119, 141, 187, 196, 201, 203, 239, 240, 242], "sampl": [0, 4, 12, 19, 23, 32, 35, 36, 39, 42, 44, 60, 64, 65, 70, 71, 95, 96, 104, 111, 131, 149, 156, 164, 168, 169, 170, 171, 185, 186, 189, 213, 214, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243], "can": [0, 7, 12, 32, 36, 92, 104, 113, 119, 123, 131, 137, 138, 141, 156, 160, 195, 203, 232, 237, 239, 240, 241, 242, 243], "used": [0, 2, 7, 10, 12, 15, 16, 17, 20, 23, 25, 26, 28, 29, 30, 31, 32, 36, 48, 49, 50, 51, 52, 53, 54, 59, 70, 71, 85, 88, 90, 92, 93, 95, 100, 103, 104, 109, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 137, 148, 152, 156, 160, 162, 164, 171, 181, 190, 191, 193, 194, 215, 216, 238, 239, 240, 241, 242, 243], "with": [0, 7, 10, 12, 23, 32, 33, 36, 37, 43, 47, 54, 60, 66, 70, 71, 81, 83, 92, 95, 104, 105, 123, 131, 137, 140, 141, 156, 158, 164, 166, 171, 173, 174, 176, 181, 182, 185, 190, 196, 198, 201, 203, 207, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 234, 237, 238, 240, 241, 242, 243], "classifi": [0, 10, 12, 32, 54, 88, 113, 117, 235, 238, 242, 243], "and": [0, 2, 8, 10, 12, 14, 15, 19, 23, 24, 25, 28, 32, 33, 35, 36, 37, 39, 47, 48, 54, 57, 60, 70, 71, 77, 80, 88, 90, 93, 95, 100, 101, 103, 104, 105, 111, 113, 117, 118, 119, 122, 131, 137, 138, 140, 141, 148, 149, 156, 162, 164, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 194, 196, 198, 201, 203, 205, 214, 215, 216, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240], "circuit": [0, 7, 12, 25, 85, 92, 93, 95, 100, 113, 119, 123, 125, 131, 137, 140, 141, 143, 146, 156, 161, 190, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "in": [0, 7, 8, 12, 15, 16, 17, 25, 29, 30, 31, 32, 33, 35, 36, 37, 39, 48, 49, 50, 51, 52, 53, 54, 58, 60, 71, 87, 88, 90, 92, 95, 104, 105, 109, 111, 113, 119, 123, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 148, 149, 152, 156, 158, 160, 162, 164, 165, 166, 171, 174, 175, 176, 182, 185, 186, 187, 188, 189, 190, 196, 205, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243], "appliqu": [0, 12, 234, 235, 237, 238], "qiskit_machine_learning": [1, 5, 6, 123, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "for": [1, 4, 7, 12, 14, 15, 18, 20, 23, 24, 26, 28, 29, 32, 35, 36, 39, 42, 44, 45, 47, 48, 51, 54, 57, 60, 65, 68, 70, 71, 85, 86, 88, 90, 92, 96, 100, 101, 103, 104, 111, 113, 119, 123, 126, 137, 139, 140, 141, 146, 148, 149, 156, 162, 164, 165, 166, 169, 171, 174, 181, 185, 187, 190, 195, 196, 203, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243], "dat": [1, 15, 19, 20, 23, 29, 32, 33, 34, 36, 37, 38, 40, 42, 47, 48, 51, 54, 57, 62, 64, 65, 67, 70, 71, 87, 92, 95, 104, 105, 110, 113, 117, 119, 123, 127, 131, 137, 140, 141, 149, 156, 158, 165, 173, 174, 175, 176, 181, 182, 185, 186, 187, 188, 190, 196, 201, 203, 220, 221, 233, 235, 237, 238, 239, 240, 241, 242, 243], "classif": [1, 12, 32, 35, 36, 39, 54, 60, 71, 88, 104, 111, 113, 137, 203, 216, 232, 240, 241, 243], "quantum": [1, 2, 7, 12, 15, 18, 19, 23, 24, 25, 29, 32, 36, 48, 51, 54, 61, 70, 71, 78, 81, 85, 88, 89, 90, 91, 92, 93, 95, 98, 103, 104, 113, 115, 119, 126, 131, 137, 141, 144, 148, 149, 153, 154, 155, 156, 157, 160, 161, 164, 171, 173, 181, 184, 185, 190, 192, 195, 234, 235, 237, 238, 239, 242, 243], "support": [1, 11, 12, 54, 88, 90, 113, 126, 137, 195, 236, 239], "vector": [1, 12, 32, 36, 40, 54, 62, 88, 90, 104, 123, 131, 137, 140, 147, 148, 169, 189, 215], "a": [2, 7, 9, 10, 11, 12, 15, 18, 23, 24, 25, 28, 29, 32, 33, 35, 36, 37, 39, 48, 51, 54, 57, 59, 60, 70, 71, 79, 81, 85, 88, 90, 92, 95, 102, 103, 104, 105, 111, 113, 117, 119, 123, 126, 131, 137, 138, 141, 143, 146, 148, 156, 160, 162, 164, 165, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 195, 196, 198, 201, 203, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243], "building": [2, 12], "block": [2, 12], "algorithm": [2, 7, 8, 12, 54, 58, 71, 81, 92, 113, 137, 171, 234, 235, 236, 237, 238, 240, 241, 242], "from": [3, 11, 12, 25, 27, 32, 36, 54, 64, 71, 95, 98, 102, 103, 104, 113, 119, 123, 126, 137, 138, 148, 156, 162, 164, 171, 186, 187, 188, 190, 195, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qisk": [3, 8, 9, 10, 11, 14, 126, 131, 164, 171, 185, 195, 234, 235, 236, 237, 238, 239, 240], "machin": [3, 4, 9, 10, 11, 14, 137, 185, 195, 234, 235, 236, 238, 239, 240, 243], "learning": [3, 4, 9, 10, 11, 14, 71, 131, 137, 185, 195, 234, 238, 239, 243], "to": [3, 7, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 66, 67, 70, 71, 85, 88, 90, 92, 93, 95, 96, 100, 102, 103, 104, 105, 109, 110, 113, 117, 119, 123, 126, 127, 131, 137, 138, 141, 148, 152, 156, 158, 160, 161, 162, 164, 167, 171, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 190, 195, 196, 198, 201, 203, 220, 221, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243], "other": [3, 12, 156, 173, 239, 242, 243], "framework": [3, 12], "suitabl": 4, "problem": [4, 12, 47, 243], "parametrized": [7, 12, 92, 156, 181, 190, 234, 241, 243], "which": [7, 12, 25, 54, 57, 71, 85, 92, 93, 95, 123, 124, 137, 148, 219, 232, 239, 240, 241, 242, 243], "may": [7, 102, 137, 156, 215, 219, 241, 242, 243], "defined": [7, 23, 70, 95, 123, 148, 195, 203, 232, 238, 239, 243], "artificial": 7, "classical": [7, 12, 18, 19, 23, 24, 25, 28, 47, 70, 71, 95, 137, 237, 239, 241, 243], "or": [7, 12, 18, 23, 28, 32, 36, 42, 47, 57, 60, 64, 70, 71, 81, 85, 92, 95, 100, 102, 103, 104, 113, 126, 129, 131, 137, 138, 140, 141, 148, 156, 158, 160, 162, 164, 165, 171, 173, 176, 180, 182, 185, 195, 198, 203, 215, 219, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "furthermor": 7, "respect": [7, 19, 25, 60, 156, 158, 173, 176, 181, 182, 185, 190, 234], "discrimin": [7, 18, 71, 237], "gener": [7, 24, 71], "task": [7, 71, 137, 232, 239, 241], "exampl": [7, 12, 54, 88, 90, 123, 148, 238, 239, 240], "qgan": [7, 92], "See": [7, 32, 36, 162, 232, 241], "also": [7, 12, 126, 239, 240, 241, 242, 243], "torchconnector": [7, 11, 12, 156, 181, 185, 190, 238, 239, 242], "allow": [7, 12, 32, 36, 104, 113, 119, 238, 239], "use": [7, 12, 25, 32, 36, 54, 71, 88, 90, 95, 104, 113, 119, 137, 140, 195, 198, 203, 237, 238, 241, 242, 243], "thes": [7, 71, 156, 238, 243], "cod": [7, 11, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "written": 7, "pytorch": [7, 11, 12, 43, 62, 66, 126, 195, 196, 201, 203, 237, 239], "program": [8, 232], "embed": 8, "algorithmic": 8, "interfac": [8, 12, 32, 36, 104, 234, 240], "facilitat": 8, "usag": [8, 156], "script": 8, "cloud": [8, 103, 238, 242], "collect": [9, 10, 242], "provided": [9, 10, 12, 81, 141, 156, 160, 162, 196, 243], "by": [9, 10, 12, 14, 15, 29, 48, 51, 95, 103, 118, 122, 149, 156, 158, 160, 164, 171, 173, 176, 181, 182, 185, 190, 194, 195, 232, 237, 238, 239, 240, 241, 242, 243], "common": [10, 243], "regressor": [10, 12, 36, 90, 119, 235, 242], "d\u00e9pend": [11, 234], "packag": [11, 12, 240], "principal": [11, 236], "propr": [11, 238], "getting": [11, 12], "started": [11, 12], "http": [11, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "org": [11, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "document": [11, 236, 238, 241], "getting_started": 11, "html": [11, 236, 238], "__": [11, 234, 235, 236, 237, 238], "d\u00e9taill": [11, 234, 238], "option": [11, 32, 36, 104, 237, 241], "environ": 11, "plateform": 11, "pris": 11, "charg": [11, 234, 238], "Vous": [11, 238], "devr": 11, "abord": [11, 238], "r\u00e9fer": [11, 237], "cel": [11, 234, 235, 238, 242], "ensuit": [11, 235, 237, 238], "inform": [11, 164, 167, 171, 236, 237, 238, 239, 241, 243], "ci": [11, 238], "dessous": 11, "peuvent": [11, 234, 236, 238], "\u00eatre": [11, 234, 235, 236, 237, 238], "suiv": [11, 234, 235, 236, 237, 238], "concernent": 11, "suppl\u00e9mentair": [11, 238], "sp\u00e9cif": [11, 235], "certain": [11, 237, 243], "fonction": [11, 234, 235, 236, 237], "rendu": 11, "lorsqu": [11, 236], "programm": 11, "d\u00e9faut": [11, 234, 235, 237, 238], "Il": [11, 234, 235, 237], "agit": 11, "spars": [11, 12, 126, 156, 173, 185, 189, 234, 238, 242, 243], "Pour": [11, 235, 236, 237, 238], "plus": [11, 234, 235, 236, 237, 238], "voir": [11, 236, 237, 238], "d\u00e9marr": 11, "local": [11, 171, 242], "La": [11, 234, 236, 238], "fa\u00e7on": [11, 238], "simpl": [11, 235, 239, 242], "commenc": 11, "suivr": 11, "initi": 11, "dan": [11, 234, 235, 236, 237, 238], "virtuel": 11, "o\u00f9": [11, 234, 235, 236, 237, 238], "ajout": [11, 235], "list": [11, 12, 25, 71, 73, 75, 80, 88, 90, 92, 93, 98, 143, 156, 159, 163, 165, 174, 175, 181, 186, 187, 188, 196, 211, 212, 234, 237, 239, 241], "mani": [11, 234, 236, 238], "similair": 11, "dont": 11, "visualis": [11, 238], "dir": [11, 234, 237], "pip": 11, "util": [11, 234, 235, 236, 237, 238, 239, 240, 242, 243], "pr\u00e9cis": 11, "si": [11, 234, 238], "\u00eate": 11, "utilis": [11, 234, 235, 236, 237, 238], "zsh": 11, "shel": 11, "nouvel": [11, 234, 238], "version": [11, 132, 133, 134, 135, 136, 171, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "macos": 11, "mettr": [11, 235], "entre": [11, 235, 236, 237], "guillemet": 11, "part": [11, 234, 235, 236, 237, 239, 240, 241, 242, 243], "sourc": [11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 77, 81, 83, 84, 85, 87, 88, 90, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 110, 111, 113, 117, 119, 123, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 149, 154, 156, 162, 164, 165, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 195, 196, 201, 203, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "\u00e9l\u00e9ment": 11, "depuis": 11, "permet": [11, 234, 236, 238], "jour": [11, 235, 237], "plut\u00f4t": 11, "d\u00e9p\u00f4t": 11, "pyp": 11, "python": [11, 238, 239, 241, 242, 243], "index": [11, 32, 36, 104, 234, 239], "cec": 11, "don": [11, 198, 234, 235, 236], "possibil": 11, "inspect": 11, "\u00e9tendr": 11, "efficac": [11, 234], "derni": [11, 236], "puisqu": [11, 236], "modif": [11, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "n\u00e9cessit": [11, 234, 238], "fonctionnal": [11, 236], "modifi": [11, 238], "dev": [11, 238], "trouv": [11, 236], "endroit": 11, "installing": 11, "En": [11, 236, 238], "d\u00e9velopp": [11, 238], "lequel": 11, "clon": 11, "r\u00e9f\u00e9rentiel": 11, "git": 11, "github": 11, "com": 11, "Le": [11, 235, 236, 237, 238], "clonag": 11, "cr\u00e9": [11, 234, 238], "dossi": 11, "appel": [11, 234, 235, 236], "cd": 11, "souhait": [11, 238], "r\u00e9alis": [11, 238], "test": [11, 35, 39, 111, 236, 240, 242, 243], "fair": [11, 235, 236], "analys": [11, 236], "linting": 11, "pr\u00e9": 11, "requ": 11, "developeur": 11, "r": [11, 20, 23, 28, 35, 39, 47, 67, 70, 85, 92, 100, 111, 235, 236, 237, 238, 239, 240, 241, 242], "requir": [11, 131, 238, 239, 243], "txt": [11, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "mod": [11, 238], "edit": 11, "chang": [11, 162, 243], "alor": [11, 234, 238], "compt": 11, "san": [11, 237, 238], "besoin": [11, 236], "r\u00e9install": 11, "projet": 11, "pouv": [11, 235, 238], "chois": [11, 237, 238], "command": 11, "e": [11, 12, 15, 19, 29, 32, 33, 36, 37, 42, 51, 64, 71, 92, 104, 105, 113, 119, 126, 156, 160, 174, 222, 225, 237, 239, 243], "peut": [11, 234, 235, 236, 237, 238], "torch": [11, 64, 65, 67, 126, 130, 195, 196, 197, 199, 200, 201, 203, 207, 208, 209, 242], "get": [11, 25, 27, 41, 42, 63, 64, 77, 94, 95, 97, 98, 99, 242, 243], "locally": 11, "facilit": 11, "r\u00e9seau": [11, 237, 238], "quantiqu": [11, 237, 238], "aid": [11, 236, 237, 238], "L": [11, 234, 235, 236, 238], "va": 11, "permettr": 11, "tableau": [11, 235], "tenseur": 11, "\u00e9par": [11, 234], "div": 11, "into": [11, 12, 123, 219, 240, 241, 242, 243], "tutorial": [11, 12, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "find": [11, 12, 137, 239], "about": [11, 241, 243], "introduc": [12, 239, 240, 243], "fundamental": 12, "computational": 12, "such": [12, 137, 158, 176, 182, 205, 238, 243], "kernel": [12, 54, 57, 59, 60, 61, 88, 89, 90, 91, 123, 137, 141, 148, 149, 153, 154, 155, 219, 221, 232, 233, 236, 240], "neural": [12, 15, 18, 19, 24, 25, 29, 32, 36, 48, 51, 104, 107, 108, 119, 126, 128, 156, 158, 160, 164, 166, 171, 173, 174, 175, 176, 181, 182, 185, 186, 188, 190, 235, 237, 242], "network": [12, 15, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 36, 37, 38, 42, 47, 48, 51, 70, 71, 104, 105, 107, 108, 110, 119, 126, 128, 130, 156, 158, 160, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 181, 182, 185, 186, 187, 188, 189, 190, 235, 237, 242], "different": [12, 25, 95, 242, 243], "including": [12, 103], "regress": [12, 35, 36, 39, 90, 111, 137, 203, 235, 238], "On": [12, 32, 36, 104, 113, 119, 234, 242, 243], "one": [12, 23, 28, 32, 36, 47, 51, 70, 100, 104, 113, 117, 123, 131, 141, 174, 175, 186, 187, 188, 195, 196, 203, 215, 239, 240, 242, 243], "hand": [12, 243], "design": 12, "very": [12, 242], "easy": 12, "user": [12, 32, 36, 88, 90, 104, 113, 119, 137, 138, 140, 141, 143, 146, 147, 148, 149, 195, 203, 221, 233, 239, 242, 243], "rapidly": [12, 241], "prototyp": 12, "first": [12, 34, 38, 110, 131, 140, 238, 239, 242, 243], "model": [12, 21, 33, 34, 35, 37, 38, 39, 43, 45, 57, 60, 66, 68, 71, 101, 102, 103, 104, 105, 110, 111, 117, 127, 166, 169, 195, 196, 201, 203, 205, 208, 214, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 235, 236, 240, 243], "without": [12, 156], "deep": 12, "computing": [12, 48, 218, 219, 224, 227, 228, 231], "knowledg": 12, "flexibl": 12, "easily": 12, "extend": [12, 32, 36, 88, 90], "cutting": 12, "edge": 12, "research": 12, "provid": [12, 48, 101, 148, 195, 196, 201, 203, 232, 239, 243], "quantumkernel": [12, 54, 57, 60, 61, 88, 89, 90, 91, 148, 149, 153, 155, 221, 233, 236, 240, 241], "class": [12, 14, 15, 18, 24, 29, 32, 34, 36, 38, 40, 48, 51, 54, 60, 62, 71, 88, 90, 92, 101, 102, 104, 110, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 196, 205, 213, 216, 219, 222, 225, 228, 232, 235, 236, 238, 239, 242, 243], "directly": [12, 174, 175, 186, 187, 188, 241, 243], "comput": [12, 16, 17, 19, 30, 31, 49, 50, 52, 53, 54, 65, 126, 137, 156, 164, 165, 166, 167, 169, 171, 173, 181, 185, 190, 213, 216, 220, 222, 225, 229, 238, 240], "matric": [12, 234, 236], "given": [12, 16, 17, 19, 25, 30, 31, 32, 35, 36, 39, 49, 50, 52, 53, 57, 71, 92, 104, 111, 113, 119, 126, 137, 140, 141, 156, 162, 166, 190, 232, 243], "dataset": [12, 131, 132, 133, 134, 135, 136, 165, 196, 201, 203, 221, 233, 236, 238, 239, 240], "passed": [12, 54, 57, 148, 156, 165, 201, 239, 241], "qsvc": [12, 236, 240, 241], "qsvr": 12, "quickly": 12, "start": [12, 32, 36, 104, 112, 113, 119, 126, 196, 238, 239, 242, 243], "solving": [12, 232], "many": [12, 137, 219, 243], "existing": [12, 138], "based": [12, 40, 62, 123, 148, 156, 234, 239, 240, 243], "established": 12, "defin": [12, 104, 234, 238, 239], "generic": 12, "implemented": [12, 19, 20, 21, 22, 23, 25, 27, 28, 123, 173], "multipl": [12, 238, 242], "implement": [12, 32, 36, 54, 104, 131, 239, 240, 243], "are": [12, 32, 36, 71, 103, 104, 119, 123, 126, 137, 138, 141, 148, 156, 158, 176, 182, 190, 196, 214, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 238, 239, 240, 241, 242, 243], "readily": 12, "opflowqnn": [12, 190, 243], "twolayerqnn": [12, 119, 235, 238, 239, 243], "circuitqnn": [12, 113, 239], "combin": [12, 234, 243], "mechanical": 12, "observ": [12, 119, 190, 234, 243], "constructed": [12, 239], "using": [12, 34, 38, 110, 119, 137, 140, 141, 156, 181, 185, 190, 196, 198, 201, 203, 214, 217, 218, 223, 224, 226, 227, 230, 231, 238, 239, 240, 241, 242, 243], "library": [12, 123, 131, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qnn": [12, 164, 169, 171, 183, 234, 235, 239, 242], "output": [12, 15, 20, 25, 29, 32, 36, 40, 42, 44, 51, 62, 64, 67, 92, 95, 96, 104, 113, 123, 126, 129, 156, 162, 166, 169, 173, 179, 180, 185, 190, 218, 224, 227, 231, 234, 235, 238, 239, 241, 243], "expected": [12, 32, 36, 102, 104, 181, 185, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 240], "valu": [12, 15, 17, 27, 29, 31, 32, 33, 35, 36, 37, 39, 48, 50, 51, 53, 57, 60, 71, 92, 98, 104, 105, 111, 113, 117, 119, 137, 138, 139, 149, 165, 173, 181, 185, 187, 190, 196, 205, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243], "special": 12, "cas": [12, 32, 33, 35, 36, 37, 39, 54, 60, 104, 105, 111, 131, 156, 162, 174, 175, 185, 186, 187, 188, 190, 234, 235, 238, 240, 242, 243], "tak": [12, 219, 242, 243], "input": [12, 15, 19, 25, 29, 33, 34, 37, 38, 40, 42, 48, 51, 62, 64, 71, 85, 92, 105, 110, 117, 137, 148, 149, 156, 158, 159, 164, 168, 169, 171, 173, 174, 175, 176, 177, 181, 182, 185, 186, 187, 188, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 238, 239, 241, 242, 243], "featur": [12, 54, 57, 60, 95, 113, 116, 118, 119, 121, 122, 123, 124, 131, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 173, 177, 185, 190, 193, 194, 234, 235, 238, 239, 240, 242, 243], "map": [12, 113, 116, 118, 119, 121, 122, 131, 137, 138, 140, 141, 142, 143, 145, 146, 148, 156, 162, 190, 193, 194, 234, 235, 237, 238, 239, 243], "ansatz": [12, 113, 118, 119, 122, 190, 194, 234, 235, 237, 238, 239, 242, 243], "measur": [12, 140, 195, 198, 241, 243], "eith": [12, 32, 36, 104, 138, 203, 239, 242], "batch": [12, 23, 47, 70, 71, 87, 137, 156, 185, 189, 237, 238, 239], "i": [12, 19, 32, 36, 42, 64, 71, 92, 104, 119, 126, 131, 148, 174, 213, 222, 225, 232, 235, 237, 239, 241, 243], "bitstring": [12, 235, 243], "measured": [12, 113, 119, 156, 162, 190, 234, 243], "qubit": [12, 71, 92, 113, 118, 119, 122, 123, 125, 131, 137, 148, 190, 194, 234, 237, 240, 241, 243], "resulting": [12, 32, 36, 104, 187, 237], "sampling": [12, 156, 162, 169, 185, 234], "probabilit": [12, 32, 156, 185, 189], "each": [12, 32, 36, 44, 104, 113, 119, 165, 187, 205, 213, 214, 217, 218, 222, 223, 224, 225, 226, 227, 230, 231, 239, 240, 241, 242, 243], "form": [12, 234, 237, 238], "interest": 12, "distribu": [12, 32, 36, 71, 77, 80, 92, 104, 164, 171, 235, 243], "whil": [12, 156, 185, 238, 239, 241, 243], "latt": 12, "g": [12, 15, 29, 32, 33, 37, 51, 92, 105, 113, 156, 160, 235, 237, 238, 239, 242], "post": [12, 234], "processing": 12, "interpret": [12, 32, 156, 162, 186, 187, 188, 234, 235, 238, 243], "particular": [12, 243], "context": [12, 235, 239], "translating": 12, "includ": [12, 54, 57, 140], "functionality": 12, "evaluat": [12, 156, 161, 181, 184, 190, 220, 229, 235, 236, 238, 241, 242, 243], "them": [12, 95, 238, 242, 243], "wel": [12, 32, 36, 104, 113, 119, 239, 242, 243], "corresponding": [12, 32, 36, 103, 104, 156, 162, 203, 239, 242, 243], "gradient": [12, 48, 54, 65, 85, 92, 123, 126, 148, 156, 158, 166, 169, 173, 174, 176, 181, 182, 185, 187, 190, 234, 238, 240, 243], "import": [12, 123, 234, 235, 236, 237, 238, 239, 240, 242, 243], "efficient": 12, "training": [12, 15, 23, 28, 29, 32, 34, 36, 38, 47, 48, 51, 57, 60, 70, 71, 85, 92, 95, 96, 100, 104, 109, 110, 113, 119, 123, 126, 131, 148, 149, 152, 195, 196, 205, 219, 232, 236, 237, 238, 240, 243], "train": [12, 57, 95, 148, 149, 154, 196, 211, 236, 238, 240], "variety": 12, "neuralnetworkclassifi": [12, 113, 235, 243], "neuralnetworkregressor": [12, 119, 235], "both": [12, 243], "then": [12, 32, 36, 71, 102, 104, 126, 131, 137, 141, 148, 156, 160, 165, 239, 240, 241, 242, 243], "two": [12, 32, 36, 57, 104, 113, 119, 137, 141, 190, 234, 239, 240, 241, 242, 243], "convenient": [12, 101, 220, 229], "variational": [12, 85, 92, 113, 235, 242, 243], "vqc": [12, 242, 243], "vqr": 12, "just": [12, 238], "construct": [12, 93, 119, 131, 140, 141, 234, 235, 238, 239, 242, 243], "underlying": [12, 71, 107, 108, 113, 115, 119, 126, 128, 130, 148, 157, 183, 192, 242], "automatically": [12, 156], "addit": [12, 131], "integrat": 12, "all": [12, 54, 103, 123, 131, 137, 156, 185, 196, 201, 203, 235, 237, 238, 240, 242, 243], "our": [12, 238, 240, 242, 243], "open": 12, "thank": 12, "automatic": 12, "differenti": 12, "overall": [12, 156, 239], "computed": [12, 32, 36, 57, 60, 104, 113, 119, 123, 158, 165, 176, 182, 214, 217, 218, 223, 224, 226, 227, 230, 231, 243], "during": [12, 32, 36, 104, 113, 119, 126, 196, 219, 239, 240, 241, 243], "backpropag": 12, "account": [12, 219], "too": [12, 243], "connector": [12, 126, 129, 238, 239, 242], "futur": 12, "except": [14, 18, 24, 113, 190, 235], "messag": 14, "error": [14, 57, 119, 195, 198, 222, 225, 232, 238, 243], "returned": [14, 126, 149, 160, 196, 234, 239], "modul": [14, 18, 24, 126, 185, 195, 197, 199, 236, 238, 239], "with_traceback": 14, "tb": 14, "self": [14, 25, 33, 37, 57, 95, 105, 117, 140, 141, 162, 198, 238, 239, 241], "__traceback__": 14, "return": [14, 32, 33, 35, 36, 37, 39, 58, 59, 61, 72, 73, 74, 75, 76, 78, 79, 80, 82, 86, 89, 91, 93, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 168, 170, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 197, 198, 199, 200, 202, 204, 206, 208, 209, 210, 212, 234, 235, 238, 239, 240, 241, 242, 243], "x": [15, 19, 20, 29, 33, 34, 35, 37, 38, 39, 42, 44, 48, 51, 57, 60, 64, 65, 67, 96, 105, 110, 111, 117, 123, 131, 137, 140, 141, 234, 235, 236, 237, 238, 239, 241, 243], "neural_network": [15, 29, 32, 36, 48, 51, 104, 126, 234, 235, 238, 239, 242, 243], "loss": [15, 23, 28, 29, 32, 36, 47, 48, 51, 70, 73, 75, 85, 92, 100, 104, 113, 119, 148, 149, 195, 197, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 235, 237, 238, 239, 241], "bas": [15, 18, 24, 29, 32, 36, 40, 48, 51, 54, 62, 71, 88, 90, 92, 101, 104, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 205, 213, 216, 219, 222, 225, 228, 232, 234, 235, 237, 238, 239], "objectivefunct": [15, 29, 51], "object": [15, 16, 29, 30, 32, 36, 41, 48, 49, 51, 52, 63, 71, 85, 92, 101, 103, 104, 113, 119, 137, 148, 151, 153, 155, 164, 195, 196, 201, 203, 205, 221, 233, 234, 235, 238, 239, 241, 242, 243], "binary": [15, 32, 36, 104, 216, 232, 238, 239, 241, 243], "represent": [15, 29, 51, 71, 92, 181, 190, 240, 241, 242, 243], "1": [15, 29, 32, 36, 40, 51, 54, 56, 62, 65, 71, 104, 113, 123, 126, 131, 149, 156, 164, 171, 214, 217, 223, 226, 230, 235, 236, 237, 240, 241], "parametr": [15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 84, 85, 88, 90, 92, 93, 95, 96, 100, 102, 103, 104, 105, 110, 111, 113, 117, 119, 123, 126, 127, 131, 137, 138, 140, 141, 148, 149, 156, 162, 164, 165, 166, 167, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 195, 196, 201, 203, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238], "ndarray": [15, 16, 17, 20, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 47, 48, 49, 50, 51, 52, 53, 57, 60, 64, 65, 71, 85, 92, 95, 96, 98, 104, 105, 106, 110, 111, 113, 117, 119, 126, 131, 141, 149, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 188, 214, 215, 217, 218, 221, 223, 224, 226, 227, 229, 230, 231, 233], "target": [15, 29, 32, 33, 36, 37, 44, 48, 51, 71, 77, 80, 92, 104, 105, 113, 117, 119, 149, 203, 213, 214, 215, 217, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 237, 238, 239], "neuralnetwork": [15, 29, 32, 36, 48, 51, 104, 126, 128, 164, 171, 181, 185, 235, 238], "instanc": [15, 25, 29, 32, 36, 48, 51, 54, 57, 60, 71, 78, 81, 95, 102, 103, 104, 113, 119, 137, 141, 144, 148, 156, 160, 161, 181, 184, 190, 196, 234, 237, 238, 239, 242, 243], "method": [15, 18, 24, 29, 32, 36, 40, 48, 51, 54, 62, 71, 88, 90, 92, 101, 102, 104, 113, 119, 123, 126, 137, 148, 154, 156, 158, 164, 165, 166, 167, 169, 171, 173, 176, 181, 182, 185, 190, 195, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243], "weight": [16, 17, 20, 23, 30, 31, 32, 35, 36, 39, 44, 47, 49, 50, 52, 53, 54, 67, 70, 96, 104, 111, 113, 119, 126, 156, 163, 164, 169, 170, 171, 173, 174, 175, 178, 181, 185, 186, 187, 188, 234, 235, 238, 239, 240, 242, 243], "array": [16, 17, 30, 31, 32, 36, 47, 49, 50, 52, 53, 60, 92, 95, 100, 104, 113, 119, 123, 141, 149, 156, 164, 165, 166, 167, 171, 173, 174, 175, 185, 186, 187, 188, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 237, 239, 241, 242, 243], "typ": [16, 17, 23, 25, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 75, 77, 78, 80, 81, 83, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236], "renvoi": [16, 17, 20, 23, 25, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 75, 77, 78, 80, 81, 83, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235], "float": [17, 31, 32, 35, 36, 39, 44, 50, 53, 54, 65, 71, 73, 75, 77, 80, 92, 96, 100, 104, 111, 113, 119, 146, 148, 150, 174, 175, 186, 187, 188, 203, 206, 210, 211, 212, 220, 221, 233, 239], "abc": [18, 24, 173, 219, 228], "should": [18, 24, 25, 35, 39, 54, 57, 60, 93, 95, 111, 126, 137, 216, 238, 239, 240, 242, 243], "initializ": [18, 24, 84, 85, 92, 123, 126, 237, 238, 241], "but": [18, 24, 237, 238, 242, 243], "rais": [18, 24, 57, 113, 190], "if": [18, 23, 24, 25, 32, 36, 54, 64, 70, 71, 81, 92, 95, 102, 103, 104, 113, 119, 126, 131, 137, 138, 140, 141, 148, 156, 160, 162, 165, 189, 190, 196, 201, 203, 235, 238, 239, 240, 242, 243], "required": [18, 24, 117, 156, 196, 201, 203, 234, 242, 243], "component": [18, 24], "not": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 36, 54, 57, 70, 81, 92, 95, 102, 104, 113, 123, 126, 129, 131, 137, 140, 141, 148, 149, 156, 158, 160, 162, 173, 176, 180, 181, 182, 185, 190, 195, 196, 198, 201, 203, 214, 215, 217, 218, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "avail": [18, 24, 148, 203, 239, 242, 243], "abstract": [19, 20, 21, 22, 23, 25, 26, 27, 28, 48, 49, 50, 105, 110, 111, 173, 185, 214, 217, 218, 219, 221, 223, 224, 226, 227, 228, 230, 231, 233], "apply": [19, 25, 123, 131, 238, 242], "label": [19, 42, 44, 57, 60, 64, 67, 96, 113, 131, 149, 219, 220, 221, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243], "discriminator": [19, 21, 23, 40, 41, 42, 43, 44, 45, 47, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 84, 95, 96, 237], "lev": [19, 20, 21, 22, 23, 25, 27, 28, 32, 33, 34, 36, 37, 38, 54, 57, 60, 71, 81, 85, 87, 92, 102, 104, 105, 110, 113, 119, 131, 138, 140, 141, 148, 149, 156, 173, 185, 190, 196, 201, 203, 214, 217, 218, 223, 224, 226, 227, 230, 231], "notimplementederror": [19, 20, 21, 22, 23, 25, 27, 28, 57], "non": [20, 23, 25, 28, 32, 35, 36, 39, 44, 47, 54, 57, 64, 67, 70, 71, 81, 83, 84, 85, 88, 90, 92, 93, 95, 100, 103, 104, 111, 113, 119, 126, 127, 137, 138, 139, 140, 141, 147, 148, 156, 160, 162, 174, 175, 181, 185, 187, 190, 195, 196, 234, 235, 236, 237, 238, 239, 241, 242, 243], "optimiz": [20, 26, 32, 36, 65, 71, 85, 92, 104, 113, 119, 148, 195, 235, 238, 239, 240, 242, 243], "iter": [20, 23, 32, 36, 70, 104, 113, 119, 137, 138, 235, 238, 239, 241, 242, 243], "point": [20, 32, 36, 67, 104, 106, 113, 119, 131, 140, 148, 150, 235, 236, 237, 238, 239, 240, 241, 242], "optional": [20, 23, 25, 32, 35, 36, 39, 44, 54, 57, 64, 70, 71, 78, 85, 88, 90, 92, 95, 104, 111, 113, 119, 123, 126, 127, 129, 137, 140, 141, 146, 147, 148, 150, 155, 156, 160, 162, 181, 190, 195, 196, 202, 238, 243], "w": [20, 23, 28, 47, 67, 70, 85, 92, 100, 236, 237, 240, 241, 242], "generated": [20, 47, 65, 67, 95, 219, 236, 238, 239, 240, 241, 242, 243], "snapshot_d": [21, 45, 68, 71, 92, 237], "sav": [21, 45, 68, 92, 238], "str": [21, 32, 36, 43, 45, 66, 68, 70, 71, 92, 102, 103, 104, 113, 119, 148, 203, 207, 208, 211, 212], "directory": [21, 45, 68, 71, 92, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "seed": [22, 46, 54, 69, 71, 196, 236, 237, 238, 239, 242, 243], "int": [22, 23, 25, 28, 40, 46, 47, 54, 58, 62, 69, 70, 71, 92, 95, 99, 100, 113, 118, 119, 122, 123, 124, 125, 131, 137, 156, 160, 162, 164, 165, 171, 173, 177, 178, 179, 185, 190, 194, 195, 196, 204, 237], "penalty": [23, 47, 65, 70, 232], "fals": [23, 32, 36, 42, 47, 54, 64, 70, 104, 113, 119, 131, 132, 133, 134, 135, 136, 140, 156, 162, 173, 181, 185, 189, 190, 195, 234, 236, 238, 239, 240, 241, 242, 243], "quantum_inst": [23, 25, 28, 47, 54, 70, 71, 81, 95, 100, 113, 119, 137, 148, 156, 181, 190, 234, 235, 236, 237, 238, 240, 241, 242, 243], "shot": [23, 25, 28, 47, 70, 95, 100, 195, 198, 234, 235, 236, 237, 242], "perform": [23, 28, 47, 54, 60, 70, 100, 141, 156, 201, 238, 240, 241, 242, 243], "step": [23, 28, 47, 54, 58, 70, 71, 92, 100, 196, 237, 238, 239, 240, 241, 242, 243], "parameter": [23, 25, 28, 32, 36, 47, 70, 71, 85, 92, 93, 95, 96, 100, 103, 104, 113, 119, 123, 137, 138, 140, 141, 143, 147, 148, 149, 156, 159, 163, 164, 171, 172, 181, 195, 196, 219, 232, 234, 235, 237, 238, 239, 240, 241, 243], "bool": [23, 32, 36, 42, 47, 54, 59, 64, 70, 104, 112, 113, 119, 126, 129, 131, 137, 140, 156, 158, 173, 176, 180, 181, 182, 185, 189, 190, 195, 198], "indicat": [23, 70, 164, 171, 239], "wheth": [23, 54, 59, 70, 126, 129, 131, 156, 158, 173, 176, 180, 181, 182, 185, 190, 195, 198, 241], "applied": [23, 32, 36, 70, 104, 240, 242], "ignored": [23, 28, 47, 70, 140], "no": [23, 54, 70, 71, 148, 149, 156, 196, 240], "quantuminst": [23, 25, 28, 47, 70, 71, 78, 81, 95, 100, 113, 119, 137, 144, 156, 161, 181, 184, 190, 234, 235, 236, 237, 238, 239, 240, 242, 243], "run": [23, 25, 28, 70, 93, 95, 100, 237, 238, 240, 243], "numb": [23, 25, 28, 47, 54, 58, 70, 71, 87, 95, 100, 113, 118, 119, 122, 123, 125, 131, 137, 138, 141, 149, 164, 171, 173, 177, 178, 185, 190, 194, 195, 198, 203, 204, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243], "hardwar": [23, 28, 47, 70, 100, 242], "qasm": [23, 28, 47, 70, 100, 241, 242], "execu": [23, 28, 47, 70, 100, 196, 201, 203, 206, 239], "updated": [23, 28, 47, 70, 100, 196, 239], "dict": [23, 28, 47, 70, 81, 93, 100, 138, 186, 187, 208, 211, 212], "attribut": [24, 32, 36, 40, 54, 62, 71, 88, 90, 92, 104, 113, 119, 123, 126, 131, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 205], "param": [25, 46, 81, 85, 92, 93, 95, 148, 221, 233], "generator": [25, 27, 28, 54, 71, 75, 85, 92, 93, 95, 96, 98, 100, 237, 238, 239, 243], "_param": [25, 95], "tupl": [25, 47, 131, 156, 160, 162, 173, 174, 179, 185, 187, 234], "property": [27, 41, 58, 59, 61, 63, 72, 73, 74, 75, 76, 78, 79, 80, 82, 86, 89, 91, 94, 97, 98, 99, 106, 107, 108, 109, 112, 114, 115, 116, 118, 120, 121, 122, 124, 125, 128, 129, 130, 142, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 168, 170, 172, 176, 177, 178, 179, 180, 182, 183, 184, 189, 191, 192, 193, 194, 197, 198, 199, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 239, 242], "paramet": [27, 54, 57, 92, 98, 123, 137, 138, 140, 143, 146, 147, 156, 164, 171, 173, 181, 185, 187, 190, 232, 234, 235, 238, 239, 240, 241, 242, 243], "multiclass": 29, "2": [29, 35, 39, 65, 71, 92, 111, 119, 123, 124, 131, 148, 156, 225, 235, 236, 237, 240, 241], "etc": 29, "squared_error": [32, 36, 104, 119, 235], "one_hot": [32, 131, 132, 133, 134, 135, 136, 236, 241], "warm_start": [32, 36, 104, 113, 119, 242], "initial_point": [32, 36, 104, 113, 119, 148, 241, 242, 243], "callback": [32, 36, 104, 113, 119, 235, 239, 242, 243], "trainablemodel": [32, 36], "classifiermixin": 32, "scik": [32, 36, 104, 236, 240, 242], "learn": [32, 36, 71, 92, 104, 236, 240, 242], "compatibl": [32, 36, 195, 240], "mor": [32, 36, 57, 88, 90, 162, 239, 241, 242, 243], "detail": [32, 36, 162, 232, 242, 243], "dimensional": [32, 36, 104, 137, 141, 238], "output_shap": [32, 36, 104, 156, 162, 173, 174, 175, 185, 188, 234, 235, 238, 243], "only": [32, 36, 104, 113, 123, 126, 131, 137, 140, 141, 156, 162, 219, 238, 242, 243], "mult": [32, 36, 104, 113], "assumed": [32, 36, 104], "result": [32, 36, 81, 95, 104, 127, 149, 154, 156, 166, 169, 174, 175, 188, 196, 201, 203, 205, 234, 235, 237, 238, 239, 241], "probability": [32, 36, 71, 92, 96, 104, 156, 185, 187], "entri": [32, 36, 104], "negat": [32, 36, 104], "sum": [32, 36, 104, 235, 237, 238, 239, 242, 243], "up": [32, 36, 104, 238, 239, 242], "hot": [32, 36, 51, 104, 113, 117, 131, 215, 242], "encoding": [32, 36, 51, 104, 215, 240], "considered": [32, 36, 104], "whol": [32, 36, 104, 242], "otherwis": [32, 36, 104, 126, 140, 162, 239, 242], "entry": [32, 36, 104, 241], "individual": [32, 36, 104], "weighted": [32, 36, 104, 232], "union": [32, 36, 64, 71, 81, 85, 92, 98, 104, 113, 119, 126, 131, 137, 147, 156, 160, 162, 164, 165, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 196, 197, 203, 235], "default": [32, 35, 36, 39, 71, 104, 111, 113, 119, 137, 148, 156, 158, 164, 171, 176, 181, 182, 185, 190, 195, 196, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "l2": [32, 36, 104, 225], "string": [32, 36, 104, 148, 203, 234, 241], "absolute_error": [32, 36, 104], "l1": [32, 36, 104, 222], "cross_entropy": [32, 36, 104, 113, 235], "cross_entropy_sigmoid": [32, 36, 104], "implementing": [32, 36, 92, 104], "determin": [32, 35, 39, 71, 92, 111, 156, 164, 171, 173, 181, 185, 190, 234], "how": [32, 36, 88, 90, 104, 113, 119, 241, 242, 243], "tru": [32, 35, 39, 42, 54, 64, 70, 111, 126, 131, 132, 133, 134, 135, 136, 137, 140, 156, 162, 181, 185, 189, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243], "interpreted": [32, 113, 174, 175, 186, 187, 188], "singl": [32, 165, 174, 175, 186, 187, 188, 238, 239, 243], "encoded": [32, 113, 117, 242], "crossentropy": 32, "predict": [32, 35, 39, 54, 88, 90, 111, 213, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 240, 241, 242], "occurrent": [32, 95, 237], "would": 32, "frequency": 32, "absolut": [32, 222], "squared": [32, 119, 225, 238], "categorical": 32, "encod": [32, 241, 242], "integ": [32, 156, 162, 165], "when": [32, 36, 54, 57, 104, 113, 119, 123, 137, 156, 181, 185, 190, 235, 241, 242, 243], "slsqp": [32, 36, 104, 113, 119], "previous": [32, 36, 104, 113, 119, 238, 242], "fit": [32, 34, 36, 38, 54, 60, 88, 90, 104, 110, 113, 119, 148, 235, 236, 240, 242, 243], "next": [32, 36, 104, 113, 119, 241, 242, 243], "callabl": [32, 36, 57, 60, 85, 92, 104, 113, 119, 156, 160, 162, 195, 197, 203, 234, 236], "referent": [32, 36, 54, 71, 104, 113, 119, 131, 164, 171, 243], "access": [32, 36, 104, 113, 119, 239, 243], "intermediat": [32, 36, 104, 113, 119], "invok": [32, 36, 104, 113, 119], "pass": [32, 36, 48, 88, 90, 104, 113, 119, 126, 127, 156, 166, 169, 173, 174, 175, 181, 185, 189, 232, 234, 238, 239, 240, 241, 242, 243], "current": [32, 36, 98, 104, 106, 113, 119, 131, 146, 239], "being": [32, 36, 104, 113, 119, 243], "optimized": [32, 36, 104, 113, 119, 149, 155], "track": [32, 36, 104, 113, 119], "process": [32, 36, 104, 113, 119, 239, 240, 243], "going": [32, 36, 104, 113, 119, 243], "qiskitmachinelearningerror": [32, 33, 34, 36, 37, 38, 60, 71, 81, 85, 87, 92, 104, 105, 110, 113, 119, 141, 156, 173, 185, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 235], "unknown": [32, 36, 104, 148], "invalid": [32, 33, 36, 37, 71, 85, 104, 105, 173, 185], "matrix": [33, 37, 57, 60, 105, 117, 137, 141, 164, 167, 171, 221, 233, 234, 236, 241, 243], "trained": [33, 37, 71, 77, 80, 92, 105, 117, 148, 195, 196, 201, 203, 205, 208, 239, 241, 242], "incompatibl": [33, 37, 57, 105, 138, 140, 141], "specified": [34, 38, 103, 110, 149, 232, 242], "need": [34, 38, 95, 110, 113, 156, 162, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "som": [34, 38, 54, 110, 156, 238, 240, 242, 243], "predicted": [34, 38, 60, 110, 201, 214, 217, 218, 223, 224, 226, 227, 230, 231, 238, 239, 240, 242], "sample_weight": [35, 39, 57, 111], "mean": [35, 39, 103, 111, 237, 238], "accuracy": [35, 39, 111, 238, 241, 243], "coefficient": [35, 39, 65, 111], "regressormixin": 36, "n_featur": [40, 57, 60, 62, 240], "n_out": [40, 62], "discriminativenetwork": [40, 62, 71, 94], "numpy": [40, 42, 44, 47, 64, 65, 79, 92, 96, 123, 149, 166, 167, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "dimens": [40, 57, 60, 62, 71, 123, 124, 131, 137, 140, 141, 149, 164, 165, 171, 221, 233, 234, 236, 237, 238, 239], "discriminatornet": 41, "detach": [42, 64, 238], "fak": [42, 64, 71], "depreciated": [42, 47], "load_d": [43, 66], "load": [43, 66, 71, 123, 196, 201, 203, 237, 238, 239], "fil": [43, 66, 71, 102, 103, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "stored": [43, 66, 239], "loaded": [43, 66, 102, 103], "equivalent": [44, 96, 232], "customized": 44, "scaling": 44, "path": [45, 68, 102, 103], "saving": [45, 68, 101], "real_batch": 47, "generated_batch": 47, "real": [47, 71, 242], "forward": [48, 156, 166, 169, 173, 185, 189, 234, 235, 238, 239, 243], "backward": [48, 126, 156, 158, 166, 169, 173, 176, 181, 182, 185, 234, 238, 239, 243], "lik": [51, 88, 90, 104, 113, 174, 175, 186, 187, 188, 239, 242], "quantum_kernel": [54, 88, 90, 148, 220, 221, 233, 236, 240, 241], "C": [54, 232, 240], "num_step": [54, 240], "1000": [54, 237, 240], "precomputed": [54, 57, 60, 236], "svc": [54, 88, 232, 236], "serializablemodelmixin": [54, 88, 90, 104], "pegasos": [54, 58], "developed": 54, "overridden": 54, "sup": [54, 238], "adapted": 54, "work": [54, 126, 131, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "pegasos_qsvc": [54, 240], "sample_train": [54, 88, 90], "label_train": [54, 88, 90], "sample_test": [54, 88, 90], "shalev": [54, 240], "shwartz": [54, 240], "al": [54, 71, 164, 166, 171, 240, 243], "primal": [54, 240], "estimated": [54, 240], "sub": [54, 240], "solv": [54, 240], "svm": [54, 88, 90, 232, 236, 240, 241], "posit": [54, 137, 240], "regulariz": [54, 240, 243], "strength": [54, 240], "inversely": [54, 240], "proportional": [54, 240], "small": [54, 239, 240, 243], "induc": [54, 240], "generally": [54, 240], "help": [54, 240, 243], "preventing": [54, 240], "overfitting": [54, 240, 243], "howev": [54, 240, 241], "due": [54, 240], "natur": [54, 131, 240, 243], "becom": [54, 240], "trivial": [54, 240, 243], "larg": [54, 137, 240, 242, 243], "thus": [54, 88, 90, 92, 123, 171, 240, 243], "improv": [54, 240], "drastically": [54, 240], "linearly": [54, 240], "separ": [54, 131, 240], "spac": [54, 95, 131, 137, 240, 241, 243], "chosen": [54, 126, 238, 240, 242], "perfect": [54, 240], "prevent": [54, 240], "early": [54, 239, 240], "stopping": [54, 239, 240], "criterion": [54, 240], "iterat": [54, 240], "boolean": [54, 59], "flag": [54, 59, 112], "indicating": [54, 59, 203], "random": [54, 71, 82, 92, 126, 131, 196, 234, 235, 237, 238, 239, 242, 243], "valueerror": [54, 57, 60, 131, 138, 140, 141, 148, 149, 196, 201, 203], "typeerror": [54, 102], "neith": [54, 113, 119, 190], "nor": [54, 119], "according": [57, 131, 240, 243], "shap": [57, 60, 156, 162, 164, 166, 169, 171, 173, 174, 175, 179, 185, 186, 187, 188, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 238, 240, 242], "n_sampl": [57, 60, 238, 240], "must": [57, 126, 131, 156, 171, 181, 185, 190, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "contain": [57, 123, 187, 205, 239, 241], "than": [57, 71, 87, 137, 239, 240, 242, 243], "uniqu": 57, "supported": [57, 113, 241], "passing": [57, 126, 239, 241, 243], "fitted": [57, 235, 238, 240], "estimator": 57, "hav": [57, 60, 140, 141, 162, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "wrong": [57, 60], "pre": [57, 60, 203, 238, 239, 240], "m_sampl": 60, "wher": [60, 71, 103, 113, 131, 138, 141, 149, 156, 162, 187, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 236, 238, 239, 241, 242, 243], "denot": [60, 137], "siz": [60, 71, 87, 165, 167, 237, 238, 239, 240, 241, 243], "calculated": [60, 140, 141, 239, 243], "element": [60, 138, 174, 175, 186, 187, 188, 222, 225], "called": [60, 102, 235, 239, 242, 243], "befor": [60, 126, 167, 239, 243], "been": [60, 81, 141, 196, 201, 203, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tensor": [64, 65, 67, 126, 127, 130, 208, 209, 238, 239], "variabl": [64, 88, 90, 239], "lambda_": 65, "5": [65, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242], "k": [65, 71, 92, 131, 137, 236, 237, 241], "01": [65, 234, 239, 241], "lambd": [65, 234, 235, 237, 238, 239], "3": [65, 123, 131, 235, 236, 237, 240, 241], "any": [70, 102, 143, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "bound": [71, 92, 123, 156, 232, 237, 241, 243], "num_qubit": [71, 92, 113, 119, 123, 124, 156, 190, 234, 237, 238, 239, 240, 243], "batch_siz": [71, 137, 237, 238, 239], "500": 71, "num_epoch": [71, 237], "3000": 71, "7": [71, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tol_rel_ent": 71, "adversarial": 71, "hybrid": [71, 239], "modeling": 71, "adapt": [71, 234, 241], "interplay": 71, "generativenetwork": [71, 92], "alternating": 71, "tri": 71, "differentiat": [71, 243], "between": [71, 77, 80, 241, 243], "aim": 71, "generating": 71, "eventually": [71, 92], "stat": [71, 92, 95, 123, 137, 140, 196, 205, 208, 237, 241, 242], "zoufal": [71, 237], "loading": [71, 101], "min": [71, 92, 237, 242], "max": [71, 92, 237, 242], "min_0": [71, 237], "max_0": [71, 237], "min_k": [71, 92, 237], "max_k": [71, 92, 237], "univariat": 71, "number": [71, 92, 243], "resolu": [71, 92, 237], "enabl": [71, 92], "num_qubits_0": 71, "num_qubits_k": 71, "epoch": [71, 195, 196, 205, 237, 238, 239], "discriminat": 71, "generat": [71, 92, 131, 156, 185, 238, 239, 240, 242], "toler": [71, 86], "level": [71, 243], "relat": [71, 77, 80, 86, 237, 238], "entropy": [71, 77, 80, 86, 113, 213, 216, 237, 238], "achiev": 71, "equal": [71, 240, 241], "low": [71, 236, 237, 241, 243], "finish": 71, "stor": [71, 235, 238, 242, 243], "cv": 71, "created": [71, 240, 242], "backend": [71, 81, 83, 103, 137, 141, 156, 181, 190, 195, 196, 201, 203, 237, 239, 241], "kwarg": [81, 83, 88, 90, 232], "execut": [81, 113, 119], "selected": [81, 195, 243], "experimental": 81, "setting": [81, 126, 156, 241], "configur": [83, 234, 236, 238, 239], "generator_circuit": [85, 92, 237], "generator_init_param": [85, 237], "generator_optimiz": 85, "generator_gradient": 85, "quantumcircuit": [85, 92, 113, 114, 115, 116, 119, 120, 121, 123, 137, 140, 142, 145, 148, 156, 157, 190, 191, 192, 193, 234, 235, 237, 238, 239, 241, 243], "parameterized": [85, 123, 137, 232], "structur": [85, 234, 235, 237, 239, 241], "returning": [85, 92], "partial": [85, 92], "deriv": [85, 92, 113, 187, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "bigg": 87, "item": [87, 237, 238, 239], "truncated": 87, "arg": [88, 90, 232, 241], "show": [88, 90, 235, 236, 237, 238, 239, 240, 241, 242, 243], "sklearn": [88, 90, 232, 236, 240, 241, 242], "inherit": [88, 90], "below": [88, 90], "read": [88, 90], "guid": [88, 90, 241], "qkernel": [88, 90, 240], "length": [88, 90, 221, 233, 241], "argument": [88, 90, 156, 232, 239, 241], "constructor": [88, 90, 160, 162, 232, 240, 243], "arbitrary": [88, 90, 232], "keyword": [88, 90, 232], "svr": [90, 236], "init_param": [92, 237], "gradient_funct": 92, "approximat": 92, "beginning": [92, 242], "randomly": [92, 164, 171, 239, 243], "throughout": 92, "prepar": 92, "qa": 92, "min_1": 92, "max_1": 92, "dim": [92, 238], "n_1": 92, "n_k": 92, "1d": [92, 141, 242], "after": [92, 196, 239, 242, 243], "every": [92, 156, 166, 198, 239], "updat": 92, "multivariat": 92, "gat": [93, 137, 237], "instruct": [93, 123], "running": [95, 237], "we": [95, 131, 234, 238, 239, 240, 241, 242, 243], "measuring": [95, 96, 187], "mapping": [95, 138, 146, 235, 243], "percentag": 95, "classmethod": 102, "file_nam": [102, 103], "whos": 102, "was": [102, 103, 239, 240, 241, 242, 243], "warning": [102, 123], "raised": 102, "nevertheless": 102, "valid": [102, 156, 196, 212], "nam": [102, 103, 235, 237, 238, 239, 242], "internally": 103, "serialized": [103, 196, 201, 203], "vi": [103, 123, 148, 235, 239], "dill": 103, "saved": [103, 242], "referenced": 103, "internal": [103, 219], "inferent": [103, 201, 203, 242], "sam": [103, 239, 241, 242], "even": 103, "ml": [104, 123], "warm": [112, 196, 239], "feature_map": [113, 119, 137, 148, 190, 234, 235, 236, 238, 239, 240, 243], "expect": [113, 243], "thos": 113, "zzfeaturemap": [113, 119, 137, 190, 234, 235, 236, 238, 239, 241, 243], "realamplitud": [113, 119, 190, 234, 235, 238, 239, 242, 243], "cross": [113, 213, 216, 238], "least": 113, "initially": 119, "operatorbas": [119, 181, 190], "z": [119, 190, 234, 235, 238, 239], "otim": [119, 131, 190, 234], "feature_dimens": [123, 236, 240, 243], "blueprintcircuit": 123, "raw": 123, "act": 123, "statevector": [123, 140, 156, 234, 240, 241, 242], "log2": 123, "placehold": 123, "synthesized": 123, "amplitud": 123, "do": [123, 126, 162, 214, 217, 218, 223, 224, 226, 227, 230, 231, 242, 243], "transform": [123, 238, 242], "therefor": [123, 243], "sinc": [123, 148, 241, 243], "call": [123, 195, 220, 229, 241, 242, 243], "optimizer": [123, 148, 235, 241, 242, 243], "see": [123, 239, 240, 241, 242, 243], "print": [123, 234, 236, 237, 238, 239, 240, 241, 242, 243], "draw": [123, 234, 235, 242, 243], "text": [123, 213, 222, 225, 232], "q_0": [123, 234, 237, 238, 239, 241], "parameterizedinitializ": 123, "q_1": [123, 238, 239, 241], "ordered_parameter": 123, "p": [123, 237], "np": [123, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "sqrt": [123, 237], "assign_parameter": 123, "70711": 123, "inferred": [123, 156, 162], "n_qubit": 123, "feature_dim": 123, "initial_weight": [126, 238, 239], "nn": [126, 195, 197, 199, 234, 238, 239], "connect": [126, 243], "connected": 126, "rememb": [126, 238], "input_gradient": [126, 156, 173, 181, 185, 190, 238], "properly": 126, "uniformly": [126, 131, 238], "dens": [126, 156, 238, 242], "independent": [126, 156, 240], "currently": 126, "back": [126, 243], "propag": 126, "input_dat": [127, 174, 175, 186, 187, 188], "evaluated": [127, 241], "training_siz": [131, 132, 133, 134, 135, 136, 236, 241], "test_siz": [131, 132, 133, 134, 135, 136, 236, 241], "gap": [131, 236, 241], "plot_dat": [131, 132, 133, 134, 135, 136, 236, 241], "include_sample_total": [131, 236, 241], "toy": [131, 243], "fully": 131, "separated": 131, "zz_feature_map": 131, "procedur": [131, 240], "outlined": 131, "distributed": 131, "vec": [131, 236], "pi": [131, 235, 236, 237, 238, 239, 240, 241], "phi": [131, 236, 237], "rangl": [131, 137, 140, 141, 236, 237], "u_": 131, "h": [131, 234, 237], "exp": 131, "left": [131, 222, 236, 237, 240, 241, 242], "sum_": [131, 213, 222, 225, 232, 237], "S": 131, "subseteq": 131, "phi_": 131, "prod_": 131, "z_i": 131, "right": [131, 222, 236, 237], "begin": [131, 148], "x_i": [131, 232, 239], "x_j": [131, 232], "end": [131, 239], "rul": [131, 242], "langl": [131, 137, 236], "v": [131, 236, 238, 240, 242], "dagg": [131, 140, 236], "delt": 131, "mathrm": 131, "su": 131, "unitary": 131, "havl\u00ed\u010dek": 131, "c\u00f3rcol": 131, "ad": [131, 236, 241], "temm": 131, "harrow": 131, "aw": 131, "kandal": 131, "chow": 131, "jm": 131, "gambet": 131, "supervised": 131, "enhanced": 131, "2019": [131, 237], "mar": [131, 237, 239], "567": 131, "7747": 131, "209": 131, "12": [131, 234, 235, 237, 238, 239, 240, 242, 243], "arxiv": [131, 232, 236, 237], "1804": [131, 236], "11326": [131, 236], "testing": [131, 236, 240], "plot": [131, 235, 237, 238, 239, 240, 241, 242], "matplotlib": [131, 235, 236, 237, 238, 239, 240, 241, 242, 243], "format": [131, 186, 187, 188, 234, 235, 236, 238, 243], "uniform": [131, 164, 171, 237, 243], "grid": [131, 237, 240], "breast": 132, "canc": 132, "deprecated": [132, 133, 134, 135, 136], "enforce_psd": 137, "900": 137, "user_parameter": [137, 138, 148, 241], "general": [137, 243], "study": [137, 243], "pattern": 137, "datapoint": [137, 140, 141], "bet": [137, 240, 242], "understood": [137, 243], "high": [137, 239, 243], "through": [137, 232], "f": [137, 235, 236, 237, 238, 239, 240, 241], "dot": [137, 239, 242], "product": [137, 140, 141], "usually": 137, "much": 137, "calculat": [137, 203, 238, 243], "spectral": [137, 236], "clustering": 137, "ridg": 137, "project": [137, 239], "closest": 137, "semidefinit": 137, "enforced": 137, "simulator": [137, 140, 156, 240, 241, 242], "togeth": [137, 243], "parametervector": [137, 140, 147, 148, 241], "sequenc": [137, 147, 148, 150, 221, 233], "containing": [137, 196, 201, 203, 221, 233, 239, 241], "correspond": [137, 181, 234, 235, 237, 238, 243], "tuned": 137, "intend": 137, "tun": 137, "optimal": [137, 232, 241], "field": [137, 241], "assign": [138, 221, 233], "dictionary": [138, 189, 196, 205, 208, 239, 241], "specifying": 138, "new": [138, 156, 241, 242, 243], "specif": 138, "current_paramet": 138, "new_paramet": 138, "express": [138, 243], "numeric": 138, "assigned": 138, "order": [138, 237, 243], "alternat": 139, "signatur": 139, "assign_user_parameter": 139, "is_statevector_sim": 140, "inner": [140, 141], "statevector_simulator": [140, 141, 237, 240], "psi": [140, 141], "second": [140, 238, 239, 242], "unbound": [140, 141, 143, 145], "x_vec": [141, 236], "y_vec": [141, 236], "build": 141, "classically": 141, "2d": 141, "nxd": 141, "N": [141, 149, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 233, 237], "D": [141, 149], "mxd": 141, "M": [141, 221, 233], "nxm": 141, "modified": [141, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "match": [141, 214, 217, 218, 223, 224, 226, 227, 230, 231], "copy": [146, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "utility": 148, "creat": [148, 235, 238, 239, 240, 241, 242, 243], "qc": [148, 234, 235, 238, 243], "trainabl": [148, 149, 156, 163, 173, 174, 175, 178, 181, 185, 186, 187, 188, 241], "input_param": [148, 156, 181, 235, 238, 243], "x_par": 148, "user_param": [148, 241], "\u03b8_par": 148, "rotat": [148, 237, 240, 241], "lai": [148, 190, 234, 241], "enumerat": [148, 238], "ry": [148, 234, 235, 237, 238, 239, 241], "rz": 148, "quant_kernel": [148, 241], "loss_func": [148, 195, 238, 239], "qk_train": 148, "qkt_result": 148, "x_train": [148, 238, 241], "y_train": [148, 241], "optimized_kernel": [148, 241], "kernelloss": [148, 151, 232, 241], "svc_loss": [148, 241], "svcloss": [148, 241], "exhib": 148, "behavior": 148, "analytical": 148, "recommended": 148, "minimizing": [149, 232], "altered": [149, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "quantumkerneltrainerresult": [149, 241], "variationalresult": 154, "weight_param": [156, 181, 235, 238, 243], "samplingneuralnetwork": 156, "attempt": 156, "transpil": 156, "cach": 156, "transpiled": 156, "subsequent": 156, "reason": 156, "originat": 156, "rawfeaturevector": 156, "executed": 156, "impact": [156, 238], "possibly": [156, 185], "alway": 156, "anoth": [156, 162, 240, 242], "unsigned": [156, 162], "integer": [156, 162, 234], "indic": 156, "potentially": 156, "separat": [156, 243], "identity": 156, "custom": [156, 162, 195, 203, 236, 239, 241], "remaining": 156, "num_sampl": [156, 235, 238, 239, 242, 243], "interpret_shap": 156, "convert": [156, 181, 190, 238, 239, 240], "explicitly": [156, 181, 185, 190, 238, 241], "prop": [156, 181, 185, 190], "implicitly": 160, "derived": 160, "_shap": 162, "weight_sampl": [164, 171, 243], "input_sampl": [164, 171, 243], "global": [164, 171], "effect": [164, 165, 171], "following": [164, 171, 237, 239, 241, 243], "definit": [164, 171], "abbas": [164, 166, 171, 243], "pow": [164, 171, 243], "specific": [164, 171, 243], "num_weight": [164, 166, 167, 169, 171, 173, 174, 175, 185, 186, 187, 188, 234, 235, 238, 239, 243], "fish": [164, 166, 167, 171, 243], "num_input_sampl": [164, 166, 167, 169, 171, 243], "num_weight_sampl": [164, 166, 169, 171, 243], "qnn_input_siz": [164, 171], "normal": [164, 171, 237, 243], "dataset_siz": [165, 243], "num_dat": 165, "effective_dim": 165, "model_output": [166, 203, 239], "averag": [166, 239], "jacobian": 166, "shown": [166, 240, 242, 243], "output_siz": [166, 169], "normalized_fish": 167, "normalized": [167, 243], "extract": 167, "trac": [167, 235, 236, 243], "fisher_trac": 167, "normalizing": 167, "mont": [169, 243], "carlo": [169, 243], "grad": [169, 187], "effectivedimens": [171, 243], "limited": 171, "num_input": [173, 174, 175, 185, 186, 187, 188, 234, 235, 238, 239, 243], "providing": [173, 238], "handling": 173, "batched": [173, 234], "scalar": [174, 175, 186, 187, 188], "cast": [174, 175, 186, 187, 188], "sparsearray": [174, 175, 186, 187], "respectively": [174, 238, 239], "operator": [181, 184, 190, 234, 238, 239], "exp_val": [181, 190, 238], "opflow": [181, 234, 235, 238, 239], "expectationbas": [181, 190], "within": [185, 232], "instead": [185, 243], "histogram": [186, 187], "depend": [186, 187, 188, 218, 224, 227, 231], "input_grad": 187, "weights_grad": 187, "key": [187, 237, 238, 243], "consisting": 190, "obtained": [190, 203, 240, 242, 243], "inconsistent": 190, "10": [195, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "1024": [195, 235, 236, 242], "measurement_error_mitig": 195, "runtim": [195, 196, 201, 203, 207, 237], "client": [195, 239], "official": 195, "maximum": [195, 239, 240, 241], "mitig": [195, 198], "ibmq": [195, 234, 235, 238, 239, 242, 243], "servic": [195, 239], "train_load": [196, 238, 239], "val_load": [196, 239], "hook": 196, "start_epoch": [196, 239], "sent": [196, 201, 203, 243], "serv": [196, 201, 203], "sid": [196, 201, 203], "torchruntimeresult": [196, 201, 203, 239], "dataload": [196, 201, 203, 238, 239], "skipped": 196, "hookbas": [196, 239], "interact": 196, "loop": 196, "manual_seed": [196, 238, 239], "history": [196, 205, 211, 212, 238, 239], "yet": [196, 201, 203], "runtimeerror": [196, 201, 203], "job": [196, 201, 203, 207], "failed": [196, 201, 203], "_loss": 197, "complet": 198, "fitt": 198, "re": [198, 242], "calibr": 198, "30": [198, 234, 235, 237, 238, 239, 241, 242], "minut": 198, "optim": [200, 238, 239], "data_load": [201, 203, 239], "infer": [201, 203, 242], "score_func": [203, 239], "their": [203, 239], "own": [203, 238, 239], "scoring": [203, 239], "def": [203, 235, 238, 239, 241, 242, 243], "torchruntimeclient": [205, 239], "id": [207, 239], "associated": 207, "n_": [213, 222, 225], "target_": [213, 222, 225], "log": [213, 237, 238, 239], "predict_": [213, 222, 225], "evaluating": [214, 217, 221, 223, 226, 230, 233], "individually": [214, 217, 218, 223, 224, 226, 227, 230, 231], "assum": 215, "softmax": [215, 238], "sigmoid": 216, "unlik": 219, "quantit": 219, "parameter_valu": [220, 221, 233], "labeled": [221, 233, 238, 241, 242], "truth": [221, 233, 239], "fitting": 232, "x_": [232, 235, 238, 239], "y_": [232, 235, 238, 239], "k_": [232, 236], "\u03b8": [232, 238, 239, 241], "a_i": 232, "a_j": 232, "k_\u03b8": 232, "lagrang": 232, "multipli": 232, "found": [232, 241, 243], "standard": [232, 236, 237, 240], "quadratic": 232, "hyp": [232, 240], "soft": 232, "margin": [232, 240, 241], "maximizing": 232, "alignment": [232, 241], "turn": 232, "yield": [232, 240], "smallest": 232, "upper": [232, 236, 237, 240, 241, 242], "generaliz": [232, 243], "parameteriz": [232, 240, 243], "ab": [232, 237], "2105": 232, "03406": 232, "furth": [232, 242], "evalu": [232, 235, 238, 241, 243], "Cette": [234, 235, 236, 237, 238], "pag": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "g\u00e9ner": [234, 235, 236, 237, 238], "doc": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "01_neural_network": 234, "ipynb": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "Ce": [234, 238], "bloc": [234, 236], "illustr": [234, 235, 238], "diff\u00e9rent": [234, 235, 238], "impl\u00e9ment": [234, 237], "fourn": [234, 236, 238], "Les": [234, 235, 238], "con\u00e7us": 234, "comm": [234, 235, 236, 238], "unit": 234, "calcul": [234, 236], "nombreux": [234, 236], "selon": 234, "particuli": [234, 238], "moin": 234, "mis": [234, 237, 238], "plac": 234, "disponibl": [234, 238], "vont": 234, "Un": 234, "\u00e9valu": 234, "m\u00e9can": 234, "Une": 234, "sp\u00e9cial": [234, 235], "commod": [234, 235], "\u00e9chantillon": [234, 236, 237], "r\u00e9sult": [234, 238], "mesur": [234, 235], "aer": [234, 235, 238, 239, 241, 242, 243], "statefn": [234, 235], "paulisumop": 234, "aerpauliexpect": [234, 238, 239], "listop": 234, "algorithm_global": [234, 235, 236, 237, 238, 239, 240, 242, 243], "random_seed": [234, 235, 236, 237, 238, 239, 240, 242, 243], "42": [234, 235, 238, 239, 242, 243], "calculcat": 234, "expval": 234, "qi_sv": [234, 242, 243], "get_backend": [234, 235, 236, 237, 238, 239, 240, 242, 243], "aer_simulator_statevector": [234, 238, 242, 243], "lat": [234, 243], "qi_qasm": [234, 242], "aer_simulator": [234, 235, 242], "repr\u00e9sent": [234, 236, 237], "tous": [234, 238], "expos": 234, "ver": 234, "avant": [234, 236], "arrier": 234, "pren": 234, "poid": [234, 235], "entra\u00een": [234, 237], "entr\u00e9": [234, 235, 236, 237], "contient": [234, 236], "aucun": [234, 238], "capac": 234, "entrain": 234, "trouvent": 234, "niveau": 234, "ains": [234, 237, 238], "stock": 234, "valeur": [234, 235, 237, 238], "suit": [234, 235, 236], "introduit": [234, 238], "Soit": 234, "wieght": 234, "prend": [234, 237, 238], "\u00e9gal": [234, 235, 236, 237, 238], "m\u00eam": [234, 238], "oper": 234, "appui": 234, "cadr": [234, 235], "passag": [234, 238], "tel": [234, 236, 238], "esper": 234, "rapport": [234, 235], "\u00e9tat": [234, 237, 238], "classiqu": [234, 236, 237, 238], "cr\u00e9ation": 234, "complex": [234, 235, 237, 238], "construir": 234, "params1": 234, "input1": 234, "weight1": 234, "qc1": 234, "rx": 234, "qc_sfn1": 234, "cost": 234, "h1": 234, "from_list": 234, "op1": 234, "composedop": [234, 238, 239], "operatormeasur": [234, 238, 239], "circuitstatefn": [234, 238, 239], "qnn1": [234, 238, 239], "6": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "weights1": 234, "08242345": 234, "8": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "9": [234, 235, 236, 237, 238, 239, 240, 242, 243], "2970094": 234, "combinaison": 234, "plusieur": [234, 235], "11": [234, 235, 236, 238, 239, 240, 241, 242, 243], "op2": 234, "qnn2": [234, 238], "13": [234, 235, 237, 238, 239, 241, 242, 243], "consist": [234, 237, 238], "premi": [234, 235, 237, 238], "cart": [234, 235, 236], "inser": 234, "14": [234, 235, 238, 239, 241, 242, 243], "15": [234, 235, 236, 238, 239, 240, 242, 243], "specify": [234, 239], "16": [234, 235, 237, 238, 239, 242, 243], "fm": [234, 235, 238, 239, 241], "rep": [234, 235, 236, 237, 238, 240, 243], "mpl": [234, 235, 243], "17": [234, 235, 236, 237, 238, 239, 240, 242, 243], "18": [234, 235, 238, 239, 242, 243], "zzz": 234, "19": [234, 235, 236, 238, 239, 240, 241, 242, 243], "qnn3": [234, 238], "20": [234, 235, 236, 238, 239, 240, 241, 242, 243], "input3": 234, "weights3": 234, "21": [234, 235, 238, 239, 242, 243], "18276559": 234, "22": [234, 235, 238, 239, 242, 243], "10231208": 234, "10656571": 234, "41017902": 234, "16528909": 234, "27780262": 234, "41365763": 234, "admet": 234, "produit": [234, 236, 237], "cha\u00een": [234, 235], "bit": [234, 235, 236, 238, 240, 242], "direct": [234, 237, 238, 240], "binair": [234, 235, 238], "estim": 234, "retropropag": 234, "diff\u00e9renci": [234, 238], "possibl": [234, 235, 238, 243], "r\u00e9tropropag": [234, 238], "r\u00e9sultat": [234, 235, 238], "De": 234, "sp\u00e9cifi": 234, "trait": [234, 236], "attend": [234, 235], "enti": 234, "mapp": [234, 235, 236], "n\u00e9gat": 234, "doit": [234, 237], "agreg": 234, "cons\u00e9quent": 234, "vecteur": [234, 235, 236], "\u00ecnterpret": 234, "exponentiel": 234, "nombr": [234, 235, 237], "recommand": [234, 238], "\u00e9pars": 234, "g\u00e9n\u00e9ral": [234, 236, 238], "attendu": 234, "caracter": 234, "sen": 234, "ser": [234, 235, 243], "longueur": 234, "23": [234, 235, 237, 238, 239, 240, 241, 242], "24": [234, 235, 237, 238, 239, 241, 242, 243], "entangl": [234, 236, 237, 238], "linear": [234, 236, 238, 239], "25": [234, 235, 236, 238, 239], "qnn4": [234, 238], "26": [234, 235, 238, 239, 243], "input4": 234, "weights4": 234, "27": [234, 236, 238, 239, 240], "todens": 234, "28": [234, 235, 239, 243], "lt": [234, 238, 241, 242], "coo": 234, "dtyp": 234, "float64": 234, "nnz": 234, "33": [234, 238, 239, 242], "fill_valu": 234, "gt": [234, 238, 241, 242], "29": [234, 239], "parity": [234, 235, 238, 243], "b": [234, 235, 236, 240, 241, 242, 243], "count": [234, 235, 238, 243], "qnn6": 234, "input6": 234, "weights6": 234, "31": [234, 236, 237, 238, 239, 240, 242], "32": [234, 239, 241], "qnn7": 234, "34": [234, 239, 243], "input7": 234, "weights7": 234, "35": [234, 239], "mapped": 234, "36": [234, 239], "37": 234, "qnn8": 234, "38": 234, "input8": 234, "weights8": 234, "39": [234, 239, 241], "40": [234, 238, 242], "43": 234, "tool": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "jupyt": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qiskit_version_t": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qiskit_copyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "informationqisk": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "softwareversionqisk": [234, 235, 236, 238, 239, 240, 241, 242, 243], "terra0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "0qisk": [234, 235, 236, 238, 239, 240, 241, 242, 243], "aer0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "ignis0": [234, 235, 236, 239, 240, 241, 243], "provider0": [234, 235, 237, 238, 239, 242, 243], "aqua0": [234, 235, 236, 239, 240], "learning0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "0system": [234, 235, 236, 238, 239, 240, 241, 242, 243], "informationpython3": [234, 235, 236, 237, 240], "jun": [234, 235], "2021": [234, 235, 236, 237, 239, 240, 241, 243], "49": [234, 235], "gcc": [234, 235], "oslinuxcpus4memory": [234, 235], "gb": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "6849517822265625sat": 234, "aug": [234, 235, 236, 238, 240, 242], "04": 234, "52": 234, "ist": [234, 235], "copyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "ibm": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "2017": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "licensed": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "under": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "apach": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "licens": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "you": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "mayobtain": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "root": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tre": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "www": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "retain": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "thiscopyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "notic": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "carry": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "indicatingthat": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "they": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "original": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "02_neural_network_classifier_and_regressor": 235, "tutoriel": [235, 237, 238], "montron": [235, 238], "comment": [235, 238], "deux": [235, 236, 237], "prennent": 235, "exploitent": 235, "proposon": 235, "vari": 235, "pr\u00e9configur": 235, "didacticiel": 235, "pyplot": [235, 236, 237, 238, 239, 240, 241, 242, 243], "plt": [235, 236, 237, 238, 239, 240, 241, 242, 243], "cobyl": [235, 242, 243], "l_bfgs_b": 235, "typing": 235, "ipython": [235, 242, 243], "display": [235, 241, 242, 243], "clear_output": [235, 242, 243], "Nous": [235, 236, 238], "pr\u00e9paron": 235, "ensembl": [235, 236, 238], "y01": [235, 238, 239, 243], "axis": [235, 238, 239, 242, 243], "y_one_hot": 235, "zeros": 235, "rang": [235, 237, 238, 239, 241, 242, 243], "y_target": [235, 238, 239], "zip": [235, 238, 239], "bo": [235, 238, 239], "else": [235, 238, 239], "go": [235, 238, 239, 242], "color": [235, 237, 238, 239, 240, 242], "black": [235, 238, 239, 242], "cens": 235, "sort": [235, 238], "unidimensionnel": 235, "affecton": 235, "math": [235, 237], "utilison": [235, 236, 237, 238], "d\u00e9fin": [235, 236, 237], "opflow_qnn": [235, 243], "allon": [235, 236, 238], "rappel": [235, 238], "callback_graph": [235, 242, 243], "Elle": 235, "chaqu": [235, 237], "optimiseur": [235, 237], "recevr": 235, "actuel": 235, "ponder": 235, "notr": [235, 236, 238], "ajouton": 235, "puission": 235, "graph": 235, "cepend": [235, 238], "voul": 235, "tant": [235, 236, 237, 238], "obtient": 235, "mention": 235, "liv": [235, 242, 243], "obj_func_eval": [235, 243], "wait": [235, 242, 243], "objective_func_val": [235, 243], "append": [235, 238, 239, 241, 242, 243], "titl": [235, 236, 237, 238, 240, 241, 242, 243], "against": [235, 237, 242, 243], "xlabel": [235, 237, 238, 242, 243], "ylabel": [235, 237, 238, 242, 243], "len": [235, 237, 238, 239, 241, 242, 243], "opflow_classifi": [235, 243], "empty": [235, 242, 243], "rcparam": [235, 241, 242, 243], "figur": [235, 236, 237, 239, 240, 241, 242, 243], "figsiz": [235, 236, 237, 238, 240, 241, 242, 243], "scor": [235, 236, 240, 242, 243], "y_predict": [235, 238, 239], "red": [235, 236, 238, 239], "wrongly": [235, 238, 239], "classified": [235, 238, 239, 242], "y_p": [235, 238, 239], "scatt": [235, 236, 238, 239, 240, 241, 242], "200": [235, 238, 239, 242], "facecolor": [235, 236, 238, 239, 240, 241, 242], "edgecolor": [235, 236, 238, 239, 240, 241, 242], "linewidth": [235, 237, 238, 239, 242], "int\u00e9rieur": 235, "probabl": [235, 237, 238], "dimensionnel": [235, 236, 237], "indiqu": [235, 236], "\u00e9chantillonnag": 235, "automat": [235, 238], "lieu": [235, 238], "suff": [235, 238], "parit": [235, 238], "decompos": [235, 243], "outcom": [235, 243], "circuit_qnn": 235, "circuit_classifi": 235, "75": [235, 239], "extens": [235, 242], "chaud": 235, "Par": [235, 237, 238], "crossentropyloss": [235, 238, 239], "\u00e9tiquet": [235, 236], "renverr": 235, "pr\u00e9dict": 235, "ep": [235, 238, 239], "lb": [235, 238, 239], "ub": [235, 238, 239], "linspac": [235, 237, 238, 239, 242], "num": 235, "50": [235, 238, 243], "reshap": [235, 238, 239, 240, 242], "sin": [235, 238, 239], "Ici": [235, 237, 238], "limiton": 235, "Des": 235, "auss": 235, "multidimensionnel": 235, "pourr": 235, "construit": 235, "dep": 235, "param_x": [235, 238, 239], "param_y": [235, 238, 239], "vf": [235, 238, 239], "regression_opflow_qnn": 235, "9763610762801076": 235, "lin": [235, 238, 239], "instar": 235, "consider": [235, 236, 238], "l2loss": 235, "minimis": 235, "erreur": 235, "quadrat": 235, "moyen": 235, "cibl": [235, 237, 238], "9748043399155905": 235, "6849517822265625mon": 235, "41": [235, 239], "59": 235, "03_quantum_kernel": 236, "t\u00e2ch": [236, 238], "\u00e9tudi": 236, "jeux": 236, "mieux": 236, "compr": 236, "espac": 236, "grand": 236, "_i": 236, "_j": 236, "fin": [236, 237], "ij": 236, "hilbert": 236, "supervis": 236, "am\u00e9lior": 236, "d\u00e9tail": [236, 237], "puis": 236, "clust": 236, "spectralclustering": 236, "metric": [236, 239, 241, 243], "normalized_mutual_info_scor": 236, "basica": [236, 237, 240], "ad_hoc_dat": [236, 241], "12345": [236, 240], "exempl": [236, 237, 238], "hoc": [236, 241], "decr": [236, 237], "section": [236, 238, 242], "pdf": [236, 240], "scienc": 236, "vectoriel": 236, "stabl": [236, 238], "adhoc_dimens": [236, 241], "train_featur": [236, 240, 242], "train_label": [236, 240, 242], "test_featur": [236, 240, 242], "test_label": [236, 240, 242], "adhoc_total": [236, 241], "ylim": [236, 241], "xlim": [236, 241], "imshow": [236, 238, 241], "asmatrix": [236, 241], "T": [236, 241], "interpol": [236, 241], "nearest": [236, 241], "origin": [236, 241], "cmap": [236, 238, 240, 241], "rdbu": [236, 240, 241], "extent": [236, 241], "mark": [236, 240, 241, 242], "o": [236, 237, 240, 241, 242], "legend": [236, 237, 240, 241, 242, 243], "bbox_to_anchor": [236, 240, 241, 242], "05": [236, 239, 240, 241, 242], "loc": [236, 237, 240, 241, 242], "borderaxespad": [236, 240, 241, 242], "Avec": 236, "pr\u00eat": 236, "avon": [236, 238], "stub": [236, 238], "qasm_simul": 236, "coup": 236, "adhoc_feature_map": 236, "adhoc_backend": 236, "qasm_simulator": 236, "seed_simulator": [236, 237, 240, 242], "seed_transpil": [236, 237, 240, 242], "adhoc_kernel": 236, "personnalis": [236, 238], "pr\u00e9calcul": 236, "pouvon": [236, 238], "autr": [236, 238], "outil": 236, "adhoc_svc": 236, "adhoc_scor": 236, "adhoc_matrix_train": 236, "adhoc_matrix_test": 236, "fig": [236, 238, 241], "ax": [236, 241], "subplot": [236, 238, 241], "blu": [236, 239, 242], "set_titl": [236, 238], "\u00e9tend": 236, "qsvc_scor": 236, "regroup": 236, "r\u00e9g\u00e9ner": 236, "jeu": [236, 238], "\u00e9cart": 236, "affich": 236, "marqu": 236, "mutuel": 236, "normalis": 236, "connaisson": 236, "prior": 236, "adhoc_matrix": 236, "green": [236, 239, 242], "adhoc_spectral": 236, "affinity": 236, "cluster_label": 236, "fit_predict": 236, "cluster_scor": 236, "7287008798015754": 236, "voic": 236, "quelqu": 236, "uns": 236, "agglomer": 236, "agglomerativeclustering": 236, "r\u00e9gress": 236, "dorsal": 236, "kernel_ridg": 236, "kernelridg": 236, "processus": 236, "gaussien": 236, "gaussian_process": 236, "compos": [236, 237, 238, 241], "decomposit": 236, "kernelpc": 236, "2qisk": [236, 240, 243], "2qiskit0": [236, 240], "2020": [236, 238, 240, 242], "msc": [236, 240], "1916": [236, 238, 240, 242], "64": [236, 238, 240, 242, 243], "amd64": [236, 238, 240, 242], "oswindowscpus4memory": [236, 240], "837730407714844fri": [236, 240], "dec": [236, 239, 240, 241], "03": [236, 240], "08": [236, 243], "gmt": [236, 238, 240, 242], "04_qgans_for_loading_random_distribu": 237, "antagon": 237, "apprendr": 237, "sous": [237, 238], "jacent": 237, "big": 237, "g_": 237, "thet": 237, "p_": 237, "ldot": 237, "proch": 237, "merc": 237, "1904": 237, "00043": 237, "lucch": 237, "woern": 237, "tarif": 237, "financi": 237, "d\u00e9riv": 237, "veuill": [237, 238], "consult": [237, 238], "71": 237, "inlin": [237, 241], "quantumregist": 237, "twolocal": 237, "numpydiscriminator": 237, "devon": [237, 238], "r\u00e9solu": 237, "deviat": 237, "mu": 237, "sigm": 237, "real_dat": 237, "lognormal": 237, "per": [237, 239], "q_k": 237, "variationnel": 237, "d_": 237, "gr\u00e2c": 237, "neuronal": [237, 238], "profondeur": 237, "r_y": 237, "port": 237, "cz": 237, "doivent": 237, "soin": 237, "car": 237, "\u00e9lev": 237, "permettent": 237, "exist": 237, "install": 237, "lor": [237, 238], "optimis": [237, 238], "adam": [237, 238, 239], "shortened": 237, "reducing": 237, "100": [237, 238, 240, 241, 242], "entangler_map": 237, "applying": [237, 242, 243], "hadamard": 237, "init_dist": 237, "reduc": [237, 243], "henc": 237, "total": [237, 242, 243], "notebook": 237, "increas": 237, "rand": [237, 239], "num_parameters_set": 237, "adding": 237, "infront": 237, "g_circuit": 237, "front": 237, "set_generator": 237, "issu": 237, "temp": 237, "workaround": 237, "_generator": 237, "_free_parameter": 237, "sorted": 237, "set_discriminator": 237, "pend": 237, "altern": [237, 240], "co\u00fbt": 237, "l_g": 237, "frac": 237, "limits_": 237, "l_d": 237, "d\u00e9not": 237, "taill": 237, "lot": 237, "d\u00e9criv": 237, "raccourc": 237, "s\u00e9lect": 237, "connu": [237, 238], "connaiss": 237, "pr\u00e9alabl": 237, "prendr": [237, 238], "params_d": 237, "03697158": 237, "61015372": 237, "48103428": 237, "1661673": 237, "20186384": 237, "08584337": 237, "params_g": 237, "95229918": 237, "9522102": 237, "55218478": 237, "64793094": 237, "loss_d": 237, "6925": 237, "loss_g": 237, "7246": 237, "rel_entr": 237, "107": 237, "mainten": [237, 238], "tra\u00e7on": 237, "\u00e9volu": 237, "entrop": [237, 238], "enfin": 237, "comparon": 237, "cumul": 237, "cdf": 237, "progress": 237, "t_step": 237, "arang": [237, 240], "g_loss": 237, "mediumvioletred": 237, "d_loss": 237, "rebeccapurpl": 237, "best": 237, "mediumblu": 237, "lw": 237, "ls": 237, "log_normal": 237, "100000": [237, 243], "round": 237, "samples_g": 237, "prob_g": 237, "get_output": 237, "10000": [237, 243], "flatten": [237, 238], "num_bin": 237, "bar": 237, "cumsum": 237, "royalblu": 237, "width": 237, "simul": [237, 243], "deepskyblu": 237, "markersiz": 237, "xtick": 237, "softwareversionqiskitnoneterra0": 237, "dev0": 237, "346ffa8aer0": 237, "0ignis0": 237, "d6f1ad7aquanoneibm": 237, "q": [237, 238, 239], "10f19e0system": 237, "feb": 237, "46": 237, "clang": [237, 239], "osdarwincpus6memory": 237, "0wed": [237, 239], "54": 237, "cest": [237, 243], "05_torch_connector": 238, "pr\u00e9sent": 238, "montr": 238, "integr": 238, "naturel": 238, "flux": 238, "travail": 238, "rend": 238, "transparent": 238, "architectur": 238, "conjoint": 238, "essai": 238, "moteur": 238, "autograd": 238, "lien": 238, "beginn": 238, "blitz": 238, "autograd_tutorial": 238, "workflow": 238, "typiqu": 238, "cnn": 238, "necessary": [238, 243], "mseloss": [238, 239], "lbfg": [238, 239], "declar": [238, 243], "qi": 238, "tout": 238, "r\u00e9soudr": 238, "effectu": 238, "al\u00e9atoir": 238, "select": [238, 239, 241, 243], "coordinat": [238, 239], "oplowqnn": [238, 239], "y01_": [238, 239], "long": [238, 239], "li": 238, "illustron": 238, "pr\u00e9c\u00e9dent": 238, "model1": [238, 239], "zz": [238, 239], "01256962": 238, "06653564": [238, 239], "04005302": [238, 239], "03752667": [238, 239], "06645196": [238, 239], "06095287": [238, 239], "02250432": [238, 239], "04233438": [238, 239], "3285": 238, "grad_fn": 238, "_torchnnfunctionbackward": 238, "choix": 238, "apprentissag": 238, "crucial": 238, "d\u00e9termin": 238, "succes": 238, "acces": 238, "paquet": 238, "parm": 238, "c\u00e9lebr": 238, "populair": 238, "figurent": 238, "sgd": 238, "adagrad": 238, "bfg": 238, "ordre": 238, "numer": 238, "quant": 238, "tir": 238, "prof": 238, "pr\u00e9d\u00e9fin": 238, "clarif": 238, "regl": 238, "inter": 238, "mse": 238, "hypothes": 238, "gamm": 238, "obtenu": 238, "bi": 238, "couch": 238, "etant": 238, "inclut": 238, "appliquon": 238, "mappag": 238, "plag": 238, "Au": 238, "pos": 238, "question": 238, "raison": 238, "laquel": 238, "norm": 238, "encourageon": 238, "exp\u00e9riment": 238, "elles": 238, "avoir": 238, "f_loss": 238, "reduct": [238, 239], "reevaluat": 238, "so": [238, 240, 242, 243], "closur": 238, "recomput": 238, "your": [238, 239, 243], "clear": 238, "zero_grad": 238, "step4": 238, "535646438598633": 238, "696760177612305": 238, "039228439331055": 238, "687908172607422": 238, "267208099365234": 238, "025373458862305": 238, "154708862304688": 238, "337854385375977": 238, "082578659057617": 238, "073287963867188": 238, "21839141845703": 238, "992582321166992": 238, "929339408874512": 238, "914533615112305": 238, "907636642456055": 238, "902364730834961": 238, "902134895324707": 238, "90211009979248": 238, "902111053466797": 238, "5356": 238, "mselossbackward0": 238, "sign": [238, 239], "cercl": 238, "roug": 238, "indiquent": 238, "mal": 238, "liaison": 238, "peu": 238, "attent": 238, "correct": 238, "assur": 238, "retournon": 238, "donc": 238, "oubli": 238, "explicit": 238, "officiel": 238, "setup": 238, "remind": 238, "model2": 238, "0364991": [238, 239], "0720495": 238, "06001836": 238, "09852755": 238, "retourn": 238, "explained": [238, 243], "set_to_non": 238, "6925069093704224": 238, "6881508231163025": 238, "6516683101654053": 238, "6485998034477234": 238, "6394743919372559": 238, "7057444453239441": 238, "669085681438446": 238, "766187310218811": 238, "7188469171524048": 238, "7919709086418152": 238, "7598814964294434": 238, "7028256058692932": 238, "7486447095870972": 238, "6890242695808411": 238, "7760348916053772": 238, "7892935276031494": 238, "7556288242340088": 238, "7058126330375671": 238, "7203161716461182": 238, "7030722498893738": 238, "argmax": 238, "onde": 238, "sinuso\u00efdal": 238, "routin": 238, "analogu": 238, "model3": 238, "947757720947266": 238, "948650360107422": 238, "952412605285645": 238, "37905153632164": 238, "24995625019073486": 238, "2483610212802887": 238, "24835753440856934": 238, "9478": 238, "imag": 238, "\u00e9critur": 238, "manuel": 238, "expliqu": 238, "textbook": 238, "ch": 238, "additional": 238, "related": 238, "cat": 238, "no_grad": 238, "torchvis": 238, "conv2d": 238, "dropout2d": 238, "nllloss": 238, "maxpool2d": 238, "sequential": 238, "relu": 238, "functional": 238, "tiron": 238, "api": 238, "vision": 238, "wikipedi": 238, "wik": 238, "mnist_databas": 238, "link": 238, "shuffl": [238, 239, 240], "reproducibility": [238, 242, 243], "concentrat": 238, "download": 238, "totensor": 238, "filt": 238, "originally": 238, "leaving": 238, "idx": [238, 239], "filtered": 238, "r\u00e9alison": 238, "rapid": 238, "constitu": 238, "manuscrit": 238, "n_samples_show": 238, "data_it": 238, "axe": 238, "nrow": 238, "ncol": 238, "__next__": 238, "squeez": 238, "gray": 238, "set_xtick": 238, "set_ytick": 238, "x_test": [238, 239, 241], "test_load": [238, 239], "puissanc": 238, "apres": 238, "initialis": 238, "ad\u00e9quat": 238, "create_qnn": [238, 242], "enabling": 238, "backprop": 238, "net": [238, 242], "__init__": [238, 239, 241], "conv1": 238, "kernel_siz": 238, "conv2": 238, "dropout": 238, "fc1": 238, "256": 238, "fc2": 238, "interval": 238, "fc3": 238, "max_pool2d": 238, "view": 238, "model4": 238, "lr": [238, 239], "001": 238, "loss_list": 238, "total_loss": 238, "batch_idx": 238, "0f": 238, "tloss": 238, "4f": [238, 243], "1630": 238, "5294": 238, "7855": 238, "9863": 238, "2257": 238, "60": 238, "4513": 238, "70": 238, "6758": 238, "80": [238, 242], "8832": 238, "90": 238, "1006": 238, "3061": 238, "convergent": [238, 242], "neg": 238, "likelihood": 238, "sauv": 238, "entain": 238, "r\u00e9utilis": 238, "tard": 238, "inf\u00e9rent": 238, "sauvegard": 238, "state_dict": [238, 239, 242], "pt": [238, 242], "commen\u00e7on": 238, "recr\u00e9": 238, "fichi": 238, "\u00e9mul": 238, "vrai": 238, "mat\u00e9riel": 238, "r\u00e9el": 238, "vic": 238, "vers": 238, "souc": 238, "simpliqu": 238, "cr\u00e9on": 238, "nouveau": 238, "neuron": 238, "dessus": 238, "qnn5": 238, "model5": 238, "load_state_dict": [238, 242], "matched": 238, "successfully": [238, 239], "eval": 238, "pred": 238, "keepdim": 238, "eq": 238, "view_": 238, "taccuracy": 238, "1f": 238, "3585": 238, "break": 238, "now": [238, 242, 243], "able": [238, 239, 243], "exper": 238, "good": [238, 243], "luck": 238, "3qisk": [238, 242, 243], "3qiskit0": [238, 242, 243], "informationpython": [238, 239, 241, 242, 243], "version3": [238, 239, 241, 242, 243], "9python": [238, 242], "compilermsc": [238, 242], "builddefault": [238, 239, 241, 242, 243], "11oswindowscpus4memory": [238, 242], "837730407714844wed": 238, "apr": [238, 242, 243], "2022": [238, 242, 243], "daylight": [238, 242], "06_torch_runtim": 239, "leverag": [239, 243], "predicting": 239, "significantly": 239, "fast": [239, 240], "wav": 239, "is_tensor": 239, "purpos": [239, 240, 242, 243], "torchdataset": 239, "styl": 239, "__len__": 239, "__getitem__": 239, "tolist": 239, "y_i": 239, "train_set": 239, "train_loader1": 239, "wrap": 239, "usual": [239, 243], "optimizer1": 239, "loss_func1": 239, "load_account": 239, "get_provid": 239, "replac": [239, 240], "ibmq_qasm_simulator": 239, "torch_runtime_client": 239, "fit_result": 239, "querying": 239, "propert": 239, "job_id": 239, "execution_tim": 239, "model_state_dict": 239, "c6sqc05a2crk6k574olg": 239, "647154569625854": 239, "ordereddict": 239, "5758": 239, "_weight": 239, "query": 239, "train_history": 239, "dictionar": 239, "forward_tim": 239, "spent": 239, "backward_tim": 239, "epoch_tim": 239, "y_test": [239, 241], "test_set": 239, "c6sqc6la2crk6k574oo0": 239, "473742246627808": 239, "val_history": 239, "predict_result": 239, "c6sqcclg2jd5ui6ctu60": 239, "5448770523071289": 239, "ground": 239, "wer": [239, 242], "score_result": 239, "c6sqcfta2crk6k574ot0": 239, "6559648513793945": 239, "0004721035018463482": 239, "c6sqcj5a2crk6k574oug": 239, "410197257995605": 239, "c6sqcsda2crk6k574p30": 239, "5784239768981934": 239, "y_check": 239, "circl": 239, "c6sqcvta2crk6k574p4g": 239, "6043887138366699": 239, "offer": 239, "handl": 239, "complicated": 239, "flexibility": 239, "way": [239, 240, 242, 243], "demonstrated": 239, "snippet": [239, 242, 243], "before_train": 239, "before_epoch": 239, "before_step": 239, "train_step": 239, "after_step": 239, "global_step": 239, "after_epoch": 239, "after_train": 239, "torchtrain": 239, "config": 239, "describ": 239, "might": [239, 243], "useful": [239, 243], "max_epoch": 239, "log_period": 239, "logging": 239, "period": 239, "train_logg": 239, "logg": 239, "similar": 239, "val_logg": 239, "threshold": 239, "terminated": 239, "stophook": 239, "loss_threshold": 239, "_loss_threshold": 239, "current_loss": 239, "stop": 239, "stop_hook": 239, "epoch_result": 239, "c6sqd35a2crk6k574p6g": 239, "7064104080200195": 239, "027795438258181093": 239, "As": [239, 242, 243], "interrupted": 239, "despit": 239, "1qisk": [239, 241, 243], "5qiskit0": 239, "nature0": [239, 241], "6python": 239, "compilerclang": [239, 241, 243], "1200": 239, "09osdarwincpus8memory": 239, "jst": 239, "07_pegasos_qsvc": 240, "benefit": 240, "abov": [240, 242], "pap": [240, 243], "hom": 240, "ttic": 240, "edu": 240, "nat": 240, "publiqu": 240, "pegasosmpb": 240, "dual": 240, "trick": 240, "complexity": [240, 243], "pegasosqsvc": 240, "sufficiently": 240, "let": [240, 242, 243], "make_blob": 240, "center": 240, "random_stat": [240, 242], "ensur": [240, 243], "compatibility": 240, "split": [240, 242], "model_select": [240, 242], "train_test_spl": [240, 242], "preprocessing": [240, 242], "minmaxscal": [240, 242], "feature_rang": 240, "fit_transform": [240, 242], "train_siz": [240, 242], "tau": 240, "performed": [240, 241], "pleas": [240, 242], "last": 240, "hyperparamet": 240, "zfeaturemap": [240, 243], "pegasos_backend": 240, "pretty": 240, "afterward": 240, "pegasos_scor": 240, "visualiz": 240, "mesh": 240, "predefined": 240, "span": 240, "minimum": 240, "add": 240, "grid_step": 240, "grid_x": 240, "grid_y": 240, "meshgrid": 240, "coloring": 240, "meshgrid_featur": 240, "column_stack": 240, "ravel": 240, "meshgrid_color": 240, "finally": [240, 242, 243], "pcolormesh": 240, "shading": 240, "auto": 240, "08_quantum_kernel_train": 241, "illustrat": 241, "basic": 241, "qka": 241, "techniqu": 241, "iteratively": 241, "converging": 241, "preprint": 241, "covari": 241, "group": 241, "quantumkerneltrain": 241, "pylab": 241, "cm": 241, "pand": 241, "pd": 241, "provider": 241, "aersimulator": 241, "circuit_draw": 241, "spsa": 241, "qktcallback": 241, "wrapp": 241, "_dat": 241, "x0": 241, "x1": 241, "x2": 241, "x3": 241, "x4": 241, "stepsiz": 241, "accepted": 241, "get_callback_dat": 241, "clear_callback_dat": 241, "ad_hoc": 241, "py": 241, "demonstrat": 241, "rotational": 241, "amount": [241, 242], "fm0": 241, "fm1": 241, "composed": 241, "hold": 241, "manag": 241, "selecting": 241, "instantiat": 241, "desired": 241, "cb_qkt": 241, "spsa_opt": 241, "maxit": [241, 242, 243], "learning_rat": 241, "perturb": 241, "qkt": 241, "optimal_parameter": 241, "pair": [241, 243], "optimal_point": 241, "optimal_valu": 241, "optimizer_eval": 241, "optimizer_tim": 241, "taken": 241, "qka_result": 241, "parametervectorel": 241, "2984045829959046": 241, "29840458": 241, "733763373742224": 241, "0x7fd7e864f100": 241, "labels_test": 241, "evalaut": 241, "accuracy_test": 241, "balanced_accuracy_scor": 241, "y_tru": 241, "y_pred": 241, "evolv": 241, "converg": 241, "reach": 241, "choic": 241, "final": [241, 243], "similarity": 241, "font": 241, "set_xlabel": 241, "set_ylabel": 241, "get_cmap": 241, "bwr": 241, "tight_layout": 241, "10python": 241, "55osdarwincpus8memory": 241, "0mon": 241, "cst": 241, "09_saving_and_loading": 242, "ability": [242, 243], "especially": 242, "signific": 242, "invested": 242, "resum": 242, "previously": [242, 243], "cov": 242, "off": [242, 243], "ll": 242, "heavily": 242, "fix": [242, 243], "onehotencod": 242, "approach": 242, "summing": 242, "column": 242, "num_featur": 242, "scal": 242, "down": 242, "look": 242, "79067335": 242, "44566143": 242, "88072937": 242, "7126244": 242, "06741233": 242, "7770372": 242, "80422817": 242, "10351936": 242, "45754615": 242, "choos": 242, "employ": 242, "reshaped": 242, "decid": 242, "plotting": 242, "easi": 242, "thumb": 242, "full": [242, 243], "once": 242, "verify": 242, "behav": 242, "unseen": [242, 243], "plot_dataset": 242, "solid": 242, "objective_valu": 242, "versus": 242, "minor": 242, "tweak": 242, "_": 242, "stage1_len": 242, "stage1_x": 242, "stage1_y": 242, "stage2_len": 242, "stage2_x": 242, "stage2_y": 242, "orang": 242, "purpl": 242, "mentioned": 242, "manually": [242, 243], "original_optimiz": 242, "asarray": 242, "num_parameter": 242, "earli": 242, "original_classifi": 242, "0x16ec7cdf488": 242, "want": [242, 243], "vqc_classifi": 242, "loaded_classifi": 242, "alter": 242, "again": 242, "finished": 242, "0x16ec827b848": 242, "9333333333333333": 242, "misclassified": 242, "train_predict": 242, "test_predict": 242, "highlight": 242, "incorrectly": 242, "pathcollect": 242, "0x16ec8906288": 242, "follow": [242, 243], "recommend": 242, "ref": 242, "short": 242, "pseudo": 242, "ide": 242, "new_qnn": 242, "loaded_model": 242, "837730407714844tu": 242, "09": 242, "10_effective_dimens": 243, "advantag": 243, "localeffectivedimens": 243, "geometry": 243, "notion": 243, "trainability": 243, "expressibility": 243, "diving": 243, "briefly": 243, "explain": 243, "what": 243, "why": 243, "relev": 243, "introduced": 243, "shar": 243, "goal": 243, "generalizing": 243, "insight": 243, "finding": 243, "assess": 243, "matt": 243, "author": 243, "indicator": 243, "proposed": 243, "capacity": 243, "actually": 243, "analyzed": 243, "incorporat": 243, "focus": 243, "term": 243, "practical": 243, "quit": 243, "conceptual": 243, "captur": 243, "sensit": 243, "main": 243, "normaliz": 243, "averaging": 243, "dividing": 243, "formul": 243, "fixed": 243, "compar": 243, "sampled": 243, "global_ed": 243, "affect": 243, "5000": 243, "8000": 243, "40000": 243, "60000": 243, "150000": 243, "200000": 243, "500000": 243, "1000000": 243, "global_eff_dim_0": 243, "get_effective_dimens": 243, "practically": 243, "obtain": 243, "correlat": 243, "6657": 243, "7776": 243, "calling": 243, "monitor": 243, "global_eff_dim_1": 243, "66565096": 243, "7133723": 243, "73782922": 243, "89963559": 243, "94632272": 243, "00280009": 243, "04530433": 243, "07408394": 243, "15786005": 243, "21349874": 243, "introduct": 243, "expressiveness": 243, "enforc": 243, "constraint": 243, "conceptually": 243, "rest": 243, "shared": 243, "creating": 243, "3d": 243, "continu": 243, "proceed": 243, "patient": 243, "150": 243, "68": 243, "trained_weight": 243, "_fit_result": 243, "local_ed_trained": 243, "local_eff_dim_trained": 243, "79663244": 243, "80325759": 243, "80653351": 243, "82723511": 243, "83320702": 243, "84062917": 243, "84641928": 243, "85045673": 243, "86276589": 243, "87134912": 243, "local_ed_untrained": 243, "local_eff_dim_untrained": 243, "80896667": 243, "81612261": 243, "81966781": 243, "84219603": 243, "84864578": 243, "85651291": 243, "86249025": 243, "86656428": 243, "8785217": 243, "88651616": 243, "decreas": 243, "looking": 243, "pick": 243, "enough": 243, "overfit": 243, "badly": 243, "action": 243, "inherently": 243, "logic": 243, "initialized": 243, "most": 243, "likely": 243, "produc": 243, "becaus": 243, "unnecessarily": 243, "implic": 243, "inact": 243, "keep": 243, "mind": 243, "though": 243, "intuit": 243, "happen": 243, "0python": 243, "nov": 243, "47osdarwincpus8memory": 243, "0tu": 243}, "objects": {"": [[0, 0, 0, "-", "qiskit_machine_learning"]], "qiskit_machine_learning": [[14, 1, 1, "", "QiskitMachineLearningError"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "connectors"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "kernels"], [7, 0, 0, "-", "neural_networks"], [8, 0, 0, "-", "runtime"], [9, 0, 0, "-", "utils"]], "qiskit_machine_learning.QiskitMachineLearningError": [[14, 2, 1, "", "with_traceback"]], "qiskit_machine_learning.algorithms": [[15, 3, 1, "", "BinaryObjectiveFunction"], [18, 3, 1, "", "DiscriminativeNetwork"], [24, 3, 1, "", "GenerativeNetwork"], [29, 3, 1, "", "MultiClassObjectiveFunction"], [32, 3, 1, "", "NeuralNetworkClassifier"], [36, 3, 1, "", "NeuralNetworkRegressor"], [40, 3, 1, "", "NumPyDiscriminator"], [48, 3, 1, "", "ObjectiveFunction"], [51, 3, 1, "", "OneHotObjectiveFunction"], [54, 3, 1, "", "PegasosQSVC"], [62, 3, 1, "", "PyTorchDiscriminator"], [71, 3, 1, "", "QGAN"], [88, 3, 1, "", "QSVC"], [90, 3, 1, "", "QSVR"], [92, 3, 1, "", "QuantumGenerator"], [101, 3, 1, "", "SerializableModelMixin"], [104, 3, 1, "", "TrainableModel"], [113, 3, 1, "", "VQC"], [119, 3, 1, "", "VQR"]], "qiskit_machine_learning.algorithms.BinaryObjectiveFunction": [[16, 2, 1, "", "gradient"], [17, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.DiscriminativeNetwork": [[19, 2, 1, "", "get_label"], [20, 2, 1, "", "loss"], [21, 2, 1, "", "save_model"], [22, 2, 1, "", "set_seed"], [23, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.GenerativeNetwork": [[25, 2, 1, "", "get_output"], [26, 2, 1, "", "loss"], [27, 4, 1, "", "parameter_values"], [28, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction": [[30, 2, 1, "", "gradient"], [31, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.NeuralNetworkClassifier": [[33, 2, 1, "", "fit"], [34, 2, 1, "", "predict"], [35, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.NeuralNetworkRegressor": [[37, 2, 1, "", "fit"], [38, 2, 1, "", "predict"], [39, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.NumPyDiscriminator": [[41, 4, 1, "", "discriminator_net"], [42, 2, 1, "", "get_label"], [43, 2, 1, "", "load_model"], [44, 2, 1, "", "loss"], [45, 2, 1, "", "save_model"], [46, 2, 1, "", "set_seed"], [47, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.ObjectiveFunction": [[49, 2, 1, "", "gradient"], [50, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.OneHotObjectiveFunction": [[52, 2, 1, "", "gradient"], [53, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.PegasosQSVC": [[55, 5, 1, "", "FITTED"], [56, 5, 1, "", "UNFITTED"], [57, 2, 1, "", "fit"], [58, 4, 1, "", "num_steps"], [59, 4, 1, "", "precomputed"], [60, 2, 1, "", "predict"], [61, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.PyTorchDiscriminator": [[63, 4, 1, "", "discriminator_net"], [64, 2, 1, "", "get_label"], [65, 2, 1, "", "gradient_penalty"], [66, 2, 1, "", "load_model"], [67, 2, 1, "", "loss"], [68, 2, 1, "", "save_model"], [69, 2, 1, "", "set_seed"], [70, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.QGAN": [[72, 4, 1, "", "backend"], [73, 4, 1, "", "d_loss"], [74, 4, 1, "", "discriminator"], [75, 4, 1, "", "g_loss"], [76, 4, 1, "", "generator"], [77, 2, 1, "", "get_rel_entr"], [78, 4, 1, "", "quantum_instance"], [79, 4, 1, "", "random"], [80, 4, 1, "", "rel_entr"], [81, 2, 1, "", "run"], [82, 4, 1, "", "seed"], [83, 2, 1, "", "set_backend"], [84, 2, 1, "", "set_discriminator"], [85, 2, 1, "", "set_generator"], [86, 4, 1, "", "tol_rel_ent"], [87, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.QSVC": [[89, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.QSVR": [[91, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.QuantumGenerator": [[93, 2, 1, "", "construct_circuit"], [94, 4, 1, "", "discriminator"], [95, 2, 1, "", "get_output"], [96, 2, 1, "", "loss"], [97, 4, 1, "", "optimizer"], [98, 4, 1, "", "parameter_values"], [99, 4, 1, "", "seed"], [100, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.SerializableModelMixin": [[102, 2, 1, "", "load"], [103, 2, 1, "", "save"]], "qiskit_machine_learning.algorithms.TrainableModel": [[105, 2, 1, "", "fit"], [106, 4, 1, "", "initial_point"], [107, 4, 1, "", "loss"], [108, 4, 1, "", "neural_network"], [109, 4, 1, "", "optimizer"], [110, 2, 1, "", "predict"], [111, 2, 1, "", "score"], [112, 4, 1, "", "warm_start"]], "qiskit_machine_learning.algorithms.VQC": [[114, 4, 1, "", "ansatz"], [115, 4, 1, "", "circuit"], [116, 4, 1, "", "feature_map"], [117, 2, 1, "", "fit"], [118, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.algorithms.VQR": [[120, 4, 1, "", "ansatz"], [121, 4, 1, "", "feature_map"], [122, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.circuit": [[2, 0, 0, "-", "library"]], "qiskit_machine_learning.circuit.library": [[123, 3, 1, "", "RawFeatureVector"]], "qiskit_machine_learning.circuit.library.RawFeatureVector": [[124, 4, 1, "", "feature_dimension"], [125, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.connectors": [[126, 3, 1, "", "TorchConnector"]], "qiskit_machine_learning.connectors.TorchConnector": [[127, 2, 1, "", "forward"], [128, 4, 1, "", "neural_network"], [129, 4, 1, "", "sparse"], [130, 4, 1, "", "weight"]], "qiskit_machine_learning.datasets": [[131, 6, 1, "", "ad_hoc_data"], [132, 6, 1, "", "breast_cancer"], [133, 6, 1, "", "digits"], [134, 6, 1, "", "gaussian"], [135, 6, 1, "", "iris"], [136, 6, 1, "", "wine"]], "qiskit_machine_learning.kernels": [[137, 3, 1, "", "QuantumKernel"], [6, 0, 0, "-", "algorithms"]], "qiskit_machine_learning.kernels.QuantumKernel": [[138, 2, 1, "", "assign_user_parameters"], [139, 2, 1, "", "bind_user_parameters"], [140, 2, 1, "", "construct_circuit"], [141, 2, 1, "", "evaluate"], [142, 4, 1, "", "feature_map"], [143, 2, 1, "", "get_unbound_user_parameters"], [144, 4, 1, "", "quantum_instance"], [145, 4, 1, "", "unbound_feature_map"], [146, 4, 1, "", "user_param_binds"], [147, 4, 1, "", "user_parameters"]], "qiskit_machine_learning.kernels.algorithms": [[148, 3, 1, "", "QuantumKernelTrainer"], [154, 3, 1, "", "QuantumKernelTrainerResult"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer": [[149, 2, 1, "", "fit"], [150, 4, 1, "", "initial_point"], [151, 4, 1, "", "loss"], [152, 4, 1, "", "optimizer"], [153, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult": [[155, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.neural_networks": [[156, 3, 1, "", "CircuitQNN"], [164, 3, 1, "", "EffectiveDimension"], [171, 3, 1, "", "LocalEffectiveDimension"], [173, 3, 1, "", "NeuralNetwork"], [181, 3, 1, "", "OpflowQNN"], [185, 3, 1, "", "SamplingNeuralNetwork"], [190, 3, 1, "", "TwoLayerQNN"]], "qiskit_machine_learning.neural_networks.CircuitQNN": [[157, 4, 1, "", "circuit"], [158, 4, 1, "", "input_gradients"], [159, 4, 1, "", "input_params"], [160, 4, 1, "", "interpret"], [161, 4, 1, "", "quantum_instance"], [162, 2, 1, "", "set_interpret"], [163, 4, 1, "", "weight_params"]], "qiskit_machine_learning.neural_networks.EffectiveDimension": [[165, 2, 1, "", "get_effective_dimension"], [166, 2, 1, "", "get_fisher_information"], [167, 2, 1, "", "get_normalized_fisher"], [168, 4, 1, "", "input_samples"], [169, 2, 1, "", "run_monte_carlo"], [170, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.LocalEffectiveDimension": [[172, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.NeuralNetwork": [[174, 2, 1, "", "backward"], [175, 2, 1, "", "forward"], [176, 4, 1, "", "input_gradients"], [177, 4, 1, "", "num_inputs"], [178, 4, 1, "", "num_weights"], [179, 4, 1, "", "output_shape"], [180, 4, 1, "", "sparse"]], "qiskit_machine_learning.neural_networks.OpflowQNN": [[182, 4, 1, "", "input_gradients"], [183, 4, 1, "", "operator"], [184, 4, 1, "", "quantum_instance"]], "qiskit_machine_learning.neural_networks.SamplingNeuralNetwork": [[186, 2, 1, "", "probabilities"], [187, 2, 1, "", "probability_gradients"], [188, 2, 1, "", "sample"], [189, 4, 1, "", "sampling"]], "qiskit_machine_learning.neural_networks.TwoLayerQNN": [[191, 4, 1, "", "ansatz"], [192, 4, 1, "", "circuit"], [193, 4, 1, "", "feature_map"], [194, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.runtime": [[195, 3, 1, "", "TorchRuntimeClient"], [205, 3, 1, "", "TorchRuntimeResult"]], "qiskit_machine_learning.runtime.TorchRuntimeClient": [[196, 2, 1, "", "fit"], [197, 4, 1, "", "loss_func"], [198, 4, 1, "", "measurement_error_mitigation"], [199, 4, 1, "", "model"], [200, 4, 1, "", "optimizer"], [201, 2, 1, "", "predict"], [202, 4, 1, "", "provider"], [203, 2, 1, "", "score"], [204, 4, 1, "", "shots"]], "qiskit_machine_learning.runtime.TorchRuntimeResult": [[206, 4, 1, "", "execution_time"], [207, 4, 1, "", "job_id"], [208, 4, 1, "", "model_state_dict"], [209, 4, 1, "", "prediction"], [210, 4, 1, "", "score"], [211, 4, 1, "", "train_history"], [212, 4, 1, "", "val_history"]], "qiskit_machine_learning.utils": [[10, 0, 0, "-", "loss_functions"]], "qiskit_machine_learning.utils.loss_functions": [[213, 3, 1, "", "CrossEntropyLoss"], [216, 3, 1, "", "CrossEntropySigmoidLoss"], [219, 3, 1, "", "KernelLoss"], [222, 3, 1, "", "L1Loss"], [225, 3, 1, "", "L2Loss"], [228, 3, 1, "", "Loss"], [232, 3, 1, "", "SVCLoss"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss": [[214, 2, 1, "", "evaluate"], [215, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss": [[217, 2, 1, "", "evaluate"], [218, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.KernelLoss": [[220, 2, 1, "", "__call__"], [221, 2, 1, "", "evaluate"]], "qiskit_machine_learning.utils.loss_functions.L1Loss": [[223, 2, 1, "", "evaluate"], [224, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.L2Loss": [[226, 2, 1, "", "evaluate"], [227, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.Loss": [[229, 2, 1, "", "__call__"], [230, 2, 1, "", "evaluate"], [231, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.SVCLoss": [[233, 2, 1, "", "evaluate"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "method", "Python m\u00e9thode"], "3": ["py", "class", "Python classe"], "4": ["py", "property", "Python propri\u00e9t\u00e9"], "5": ["py", "attribute", "Python attribut"], "6": ["py", "function", "Python fonction"]}, "titleterms": {"qisk": [0, 12, 241, 242, 243], "machin": [0, 1, 2, 12, 241, 242, 244], "learning": [0, 1, 2, 12, 241, 242, 244], "api": 0, "referent": 0, "modul": 0, "qiskit_machine_learning": [0, 2, 3, 4, 7, 8, 9, 10], "submodul": [0, 5], "bas": [1, 7, 10], "class": [1, 7, 10, 241], "object": [1, 17, 31, 50, 53], "function": [1, 10], "algorithm": [1, 6, 243], "classifi": [1, 240], "regressor": 1, "distribu": [1, 237], "learner": 1, "circuit": [2, 115, 157, 192], "library": 2, "for": [2, 241], "appliqu": [2, 241], "featur": [2, 241], "map": [2, 241], "connector": 3, "dataset": [4, 241, 242, 243], "quantum": [5, 6, 240, 241], "kernel": [5, 6, 241], "neural": [7, 243], "network": [7, 243], "neural_network": [7, 108, 128], "metric": 7, "runtim": [8, 239], "utilit": 9, "util": [9, 10], "loss": [10, 20, 26, 44, 67, 96, 107, 151, 228, 229, 230, 231], "loss_funct": 10, "premi": 11, "Pas": 11, "install": 11, "optionnel": 11, "pr\u00eat": 11, "aller": 11, "overview": 12, "next": 12, "step": 12, "releas": 13, "not": 13, "qiskitmachinelearningerror": 14, "binaryobjectivefunct": [15, 16, 17], "gradient": [16, 30, 49, 52, 215, 218, 224, 227, 231], "discriminativenetwork": [18, 19, 20, 21, 22, 23], "get_label": [19, 42, 64], "save_model": [21, 45, 68], "set_seed": [22, 46, 69], "train": [23, 28, 47, 70, 87, 100, 239, 241, 242, 243], "generativenetwork": [24, 25, 26, 27, 28], "get_output": [25, 95], "parameter_valu": [27, 98], "multiclassobjectivefunct": [29, 30, 31], "neuralnetworkclassifi": [32, 33, 34, 35], "fit": [33, 37, 57, 105, 117, 149, 196, 239, 241], "predict": [34, 38, 60, 110, 201, 209, 239], "scor": [35, 39, 111, 203, 210, 239], "neuralnetworkregressor": [36, 37, 38, 39], "numpydiscriminator": [40, 41, 42, 43, 44, 45, 46, 47], "discriminator_net": [41, 63], "load_model": [43, 66], "objectivefunct": [48, 49, 50], "onehotobjectivefunct": [51, 52, 53], "pegasosqsvc": [54, 55, 56, 57, 58, 59, 60, 61], "fitted": 55, "unfitted": 56, "num_step": 58, "precomputed": 59, "quantum_kernel": [61, 89, 91, 153, 155], "pytorchdiscriminator": [62, 63, 64, 65, 66, 67, 68, 69, 70], "gradient_penalty": 65, "qgan": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 237], "backend": 72, "d_loss": 73, "discriminator": [74, 94], "g_loss": 75, "generator": 76, "get_rel_entr": 77, "quantum_inst": [78, 144, 161, 184], "random": 79, "rel_entr": 80, "run": 81, "seed": [82, 99], "set_backend": 83, "set_discriminator": 84, "set_generator": 85, "tol_rel_ent": 86, "qsvc": [88, 89], "qsvr": [90, 91], "quantumgenerator": [92, 93, 94, 95, 96, 97, 98, 99, 100], "construct_circuit": [93, 140], "optimiz": [97, 109, 152, 200, 241], "serializablemodelmixin": [101, 102, 103], "load": [102, 242], "sav": [103, 242], "trainablemodel": [104, 105, 106, 107, 108, 109, 110, 111, 112], "initial_point": [106, 150], "warm_start": 112, "vqc": [113, 114, 115, 116, 117, 118, 235], "ansatz": [114, 120, 191], "feature_map": [116, 121, 142, 193], "num_qubit": [118, 122, 125, 194], "vqr": [119, 120, 121, 122, 235], "rawfeaturevector": [123, 124, 125], "feature_dimens": 124, "torchconnector": [126, 127, 128, 129, 130], "forward": [127, 175], "spars": [129, 180], "weight": 130, "ad_hoc_dat": 131, "breast_canc": 132, "digit": 133, "gaussian": 134, "iris": 135, "win": 136, "quantumkernel": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "assign_user_parameter": 138, "bind_user_parameter": 139, "evaluat": [141, 214, 217, 221, 223, 226, 230, 233], "get_unbound_user_parameter": 143, "unbound_feature_map": 145, "user_param_bind": 146, "user_parameter": 147, "quantumkerneltrain": [148, 149, 150, 151, 152, 153], "quantumkerneltrainerresult": [154, 155], "circuitqnn": [156, 157, 158, 159, 160, 161, 162, 163, 234, 235, 238, 243], "input_gradient": [158, 176, 182], "input_param": 159, "interpret": 160, "set_interpret": 162, "weight_param": 163, "effectivedimens": [164, 165, 166, 167, 168, 169, 170], "get_effective_dimens": 165, "get_fisher_inform": 166, "get_normalized_fish": 167, "input_sampl": 168, "run_monte_carlo": 169, "weight_sampl": [170, 172], "localeffectivedimens": [171, 172], "neuralnetwork": [173, 174, 175, 176, 177, 178, 179, 180, 234], "backward": 174, "num_input": 177, "num_weight": 178, "output_shap": 179, "opflowqnn": [181, 182, 183, 184, 234, 235, 238], "operator": 183, "samplingneuralnetwork": [185, 186, 187, 188, 189], "probabilit": 186, "probability_gradient": 187, "sampl": 188, "sampling": 189, "twolayerqnn": [190, 191, 192, 193, 194, 234], "torchruntimeclient": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "loss_func": 197, "measurement_error_mitig": 198, "model": [199, 238, 239, 241, 242], "provid": 202, "shot": 204, "torchruntimeresult": [205, 206, 207, 208, 209, 210, 211, 212], "execution_tim": 206, "job_id": 207, "model_state_dict": 208, "train_history": 211, "val_history": 212, "crossentropyloss": [213, 214, 215], "crossentropysigmoidloss": [216, 217, 218], "kernelloss": [219, 220, 221], "__call__": [220, 229], "l1loss": [222, 223, 224], "l2loss": [225, 226, 227], "svcloss": [232, 233], "r\u00e9seau": [234, 235], "neuron": [234, 235], "quantiqu": [234, 235, 236], "1": [234, 238, 239, 242, 243], "2": [234, 238, 239, 242, 243], "3": [234, 238, 239, 242, 243], "4": [234, 238, 242, 243], "sort": 234, "probabl": 234, "entier": 234, "clairsem": 234, "parit": 234, "dens": 234, "exempl": 234, "classif": [235, 236, 238, 239], "r\u00e9gress": [235, 238], "classifieur": 235, "variationnel": 235, "r\u00e9gresseur": 235, "apprentissag": [236, 237], "automat": 236, "noyau": 236, "clustering": 236, "charg": 237, "al\u00e9atoir": 237, "don": [237, 238], "initialis": 237, "ex\u00e9cut": 237, "format": 237, "progres": 237, "r\u00e9sultat": 237, "connecteur": 238, "torch": [238, 239], "qnn": [238, 243], "hybrid": [238, 242], "contenu": 238, "part": 238, "simpl": 238, "a": [238, 239, 241, 242], "pytorch": [238, 242], "optimiseur": 238, "fonction": 238, "pert": 238, "b": 238, "mnist": 238, "\u00e9tap": 238, "d\u00e9fin": 238, "chargeur": 238, "entrain": 238, "test": [238, 241], "d\u00e9finit": 238, "entra\u00een": 238, "\u00e9valu": 238, "regress": 239, "call": 239, "to": 239, "the": [239, 241, 243], "training": [239, 241, 242], "with": 239, "valid": 239, "perform": 239, "calculat": 239, "how": 239, "use": 239, "hook": 239, "in": 239, "pegasos": 240, "support": 240, "vector": 240, "import": 241, "local": [241, 243], "external": 241, "and": [241, 242, 243], "packag": 241, "defin": [241, 243], "callback": 241, "our": 241, "prepar": [241, 242], "set": [241, 243], "up": [241, 243], "visualiz": 241, "process": 241, "saving": 242, "loading": 242, "continuous": 242, "it": 242, "continu": 242, "effect": 243, "dimens": 243, "of": 243, "global": 243, "v": 243, "basic": 243, "exampl": 243, "calcul": 243, "comput": 243, "trained": 243, "untrained": 243, "5": 243, "plot": 243, "analyz": 243, "result": 243, "didacticiel": 244}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 56}})