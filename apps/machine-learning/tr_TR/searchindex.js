Search.setIndex({"docnames": ["apidocs/qiskit_machine_learning", "apidocs/qiskit_machine_learning.algorithms", "apidocs/qiskit_machine_learning.circuit.library", "apidocs/qiskit_machine_learning.connectors", "apidocs/qiskit_machine_learning.datasets", "apidocs/qiskit_machine_learning.kernels", "apidocs/qiskit_machine_learning.kernels.algorithms", "apidocs/qiskit_machine_learning.neural_networks", "apidocs/qiskit_machine_learning.runtime", "apidocs/qiskit_machine_learning.utils", "apidocs/qiskit_machine_learning.utils.loss_functions", "getting_started", "index", "release_notes", "stubs/qiskit_machine_learning.QiskitMachineLearningError", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.get_label", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.loss", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.save_model", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.set_seed", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.train", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.get_output", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.loss", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.parameter_values", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.train", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.discriminator_net", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.get_label", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.load_model", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.loss", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.save_model", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.set_seed", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.train", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.FITTED", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.fit", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.num_steps", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.precomputed", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.predict", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.discriminator_net", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.get_label", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.gradient_penalty", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.load_model", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.loss", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.save_model", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.set_seed", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.train", "stubs/qiskit_machine_learning.algorithms.QGAN", "stubs/qiskit_machine_learning.algorithms.QGAN.backend", "stubs/qiskit_machine_learning.algorithms.QGAN.d_loss", "stubs/qiskit_machine_learning.algorithms.QGAN.discriminator", "stubs/qiskit_machine_learning.algorithms.QGAN.g_loss", "stubs/qiskit_machine_learning.algorithms.QGAN.generator", "stubs/qiskit_machine_learning.algorithms.QGAN.get_rel_entr", "stubs/qiskit_machine_learning.algorithms.QGAN.quantum_instance", "stubs/qiskit_machine_learning.algorithms.QGAN.random", "stubs/qiskit_machine_learning.algorithms.QGAN.rel_entr", "stubs/qiskit_machine_learning.algorithms.QGAN.run", "stubs/qiskit_machine_learning.algorithms.QGAN.seed", "stubs/qiskit_machine_learning.algorithms.QGAN.set_backend", "stubs/qiskit_machine_learning.algorithms.QGAN.set_discriminator", "stubs/qiskit_machine_learning.algorithms.QGAN.set_generator", "stubs/qiskit_machine_learning.algorithms.QGAN.tol_rel_ent", "stubs/qiskit_machine_learning.algorithms.QGAN.train", "stubs/qiskit_machine_learning.algorithms.QSVC", "stubs/qiskit_machine_learning.algorithms.QSVC.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.QSVR", "stubs/qiskit_machine_learning.algorithms.QSVR.quantum_kernel", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.construct_circuit", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.discriminator", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.get_output", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.loss", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.optimizer", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.parameter_values", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.seed", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.train", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.load", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.save", "stubs/qiskit_machine_learning.algorithms.TrainableModel", "stubs/qiskit_machine_learning.algorithms.TrainableModel.fit", "stubs/qiskit_machine_learning.algorithms.TrainableModel.initial_point", "stubs/qiskit_machine_learning.algorithms.TrainableModel.loss", "stubs/qiskit_machine_learning.algorithms.TrainableModel.neural_network", "stubs/qiskit_machine_learning.algorithms.TrainableModel.optimizer", "stubs/qiskit_machine_learning.algorithms.TrainableModel.predict", "stubs/qiskit_machine_learning.algorithms.TrainableModel.score", "stubs/qiskit_machine_learning.algorithms.TrainableModel.warm_start", "stubs/qiskit_machine_learning.algorithms.VQC", "stubs/qiskit_machine_learning.algorithms.VQC.ansatz", "stubs/qiskit_machine_learning.algorithms.VQC.circuit", "stubs/qiskit_machine_learning.algorithms.VQC.feature_map", "stubs/qiskit_machine_learning.algorithms.VQC.fit", "stubs/qiskit_machine_learning.algorithms.VQC.num_qubits", "stubs/qiskit_machine_learning.algorithms.VQR", "stubs/qiskit_machine_learning.algorithms.VQR.ansatz", "stubs/qiskit_machine_learning.algorithms.VQR.feature_map", "stubs/qiskit_machine_learning.algorithms.VQR.num_qubits", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits", "stubs/qiskit_machine_learning.connectors.TorchConnector", "stubs/qiskit_machine_learning.connectors.TorchConnector.forward", "stubs/qiskit_machine_learning.connectors.TorchConnector.neural_network", "stubs/qiskit_machine_learning.connectors.TorchConnector.sparse", "stubs/qiskit_machine_learning.connectors.TorchConnector.weight", "stubs/qiskit_machine_learning.datasets.ad_hoc_data", "stubs/qiskit_machine_learning.datasets.breast_cancer", "stubs/qiskit_machine_learning.datasets.digits", "stubs/qiskit_machine_learning.datasets.gaussian", "stubs/qiskit_machine_learning.datasets.iris", "stubs/qiskit_machine_learning.datasets.wine", "stubs/qiskit_machine_learning.kernels.QuantumKernel", "stubs/qiskit_machine_learning.kernels.QuantumKernel.assign_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.bind_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.construct_circuit", "stubs/qiskit_machine_learning.kernels.QuantumKernel.evaluate", "stubs/qiskit_machine_learning.kernels.QuantumKernel.feature_map", "stubs/qiskit_machine_learning.kernels.QuantumKernel.get_unbound_user_parameters", "stubs/qiskit_machine_learning.kernels.QuantumKernel.quantum_instance", "stubs/qiskit_machine_learning.kernels.QuantumKernel.unbound_feature_map", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_param_binds", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_parameters", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.circuit", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_gradients", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_params", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.interpret", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.quantum_instance", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.set_interpret", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.weight_params", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.backward", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.forward", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.sparse", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.input_gradients", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.operator", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.quantum_instance", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probabilities", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probability_gradients", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sample", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sampling", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.ansatz", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.circuit", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.feature_map", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.num_qubits", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.fit", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.loss_func", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.measurement_error_mitigation", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.model", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.optimizer", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.predict", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.provider", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.score", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.shots", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.execution_time", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.job_id", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.model_state_dict", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.prediction", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.score", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.train_history", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.val_history", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.__call__", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.Loss", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.__call__", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.evaluate", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.gradient", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate", "tutorials/01_neural_networks", "tutorials/02_neural_network_classifier_and_regressor", "tutorials/03_quantum_kernel", "tutorials/04_qgans_for_loading_random_distributions", "tutorials/05_torch_connector", "tutorials/06_torch_runtime", "tutorials/07_pegasos_qsvc", "tutorials/08_quantum_kernel_trainer", "tutorials/09_saving_and_loading models", "tutorials/10_effective_dimension", "tutorials/index"], "filenames": ["apidocs/qiskit_machine_learning.rst", "apidocs/qiskit_machine_learning.algorithms.rst", "apidocs/qiskit_machine_learning.circuit.library.rst", "apidocs/qiskit_machine_learning.connectors.rst", "apidocs/qiskit_machine_learning.datasets.rst", "apidocs/qiskit_machine_learning.kernels.rst", "apidocs/qiskit_machine_learning.kernels.algorithms.rst", "apidocs/qiskit_machine_learning.neural_networks.rst", "apidocs/qiskit_machine_learning.runtime.rst", "apidocs/qiskit_machine_learning.utils.rst", "apidocs/qiskit_machine_learning.utils.loss_functions.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_machine_learning.QiskitMachineLearningError.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.get_label.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.loss.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.save_model.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.train.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.get_output.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.loss.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.parameter_values.rst", "stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.train.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.discriminator_net.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.get_label.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.load_model.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.loss.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.save_model.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.train.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.FITTED.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.fit.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.num_steps.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.precomputed.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.predict.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.discriminator_net.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.get_label.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.gradient_penalty.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.load_model.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.loss.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.save_model.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.set_seed.rst", "stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.train.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.backend.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.d_loss.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.g_loss.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.generator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.get_rel_entr.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.quantum_instance.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.random.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.rel_entr.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.run.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.seed.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_backend.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.set_generator.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.tol_rel_ent.rst", "stubs/qiskit_machine_learning.algorithms.QGAN.train.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.quantum_kernel.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.construct_circuit.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.discriminator.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.get_output.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.loss.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.optimizer.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.parameter_values.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.seed.rst", "stubs/qiskit_machine_learning.algorithms.QuantumGenerator.train.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.load.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.save.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.fit.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.initial_point.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.loss.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.neural_network.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.optimizer.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.predict.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.score.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.warm_start.rst", "stubs/qiskit_machine_learning.algorithms.VQC.rst", "stubs/qiskit_machine_learning.algorithms.VQC.ansatz.rst", "stubs/qiskit_machine_learning.algorithms.VQC.circuit.rst", "stubs/qiskit_machine_learning.algorithms.VQC.feature_map.rst", "stubs/qiskit_machine_learning.algorithms.VQC.fit.rst", "stubs/qiskit_machine_learning.algorithms.VQC.num_qubits.rst", "stubs/qiskit_machine_learning.algorithms.VQR.rst", "stubs/qiskit_machine_learning.algorithms.VQR.ansatz.rst", "stubs/qiskit_machine_learning.algorithms.VQR.feature_map.rst", "stubs/qiskit_machine_learning.algorithms.VQR.num_qubits.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.forward.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.neural_network.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.sparse.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.weight.rst", "stubs/qiskit_machine_learning.datasets.ad_hoc_data.rst", "stubs/qiskit_machine_learning.datasets.breast_cancer.rst", "stubs/qiskit_machine_learning.datasets.digits.rst", "stubs/qiskit_machine_learning.datasets.gaussian.rst", "stubs/qiskit_machine_learning.datasets.iris.rst", "stubs/qiskit_machine_learning.datasets.wine.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.assign_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.bind_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.construct_circuit.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.evaluate.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.feature_map.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.get_unbound_user_parameters.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.quantum_instance.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.unbound_feature_map.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_param_binds.rst", "stubs/qiskit_machine_learning.kernels.QuantumKernel.user_parameters.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.circuit.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.input_params.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.interpret.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.quantum_instance.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.set_interpret.rst", "stubs/qiskit_machine_learning.neural_networks.CircuitQNN.weight_params.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.backward.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.forward.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.sparse.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.input_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.operator.rst", "stubs/qiskit_machine_learning.neural_networks.OpflowQNN.quantum_instance.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probabilities.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.probability_gradients.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sample.rst", "stubs/qiskit_machine_learning.neural_networks.SamplingNeuralNetwork.sampling.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.ansatz.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.circuit.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.feature_map.rst", "stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.num_qubits.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.fit.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.loss_func.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.measurement_error_mitigation.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.model.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.optimizer.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.predict.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.provider.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.score.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeClient.shots.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.execution_time.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.job_id.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.model_state_dict.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.prediction.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.score.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.train_history.rst", "stubs/qiskit_machine_learning.runtime.TorchRuntimeResult.val_history.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.__call__.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.__call__.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.evaluate.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.gradient.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate.rst", "tutorials/01_neural_networks.ipynb", "tutorials/02_neural_network_classifier_and_regressor.ipynb", "tutorials/03_quantum_kernel.ipynb", "tutorials/04_qgans_for_loading_random_distributions.ipynb", "tutorials/05_torch_connector.ipynb", "tutorials/06_torch_runtime.ipynb", "tutorials/07_pegasos_qsvc.ipynb", "tutorials/08_quantum_kernel_trainer.ipynb", "tutorials/09_saving_and_loading models.ipynb", "tutorials/10_effective_dimension.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Machine Learning API Reference", "Machine Learning Base Classes", "Circuit library for Machine Learning applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.circuit.library</span></code>)", "Connectors (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.connectors</span></code>)", "Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.datasets</span></code>)", "Quantum Kernels", "Quantum Kernel Algorithms", "Neural Networks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.neural_networks</span></code>)", "Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.runtime</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils</span></code>)", "Loss Functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils.loss_functions</span></code>)", "Ba\u015flarken", "Qiskit Machine Learning overview", "Release Notes", "QiskitMachineLearningError", "BinaryObjectiveFunction", "BinaryObjectiveFunction.gradient", "BinaryObjectiveFunction.objective", "DiscriminativeNetwork", "DiscriminativeNetwork.get_label", "DiscriminativeNetwork.loss", "DiscriminativeNetwork.save_model", "DiscriminativeNetwork.set_seed", "DiscriminativeNetwork.train", "GenerativeNetwork", "GenerativeNetwork.get_output", "GenerativeNetwork.loss", "GenerativeNetwork.parameter_values", "GenerativeNetwork.train", "MultiClassObjectiveFunction", "MultiClassObjectiveFunction.gradient", "MultiClassObjectiveFunction.objective", "NeuralNetworkClassifier", "NeuralNetworkClassifier.fit", "NeuralNetworkClassifier.predict", "NeuralNetworkClassifier.score", "NeuralNetworkRegressor", "NeuralNetworkRegressor.fit", "NeuralNetworkRegressor.predict", "NeuralNetworkRegressor.score", "NumPyDiscriminator", "NumPyDiscriminator.discriminator_net", "NumPyDiscriminator.get_label", "NumPyDiscriminator.load_model", "NumPyDiscriminator.loss", "NumPyDiscriminator.save_model", "NumPyDiscriminator.set_seed", "NumPyDiscriminator.train", "ObjectiveFunction", "ObjectiveFunction.gradient", "ObjectiveFunction.objective", "OneHotObjectiveFunction", "OneHotObjectiveFunction.gradient", "OneHotObjectiveFunction.objective", "PegasosQSVC", "PegasosQSVC.FITTED", "PegasosQSVC.UNFITTED", "PegasosQSVC.fit", "PegasosQSVC.num_steps", "PegasosQSVC.precomputed", "PegasosQSVC.predict", "PegasosQSVC.quantum_kernel", "PyTorchDiscriminator", "PyTorchDiscriminator.discriminator_net", "PyTorchDiscriminator.get_label", "PyTorchDiscriminator.gradient_penalty", "PyTorchDiscriminator.load_model", "PyTorchDiscriminator.loss", "PyTorchDiscriminator.save_model", "PyTorchDiscriminator.set_seed", "PyTorchDiscriminator.train", "QGAN", "QGAN.backend", "QGAN.d_loss", "QGAN.discriminator", "QGAN.g_loss", "QGAN.generator", "QGAN.get_rel_entr", "QGAN.quantum_instance", "QGAN.random", "QGAN.rel_entr", "QGAN.run", "QGAN.seed", "QGAN.set_backend", "QGAN.set_discriminator", "QGAN.set_generator", "QGAN.tol_rel_ent", "QGAN.train", "QSVC", "QSVC.quantum_kernel", "QSVR", "QSVR.quantum_kernel", "QuantumGenerator", "QuantumGenerator.construct_circuit", "QuantumGenerator.discriminator", "QuantumGenerator.get_output", "QuantumGenerator.loss", "QuantumGenerator.optimizer", "QuantumGenerator.parameter_values", "QuantumGenerator.seed", "QuantumGenerator.train", "SerializableModelMixin", "SerializableModelMixin.load", "SerializableModelMixin.save", "TrainableModel", "TrainableModel.fit", "TrainableModel.initial_point", "TrainableModel.loss", "TrainableModel.neural_network", "TrainableModel.optimizer", "TrainableModel.predict", "TrainableModel.score", "TrainableModel.warm_start", "VQC", "VQC.ansatz", "VQC.circuit", "VQC.feature_map", "VQC.fit", "VQC.num_qubits", "VQR", "VQR.ansatz", "VQR.feature_map", "VQR.num_qubits", "RawFeatureVector", "RawFeatureVector.feature_dimension", "RawFeatureVector.num_qubits", "TorchConnector", "TorchConnector.forward", "TorchConnector.neural_network", "TorchConnector.sparse", "TorchConnector.weight", "ad_hoc_data", "breast_cancer", "digits", "gaussian", "iris", "wine", "QuantumKernel", "QuantumKernel.assign_user_parameters", "QuantumKernel.bind_user_parameters", "QuantumKernel.construct_circuit", "QuantumKernel.evaluate", "QuantumKernel.feature_map", "QuantumKernel.get_unbound_user_parameters", "QuantumKernel.quantum_instance", "QuantumKernel.unbound_feature_map", "QuantumKernel.user_param_binds", "QuantumKernel.user_parameters", "QuantumKernelTrainer", "QuantumKernelTrainer.fit", "QuantumKernelTrainer.initial_point", "QuantumKernelTrainer.loss", "QuantumKernelTrainer.optimizer", "QuantumKernelTrainer.quantum_kernel", "QuantumKernelTrainerResult", "QuantumKernelTrainerResult.quantum_kernel", "CircuitQNN", "CircuitQNN.circuit", "CircuitQNN.input_gradients", "CircuitQNN.input_params", "CircuitQNN.interpret", "CircuitQNN.quantum_instance", "CircuitQNN.set_interpret", "CircuitQNN.weight_params", "EffectiveDimension", "EffectiveDimension.get_effective_dimension", "EffectiveDimension.get_fisher_information", "EffectiveDimension.get_normalized_fisher", "EffectiveDimension.input_samples", "EffectiveDimension.run_monte_carlo", "EffectiveDimension.weight_samples", "LocalEffectiveDimension", "LocalEffectiveDimension.weight_samples", "NeuralNetwork", "NeuralNetwork.backward", "NeuralNetwork.forward", "NeuralNetwork.input_gradients", "NeuralNetwork.num_inputs", "NeuralNetwork.num_weights", "NeuralNetwork.output_shape", "NeuralNetwork.sparse", "OpflowQNN", "OpflowQNN.input_gradients", "OpflowQNN.operator", "OpflowQNN.quantum_instance", "SamplingNeuralNetwork", "SamplingNeuralNetwork.probabilities", "SamplingNeuralNetwork.probability_gradients", "SamplingNeuralNetwork.sample", "SamplingNeuralNetwork.sampling", "TwoLayerQNN", "TwoLayerQNN.ansatz", "TwoLayerQNN.circuit", "TwoLayerQNN.feature_map", "TwoLayerQNN.num_qubits", "TorchRuntimeClient", "TorchRuntimeClient.fit", "TorchRuntimeClient.loss_func", "TorchRuntimeClient.measurement_error_mitigation", "TorchRuntimeClient.model", "TorchRuntimeClient.optimizer", "TorchRuntimeClient.predict", "TorchRuntimeClient.provider", "TorchRuntimeClient.score", "TorchRuntimeClient.shots", "TorchRuntimeResult", "TorchRuntimeResult.execution_time", "TorchRuntimeResult.job_id", "TorchRuntimeResult.model_state_dict", "TorchRuntimeResult.prediction", "TorchRuntimeResult.score", "TorchRuntimeResult.train_history", "TorchRuntimeResult.val_history", "CrossEntropyLoss", "CrossEntropyLoss.evaluate", "CrossEntropyLoss.gradient", "CrossEntropySigmoidLoss", "CrossEntropySigmoidLoss.evaluate", "CrossEntropySigmoidLoss.gradient", "KernelLoss", "KernelLoss.__call__", "KernelLoss.evaluate", "L1Loss", "L1Loss.evaluate", "L1Loss.gradient", "L2Loss", "L2Loss.evaluate", "L2Loss.gradient", "Loss", "Loss.__call__", "Loss.evaluate", "Loss.gradient", "SVCLoss", "SVCLoss.evaluate", "Kuantum Sinir A\u011flar\u0131", "Sinirsel A\u011f S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 ve Regres\u00f6r\u00fc", "Kuantum \u00c7ekirdek Makine \u00d6\u011frenimi", "Rastgele Da\u011f\u0131t\u0131mlar\u0131 Y\u00fcklemek i\u00e7in qGAN\u2019lar", "Torch Connector and Hybrid QNNs", "Torch Runtime", "Pegasos Quantum Support Vector Classifier", "Quantum Kernel Training for Machine Learning Applications", "Saving, Loading Qiskit Machine Learning Models and Continuous Training", "Effective Dimension of Qiskit Neural Networks", "Makine \u00d6\u011frenimi E\u011fitselleri"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 244], "this": [0, 12, 15, 16, 17, 18, 24, 29, 30, 31, 32, 35, 36, 39, 48, 49, 50, 51, 52, 53, 54, 57, 71, 88, 90, 95, 101, 103, 104, 111, 113, 119, 123, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 148, 156, 158, 164, 165, 166, 167, 169, 171, 173, 176, 181, 182, 183, 185, 190, 213, 216, 220, 222, 225, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "is": [0, 7, 11, 12, 18, 23, 24, 25, 32, 35, 36, 39, 54, 57, 59, 60, 70, 71, 92, 95, 102, 103, 104, 111, 113, 119, 123, 124, 126, 131, 132, 133, 134, 135, 136, 137, 140, 141, 148, 149, 156, 160, 162, 165, 171, 173, 174, 175, 180, 181, 185, 186, 187, 188, 190, 196, 198, 201, 203, 214, 215, 217, 218, 220, 223, 224, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "the": [0, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 62, 67, 68, 70, 71, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 137, 138, 140, 141, 143, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242], "ther": [0, 32, 36, 54, 104, 156, 239, 240, 243], "an": [0, 11, 12, 15, 16, 17, 18, 24, 29, 30, 31, 32, 36, 48, 49, 50, 51, 52, 53, 57, 60, 81, 102, 104, 109, 113, 119, 123, 138, 148, 149, 152, 156, 162, 164, 165, 171, 186, 188, 190, 196, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243], "initial": [0, 32, 36, 85, 104, 106, 113, 119, 126, 148, 150, 196, 237, 238, 239, 242], "set": [0, 12, 14, 22, 25, 32, 46, 54, 60, 69, 71, 87, 92, 95, 119, 126, 137, 156, 160, 162, 164, 166, 169, 171, 181, 185, 186, 187, 188, 190, 196, 201, 203, 234, 235, 237, 238, 239, 240, 242], "of": [0, 2, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 62, 67, 70, 71, 81, 85, 87, 92, 95, 100, 102, 104, 105, 111, 113, 118, 119, 122, 123, 125, 126, 127, 130, 131, 137, 138, 141, 143, 146, 147, 148, 149, 156, 159, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 177, 178, 181, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 198, 203, 204, 205, 208, 214, 217, 218, 219, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "function": [0, 15, 16, 17, 20, 23, 26, 29, 30, 31, 32, 36, 44, 48, 49, 50, 51, 52, 53, 67, 70, 85, 92, 96, 104, 113, 119, 132, 133, 134, 135, 136, 137, 139, 148, 156, 160, 162, 186, 187, 188, 195, 197, 203, 205, 214, 217, 218, 219, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243], "her": [0, 137, 235, 237, 238, 240, 241, 242], "that": [0, 7, 8, 12, 25, 32, 36, 60, 95, 103, 104, 113, 119, 123, 126, 131, 156, 162, 164, 171, 181, 185, 190, 195, 219, 232, 235, 237, 238, 239, 240, 241, 242, 243], "will": [0, 92, 103, 126, 148, 149, 156, 164, 171, 196, 234, 235, 238, 239, 240, 241, 242, 243], "be": [0, 7, 10, 11, 12, 15, 16, 17, 25, 29, 30, 31, 32, 34, 35, 36, 38, 39, 43, 48, 49, 50, 51, 52, 53, 54, 57, 60, 66, 85, 88, 90, 92, 93, 95, 102, 103, 104, 109, 110, 111, 113, 117, 119, 123, 126, 127, 131, 137, 138, 141, 148, 149, 152, 156, 160, 162, 167, 171, 173, 181, 185, 190, 195, 196, 215, 216, 219, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243], "built": 0, "out": [0, 11, 113, 238, 239], "over": [0, 54, 149, 232, 240, 243], "t": [0, 20, 23, 28, 47, 67, 70, 85, 92, 100, 123, 156, 206, 236, 237, 238, 239, 240, 241, 242, 243], "at": [0, 71, 92, 113, 126, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "present": 0, "it": [0, 12, 32, 36, 54, 71, 104, 119, 123, 126, 138, 156, 160, 174, 175, 185, 186, 187, 188, 234, 235, 236, 238, 239, 240, 241, 243], "has": [0, 12, 32, 36, 54, 57, 60, 71, 81, 104, 113, 119, 141, 187, 196, 201, 203, 238, 239, 240, 242], "sample": [0, 4, 19, 23, 32, 35, 36, 39, 42, 44, 64, 65, 70, 95, 96, 104, 111, 131, 164, 171, 186, 213, 214, 217, 218, 222, 223, 224, 225, 226, 227, 230, 231, 234, 242, 243], "sets": [0, 83, 85, 164, 171, 240, 243], "can": [0, 7, 12, 32, 36, 92, 104, 113, 119, 123, 131, 137, 138, 141, 156, 160, 195, 203, 232, 235, 237, 238, 239, 240, 241, 242, 243], "usedi": [0, 2, 7, 10, 12, 15, 16, 17, 20, 23, 25, 26, 28, 29, 30, 31, 32, 36, 48, 49, 50, 51, 52, 53, 54, 59, 70, 71, 85, 88, 90, 92, 93, 95, 100, 103, 104, 109, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 137, 148, 152, 156, 160, 162, 164, 171, 181, 190, 191, 193, 194, 215, 216, 238, 239, 240, 241, 242, 243], "with": [0, 7, 10, 12, 23, 32, 33, 36, 37, 43, 47, 54, 60, 66, 70, 71, 81, 83, 92, 95, 104, 105, 123, 131, 137, 140, 141, 156, 158, 164, 166, 171, 173, 174, 176, 181, 182, 185, 190, 196, 198, 201, 203, 207, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 243], "classifiers": [0, 10, 235, 242, 243], "and": [0, 2, 8, 10, 12, 14, 15, 19, 23, 24, 25, 28, 32, 33, 35, 36, 37, 39, 47, 48, 54, 57, 60, 70, 71, 77, 80, 88, 90, 93, 95, 100, 101, 103, 104, 105, 111, 113, 117, 118, 119, 122, 131, 137, 138, 140, 141, 148, 149, 156, 162, 164, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 194, 196, 198, 201, 203, 205, 214, 215, 216, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 239, 240], "circuits": [0, 2, 7, 12, 113, 119, 137, 141, 156, 241], "in": [0, 7, 8, 11, 12, 15, 16, 17, 25, 29, 30, 31, 32, 33, 35, 36, 37, 39, 48, 49, 50, 51, 52, 53, 54, 58, 60, 71, 87, 88, 90, 92, 95, 104, 105, 109, 111, 113, 119, 123, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 148, 149, 152, 156, 158, 160, 162, 164, 165, 166, 171, 174, 175, 176, 182, 185, 186, 187, 188, 189, 190, 196, 205, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243], "applications": [0, 12], "qiskit_machine_learningi": [1, 5, 6, 123, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "for": [1, 4, 7, 12, 14, 15, 18, 20, 23, 24, 26, 28, 29, 32, 35, 36, 39, 42, 44, 45, 47, 48, 51, 54, 57, 60, 65, 68, 70, 71, 85, 86, 88, 90, 92, 96, 100, 101, 103, 104, 111, 113, 119, 123, 126, 137, 139, 140, 141, 146, 148, 149, 156, 162, 164, 165, 166, 169, 171, 174, 181, 185, 187, 190, 195, 196, 203, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 240, 242, 243], "da": [1, 11, 15, 19, 20, 23, 29, 32, 33, 34, 36, 37, 38, 40, 42, 47, 48, 51, 54, 57, 62, 64, 65, 67, 70, 71, 87, 92, 95, 104, 105, 110, 113, 117, 119, 123, 127, 131, 137, 140, 141, 149, 156, 158, 165, 173, 174, 175, 176, 181, 182, 185, 186, 187, 188, 190, 196, 201, 203, 220, 221, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243], "classification": [1, 12, 32, 35, 36, 39, 54, 60, 88, 104, 111, 113, 137, 203, 216, 232, 235, 236, 240, 241, 243], "quan": [1, 2, 7, 11, 12, 15, 18, 19, 23, 24, 25, 29, 32, 36, 48, 51, 54, 61, 70, 71, 78, 81, 85, 88, 89, 90, 91, 92, 93, 95, 98, 103, 104, 113, 115, 119, 126, 131, 137, 141, 144, 148, 149, 153, 154, 155, 156, 157, 160, 161, 164, 171, 173, 181, 184, 185, 190, 192, 195, 234, 235, 236, 237, 238, 239, 242, 243], "support": [1, 12, 54, 88, 90, 126, 137, 236], "vector": [1, 12, 32, 36, 40, 54, 62, 88, 90, 104, 123, 137, 140, 147, 169, 189, 215, 236], "regressor": [1, 12, 36, 90, 119, 235, 242], "a": [2, 7, 9, 10, 11, 12, 15, 18, 23, 24, 25, 28, 29, 32, 33, 35, 36, 37, 39, 48, 51, 54, 57, 59, 60, 70, 71, 79, 81, 85, 88, 90, 92, 95, 102, 103, 104, 105, 111, 113, 117, 119, 123, 126, 131, 137, 138, 141, 143, 146, 148, 156, 160, 162, 164, 165, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 195, 196, 198, 201, 203, 214, 217, 218, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243], "as": [2, 7, 12, 32, 36, 71, 93, 104, 113, 119, 123, 137, 148, 156, 166, 186, 187, 190, 196, 203, 205, 213, 222, 225, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "buildingi": [2, 12], "blocks": [2, 12], "algorithms": [2, 8, 12, 137, 235, 236, 237, 238, 240, 241, 242, 243], "from": [3, 11, 12, 25, 27, 32, 36, 54, 64, 71, 95, 98, 102, 103, 104, 113, 119, 123, 126, 137, 138, 148, 156, 162, 164, 171, 186, 187, 188, 190, 195, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qiskit": [3, 8, 9, 10, 11, 14, 126, 131, 164, 171, 185, 195, 234, 235, 236, 237, 238, 239, 240], "mach": [3, 4, 9, 10, 11, 14, 137, 185, 195, 234, 235, 236, 238, 239, 240, 243], "learningi": [3, 4, 9, 10, 11, 14, 71, 131, 137, 185, 195, 236, 237, 238, 239, 243], "to": [3, 7, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 66, 67, 70, 71, 85, 88, 90, 92, 93, 95, 96, 100, 102, 103, 104, 105, 109, 110, 113, 117, 119, 123, 126, 127, 131, 137, 138, 141, 148, 152, 156, 158, 160, 161, 162, 164, 167, 171, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 190, 195, 196, 198, 201, 203, 220, 221, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243], "other": [3, 12, 156, 173, 239, 242, 243], "frameworks": [3, 12], "suitap": 4, "problems": [4, 12], "kernels": [6, 12, 54, 148, 236, 240, 241], "parametrizedi": [7, 12, 92, 156, 181, 190, 234, 241, 243], "which": [7, 12, 25, 54, 57, 71, 85, 92, 93, 95, 123, 124, 137, 148, 219, 232, 239, 240, 241, 242, 243], "may": [7, 11, 102, 137, 156, 215, 219, 241, 242, 243], "definedi": [7, 23, 70, 95, 123, 148, 195, 203, 232, 238, 239, 243], "artificial": 7, "classical": [7, 12, 18, 19, 23, 24, 25, 28, 47, 70, 71, 95, 137, 237, 238, 239, 241, 243], "or": [7, 11, 12, 18, 23, 28, 32, 36, 42, 47, 57, 60, 64, 70, 71, 81, 85, 92, 95, 100, 102, 103, 104, 113, 126, 129, 131, 137, 138, 140, 141, 148, 156, 158, 160, 162, 164, 165, 171, 173, 176, 180, 182, 185, 195, 198, 203, 215, 219, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "furthermor": 7, "respect": [7, 60, 156, 158, 173, 176, 181, 182, 185, 190], "discriminativ": [7, 18, 71], "generativ": [7, 24, 71, 237], "task": [7, 137, 238, 239, 241], "example": [7, 12, 54, 88, 90, 148, 238, 239, 240], "qgan": [7, 92], "algorith": [7, 54, 58, 71, 81, 92, 113, 137, 171, 236, 237, 238, 240], "see": [7, 32, 36, 123, 162, 232, 238, 239, 240, 241, 242, 243], "also": [7, 12, 126, 238, 239, 240, 241, 242, 243], "torchconnector": [7, 11, 12, 156, 181, 185, 190, 238, 239, 242], "allows": [7, 12, 32, 36, 104, 113, 119, 234, 238, 239], "use": [7, 11, 12, 25, 32, 36, 54, 88, 90, 95, 104, 113, 119, 137, 140, 195, 198, 203, 237, 238, 241, 242, 243], "thes": [7, 71, 156, 238, 243], "code": [7, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "writ": 7, "pytorch": [7, 11, 12, 43, 62, 66, 126, 195, 196, 201, 203, 237, 239], "programs": 8, "embedi": [8, 238], "algorithmi\u00e7": 8, "interfaces": [8, 240], "facilita": 8, "usage": 8, "scripts": 8, "cloudu": [8, 103, 238, 242], "collection": [9, 10], "providedi": [9, 10, 12, 81, 141, 156, 160, 162, 196, 234, 243], "by": [9, 10, 12, 14, 15, 29, 48, 51, 95, 103, 118, 122, 149, 156, 158, 160, 164, 171, 173, 176, 181, 182, 185, 190, 194, 195, 232, 237, 238, 239, 240, 241, 242, 243], "commo": [10, 243], "regressors": [10, 235], "ve": [11, 234, 236, 238], "desteklene": 11, "ortam": 11, "platform": 11, "i\u00e7": [11, 234, 235, 236], "se\u00e7enek": 11, "ayr\u0131nt\u0131land\u0131ra": 11, "ke": 11, "gettingi": [11, 12], "startedi": [11, 12], "ola": [11, 234, 235, 237], "paket": 11, "\u00f6": [11, 234, 236], "p": [11, 123, 237], "bakmal": 11, "ard\u0131": [11, 236, 237], "e": [11, 12, 15, 19, 29, 32, 33, 36, 37, 42, 51, 64, 71, 92, 104, 105, 113, 119, 126, 156, 160, 174, 222, 225, 234, 235, 236, 237, 239, 243], "\u00f6zg\u00fc": 11, "ek": 11, "odaklana": 11, "bura": [11, 235, 236, 237], "bilgi": [11, 237], "takip": [11, 235, 236], "edilebilir": [11, 234, 236], "mak": [11, 234], "\u00f6\u011frenmes": [11, 234], "ba\u011f\u0131ml\u0131": 11, "kod": [11, 236], "veya": [11, 234, 235, 236], "destek": [11, 234], "progra": [11, 232, 235], "lar": 11, "\u0131n": [11, 234, 235, 237], "varsay\u0131la": [11, 234, 235, 237], "olarak": [11, 234, 235, 236, 237], "kurulmad\u0131k": 11, "ya": [11, 234, 237], "kurulamad\u0131k": 11, "opsiyonel": 11, "birtak": 11, "fonksiyon": [11, 235, 237], "sahip": [11, 236], "bun": [11, 234, 236], "spar": [11, 12, 126, 156, 173, 185, 189, 234, 238, 242, 243], "tir": 11, "dah": [11, 234, 235, 236, 237], "faz": [11, 236, 237], "bakabilir": 11, "yerel": 11, "ba\u015flatma": 11, "en": [11, 235], "kolay": 11, "yol": 11, "b\u00f6l\u00fcm": [11, 236], "ederek": [11, 236], "ba\u015flamak": 11, "i": [11, 12, 19, 32, 36, 42, 64, 71, 92, 104, 119, 126, 131, 148, 174, 213, 222, 225, 232, 234, 235, 236, 237, 239, 241, 243], "kurduk": 11, "sanal": 11, "ekstra": 11, "g\u00f6rselle\u015ftirme": 11, "nas\u0131l": [11, 235, 237], "kurulduk": 11, "benzer": [11, 235], "\u015fekil": [11, 234, 235, 236], "\u00f6\u011fren": 11, "ni": 11, "liste": [11, 234], "ekleme": 11, "yeterli": 11, "yani": [11, 234, 237], "pip": 11, "install": [11, 237], "bir": [11, 234, 235, 236, 237], "zsh": 11, "kullan\u0131c\u0131s": 11, "macos": 11, "un": [11, 235], "ye": [11, 235], "s\u00fcr\u00fcm": 11, "kabuk": 11, "t\u0131rnak": 11, "koyma": 11, "gerekecek": 11, "belirtmek": 11, "fay": 11, "var": [11, 237], "kaynak": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 77, 81, 83, 84, 85, 87, 88, 90, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 110, 111, 113, 117, 119, 123, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 148, 149, 154, 156, 162, 164, 165, 166, 167, 169, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 195, 196, 201, 203, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "y\u00fcklemek": [11, 234], "python": [11, 238, 239, 241, 242, 243], "diz": 11, "pypi": 11, "depos": 11, "s\u00fcr": 11, "kullanmak": 11, "yer": [11, 234, 237], "geli\u015ftirilmek": 11, "son": [11, 237], "g\u00fcncellene": 11, "eri\u015fme": 11, "sa\u011f": [11, 234], "bu": [11, 234, 235, 236, 237, 238], "siz": [11, 60, 71, 87, 165, 167, 237, 238, 239, 240, 241, 243], "kodu": 11, "verimli": [11, 234], "incele": 11, "geni\u015fletme": 11, "imka": 11, "verecek": 11, "olduk": [11, 234, 236, 237], "de\u011fi\u015fiklik": 11, "de\u011fi\u015ftiril": 11, "\u00f6zellik": [11, 235, 236, 237], "gerektirebilecek": 11, "y\u00fckle": 11, "talimat": 11, "izlemel": 11, "installingi": 11, "source": [11, 12, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "geli\u015ftirme": 11, "kullanarak": [11, 236], "\u00f6\u011frenim": [11, 234, 236], "kurma": 11, "depo": [11, 234], "klonlay": 11, "git": 11, "clone": 11, "https": [11, 232, 237, 238, 240], "githup": [11, 237], "com": [11, 237], "klonlamak": 11, "adl\u0131": 11, "klas\u00f6r": 11, "olu\u015fturur": 11, "cd": 11, "e\u011fer": 11, "test": [11, 35, 39, 111, 236, 240, 242, 243], "tiftikle": 11, "kontrol": 11, "yapmak": 11, "istiyor": 11, "geli\u015ftiri\u00e7": 11, "gereksinim": 11, "y\u00fckley": 11, "r": [11, 20, 23, 28, 35, 39, 47, 67, 70, 85, 92, 100, 111, 235, 236, 237, 238, 239, 240, 241, 242], "requirements": 11, "dev": 11, "txt": [11, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "d\u00fczenlenebilir": 11, "modu": 11, "proje": 11, "yap\u0131la": 11, "uygulanmas": 11, "yeni": [11, 236], "y\u00fcklenmes": 11, "gerekmedik": 11, "anlam": 11, "geliyor": 11, "\u015fun": 11, "yapabilir": [11, 236], "installedi": 11, "either": [11, 12, 32, 36, 104, 138, 203, 239, 242], "usingi": [11, 12, 34, 38, 110, 119, 137, 140, 141, 156, 181, 185, 190, 196, 198, 201, 203, 214, 217, 218, 223, 224, 226, 227, 230, 231, 236, 238, 239, 240, 241, 242, 243], "command\u0131": 11, "torch": [11, 64, 65, 67, 126, 130, 195, 196, 197, 199, 200, 201, 203, 207, 208, 209, 242], "package": [11, 238, 240], "refer": [11, 242], "when": [11, 32, 36, 54, 57, 104, 113, 119, 123, 137, 156, 181, 185, 190, 235, 238, 241, 242, 243], "facilitates": 11, "its": [11, 88, 90, 156, 167, 185, 189, 241], "computedi": [11, 12, 32, 36, 57, 60, 104, 113, 119, 123, 158, 165, 176, 182, 214, 217, 218, 223, 224, 226, 227, 230, 231, 243], "networks": [11, 12, 18, 24, 47, 71, 164, 166, 171, 173, 185, 237, 238], "kurmak": 11, "komut": 11, "kullan\u0131larak": [11, 236], "kurulabilir": 11, "y\u00fcklenmek": 11, "tens\u00f6r": 11, "kullan\u0131m": 11, "m\u00fcmk": [11, 234], "k\u0131lacak": 11, "div": 11, "into": [11, 12, 123, 219, 238, 240, 241, 242, 243], "tutorials": [11, 12, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "find": [11, 137, 239], "about": [11, 241, 243], "introduces": [12, 238], "fundamental": 12, "computational": 12, "such": [12, 137, 158, 176, 182, 205, 238, 243], "neural": [12, 15, 18, 19, 24, 25, 29, 32, 36, 48, 51, 104, 107, 108, 119, 126, 128, 156, 158, 160, 164, 166, 171, 173, 174, 175, 176, 181, 182, 185, 186, 188, 190, 235, 237, 238, 242], "different": [12, 25, 95, 238, 243], "includingi": [12, 103], "regression": [12, 35, 36, 39, 90, 111, 137, 203, 235, 236], "on": [12, 32, 36, 40, 60, 62, 104, 113, 119, 137, 156, 186, 187, 188, 201, 218, 221, 224, 227, 231, 233, 234, 237, 238, 239, 241, 242, 243], "one": [12, 23, 28, 32, 36, 47, 51, 70, 100, 104, 113, 117, 123, 131, 141, 174, 175, 186, 187, 188, 195, 196, 203, 215, 238, 239, 240, 242, 243], "hand": [12, 243], "design": 12, "very": [12, 242], "easy": 12, "users": [12, 137, 203, 239], "rapidly": [12, 241], "prototype": 12, "first": [12, 34, 38, 110, 131, 140, 238, 239, 242, 243], "model": [12, 21, 33, 34, 35, 37, 38, 39, 43, 45, 57, 60, 66, 68, 71, 102, 103, 104, 105, 110, 111, 117, 127, 166, 169, 195, 196, 201, 203, 205, 208, 214, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 235, 240, 243], "without": [12, 156, 238], "deep": 12, "computingi": [12, 48, 218, 219, 224, 227, 228, 231], "knowledge": 12, "flexip": 12, "easily": 12, "extendi": 12, "cuttingi": 12, "edge": 12, "research": 12, "provides": [12, 48, 101, 148, 232, 239], "quantumkernel": [12, 54, 57, 60, 61, 88, 89, 90, 91, 148, 149, 153, 155, 221, 233, 236, 240, 241], "class": [12, 14, 15, 18, 24, 29, 32, 36, 40, 48, 51, 54, 60, 62, 71, 88, 90, 92, 101, 102, 104, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 196, 205, 213, 216, 219, 222, 225, 228, 232, 236, 238, 239, 242, 243], "directly": [12, 174, 175, 186, 187, 188, 238, 241, 243], "compute": [12, 19, 65, 156, 164, 171, 173, 181, 185, 190, 220, 229, 238], "kernel": [12, 54, 57, 59, 60, 61, 88, 89, 90, 91, 123, 137, 141, 148, 149, 153, 154, 155, 219, 221, 232, 233, 236, 240], "matrices": [12, 234, 236], "give": [12, 16, 17, 19, 25, 30, 31, 32, 35, 36, 39, 49, 50, 52, 53, 57, 71, 92, 104, 111, 113, 119, 126, 137, 140, 141, 156, 162, 166, 190, 232, 238, 243], "datasets": [12, 236, 238, 240, 241, 242], "passedi": [12, 54, 57, 148, 156, 165, 201, 235, 239, 241], "classifier": [12, 32, 54, 88, 113, 117, 235, 242, 243], "qsvc": [12, 236, 240, 241], "qsvr": 12, "quickly": 12, "start": [12, 32, 36, 104, 112, 113, 119, 126, 196, 238, 239, 242, 243], "solvingi": [12, 232], "many": [12, 137, 219, 243], "existingi": [12, 138], "basedi": [12, 40, 62, 123, 148, 156, 234, 238, 239, 240, 243], "establishedi": 12, "defines": [12, 104], "generi\u00e7": 12, "interfa\u00e7": [12, 32, 36, 104], "implementedi": [12, 19, 20, 21, 22, 23, 25, 27, 28, 123, 173], "multip": [12, 238, 242], "implementations": 12, "are": [12, 32, 36, 71, 103, 104, 119, 123, 126, 137, 138, 141, 148, 156, 158, 176, 182, 190, 196, 214, 217, 218, 219, 223, 224, 226, 227, 230, 231, 232, 234, 238, 239, 240, 241, 242, 243], "readily": 12, "opflowqn": [12, 190, 243], "twolayerqn": [12, 119, 235, 238, 239, 243], "circuitqn": [12, 113, 239], "comp": [12, 234, 243], "mechanical": 12, "observables": 12, "constructedi": [12, 239], "s": [12, 14, 23, 28, 32, 33, 36, 37, 40, 47, 62, 70, 71, 92, 96, 100, 104, 105, 113, 119, 131, 166, 169, 181, 185, 196, 235, 236, 237, 238, 239, 240, 241, 242, 243], "circuit": [12, 25, 85, 92, 93, 95, 100, 123, 125, 131, 137, 140, 141, 143, 146, 156, 161, 190, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "library": [12, 123, 131, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qnn": [12, 164, 169, 171, 183, 234, 235, 239, 242], "output": [12, 15, 20, 25, 29, 32, 36, 40, 42, 44, 51, 62, 64, 67, 92, 96, 104, 113, 123, 126, 129, 156, 162, 166, 169, 173, 179, 180, 185, 190, 218, 224, 227, 231, 234, 235, 238, 239, 241, 243], "expectedi": [12, 32, 36, 102, 104, 181, 185, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 240], "value": [12, 17, 31, 32, 36, 48, 50, 53, 57, 71, 104, 113, 119, 138, 165, 181, 187, 190, 196, 205, 221, 233, 234, 235, 237, 238, 239, 241, 242, 243], "observap": [12, 119, 190, 234], "special": 12, "case": [12, 32, 33, 35, 36, 37, 39, 54, 60, 104, 105, 111, 156, 162, 174, 175, 185, 186, 187, 188, 190, 234, 238, 240, 242, 243], "takes": [12, 238, 242], "input": [12, 15, 19, 25, 29, 33, 34, 37, 38, 40, 42, 48, 51, 62, 64, 71, 85, 92, 105, 110, 117, 148, 149, 156, 158, 159, 164, 168, 169, 171, 173, 174, 175, 176, 177, 181, 182, 185, 186, 187, 188, 190, 234, 238, 239, 241, 242, 243], "featur": [12, 54, 95, 113, 116, 118, 119, 121, 122, 123, 124, 131, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 190, 193, 194, 234, 235, 236, 238, 239, 240, 242, 243], "map": [12, 113, 116, 118, 119, 121, 122, 131, 137, 138, 140, 141, 142, 143, 145, 146, 148, 190, 193, 194, 234, 235, 237, 238, 239, 243], "ansatz": [12, 113, 118, 119, 122, 190, 194, 234, 235, 237, 238, 239, 242, 243], "measurements": 12, "batch": [12, 23, 47, 70, 71, 87, 137, 156, 185, 189, 237, 238, 239], "samples": [12, 35, 39, 60, 71, 95, 111, 131, 149, 156, 164, 168, 169, 170, 171, 185, 186, 188, 189, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243], "list": [12, 25, 71, 73, 75, 80, 88, 90, 92, 93, 98, 143, 156, 159, 163, 165, 174, 175, 181, 186, 187, 188, 196, 211, 212, 237, 239, 241], "bitstrings": [12, 235, 243], "measuredi": [12, 113, 119, 156, 162, 190, 234, 243], "qubits": [12, 71, 92, 113, 118, 119, 122, 123, 125, 131, 137, 148, 190, 194, 234, 237, 240, 243], "resultingi": [12, 32, 36, 104, 187, 237, 238], "samplingi": [12, 156, 162, 169, 185, 234], "probabilities": [12, 32, 156, 185, 189, 234, 238], "each": [12, 32, 36, 44, 104, 113, 119, 165, 187, 205, 213, 214, 217, 218, 222, 223, 224, 225, 226, 227, 230, 231, 235, 239, 240, 241, 242, 243], "bitstringi": [12, 234], "former": 12, "interest": 12, "distributions": [12, 71, 237], "whil": [12, 156, 185, 238, 239, 241, 243], "latter": 12, "finds": 12, "application": [12, 238, 241], "g": [12, 15, 29, 32, 33, 37, 51, 92, 105, 113, 156, 160, 235, 237, 238, 239, 242], "post": [12, 234], "processingi": 12, "step": [12, 23, 28, 47, 70, 92, 100, 196, 240, 241, 242, 243], "interpret": [12, 32, 156, 162, 186, 187, 188, 234, 235, 238, 243], "particu": [12, 238, 243], "context": [12, 239], "translatingi": 12, "classes": [12, 15, 29, 34, 38, 51, 110, 196, 213, 235, 239, 243], "inclu": [12, 140, 238], "functionality": 12, "evalua": [12, 156, 161, 181, 184, 190, 220, 229, 235, 236, 238, 241, 242, 243], "them": [12, 95, 238, 242, 243], "well": [12, 32, 36, 104, 113, 119, 238, 239, 242, 243], "correspondingi": [12, 32, 36, 103, 104, 156, 162, 203, 238, 239, 242, 243], "gradients": [12, 16, 30, 48, 49, 52, 123, 156, 158, 166, 173, 174, 176, 181, 182, 185, 187, 190, 238, 243], "important": [12, 239, 242], "efficient": 12, "trainingi": [12, 15, 23, 28, 29, 32, 34, 36, 38, 47, 48, 51, 57, 60, 70, 71, 85, 92, 95, 96, 100, 104, 109, 110, 113, 119, 123, 126, 131, 148, 149, 152, 195, 196, 205, 219, 232, 236, 237, 240, 243], "train": [12, 57, 95, 148, 149, 196, 211, 236, 240], "variety": 12, "neuralnetworkclassifier": [12, 113, 235, 243], "neuralnetworkregressor": [12, 119, 235], "both": [12, 243], "take": [12, 219, 234, 238, 241, 242, 243], "then": [12, 32, 36, 71, 102, 104, 126, 131, 137, 141, 148, 156, 160, 165, 238, 239, 240, 241, 242, 243], "allow": 12, "two": [12, 32, 36, 57, 104, 113, 119, 137, 141, 190, 234, 235, 239, 240, 241, 242, 243], "convenie": 12, "variational": [12, 85, 92, 113, 235, 242, 243], "vqc": [12, 242, 243], "vqr": 12, "just": [12, 238], "construct": [12, 93, 119, 131, 140, 141, 234, 235, 238, 239, 242, 243], "underlyingi": [12, 71, 107, 108, 113, 115, 119, 126, 128, 130, 148, 157, 183, 192, 242], "automatically": [12, 156], "addition": [12, 131], "models": [12, 101, 238, 239, 240, 243], "integra": 12, "all": [12, 54, 103, 123, 131, 137, 156, 185, 196, 201, 203, 235, 237, 238, 240, 242, 243], "our": [12, 235, 238, 240, 242, 243], "ope": 12, "thanks": 12, "gradient": [12, 54, 65, 85, 92, 123, 126, 148, 156, 169, 181, 185, 190, 234, 238, 240], "framework": 12, "includes": [12, 54, 57], "automati\u00e7": [12, 238], "differentiation": [12, 238], "overall": [12, 156, 239], "duringi": [12, 32, 36, 104, 113, 119, 126, 196, 219, 238, 239, 240, 241, 243], "backpropagation": [12, 238], "account": [12, 219], "too": [12, 243], "connectors": [12, 238, 239], "packages": 12, "future": 12, "exception": [14, 18, 24, 113, 190], "messag\u0131": 14, "errors": 14, "returnedi": [14, 126, 149, 160, 196, 234, 239], "module": [14, 18, 24, 126, 185, 195, 199, 238, 239], "error": [14, 57, 119, 195, 198, 222, 225, 232, 238, 243], "with_traceback": 14, "tb": 14, "self": [14, 25, 33, 37, 57, 95, 105, 117, 140, 141, 162, 198, 238, 239, 241], "__traceback__": 14, "return": [14, 32, 36, 79, 93, 104, 124, 126, 131, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 197, 199, 200, 202, 204, 235, 238, 239, 241, 242, 243], "x": [15, 19, 20, 29, 33, 34, 35, 37, 38, 39, 42, 44, 48, 51, 57, 60, 64, 65, 67, 96, 105, 110, 111, 117, 123, 131, 137, 140, 141, 234, 235, 236, 237, 238, 239, 241, 243], "y": [15, 20, 29, 33, 35, 37, 39, 44, 48, 51, 57, 67, 105, 111, 117, 137, 140, 235, 236, 238, 239, 243], "neural_network": [15, 29, 32, 36, 48, 51, 104, 126, 235, 242, 243], "loss": [15, 23, 28, 29, 32, 36, 47, 48, 51, 70, 73, 75, 85, 92, 100, 104, 113, 119, 148, 149, 195, 197, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 235, 237, 239, 241], "bases": [15, 18, 24, 29, 32, 36, 40, 48, 51, 54, 62, 71, 88, 90, 92, 101, 104, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 205, 213, 216, 219, 222, 225, 228, 232], "objectivefunction": [15, 29, 51], "objectiv": [15, 16, 29, 30, 32, 36, 48, 49, 51, 52, 104, 113, 119, 234, 235, 238, 242, 243], "binary": [15, 32, 36, 104, 216, 232, 238, 239, 241, 243], "representation": [15, 29, 51, 71, 92, 240, 242], "1": [15, 29, 32, 36, 40, 51, 54, 56, 62, 65, 71, 104, 113, 123, 126, 131, 149, 156, 164, 171, 214, 217, 223, 226, 230, 235, 236, 237, 240, 241], "parametre": [15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 84, 85, 88, 90, 92, 93, 95, 96, 100, 102, 103, 104, 105, 110, 111, 113, 117, 119, 123, 126, 127, 131, 137, 138, 140, 141, 148, 149, 156, 162, 164, 165, 166, 167, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 195, 196, 201, 203, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 237], "ndarray": [15, 16, 17, 20, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 47, 48, 49, 50, 51, 52, 53, 57, 60, 64, 65, 71, 85, 92, 95, 96, 98, 104, 105, 106, 110, 111, 113, 117, 119, 126, 131, 141, 149, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 186, 187, 188, 214, 215, 217, 218, 221, 223, 224, 226, 227, 229, 230, 231, 233], "target": [15, 29, 32, 33, 36, 37, 44, 48, 51, 71, 77, 80, 92, 104, 105, 113, 117, 119, 149, 203, 213, 214, 215, 217, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 237, 238, 239], "values": [15, 27, 29, 32, 33, 35, 36, 37, 39, 48, 51, 60, 71, 92, 98, 104, 105, 111, 117, 137, 138, 139, 149, 173, 185, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243], "neuralnetwork": [15, 29, 32, 36, 48, 51, 104, 126, 128, 164, 171, 181, 185, 235, 238], "insta": [15, 25, 29, 32, 36, 48, 51, 54, 57, 60, 71, 78, 81, 95, 102, 103, 104, 113, 119, 137, 141, 144, 148, 156, 160, 161, 181, 184, 190, 196, 234, 237, 238, 239, 242, 243], "network": [15, 19, 23, 25, 28, 29, 32, 33, 34, 36, 37, 38, 42, 48, 51, 70, 71, 104, 105, 107, 108, 110, 119, 126, 128, 130, 156, 158, 160, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 181, 182, 185, 186, 187, 188, 189, 190, 235, 237, 238, 242, 243], "methods": [15, 18, 24, 29, 32, 36, 40, 48, 51, 54, 62, 71, 88, 90, 92, 101, 104, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 205, 213, 216, 219, 222, 225, 228, 232, 239], "weights": [16, 17, 20, 23, 30, 31, 32, 35, 36, 39, 44, 47, 49, 50, 52, 53, 54, 67, 70, 96, 104, 111, 113, 119, 126, 130, 156, 163, 164, 171, 173, 174, 175, 178, 181, 185, 186, 187, 188, 234, 235, 238, 239, 240, 242, 243], "computes": [16, 17, 30, 31, 49, 50, 52, 53, 164, 165, 166, 167, 169, 171, 213, 216, 222, 225], "array": [16, 17, 30, 31, 32, 36, 47, 49, 50, 52, 53, 60, 92, 95, 100, 104, 113, 119, 123, 141, 149, 156, 164, 165, 166, 167, 171, 173, 174, 175, 185, 186, 187, 188, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243], "d\u00f6n\u00fc\u015f": [16, 17, 20, 23, 25, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 75, 77, 78, 80, 81, 83, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 233, 237], "t\u00fcr": [16, 17, 23, 25, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 47, 49, 50, 52, 53, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 75, 77, 78, 80, 81, 83, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 233, 235], "float": [17, 31, 32, 35, 36, 39, 44, 50, 53, 54, 65, 71, 73, 75, 77, 80, 92, 96, 100, 104, 111, 113, 119, 146, 148, 150, 174, 175, 186, 187, 188, 203, 206, 210, 211, 212, 220, 221, 233, 239], "abc": [18, 24, 173, 219, 228], "base": [18, 24, 104, 219, 228, 239], "methodu": [18, 24, 102, 158, 165, 166, 167, 169, 176, 182, 214, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 240, 241, 242, 243], "shouldu": [18, 24, 25, 35, 39, 54, 57, 60, 93, 95, 111, 126, 137, 216, 238, 239, 240, 242, 243], "initializ": [18, 24, 84, 85, 123, 237, 238, 241], "but": [18, 24, 238, 242, 243], "rai": [18, 24, 113, 190], "if": [18, 23, 24, 25, 32, 36, 54, 64, 70, 71, 81, 92, 95, 102, 103, 104, 113, 119, 126, 131, 137, 138, 140, 141, 148, 156, 160, 162, 165, 189, 190, 196, 201, 203, 235, 238, 239, 240, 242, 243], "requiredi": [18, 24, 117, 156, 196, 201, 203, 234, 242, 243], "component": [18, 24, 236], "not": [18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 36, 54, 57, 70, 81, 92, 95, 102, 104, 113, 123, 126, 129, 131, 137, 140, 141, 148, 149, 156, 158, 160, 162, 173, 176, 180, 182, 185, 190, 195, 196, 198, 201, 203, 214, 215, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 237, 238, 240, 242, 243], "availap": [18, 24, 148, 203, 238, 239, 242, 243], "abstract": [19, 20, 21, 22, 23, 25, 26, 27, 28, 48, 49, 50, 105, 110, 111, 173, 185, 214, 217, 218, 219, 221, 223, 224, 226, 227, 228, 230, 231, 233], "apply": [19, 25, 123, 131, 238, 242], "respectiv": [19, 25], "label": [19, 42, 44, 64, 67, 96, 113, 236, 237, 240, 241, 242, 243], "discriminator": [19, 21, 23, 40, 41, 42, 43, 44, 45, 47, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 84, 95, 96, 237], "hareke": [19, 20, 21, 22, 23, 25, 27, 28, 32, 33, 34, 36, 37, 38, 54, 57, 60, 71, 81, 85, 87, 92, 102, 104, 105, 110, 113, 119, 131, 138, 140, 141, 148, 149, 156, 173, 185, 190, 196, 201, 203, 214, 217, 218, 223, 224, 226, 227, 230, 231], "ge\u00e7irir": [19, 20, 21, 22, 23, 25, 27, 28, 32, 33, 34, 36, 37, 38, 54, 57, 60, 71, 81, 85, 87, 92, 102, 104, 105, 110, 113, 119, 131, 138, 140, 141, 148, 149, 156, 173, 185, 190, 196, 201, 203, 214, 217, 218, 223, 224, 226, 227, 230, 231], "notimplementederror": [19, 20, 21, 22, 23, 25, 27, 28, 57], "none": [20, 23, 25, 28, 32, 35, 36, 39, 44, 47, 54, 57, 64, 67, 70, 71, 81, 83, 84, 85, 88, 90, 92, 93, 95, 100, 103, 104, 111, 113, 119, 126, 127, 137, 138, 139, 140, 141, 147, 148, 156, 160, 162, 174, 175, 181, 185, 187, 190, 195, 196, 234, 235, 237, 238, 239, 241, 242], "optimization": [20, 26, 32, 36, 65, 71, 104, 113, 119, 238, 240, 241, 242], "iterap": [20, 23, 70, 137, 138], "point": [20, 32, 36, 67, 104, 106, 113, 119, 140, 148, 150, 240, 241, 242], "optional": [20, 23, 25, 32, 35, 36, 39, 44, 54, 57, 64, 70, 71, 78, 85, 88, 90, 92, 95, 104, 111, 113, 119, 123, 126, 127, 129, 137, 140, 141, 146, 147, 148, 150, 155, 156, 160, 162, 181, 190, 195, 196, 202, 237, 238, 243], "w": [20, 23, 28, 47, 67, 70, 85, 92, 100, 236, 237, 240, 241, 242], "generatedi": [20, 47, 65, 67, 95, 219, 238, 239, 240, 241, 242, 243], "points": [20, 67, 131, 235, 238, 239, 242], "snapshot_dir": [21, 45, 68, 71, 92, 237], "save": [21, 45, 68, 92, 238], "str": [21, 32, 36, 43, 45, 66, 68, 70, 71, 92, 102, 103, 104, 113, 119, 148, 203, 207, 208, 211, 212], "directory": [21, 45, 68, 71, 92, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "seedi": [22, 46, 54, 69, 71, 196, 236, 237, 238, 239, 242, 243], "int": [22, 23, 25, 28, 40, 46, 47, 54, 58, 62, 69, 70, 71, 92, 95, 99, 100, 113, 118, 119, 122, 123, 124, 125, 131, 137, 156, 160, 162, 164, 165, 171, 173, 177, 178, 179, 185, 190, 194, 195, 196, 204, 237], "penalty": [23, 47, 65, 70, 232], "fal": [23, 32, 36, 42, 47, 54, 64, 70, 104, 113, 119, 131, 132, 133, 134, 135, 136, 140, 156, 162, 173, 181, 185, 189, 190, 195, 234, 236, 238, 239, 240, 241, 242, 243], "quantum_insta": [23, 25, 28, 47, 54, 70, 71, 81, 95, 100, 113, 119, 137, 148, 156, 181, 190, 234, 235, 236, 237, 238, 240, 241, 242, 243], "shots": [23, 25, 28, 47, 70, 95, 100, 195, 198, 234, 235, 236, 237, 242], "perform": [23, 28, 47, 60, 70, 100, 141, 201, 238, 241, 243], "parameters": [23, 25, 28, 32, 36, 47, 70, 71, 85, 92, 93, 95, 96, 100, 103, 104, 113, 119, 123, 137, 138, 140, 141, 143, 147, 148, 149, 156, 159, 163, 164, 171, 172, 181, 195, 196, 219, 232, 234, 235, 237, 238, 239, 240, 241, 243], "bool": [23, 32, 36, 42, 47, 54, 59, 64, 70, 104, 112, 113, 119, 126, 129, 131, 137, 140, 156, 158, 173, 176, 180, 181, 182, 185, 189, 190, 195, 198], "indica": [23, 70, 164, 171, 238, 239], "whether": [23, 54, 59, 70, 126, 129, 131, 156, 158, 173, 176, 180, 181, 182, 185, 190, 195, 198, 241], "appliedi": [23, 32, 36, 70, 104, 240, 242], "ignoredi": [23, 28, 47, 70, 140], "no": [23, 54, 70, 71, 148, 149, 156, 196, 240], "quantuminsta": [23, 25, 28, 47, 70, 71, 78, 81, 95, 100, 113, 119, 137, 144, 156, 161, 181, 184, 190, 234, 235, 236, 237, 238, 239, 240, 242, 243], "run": [23, 25, 28, 70, 93, 95, 100, 237, 238, 240, 243], "number": [23, 25, 28, 47, 54, 58, 70, 71, 87, 95, 100, 113, 118, 119, 122, 123, 125, 131, 137, 138, 141, 149, 164, 171, 173, 177, 178, 185, 190, 194, 195, 198, 203, 204, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243], "hardware": [23, 28, 47, 70, 100, 238, 242], "qasm": [23, 28, 47, 70, 100, 241, 242], "execution": [23, 28, 47, 70, 100, 196, 201, 203, 206, 239], "updatedi": [23, 28, 47, 70, 100, 196, 239], "dict": [23, 28, 47, 70, 81, 93, 100, 138, 186, 187, 208, 211, 212], "attributes": [24, 32, 36, 40, 54, 62, 71, 88, 90, 92, 104, 113, 119, 123, 126, 137, 148, 154, 156, 164, 171, 173, 181, 185, 190, 195, 205], "params": [25, 85, 92, 93, 95, 221, 233], "get": [25, 27, 41, 42, 63, 64, 77, 94, 95, 97, 98, 99, 238, 242, 243], "generator": [25, 27, 28, 54, 71, 75, 85, 92, 93, 95, 96, 98, 100, 237, 243], "_params": [25, 95], "tuple": [25, 47, 131, 156, 160, 162, 173, 174, 179, 185, 187, 234], "property": [27, 41, 58, 59, 61, 63, 72, 73, 74, 75, 76, 78, 79, 80, 82, 86, 89, 91, 94, 97, 98, 99, 106, 107, 108, 109, 112, 114, 115, 116, 118, 120, 121, 122, 124, 125, 128, 129, 130, 142, 144, 145, 146, 147, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 168, 170, 172, 176, 177, 178, 179, 180, 182, 183, 184, 189, 191, 192, 193, 194, 197, 198, 199, 200, 202, 204, 206, 207, 208, 209, 210, 211, 212, 239, 242], "parameter": [27, 54, 57, 92, 98, 123, 137, 138, 140, 143, 146, 147, 156, 164, 171, 173, 181, 185, 187, 190, 232, 234, 235, 238, 239, 240, 241, 242, 243], "multiclass": 29, "2": [29, 35, 39, 65, 71, 92, 111, 119, 123, 124, 131, 148, 156, 225, 235, 236, 237, 240, 241], "etc": 29, "squared_error": [32, 36, 104, 119, 235], "one_hot": [32, 131, 132, 133, 134, 135, 136, 236, 241], "optimizer": [32, 36, 85, 92, 104, 113, 119, 148, 195, 235, 239, 242, 243], "warm_start": [32, 36, 104, 113, 119, 242], "initial_point": [32, 36, 104, 113, 119, 148, 241, 242, 243], "callback": [32, 36, 104, 113, 119, 235, 239, 242, 243], "trainablemodel": [32, 36], "classifiermix": 32, "implements": [32, 36, 54, 240], "scikit": [32, 36, 104, 236, 240, 242], "learn": [32, 36, 71, 104, 236, 240, 242], "compatip": [32, 36, 195, 240], "extends": [32, 36, 88, 90], "more": [32, 36, 57, 88, 90, 162, 238, 239, 241, 242, 243], "details": [32, 36, 162, 232, 242, 243], "dimensional": [32, 36, 104, 137, 141, 238], "output_shape": [32, 36, 104, 156, 162, 173, 174, 175, 185, 188, 234, 235, 238, 243], "only": [32, 36, 104, 113, 123, 126, 131, 137, 140, 141, 156, 162, 219, 238, 242, 243], "multi": [32, 36, 104, 113], "assumedi": [32, 36, 104], "result": [32, 36, 104, 127, 154, 156, 166, 169, 174, 175, 196, 201, 203, 205, 235, 237, 239, 243], "probability": [32, 36, 71, 92, 96, 104, 156, 185, 187, 238], "distribution": [32, 36, 71, 77, 80, 92, 104, 164, 171, 237, 243], "entries": [32, 36, 104], "non": [32, 36, 104, 234, 243], "negativ": [32, 36, 104, 234], "sum": [32, 36, 104, 235, 237, 238, 239, 242, 243], "up": [32, 36, 104, 238, 239, 242], "options": [32, 36, 104, 241], "hot": [32, 36, 51, 104, 113, 117, 131, 215, 242], "encodingi": [32, 36, 51, 104, 215, 240], "consideredi": [32, 36, 104], "whole": [32, 36, 104, 242], "otherwis": [32, 36, 104, 126, 140, 162, 239, 242], "entry": [32, 36, 104, 241], "individual": [32, 36, 104], "index": [32, 36, 104, 234, 239], "weightedi": [32, 36, 104, 232], "union": [32, 36, 64, 71, 81, 85, 92, 98, 104, 113, 119, 126, 131, 137, 147, 156, 160, 162, 164, 165, 171, 173, 174, 175, 181, 185, 186, 187, 188, 190, 196, 197, 203, 235], "default": [32, 35, 36, 39, 71, 104, 111, 113, 119, 137, 148, 156, 158, 164, 171, 176, 181, 182, 185, 190, 195, 196, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "l2": [32, 36, 104, 225], "string": [32, 36, 104, 148, 203, 241], "absolute_error": [32, 36, 104], "l1": [32, 36, 104, 222], "cross_entropy": [32, 36, 104, 113, 235], "cross_entropy_sigmoidi": [32, 36, 104], "implementingi": [32, 36, 92, 104], "determines": [32, 156, 173, 181, 185, 190], "how": [32, 36, 88, 90, 104, 113, 119, 238, 241, 242, 243], "true": [32, 35, 39, 42, 54, 64, 70, 111, 126, 131, 132, 133, 134, 135, 136, 137, 140, 156, 162, 181, 185, 189, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243], "interpretedi": [32, 113, 174, 175, 186, 187, 188], "single": [32, 165, 174, 175, 186, 187, 188, 238, 239, 243], "encodedi": [32, 113, 117, 242], "crossentropy": 32, "predictions": [32, 219], "occurre": [32, 95], "wouldu": 32, "prediction": [32, 35, 39, 111, 201], "frequency": 32, "absolute": [32, 222], "squaredi": [32, 119, 225, 238], "categorical": 32, "option": 32, "enco": 32, "integer": [32, 156, 162, 165, 234], "defaults": [32, 36, 104, 113, 119], "slsqp": [32, 36, 104, 113, 119], "previous": [32, 36, 104, 113, 119, 238, 242], "fit": [32, 34, 36, 38, 54, 60, 88, 90, 104, 110, 113, 119, 148, 235, 236, 240, 242, 243], "next": [32, 36, 104, 113, 119, 241, 242, 243], "callable": [32, 36, 57, 60, 85, 92, 104, 113, 119, 156, 160, 162, 195, 197, 203, 234, 236], "refere": [32, 36, 104, 113, 119, 243], "user": [32, 36, 88, 90, 104, 113, 119, 138, 140, 141, 143, 146, 147, 148, 149, 195, 221, 233, 242, 243], "returns": [32, 33, 35, 36, 37, 39, 58, 59, 61, 72, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 156, 157, 158, 159, 160, 161, 163, 168, 170, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 198, 206, 208, 209, 210, 212, 234, 239, 240, 242], "access": [32, 36, 104, 113, 119, 238, 239, 243], "intermedia": [32, 36, 104, 113, 119], "iteration": [32, 36, 104, 113, 119, 235, 239, 242, 243], "invokes": [32, 36, 104, 113, 119], "passes": [32, 36, 48, 104, 113, 119, 169, 243], "current": [32, 36, 98, 104, 106, 113, 119, 131, 146, 235, 239], "beingi": [32, 36, 104, 113, 119, 238, 243], "optimizedi": [32, 36, 104, 113, 119, 149, 155], "track": [32, 36, 104, 113, 119], "process": [32, 36, 104, 113, 119, 234, 236, 239, 240, 243], "goingi": [32, 36, 104, 113, 119, 243], "qiskitmachinelearningerror": [32, 33, 34, 36, 37, 38, 60, 71, 81, 85, 87, 92, 104, 105, 110, 113, 119, 141, 156, 173, 185, 190, 214, 217, 218, 223, 224, 226, 227, 230, 231, 235], "unknown": [32, 36, 104, 148], "invalidi": [32, 33, 36, 37, 71, 85, 104, 105, 173, 185], "matrix": [33, 37, 57, 60, 105, 117, 137, 141, 164, 167, 171, 221, 233, 234, 236, 241, 243], "trainedi": [33, 37, 71, 77, 80, 92, 105, 117, 148, 195, 196, 201, 203, 205, 208, 238, 239, 241, 242], "incompatip": [33, 37, 57, 105, 138, 140, 141], "specifiedi": [34, 38, 103, 110, 149, 232, 242], "needs": [34, 38, 110, 113, 156, 162, 234], "some": [34, 38, 54, 110, 156, 238, 240, 242, 243], "predictedi": [34, 38, 60, 110, 201, 214, 217, 218, 223, 224, 226, 227, 230, 231, 238, 239, 240, 242], "sample_weight": [35, 39, 57, 111], "mean": [35, 39, 111, 237, 238], "accuracy": [35, 39, 111, 238, 241, 243], "coefficient": [35, 39, 65, 111], "determination": [35, 39, 111], "regressormix": 36, "n_features": [40, 57, 60, 62, 240], "n_out": [40, 62], "discriminativenetwork": [40, 62, 71, 94], "numpy": [40, 42, 44, 47, 64, 65, 79, 92, 96, 123, 149, 166, 167, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "dimension": [40, 57, 60, 62, 71, 123, 124, 131, 137, 140, 141, 149, 164, 165, 171, 221, 233, 237, 238, 239], "object": [41, 48, 63, 71, 85, 92, 101, 137, 148, 151, 153, 155, 164, 195, 196, 201, 203, 205, 221, 233, 239, 241], "discriminatornet": 41, "detach": [42, 64, 238], "labels": [42, 57, 60, 64, 113, 131, 149, 219, 220, 221, 232, 233, 236, 238, 239, 240, 241, 242], "fake": [42, 64, 71], "depreciatedi": [42, 47], "load_dir": [43, 66], "load\u0131": [43, 66, 123, 237, 238, 239], "fil": [43, 66, 71, 102, 103, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "storedi": [43, 66, 239], "loadedi": [43, 66, 102, 103], "equivalent": [44, 96, 232], "customizedi": 44, "scalingi": 44, "path": [45, 68, 102, 103], "savingi": [45, 68, 101, 238], "para": [46, 81, 148], "type": [46, 54, 81, 196], "real_batch": 47, "generated_batch": 47, "real": [47, 71, 238, 242], "proble": [47, 243], "forward\u0131": [48, 156, 166, 169, 173, 185, 189, 234, 235, 238, 239, 243], "backward\u0131": [48, 126, 156, 158, 166, 169, 173, 176, 181, 182, 185, 234, 238, 239, 243], "lik": [51, 88, 90, 104, 113, 174, 175, 186, 187, 188, 239, 242], "quantum_kernel": [54, 88, 90, 148, 220, 221, 233, 236, 240, 241], "c": [54, 65, 232, 240, 241], "num_steps": [54, 240], "1000": [54, 237, 240], "precomputedi": [54, 57, 60, 236], "svc": [54, 88, 232, 236], "serializablemodelmix": [54, 88, 90, 104], "pegasos": [54, 58], "developedi": 54, "overridi": 54, "predict": [54, 88, 90, 213, 214, 215, 217, 218, 222, 223, 224, 225, 226, 227, 229, 230, 231, 235, 240, 241, 242], "super": [54, 238], "implementation": [54, 131, 240, 243], "adaptedi": 54, "work": [54, 126, 238, 242, 243], "pegasos_qsv\u00e7": [54, 240], "sample_train": [54, 88, 90], "label_train": [54, 88, 90], "sample_test": [54, 88, 90], "references": [54, 71, 131, 164, 171], "shalev": [54, 240], "shwartz": [54, 240], "et": [54, 71, 164, 166, 171, 240, 243], "al": [54, 71, 164, 166, 171, 235, 240, 243], "primal": [54, 240], "estimatedi": [54, 240], "sub": [54, 238, 240], "solver": [54, 240], "svm": [54, 88, 90, 232, 236, 240, 241], "positiv": [54, 137, 240], "regularization": [54, 240, 243], "strength": [54, 240], "inversely": [54, 240], "proportional": [54, 240], "smaller": [54, 239, 240], "indu\u00e7": [54, 240], "generally": [54, 240], "helps": [54, 240], "preventingi": [54, 240], "overfittingi": [54, 240, 243], "however": [54, 235, 238, 240, 241], "due": [54, 240], "nature": [54, 131, 240, 243], "computation": [54, 137, 156, 181, 185, 190, 240, 243], "steps": [54, 58, 71, 237, 239, 240, 241, 242, 243], "beco": [54, 240], "trivial": [54, 240, 243], "larger": [54, 137, 240], "thus": [54, 88, 90, 92, 123, 171, 240, 243], "improv": [54, 240], "performa": [54, 156, 238, 240, 242], "drastically": [54, 240], "linearly": [54, 240], "separap": [54, 240], "space": [54, 95, 131, 137, 240, 241, 243], "chose": [54, 126, 238, 240, 242], "large": [54, 240, 242, 243], "separation": [54, 131, 240], "perfect": [54, 240], "prevent": [54, 240], "early": [54, 239, 240], "stoppingi": [54, 239, 240], "criterion": [54, 240], "iterates": [54, 240], "boolean": [54, 59], "flag": [54, 59, 112], "indicatingi": [54, 59, 203], "rando": [54, 71, 82, 92, 126, 131, 196, 234, 235, 237, 238, 239, 242, 243], "valueerror": [54, 57, 60, 131, 138, 140, 141, 148, 149, 196, 201, 203], "typeerror": [54, 102], "neither": [54, 113, 119, 190], "nor": [54, 119], "accordingi": [57, 131, 240, 243], "features": [57, 60, 173, 177, 185, 240, 242], "shape": [57, 60, 156, 162, 164, 166, 169, 171, 173, 174, 175, 179, 185, 186, 187, 188, 214, 217, 218, 223, 224, 226, 227, 230, 231, 234, 238, 240, 242], "n_samples": [57, 60, 238, 240], "must": [57, 126, 131, 156, 171, 181, 185, 190, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "contain": 57, "than": [57, 71, 87, 137, 238, 239, 240, 242, 243], "unique": 57, "supportedi": [57, 113, 241], "passingi": [57, 126, 239, 241, 243], "raises": 57, "fittedi": [57, 235, 238, 240], "estimator": 57, "have": [57, 60, 140, 141, 162, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "wrong": [57, 60], "dimensions": [57, 123, 141, 165, 243], "pre": [57, 60, 203, 238, 239, 240], "m_samples": 60, "wher": [60, 71, 103, 113, 131, 138, 141, 149, 156, 162, 187, 214, 217, 218, 223, 224, 226, 227, 230, 231, 232, 236, 238, 239, 241, 242, 243], "m": [60, 131, 137, 141, 221, 233, 236, 237], "denotes": [60, 137], "n": [60, 71, 92, 131, 132, 133, 134, 135, 136, 137, 141, 149, 214, 217, 218, 221, 223, 224, 226, 227, 230, 231, 233, 234, 236, 237, 238, 239, 241, 243], "calculatedi": [60, 140, 141, 239, 243], "elements": [60, 138, 222, 225], "calledi": [60, 102, 235, 239, 242, 243], "befor": [60, 126, 167, 236, 239, 243], "been": [60, 81, 141, 196, 201, 203, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tensor": [64, 65, 67, 126, 127, 130, 208, 209, 238, 239], "variap": [64, 88, 90, 239], "lambda_": 65, "5": [65, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242], "k": [65, 71, 92, 131, 137, 236, 237, 241], "01": [65, 234, 239, 241], "lamp": [65, 234, 235, 237, 238, 239], "3": [65, 123, 131, 235, 236, 237, 240, 241], "any": [70, 102, 143, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "bounds": [71, 92, 237, 243], "num_qubits": [71, 92, 113, 119, 123, 124, 156, 190, 234, 237, 238, 239, 240, 243], "batch_siz": [71, 137, 237, 238, 239], "500": 71, "num_epochs": [71, 237], "3000": 71, "7": [71, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tol_rel_ent": 71, "adversarial": [71, 237], "hybrid": [71, 239], "modelingi": 71, "tasks": [71, 232, 238, 239], "adaptiv": 71, "uses": [71, 238, 242, 243], "interplay": 71, "generativenetwork": [71, 92], "alternatingi": 71, "tries": 71, "differentia": [71, 243], "between": [71, 77, 80, 241, 243], "aims": 71, "generatingi": 71, "classifies": 71, "eventually": [71, 92], "learns": [71, 92], "loads": [71, 102], "state": [71, 92, 95, 123, 137, 140, 196, 205, 208, 237, 238, 241, 242], "zoufal": [71, 237], "loadingi": [71, 101, 237, 238], "min": [71, 92, 237, 242], "max": [71, 92, 237, 242], "min_0": [71, 237], "max_0": [71, 237], "min_k": [71, 92, 237], "max_k": [71, 92, 237], "univaria": 71, "numbers": [71, 92, 243], "determ": [71, 92, 164, 171, 190, 234], "resolution": [71, 92, 237], "enap": [71, 92], "num_qubits_0": 71, "num_qubits_k": 71, "epochs": [71, 195, 237, 238, 239], "discriminates": 71, "generates": [71, 131, 156, 242], "tolera": [71, 86], "level": [71, 243], "relativ": [71, 77, 80, 86, 237], "entropy": [71, 77, 80, 86, 113, 213, 216, 237, 238], "achieves": 71, "equal": [71, 240, 241], "lower": [71, 236, 237, 241, 243], "finishes": 71, "store": [71, 235, 238, 242, 243], "cvs": 71, "createdi": [71, 240, 242], "backendi": [71, 81, 83, 103, 137, 141, 156, 181, 190, 195, 196, 201, 203, 237, 239, 241], "kwargs": [81, 83, 88, 90, 232], "execu": [81, 113, 119], "selectedi": [81, 195, 243], "experimental": 81, "settingi": [81, 126], "results": [81, 95, 149, 188, 201, 234, 235, 237, 238, 239, 241], "configuration": [83, 239], "generator_circuit": [85, 92, 237], "generator_init_params": [85, 237], "generator_optimizer": 85, "generator_gradient": 85, "quantumcircuit": [85, 92, 113, 114, 115, 116, 119, 120, 121, 123, 137, 140, 142, 145, 148, 156, 157, 190, 191, 192, 193, 234, 235, 237, 238, 239, 241, 243], "parameterizedi": [85, 123, 137, 232], "structure": [85, 239, 241], "returningi": [85, 92, 238], "partial": [85, 92], "derivatives": [85, 92], "bigger": 87, "items": [87, 237], "truncatedi": 87, "args": [88, 90, 232, 241], "shows": [88, 90, 238, 242, 243], "sklearn": [88, 90, 232, 236, 240, 241, 242], "inherits": [88, 90], "below": [88, 90], "read\u0131": [88, 90], "gui": [88, 90, 241], "qkernel": [88, 90, 240], "length": [88, 90, 221, 233, 241], "argument": [88, 90, 156, 239, 241], "pass": [88, 90, 126, 127, 156, 166, 173, 174, 175, 181, 185, 189, 232, 234, 238, 239, 240, 241, 242, 243], "constructor": [88, 90, 160, 162, 232, 240, 243], "arbitrary": [88, 90, 232], "keywordu": [88, 90, 232], "arguments": [88, 90, 232], "svr": 90, "init_params": [92, 237], "gradient_function": 92, "genera": [92, 185, 238, 239, 240, 242], "approximates": 92, "beginningi": [92, 242], "randomly": [92, 164, 171, 238, 239, 243], "throughout": 92, "represent": [92, 190, 241], "preparation": [92, 242], "qae": 92, "min_1": 92, "max_1": 92, "dim": [92, 238], "n_1": 92, "n_k": 92, "1d": [92, 141, 242], "initialization": [92, 123, 126, 238], "after": [92, 196, 238, 239, 242, 243], "every": [92, 156, 166, 198, 239], "update": [92, 235], "multivaria": 92, "gate": 93, "instruction": [93, 123], "runningi": [95, 237], "we": [95, 131, 234, 235, 236, 238, 239, 240, 241, 242, 243], "needi": [95, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "outputs": [95, 169, 239, 243], "measuringi": [95, 96, 187], "mappingi": [95, 138, 146, 235, 238, 243], "percentag\u0131": 95, "convenient": [101, 220, 229], "classmethodu": 102, "file_na": [102, 103], "whose": 102, "was": [102, 103, 239, 240, 241, 242, 243], "warningi": [102, 123], "raisedi": 102, "nevertheless": 102, "validi": [102, 156], "name": [102, 103, 235, 237, 238, 239, 242], "saves": 103, "internally": 103, "serializedi": [103, 196, 201, 203], "via": [103, 123, 148, 239], "dill": 103, "savedi": [103, 238, 242], "referencedi": 103, "internal": [103, 219], "objects": [103, 137, 205, 241], "means": 103, "infere": [103, 201, 203, 238, 242], "same": [103, 238, 239, 241, 242], "eve": 103, "ml": [104, 123], "implement": [104, 239], "warm": [112, 196, 239], "feature_map": [113, 119, 137, 148, 190, 234, 235, 236, 238, 239, 240, 243], "expectation": 113, "supports": [113, 195, 239], "deriv": 113, "those": [113, 235, 238], "zzfeaturemap": [113, 119, 137, 190, 234, 235, 236, 238, 239, 241, 243], "realamplitudes": [113, 119, 190, 234, 235, 238, 239, 242, 243], "cross": [113, 213, 216, 238], "least": 113, "targets": [117, 238], "initially": 119, "operatorbas": [119, 181, 190], "z": [119, 190, 234, 235, 238, 239], "otimes": [119, 131, 190, 234], "feature_dimension": [123, 236, 240, 243], "blueprintcircuit": 123, "raw": 123, "acts": 123, "statevectors": 123, "log2": 123, "contains": [123, 187, 205, 239, 241], "placeholder": 123, "synthesizedi": 123, "boundu": [123, 156, 232, 241], "qubit": [123, 148, 237, 241], "amplitudes": 123, "does": [123, 126, 162, 238, 242], "transformation": [123, 242], "therefor": [123, 243], "si": [123, 148, 196, 201, 203, 236, 237, 241, 243], "call": [123, 195, 241, 242, 243], "optimizers": [123, 148, 235, 241, 242, 243], "examples": [123, 238, 239], "import": [123, 234, 235, 236, 237, 238, 239, 240, 242, 243], "print": [123, 234, 236, 237, 238, 239, 240, 241, 242, 243], "prints": 123, "draw": [123, 234, 235, 243], "text": [123, 213, 222, 225, 232], "q_0": [123, 234, 237, 238, 239, 241], "parameterizedinitializ": 123, "q_1": [123, 238, 239, 241], "ordered_parameters": 123, "np": [123, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "sqrt": [123, 237], "assign_parameters": 123, "70711": 123, "inferredi": [123, 156, 162], "n_qubits": 123, "feature_": 123, "initial_weights": [126, 238, 239], "nn": [126, 195, 197, 199, 234, 238, 239], "connects": 126, "connectedi": 126, "remember": [126, 238], "input_gradients": [126, 156, 173, 181, 185, 190, 238], "computations": 126, "properly": 126, "uniformly": [126, 131, 238], "connector": [126, 129, 242], "note": [126, 156, 181, 185, 190, 232, 237, 238, 239, 240, 241, 242], "de": [126, 156, 234, 235, 236, 237, 238, 242], "independent": [126, 156, 240], "currently": 126, "back": [126, 238, 243], "propagation": 126, "input_da": [127, 174, 175, 186, 187, 188], "evaluatedi": [127, 241], "training_siz": [131, 132, 133, 134, 135, 136, 236, 241], "test_siz": [131, 132, 133, 134, 135, 136, 236, 241], "gap": [131, 236, 241], "plot_da": [131, 132, 133, 134, 135, 136, 236, 241], "include_sample_total": [131, 236, 241], "toy": [131, 243], "dataset": [131, 132, 133, 134, 135, 136, 165, 196, 201, 203, 221, 233, 236, 238, 239, 240], "fully": 131, "separatedi": 131, "zz_feature_map": 131, "procedur": [131, 240], "outlinedi": 131, "distributedi": 131, "vectors": [131, 148], "vec": [131, 236], "pi": [131, 235, 236, 237, 238, 239, 240, 241], "phi": [131, 236, 237], "rangle": [131, 137, 140, 141, 236, 237], "u_": 131, "h": [131, 234, 237], "exp": 131, "left": [131, 222, 236, 237, 240, 241, 242], "sum_": [131, 213, 222, 225, 232, 237], "subseteq": 131, "phi_s": 131, "prod_": 131, "z_i": 131, "right": [131, 222, 236, 237], "begi": [131, 148], "cases": [131, 156, 243], "phi_": 131, "j": [131, 232, 237], "x_i": [131, 232, 239], "x_j": [131, 232], "end": [131, 239], "attribu": 131, "rule": [131, 238, 242], "langle": [131, 137, 236], "v": [131, 236, 238, 240, 242], "dagger": [131, 140, 236], "prod_i": 131, "delta": 131, "mathrm": 131, "su": 131, "unitary": 131, "works": [131, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "havl\u00ed\u010dek": 131, "c\u00f3rcoles": 131, "ad": [131, 236, 241], "temme": 131, "harrow": 131, "aw": 131, "kandal": 131, "chow": 131, "jm": 131, "gambet": 131, "supervisedi": [131, 236], "enhancedi": [131, 236], "spaces": [131, 236], "2019": [131, 237], "mar": [131, 237, 239], "567": 131, "7747": 131, "209": 131, "12": [131, 234, 235, 237, 238, 239, 240, 242, 243], "arxiv": [131, 232], "1804": 131, "11326": 131, "testingi": [131, 236, 238, 240], "plot": [131, 235, 237, 238, 239, 240, 241, 242], "requires": [131, 238, 239, 243], "matplotlip": [131, 235, 236, 237, 238, 239, 240, 241, 242, 243], "format": [131, 186, 187, 188, 234, 235, 238, 243], "uniform": [131, 164, 171, 237, 243], "grid": [131, 237, 240], "breast": 132, "cancer": 132, "deprecatedi": [132, 133, 134, 135, 136], "version": [132, 133, 134, 135, 136, 171, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "enforce_psdi": 137, "900": 137, "user_parameters": [137, 138, 148, 241], "general": [137, 238, 243], "study": [137, 243], "patterns": 137, "datapoints": [137, 140, 141], "better": [137, 240, 242], "understoodu": [137, 243], "higher": [137, 243], "through": [137, 232, 238], "f": [137, 235, 236, 237, 238, 239, 240, 241], "inputs": [137, 173, 214, 217, 218, 223, 224, 226, 227, 230, 231, 235, 241, 243], "dot": 137, "product": [137, 140, 141], "usually": [137, 238], "much": 137, "calculates": 137, "spectral": [137, 236], "clusteringi": [137, 236], "ridge": [137, 236], "project": [137, 239], "closest": 137, "semidefini": 137, "enforcedi": 137, "simulator": [137, 140, 156, 238, 240, 241, 242], "together": [137, 243], "parametervector": [137, 140, 147, 148, 241], "seque": [137, 147, 148, 150, 221, 233], "containingi": [137, 196, 201, 203, 221, 233, 239, 241], "correspondu": [137, 181], "gates": [137, 237], "tunedi": 137, "intendi": 137, "tune": 137, "optimal": [137, 232, 241], "fieldi": 137, "assign": [138, 221, 233], "dictionary": [138, 189, 196, 205, 208, 239, 241], "specifyingi": 138, "new": [138, 156, 234, 238, 241, 242, 243], "specifies": 138, "current_parameter": 138, "new_parameter": 138, "expression": 138, "numeri\u00e7": 138, "assignedi": 138, "order": [138, 237, 238, 243], "alterna": 139, "signatur": 139, "assign_user_parameters": 139, "measurement": [140, 195, 198], "is_statevector_s": 140, "inner": [140, 141], "statevector_simulator": [140, 141, 237, 240], "psi": [140, 141], "secondu": [140, 238, 239, 242], "statevector": [140, 156, 234, 240, 241, 242], "unboundu": [140, 141, 143, 145], "x_vec": [141, 236], "y_vec": [141, 236], "buildi": 141, "classically": 141, "2d": 141, "nxd": 141, "d": [141, 149, 235, 243], "mxd": 141, "nxm": 141, "arrays": [141, 242], "modifiedi": [141, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "match": [141, 214, 217, 218, 223, 224, 226, 227, 230, 231], "copy": [146, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "mappings": 146, "trainer": [148, 154, 239], "utility": 148, "crea": [148, 235, 238, 239, 240, 241, 242, 243], "qc": [148, 234, 235, 238, 243], "trainap": [148, 149, 156, 163, 173, 174, 175, 178, 181, 185, 186, 187, 188, 241], "input_params": [148, 156, 181, 235, 238, 243], "x_par": 148, "user_params": [148, 241], "\u03b8_par": 148, "rotation": [148, 240, 241], "layer": [148, 190, 234, 238, 241], "enumera": [148, 238], "ry": [148, 234, 235, 237, 238, 239, 241], "rz": 148, "quant_kernel": [148, 241], "loss_fun\u00e7": [148, 195, 238, 239], "qk_trainer": 148, "qkt_results": 148, "x_train": [148, 238, 241], "y_train": [148, 241], "optimized_kernel": [148, 241], "kernelloss": [148, 151, 232, 241], "functions": [148, 195, 203, 219, 238, 239], "svc_loss": [148, 241], "svcloss": [148, 241], "exhibit": 148, "behavior": 148, "analytical": 148, "recommendedi": 148, "minimizingi": [149, 232], "alteredi": [149, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "quantumkerneltrainerresult": [149, 241], "variationalresult": 154, "weight_params": [156, 181, 235, 238, 243], "samplingneuralnetwork": 156, "attempt": 156, "transpil": 156, "cache": 156, "transpiledi": 156, "subsequent": 156, "usages": 156, "reasons": 156, "originates": 156, "rawfeaturevector": 156, "executedi": 156, "impact": [156, 238], "possibly": [156, 185], "always": 156, "settings": [156, 241], "maps": [156, 162, 235, 243], "another": [156, 162, 238, 240, 242], "unsignedi": [156, 162], "integers": [156, 162, 234], "indices": 156, "potentially": 156, "separa": [156, 243], "identity": 156, "custo": [156, 162, 195, 203, 236, 238, 239, 241], "interpretation": [156, 162], "remainingi": 156, "num_samples": [156, 235, 238, 239, 242, 243], "interpret_shap": 156, "converter": [156, 181, 190], "explicitly": [156, 181, 185, 190, 238, 241], "proper": [156, 181, 185, 190], "implicitly": 160, "derivedi": 160, "change": 162, "_shape": 162, "weight_samples": [164, 171, 243], "input_samples": [164, 171, 243], "global": [164, 171], "effectiv": [164, 165, 171], "followingi": [164, 171, 236, 237, 238, 239, 241, 243], "definition": [164, 171, 238], "abbas": [164, 166, 171, 243], "power": [164, 171, 238, 243], "qnns": [164, 171], "specifi\u00e7": [164, 171, 243], "num_weights": [164, 166, 167, 169, 171, 173, 174, 175, 185, 186, 187, 188, 234, 235, 238, 239, 243], "fisher": [164, 166, 167, 171, 243], "information": [164, 167, 171, 236, 239, 241, 243], "num_input_samples": [164, 166, 167, 169, 171, 243], "num_weight_samples": [164, 166, 169, 171, 243], "qnn_input_siz": [164, 171], "normal": [164, 171, 237, 243], "dataset_siz": [165, 243], "sizes": [165, 243], "num_da": 165, "effective_": 165, "model_outputs": 166, "averag\u0131": [166, 239], "jacobian": 166, "shown": [166, 240, 242, 243], "output_siz": [166, 169], "normalized_fisher": 167, "normalizedi": [167, 236, 243], "extracts": 167, "trace": [167, 243], "fisher_tra\u00e7": 167, "normalizingi": 167, "monte": [169, 243], "carlo": [169, 243], "weight": [169, 170, 171, 174, 175, 186, 187, 188, 234, 239, 243], "grads": 169, "effectivedimension": [171, 243], "local": [171, 242], "limitedi": 171, "num_inputs": [173, 174, 175, 185, 186, 187, 188, 234, 235, 238, 239, 243], "providingi": [173, 236, 238], "handlingi": 173, "batchedi": [173, 234], "sca": [174, 175, 186, 187, 188], "cast": [174, 175, 186, 187, 188], "element": [174, 175, 186, 187, 188], "sparsearray": [174, 175, 186, 187], "num_input": 174, "respectively": [174, 238, 239], "operator": [181, 184, 190, 234, 238, 239], "exp_val": [181, 190, 238], "opflow": [181, 234, 235, 238, 239], "represents": [181, 243], "expectationbas": [181, 190], "instead\u0131": [185, 238, 243], "histogra": [186, 187], "depends": [186, 187, 188, 218, 224, 227, 231], "input_grad\u0131": 187, "weights_grad\u0131": 187, "grad": 187, "derivativ": [187, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "key": [187, 237, 243], "consistingi": 190, "obtainedi": [190, 203, 240, 242, 243], "inconsistent": 190, "10": [195, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "1024": [195, 235, 236, 242], "measurement_error_mitigation": 195, "provider": [195, 196, 201, 203, 239], "runt": [195, 196, 201, 203, 207, 237], "client": [195, 239], "official": [195, 238], "maxim": [195, 239, 240, 241], "mitigation": [195, 198], "ibmq": [195, 234, 235, 238, 239, 242, 243], "services": 195, "train_loader": [196, 238, 239], "val_loader": [196, 239], "hooks": 196, "start_epoch": [196, 239], "sent": [196, 201, 203, 243], "server": [196, 201, 203], "torchruntimeresult": [196, 201, 203, 239], "dataloader": [196, 201, 203, 238, 239], "loader": [196, 201, 203, 239], "validation": [196, 212], "skippedi": 196, "hookbase": [196, 239], "hook": [196, 239], "interact": 196, "loop": [196, 238], "epoch": [196, 205, 238, 239], "manual_seedi": [196, 238, 239], "history": [196, 205, 211, 212, 238, 239], "yet": [196, 201, 203], "runtimeerror": [196, 201, 203], "job": [196, 201, 203, 207], "failedi": [196, 201, 203], "modules": [197, 238], "_loss": 197, "done": 198, "comple": 198, "fitter": 198, "re": [198, 238, 242], "calibrations": 198, "30": [198, 234, 235, 237, 238, 239, 241, 242], "minutes": 198, "opt": [200, 237, 238, 239], "data_loader": [201, 203, 239], "infer": [201, 203, 242], "score_fun\u00e7": [203, 239], "calculate": [203, 238, 243], "their": [203, 239], "own": [203, 238, 239], "scoringi": [203, 236, 239], "def": [203, 234, 235, 238, 239, 242], "model_output": [203, 239], "torchruntimeclient": [205, 239], "id": [207, 239], "associatedi": 207, "n_": [213, 222, 225], "target_i": [213, 222, 225], "log": [213, 237, 238, 239], "predict_i": [213, 222, 225], "evaluatingi": [214, 217, 221, 223, 226, 230, 233], "individually": [214, 217, 218, 223, 224, 226, 227, 230, 231], "shapes": [214, 217, 218, 223, 224, 226, 227, 230, 231], "do": [214, 217, 218, 223, 224, 226, 227, 230, 231, 235, 242, 243], "assume": 215, "softmax": [215, 238], "sigmoidi": 216, "unlik": 219, "quantities": 219, "parameter_values": [220, 221, 233], "calls": [220, 229], "labeledi": [221, 233, 238, 241, 242], "truth": [221, 233, 239], "fittingi": 232, "x_": [232, 235, 238, 239], "y_": [232, 235, 238, 239], "k_": [232, 236], "\u03b8": [232, 238, 239, 241], "a_i": 232, "a_j": 232, "k_\u03b8": 232, "lagrange": 232, "multipliers": 232, "foundu": [232, 241, 243], "standard\u0131": [232, 236, 237, 240], "quadrati\u00e7": 232, "hyper": [232, 240], "soft": 232, "marg\u0131": [232, 240, 241], "maximizingi": 232, "alignment": [232, 241], "turn": 232, "yields": [232, 240], "smallest": 232, "upper": [232, 236, 237, 240, 241, 242], "generalization": [232, 243], "parameterization": [232, 240, 243], "org": [232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "abs": 232, "2105": 232, "03406": 232, "further": [232, 234, 242], "evaluation": 232, "sayfa": [234, 235, 236, 237, 238], "docs": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "01_neural_networks": 234, "ipynb": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "olu\u015fturul": [234, 235, 236, 237, 238], "defter": [234, 236, 237], "sa\u011flana": 234, "farkl\u0131": [234, 235], "sinirsel": 234, "a\u011f": [234, 237], "uygulama": [234, 237], "g\u00f6sterir": [234, 235, 236], "bir\u00e7ok": [234, 236], "senaryo": 234, "kullan\u0131labile": 234, "uygula": 234, "agnostik": 234, "hesapla": [234, 236], "birim": 234, "ifa": 234, "edilir": 234, "ba\u011fl\u0131": 234, "belirli": [234, 235], "tip": 234, "kurulmak": 234, "\u00e7ok": [234, 235], "az": [234, 235], "uygu": [234, 235], "olabilir": 234, "ayarlanmas": 234, "gerekebilir": 234, "a\u015fa\u011f\u0131": [234, 235, 236, 237], "kullan\u0131labilir": [234, 236], "ar": 234, "ayr\u0131nt\u0131l": 234, "el": [234, 235, 238, 239], "al\u0131nacak": 234, "aray\u00fcz": 234, "mekaniksel": 234, "g\u00f6zlemlenebilir": 234, "de\u011ferlendirilme": 234, "dayal": [234, 235, 237], "uygunluk": 234, "\u00f6zel": [234, 235, 236], "uygulamas": 234, "devre": 234, "\u00f6l\u00e7\u00fclme": 234, "kaynaklana": 234, "aer": [234, 235, 238, 239, 241, 242, 243], "statefn": [234, 235], "paulisumop": 234, "aerpauliexpectation": [234, 238, 239], "listop": 234, "utils": [234, 235, 236, 237, 238, 239, 240, 242, 243], "algorithm_globals": [234, 235, 236, 237, 238, 239, 240, 242, 243], "random_seedi": [234, 235, 236, 237, 238, 239, 240, 242, 243], "42": [234, 235, 238, 239, 242, 243], "calculcate": 234, "expval": 234, "instances": [234, 239], "qi_sv": [234, 242, 243], "get_backendi": [234, 235, 236, 237, 238, 239, 240, 242, 243], "aer_simulator_statevector": [234, 238, 242, 243], "later": [234, 238, 243], "qi_qasm": [234, 242], "aer_simulator": [234, 235, 242], "b\u00fct": 234, "temsil": [234, 236, 237], "eder": 234, "ver": [234, 235, 236, 237, 238], "\u00f6\u011fretilebilir": 234, "y\u00fck": [234, 236], "alarak": 234, "ger": 234, "ge\u00e7i\u015f": 234, "maruz": 234, "b\u0131rak\u0131r": 234, "herhangi": [234, 236, 237], "e\u011fit": [234, 235, 236], "yetenek": 234, "i\u00e7ermez": 234, "ger\u00e7ek": 234, "algoritma": [234, 235, 236, 237], "b\u0131rak\u0131l": 234, "b\u00f6ylelik": 234, "e\u011fitilebilir": 234, "de\u011fer": [234, 235, 237], "etmez": 234, "getirme": 234, "g\u00f6steril": 234, "\u00fcn": 234, "di": 234, "adland\u0131r\u0131ld\u0131k": 234, "varsayal": 234, "sonra": [234, 235], "hem": 234, "a\u011f\u0131rl\u0131k": 234, "boyut": [234, 236, 237], "s\u0131ra": [234, 237], "d\u00fcz": 234, "giri\u015f": [234, 235], "al\u0131r": [234, 235, 236], "gir": [234, 236, 237], "toplula\u015ft\u0131rma": 234, "kar\u015f\u0131l\u0131k": 234, "gele": 234, "\u015fekl": 234, "grup": 234, "verir": [234, 236], "ten": [234, 235], "parametrel": 234, "operat\u00f6r": 234, "geri": 234, "do\u011fru": [234, 237], "sa\u011flamak": [234, 236], "gradya": 234, "\u00e7er\u00e7eve": 234, "yararlan\u0131r": 234, "b\u00f6": [234, 237], "durum": [234, 237], "g\u00f6r": 234, "mekanik": 234, "beklene": 234, "klasik": [234, 236, 237], "veri": [234, 236], "etmek": [234, 237], "ayr\u0131\u00e7": [234, 235, 236, 237], "karma\u015f\u0131k": [234, 235], "ler": 234, "olu\u015fturmak": [234, 237], "yap\u0131": 234, "iz": 234, "neural_networks": [234, 235, 238, 239, 243], "params1": 234, "input1": 234, "weight1": 234, "qc1": 234, "rx": 234, "qc_sfn1": 234, "cost": 234, "h1": 234, "from_list": 234, "op1": 234, "composedop": [234, 238, 239], "operatormeasurement": [234, 238, 239], "circuitstatefn": [234, 238, 239], "qnn1": [234, 238, 239], "6": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "weights1": 234, "08242345": 234, "8": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "9": [234, 235, 236, 237, 238, 239, 240, 242, 243], "2970094": 234, "\u00e7oklu": 234, "birle\u015ftirmek": 234, "olu\u015fturma": 234, "olanak": [234, 236], "tan\u0131r": [234, 236], "11": [234, 235, 236, 238, 239, 240, 241, 242, 243], "op2": 234, "qnn2": [234, 238], "13": [234, 235, 237, 238, 239, 241, 242, 243], "eklemek": 234, "\u00f6znitelik": [234, 236], "harita": 234, "ikinci": [234, 236], "e\u011fitil": [234, 237], "olu\u015fa": 234, "k\u00fcbit": [234, 237], "\u00fczer": 234, "dir": 234, "pari": 234, "14": [234, 235, 238, 239, 241, 242, 243], "15": [234, 235, 236, 238, 239, 240, 242, 243], "specify": [234, 239], "16": [234, 235, 237, 238, 239, 242, 243], "fm": [234, 235, 238, 239, 241], "reps": [234, 235, 236, 237, 238, 240, 243], "mpl": [234, 235, 243], "17": [234, 235, 236, 237, 238, 239, 240, 242, 243], "18": [234, 235, 238, 239, 242, 243], "zzz": 234, "19": [234, 235, 236, 238, 239, 240, 241, 242, 243], "qnn3": [234, 238], "20": [234, 235, 236, 238, 239, 240, 241, 242, 243], "input3": 234, "weights3": 234, "21": [234, 235, 238, 239, 242, 243], "18276559": 234, "22": [234, 235, 238, 239, 242, 243], "10231208": 234, "10656571": 234, "41017902": 234, "16528909": 234, "27780262": 234, "41365763": 234, "temel": [234, 237], "s\u0131r": 234, "alabilir": 234, "\u00f6l\u00e7": 234, "\u00fcretebilmek": 234, "bit": [234, 235, 236, 238, 240, 242], "dizi": [234, 235], "indeks": 234, "\u00f6l\u00e7me": 234, "ikil": [234, 235], "partis": 234, "yorumlanabilir": 234, "gradyan": 234, "tahm": 234, "s\u00f6z": 234, "konus": 234, "farkl\u0131la\u015fma": 234, "de\u011fil": 234, "d\u00f6nd\u00fcr\u00fcr": 234, "aggregatedi": 234, "accordingly": 234, "vekt\u00f6r": [234, 235, 236], "d\u00f6nd\u00fcrecek": 234, "yap\u0131land\u0131r\u0131labilir": 234, "fonksiyo": [234, 236], "kullan\u0131lmaz": 234, "say\u0131": [234, 235], "\u00fcstel": 234, "\u00f6l\u00e7eklenir": 234, "genellik": 234, "\u00f6ner": 234, "\u00f6nerilir": 234, "olmas": 234, "sonu\u00e7": [234, 235], "dizgi": [234, 235], "parite": 234, "e\u015flenir": 234, "anlaml\u0131": 234, "uzunluk": 234, "olacak": 234, "23": [234, 235, 237, 238, 239, 240, 241, 242], "24": [234, 235, 237, 238, 239, 241, 242, 243], "entanglement": [234, 236, 237, 238], "linear": [234, 236, 238, 239], "25": [234, 235, 236, 238, 239], "qnn4": [234, 238], "26": [234, 235, 238, 239, 243], "input4": 234, "weights4": 234, "27": [234, 236, 238, 239, 240], "tode": 234, "28": [234, 235, 239, 243], "lt": [234, 238, 241, 242], "coo": 234, "dtype": 234, "float64": 234, "nnz": 234, "33": [234, 238, 239, 242], "fill_value": 234, "gt": [234, 238, 241, 242], "29": [234, 239], "parity": [234, 235, 238, 243], "b": [234, 235, 236, 240, 241, 242, 243], "count": [234, 235, 238, 243], "qnn6": 234, "input6": 234, "weights6": 234, "31": [234, 236, 237, 238, 239, 240, 242], "32": [234, 239, 241], "qnn7": 234, "34": [234, 239, 243], "input7": 234, "weights7": 234, "35": [234, 239], "strings": 234, "mappedi": 234, "36": [234, 239], "37": 234, "qnn8": 234, "38": 234, "input8": 234, "weights8": 234, "39": [234, 239, 241], "40": [234, 238, 242], "43": 234, "tools": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "jupyter": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qiskit_version_tap": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "qiskit_copyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "informationqiskit": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "softwareversionqiskit": [234, 235, 236, 238, 239, 240, 241, 242, 243], "terra0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "0qiskit": [234, 235, 236, 238, 239, 240, 241, 242, 243], "aer0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "ignis0": [234, 235, 236, 239, 240, 241, 243], "provider0": [234, 235, 237, 238, 239, 242, 243], "aqua0": [234, 235, 236, 239, 240], "learning0": [234, 235, 236, 238, 239, 240, 241, 242, 243], "0system": [234, 235, 236, 238, 239, 240, 241, 242, 243], "informationpython3": [234, 235, 236, 237, 240], "jun": [234, 235], "2021": [234, 235, 236, 237, 239, 240, 241, 243], "49": [234, 235], "gcc": [234, 235], "oslinuxcpus4memory": [234, 235], "gb": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "6849517822265625sat": 234, "augu": [234, 235, 236, 238, 240, 242], "04": 234, "52": 234, "ist": [234, 235], "part": [234, 235, 236, 237, 239, 240, 241, 242, 243], "copyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "ibm": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "2017": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "licensedi": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "under": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "apache": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "lice": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "you": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "mayobtain": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "root": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "tree": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "http": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "www": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "licenses": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "modifications": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "retain": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "thiscopyright": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "noti\u00e7": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "files": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "carry": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "indicatingthat": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "they": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "originals": [234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "02_neural_network_classifier_and_regressor": 235, "kullan\u0131ld\u0131k": 235, "g\u00f6steriyor": 235, "iki": 235, "ba\u011fla": 235, "kulla": 235, "ik": [235, 236, 237], "dur": [235, 237], "kolayl\u0131k": 235, "ama\u00e7": [235, 237], "\u00f6nce": [235, 236], "yap\u0131land\u0131r\u0131l": 235, "\u00e7e\u015fitle": 235, "sa\u011fl\u0131yor": 235, "varitional": 235, "\u00f6\u011freti\u00e7": 235, "gip": [235, 236], "yap\u0131land\u0131r\u0131l\u0131r": 235, "pyplot": [235, 236, 237, 238, 239, 240, 241, 242, 243], "plt": [235, 236, 237, 238, 239, 240, 241, 242, 243], "cobyla": [235, 242, 243], "l_bfgs_b": 235, "typing": 235, "exceptions": 235, "ipytho": [235, 242, 243], "display": [235, 241, 242, 243], "clear_output": [235, 242, 243], "g\u00f6stermek": 235, "basit": 235, "haz\u0131rl\u0131yor": 235, "y01": [235, 238, 239, 243], "axis": [235, 238, 239, 242, 243], "y_one_hot": 235, "zeros": 235, "range": [235, 237, 238, 239, 241, 242, 243], "y_target": [235, 238, 239], "zip": [235, 238, 239], "bo": [235, 238, 239], "go": [235, 238, 239, 242], "color": [235, 237, 238, 239, 242], "black": [235, 238, 239, 242], "show": [235, 236, 237, 238, 239, 240, 241, 242, 243], "i\u0307lk": [235, 237], "nin": 235, "kullan\u0131labilecek": 235, "anla": 235, "math": 235, "bi\u00e7im": 235, "tek": 235, "boyutlu": [235, 236, 237], "\u00e7\u0131k": 235, "d\u00f6nd\u00fcrmes": 235, "beklenir": 235, "yaln\u0131z": [235, 236], "\u00e7al\u0131\u015f\u0131r": 235, "s\u0131n\u0131f": [235, 236], "atar": 235, "biz": 235, "sa\u011flamas": 235, "haritas": [235, 236], "tan\u0131mlana": 235, "kullan\u0131yor": [235, 236, 237], "opflow_qn": [235, 243], "add": [235, 240], "callback_graph": [235, 242, 243], "appendi": [235, 238, 239, 241, 242, 243], "so": [235, 238, 240, 242, 243], "versus": [235, 242], "graph": 235, "whatever": 235, "want": [235, 242, 243], "long": [235, 238, 239], "gets": 235, "mentionedi": [235, 242], "draws": [235, 242, 243], "liv": [235, 242, 243], "obj_func_eval": [235, 243], "wait": [235, 242, 243], "objective_func_vals": [235, 243], "tit": [235, 236, 237, 238, 240, 241, 242, 243], "against": [235, 237, 242, 243], "xlabel": [235, 237, 238, 242, 243], "ylabel": [235, 237, 238, 242, 243], "len": [235, 237, 238, 239, 241, 242, 243], "opflow_classifier": [235, 243], "empty": [235, 242, 243], "evaluations": [235, 241, 243], "rcparams": [235, 241, 242, 243], "figur": [235, 236, 237, 239, 240, 241, 242, 243], "figsiz": [235, 236, 237, 238, 240, 241, 242, 243], "score": [235, 236, 240, 242, 243], "y_predict": [235, 238, 239], "red": [235, 238, 239], "wrongly": [235, 238, 239], "classifiedi": [235, 238, 239, 242], "y_p": [235, 238, 239], "scatter": [235, 236, 238, 239, 240, 241, 242], "200": [235, 238, 239, 242], "facecolors": [235, 236, 238, 239, 240, 241, 242], "edgecolors": [235, 236, 238, 239, 240, 241, 242], "linewidths": [235, 238, 239, 242], "g\u00f6sterecek": 235, "olas\u0131l\u0131k": [235, 237], "\u00f6rnekle": 235, "otomatik": 235, "da\u011f\u0131l\u0131m": [235, 237], "sonu\u00e7lan\u0131r": 235, "sade\u00e7": 235, "\u00f6l\u00e7\u00fcle": 235, "e\u015fle": 235, "tan\u0131mlama": [235, 236], "gerekir": 235, "i\u0307kil": 235, "e\u015fitlik": 235, "e\u015fleme": 235, "decompos": [235, 243], "corresponds": [235, 237, 243], "possip": [235, 238, 243], "outcomes": [235, 243], "circuit_qn": 235, "circuit_classifier": 235, "75": [235, 239], "\u00e7e\u015fidi": 235, "e\u015flemek": [235, 236], "e\u015flik": 235, "e\u015flemes": 235, "uzan": 235, "s\u0131cak": 235, "kodla": 235, "yorumlana": 235, "bi\u00e7": 235, "verile": [235, 237], "etiket": 235, "bekleye": 235, "tahmin": 235, "d\u00f6nd\u00fcre": 235, "crossentropyloss": [235, 238, 239], "k\u00fcmes": [235, 236], "eps": [235, 238, 239], "lb": [235, 238, 239], "ub": [235, 238, 239], "linspa\u00e7": [235, 237, 238, 239, 242], "num": 235, "50": [235, 238, 243], "reshap": [235, 238, 239, 240, 242], "sin": [235, 238, 239], "gerileme": 235, "k\u0131s\u0131tl\u0131yor": 235, "olu\u015fturulabilir": 235, "ancak": 235, "kapsam": 235, "a\u015fmak": 235, "simple": [235, 239, 242], "param_x": [235, 238, 239], "param_y": [235, 238, 239], "vf": [235, 238, 239], "regression_opflow_qn": 235, "9763610762801076": 235, "l": [235, 237, 238, 239], "hedef": [235, 237], "aras": [235, 236, 237], "ortala": 235, "karesel": 235, "hata": 235, "indirmek": 235, "l2loss": 235, "i\u015flev": 235, "dikka": [235, 236], "9748043399155905": 235, "6849517822265625mon": 235, "41": [235, 239], "59": 235, "03_quantum_kernel": 236, "\u00f6\u011frenme": 236, "genel": 236, "g\u00f6rev": 236, "kal\u0131p": 236, "bulmak": 236, "incelemek": 236, "nokta": [236, 237], "uzay": 236, "anla\u015f\u0131l\u0131r": 236, "_i": 236, "_j": 236, "hari": 236, "nok": 236, "\u00e7arp\u0131m": 236, "sonlu": 236, "matris": 236, "ij": 236, "hilbert": 236, "kullan\u0131l\u0131r": 236, "ki": 236, "ayr": [236, 237], "bak": [236, 237], "matri": 236, "hesaplamak": 236, "k\u00fcmele": 236, "cluster": 236, "spectralclusteringi": 236, "metrics": [236, 239, 241, 243], "normalized_mutual_info_scor": 236, "basicaer": [236, 237, 240], "ad_hoc_da": [236, 241], "12345": [236, 240], "\u00f6rnek": [236, 237], "il": [236, 237, 238], "denetimli": 236, "a\u00e7\u0131kland\u0131k": 236, "hoc": [236, 241], "k\u00fcme": 236, "kullanacak": 236, "algoritmas": 236, "adhoc_dimension": [236, 241], "train_features": [236, 240, 242], "train_labels": [236, 240, 242], "test_features": [236, 240, 242], "test_labels": [236, 240, 242], "adhoc_total": [236, 241], "ylim": [236, 241], "xlim": [236, 241], "imshow": [236, 238, 241], "asmatrix": [236, 241], "interpolation": [236, 241], "nearest": [236, 241], "origi": [236, 241], "cmap": [236, 238, 240, 241], "rdbu": [236, 240, 241], "extent": [236, 241], "marker": [236, 240, 241, 242], "o": [236, 237, 240, 241, 242], "legendi": [236, 237, 240, 241, 242, 243], "bbox_to_anchor": [236, 240, 241, 242], "05": [236, 239, 240, 241, 242], "loc": [236, 237, 240, 241, 242], "borderaxespad\u0131": [236, 240, 241, 242], "dene": 236, "qasm_simulator": 236, "\u0131": 236, "\u00e7al\u0131\u015ft\u0131r": 236, "adhoc_feature_map": 236, "adhoc_backendi": 236, "seed_simulator": [236, 237, 240, 242], "seed_transpi": [236, 237, 240, 242], "adhoc_kernel": 236, "\u00e7a\u011fr\u0131labilir": 236, "ko\u015fullayarak": 236, "hesaplayarak": 236, "adhoc_sv\u00e7": 236, "adhoc_score": 236, "sa\u011flama": 236, "evvel": 236, "hesap": 236, "\u00e7izer": 236, "adhoc_matrix_train": 236, "adhoc_matrix_test": 236, "fig": [236, 238, 241], "axs": 236, "subplots": [236, 238, 241], "blues": 236, "set_tit": [236, 238], "reds": 236, "geni\u015fle": 236, "i\u00e7erir": 236, "qsvc_score": 236, "ara": 236, "b\u00fcy\u00fck": 236, "bo\u015fluk": 236, "olu\u015fturacak": 236, "denetimsiz": 236, "ihtiya\u00e7": 236, "yok": 236, "spektral": 236, "te": 236, "sa\u011flayabilir": 236, "kullanabilmek": 236, "precomputes": 236, "plots": 236, "mutual": 236, "prior": 236, "know": [236, 238], "adhoc_matrix": 236, "greens": 236, "adhoc_spectral": 236, "affinity": 236, "cluster_labels": 236, "fit_predict": 236, "cluster_scor": 236, "7287008798015754": 236, "kullanabile": 236, "ba\u015fka": 236, "i\u015f": [236, 237], "birka\u00e7": 236, "agglomerativ": 236, "gaussian": 236, "principal": 236, "analysis": 236, "2qiskit": [236, 240, 243], "2qiskit0": [236, 240], "2020": [236, 238, 240, 242], "msc": [236, 240], "1916": [236, 238, 240, 242], "64": [236, 238, 240, 242, 243], "amd64": [236, 238, 240, 242], "oswindowscpus4memory": [236, 240], "837730407714844fri": [236, 240], "dec": [236, 239, 240, 241], "03": [236, 240], "08": [236, 243], "gmt": [236, 238, 240, 242], "04_qgans_for_loading_random_distributions": 237, "\u00f6\u011frenmek": 237, "kuan": 237, "\u00fcret": 237, "kar\u015f\u0131t": 237, "big": 237, "g_": 237, "theta": 237, "p_": 237, "olu\u015fma": 237, "tan\u0131m": 237, "ldots": 237, "da\u011f\u0131l": 237, "yak": 237, "tan\u0131mlay": 237, "l\u00fctfe": 237, "lucchi": 237, "woerner": 237, "e\u011fitimli": 237, "kullan\u0131lacak": 237, "finansal": 237, "t\u00fcrev": 237, "fiyatland\u0131r\u0131lma": 237, "ili\u015fk": 237, "fina": 237, "main": [237, 243], "10_qgan_option_pricingi": 237, "__": 237, "71": 237, "inl": [237, 241], "quantumregister": 237, "twolocal": 237, "numpydiscriminator": 237, "veris": 237, "y\u00fckleme": 237, "gerekiyor": 237, "\u00e7\u00f6z\u00fcn\u00fcrl\u00fck": 237, "kullan\u0131la": 237, "maks": 237, "say\u0131s": 237, "ayarlan\u0131r": 237, "deviation": 237, "mu": 237, "sigma": 237, "real_da": 237, "lognormal": 237, "per": [237, 239], "q_k": 237, "\u00fcrete\u00e7": 237, "ay\u0131r\u0131\u00e7": 237, "d_": 237, "sinir": 237, "ak": 237, "olu\u015fur": 237, "uygulamak": 237, "d\u00fczenli": 237, "ala": 237, "r_y": 237, "uygulaya": 237, "derinlik": 237, "cz": 237, "kap\u0131": 237, "se\u00e7iyor": 237, "dikkatli": 237, "se\u00e7ilmel": 237, "dayana": 237, "kullanma": 237, "kurar": 237, "kurulmaya": 237, "ada": [237, 238, 239], "optimizasyo": 237, "g\u00fcncellenir": 237, "edi\u00e7": 237, "shortenedi": 237, "reducingi": 237, "100": [237, 238, 240, 241, 242], "entang": 237, "entangler_map": 237, "applyingi": [237, 242, 243], "hadamard\u0131": 237, "init_dist": 237, "redu\u00e7": 237, "he": 237, "total": [237, 242, 243], "notebook": 237, "increa": 237, "rand": [237, 239], "num_parameters_settap": 237, "addingi": 237, "infront": 237, "g_circuit": 237, "compose": [237, 238, 241], "front": 237, "set_generator": 237, "issue": 237, "temp": 237, "workaroundu": 237, "_generator": 237, "_free_parameters": 237, "sortedi": 237, "set_discriminator": 237, "diskriminat\u00f6r": 237, "\u00fcre": 237, "kay\u0131p": 237, "d\u00f6n\u00fc\u015f\u00fcml\u00fc": 237, "l_g": 237, "frac": 237, "limits_": 237, "l_d": 237, "toplu": 237, "g\u00f6stere": 237, "taraf": 237, "\u00fcretile": 237, "biline": 237, "ba\u015flang\u0131\u00e7": 237, "se\u00e7ilme": 237, "k\u0131s": 237, "tutulduk": 237, "unutmay": 237, "\u00f6n": 237, "olma": 237, "biraz": 237, "zama": 237, "alabilecek": 237, "fark": 237, "ol": 237, "params_d\u0131": 237, "03697158": 237, "61015372": 237, "48103428": 237, "1661673": 237, "20186384": 237, "08584337": 237, "params_g\u0131": 237, "95229918": 237, "9522102": 237, "55218478": 237, "64793094": 237, "loss_d": 237, "6925": 237, "loss_g": 237, "7246": 237, "rel_entr": 237, "107": 237, "\u015f": 237, "\u00fcreti\u00e7": 237, "ayr\u0131mc\u0131": 237, "evrim": 237, "g\u00f6rel": 237, "entropi": 237, "ilerleme": 237, "\u00e7iziyor": 237, "da\u011f\u0131t": 237, "k\u00fcm\u00fclatif": 237, "cdf": 237, "kar\u015f\u0131la\u015ft\u0131r\u0131r": 237, "progress": 237, "t_steps": 237, "arange": [237, 240], "g_loss": 237, "mediumvioletredi": 237, "linewidth": 237, "d_loss": 237, "rebeccapurple": 237, "best": 237, "mediumblue": 237, "lw": 237, "ls": 237, "log_normal": 237, "100000": [237, 243], "roundu": 237, "cumulativ": 237, "samples_gi": 237, "prob_g": 237, "get_output": 237, "10000": [237, 243], "flatte": [237, 238], "num_bins": 237, "bar": 237, "cums": 237, "royalblue": 237, "width": 237, "simulation": [237, 243], "deepskyblue": 237, "markersiz": 237, "xticks": 237, "softwareversionqiskitnoneterra0": 237, "dev0": 237, "346ffa8aer0": 237, "0ignis0": 237, "d6f1ad7aquanoneibm": 237, "q": [237, 238, 239], "10f19e0syste": 237, "feb": 237, "46": 237, "clang": [237, 239], "osdarwincpus6memory": 237, "0wed": [237, 239], "54": 237, "cest": [237, 243], "05_torch_connector": 238, "tutorial": [238, 239, 241, 242, 243], "demonstrates": 238, "natural": 238, "integration": 238, "workflow": 238, "makes": 238, "seamlessly": 238, "incorporatedi": 238, "architectures": 238, "jointly": 238, "additional": 238, "considerations": 238, "enablingi": 238, "development": 238, "novel": 238, "engi": 238, "autograd\u0131": 238, "link": 238, "illustrates": 238, "typical": 238, "cnn": 238, "architectur": 238, "classify": 238, "manner": 238, "necessary": [238, 243], "imports": [238, 241, 242, 243], "mseloss": [238, 239], "lbfgs": [238, 239], "generators": [238, 239], "declar": [238, 243], "qi": 238, "solve": 238, "illustra": [238, 241], "select": [238, 239, 241], "coordinates": [238, 239], "oplowqn": [238, 239], "convert": [238, 239, 240], "tensors": [238, 239], "y01_": [238, 239], "linkingi": 238, "relatively": 238, "straightforward\u0131": 238, "introducedi": [238, 243], "don": 238, "model1": [238, 239], "zz": [238, 239], "01256962": 238, "06653564": [238, 239], "04005302": [238, 239], "03752667": [238, 239], "06645196": [238, 239], "06095287": [238, 239], "02250432": [238, 239], "04233438": [238, 239], "3285": 238, "grad_fn": 238, "_torchnnfunctionbackward\u0131": 238, "choi": [238, 241], "crucial": 238, "determiningi": 238, "success": 238, "outcome": 238, "most": [238, 243], "famous": 238, "popu": 238, "sgd": 238, "adagrad\u0131": 238, "bfgs": 238, "numerical": 238, "advantage": [238, 243], "losses": 238, "clarification": 238, "thumb": [238, 242], "mse": 238, "recommendation": 238, "assumption": 238, "achievedi": 238, "becau": [238, 243], "section": [238, 242], "circuitqnns": 238, "wer": [238, 239, 242], "wonderingi": 238, "reaso": 238, "why": [238, 243], "despi": [238, 239], "norm": 238, "encourag\u0131": 238, "experiment": 238, "f_loss": 238, "reduction": [238, 239], "mode": 238, "stable": 238, "html": 238, "reevalua": 238, "times": 238, "closure": 238, "recompu": 238, "your": [238, 239, 243], "clear": 238, "zero_grad\u0131": 238, "ite": [238, 239], "step4": 238, "535646438598633": 238, "696760177612305": 238, "039228439331055": 238, "687908172607422": 238, "267208099365234": 238, "025373458862305": 238, "154708862304688": 238, "337854385375977": 238, "082578659057617": 238, "073287963867188": 238, "21839141845703": 238, "992582321166992": 238, "929339408874512": 238, "914533615112305": 238, "907636642456055": 238, "902364730834961": 238, "902134895324707": 238, "90211009979248": 238, "902111053466797": 238, "5356": 238, "mselossbackward0": 238, "sign": [238, 239], "circles": [238, 239], "attention": 238, "correct": 238, "setup": 238, "make": 238, "sure": 238, "changedi": 238, "provi": [238, 243], "desiredi": [238, 241], "info": 238, "plea": [238, 240, 242], "check": 238, "documentation": [238, 241], "reminder": 238, "model2": 238, "0364991": [238, 239], "0720495": 238, "06001836": 238, "09852755": 238, "choices": 238, "explainedi": [238, 243], "set_to_no": 238, "6925069093704224": 238, "6881508231163025": 238, "6516683101654053": 238, "6485998034477234": 238, "6394743919372559": 238, "7057444453239441": 238, "669085681438446": 238, "766187310218811": 238, "7188469171524048": 238, "7919709086418152": 238, "7598814964294434": 238, "7028256058692932": 238, "7486447095870972": 238, "6890242695808411": 238, "7760348916053772": 238, "7892935276031494": 238, "7556288242340088": 238, "7058126330375671": 238, "7203161716461182": 238, "7030722498893738": 238, "argmax": 238, "wave": [238, 239], "analogous": 238, "model3": 238, "947757720947266": 238, "948650360107422": 238, "952412605285645": 238, "37905153632164": 238, "24995625019073486": 238, "2483610212802887": 238, "24835753440856934": 238, "9478": 238, "leverag\u0131": [238, 243], "complex": 238, "imag\u0131": 238, "handwrit": 238, "digits": 238, "detailedi": 238, "explanation": 238, "textbook": 238, "relatedi": 238, "cat": 238, "no_grad\u0131": 238, "torchvision": 238, "transforms": 238, "conv2d": 238, "dropout2du": 238, "nllloss": 238, "maxpool2du": 238, "sequential": 238, "relu": 238, "functional": 238, "api": 238, "subset": 238, "shuffle": [238, 239, 240], "reproducibility": [238, 242, 243], "concentra": 238, "download\u0131": 238, "transform": [238, 242], "totensor": 238, "filter": 238, "originally": 238, "leavingi": 238, "idx": [238, 239], "filteredi": 238, "quick": 238, "visualization": [238, 240, 241], "consists": 238, "images": 238, "0s": 238, "1s": 238, "n_samples_show": 238, "data_iter": 238, "iter": 238, "axes": 238, "nrows": 238, "ncols": 238, "__next__": 238, "squeez": 238, "gray": 238, "set_xticks": 238, "set_yticks": 238, "x_test": [238, 239, 241], "test_loader": [238, 239], "initializingi": 238, "adequa": 238, "create_qn": [238, 242], "backprop": 238, "net": [238, 242], "__init__": [238, 239, 241], "conv1": 238, "kernel_siz": 238, "conv2": 238, "dropout": 238, "fc1": 238, "256": 238, "fc2": 238, "interval": 238, "fc3": 238, "max_pool2du": 238, "view": 238, "model4": 238, "lr": [238, 239], "001": 238, "loss_list": 238, "total_loss": 238, "batch_idx": 238, "0f": 238, "tloss": 238, "4f": [238, 243], "1630": 238, "5294": 238, "7855": 238, "9863": 238, "2257": 238, "60": 238, "4513": 238, "70": 238, "6758": 238, "80": [238, 242], "8832": 238, "90": 238, "1006": 238, "3061": 238, "converge": [238, 242], "iterations": [238, 241, 242], "neg": 238, "likelihoodu": 238, "now": [238, 242, 243], "ll": [238, 242], "follow": [238, 242], "recommendations": [238, 242], "state_dict": [238, 239, 242], "pt": [238, 242], "recreatingi": 238, "previously": [238, 242, 243], "vi\u00e7": 238, "sake": 238, "simplicity": 238, "way": [238, 239, 240, 242, 243], "above": [238, 240, 242], "qnn5": 238, "model5": 238, "load_state_dict": [238, 242], "keys": 238, "matchedi": 238, "successfully": [238, 239], "eval": 238, "pred": 238, "keep": [238, 243], "eq": 238, "view_as": 238, "taccuracy": 238, "1f": 238, "3585": 238, "break": 238, "able": [238, 239, 243], "goodu": [238, 243], "luck": 238, "3qiskit": [238, 242, 243], "3qiskit0": [238, 242, 243], "informationpytho": [238, 239, 241, 242, 243], "version3": [238, 239, 241, 242, 243], "9python": [238, 242], "compilerms\u00e7": [238, 242], "builddefault": [238, 239, 241, 242, 243], "11oswindowscpus4memory": [238, 242], "837730407714844wed": 238, "apr": [238, 242, 243], "2022": [238, 242, 243], "daylight": [238, 242], "page": [239, 240, 241, 242, 243], "06_torch_runt": 239, "introdu\u00e7": [239, 240, 243], "leverages": 239, "predictingi": 239, "significantly": 239, "faster": [239, 240], "is_tensor": 239, "purpose": 239, "torchdataset": 239, "style": 239, "__len__": 239, "__getitem__": 239, "tolist": 239, "y_i": 239, "train_set": 239, "train_loader1": 239, "wrap": 239, "usual": [239, 243], "optimizer1": 239, "loss_func1": 239, "servi\u00e7": 239, "load_account": 239, "get_provider": 239, "repla\u00e7": 239, "ibmq_qasm_simulator": 239, "configurations": 239, "torch_runtime_client": 239, "fit_result": 239, "queryingi": 239, "properties": 239, "ones": 239, "job_idi": 239, "execution_t": 239, "model_state_dict": 239, "c6sqc05a2crk6k574olgu": 239, "647154569625854": 239, "ordereddict": 239, "5758": 239, "_weights": 239, "query": 239, "train_history": 239, "dictionaries": 239, "forward_t": 239, "spent": 239, "seconds": 239, "backward_t": 239, "epoch_t": 239, "y_test": [239, 241], "test_set": 239, "c6sqc6la2crk6k574oo0": 239, "473742246627808": 239, "val_history": 239, "processes": 239, "predict_result": 239, "c6sqcclg2jd5ui6ctu60": 239, "5448770523071289": 239, "original": 239, "blue": [239, 242], "dots": [239, 242], "green": [239, 242], "scores": 239, "groundu": 239, "score_result": 239, "c6sqcfta2crk6k574ot0": 239, "6559648513793945": 239, "0004721035018463482": 239, "c6sqcj5a2crk6k574ougu": 239, "410197257995605": 239, "c6sqcsda2crk6k574p30": 239, "5784239768981934": 239, "y_check": 239, "c6sqcvta2crk6k574p4g": 239, "6043887138366699": 239, "offers": 239, "handle": 239, "complicatedi": 239, "high": 239, "flexibility": 239, "demonstratedi": 239, "snippet": [239, 242, 243], "before_train": 239, "before_epoch": 239, "before_step": 239, "train_step": 239, "after_step": 239, "global_step": 239, "after_epoch": 239, "after_train": 239, "torchtrainer": 239, "configi": 239, "describes": 239, "might": [239, 243], "useful": [239, 243], "max_epoch": 239, "log_periodu": 239, "loggingi": 239, "periodu": 239, "logs": 239, "train_logger": 239, "logger": 239, "similar": 239, "val_logger": 239, "thresholdu": 239, "terminatedi": 239, "stophook": 239, "loss_thresholdu": 239, "_loss_thresholdu": 239, "current_loss": 239, "stop": 239, "max_epochs": 239, "stop_hook": 239, "epoch_result": 239, "c6sqd35a2crk6k574p6g": 239, "7064104080200195": 239, "027795438258181093": 239, "interruptedi": 239, "1qiskit": [239, 241, 243], "5qiskit0": 239, "nature0": [239, 241], "6python": 239, "compilerclang\u0131": [239, 241, 243], "1200": 239, "09osdarwincpus8memory": 239, "jst": 239, "07_pegasos_qsv\u00e7": 240, "benefits": 240, "alternativ": 240, "paper": [240, 243], "home": 240, "ttic": 240, "edu": 240, "nati": 240, "publications": 240, "pegasosmpp": 240, "pdf": 240, "dual": 240, "trick": 240, "complexity": [240, 243], "pegasosqsv\u00e7": 240, "sufficiently": 240, "direct": 240, "replacement": 240, "let": [240, 242, 243], "make_blobs": 240, "centers": 240, "random_state": [240, 242], "ensur": [240, 243], "compatibility": 240, "split": [240, 242], "model_selection": [240, 242], "train_test_split": [240, 242], "preprocessingi": [240, 242], "minmaxsca": [240, 242], "feature_range": 240, "fit_transform": [240, 242], "train_siz": [240, 242], "tau": 240, "performedi": [240, 241], "last": 240, "hyperparameter": 240, "zfeaturemap": [240, 243], "pegasos_backendi": 240, "pretty": 240, "trains": 240, "afterwards": 240, "pegasos_scor": 240, "purposes": [240, 242, 243], "mesh": 240, "predefinedi": 240, "spans": 240, "minim": 240, "grid_step": 240, "grid_x": 240, "grid_y": 240, "meshgridi": 240, "coloringi": 240, "meshgrid_features": 240, "column_stack": 240, "ravel": 240, "meshgrid_colors": 240, "finally": [240, 242, 243], "colors": 240, "pcolormesh": 240, "shadingi": 240, "auto": 240, "08_quantum_kernel_trainer": 241, "basi\u00e7": 241, "qka": 241, "technique": 241, "iteratively": 241, "adapts": 241, "convergingi": 241, "preprint": 241, "covariant": 241, "group": 241, "quantumkerneltrainer": 241, "pylab": 241, "cm": 241, "pandas": 241, "pd": 241, "providers": 241, "aersimulator": 241, "circuit_drawer": 241, "spsa": 241, "qktcallback": 241, "wrapper": 241, "_da": 241, "x0": 241, "x1": 241, "x2": 241, "x3": 241, "x4": 241, "stepsiz": 241, "acceptedi": 241, "get_callback_da": 241, "clear_callback_da": 241, "ad_ho\u00e7": 241, "py": 241, "demonstra": 241, "encodes": 241, "rotational": 241, "rotate": 241, "amount": [241, 242], "fm0": 241, "fm1": 241, "composedi": 241, "holds": 241, "manages": 241, "selectingi": 241, "instantia": 241, "cb_qkt": 241, "spsa_opt": 241, "maxiter": [241, 242, 243], "learning_ra": 241, "perturbation": 241, "qkt": 241, "fields": 241, "optimal_parameters": 241, "pairs": 241, "optimal_point": 241, "optimal_value": 241, "optimizer_evals": 241, "optimizer_t": 241, "qka_results": 241, "parametervectorelement": 241, "2984045829959046": 241, "29840458": 241, "733763373742224": 241, "0x7fd7e864f100": 241, "labels_test": 241, "evalau": 241, "accuracy_test": 241, "balanced_accuracy_scor": 241, "y_true": 241, "y_pred": 241, "evolves": 241, "converges": 241, "reaches": 241, "final": [241, 243], "measur": [241, 243], "similarity": 241, "font": 241, "ax": 241, "set_xlabel": 241, "set_ylabel": 241, "get_cmap": 241, "bwr": 241, "tight_layout": 241, "10python": 241, "55osdarwincpus8memory": 241, "0mon": 241, "cst": 241, "09_saving_and_loadingi": 242, "ability": [242, 243], "especially": 242, "significant": 242, "investedi": 242, "res": 242, "cover": 242, "off": [242, 243], "heavily": 242, "cell": 242, "fix": [242, 243], "onehotencoder": 242, "simulators": 242, "approach": 242, "differe": [242, 243], "transformations": 242, "summingi": 242, "columns": 242, "num_features": 242, "scale": 242, "down": 242, "look": 242, "79067335": 242, "44566143": 242, "88072937": 242, "7126244": 242, "06741233": 242, "7770372": 242, "80422817": 242, "10351936": 242, "45754615": 242, "choo": 242, "employ": 242, "reshapedi": 242, "encoder": 242, "deci": 242, "plottingi": 242, "easier": 242, "parts": 242, "full": [242, 243], "once": 242, "verify": 242, "behaves": 242, "unseen": [242, 243], "looks": 242, "plot_dataset": 242, "solidi": 242, "objective_values": 242, "minor": 242, "tweaks": 242, "_": 242, "objective_value": 242, "stage1_le": 242, "stage1_x": 242, "stage1_y": 242, "stage2_le": 242, "stage2_x": 242, "stage2_y": 242, "orange": 242, "purple": 242, "manually": [242, 243], "original_optimizer": 242, "asarray": 242, "num_parameters": 242, "earlier": 242, "original_classifier": 242, "0x16ec7cdf488": 242, "performs": [242, 243], "extension": 242, "vqc_classifier": 242, "loaded_classifier": 242, "alter": 242, "again": 242, "finishedi": 242, "0x16ec827b848": 242, "9333333333333333": 242, "misclassifiedi": 242, "train_predicts": 242, "test_predicts": 242, "highlight": 242, "incorrectly": 242, "collections": 242, "pathcollection": 242, "0x16ec8906288": 242, "short": 242, "pseudo": 242, "idea": 242, "new_qnn": 242, "loaded_model": 242, "837730407714844tue": 242, "09": 242, "10_effective_dimension": 243, "localeffectivedimension": 243, "geometry": 243, "connect": 243, "notions": 243, "trainability": 243, "expressibility": 243, "generaliz": 243, "divingi": 243, "briefly": 243, "explain": 243, "what": 243, "relevant": 243, "share": 243, "goal": 243, "generalizingi": 243, "insights": 243, "findingi": 243, "metri\u00e7": 243, "assess": 243, "matter": 243, "authors": 243, "indicator": 243, "proposedi": 243, "capacity": 243, "actually": 243, "analyzedi": 243, "incorporates": 243, "focuses": 243, "expressiv": 243, "small": 243, "terms": 243, "practical": 243, "qui": 243, "conceptual": 243, "captures": 243, "sensitiv": 243, "changes": 243, "follows": 243, "pair": 243, "normalization": 243, "averagingi": 243, "dividingi": 243, "formul": 243, "fixedi": 243, "series": 243, "compare": 243, "sampledi": 243, "selection": 243, "global_edi": 243, "affects": 243, "ranges": 243, "5000": 243, "8000": 243, "40000": 243, "60000": 243, "150000": 243, "200000": 243, "500000": 243, "1000000": 243, "global_eff_dim_0": 243, "get_effective_dimension": 243, "practically": 243, "obtain": 243, "correlates": 243, "6657": 243, "7776": 243, "callingi": 243, "monitor": 243, "global_eff_dim_1": 243, "66565096": 243, "7133723": 243, "73782922": 243, "89963559": 243, "94632272": 243, "00280009": 243, "04530433": 243, "07408394": 243, "15786005": 243, "21349874": 243, "introduction": 243, "expressiveness": 243, "enforces": 243, "constraint": 243, "calculations": 243, "conceptually": 243, "rest": 243, "sharedi": 243, "effect": 243, "creatingi": 243, "3d": 243, "continue": 243, "proceedi": 243, "patient": 243, "observe": 243, "150": 243, "68": 243, "trained_weights": 243, "_fit_result": 243, "local_ed_trainedi": 243, "local_eff_dim_trainedi": 243, "79663244": 243, "80325759": 243, "80653351": 243, "82723511": 243, "83320702": 243, "84062917": 243, "84641928": 243, "85045673": 243, "86276589": 243, "87134912": 243, "local_ed_untrainedi": 243, "local_eff_dim_untrainedi": 243, "80896667": 243, "81612261": 243, "81966781": 243, "84219603": 243, "84864578": 243, "85651291": 243, "86249025": 243, "86656428": 243, "8785217": 243, "88651616": 243, "expect": 243, "decrea": 243, "lookingi": 243, "pick": 243, "enough": 243, "overfits": 243, "badly": 243, "certain": 243, "help": 243, "regulariz": 243, "action": 243, "inherently": 243, "reduces": 243, "logi\u00e7": 243, "initializedi": 243, "likely": 243, "produce": 243, "unnecessarily": 243, "implicit": 243, "inactiv": 243, "mind": 243, "though": 243, "intuition": 243, "happens": 243, "0python": 243, "nov": 243, "47osdarwincpus8memory": 243, "0tue": 243}, "objects": {"": [[0, 0, 0, "-", "qiskit_machine_learning"]], "qiskit_machine_learning": [[14, 1, 1, "", "QiskitMachineLearningError"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "connectors"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "kernels"], [7, 0, 0, "-", "neural_networks"], [8, 0, 0, "-", "runtime"], [9, 0, 0, "-", "utils"]], "qiskit_machine_learning.QiskitMachineLearningError": [[14, 2, 1, "", "with_traceback"]], "qiskit_machine_learning.algorithms": [[15, 3, 1, "", "BinaryObjectiveFunction"], [18, 3, 1, "", "DiscriminativeNetwork"], [24, 3, 1, "", "GenerativeNetwork"], [29, 3, 1, "", "MultiClassObjectiveFunction"], [32, 3, 1, "", "NeuralNetworkClassifier"], [36, 3, 1, "", "NeuralNetworkRegressor"], [40, 3, 1, "", "NumPyDiscriminator"], [48, 3, 1, "", "ObjectiveFunction"], [51, 3, 1, "", "OneHotObjectiveFunction"], [54, 3, 1, "", "PegasosQSVC"], [62, 3, 1, "", "PyTorchDiscriminator"], [71, 3, 1, "", "QGAN"], [88, 3, 1, "", "QSVC"], [90, 3, 1, "", "QSVR"], [92, 3, 1, "", "QuantumGenerator"], [101, 3, 1, "", "SerializableModelMixin"], [104, 3, 1, "", "TrainableModel"], [113, 3, 1, "", "VQC"], [119, 3, 1, "", "VQR"]], "qiskit_machine_learning.algorithms.BinaryObjectiveFunction": [[16, 2, 1, "", "gradient"], [17, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.DiscriminativeNetwork": [[19, 2, 1, "", "get_label"], [20, 2, 1, "", "loss"], [21, 2, 1, "", "save_model"], [22, 2, 1, "", "set_seed"], [23, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.GenerativeNetwork": [[25, 2, 1, "", "get_output"], [26, 2, 1, "", "loss"], [27, 4, 1, "", "parameter_values"], [28, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction": [[30, 2, 1, "", "gradient"], [31, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.NeuralNetworkClassifier": [[33, 2, 1, "", "fit"], [34, 2, 1, "", "predict"], [35, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.NeuralNetworkRegressor": [[37, 2, 1, "", "fit"], [38, 2, 1, "", "predict"], [39, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.NumPyDiscriminator": [[41, 4, 1, "", "discriminator_net"], [42, 2, 1, "", "get_label"], [43, 2, 1, "", "load_model"], [44, 2, 1, "", "loss"], [45, 2, 1, "", "save_model"], [46, 2, 1, "", "set_seed"], [47, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.ObjectiveFunction": [[49, 2, 1, "", "gradient"], [50, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.OneHotObjectiveFunction": [[52, 2, 1, "", "gradient"], [53, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.PegasosQSVC": [[55, 5, 1, "", "FITTED"], [56, 5, 1, "", "UNFITTED"], [57, 2, 1, "", "fit"], [58, 4, 1, "", "num_steps"], [59, 4, 1, "", "precomputed"], [60, 2, 1, "", "predict"], [61, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.PyTorchDiscriminator": [[63, 4, 1, "", "discriminator_net"], [64, 2, 1, "", "get_label"], [65, 2, 1, "", "gradient_penalty"], [66, 2, 1, "", "load_model"], [67, 2, 1, "", "loss"], [68, 2, 1, "", "save_model"], [69, 2, 1, "", "set_seed"], [70, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.QGAN": [[72, 4, 1, "", "backend"], [73, 4, 1, "", "d_loss"], [74, 4, 1, "", "discriminator"], [75, 4, 1, "", "g_loss"], [76, 4, 1, "", "generator"], [77, 2, 1, "", "get_rel_entr"], [78, 4, 1, "", "quantum_instance"], [79, 4, 1, "", "random"], [80, 4, 1, "", "rel_entr"], [81, 2, 1, "", "run"], [82, 4, 1, "", "seed"], [83, 2, 1, "", "set_backend"], [84, 2, 1, "", "set_discriminator"], [85, 2, 1, "", "set_generator"], [86, 4, 1, "", "tol_rel_ent"], [87, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.QSVC": [[89, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.QSVR": [[91, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.algorithms.QuantumGenerator": [[93, 2, 1, "", "construct_circuit"], [94, 4, 1, "", "discriminator"], [95, 2, 1, "", "get_output"], [96, 2, 1, "", "loss"], [97, 4, 1, "", "optimizer"], [98, 4, 1, "", "parameter_values"], [99, 4, 1, "", "seed"], [100, 2, 1, "", "train"]], "qiskit_machine_learning.algorithms.SerializableModelMixin": [[102, 2, 1, "", "load"], [103, 2, 1, "", "save"]], "qiskit_machine_learning.algorithms.TrainableModel": [[105, 2, 1, "", "fit"], [106, 4, 1, "", "initial_point"], [107, 4, 1, "", "loss"], [108, 4, 1, "", "neural_network"], [109, 4, 1, "", "optimizer"], [110, 2, 1, "", "predict"], [111, 2, 1, "", "score"], [112, 4, 1, "", "warm_start"]], "qiskit_machine_learning.algorithms.VQC": [[114, 4, 1, "", "ansatz"], [115, 4, 1, "", "circuit"], [116, 4, 1, "", "feature_map"], [117, 2, 1, "", "fit"], [118, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.algorithms.VQR": [[120, 4, 1, "", "ansatz"], [121, 4, 1, "", "feature_map"], [122, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.circuit": [[2, 0, 0, "-", "library"]], "qiskit_machine_learning.circuit.library": [[123, 3, 1, "", "RawFeatureVector"]], "qiskit_machine_learning.circuit.library.RawFeatureVector": [[124, 4, 1, "", "feature_dimension"], [125, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.connectors": [[126, 3, 1, "", "TorchConnector"]], "qiskit_machine_learning.connectors.TorchConnector": [[127, 2, 1, "", "forward"], [128, 4, 1, "", "neural_network"], [129, 4, 1, "", "sparse"], [130, 4, 1, "", "weight"]], "qiskit_machine_learning.datasets": [[131, 6, 1, "", "ad_hoc_data"], [132, 6, 1, "", "breast_cancer"], [133, 6, 1, "", "digits"], [134, 6, 1, "", "gaussian"], [135, 6, 1, "", "iris"], [136, 6, 1, "", "wine"]], "qiskit_machine_learning.kernels": [[137, 3, 1, "", "QuantumKernel"], [6, 0, 0, "-", "algorithms"]], "qiskit_machine_learning.kernels.QuantumKernel": [[138, 2, 1, "", "assign_user_parameters"], [139, 2, 1, "", "bind_user_parameters"], [140, 2, 1, "", "construct_circuit"], [141, 2, 1, "", "evaluate"], [142, 4, 1, "", "feature_map"], [143, 2, 1, "", "get_unbound_user_parameters"], [144, 4, 1, "", "quantum_instance"], [145, 4, 1, "", "unbound_feature_map"], [146, 4, 1, "", "user_param_binds"], [147, 4, 1, "", "user_parameters"]], "qiskit_machine_learning.kernels.algorithms": [[148, 3, 1, "", "QuantumKernelTrainer"], [154, 3, 1, "", "QuantumKernelTrainerResult"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer": [[149, 2, 1, "", "fit"], [150, 4, 1, "", "initial_point"], [151, 4, 1, "", "loss"], [152, 4, 1, "", "optimizer"], [153, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult": [[155, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.neural_networks": [[156, 3, 1, "", "CircuitQNN"], [164, 3, 1, "", "EffectiveDimension"], [171, 3, 1, "", "LocalEffectiveDimension"], [173, 3, 1, "", "NeuralNetwork"], [181, 3, 1, "", "OpflowQNN"], [185, 3, 1, "", "SamplingNeuralNetwork"], [190, 3, 1, "", "TwoLayerQNN"]], "qiskit_machine_learning.neural_networks.CircuitQNN": [[157, 4, 1, "", "circuit"], [158, 4, 1, "", "input_gradients"], [159, 4, 1, "", "input_params"], [160, 4, 1, "", "interpret"], [161, 4, 1, "", "quantum_instance"], [162, 2, 1, "", "set_interpret"], [163, 4, 1, "", "weight_params"]], "qiskit_machine_learning.neural_networks.EffectiveDimension": [[165, 2, 1, "", "get_effective_dimension"], [166, 2, 1, "", "get_fisher_information"], [167, 2, 1, "", "get_normalized_fisher"], [168, 4, 1, "", "input_samples"], [169, 2, 1, "", "run_monte_carlo"], [170, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.LocalEffectiveDimension": [[172, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.NeuralNetwork": [[174, 2, 1, "", "backward"], [175, 2, 1, "", "forward"], [176, 4, 1, "", "input_gradients"], [177, 4, 1, "", "num_inputs"], [178, 4, 1, "", "num_weights"], [179, 4, 1, "", "output_shape"], [180, 4, 1, "", "sparse"]], "qiskit_machine_learning.neural_networks.OpflowQNN": [[182, 4, 1, "", "input_gradients"], [183, 4, 1, "", "operator"], [184, 4, 1, "", "quantum_instance"]], "qiskit_machine_learning.neural_networks.SamplingNeuralNetwork": [[186, 2, 1, "", "probabilities"], [187, 2, 1, "", "probability_gradients"], [188, 2, 1, "", "sample"], [189, 4, 1, "", "sampling"]], "qiskit_machine_learning.neural_networks.TwoLayerQNN": [[191, 4, 1, "", "ansatz"], [192, 4, 1, "", "circuit"], [193, 4, 1, "", "feature_map"], [194, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.runtime": [[195, 3, 1, "", "TorchRuntimeClient"], [205, 3, 1, "", "TorchRuntimeResult"]], "qiskit_machine_learning.runtime.TorchRuntimeClient": [[196, 2, 1, "", "fit"], [197, 4, 1, "", "loss_func"], [198, 4, 1, "", "measurement_error_mitigation"], [199, 4, 1, "", "model"], [200, 4, 1, "", "optimizer"], [201, 2, 1, "", "predict"], [202, 4, 1, "", "provider"], [203, 2, 1, "", "score"], [204, 4, 1, "", "shots"]], "qiskit_machine_learning.runtime.TorchRuntimeResult": [[206, 4, 1, "", "execution_time"], [207, 4, 1, "", "job_id"], [208, 4, 1, "", "model_state_dict"], [209, 4, 1, "", "prediction"], [210, 4, 1, "", "score"], [211, 4, 1, "", "train_history"], [212, 4, 1, "", "val_history"]], "qiskit_machine_learning.utils": [[10, 0, 0, "-", "loss_functions"]], "qiskit_machine_learning.utils.loss_functions": [[213, 3, 1, "", "CrossEntropyLoss"], [216, 3, 1, "", "CrossEntropySigmoidLoss"], [219, 3, 1, "", "KernelLoss"], [222, 3, 1, "", "L1Loss"], [225, 3, 1, "", "L2Loss"], [228, 3, 1, "", "Loss"], [232, 3, 1, "", "SVCLoss"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss": [[214, 2, 1, "", "evaluate"], [215, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropySigmoidLoss": [[217, 2, 1, "", "evaluate"], [218, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.KernelLoss": [[220, 2, 1, "", "__call__"], [221, 2, 1, "", "evaluate"]], "qiskit_machine_learning.utils.loss_functions.L1Loss": [[223, 2, 1, "", "evaluate"], [224, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.L2Loss": [[226, 2, 1, "", "evaluate"], [227, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.Loss": [[229, 2, 1, "", "__call__"], [230, 2, 1, "", "evaluate"], [231, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.SVCLoss": [[233, 2, 1, "", "evaluate"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python mod\u00fcl\u00fc"], "1": ["py", "exception", "Python \u00f6zel durum"], "2": ["py", "method", "Python y\u00f6ntemi"], "3": ["py", "class", "Python s\u0131n\u0131f\u0131"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python \u00f6zniteli\u011fi"], "6": ["py", "function", "Python i\u015flevi"]}, "titleterms": {"qiskit": [0, 12, 241, 242, 243], "mach": [0, 1, 2, 12, 241, 242], "learningi": [0, 1, 2, 12, 241, 242], "api": 0, "refere": 0, "s": 0, "module": 0, "qiskit_machine_learningi": [0, 2, 3, 4, 7, 8, 9, 10], "submodules": [0, 5], "base": [1, 7, 10], "classes": [1, 7], "objectiv": [1, 17, 31, 50, 53], "functions": [1, 10], "algorithms": [1, 6], "classifiers": 1, "regressors": 1, "distribution": 1, "learners": 1, "circuit": [2, 115, 157, 192], "library": 2, "for": [2, 238, 241], "applications": [2, 241], "featur": [2, 241], "maps": 2, "connectors": 3, "datasets": 4, "quan": [5, 6, 240, 241], "kernels": 5, "kernel": [6, 241], "neural": [7, 243], "networks": [7, 243], "neural_networks": 7, "network": 7, "metrics": 7, "runt": [8, 239], "utilities": 9, "utils": [9, 10], "loss": [10, 20, 26, 44, 67, 96, 107, 151, 228, 229, 230, 231, 238], "loss_functions": 10, "function": [10, 238], "class": [10, 241], "ba\u015f": 11, "kurul": 11, "i\u0307stek": 11, "ba\u011fl\u0131": 11, "y\u00fckleme": 11, "ba\u015flama": 11, "haz\u0131r": 11, "m\u0131": 11, "overview": 12, "next": 12, "steps": 12, "relea": 13, "notes": 13, "qiskitmachinelearningerror": 14, "binaryobjectivefunction": [15, 16, 17], "gradient": [16, 30, 49, 52, 215, 218, 224, 227, 231], "discriminativenetwork": [18, 19, 20, 21, 22, 23], "get_label": [19, 42, 64], "save_model": [21, 45, 68], "set_seedi": [22, 46, 69], "train": [23, 28, 47, 70, 87, 100, 238, 239, 241, 242, 243], "generativenetwork": [24, 25, 26, 27, 28], "get_output": [25, 95], "parameter_values": [27, 98], "multiclassobjectivefunction": [29, 30, 31], "neuralnetworkclassifier": [32, 33, 34, 35], "fit": [33, 37, 57, 105, 117, 149, 196, 239, 241], "predict": [34, 38, 60, 110, 201, 239], "score": [35, 39, 111, 203, 210, 239], "neuralnetworkregressor": [36, 37, 38, 39], "numpydiscriminator": [40, 41, 42, 43, 44, 45, 46, 47], "discriminator_net": [41, 63], "load_model": [43, 66], "objectivefunction": [48, 49, 50], "onehotobjectivefunction": [51, 52, 53], "pegasosqsv\u00e7": [54, 55, 56, 57, 58, 59, 60, 61], "fittedi": 55, "unfittedi": 56, "num_steps": 58, "precomputedi": 59, "quantum_kernel": [61, 89, 91, 153, 155], "pytorchdiscriminator": [62, 63, 64, 65, 66, 67, 68, 69, 70], "gradient_penalty": 65, "qgan": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 237], "backendi": 72, "d_loss": 73, "discriminator": [74, 94], "g_loss": 75, "generator": 76, "get_rel_entr": 77, "quantum_insta": [78, 144, 161, 184], "rando": 79, "rel_entr": 80, "run": 81, "seedi": [82, 99], "set_backendi": 83, "set_discriminator": 84, "set_generator": 85, "tol_rel_ent": 86, "qsvc": [88, 89], "qsvr": [90, 91], "quantumgenerator": [92, 93, 94, 95, 96, 97, 98, 99, 100], "construct_circuit": [93, 140], "optimizer": [97, 109, 152, 200, 238, 241], "serializablemodelmix": [101, 102, 103], "load\u0131": [102, 242], "save": [103, 242], "trainablemodel": [104, 105, 106, 107, 108, 109, 110, 111, 112], "initial_point": [106, 150], "neural_network": [108, 128], "warm_start": 112, "vqc": [113, 114, 115, 116, 117, 118, 235], "ansatz": [114, 120, 191], "feature_map": [116, 121, 142, 193], "num_qubits": [118, 122, 125, 194], "vqr": [119, 120, 121, 122, 235], "rawfeaturevector": [123, 124, 125], "feature_dimension": 124, "torchconnector": [126, 127, 128, 129, 130], "forward\u0131": [127, 175], "spar": [129, 180], "weight": 130, "ad_hoc_da": 131, "breast_cancer": 132, "digits": 133, "gaussian": 134, "iris": 135, "w": 136, "quantumkernel": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "assign_user_parameters": 138, "bind_user_parameters": 139, "evalua": [141, 214, 217, 221, 223, 226, 230, 233], "get_unbound_user_parameters": 143, "unbound_feature_map": 145, "user_param_binds": 146, "user_parameters": 147, "quantumkerneltrainer": [148, 149, 150, 151, 152, 153], "quantumkerneltrainerresult": [154, 155], "circuitqn": [156, 157, 158, 159, 160, 161, 162, 163, 234, 235, 238, 243], "input_gradients": [158, 176, 182], "input_params": 159, "interpret": 160, "set_interpret": 162, "weight_params": 163, "effectivedimension": [164, 165, 166, 167, 168, 169, 170], "get_effective_dimension": 165, "get_fisher_information": 166, "get_normalized_fisher": 167, "input_samples": 168, "run_monte_carlo": 169, "weight_samples": [170, 172], "localeffectivedimension": [171, 172], "neuralnetwork": [173, 174, 175, 176, 177, 178, 179, 180, 234], "backward\u0131": 174, "num_inputs": 177, "num_weights": 178, "output_shape": 179, "opflowqn": [181, 182, 183, 184, 234, 235, 238], "operator": 183, "samplingneuralnetwork": [185, 186, 187, 188, 189], "probabilities": 186, "probability_gradients": 187, "sample": 188, "samplingi": 189, "twolayerqn": [190, 191, 192, 193, 194, 234], "torchruntimeclient": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "loss_fun\u00e7": 197, "measurement_error_mitigation": 198, "model": [199, 238, 239, 241, 242], "provider": 202, "shots": 204, "torchruntimeresult": [205, 206, 207, 208, 209, 210, 211, 212], "execution_t": 206, "job_idi": 207, "model_state_dict": 208, "prediction": [209, 239], "train_history": 211, "val_history": 212, "crossentropyloss": [213, 214, 215], "crossentropysigmoidloss": [216, 217, 218], "kernelloss": [219, 220, 221], "__call__": [220, 229], "l1loss": [222, 223, 224], "l2loss": [225, 226, 227], "svcloss": [232, 233], "kuan": [234, 235, 236], "sinir": 234, "ak": 234, "1": [234, 238, 239, 242, 243], "2": [234, 238, 239, 242, 243], "3": [234, 238, 239, 242, 243], "4": [234, 238, 242, 243], "\u00e7\u0131k": 234, "seyrek": 234, "tamsa": 234, "olas\u0131l\u0131k": 234, "yok": 234, "e\u015flik": 234, "\u00f6rnek": 234, "sinirsel": 235, "a\u011f": 235, "s\u0131n\u0131fland\u0131r\u0131c\u0131s": 235, "ve": [235, 237], "regres\u00f6r": 235, "s\u0131n\u0131fland\u0131rma": [235, 236, 238], "il": 235, "de\u011fi\u015fimsel": 235, "gerile": [235, 238], "regresyo": [235, 238], "varyasyonel": 235, "\u00e7ekirdek": 236, "mak": [236, 244], "\u00f6\u011fren": [236, 244], "k\u00fcmelemek": 236, "rastgel": 237, "da\u011f\u0131t\u0131m": 237, "y\u00fcklemek": 237, "i\u00e7": 237, "lar": 237, "\u00e7al\u0131\u015ft\u0131rma": 237, "veri": 237, "y\u00fcklenmes": 237, "\u0131": 237, "ba\u015flatma": 237, "e\u011fitim": 237, "\u00e7al\u0131\u015ft\u0131r": 237, "e\u011fit": 237, "i\u0307lerleyi\u015f": 237, "sonu\u00e7": 237, "torch": [238, 239], "connector": 238, "and": [238, 241, 242, 243], "hybrid": [238, 242], "qnns": 238, "i\u0307\u00e7erik": 238, "part": 238, "simple": 238, "classification": [238, 239], "regression": [238, 239], "a": [238, 239, 241, 242], "with": [238, 239], "pytorch": [238, 242], "b": 238, "mnist": 238, "step": 238, "definingi": 238, "da": 238, "loaders": 238, "test": [238, 241], "the": [238, 239, 241, 243], "qnn": [238, 243], "trainingi": [238, 239, 241, 242], "evaluation": 238, "call": 239, "to": 239, "validation": 239, "perform": 239, "calculate": 239, "how": 239, "use": 239, "hooks": 239, "in": 239, "pegasos": 240, "support": 240, "vector": 240, "classifier": 240, "import": 241, "local": [241, 243], "external": 241, "packages": 241, "def": [241, 243], "callback": 241, "our": 241, "prepar": [241, 242], "dataset": [241, 242, 243], "map": 241, "set": [241, 243], "up": [241, 243], "trainer": 241, "visualiz": 241, "process": 241, "savingi": 242, "loadingi": 242, "models": 242, "continuous": 242, "it": 242, "continue": 242, "effectiv": 243, "dimension": 243, "of": 243, "global": 243, "vs": 243, "algorith": 243, "basi\u00e7": 243, "example": 243, "calculation": 243, "compute": 243, "trainedi": 243, "untrainedi": 243, "5": 243, "plot": 243, "analyze": 243, "results": 243, "e\u011fitsel": 244}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 56}})