Search.setIndex({"docnames": ["apidocs/qiskit_optimization", "apidocs/qiskit_optimization.algorithms", "apidocs/qiskit_optimization.applications", "apidocs/qiskit_optimization.converters", "apidocs/qiskit_optimization.problems", "apidocs/qiskit_optimization.runtime", "apidocs/qiskit_optimization.translators", "getting_started", "index", "release_notes", "stubs/qiskit_optimization.INFINITY", "stubs/qiskit_optimization.QiskitOptimizationError", "stubs/qiskit_optimization.QuadraticProgram", "stubs/qiskit_optimization.QuadraticProgram.binary_var", "stubs/qiskit_optimization.QuadraticProgram.binary_var_dict", "stubs/qiskit_optimization.QuadraticProgram.binary_var_list", "stubs/qiskit_optimization.QuadraticProgram.clear", "stubs/qiskit_optimization.QuadraticProgram.continuous_var", "stubs/qiskit_optimization.QuadraticProgram.continuous_var_dict", "stubs/qiskit_optimization.QuadraticProgram.continuous_var_list", "stubs/qiskit_optimization.QuadraticProgram.export_as_lp_string", "stubs/qiskit_optimization.QuadraticProgram.from_ising", "stubs/qiskit_optimization.QuadraticProgram.get_feasibility_info", "stubs/qiskit_optimization.QuadraticProgram.get_linear_constraint", "stubs/qiskit_optimization.QuadraticProgram.get_num_binary_vars", "stubs/qiskit_optimization.QuadraticProgram.get_num_continuous_vars", "stubs/qiskit_optimization.QuadraticProgram.get_num_integer_vars", "stubs/qiskit_optimization.QuadraticProgram.get_num_linear_constraints", "stubs/qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints", "stubs/qiskit_optimization.QuadraticProgram.get_num_vars", "stubs/qiskit_optimization.QuadraticProgram.get_quadratic_constraint", "stubs/qiskit_optimization.QuadraticProgram.get_variable", "stubs/qiskit_optimization.QuadraticProgram.integer_var", "stubs/qiskit_optimization.QuadraticProgram.integer_var_dict", "stubs/qiskit_optimization.QuadraticProgram.integer_var_list", "stubs/qiskit_optimization.QuadraticProgram.is_feasible", "stubs/qiskit_optimization.QuadraticProgram.linear_constraint", "stubs/qiskit_optimization.QuadraticProgram.linear_constraints", "stubs/qiskit_optimization.QuadraticProgram.linear_constraints_index", "stubs/qiskit_optimization.QuadraticProgram.maximize", "stubs/qiskit_optimization.QuadraticProgram.minimize", "stubs/qiskit_optimization.QuadraticProgram.name", "stubs/qiskit_optimization.QuadraticProgram.objective", "stubs/qiskit_optimization.QuadraticProgram.prettyprint", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraint", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints_index", "stubs/qiskit_optimization.QuadraticProgram.read_from_lp_file", "stubs/qiskit_optimization.QuadraticProgram.remove_linear_constraint", "stubs/qiskit_optimization.QuadraticProgram.remove_quadratic_constraint", "stubs/qiskit_optimization.QuadraticProgram.status", "stubs/qiskit_optimization.QuadraticProgram.substitute_variables", "stubs/qiskit_optimization.QuadraticProgram.to_ising", "stubs/qiskit_optimization.QuadraticProgram.variables", "stubs/qiskit_optimization.QuadraticProgram.variables_index", "stubs/qiskit_optimization.QuadraticProgram.write_to_lp_file", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.state", "stubs/qiskit_optimization.algorithms.ADMMOptimizer", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.parameters", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.solve", "stubs/qiskit_optimization.algorithms.ADMMParameters", "stubs/qiskit_optimization.algorithms.ADMMState", "stubs/qiskit_optimization.algorithms.BaseAggregator", "stubs/qiskit_optimization.algorithms.BaseAggregator.aggregate", "stubs/qiskit_optimization.algorithms.CobylaOptimizer", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.solve", "stubs/qiskit_optimization.algorithms.CplexOptimizer", "stubs/qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters", "stubs/qiskit_optimization.algorithms.CplexOptimizer.disp", "stubs/qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed", "stubs/qiskit_optimization.algorithms.CplexOptimizer.solve", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.threshold", "stubs/qiskit_optimization.algorithms.GroverOptimizer", "stubs/qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.GroverOptimizer.quantum_instance", "stubs/qiskit_optimization.algorithms.GroverOptimizer.solve", "stubs/qiskit_optimization.algorithms.GurobiOptimizer", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.disp", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.solve", "stubs/qiskit_optimization.algorithms.IntermediateResult", "stubs/qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS", "stubs/qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION", "stubs/qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS", "stubs/qiskit_optimization.algorithms.MeanAggregator", "stubs/qiskit_optimization.algorithms.MeanAggregator.aggregate", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.solve", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.clip", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.trials", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.solve", "stubs/qiskit_optimization.algorithms.OptimizationResult", "stubs/qiskit_optimization.algorithms.OptimizationResult.__getitem__", "stubs/qiskit_optimization.algorithms.OptimizationResult.fval", "stubs/qiskit_optimization.algorithms.OptimizationResult.get_correlations", "stubs/qiskit_optimization.algorithms.OptimizationResult.prettyprint", "stubs/qiskit_optimization.algorithms.OptimizationResult.raw_results", "stubs/qiskit_optimization.algorithms.OptimizationResult.samples", "stubs/qiskit_optimization.algorithms.OptimizationResult.status", "stubs/qiskit_optimization.algorithms.OptimizationResult.variable_names", "stubs/qiskit_optimization.algorithms.OptimizationResult.variables", "stubs/qiskit_optimization.algorithms.OptimizationResult.variables_dict", "stubs/qiskit_optimization.algorithms.OptimizationResult.x", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.fx", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.imode", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.its", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.smode", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.solve", "stubs/qiskit_optimization.algorithms.SolutionSample", "stubs/qiskit_optimization.algorithms.SolutionSample.fval", "stubs/qiskit_optimization.algorithms.SolutionSample.probability", "stubs/qiskit_optimization.algorithms.SolutionSample.status", "stubs/qiskit_optimization.algorithms.SolutionSample.x", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve", "stubs/qiskit_optimization.applications.BinPacking", "stubs/qiskit_optimization.applications.BinPacking.get_figure", "stubs/qiskit_optimization.applications.BinPacking.interpret", "stubs/qiskit_optimization.applications.BinPacking.to_quadratic_program", "stubs/qiskit_optimization.applications.Clique", "stubs/qiskit_optimization.applications.Clique.interpret", "stubs/qiskit_optimization.applications.Clique.size", "stubs/qiskit_optimization.applications.Clique.to_quadratic_program", "stubs/qiskit_optimization.applications.ExactCover", "stubs/qiskit_optimization.applications.ExactCover.interpret", "stubs/qiskit_optimization.applications.ExactCover.to_quadratic_program", "stubs/qiskit_optimization.applications.GraphOptimizationApplication", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.draw", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.graph", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.random_graph", "stubs/qiskit_optimization.applications.GraphPartition", "stubs/qiskit_optimization.applications.GraphPartition.interpret", "stubs/qiskit_optimization.applications.GraphPartition.to_quadratic_program", "stubs/qiskit_optimization.applications.Knapsack", "stubs/qiskit_optimization.applications.Knapsack.interpret", "stubs/qiskit_optimization.applications.Knapsack.max_weight", "stubs/qiskit_optimization.applications.Knapsack.to_quadratic_program", "stubs/qiskit_optimization.applications.Maxcut", "stubs/qiskit_optimization.applications.Maxcut.get_gset_result", "stubs/qiskit_optimization.applications.Maxcut.interpret", "stubs/qiskit_optimization.applications.Maxcut.parse_gset_format", "stubs/qiskit_optimization.applications.Maxcut.to_quadratic_program", "stubs/qiskit_optimization.applications.NumberPartition", "stubs/qiskit_optimization.applications.NumberPartition.interpret", "stubs/qiskit_optimization.applications.NumberPartition.to_quadratic_program", "stubs/qiskit_optimization.applications.OptimizationApplication", "stubs/qiskit_optimization.applications.OptimizationApplication.interpret", "stubs/qiskit_optimization.applications.OptimizationApplication.sample_most_likely", "stubs/qiskit_optimization.applications.OptimizationApplication.to_quadratic_program", "stubs/qiskit_optimization.applications.SKModel", "stubs/qiskit_optimization.applications.SKModel.disorder", "stubs/qiskit_optimization.applications.SKModel.graph", "stubs/qiskit_optimization.applications.SKModel.interpret", "stubs/qiskit_optimization.applications.SKModel.num_sites", "stubs/qiskit_optimization.applications.SKModel.to_quadratic_program", "stubs/qiskit_optimization.applications.SetPacking", "stubs/qiskit_optimization.applications.SetPacking.interpret", "stubs/qiskit_optimization.applications.SetPacking.to_quadratic_program", "stubs/qiskit_optimization.applications.StableSet", "stubs/qiskit_optimization.applications.StableSet.interpret", "stubs/qiskit_optimization.applications.StableSet.to_quadratic_program", "stubs/qiskit_optimization.applications.Tsp", "stubs/qiskit_optimization.applications.Tsp.create_random_instance", "stubs/qiskit_optimization.applications.Tsp.interpret", "stubs/qiskit_optimization.applications.Tsp.parse_tsplib_format", "stubs/qiskit_optimization.applications.Tsp.to_quadratic_program", "stubs/qiskit_optimization.applications.Tsp.tsp_value", "stubs/qiskit_optimization.applications.VehicleRouting", "stubs/qiskit_optimization.applications.VehicleRouting.create_random_instance", "stubs/qiskit_optimization.applications.VehicleRouting.depot", "stubs/qiskit_optimization.applications.VehicleRouting.interpret", "stubs/qiskit_optimization.applications.VehicleRouting.num_vehicles", "stubs/qiskit_optimization.applications.VehicleRouting.to_quadratic_program", "stubs/qiskit_optimization.applications.VertexCover", "stubs/qiskit_optimization.applications.VertexCover.interpret", "stubs/qiskit_optimization.applications.VertexCover.to_quadratic_program", "stubs/qiskit_optimization.converters.InequalityToEquality", "stubs/qiskit_optimization.converters.InequalityToEquality.convert", "stubs/qiskit_optimization.converters.InequalityToEquality.interpret", "stubs/qiskit_optimization.converters.InequalityToEquality.mode", "stubs/qiskit_optimization.converters.IntegerToBinary", "stubs/qiskit_optimization.converters.IntegerToBinary.convert", "stubs/qiskit_optimization.converters.IntegerToBinary.interpret", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.convert", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.interpret", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.penalty", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.convert", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.interpret", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.penalty", "stubs/qiskit_optimization.converters.MaximizeToMinimize", "stubs/qiskit_optimization.converters.MinimizeToMaximize", "stubs/qiskit_optimization.converters.QuadraticProgramConverter", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.convert", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.interpret", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.convert", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.interpret", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.penalty", "stubs/qiskit_optimization.problems.Constraint", "stubs/qiskit_optimization.problems.Constraint.evaluate", "stubs/qiskit_optimization.problems.Constraint.name", "stubs/qiskit_optimization.problems.Constraint.rhs", "stubs/qiskit_optimization.problems.Constraint.sense", "stubs/qiskit_optimization.problems.LinearConstraint", "stubs/qiskit_optimization.problems.LinearConstraint.evaluate", "stubs/qiskit_optimization.problems.LinearConstraint.linear", "stubs/qiskit_optimization.problems.LinearExpression", "stubs/qiskit_optimization.problems.LinearExpression.__getitem__", "stubs/qiskit_optimization.problems.LinearExpression.bounds", "stubs/qiskit_optimization.problems.LinearExpression.coefficients", "stubs/qiskit_optimization.problems.LinearExpression.evaluate", "stubs/qiskit_optimization.problems.LinearExpression.evaluate_gradient", "stubs/qiskit_optimization.problems.LinearExpression.to_array", "stubs/qiskit_optimization.problems.LinearExpression.to_dict", "stubs/qiskit_optimization.problems.QuadraticConstraint", "stubs/qiskit_optimization.problems.QuadraticConstraint.evaluate", "stubs/qiskit_optimization.problems.QuadraticConstraint.linear", "stubs/qiskit_optimization.problems.QuadraticConstraint.quadratic", "stubs/qiskit_optimization.problems.QuadraticExpression", "stubs/qiskit_optimization.problems.QuadraticExpression.__getitem__", "stubs/qiskit_optimization.problems.QuadraticExpression.bounds", "stubs/qiskit_optimization.problems.QuadraticExpression.coefficients", "stubs/qiskit_optimization.problems.QuadraticExpression.evaluate", "stubs/qiskit_optimization.problems.QuadraticExpression.evaluate_gradient", "stubs/qiskit_optimization.problems.QuadraticExpression.to_array", "stubs/qiskit_optimization.problems.QuadraticExpression.to_dict", "stubs/qiskit_optimization.problems.QuadraticObjective", "stubs/qiskit_optimization.problems.QuadraticObjective.constant", "stubs/qiskit_optimization.problems.QuadraticObjective.evaluate", "stubs/qiskit_optimization.problems.QuadraticObjective.evaluate_gradient", "stubs/qiskit_optimization.problems.QuadraticObjective.linear", "stubs/qiskit_optimization.problems.QuadraticObjective.quadratic", "stubs/qiskit_optimization.problems.QuadraticObjective.sense", "stubs/qiskit_optimization.problems.QuadraticProgramElement", "stubs/qiskit_optimization.problems.QuadraticProgramElement.quadratic_program", "stubs/qiskit_optimization.problems.Variable", "stubs/qiskit_optimization.problems.Variable.as_tuple", "stubs/qiskit_optimization.problems.Variable.lowerbound", "stubs/qiskit_optimization.problems.Variable.name", "stubs/qiskit_optimization.problems.Variable.upperbound", "stubs/qiskit_optimization.problems.Variable.vartype", "stubs/qiskit_optimization.runtime.QAOAClient", "stubs/qiskit_optimization.runtime.QAOAClient.alpha", "stubs/qiskit_optimization.runtime.QAOAClient.ansatz", "stubs/qiskit_optimization.runtime.QAOAClient.initial_state", "stubs/qiskit_optimization.runtime.QAOAClient.mixer", "stubs/qiskit_optimization.runtime.QAOAClient.optimization_level", "stubs/qiskit_optimization.runtime.QAOAClient.program_inputs", "stubs/qiskit_optimization.runtime.QAOAClient.reps", "stubs/qiskit_optimization.runtime.QAOAClient.use_initial_mapping", "stubs/qiskit_optimization.runtime.QAOAClient.use_pulse_efficient", "stubs/qiskit_optimization.runtime.QAOAClient.use_swap_strategies", "stubs/qiskit_optimization.runtime.QAOAProgram", "stubs/qiskit_optimization.runtime.QAOAProgram.compute_minimum_eigenvalue", "stubs/qiskit_optimization.runtime.VQEClient", "stubs/qiskit_optimization.runtime.VQEClient.ansatz", "stubs/qiskit_optimization.runtime.VQEClient.backend", "stubs/qiskit_optimization.runtime.VQEClient.callback", "stubs/qiskit_optimization.runtime.VQEClient.compute_minimum_eigenvalue", "stubs/qiskit_optimization.runtime.VQEClient.initial_point", "stubs/qiskit_optimization.runtime.VQEClient.measurement_error_mitigation", "stubs/qiskit_optimization.runtime.VQEClient.optimizer", "stubs/qiskit_optimization.runtime.VQEClient.program_id", "stubs/qiskit_optimization.runtime.VQEClient.program_inputs", "stubs/qiskit_optimization.runtime.VQEClient.provider", "stubs/qiskit_optimization.runtime.VQEClient.shots", "stubs/qiskit_optimization.runtime.VQEClient.store_intermediate", "stubs/qiskit_optimization.runtime.VQEClient.supports_aux_operators", "stubs/qiskit_optimization.runtime.VQEProgram", "stubs/qiskit_optimization.runtime.VQEProgram.compute_minimum_eigenvalue", "stubs/qiskit_optimization.runtime.VQEProgram.supports_aux_operators", "stubs/qiskit_optimization.runtime.VQEProgramResult", "stubs/qiskit_optimization.runtime.VQERuntimeResult", "stubs/qiskit_optimization.runtime.VQERuntimeResult.job_id", "stubs/qiskit_optimization.runtime.VQERuntimeResult.optimizer_history", "stubs/qiskit_optimization.translators.from_docplex_mp", "stubs/qiskit_optimization.translators.from_gurobipy", "stubs/qiskit_optimization.translators.from_ising", "stubs/qiskit_optimization.translators.to_docplex_mp", "stubs/qiskit_optimization.translators.to_gurobipy", "stubs/qiskit_optimization.translators.to_ising", "tutorials/01_quadratic_program", "tutorials/02_converters_for_quadratic_programs", "tutorials/03_minimum_eigen_optimizer", "tutorials/04_grover_optimizer", "tutorials/05_admm_optimizer", "tutorials/06_examples_max_cut_and_tsp", "tutorials/07_examples_vehicle_routing", "tutorials/08_cvar_optimization", "tutorials/09_application_classes", "tutorials/10_warm_start_qaoa", "tutorials/11_using_classical_optimization_solvers_and_models", "tutorials/12_qaoa_runtime", "tutorials/index"], "filenames": ["apidocs/qiskit_optimization.rst", "apidocs/qiskit_optimization.algorithms.rst", "apidocs/qiskit_optimization.applications.rst", "apidocs/qiskit_optimization.converters.rst", "apidocs/qiskit_optimization.problems.rst", "apidocs/qiskit_optimization.runtime.rst", "apidocs/qiskit_optimization.translators.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_optimization.INFINITY.rst", "stubs/qiskit_optimization.QiskitOptimizationError.rst", "stubs/qiskit_optimization.QuadraticProgram.rst", "stubs/qiskit_optimization.QuadraticProgram.binary_var.rst", "stubs/qiskit_optimization.QuadraticProgram.binary_var_dict.rst", "stubs/qiskit_optimization.QuadraticProgram.binary_var_list.rst", "stubs/qiskit_optimization.QuadraticProgram.clear.rst", "stubs/qiskit_optimization.QuadraticProgram.continuous_var.rst", "stubs/qiskit_optimization.QuadraticProgram.continuous_var_dict.rst", "stubs/qiskit_optimization.QuadraticProgram.continuous_var_list.rst", "stubs/qiskit_optimization.QuadraticProgram.export_as_lp_string.rst", "stubs/qiskit_optimization.QuadraticProgram.from_ising.rst", "stubs/qiskit_optimization.QuadraticProgram.get_feasibility_info.rst", "stubs/qiskit_optimization.QuadraticProgram.get_linear_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_binary_vars.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_continuous_vars.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_integer_vars.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_linear_constraints.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_quadratic_constraints.rst", "stubs/qiskit_optimization.QuadraticProgram.get_num_vars.rst", "stubs/qiskit_optimization.QuadraticProgram.get_quadratic_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.get_variable.rst", "stubs/qiskit_optimization.QuadraticProgram.integer_var.rst", "stubs/qiskit_optimization.QuadraticProgram.integer_var_dict.rst", "stubs/qiskit_optimization.QuadraticProgram.integer_var_list.rst", "stubs/qiskit_optimization.QuadraticProgram.is_feasible.rst", "stubs/qiskit_optimization.QuadraticProgram.linear_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.linear_constraints.rst", "stubs/qiskit_optimization.QuadraticProgram.linear_constraints_index.rst", "stubs/qiskit_optimization.QuadraticProgram.maximize.rst", "stubs/qiskit_optimization.QuadraticProgram.minimize.rst", "stubs/qiskit_optimization.QuadraticProgram.name.rst", "stubs/qiskit_optimization.QuadraticProgram.objective.rst", "stubs/qiskit_optimization.QuadraticProgram.prettyprint.rst", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints.rst", "stubs/qiskit_optimization.QuadraticProgram.quadratic_constraints_index.rst", "stubs/qiskit_optimization.QuadraticProgram.read_from_lp_file.rst", "stubs/qiskit_optimization.QuadraticProgram.remove_linear_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.remove_quadratic_constraint.rst", "stubs/qiskit_optimization.QuadraticProgram.status.rst", "stubs/qiskit_optimization.QuadraticProgram.substitute_variables.rst", "stubs/qiskit_optimization.QuadraticProgram.to_ising.rst", "stubs/qiskit_optimization.QuadraticProgram.variables.rst", "stubs/qiskit_optimization.QuadraticProgram.variables_index.rst", "stubs/qiskit_optimization.QuadraticProgram.write_to_lp_file.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizationResult.state.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.parameters.rst", "stubs/qiskit_optimization.algorithms.ADMMOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.ADMMParameters.rst", "stubs/qiskit_optimization.algorithms.ADMMState.rst", "stubs/qiskit_optimization.algorithms.BaseAggregator.rst", "stubs/qiskit_optimization.algorithms.BaseAggregator.aggregate.rst", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.rst", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.CobylaOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.cplex_parameters.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.disp.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.is_cplex_installed.rst", "stubs/qiskit_optimization.algorithms.CplexOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult.sdp_solution.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.max_cut_value.rst", "stubs/qiskit_optimization.algorithms.GoemansWilliamsonOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.intermediate_fval.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_input_qubits.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.n_output_qubits.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.operation_counts.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.raw_samples.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizationResult.threshold.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.quantum_instance.rst", "stubs/qiskit_optimization.algorithms.GroverOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.disp.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.is_gurobi_installed.rst", "stubs/qiskit_optimization.algorithms.GurobiOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.ALL_ITERATIONS.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.LAST_ITERATION.rst", "stubs/qiskit_optimization.algorithms.IntermediateResult.NO_ITERATIONS.rst", "stubs/qiskit_optimization.algorithms.MeanAggregator.rst", "stubs/qiskit_optimization.algorithms.MeanAggregator.aggregate.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.min_eigen_solver_result.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizationResult.raw_samples.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.min_eigen_solver.rst", "stubs/qiskit_optimization.algorithms.MinimumEigenOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.clip.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.multi_start_solve.rst", "stubs/qiskit_optimization.algorithms.MultiStartOptimizer.trials.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.is_compatible.rst", "stubs/qiskit_optimization.algorithms.OptimizationAlgorithm.solve.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.__getitem__.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.fval.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.get_correlations.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.prettyprint.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.raw_results.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.samples.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.status.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.variable_names.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.variables.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.variables_dict.rst", "stubs/qiskit_optimization.algorithms.OptimizationResult.x.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.FAILURE.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.INFEASIBLE.rst", "stubs/qiskit_optimization.algorithms.OptimizationResultStatus.SUCCESS.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.history.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult.replacements.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.fx.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.imode.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.its.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizationResult.smode.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.get_compatibility_msg.rst", "stubs/qiskit_optimization.algorithms.SlsqpOptimizer.solve.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.fval.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.probability.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.status.rst", "stubs/qiskit_optimization.algorithms.SolutionSample.x.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_state.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_initial_variables.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAFactory.create_mixer.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.rst", "stubs/qiskit_optimization.algorithms.WarmStartQAOAOptimizer.solve.rst", "stubs/qiskit_optimization.applications.BinPacking.rst", "stubs/qiskit_optimization.applications.BinPacking.get_figure.rst", "stubs/qiskit_optimization.applications.BinPacking.interpret.rst", "stubs/qiskit_optimization.applications.BinPacking.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.Clique.rst", "stubs/qiskit_optimization.applications.Clique.interpret.rst", "stubs/qiskit_optimization.applications.Clique.size.rst", "stubs/qiskit_optimization.applications.Clique.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.ExactCover.rst", "stubs/qiskit_optimization.applications.ExactCover.interpret.rst", "stubs/qiskit_optimization.applications.ExactCover.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.draw.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.graph.rst", "stubs/qiskit_optimization.applications.GraphOptimizationApplication.random_graph.rst", "stubs/qiskit_optimization.applications.GraphPartition.rst", "stubs/qiskit_optimization.applications.GraphPartition.interpret.rst", "stubs/qiskit_optimization.applications.GraphPartition.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.Knapsack.rst", "stubs/qiskit_optimization.applications.Knapsack.interpret.rst", "stubs/qiskit_optimization.applications.Knapsack.max_weight.rst", "stubs/qiskit_optimization.applications.Knapsack.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.Maxcut.rst", "stubs/qiskit_optimization.applications.Maxcut.get_gset_result.rst", "stubs/qiskit_optimization.applications.Maxcut.interpret.rst", "stubs/qiskit_optimization.applications.Maxcut.parse_gset_format.rst", "stubs/qiskit_optimization.applications.Maxcut.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.NumberPartition.rst", "stubs/qiskit_optimization.applications.NumberPartition.interpret.rst", "stubs/qiskit_optimization.applications.NumberPartition.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.interpret.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.sample_most_likely.rst", "stubs/qiskit_optimization.applications.OptimizationApplication.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.SKModel.rst", "stubs/qiskit_optimization.applications.SKModel.disorder.rst", "stubs/qiskit_optimization.applications.SKModel.graph.rst", "stubs/qiskit_optimization.applications.SKModel.interpret.rst", "stubs/qiskit_optimization.applications.SKModel.num_sites.rst", "stubs/qiskit_optimization.applications.SKModel.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.SetPacking.rst", "stubs/qiskit_optimization.applications.SetPacking.interpret.rst", "stubs/qiskit_optimization.applications.SetPacking.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.StableSet.rst", "stubs/qiskit_optimization.applications.StableSet.interpret.rst", "stubs/qiskit_optimization.applications.StableSet.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.Tsp.rst", "stubs/qiskit_optimization.applications.Tsp.create_random_instance.rst", "stubs/qiskit_optimization.applications.Tsp.interpret.rst", "stubs/qiskit_optimization.applications.Tsp.parse_tsplib_format.rst", "stubs/qiskit_optimization.applications.Tsp.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.Tsp.tsp_value.rst", "stubs/qiskit_optimization.applications.VehicleRouting.rst", "stubs/qiskit_optimization.applications.VehicleRouting.create_random_instance.rst", "stubs/qiskit_optimization.applications.VehicleRouting.depot.rst", "stubs/qiskit_optimization.applications.VehicleRouting.interpret.rst", "stubs/qiskit_optimization.applications.VehicleRouting.num_vehicles.rst", "stubs/qiskit_optimization.applications.VehicleRouting.to_quadratic_program.rst", "stubs/qiskit_optimization.applications.VertexCover.rst", "stubs/qiskit_optimization.applications.VertexCover.interpret.rst", "stubs/qiskit_optimization.applications.VertexCover.to_quadratic_program.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.convert.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.interpret.rst", "stubs/qiskit_optimization.converters.InequalityToEquality.mode.rst", "stubs/qiskit_optimization.converters.IntegerToBinary.rst", "stubs/qiskit_optimization.converters.IntegerToBinary.convert.rst", "stubs/qiskit_optimization.converters.IntegerToBinary.interpret.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.convert.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.interpret.rst", "stubs/qiskit_optimization.converters.LinearEqualityToPenalty.penalty.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.convert.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.interpret.rst", "stubs/qiskit_optimization.converters.LinearInequalityToPenalty.penalty.rst", "stubs/qiskit_optimization.converters.MaximizeToMinimize.rst", "stubs/qiskit_optimization.converters.MinimizeToMaximize.rst", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.rst", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.convert.rst", "stubs/qiskit_optimization.converters.QuadraticProgramConverter.interpret.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.convert.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.get_compatibility_msg.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.interpret.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.is_compatible.rst", "stubs/qiskit_optimization.converters.QuadraticProgramToQubo.penalty.rst", "stubs/qiskit_optimization.problems.Constraint.rst", "stubs/qiskit_optimization.problems.Constraint.evaluate.rst", "stubs/qiskit_optimization.problems.Constraint.name.rst", "stubs/qiskit_optimization.problems.Constraint.rhs.rst", "stubs/qiskit_optimization.problems.Constraint.sense.rst", "stubs/qiskit_optimization.problems.LinearConstraint.rst", "stubs/qiskit_optimization.problems.LinearConstraint.evaluate.rst", "stubs/qiskit_optimization.problems.LinearConstraint.linear.rst", "stubs/qiskit_optimization.problems.LinearExpression.rst", "stubs/qiskit_optimization.problems.LinearExpression.__getitem__.rst", "stubs/qiskit_optimization.problems.LinearExpression.bounds.rst", "stubs/qiskit_optimization.problems.LinearExpression.coefficients.rst", "stubs/qiskit_optimization.problems.LinearExpression.evaluate.rst", "stubs/qiskit_optimization.problems.LinearExpression.evaluate_gradient.rst", "stubs/qiskit_optimization.problems.LinearExpression.to_array.rst", "stubs/qiskit_optimization.problems.LinearExpression.to_dict.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.evaluate.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.linear.rst", "stubs/qiskit_optimization.problems.QuadraticConstraint.quadratic.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.__getitem__.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.bounds.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.coefficients.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.evaluate.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.evaluate_gradient.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.to_array.rst", "stubs/qiskit_optimization.problems.QuadraticExpression.to_dict.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.constant.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.evaluate.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.evaluate_gradient.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.linear.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.quadratic.rst", "stubs/qiskit_optimization.problems.QuadraticObjective.sense.rst", "stubs/qiskit_optimization.problems.QuadraticProgramElement.rst", "stubs/qiskit_optimization.problems.QuadraticProgramElement.quadratic_program.rst", "stubs/qiskit_optimization.problems.Variable.rst", "stubs/qiskit_optimization.problems.Variable.as_tuple.rst", "stubs/qiskit_optimization.problems.Variable.lowerbound.rst", "stubs/qiskit_optimization.problems.Variable.name.rst", "stubs/qiskit_optimization.problems.Variable.upperbound.rst", "stubs/qiskit_optimization.problems.Variable.vartype.rst", "stubs/qiskit_optimization.runtime.QAOAClient.rst", "stubs/qiskit_optimization.runtime.QAOAClient.alpha.rst", "stubs/qiskit_optimization.runtime.QAOAClient.ansatz.rst", "stubs/qiskit_optimization.runtime.QAOAClient.initial_state.rst", "stubs/qiskit_optimization.runtime.QAOAClient.mixer.rst", "stubs/qiskit_optimization.runtime.QAOAClient.optimization_level.rst", "stubs/qiskit_optimization.runtime.QAOAClient.program_inputs.rst", "stubs/qiskit_optimization.runtime.QAOAClient.reps.rst", "stubs/qiskit_optimization.runtime.QAOAClient.use_initial_mapping.rst", "stubs/qiskit_optimization.runtime.QAOAClient.use_pulse_efficient.rst", "stubs/qiskit_optimization.runtime.QAOAClient.use_swap_strategies.rst", "stubs/qiskit_optimization.runtime.QAOAProgram.rst", "stubs/qiskit_optimization.runtime.QAOAProgram.compute_minimum_eigenvalue.rst", "stubs/qiskit_optimization.runtime.VQEClient.rst", "stubs/qiskit_optimization.runtime.VQEClient.ansatz.rst", "stubs/qiskit_optimization.runtime.VQEClient.backend.rst", "stubs/qiskit_optimization.runtime.VQEClient.callback.rst", "stubs/qiskit_optimization.runtime.VQEClient.compute_minimum_eigenvalue.rst", "stubs/qiskit_optimization.runtime.VQEClient.initial_point.rst", "stubs/qiskit_optimization.runtime.VQEClient.measurement_error_mitigation.rst", "stubs/qiskit_optimization.runtime.VQEClient.optimizer.rst", "stubs/qiskit_optimization.runtime.VQEClient.program_id.rst", "stubs/qiskit_optimization.runtime.VQEClient.program_inputs.rst", "stubs/qiskit_optimization.runtime.VQEClient.provider.rst", "stubs/qiskit_optimization.runtime.VQEClient.shots.rst", "stubs/qiskit_optimization.runtime.VQEClient.store_intermediate.rst", "stubs/qiskit_optimization.runtime.VQEClient.supports_aux_operators.rst", "stubs/qiskit_optimization.runtime.VQEProgram.rst", "stubs/qiskit_optimization.runtime.VQEProgram.compute_minimum_eigenvalue.rst", "stubs/qiskit_optimization.runtime.VQEProgram.supports_aux_operators.rst", "stubs/qiskit_optimization.runtime.VQEProgramResult.rst", "stubs/qiskit_optimization.runtime.VQERuntimeResult.rst", "stubs/qiskit_optimization.runtime.VQERuntimeResult.job_id.rst", "stubs/qiskit_optimization.runtime.VQERuntimeResult.optimizer_history.rst", "stubs/qiskit_optimization.translators.from_docplex_mp.rst", "stubs/qiskit_optimization.translators.from_gurobipy.rst", "stubs/qiskit_optimization.translators.from_ising.rst", "stubs/qiskit_optimization.translators.to_docplex_mp.rst", "stubs/qiskit_optimization.translators.to_gurobipy.rst", "stubs/qiskit_optimization.translators.to_ising.rst", "tutorials/01_quadratic_program.ipynb", "tutorials/02_converters_for_quadratic_programs.ipynb", "tutorials/03_minimum_eigen_optimizer.ipynb", "tutorials/04_grover_optimizer.ipynb", "tutorials/05_admm_optimizer.ipynb", "tutorials/06_examples_max_cut_and_tsp.ipynb", "tutorials/07_examples_vehicle_routing.ipynb", "tutorials/08_cvar_optimization.ipynb", "tutorials/09_application_classes.ipynb", "tutorials/10_warm_start_qaoa.ipynb", "tutorials/11_using_classical_optimization_solvers_and_models.ipynb", "tutorials/12_qaoa_runtime.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Optimization API Reference", "Optimization algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.algorithms</span></code>)", "Optimization applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.applications</span></code>)", "Optimization converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.converters</span></code>)", "Optimization problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.problems</span></code>)", "Qiskit Optimization Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.runtime</span></code>)", "Quadratic program translators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_optimization.translators</span></code>)", "Come iniziare", "Qiskit Optimization overview", "Release Notes", "INFINITY", "QiskitOptimizationError", "QuadraticProgram", "QuadraticProgram.binary_var", "QuadraticProgram.binary_var_dict", "QuadraticProgram.binary_var_list", "QuadraticProgram.clear", "QuadraticProgram.continuous_var", "QuadraticProgram.continuous_var_dict", "QuadraticProgram.continuous_var_list", "QuadraticProgram.export_as_lp_string", "QuadraticProgram.from_ising", "QuadraticProgram.get_feasibility_info", "QuadraticProgram.get_linear_constraint", "QuadraticProgram.get_num_binary_vars", "QuadraticProgram.get_num_continuous_vars", "QuadraticProgram.get_num_integer_vars", "QuadraticProgram.get_num_linear_constraints", "QuadraticProgram.get_num_quadratic_constraints", "QuadraticProgram.get_num_vars", "QuadraticProgram.get_quadratic_constraint", "QuadraticProgram.get_variable", "QuadraticProgram.integer_var", "QuadraticProgram.integer_var_dict", "QuadraticProgram.integer_var_list", "QuadraticProgram.is_feasible", "QuadraticProgram.linear_constraint", "QuadraticProgram.linear_constraints", "QuadraticProgram.linear_constraints_index", "QuadraticProgram.maximize", "QuadraticProgram.minimize", "QuadraticProgram.name", "QuadraticProgram.objective", "QuadraticProgram.prettyprint", "QuadraticProgram.quadratic_constraint", "QuadraticProgram.quadratic_constraints", "QuadraticProgram.quadratic_constraints_index", "QuadraticProgram.read_from_lp_file", "QuadraticProgram.remove_linear_constraint", "QuadraticProgram.remove_quadratic_constraint", "QuadraticProgram.status", "QuadraticProgram.substitute_variables", "QuadraticProgram.to_ising", "QuadraticProgram.variables", "QuadraticProgram.variables_index", "QuadraticProgram.write_to_lp_file", "ADMMOptimizationResult", "ADMMOptimizationResult.state", "ADMMOptimizer", "ADMMOptimizer.get_compatibility_msg", "ADMMOptimizer.parameters", "ADMMOptimizer.solve", "ADMMParameters", "ADMMState", "BaseAggregator", "BaseAggregator.aggregate", "CobylaOptimizer", "CobylaOptimizer.get_compatibility_msg", "CobylaOptimizer.solve", "CplexOptimizer", "CplexOptimizer.cplex_parameters", "CplexOptimizer.disp", "CplexOptimizer.get_compatibility_msg", "CplexOptimizer.is_cplex_installed", "CplexOptimizer.solve", "GoemansWilliamsonOptimizationResult", "GoemansWilliamsonOptimizationResult.sdp_solution", "GoemansWilliamsonOptimizer", "GoemansWilliamsonOptimizer.get_compatibility_msg", "GoemansWilliamsonOptimizer.max_cut_value", "GoemansWilliamsonOptimizer.solve", "GroverOptimizationResult", "GroverOptimizationResult.intermediate_fval", "GroverOptimizationResult.n_input_qubits", "GroverOptimizationResult.n_output_qubits", "GroverOptimizationResult.operation_counts", "GroverOptimizationResult.raw_samples", "GroverOptimizationResult.threshold", "GroverOptimizer", "GroverOptimizer.get_compatibility_msg", "GroverOptimizer.quantum_instance", "GroverOptimizer.solve", "GurobiOptimizer", "GurobiOptimizer.disp", "GurobiOptimizer.get_compatibility_msg", "GurobiOptimizer.is_gurobi_installed", "GurobiOptimizer.solve", "IntermediateResult", "IntermediateResult.ALL_ITERATIONS", "IntermediateResult.LAST_ITERATION", "IntermediateResult.NO_ITERATIONS", "MeanAggregator", "MeanAggregator.aggregate", "MinimumEigenOptimizationResult", "MinimumEigenOptimizationResult.min_eigen_solver_result", "MinimumEigenOptimizationResult.raw_samples", "MinimumEigenOptimizer", "MinimumEigenOptimizer.get_compatibility_msg", "MinimumEigenOptimizer.min_eigen_solver", "MinimumEigenOptimizer.solve", "MultiStartOptimizer", "MultiStartOptimizer.clip", "MultiStartOptimizer.multi_start_solve", "MultiStartOptimizer.trials", "OptimizationAlgorithm", "OptimizationAlgorithm.get_compatibility_msg", "OptimizationAlgorithm.is_compatible", "OptimizationAlgorithm.solve", "OptimizationResult", "OptimizationResult.__getitem__", "OptimizationResult.fval", "OptimizationResult.get_correlations", "OptimizationResult.prettyprint", "OptimizationResult.raw_results", "OptimizationResult.samples", "OptimizationResult.status", "OptimizationResult.variable_names", "OptimizationResult.variables", "OptimizationResult.variables_dict", "OptimizationResult.x", "OptimizationResultStatus", "OptimizationResultStatus.FAILURE", "OptimizationResultStatus.INFEASIBLE", "OptimizationResultStatus.SUCCESS", "RecursiveMinimumEigenOptimizationResult", "RecursiveMinimumEigenOptimizationResult.history", "RecursiveMinimumEigenOptimizationResult.replacements", "RecursiveMinimumEigenOptimizer", "RecursiveMinimumEigenOptimizer.get_compatibility_msg", "RecursiveMinimumEigenOptimizer.solve", "SlsqpOptimizationResult", "SlsqpOptimizationResult.fx", "SlsqpOptimizationResult.imode", "SlsqpOptimizationResult.its", "SlsqpOptimizationResult.smode", "SlsqpOptimizer", "SlsqpOptimizer.get_compatibility_msg", "SlsqpOptimizer.solve", "SolutionSample", "SolutionSample.fval", "SolutionSample.probability", "SolutionSample.status", "SolutionSample.x", "WarmStartQAOAFactory", "WarmStartQAOAFactory.create_initial_state", "WarmStartQAOAFactory.create_initial_variables", "WarmStartQAOAFactory.create_mixer", "WarmStartQAOAOptimizer", "WarmStartQAOAOptimizer.solve", "BinPacking", "BinPacking.get_figure", "BinPacking.interpret", "BinPacking.to_quadratic_program", "Clique", "Clique.interpret", "Clique.size", "Clique.to_quadratic_program", "ExactCover", "ExactCover.interpret", "ExactCover.to_quadratic_program", "GraphOptimizationApplication", "GraphOptimizationApplication.draw", "GraphOptimizationApplication.graph", "GraphOptimizationApplication.random_graph", "GraphPartition", "GraphPartition.interpret", "GraphPartition.to_quadratic_program", "Knapsack", "Knapsack.interpret", "Knapsack.max_weight", "Knapsack.to_quadratic_program", "Maxcut", "Maxcut.get_gset_result", "Maxcut.interpret", "Maxcut.parse_gset_format", "Maxcut.to_quadratic_program", "NumberPartition", "NumberPartition.interpret", "NumberPartition.to_quadratic_program", "OptimizationApplication", "OptimizationApplication.interpret", "OptimizationApplication.sample_most_likely", "OptimizationApplication.to_quadratic_program", "SKModel", "SKModel.disorder", "SKModel.graph", "SKModel.interpret", "SKModel.num_sites", "SKModel.to_quadratic_program", "SetPacking", "SetPacking.interpret", "SetPacking.to_quadratic_program", "StableSet", "StableSet.interpret", "StableSet.to_quadratic_program", "Tsp", "Tsp.create_random_instance", "Tsp.interpret", "Tsp.parse_tsplib_format", "Tsp.to_quadratic_program", "Tsp.tsp_value", "VehicleRouting", "VehicleRouting.create_random_instance", "VehicleRouting.depot", "VehicleRouting.interpret", "VehicleRouting.num_vehicles", "VehicleRouting.to_quadratic_program", "VertexCover", "VertexCover.interpret", "VertexCover.to_quadratic_program", "InequalityToEquality", "InequalityToEquality.convert", "InequalityToEquality.interpret", "InequalityToEquality.mode", "IntegerToBinary", "IntegerToBinary.convert", "IntegerToBinary.interpret", "LinearEqualityToPenalty", "LinearEqualityToPenalty.convert", "LinearEqualityToPenalty.interpret", "LinearEqualityToPenalty.penalty", "LinearInequalityToPenalty", "LinearInequalityToPenalty.convert", "LinearInequalityToPenalty.interpret", "LinearInequalityToPenalty.penalty", "MaximizeToMinimize", "MinimizeToMaximize", "QuadraticProgramConverter", "QuadraticProgramConverter.convert", "QuadraticProgramConverter.interpret", "QuadraticProgramToQubo", "QuadraticProgramToQubo.convert", "QuadraticProgramToQubo.get_compatibility_msg", "QuadraticProgramToQubo.interpret", "QuadraticProgramToQubo.is_compatible", "QuadraticProgramToQubo.penalty", "Constraint", "Constraint.evaluate", "Constraint.name", "Constraint.rhs", "Constraint.sense", "LinearConstraint", "LinearConstraint.evaluate", "LinearConstraint.linear", "LinearExpression", "LinearExpression.__getitem__", "LinearExpression.bounds", "LinearExpression.coefficients", "LinearExpression.evaluate", "LinearExpression.evaluate_gradient", "LinearExpression.to_array", "LinearExpression.to_dict", "QuadraticConstraint", "QuadraticConstraint.evaluate", "QuadraticConstraint.linear", "QuadraticConstraint.quadratic", "QuadraticExpression", "QuadraticExpression.__getitem__", "QuadraticExpression.bounds", "QuadraticExpression.coefficients", "QuadraticExpression.evaluate", "QuadraticExpression.evaluate_gradient", "QuadraticExpression.to_array", "QuadraticExpression.to_dict", "QuadraticObjective", "QuadraticObjective.constant", "QuadraticObjective.evaluate", "QuadraticObjective.evaluate_gradient", "QuadraticObjective.linear", "QuadraticObjective.quadratic", "QuadraticObjective.sense", "QuadraticProgramElement", "QuadraticProgramElement.quadratic_program", "Variable", "Variable.as_tuple", "Variable.lowerbound", "Variable.name", "Variable.upperbound", "Variable.vartype", "QAOAClient", "QAOAClient.alpha", "QAOAClient.ansatz", "QAOAClient.initial_state", "QAOAClient.mixer", "QAOAClient.optimization_level", "QAOAClient.program_inputs", "QAOAClient.reps", "QAOAClient.use_initial_mapping", "QAOAClient.use_pulse_efficient", "QAOAClient.use_swap_strategies", "QAOAProgram", "QAOAProgram.compute_minimum_eigenvalue", "VQEClient", "VQEClient.ansatz", "VQEClient.backend", "VQEClient.callback", "VQEClient.compute_minimum_eigenvalue", "VQEClient.initial_point", "VQEClient.measurement_error_mitigation", "VQEClient.optimizer", "VQEClient.program_id", "VQEClient.program_inputs", "VQEClient.provider", "VQEClient.shots", "VQEClient.store_intermediate", "VQEClient.supports_aux_operators", "VQEProgram", "VQEProgram.compute_minimum_eigenvalue", "VQEProgram.supports_aux_operators", "VQEProgramResult", "VQERuntimeResult", "VQERuntimeResult.job_id", "VQERuntimeResult.optimizer_history", "from_docplex_mp", "from_gurobipy", "from_ising", "to_docplex_mp", "to_gurobipy", "to_ising", "Programmi Quadratici", "Convertitori per Programmi Quadratici", "Minimum Eigen Optimizer", "Grover Optimizer", "ADMM Optimizer", "Max-Cut and Traveling Salesman Problem", "Vehicle Routing", "Migliorare la Variational Quantum Optimization utilizzando CVaR", "Application Classes for Optimization Problems", "Warm-starting quantum optimization", "Using Classical Optimization Solvers and Models with Qiskit Optimization", "QAOA Runtime", "Tutorial di Ottimizzazione"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "covers": [0, 8], "the": [0, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 336, 338, 339], "whol": [0, 8], "rang": [0, 8, 48, 49, 119, 153, 157, 334, 335, 336, 338, 340], "from": [0, 7, 8, 21, 47, 66, 69, 79, 92, 99, 103, 104, 106, 110, 118, 121, 123, 137, 140, 142, 144, 145, 155, 157, 162, 166, 169, 176, 180, 182, 184, 185, 188, 191, 193, 198, 201, 204, 206, 208, 209, 212, 216, 219, 220, 224, 229, 233, 240, 323, 325, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "high": [0, 8, 206, 212], "level": [0, 8, 283, 289, 294, 335, 340], "modeling": [0, 8], "of": [0, 3, 4, 5, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 68, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 96, 97, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 139, 140, 141, 143, 145, 147, 148, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 177, 178, 179, 183, 184, 186, 187, 190, 191, 193, 194, 195, 196, 197, 199, 200, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 220, 222, 223, 226, 229, 231, 232, 233, 237, 239, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 297, 300, 301, 302, 306, 308, 313, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340], "problems": [0, 1, 2, 8, 58, 66, 69, 72, 92, 94, 106, 137, 145, 220, 224, 240, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340], "with": [0, 8, 22, 51, 55, 58, 59, 61, 62, 66, 67, 68, 72, 74, 78, 81, 88, 89, 91, 94, 96, 107, 110, 115, 116, 117, 118, 137, 138, 140, 145, 146, 147, 161, 171, 193, 221, 224, 225, 227, 228, 231, 241, 242, 244, 260, 261, 272, 273, 276, 277, 281, 289, 300, 301, 306, 308, 317, 321, 329, 330, 333, 334, 335, 337, 338, 340], "automatic": [0, 8, 331, 340], "conversion": [0, 3, 8, 227, 230, 231, 234, 239, 240, 245, 329, 330], "to": [0, 3, 4, 8, 10, 11, 13, 14, 15, 17, 18, 19, 21, 29, 32, 33, 34, 36, 38, 39, 40, 43, 44, 46, 47, 50, 51, 52, 54, 55, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 77, 78, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 96, 97, 102, 106, 107, 109, 112, 115, 116, 117, 118, 119, 120, 133, 137, 138, 139, 140, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 163, 170, 174, 181, 183, 190, 202, 205, 207, 211, 217, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 238, 240, 241, 242, 244, 247, 252, 253, 255, 258, 259, 260, 261, 263, 264, 265, 267, 270, 271, 272, 273, 276, 277, 283, 284, 289, 290, 294, 297, 298, 300, 301, 302, 306, 308, 311, 314, 316, 317, 319, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340], "different": [0, 3, 8, 88, 106, 137, 140, 157, 330, 331, 333, 335, 336, 338, 340], "required": [0, 8, 238, 335, 340], "representations": [0, 3, 8], "suit": [0, 8], "easy": [0, 8, 190, 334, 338], "use": [0, 8, 66, 88, 106, 137, 145, 157, 220, 261, 273, 289, 294, 299, 300, 302, 308, 316, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340], "quantum": [0, 8, 58, 90, 91, 153, 154, 156, 157, 224, 289, 300, 331, 332, 337, 340], "algorithms": [0, 5, 8, 66, 69, 92, 106, 114, 118, 137, 145, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "that": [0, 5, 7, 8, 38, 43, 46, 51, 54, 58, 63, 65, 72, 80, 81, 94, 102, 110, 112, 118, 137, 140, 153, 154, 157, 193, 221, 222, 225, 227, 228, 229, 231, 233, 240, 243, 254, 266, 281, 289, 300, 302, 315, 316, 318, 323, 324, 329, 330, 331, 335, 337, 338, 339, 340], "are": [0, 4, 7, 8, 14, 15, 18, 19, 21, 22, 29, 33, 34, 51, 52, 62, 63, 66, 98, 99, 100, 110, 137, 145, 193, 220, 227, 231, 232, 240, 266, 289, 294, 300, 302, 316, 325, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340], "ready": [0, 8, 335], "run": [0, 8, 90, 158, 289, 297, 298, 300, 302, 316, 333, 334, 335, 336, 340], "on": [0, 3, 7, 8, 29, 58, 66, 74, 96, 137, 163, 174, 181, 202, 205, 211, 217, 227, 231, 240, 289, 300, 302, 316, 330, 331, 333, 335, 336, 337, 338, 340], "classical": [0, 8, 58, 289, 300, 302, 316, 331, 333, 334, 336, 340], "simulators": [0, 8], "as": [0, 7, 8, 12, 14, 15, 16, 18, 19, 20, 21, 22, 33, 34, 35, 51, 62, 63, 66, 69, 92, 106, 118, 119, 128, 137, 145, 156, 161, 163, 164, 168, 170, 174, 175, 178, 181, 182, 183, 184, 187, 191, 193, 196, 200, 202, 203, 205, 207, 211, 214, 217, 218, 231, 241, 254, 260, 261, 266, 272, 273, 289, 300, 302, 316, 319, 320, 324, 325, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "well": [0, 8, 12, 16, 106, 289, 300, 334, 340], "real": [0, 8, 334, 339, 340], "devices": [0, 8], "via": [0, 8, 14, 15, 18, 19, 33, 34, 62, 66, 134, 135, 145, 254, 266, 329, 330, 333, 335, 336, 339], "this": [0, 3, 7, 12, 43, 47, 52, 55, 58, 59, 62, 66, 67, 69, 72, 74, 78, 89, 91, 92, 94, 96, 106, 107, 110, 111, 113, 115, 116, 119, 122, 137, 138, 145, 146, 150, 151, 153, 157, 163, 166, 224, 231, 232, 242, 244, 283, 284, 289, 300, 302, 311, 316, 319, 320, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "enables": [0, 8], "efficient": [0, 8, 289, 298, 334], "using": [0, 7, 8, 51, 61, 68, 72, 74, 91, 94, 96, 109, 117, 139, 147, 157, 158, 190, 231, 239, 261, 273, 289, 308, 329, 331, 333, 334, 336, 338, 340], "docplex": [0, 8, 323, 326, 332, 333, 336, 338], "A": [0, 8, 14, 15, 18, 19, 20, 33, 34, 43, 58, 64, 77, 80, 81, 89, 106, 107, 112, 118, 121, 122, 137, 138, 140, 148, 153, 154, 155, 156, 157, 159, 160, 161, 163, 167, 168, 170, 172, 173, 174, 175, 177, 178, 181, 182, 186, 187, 195, 199, 200, 202, 203, 205, 206, 207, 208, 211, 212, 214, 217, 218, 231, 242, 284, 289, 302, 316, 328, 329, 331, 332, 333, 334, 335], "uniform": [0, 8, 289], "interfac": [0, 8, 281], "between": [0, 3, 6, 8, 153, 157, 333, 335, 337, 340], "problem": [0, 3, 4, 8, 21, 43, 51, 52, 56, 59, 61, 62, 63, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 80, 81, 88, 89, 91, 92, 94, 96, 103, 106, 107, 109, 112, 115, 116, 117, 118, 126, 127, 134, 137, 138, 139, 140, 145, 146, 147, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 202, 203, 205, 206, 207, 209, 211, 212, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 238, 240, 241, 242, 243, 244, 289, 325, 328, 329, 330, 331, 333, 335, 336, 338, 339, 340], "allows": [0, 7, 8, 118, 289, 300, 331], "users": [0, 8, 118, 157, 231, 337], "solv": [0, 8, 58, 66, 69, 77, 92, 94, 106, 112, 118, 137, 145, 157, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "larg": [0, 8, 334], "set": [0, 3, 8, 11, 62, 91, 199, 201, 202, 204, 289, 300, 301, 302, 306, 316, 317, 333, 334, 335, 336, 337, 339, 340], "variational": [0, 8, 137, 331, 332, 333, 335, 340], "such": [0, 8, 22, 35, 106, 319, 320, 329, 330, 331, 333, 334, 337, 338, 339], "approxim": [0, 8, 77, 106, 301, 306, 317, 332, 338], "algorithm": [0, 7, 8, 56, 58, 61, 75, 77, 80, 81, 87, 88, 90, 103, 106, 112, 118, 123, 125, 130, 131, 132, 133, 134, 137, 140, 157, 289, 332, 334, 335, 336, 338, 340], "qao": [0, 8, 106, 137, 153, 154, 155, 156, 157, 289, 295, 300, 330, 331, 332, 333, 334, 337, 339], "grover": [0, 8, 81, 87, 88, 91], "adapt": [0, 8, 88], "searc": [0, 8, 88], "groveroptimizer": [0, 8, 86, 330, 331, 333], "leveraging": [0, 8, 331, 338, 340], "fundamental": [0, 8], "provided": [0, 8, 22, 35, 106], "by": [0, 7, 8, 11, 43, 51, 56, 62, 77, 88, 101, 102, 103, 106, 110, 118, 134, 135, 137, 140, 157, 159, 220, 224, 231, 254, 266, 283, 289, 300, 302, 316, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340], "terr": [0, 8, 21, 52, 289, 325, 328, 331], "furthermor": [0, 8], "design": [0, 8], "it": [0, 7, 8, 13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 43, 44, 50, 51, 106, 153, 157, 163, 170, 174, 181, 202, 205, 211, 217, 235, 236, 289, 300, 302, 315, 316, 318, 323, 331, 333, 335, 338, 339, 340], "be": [0, 4, 7, 8, 29, 39, 40, 43, 47, 50, 58, 59, 61, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 81, 88, 89, 91, 92, 94, 96, 97, 102, 106, 107, 109, 110, 115, 116, 117, 118, 119, 137, 138, 139, 140, 145, 146, 147, 153, 156, 157, 158, 163, 170, 174, 181, 202, 205, 211, 217, 220, 221, 225, 227, 228, 231, 232, 240, 241, 242, 244, 247, 252, 254, 255, 258, 259, 263, 266, 267, 270, 271, 276, 277, 283, 289, 300, 301, 302, 306, 315, 316, 317, 318, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 338, 340], "easily": [0, 8, 337], "extended": [0, 8], "and": [0, 3, 5, 6, 7, 8, 11, 12, 14, 15, 18, 19, 21, 33, 34, 36, 44, 47, 51, 58, 62, 66, 67, 75, 79, 81, 89, 97, 103, 106, 107, 110, 118, 119, 128, 134, 136, 137, 138, 145, 146, 153, 157, 160, 193, 208, 231, 232, 238, 242, 254, 256, 262, 266, 268, 284, 289, 300, 301, 302, 306, 308, 316, 317, 319, 320, 323, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340], "facilitates": [0, 8], "rapid": [0, 8], "development": [0, 7, 8], "testing": [0, 8], "new": [0, 7, 8, 118, 194, 224, 225, 240, 241, 254, 266, 283, 334, 335], "compatibl": [0, 8, 61, 67, 89, 107, 109, 116, 138, 146, 158, 242, 244, 335], "optimizers": [0, 8, 110, 334, 335, 336, 339, 340], "also": [0, 8, 94, 302, 329, 330, 331, 333, 337, 339, 340], "for": [0, 4, 7, 8, 11, 21, 23, 30, 31, 43, 52, 58, 62, 63, 64, 66, 69, 70, 75, 77, 81, 88, 92, 106, 110, 111, 113, 114, 118, 123, 137, 145, 153, 155, 157, 159, 163, 166, 167, 170, 171, 172, 173, 174, 177, 179, 181, 183, 186, 189, 193, 195, 199, 202, 205, 206, 211, 212, 214, 217, 220, 223, 224, 237, 247, 258, 259, 266, 270, 271, 276, 277, 281, 289, 300, 301, 302, 306, 311, 315, 316, 317, 318, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340], "validation": [0, 8], "benchmarking": [0, 8, 333], "supports": [0, 12, 231, 302, 316, 323, 324, 329, 339], "quadratically": [0, 12], "constrained": [0, 12, 289, 300, 332, 333], "quadratic": [0, 12, 13, 16, 17, 20, 21, 28, 30, 32, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 53, 55, 77, 80, 106, 145, 237, 251, 262, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340], "programs": [0, 5, 237], "simplicity": 0, "we": [0, 266, 301, 306, 317, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "refer": [0, 7, 261, 273, 331], "them": [0, 66, 102, 145, 335, 338], "just": [0, 75], "binary": [0, 12, 13, 14, 15, 24, 52, 58, 62, 79, 106, 182, 190, 191, 224, 225, 226, 231, 232, 323, 324, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340], "integer": [0, 12, 26, 32, 33, 34, 106, 119, 220, 224, 225, 226, 289, 300, 323, 324, 328, 329, 330, 331, 335, 338, 339, 340], "continuous": [0, 12, 17, 18, 19, 25, 58, 62, 66, 67, 145, 146, 157, 220, 283, 323, 324, 328, 329, 333, 338], "variables": [0, 12, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 29, 33, 34, 51, 52, 56, 62, 63, 66, 67, 75, 81, 103, 106, 118, 119, 134, 136, 137, 140, 145, 146, 152, 153, 154, 155, 156, 157, 220, 223, 224, 225, 226, 229, 231, 232, 233, 247, 252, 258, 259, 261, 263, 267, 270, 271, 273, 276, 277, 283, 297, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340], "equality": [0, 12, 36, 44, 62, 106, 137, 220, 221, 227, 228, 231, 240, 330, 331, 335], "inequality": [0, 12, 220, 221, 228, 231, 232, 330], "constraints": [0, 12, 16, 22, 27, 28, 37, 45, 52, 62, 106, 137, 220, 221, 227, 228, 231, 232, 240, 241, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340], "class": [0, 11, 12, 56, 58, 62, 63, 64, 66, 69, 75, 77, 81, 88, 92, 97, 101, 103, 106, 110, 114, 118, 130, 134, 137, 140, 145, 148, 153, 157, 159, 163, 167, 170, 174, 177, 181, 186, 189, 193, 199, 202, 205, 211, 217, 220, 224, 227, 231, 235, 236, 237, 240, 246, 251, 254, 262, 266, 274, 281, 283, 289, 300, 302, 316, 319, 320, 329, 330, 331, 333, 335, 337, 338], "has": [0, 7, 14, 15, 18, 19, 33, 34, 91, 106, 110, 119, 289, 300, 301, 306, 316, 317, 319, 325, 329, 334, 337, 338, 339, 340], "vast": 0, "amount": [0, 334], "relevant": [0, 63, 334], "applications": [0, 170, 189, 334, 337, 340], "whil": [0, 330, 335, 338], "still": [0, 51, 338], "being": [0, 7, 63, 134, 136, 140, 141, 331, 334, 335], "efficiently": [0, 7, 333, 334], "representabl": 0, "matrices": [0, 329, 331], "vectors": [0, 329], "som": [0, 7, 43, 231, 329, 334, 335, 339], "very": [0, 331], "interesting": [0, 331], "sub": [0, 110, 311, 329, 335], "classes": [0, 4, 7, 311, 333], "convex": [0, 72, 74, 94, 96, 333, 338], "whic": [0, 7, 22, 231, 329, 330, 331, 333, 334, 335, 338, 339, 340], "can": [0, 7, 50, 58, 59, 62, 66, 67, 72, 78, 89, 94, 107, 115, 116, 119, 137, 138, 145, 146, 153, 158, 163, 170, 174, 181, 202, 205, 211, 217, 242, 244, 254, 255, 266, 267, 289, 300, 301, 302, 306, 311, 315, 316, 317, 318, 329, 330, 333, 334, 335, 337, 338, 339, 340], "solved": [0, 59, 61, 63, 66, 67, 68, 72, 74, 78, 89, 91, 94, 96, 107, 109, 110, 115, 116, 117, 118, 138, 139, 145, 146, 147, 158, 221, 225, 228, 232, 241, 242, 244, 333, 338], "unconstrained": [0, 106, 227, 228, 330, 331, 332, 336, 338], "qubo": [0, 58, 62, 81, 88, 89, 91, 103, 106, 107, 138, 231, 240, 241, 242, 330, 333, 334, 335, 337, 338, 340], "cover": [0, 167, 169, 217, 219], "many": [0, 335, 338], "np": [0, 190, 193, 331, 333, 334, 335, 336, 338, 340], "compl": [0, 308, 334, 335, 337], "classically": [0, 336], "intractabl": 0, "representation": [0, 12, 195, 251, 254, 262, 266, 274, 283, 329, 330, 331, 335, 336, 340], "program": [0, 7, 12, 13, 16, 17, 20, 21, 32, 36, 37, 41, 44, 45, 47, 50, 53, 55, 77, 251, 262, 274, 295, 302, 310, 311, 316, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 338], "supporting": 0, "In": [0, 7, 137, 241, 329, 330, 331, 332, 333, 334, 335, 336], "addition": [0, 329, 334], "standard": [0, 153, 157, 289, 300, 302, 316, 331, 336, 340], "python": [0, 7, 335, 339], "errors": [0, 11], "will": [0, 7, 58, 62, 88, 94, 106, 137, 157, 220, 227, 231, 240, 289, 298, 299, 315, 318, 331, 334, 335, 338, 340], "rais": [0, 74, 96, 335], "error": [0, 11, 289, 300, 302, 308, 316, 329, 335, 340], "if": [0, 7, 10, 13, 14, 15, 17, 18, 19, 21, 22, 23, 29, 30, 32, 33, 34, 35, 36, 43, 44, 47, 48, 49, 51, 52, 55, 58, 59, 61, 62, 66, 68, 69, 73, 74, 77, 78, 91, 92, 95, 96, 106, 109, 110, 115, 116, 117, 118, 119, 137, 145, 147, 153, 157, 158, 208, 220, 221, 225, 227, 228, 229, 231, 232, 233, 235, 236, 240, 244, 256, 268, 276, 277, 283, 289, 294, 297, 298, 300, 301, 302, 306, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340], "circumstances": 0, "cannot": [0, 7, 55, 91, 329], "proceed": 0, "completion": [0, 145], "constant": [0, 21, 39, 40, 51, 52, 274, 325, 328, 329, 331, 335], "infinity": [0, 329], "common": 2, "is": [3, 7, 8, 13, 14, 15, 17, 18, 19, 21, 22, 23, 30, 32, 33, 34, 35, 36, 43, 44, 48, 49, 51, 52, 55, 58, 59, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 77, 78, 81, 88, 89, 91, 92, 95, 96, 106, 107, 110, 115, 116, 117, 119, 134, 135, 136, 137, 138, 145, 146, 147, 153, 157, 158, 164, 166, 168, 171, 178, 187, 193, 200, 203, 208, 218, 221, 224, 225, 227, 228, 231, 232, 235, 236, 240, 242, 244, 272, 273, 283, 289, 300, 302, 308, 315, 316, 318, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "having": 3, "convert": [3, 10, 162, 166, 169, 176, 180, 185, 188, 190, 192, 198, 201, 204, 209, 216, 219, 220, 222, 224, 226, 227, 229, 231, 233, 235, 236, 240, 243, 323, 330, 331, 332, 334, 336, 337, 338, 339], "functionality": [3, 330, 334, 337, 340], "go": 3, "given": [3, 23, 30, 31, 59, 61, 67, 68, 72, 74, 77, 78, 89, 91, 94, 96, 107, 109, 112, 115, 116, 117, 138, 139, 146, 147, 158, 193, 222, 226, 229, 233, 240, 242, 244, 247, 252, 258, 259, 263, 270, 271, 276, 277, 289, 301, 306, 317, 331, 335, 336, 337, 338, 340], "quadraticprogram": [3, 4, 6, 59, 61, 63, 66, 67, 68, 69, 72, 74, 78, 80, 89, 91, 92, 94, 96, 106, 107, 109, 112, 115, 116, 117, 118, 137, 138, 139, 145, 146, 147, 158, 162, 166, 169, 176, 180, 185, 188, 192, 198, 201, 204, 209, 216, 219, 220, 221, 224, 225, 228, 232, 238, 240, 241, 242, 244, 246, 254, 266, 281, 282, 283, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340], "interpret": [3, 82, 238, 330, 334, 337], "result": [3, 22, 35, 56, 61, 65, 66, 68, 69, 74, 81, 91, 92, 96, 102, 103, 104, 106, 109, 112, 117, 118, 122, 123, 134, 137, 139, 140, 145, 147, 158, 160, 161, 164, 168, 171, 175, 178, 183, 187, 190, 196, 200, 203, 207, 214, 218, 222, 226, 229, 233, 238, 239, 243, 301, 306, 317, 319, 320, 333, 334, 335, 337, 338, 339, 340], "based": [3, 58, 163, 174, 181, 202, 205, 211, 217, 331, 334, 335, 336, 340], "original": [3, 81, 103, 106, 118, 123, 171, 222, 226, 229, 233, 243, 330, 334, 336], "befor": [3, 82, 157, 330, 331, 339], "return": [3, 11, 52, 106, 118, 119, 123, 145, 208, 291, 294, 295, 303, 309, 310, 311, 312, 313, 328, 331, 334, 335, 338, 340], "an": [3, 4, 7, 8, 22, 32, 35, 48, 49, 51, 55, 56, 58, 66, 69, 72, 74, 75, 76, 79, 88, 91, 92, 94, 96, 106, 110, 114, 118, 119, 130, 132, 134, 135, 137, 145, 148, 154, 156, 157, 163, 166, 169, 170, 171, 174, 181, 184, 189, 190, 193, 198, 202, 205, 211, 217, 221, 225, 228, 232, 237, 241, 254, 260, 261, 266, 272, 273, 289, 300, 302, 315, 316, 318, 325, 328, 330, 331, 334, 335, 336, 337, 338, 339, 340], "appropr": [3, 334], "optimizationresult": [3, 56, 68, 74, 75, 81, 91, 96, 103, 112, 117, 134, 135, 139, 140, 147, 160, 161, 164, 168, 171, 175, 178, 183, 187, 190, 196, 200, 203, 207, 214, 218, 331, 333], "structures": 4, "defining": [4, 335], "following": [4, 231, 232, 323, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "not": [4, 7, 22, 23, 30, 35, 36, 43, 47, 48, 49, 52, 55, 58, 61, 62, 66, 69, 71, 74, 91, 92, 93, 96, 106, 109, 118, 153, 157, 158, 208, 221, 225, 228, 231, 272, 273, 276, 277, 283, 289, 294, 299, 300, 301, 302, 306, 308, 314, 316, 317, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "intended": 4, "instantiated": 4, "directly": [4, 163, 170, 174, 181, 202, 205, 211, 217, 329, 331, 339, 340], "objects": [4, 6, 65, 102, 281, 319, 320, 339], "thes": [4, 289, 300, 301, 302, 306, 316, 317, 330, 334, 335, 339, 340], "types": [4, 329, 335, 340], "availabl": [4, 334, 335, 337, 338, 339, 340], "within": [4, 66, 69, 92, 106, 145, 335, 337], "embed": 5, "algorithmic": [5, 66, 145], "interfaces": 5, "facilit": 5, "usag": [5, 7, 193], "scripts": 5, "cloud": [5, 316, 340], "other": [6, 51, 62, 110, 193, 329, 330, 331, 334], "optimization": [6, 7, 11, 51, 56, 58, 59, 62, 63, 66, 67, 68, 69, 72, 74, 75, 78, 81, 89, 91, 92, 94, 96, 103, 106, 107, 109, 110, 114, 115, 116, 117, 118, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 145, 146, 147, 148, 157, 158, 159, 163, 166, 167, 170, 174, 177, 181, 186, 189, 193, 199, 202, 205, 211, 217, 237, 240, 242, 244, 274, 289, 294, 300, 302, 314, 316, 330, 331, 332, 333, 334, 335], "models": [6, 231], "or": [6, 7, 10, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 44, 48, 49, 51, 62, 66, 69, 71, 92, 93, 106, 110, 118, 119, 129, 134, 136, 145, 157, 158, 163, 170, 174, 181, 190, 191, 193, 202, 205, 211, 217, 222, 225, 226, 229, 231, 233, 254, 255, 261, 266, 267, 272, 273, 289, 299, 300, 302, 308, 314, 316, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "qiskit": [7, 11, 21, 52, 66, 69, 92, 106, 114, 137, 145, 237, 289, 302, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "depends": [7, 338], "main": [7, 301, 306, 315, 317, 318, 340], "packag": 7, "its": [7, 38, 46, 54, 62, 140, 207, 254, 266, 289, 300, 302, 316, 331, 334, 340], "own": [7, 157, 311], "getting": [7, 8, 334], "started": [7, 8, 334], "detailing": 7, "installation": 7, "options": [7, 62, 220, 340], "supported": [7, 221, 225, 289, 300, 302, 315, 316, 318, 326, 327, 331], "environments": [7, 340], "platforms": 7, "you": [7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "should": [7, 62, 97, 110, 118, 153, 157, 326, 327, 331, 334, 340], "first": [7, 62, 66, 110, 134, 135, 145, 329, 330, 331, 335, 337, 338, 339, 340], "then": [7, 58, 62, 66, 106, 110, 145, 153, 157, 289, 298, 315, 318, 330, 331, 334, 335, 338, 340], "information": [7, 71, 93, 118, 123, 145, 206, 212, 238, 239, 314, 319, 320, 331, 340], "her": [7, 66, 69, 92, 106, 137, 145, 302, 331, 334, 338, 340], "followed": 7, "focuses": 7, "additional": [7, 123, 140, 223, 289, 300, 302, 316, 330, 334], "specific": [7, 81, 140, 329, 335], "functions": [7, 324, 334, 335, 336], "hav": [7, 281, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "been": [7, 91, 300, 301, 306, 316, 317, 319, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "mad": [7, 335], "optional": [7, 13, 14, 15, 17, 18, 19, 29, 32, 33, 34, 36, 44, 51, 58, 66, 69, 70, 75, 76, 81, 86, 88, 103, 105, 106, 118, 120, 129, 137, 140, 141, 142, 143, 144, 157, 159, 163, 165, 171, 173, 206, 212, 227, 230, 231, 234, 240, 245, 289, 291, 292, 294, 300, 301, 302, 304, 306, 307, 312, 316, 317, 322, 323, 333], "wher": [7, 62, 160, 193, 211, 212, 213, 231, 232, 255, 267, 329, 330, 334, 335, 340], "dependent": [7, 339], "cod": [7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "support": [7, 289, 300, 329, 333, 334], "s": [7, 11, 13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 44, 62, 88, 114, 163, 235, 236, 237, 302, 330, 331, 332, 333, 334, 335, 338, 339, 340], "installed": [7, 47, 69, 73, 92, 95, 333, 339], "default": [7, 13, 14, 15, 17, 18, 19, 21, 32, 33, 34, 36, 43, 44, 62, 88, 106, 137, 145, 157, 159, 163, 289, 300, 302, 316, 325, 329, 330, 334, 335, 340], "thos": 7, "ibm": [7, 69, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "cplex": [7, 47, 69, 70, 71, 72, 73, 329, 331, 333, 339], "cvxpy": 7, "matplotlib": [7, 333, 334, 335, 336, 337, 340], "see": [7, 21, 52, 69, 140, 289, 325, 328, 330, 334, 335, 339, 340], "mor": [7, 14, 15, 18, 19, 21, 33, 34, 66, 110, 145, 325, 329, 330, 331, 335], "local": [7, 66, 112, 145, 335, 340], "Il": [7, 329, 330, 332, 333, 334, 337], "mod": [7, 140, 142, 144, 220, 221, 329, 332, 334, 335], "semplic": [7, 332, 333, 334, 335], "segu": [7, 329, 330, 332, 333, 334, 335], "guid": 7, "https": [7, 21, 52, 66, 69, 145, 159, 163, 167, 174, 177, 181, 186, 193, 199, 202, 205, 211, 217, 289, 300, 325, 328, 329, 331, 339], "org": [7, 66, 69, 145, 159, 163, 167, 174, 177, 181, 186, 193, 199, 202, 205, 211, 217, 224, 289, 300, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "documentation": [7, 140], "getting_started": 7, "html": [7, 66, 145, 329], "__": [7, 331], "particol": [7, 333, 335], "istruzion": 7, "trov": [7, 333, 334, 335], "your": [7, 329, 337, 340], "virtual": 7, "environment": 7, "simply": 7, "add": [7, 311, 329, 330, 331, 335], "extra": 7, "list": [7, 15, 19, 22, 23, 30, 34, 35, 36, 37, 39, 40, 44, 45, 53, 56, 65, 75, 79, 80, 81, 86, 88, 102, 103, 105, 106, 118, 124, 126, 127, 134, 135, 137, 140, 154, 155, 156, 157, 159, 161, 163, 164, 167, 168, 170, 174, 175, 177, 178, 181, 183, 186, 187, 196, 199, 200, 202, 203, 205, 207, 210, 211, 214, 217, 218, 222, 226, 229, 233, 243, 247, 251, 252, 254, 258, 259, 262, 263, 266, 270, 271, 274, 276, 277, 301, 306, 317, 329, 331, 333, 334, 335, 340], "simil": [7, 335], "manner": 7, "how": [7, 106, 137, 329, 330, 331, 338, 340], "visualization": [7, 331, 334], "pip": [7, 339], "worth": 7, "pointing": 7, "out": [7, 23, 30, 48, 49, 119, 163, 170, 174, 181, 202, 205, 211, 217], "re": [7, 308, 330, 340], "zsh": 7, "user": [7, 97], "shell": 7, "newer": 7, "versions": [7, 339], "macos": 7, "ll": 7, "need": [7, 51, 65, 102, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "put": [7, 335], "quotes": 7, "codic": 7, "sorgent": [7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 44, 47, 48, 49, 51, 52, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 88, 89, 91, 92, 94, 95, 96, 97, 101, 102, 103, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 130, 134, 137, 138, 139, 140, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 251, 252, 254, 255, 258, 259, 260, 261, 262, 263, 266, 267, 270, 271, 272, 273, 274, 276, 277, 281, 283, 284, 289, 295, 300, 301, 302, 306, 311, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328], "installing": 7, "sourc": [7, 8, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "access": [7, 289, 300, 302, 316], "most": [7, 191, 340], "recently": 7, "updated": [7, 51, 63], "version": [7, 157, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "under": [7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "instead": [7, 163, 166, 333], "index": [7, 14, 15, 18, 19, 23, 30, 31, 33, 34, 38, 46, 48, 49, 54, 118, 119, 211, 212, 213, 255, 261, 273, 329, 340], "pypi": [7, 69, 339], "repository": 7, "giv": [7, 338], "ability": 7, "inspect": [7, 340], "extend": 7, "latest": [7, 335, 339], "sinc": [7, 21, 72, 94, 325, 330, 334, 340], "changes": [7, 66, 153, 157], "may": [7, 72, 74, 77, 96, 140, 221, 225, 289, 300, 302, 316, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "requ": [7, 231, 334], "changed": 7, "features": [7, 323, 338, 340], "follow": 7, "instructions": 7, "sam": [7, 21, 22, 51, 52, 319, 320, 325, 328, 330, 331, 335, 337, 338, 339], "clon": 7, "git": 7, "github": [7, 21, 52, 325, 328, 329], "cloning": 7, "creates": [7, 154, 155, 156, 254, 266, 283], "folder": 7, "called": [7, 137, 331], "cd": 7, "Se": [7, 329, 333, 335], "desider": 7, "esegu": [7, 333, 335], "test": [7, 333, 340], "controll": [7, 334, 335], "linting": 7, "bisogn": [7, 333, 334], "developer": 7, "requirements": 7, "r": [7, 331, 332, 333, 334, 335, 336], "dev": [7, 329, 330, 331, 334], "txt": [7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "vuol": 7, "modal": 7, "modific": [7, 334], "ovver": [7, 333], "modif": 7, "progett": [7, 333], "richied": [7, 332, 333], "nuov": [7, 329, 333, 334, 335], "esser": [7, 329, 330, 331, 332, 333, 334, 335], "applic": [7, 332, 334, 336], "farl": 7, "attravers": [7, 332, 334], "enabl": [7, 334], "reading": 7, "lp": [7, 20, 47, 55], "files": [7, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "cplexoptimizer": [7, 118, 333, 338, 339], "wrapper": [7, 66, 69, 92, 106, 145, 330], "currently": [7, 123, 330], "ther": [7, 21, 43, 77, 88, 137, 193, 220, 231, 325, 334, 335, 338, 340], "no": [7, 59, 66, 78, 88, 100, 106, 115, 225, 329, 330, 331, 332, 334, 337, 338, 340], "3": [7, 62, 66, 88, 118, 220, 266, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340], "9": [7, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "cas": [7, 72, 118, 129, 137, 157, 222, 226, 229, 233, 241, 329, 330, 332, 333, 334, 335, 336], "command": 7, "effect": 7, "cvx": 7, "goemans": [7, 75, 77, 80], "williamson": [7, 75, 77, 80], "optimizer": [7, 22, 35, 59, 60, 61, 62, 66, 67, 68, 69, 72, 74, 78, 89, 91, 92, 94, 96, 103, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 134, 137, 138, 139, 140, 142, 144, 145, 146, 147, 157, 158, 242, 244, 289, 300, 302, 316, 319, 320, 322, 330, 334, 335, 338, 340], "goemanswilliamsonoptimizer": 7, "draw": [7, 337, 338, 340], "method": [7, 47, 59, 62, 66, 77, 78, 110, 112, 115, 116, 145, 244, 311, 329, 331, 333], "graph": [7, 77, 163, 170, 171, 173, 174, 176, 181, 182, 184, 202, 205, 208, 211, 217, 334, 335, 337], "application": [7, 159, 163, 167, 174, 177, 181, 186, 193, 199, 202, 205, 211, 217], "gurobipy": [7, 92, 324, 327], "gurob": [7, 92, 93, 94, 95, 339], "gurobioptimizer": [7, 339], "div": [7, 334], "into": [7, 14, 15, 18, 19, 33, 34, 88, 106, 137, 157, 162, 166, 169, 175, 176, 180, 185, 188, 192, 198, 201, 204, 209, 216, 219, 220, 221, 222, 224, 225, 228, 231, 232, 238, 239, 241, 243, 323, 324, 330, 331, 333, 335, 337, 338, 339, 340], "tutorials": [7, 8, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "find": [7, 66, 88, 106, 133, 145, 334, 335, 337, 340], "about": [7, 118, 330, 331], "open": [8, 55, 340], "framework": [8, 332], "modul": [8, 11, 66, 69, 92, 106, 114, 145, 237, 329, 330, 334, 338, 340], "1e": [10, 17, 18, 19, 32, 33, 34, 145, 283], "20": [10, 17, 18, 19, 32, 33, 34, 69, 283, 331, 333, 334, 335, 338, 339, 340], "string": [10, 20, 43, 55, 67, 72, 94, 119, 122, 146, 182, 191, 329, 340], "number": [10, 14, 15, 18, 19, 24, 25, 26, 27, 28, 29, 33, 34, 62, 66, 77, 81, 83, 84, 88, 110, 113, 137, 140, 143, 145, 157, 159, 173, 186, 188, 193, 197, 206, 211, 212, 215, 229, 233, 276, 277, 289, 300, 302, 308, 313, 316, 331, 334, 335, 336, 337, 339, 340], "floating": 10, "point": [10, 289, 300, 302, 307, 316, 330, 340], "possibl": [10, 75, 220, 331, 334], "exception": [11, 72, 74, 91, 96, 335], "messag": [11, 59, 67, 78, 89, 107, 115, 138, 140, 144, 146, 242, 339], "returned": [11, 22, 35, 63, 97, 140, 301, 306, 317, 340], "with_traceback": 11, "tb": 11, "self": [11, 308, 335, 340], "__traceback__": 11, "nam": [12, 13, 14, 15, 16, 17, 18, 19, 23, 30, 31, 32, 33, 34, 36, 38, 43, 44, 46, 48, 49, 51, 54, 55, 118, 119, 128, 145, 184, 208, 224, 246, 251, 255, 262, 283, 284, 289, 300, 302, 316, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "bas": [12, 56, 58, 62, 63, 64, 66, 69, 75, 77, 81, 88, 92, 97, 101, 103, 106, 110, 114, 118, 130, 134, 137, 140, 145, 148, 153, 157, 159, 163, 167, 170, 174, 177, 181, 186, 189, 193, 199, 202, 205, 211, 217, 220, 224, 227, 231, 235, 236, 237, 240, 246, 251, 254, 262, 266, 274, 281, 283, 289, 300, 302, 316, 319, 320, 333, 334], "object": [12, 16, 39, 40, 62, 63, 81, 103, 104, 106, 112, 118, 120, 123, 140, 141, 145, 148, 149, 153, 227, 231, 232, 240, 274, 275, 276, 277, 278, 279, 280, 281, 319, 320, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "parametr": [12, 13, 14, 15, 17, 18, 19, 21, 23, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 43, 44, 47, 48, 49, 51, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 77, 78, 79, 80, 81, 88, 89, 91, 92, 94, 96, 102, 103, 106, 107, 109, 110, 112, 115, 116, 117, 118, 119, 134, 137, 138, 139, 140, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 170, 171, 173, 174, 175, 177, 178, 181, 182, 183, 184, 186, 187, 190, 191, 193, 196, 199, 200, 202, 203, 205, 206, 207, 208, 211, 212, 214, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 240, 241, 242, 243, 244, 246, 247, 251, 252, 254, 255, 258, 259, 261, 262, 263, 266, 267, 270, 271, 272, 273, 274, 276, 277, 281, 283, 289, 300, 301, 302, 306, 316, 317, 323, 324, 325, 326, 327, 328, 335], "str": [12, 13, 14, 15, 17, 18, 19, 20, 23, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 54, 55, 59, 67, 69, 70, 72, 78, 81, 85, 89, 94, 107, 115, 119, 122, 126, 128, 134, 136, 138, 140, 144, 146, 184, 208, 220, 223, 242, 246, 247, 248, 251, 252, 254, 255, 258, 259, 261, 262, 263, 266, 267, 270, 271, 273, 274, 276, 277, 283, 284, 286, 289, 295, 300, 302, 309, 310, 311, 316, 321, 322, 334, 335, 338, 340], "attributes": [12, 56, 58, 66, 69, 75, 81, 88, 92, 97, 103, 106, 110, 118, 130, 134, 140, 145, 148, 157, 163, 170, 174, 177, 181, 193, 202, 205, 211, 217, 220, 227, 231, 240, 246, 251, 254, 262, 266, 274, 281, 283, 289, 300, 302, 316, 319, 320], "methods": [12, 56, 58, 62, 63, 64, 66, 69, 75, 77, 81, 88, 92, 101, 103, 106, 110, 114, 118, 119, 134, 137, 140, 145, 148, 153, 157, 159, 163, 167, 170, 174, 177, 181, 186, 189, 193, 199, 202, 205, 211, 217, 220, 224, 227, 231, 232, 235, 236, 237, 240, 246, 251, 254, 262, 266, 274, 281, 283, 289, 300, 302, 316, 319, 320, 335], "None": [13, 14, 15, 16, 17, 18, 19, 21, 29, 32, 33, 34, 36, 39, 40, 44, 47, 48, 49, 51, 55, 58, 66, 69, 75, 81, 88, 92, 103, 106, 118, 129, 137, 140, 157, 159, 163, 165, 166, 171, 173, 193, 194, 206, 212, 227, 231, 240, 274, 289, 295, 300, 301, 302, 306, 311, 316, 317, 323, 335, 340], "adds": [13, 17, 32, 36, 44], "variabl": [13, 14, 15, 17, 18, 19, 21, 22, 31, 32, 33, 34, 43, 50, 51, 52, 53, 54, 56, 66, 75, 81, 103, 110, 118, 119, 126, 127, 128, 129, 134, 136, 139, 140, 145, 155, 164, 168, 178, 200, 203, 218, 221, 225, 232, 252, 254, 255, 256, 258, 259, 261, 263, 266, 267, 268, 270, 271, 273, 276, 277, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "empty": [13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 44, 55, 59, 72, 78, 94, 115, 329], "g": [13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 44, 51, 106, 137, 193, 289, 300, 302, 316, 329, 331, 333, 334, 335, 339, 340], "x0": [13, 14, 15, 17, 18, 19, 32, 33, 34, 331, 332, 338], "used": [13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 44, 58, 62, 66, 69, 81, 83, 84, 88, 90, 92, 106, 137, 145, 156, 157, 223, 224, 230, 234, 245, 247, 283, 289, 294, 300, 302, 316, 323, 330, 333, 338, 340], "tip": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 65, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 102, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 191, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334], "ritorn": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 65, 67, 68, 70, 71, 72, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 102, 104, 105, 107, 108, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 154, 155, 156, 158, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 191, 192, 194, 196, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 333], "added": [13, 17, 32, 36, 44, 227, 231, 240, 338], "soll": [13, 14, 15, 17, 18, 19, 21, 22, 23, 30, 32, 33, 34, 36, 43, 44, 47, 48, 49, 51, 52, 55, 61, 68, 74, 88, 91, 96, 106, 109, 110, 117, 118, 119, 137, 139, 147, 153, 157, 158, 208, 221, 225, 228, 229, 232, 233, 241, 256, 268, 276, 277, 281, 283, 289, 301, 306, 317, 323, 324, 325, 326, 327, 328], "qiskitoptimizationerror": [13, 14, 15, 17, 18, 19, 21, 22, 32, 33, 34, 36, 43, 44, 51, 52, 61, 68, 74, 91, 96, 106, 109, 117, 118, 137, 139, 147, 153, 157, 158, 208, 221, 225, 228, 229, 232, 233, 241, 256, 268, 276, 277, 283, 289, 323, 324, 325, 326, 327, 328, 329, 331], "already": [13, 14, 15, 17, 18, 19, 32, 33, 34, 36, 44, 154, 156], "occupied": [13, 17, 32], "keys": [14, 15, 18, 19, 33, 34, 254, 261, 266, 273, 289, 300, 302, 316, 340], "key_format": [14, 15, 18, 19, 33, 34], "uses": [14, 15, 18, 19, 33, 34, 88, 157, 254, 266, 330, 331, 334], "var_dict": [14, 18, 33], "construct": [14, 15, 18, 19, 33, 34, 231, 289, 331, 333, 334, 340], "dictionary": [14, 18, 33, 38, 46, 54, 128, 134, 136, 254, 261, 266, 273, 289, 300, 302, 309, 316, 329, 340], "format": [14, 15, 18, 19, 20, 33, 34, 163, 170, 174, 181, 182, 184, 190, 202, 205, 208, 211, 217, 241, 329, 330, 331, 336], "union": [14, 15, 17, 18, 19, 22, 23, 30, 31, 32, 33, 34, 35, 36, 39, 40, 44, 48, 49, 51, 75, 81, 88, 103, 106, 118, 119, 134, 137, 140, 157, 160, 161, 163, 164, 168, 170, 171, 174, 175, 178, 181, 183, 187, 190, 191, 193, 196, 200, 202, 203, 205, 207, 211, 214, 217, 218, 222, 226, 229, 233, 243, 247, 251, 252, 254, 255, 258, 259, 261, 262, 263, 266, 267, 270, 271, 273, 274, 276, 277, 283, 284, 285, 287, 289, 293, 300, 302, 309, 316], "int": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 43, 44, 46, 48, 49, 51, 54, 62, 66, 77, 81, 83, 84, 85, 88, 110, 113, 119, 134, 136, 137, 140, 142, 143, 145, 157, 159, 163, 164, 165, 167, 168, 171, 173, 175, 177, 178, 179, 182, 183, 186, 187, 193, 196, 197, 199, 200, 203, 206, 207, 210, 211, 212, 213, 214, 215, 218, 247, 251, 252, 254, 255, 258, 259, 261, 262, 263, 266, 267, 270, 271, 273, 274, 276, 277, 283, 284, 285, 287, 289, 294, 296, 300, 302, 313, 316, 330, 331, 334, 335, 336, 338, 339, 340], "sequenc": [14, 15, 18, 19, 33, 34], "interpreted": [14, 15, 18, 19, 33, 34], "otherwis": [14, 15, 18, 19, 33, 34, 35, 51, 67, 89, 107, 116, 138, 145, 146, 220, 231, 235, 236, 242, 244, 315, 318, 325, 336], "elements": [14, 15, 18, 19, 33, 34, 323, 324, 326, 327], "converted": [14, 15, 18, 19, 33, 34, 89, 91, 107, 138, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 241, 242, 243, 330], "strings": [14, 15, 18, 19, 33, 34, 43], "substituted": [14, 15, 18, 19, 33, 34, 51, 134, 136, 329], "dict": [14, 18, 33, 36, 38, 39, 40, 44, 46, 51, 54, 69, 70, 81, 85, 128, 134, 136, 171, 182, 191, 247, 251, 252, 254, 258, 259, 261, 262, 263, 266, 270, 271, 273, 274, 276, 277, 289, 295, 300, 302, 309, 311, 316, 322, 329, 340], "mapping": [14, 18, 33, 62, 224, 331], "names": [14, 18, 33, 126, 254, 261, 266, 267, 273, 329], "instances": [14, 15, 18, 19, 33, 34, 335], "taken": [14, 15, 18, 19, 33, 34, 331, 334], "less": [14, 15, 18, 19, 33, 34, 36, 44, 77], "than": [14, 15, 18, 19, 21, 33, 34, 36, 44, 66, 77, 110, 145, 283, 289, 325, 335, 340], "one": [14, 15, 18, 19, 33, 34, 66, 75, 88, 106, 110, 137, 145, 157, 221, 224, 241, 331, 334, 335, 337, 340], "instantiation": [14, 15, 18, 19, 33, 34], "attempted": [14, 15, 18, 19, 33, 34, 331], "substitution": [14, 15, 18, 19, 33, 34, 50, 51, 139, 329], "nested": [14, 15, 18, 19, 33, 34], "var_list": [15, 19, 34], "clears": 16, "deletes": 16, "function": [16, 56, 66, 75, 81, 88, 103, 106, 118, 120, 134, 140, 141, 145, 149, 231, 232, 274, 275, 276, 277, 278, 279, 280, 302, 316, 319, 320, 323, 324, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "lowerbound": [17, 18, 19, 32, 33, 34, 66, 110, 145, 224, 283, 284, 329, 330, 339], "upperbound": [17, 18, 19, 32, 33, 34, 66, 110, 145, 224, 283, 284, 329, 330, 339], "float": [17, 18, 19, 21, 22, 32, 33, 34, 35, 36, 39, 40, 44, 51, 56, 62, 63, 66, 75, 79, 81, 82, 87, 88, 103, 106, 110, 111, 118, 119, 120, 128, 134, 137, 140, 145, 149, 150, 153, 154, 155, 156, 157, 210, 222, 226, 227, 229, 230, 231, 233, 234, 240, 243, 245, 246, 247, 249, 251, 252, 254, 255, 258, 259, 261, 262, 263, 266, 267, 270, 271, 273, 274, 275, 276, 277, 283, 284, 285, 287, 289, 290, 300, 302, 316, 323, 325, 328, 331, 340], "lower": [18, 19, 33, 34, 51, 66, 110, 145, 256, 268, 285, 329, 330, 336], "bound": [18, 19, 33, 34, 66, 110, 145, 256, 268, 285, 329, 330, 335, 338], "upper": [18, 19, 33, 34, 51, 66, 110, 145, 256, 266, 268, 329, 330], "returns": [20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 38, 41, 42, 43, 45, 46, 53, 54, 57, 59, 60, 67, 70, 71, 72, 73, 76, 77, 78, 80, 86, 89, 93, 94, 95, 104, 105, 107, 108, 111, 113, 115, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 135, 136, 138, 141, 142, 143, 144, 146, 157, 195, 197, 223, 230, 234, 242, 244, 245, 248, 249, 250, 253, 255, 256, 257, 260, 261, 264, 265, 267, 268, 269, 272, 273, 275, 278, 279, 280, 282, 284, 285, 286, 287, 288, 292, 293, 296, 304, 305, 307, 308, 314, 326, 327, 336, 340], "representing": [20, 43, 106, 122, 163, 170, 174, 181, 202, 205, 211, 217], "qubit_op": [21, 52, 325, 328], "offset": [21, 39, 40, 52, 274, 325, 328, 329, 331, 332, 334, 335, 336, 337], "lin": [21, 23, 27, 36, 37, 38, 39, 40, 44, 48, 106, 118, 137, 145, 231, 241, 251, 254, 256, 257, 258, 259, 260, 261, 262, 274, 323, 324, 325, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340], "fals": [21, 35, 62, 69, 92, 116, 145, 244, 261, 272, 273, 289, 300, 302, 315, 316, 318, 325, 333, 340], "cre": [21, 157, 206, 212, 325, 329, 331, 332, 333, 334, 336, 338], "qubit": [21, 52, 301, 306, 317, 325, 328, 332, 334, 335, 337, 338, 340], "operator": [21, 52, 289, 295, 301, 306, 311, 315, 317, 318, 325, 328, 331, 333, 335, 338, 340], "shift": [21, 325, 331], "valu": [21, 22, 35, 43, 52, 56, 62, 63, 75, 77, 79, 81, 82, 88, 97, 103, 110, 111, 118, 119, 120, 128, 130, 134, 136, 137, 140, 141, 149, 157, 206, 210, 212, 231, 258, 259, 270, 271, 276, 277, 289, 300, 315, 318, 323, 325, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340], "mapped": [21, 52, 325, 328, 330], "qubits": [21, 52, 81, 83, 84, 88, 325, 328, 335, 337], "order": [21, 52, 118, 207, 325, 328, 329, 331, 334, 340], "th": [21, 52, 255, 325, 328], "com": [21, 52, 69, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336], "issues": [21, 52, 59, 78, 115, 325, 328], "1148": [21, 52, 325, 328], "details": [21, 52, 69, 325, 328, 331, 334, 339, 340], "operatorbas": [21, 289, 293, 300, 301, 306, 317, 325, 328], "ising": [21, 52, 106, 325, 328, 330, 331, 336], "hamiltonian": [21, 52, 106, 193, 289, 300, 325, 328, 331, 338, 340], "bool": [21, 35, 62, 69, 71, 77, 92, 93, 116, 145, 157, 244, 261, 272, 273, 289, 297, 298, 299, 300, 302, 308, 314, 315, 316, 318, 325, 339], "tru": [21, 35, 62, 73, 77, 95, 116, 157, 244, 289, 297, 298, 315, 318, 325, 329, 331, 333, 334, 335, 338, 339, 340], "x": [21, 22, 35, 36, 44, 51, 56, 75, 77, 79, 81, 103, 118, 121, 134, 140, 145, 148, 160, 182, 193, 222, 224, 226, 229, 231, 232, 233, 239, 243, 247, 252, 258, 259, 263, 270, 271, 274, 276, 277, 325, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340], "2": [21, 51, 62, 66, 98, 118, 132, 145, 211, 212, 231, 232, 266, 325, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "treated": [21, 325], "term": [21, 77, 231, 232, 262, 325, 329, 331, 334, 335, 336, 338, 340], "1": [21, 58, 62, 66, 69, 77, 99, 110, 118, 131, 134, 136, 137, 145, 153, 157, 159, 163, 164, 167, 168, 174, 177, 178, 181, 186, 193, 199, 200, 202, 203, 205, 211, 217, 218, 224, 231, 232, 266, 289, 300, 325, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "else": [21, 69, 92, 334, 335, 336], "paul": [21, 325, 331, 334, 335, 340], "xs": [21, 325], "any": [21, 69, 70, 112, 118, 123, 231, 246, 251, 254, 256, 262, 266, 268, 274, 283, 289, 295, 300, 302, 309, 311, 316, 322, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "zs": [21, 325], "notimplementederror": [21, 325], "input": [21, 22, 81, 83, 206, 212, 325, 330, 331, 332, 340], "listop": [21, 325], "whether": [22, 35, 59, 67, 69, 71, 72, 78, 89, 92, 93, 94, 97, 107, 115, 116, 137, 138, 146, 242, 244, 261, 272, 273, 289, 299, 300, 302, 308, 314, 315, 316, 318, 340], "solution": [22, 35, 62, 75, 76, 81, 86, 105, 106, 118, 124, 132, 133, 140, 148, 155, 160, 182, 210, 331, 334, 337, 338, 339], "feasibl": [22, 35, 62, 66, 133, 334, 335], "along": 22, "violations": [22, 66], "type": [22, 29, 52, 88, 106, 118, 137, 208, 210, 220, 221, 225, 232, 283, 284, 288, 329, 330, 340], "ndarray": [22, 35, 36, 39, 40, 44, 56, 75, 76, 79, 81, 103, 112, 118, 121, 129, 134, 140, 141, 152, 155, 160, 161, 163, 164, 168, 170, 171, 174, 175, 178, 181, 182, 183, 184, 187, 190, 191, 196, 200, 202, 203, 205, 207, 210, 211, 214, 217, 218, 222, 226, 229, 233, 239, 243, 247, 251, 252, 254, 258, 259, 260, 262, 263, 266, 270, 271, 272, 274, 276, 277, 289, 300, 302, 307, 316, 340], "param": [22, 210], "violated": 22, "constraint": [22, 23, 30, 36, 38, 44, 46, 48, 49, 62, 66, 225, 228, 231, 232, 251, 252, 253, 262, 263, 264, 265, 330, 338, 339], "len": [22, 334, 335, 336, 338, 340], "total": [22, 24, 25, 26, 29, 187, 210, 301, 306, 317, 334, 337, 338, 339], "vars": [22, 339], "linearconstraint": [23, 36, 37], "corresponding": [23, 30, 31, 106, 120, 128, 137, 164, 168, 178, 200, 203, 218, 253, 255, 260, 261, 264, 265, 267, 272, 273, 284, 323, 324, 325, 326, 327, 330, 331, 334, 337, 340], "indexerror": [23, 30, 48, 49, 119], "siz": [23, 30, 66, 163, 166, 331, 335, 337], "keyerror": [23, 30, 48, 49, 119], "does": [23, 30, 47, 48, 49, 55, 62, 106, 228, 276, 277], "exist": [23, 30, 47, 48, 49, 52, 328, 330, 334], "vartyp": [29, 283, 284, 338], "specified": [29, 58, 66, 88, 106, 110, 112, 137, 145, 157, 163, 166, 170, 174, 181, 202, 205, 211, 217, 221, 289, 300, 334, 337], "filtered": 29, "All": [29, 98, 220, 335], "counted": 29, "quadraticconstraint": [30, 44, 45], "sens": [36, 44, 221, 235, 236, 246, 251, 262, 274, 329, 330, 334, 335, 340], "rhs": [36, 44, 246, 251, 262, 329, 330, 335], "form": [36, 44, 88, 106, 137, 157, 238, 239, 241, 272, 273, 274, 329, 330, 331, 334, 335, 337, 340], "spmatrix": [36, 39, 40, 44, 251, 254, 262, 266, 274], "coefficients": [36, 39, 40, 44, 251, 254, 260, 261, 262, 266, 272, 273, 274, 329, 330], "left": [36, 247, 252, 253, 263, 264, 265, 330, 334], "hand": [36, 44, 246, 247, 249, 251, 252, 253, 262, 263, 264, 265], "sid": [36, 44, 246, 247, 249, 251, 252, 253, 262, 263, 264, 265, 330, 340], "constraintsens": [36, 44, 246, 250, 251, 262, 329], "E": [36, 44, 62, 289, 300, 302, 316, 329, 331, 333, 334, 335], "eq": [36, 44, 224, 329, 330], "denot": [36, 44, 335], "equal": [36, 44, 118, 119, 159, 337], "ge": [36, 44, 329, 330], "greater": [36, 44, 283, 335], "L": [36, 44, 332, 333, 334, 335], "LE": [36, 44, 329, 330], "right": [36, 44, 246, 249, 251, 262, 330, 336], "c0": [36, 329, 334, 337, 338, 339], "exists": [36, 44, 228, 232, 328, 338], "valid": [36, 51, 289, 300, 333], "property": [37, 38, 41, 42, 45, 46, 50, 53, 54, 57, 60, 70, 71, 76, 82, 83, 84, 85, 86, 87, 90, 93, 104, 105, 108, 111, 113, 120, 123, 124, 125, 126, 127, 128, 129, 135, 136, 141, 142, 143, 144, 165, 172, 179, 195, 197, 213, 215, 223, 230, 234, 245, 248, 249, 250, 253, 256, 257, 264, 265, 268, 269, 275, 278, 279, 280, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 321, 322], "maps": [38, 46, 54], "sets": [39, 40, 183], "maximized": [39, 337], "part": [39, 40, 262, 274, 275, 278, 279, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "tupl": [39, 40, 44, 51, 112, 134, 135, 136, 262, 266, 267, 273, 274, 284, 328, 331, 334, 340], "created": [39, 40, 88, 106, 137, 154, 156, 157, 162, 166, 169, 176, 180, 185, 188, 198, 201, 204, 206, 209, 212, 216, 219], "minimized": [40, 334, 337, 340], "quadraticobject": 42, "wrap": 43, "80": 43, "pretty": [43, 122], "printed": [43, 122], "text": [43, 231, 232, 329, 330, 340], "width": 43, "output": [43, 66, 69, 81, 84, 92, 145, 272, 273, 330, 338], "disabled": 43, "setting": [43, 71, 93, 338, 339], "might": [43, 331], "exceed": 43, "exampl": [43, 266, 330, 331, 334, 335, 337, 338, 340], "long": 43, "won": 43, "t": [43, 158, 329, 333, 334, 335, 336, 338], "wrapped": [43, 66, 69, 92, 145], "printabl": 43, "q0": [44, 329], "filenam": [47, 55, 184, 208], "loads": 47, "fil": [47, 55, 184, 208, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "loaded": [47, 323, 324], "filenotfounderror": 47, "requires": [47, 340], "present": [47, 329, 333, 334, 335], "pythonpath": 47, "remov": [48, 49, 329], "quadraticprogramstatus": [50, 329], "infeasibl": [50, 51, 139, 329, 331], "due": [50, 74, 91, 96, 139, 329, 330, 334, 335], "constants": [51, 329], "substitutes": 51, "replac": [51, 331], "means": 51, "weighted": [51, 106], "copy": [51, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "everything": 51, "referenc": [51, 66, 145, 330, 333, 336], "mak": [51, 329, 335], "sur": [51, 335], "indices": [51, 161, 164, 175, 178, 183, 203, 207, 218, 254, 261, 266, 267, 273], "matched": 51, "correctly": 51, "bounds": [51, 329, 335, 339], "accordingly": 51, "y": [51, 62, 145, 160, 231, 232, 329, 330, 331, 332, 334, 335, 339, 340], "substituting": [51, 134, 136], "status": [51, 56, 75, 81, 103, 118, 130, 134, 140, 145, 148, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340], "gets": [51, 329, 334], "invalid": [51, 88, 106, 137], "follows": [51, 118, 289, 300, 302, 316, 324, 335, 337, 339, 340], "multipl": [51, 331], "times": [51, 329, 333, 338], "coefficient": [51, 224, 255, 267, 325, 329, 330, 334], "zer": [51, 66, 110, 145], "writes": 55, "model": [55, 163, 166, 193, 194, 198, 323, 324, 326, 327, 329, 332, 333, 336, 338, 339, 340], "written": [55, 335], "directory": [55, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "my_problem": 55, "appended": 55, "end": [55, 97, 231, 232, 329, 332, 338, 339], "suffix": 55, "oserror": 55, "docplexexception": 55, "fval": [56, 75, 81, 82, 103, 118, 134, 140, 148, 331, 333, 336, 338, 339], "stat": [56, 63, 106, 137, 153, 154, 157, 191, 289, 292, 300, 301, 306, 315, 317, 318, 329, 330, 331, 332, 333, 334, 335, 338, 340], "admmoptimization": 56, "optimal": [56, 62, 75, 103, 106, 134, 331, 335, 336, 337, 338, 339], "found": [56, 59, 62, 75, 78, 103, 115, 118, 120, 129, 134, 334, 335, 339, 340], "admm": [56, 58, 61, 62, 63], "admmstat": [56, 57], "internal": [56, 63, 336], "computation": [56, 63], "optimizationresultstatus": [56, 75, 81, 103, 118, 125, 134, 140, 151, 331, 339], "termination": [56, 75, 81, 103, 118, 125, 130, 134, 140], "qubo_optimizer": [58, 333], "continuous_optimizer": [58, 333], "params": [58, 333, 336], "optimizationalgorithm": [58, 66, 69, 77, 88, 92, 106, 110, 137, 145, 157], "implementation": [58, 62, 63, 153, 157], "heuristic": [58, 289, 335, 340], "introduced": [58, 137, 289, 300, 330, 331, 336], "references": [58, 137, 157, 159, 163, 167, 174, 177, 181, 186, 193, 199, 202, 205, 211, 217, 224, 231, 334], "gambell": [58, 333], "C": [58, 332, 333, 334, 335, 340], "simonett": [58, 333], "2020": [58, 333, 336, 340], "mult": [58, 66, 110, 112, 145, 333], "block": [58, 62, 333], "heuristics": [58, 333], "mixed": [58, 333], "computers": [58, 333, 337], "arxiv": [58, 137, 157, 193, 224, 231, 289, 300, 330, 331, 332, 333, 334, 335, 338], "preprint": [58, 331, 332, 333], "2001": [58, 333], "02069": [58, 333], "instanc": [58, 88, 90, 91, 104, 106, 110, 134, 135, 137, 157, 162, 166, 169, 176, 180, 185, 188, 192, 198, 201, 204, 206, 208, 209, 212, 216, 219, 281, 301, 306, 317, 330, 331, 335, 336, 337, 338, 340], "effectively": 58, "minimumeigenoptimizer": [58, 134, 135, 137, 157, 332, 333, 334, 335, 336, 337, 338, 339, 340], "initialized": [58, 62], "numpyminimumeigensolver": [58, 137, 331, 332, 333, 334, 335, 336, 337, 338], "slsqpoptimizer": 58, "admmparameters": [58, 60, 333], "checks": [59, 67, 72, 78, 89, 94, 107, 115, 116, 138, 146, 242, 244], "implementing": [59, 78, 115, 116, 244], "check": [59, 67, 72, 78, 89, 94, 107, 115, 116, 138, 146, 242, 244, 335], "compatibility": [59, 67, 72, 78, 89, 94, 107, 115, 116, 138, 146, 242, 244], "incompatibility": [59, 67, 74, 78, 89, 91, 96, 107, 115, 138, 146, 242], "wer": [59, 78, 115, 329, 330], "current": [60, 289, 300, 302, 316], "tries": [61, 68, 74, 91, 96, 109, 117, 139, 147, 158], "solves": [61, 68, 74, 91, 96, 109, 117, 147, 158, 335], "admmoptimizationresult": 61, "applied": [61, 66, 68, 74, 91, 96, 109, 112, 117, 137, 139, 145, 147, 158, 340], "rho_initial": [62, 63, 333], "10000": 62, "factor_c": [62, 333], "100000": 62, "bet": [62, 333, 338, 340], "1000": [62, 66, 333, 334, 337, 339], "maxiter": [62, 289, 300, 302, 316, 333, 334, 336, 339, 340], "10": [62, 224, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "tol": [62, 333], "0001": [62, 66], "max_tim": 62, "inf": 62, "three_block": [62, 333], "vary_rh": 62, "tau_incr": 62, "tau_decr": 62, "mu_res": 62, "mu_merit": 62, "warm_start": 62, "defines": [62, 97, 140, 335], "parameters": [62, 66, 69, 70, 137, 145, 289, 300, 302, 316, 335, 339, 340], "values": [62, 63, 66, 75, 77, 79, 81, 103, 110, 118, 128, 129, 145, 152, 155, 177, 247, 252, 254, 258, 259, 263, 266, 270, 271, 276, 277, 289, 300, 301, 302, 306, 316, 317, 319, 320, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "initial": [62, 63, 66, 110, 145, 153, 154, 155, 156, 157, 289, 292, 300, 302, 307, 316, 338, 340], "rho": [62, 63, 333], "parameter": [62, 63, 66, 110, 145, 153, 157, 289, 300, 302, 316, 319, 320, 334, 335, 338, 339, 340], "penalizing": 62, "factor": [62, 88, 106, 137, 157, 227, 230, 231, 232, 234, 240, 245, 330, 336], "when": [62, 66, 88, 106, 118, 137, 145, 153, 157, 163, 165, 166, 171, 289, 329, 338, 339, 340], "penalization": 62, "decision": [62, 297, 333, 334, 335, 340], "maximum": [62, 66, 145, 159, 177, 181, 206, 212, 337], "iterations": [62, 88, 140, 143, 145, 333, 336], "toleranc": [62, 66], "residual": 62, "convergenc": 62, "running": 62, "tim": [62, 331, 333, 334, 337, 339, 340], "seconds": 62, "boolean": [62, 289, 340], "flag": [62, 289, 340], "select": 62, "rul": 62, "updat": [62, 339, 340], "increases": 62, "at": [62, 97, 134, 135, 137, 193, 266, 301, 306, 317, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "each": [62, 63, 81, 85, 97, 101, 137, 145, 161, 214, 289, 300, 302, 316, 331, 334, 336, 337, 340], "iteration": [62, 81, 85, 97, 99, 137, 340], "modified": [62, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "according": [62, 80, 153, 157, 331], "primal": 62, "dual": [62, 333], "residuals": [62, 333], "update_rho_by_residuals": 62, "boyd": [62, 333], "parikh": [62, 333], "n": [62, 193, 206, 212, 231, 232, 329, 332, 333, 334, 335, 336, 337, 338, 340], "chu": [62, 333], "pel": [62, 333], "b": [62, 329, 330, 333, 334, 335, 339], "eckstein": [62, 333], "j": [62, 77, 157, 193, 231, 232, 267, 333, 334, 335, 336, 338, 340], "2011": [62, 333], "distributed": [62, 333], "statistical": [62, 333], "learning": [62, 333, 340], "alternating": [62, 333], "direction": [62, 333], "multipliers": [62, 333], "foundations": [62, 333], "trends": [62, 333], "machin": [62, 333], "122": [62, 333], "comp": [62, 79, 191, 210, 315, 318, 335, 338, 339], "merit": 62, "start": [62, 66, 110, 112, 145, 153, 154, 155, 157, 158, 329, 331], "pre": [62, 157, 158, 335], "solving": [62, 63, 334], "relaxed": [62, 155, 157, 338], "option": [62, 340], "guarante": 62, "even": [62, 330, 333, 335], "tuning": 62, "help": 62, "considered": [62, 331], "hint": 62, "iter": [62, 137, 145, 332, 333], "process": [62, 334, 335], "op": [63, 331, 337, 340], "keeps": 63, "track": 63, "various": [63, 337], "stored": [63, 97, 98, 99, 100, 137], "during": [63, 106, 289, 300, 302, 316], "recreated": 63, "third": [63, 335], "abc": [64, 110, 114, 189, 237], "abstract": [64, 65, 110, 114, 115, 117, 170, 189, 190, 192, 237, 238, 239, 246, 247], "aggregates": [64, 65, 101, 157], "results": [64, 65, 75, 97, 98, 99, 100, 101, 102, 118, 123, 134, 135, 137, 157, 193, 331, 332, 334, 336, 338], "minimumeigenoptimizationresult": [65, 102, 109, 134, 135, 158], "combined": [65, 102], "solutionsampl": [65, 75, 81, 86, 102, 103, 105, 118, 124, 331, 339], "aggregated": [65, 102], "samples": [65, 75, 81, 86, 102, 103, 105, 118, 121, 289, 335, 338, 339, 340], "rhobeg": 66, "rhoend": 66, "maxfun": 66, "disp": [66, 69, 92, 339], "catol": 66, "0002": 66, "trials": [66, 110, 145], "clip": [66, 110, 145], "100": [66, 110, 145, 206, 212, 289, 300, 302, 316, 333, 335, 336, 339, 340], "multistartoptimizer": [66, 145], "scipy": [66, 140, 145], "cobyl": [66, 333, 336, 339], "provides": [66, 69, 92, 106, 145, 330, 331, 334, 340], "optimiz": [66, 140, 145, 331, 340], "fmin_cobyl": 66, "docs": [66, 69, 145, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "doc": [66, 145, 329], "14": [66, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "generated": [66, 80, 145, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "arguments": [66, 145, 340], "passed": [66, 145, 157, 227, 231, 240, 289, 300, 302, 316, 338], "constructor": [66, 145, 283], "esemp": [66, 69, 92, 106, 118, 137, 145, 220, 224, 240, 329, 330, 332, 334, 335], "qiskit_optimization": [66, 69, 92, 106, 118, 137, 145, 220, 224, 240, 300, 316, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "import": [66, 69, 92, 106, 118, 137, 145, 220, 224, 240, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "specify": [66, 69, 92, 106, 137, 145, 329], "initializes": [66, 69, 92, 137, 145, 157, 246], "initializer": [66, 106, 137, 145, 335], "takes": [66, 106, 137, 145, 331, 334, 335, 337], "stores": [66, 145, 254, 266], "later": [66, 145], "invoked": [66, 145], "optimum": [66, 145, 334, 336], "consisting": [66, 106, 145, 262, 284, 340], "only": [66, 67, 77, 99, 106, 145, 146, 157, 221, 227, 235, 236, 289, 300, 302, 316, 324, 330, 331, 334, 335, 339, 340], "reasonabl": 66, "final": [66, 141, 145, 335, 336, 340], "accuracy": [66, 145], "precisely": [66, 329], "guaranteed": 66, "trust": 66, "region": 66, "controls": [66, 334, 335], "frequency": 66, "implies": 66, "evaluations": 66, "absol": 66, "trial": [66, 110, 145, 334, 335], "guess": [66, 110, 145], "guesses": [66, 110, 145], "uniformly": [66, 110, 145, 193], "drawn": [66, 110, 145, 334], "potential": [66, 110, 145, 334], "clipping": [66, 110, 145], "unbounded": [66, 110, 145, 256, 268], "replaced": [66, 110, 145, 330, 331], "correspondingly": [66, 110, 145], "contains": [67, 75, 146, 225, 256, 268, 319, 320, 323, 324, 326, 330, 331, 340], "explaining": [67, 89, 107, 138, 146, 242], "describing": [67, 89, 107, 138, 140, 144, 146, 242, 309], "runs": [68, 74, 91, 96, 109, 117, 139, 147, 289, 340], "try": [68, 74, 91, 96, 109, 117, 139, 147, 158, 329, 331, 334, 335, 337], "incompatibl": [68, 74, 91, 96, 117, 139, 147, 241], "cplex_parameters": [69, 339], "project": [69, 339, 340], "is_cplex_installed": 69, "print": [69, 71, 92, 93, 118, 145, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "www": [69, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "en": [69, 159, 163, 167, 174, 177, 181, 186, 199, 202, 205, 211, 217], "icos": 69, "topic": 69, "display": [71, 93, 329, 339], "accepts": [72, 94], "modeled": [72, 94], "throw": 72, "determined": [72, 231], "static": [73, 79, 95, 173, 182, 184, 191, 206, 208, 210, 212, 242], "depending": [74, 96, 335], "settings": [74, 96, 289, 300, 302, 316], "sdp_solution": 75, "properties": [75, 81, 140], "contain": [75, 221, 225, 228, 289, 300, 302, 316], "explor": 75, "solutions": [75, 157, 335, 339], "sdp": [75, 76], "num_cuts": 77, "sort_cuts": 77, "unique_cuts": 77, "seed": [77, 173, 193, 206, 212, 334, 335, 336, 337], "max": [77, 80, 181, 183, 185, 332, 335, 337], "cut": [77, 79, 80, 181, 183, 185, 330, 335, 337, 339, 340], "sum_": [77, 193, 231, 232, 330, 334, 335], "w": [77, 329, 333, 334, 335, 336], "therefor": [77, 338, 340], "encodes": [77, 80, 335], "negat": [77, 332, 334, 340], "adjacency": [77, 79, 184, 210, 340], "matrix": [77, 79, 121, 184, 210, 254, 266, 329, 334, 336, 338, 340], "cuts": [77, 80], "gener": [77, 194, 329, 330, 334, 335, 337, 339], "sort": [77, 336], "uniqu": 77, "thus": [77, 330, 331], "random": [77, 173, 193, 206, 212, 289, 300, 302, 316, 334, 335, 336, 337, 340], "generator": [77, 193], "adj_matrix": [79, 210, 334], "numpy": [79, 182, 184, 191, 193, 331, 333, 334, 335, 336, 337, 338, 340], "array": [79, 163, 170, 174, 181, 182, 184, 190, 202, 205, 211, 217, 231, 232, 254, 260, 266, 272, 329, 331, 335, 336, 338, 339, 340], "operation_counts": 81, "n_input_qubits": 81, "n_output_qubits": 81, "intermediate_fval": 81, "threshold": [81, 137, 331], "raw_samples": [81, 103], "constructs": [81, 110, 134, 140, 262, 274, 335], "defined": [81, 140, 254, 266, 329, 330, 338], "counts": [81, 85, 191, 336], "operation": [81, 85, 145], "performed": [81, 85], "represent": [81, 83, 84, 160, 340], "intermed": [81, 82, 97, 98, 100, 134, 135, 137, 289, 300, 302, 314, 316, 331, 336, 337], "minimization": [81, 235, 236, 241, 330, 334], "expected": [81, 281, 334, 336], "consistent": [81, 338], "probability": [81, 101, 103, 148, 331, 336, 338, 339, 340], "sampling": [81, 103, 335, 338], "getter": [82, 83, 84, 87, 165, 172, 179, 195, 197, 213, 215], "get": [85, 118, 121, 160, 182, 301, 306, 317, 331, 334, 335, 339], "raw": [86, 105], "num_value_qubits": 88, "num_iterations": [88, 332], "quantum_instanc": [88, 331, 332, 333, 334, 335, 336, 337, 338, 339], "converters": [88, 106, 118, 137, 157, 220, 224, 237, 240, 330, 334, 336, 337, 338], "penalty": [88, 106, 137, 157, 227, 231, 232, 240, 331, 334, 335, 336, 338], "gas": [88, 332], "minimum": [88, 103, 106, 108, 137, 206, 212, 289, 300, 301, 302, 306, 315, 316, 317, 318, 330, 333, 334, 335, 337], "improvement": 88, "quantuminstanc": [88, 90, 331, 334, 335, 337, 338, 339], "backend": [88, 289, 300, 301, 302, 306, 316, 317, 332, 333, 334, 336, 337, 339, 340], "selected": [88, 221, 335, 337], "defaults": [88, 289, 340], "aer": [88, 334, 336, 337, 339], "statevector": [88, 336], "simulator": [88, 336], "quadraticprogramconverter": [88, 106, 137, 157, 220, 224, 227, 231, 240], "converting": [88, 106, 137, 157, 330], "internally": [88, 106, 137, 157, 254, 266, 338], "quadraticprogramtoqub": [88, 106, 137, 157, 330, 334, 337, 338], "converter": [88, 223, 337, 338], "typeerror": [88, 106, 119, 137, 281], "circuits": [90, 153, 157, 289, 300, 302, 316], "raises": 91, "attributeerror": 91, "is_gurobi_installed": 92, "suppress": 92, "info": 92, "stdout": 92, "sys": [92, 335], "devnull": 92, "def": [92, 331, 334, 335, 336, 338, 340], "noop": 92, "args": 92, "kwargs": 92, "pass": [92, 298, 332, 340], "clos": [92, 334, 335], "writ": [92, 335], "flush": 92, "writelines": 92, "enum": [97, 130], "recursiveminimumeigenoptimizer": 97, "last": [99, 134, 135, 331, 335], "baseaggregator": [101, 157], "averaging": [101, 102], "sampl": [101, 148, 150, 151, 339], "min_eigen_solver_result": [103, 336, 337], "eigen": [103, 106, 134, 137, 330, 333, 334, 337], "minimumeigensolver": [103, 104, 105, 106, 108, 302, 331, 333, 336], "minimumeigensolverresult": [103, 104, 301, 306, 317], "obtained": [103, 104, 118, 132, 134, 135, 155, 335, 339, 340], "underlying": [103, 330, 338], "min_eigen_solver": [106, 335, 337], "solvers": [106, 157, 333], "assumes": 106, "thereof": 106, "converts": [106, 232, 339], "expanding": 106, "adding": [106, 335], "terms": [106, 137, 227, 231, 232, 330, 334, 335, 340], "resulting": [106, 331, 335, 336, 338], "translated": [106, 326, 327, 328], "whos": [106, 119, 164, 168, 178, 187, 200, 203, 207, 218, 337, 340], "minimal": 106, "vector": [106, 191, 289, 300, 302, 316, 329, 333, 335, 337, 338], "eigenst": [106, 301, 306, 315, 317, 318, 334, 336, 340], "correspond": [106, 183, 207, 340], "solver": [106, 137, 157, 158, 331, 338, 339], "ground": [106, 301, 306, 317, 330, 331, 338], "good": 106, "outlin": [106, 137], "scal": [106, 137, 227, 231, 240, 298, 329, 335], "computed": 106, "tod": 106, "applying": [106, 157, 338, 339], "logic": [106, 157], "eigensolver": [106, 108, 315, 318, 332, 333, 334, 335, 336, 337], "implements": 110, "classed": 110, "valueerror": [110, 301, 306, 317], "smaller": [110, 289, 340], "minimiz": [112, 118, 274, 329, 331, 332, 333, 334, 335, 337, 338, 340], "applies": [112, 137, 331, 338, 340], "callabl": [112, 289, 300, 302, 305, 316], "minimizes": [112, 340], "raw_results": 118, "specifying": [118, 251, 262, 289, 300, 302, 316], "_": [118, 335, 336, 338], "binary_v": [118, 329, 330, 331, 332, 333, 335, 338, 339, 340], "x1": [118, 331, 332, 338], "x2": [118, 331, 332, 338], "x3": [118, 338], "var": [118, 224, 331], "variable_names": 118, "variables_dict": 118, "maintain": 118, "generating": [118, 334, 335], "possibly": 118, "failur": [118, 129, 222, 226, 229, 233, 331], "sizes": [118, 337], "do": [118, 231, 334, 336, 338], "matc": [118, 231, 276, 277], "key": [119, 134, 136, 267, 289, 300, 302, 316, 336, 338], "none": 119, "neither": 119, "nor": 119, "zi": 121, "zj": 121, "correlation": 121, "dump": 123, "leftovers": 123, "ended": 131, "succeeded": 133, "replacements": 134, "history": [134, 137, 319, 320, 322, 336], "recurs": [134, 137, 139, 331], "weight": [134, 136, 159, 177, 179, 208, 334, 335, 337, 340], "either": [134, 136, 157, 261, 273, 329], "containing": [134, 319, 320], "element": [134, 135, 332], "minimumeigenoptimizerresult": [134, 135], "invoking": [134, 135], "iteratively": [134, 135], "second": [134, 135, 330, 334, 335], "step": [134, 135, 319, 320], "min_num_vars_optimizer": [134, 135, 137, 331], "min_num_vars": [137, 331], "intermediateresult": 137, "last_iteration": 137, "met": [137, 157], "top": [137, 283, 289, 329, 340], "internal_optimizer": 137, "bravy": [137, 331], "et": [137, 157, 231, 335, 336], "2019": [137, 231, 331, 332], "obstacles": [137, 331], "preparation": [137, 331, 335], "symmetry": [137, 331], "protection": [137, 331], "1910": [137, 331], "08980": [137, 331], "until": [137, 334, 335], "apply": [137, 330, 331, 337, 339, 340], "schem": [137, 331], "once": [137, 331, 334, 337, 338, 340], "reached": 137, "every": [137, 227, 231, 240, 308, 334, 335], "after": [137, 330, 339], "remaining": 137, "num_min_vars": 137, "fx": 140, "imod": 140, "smod": 140, "slsqp": [140, 145], "optimized": [140, 141, 340], "exit": [140, 142, 144], "fmin_slsqp": [140, 145], "actually": 141, "acc": 145, "06": [145, 340], "iprint": 145, "full_output": 145, "13": [145, 329, 331, 333, 334, 335, 337, 338, 340], "continuous_v": [145, 329, 333], "maximiz": [145, 329, 330, 334, 336, 337, 338, 339], "requested": 145, "verbosity": 145, "silent": 145, "summary": 145, "upon": 145, "minimizer": 145, "func": 145, "epsilon": [153, 157, 338], "factory": [153, 157], "produces": [153, 338], "overridden": 153, "modify": 153, "behavior": [153, 338], "generates": [153, 337], "mixer": [153, 156, 157, 289, 300, 338], "warm": [153, 154, 155, 157, 158, 289, 300], "regularization": [153, 157], "xi": [153, 157], "5": [153, 157, 224, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "corresponds": [153, 157, 329, 334, 340], "initial_variables": [154, 156], "circuit": [154, 156, 289, 300, 302, 316, 334, 335, 336, 338, 340], "quantumcircuit": [154, 156, 289, 291, 292, 293, 300, 302, 303, 316, 338, 340], "represents": [154, 334, 338, 340], "constructed": [155, 335], "evolved": 156, "ry": [156, 334, 338], "thet": [156, 334, 335, 338], "rz": [156, 338, 340], "2bet": 156, "pre_solver": [157, 338], "relax_for_pre_solver": [157, 338], "25": [157, 331, 335, 336, 339], "num_initial_solutions": 157, "warm_start_factory": 157, "aggregator": 157, "must": [157, 289, 300, 302, 316, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "implement": [157, 332, 333, 334], "inheriting": 157, "daniel": 157, "egger": [157, 338, 340], "starting": [157, 289, 300, 330], "2009": [157, 289, 300, 338], "10095": [157, 289, 300, 338], "correct": [157, 330, 335], "initialization": 157, "circuit_factory": 157, "explicit": 157, "warmstartqaoacircuitfactory": 157, "ignored": [157, 315, 318], "passing": 157, "computations": [157, 335], "warmstartqaoafactory": 157, "several": [157, 330, 340], "states": 157, "next": [158, 331, 338], "presolver": 158, "weights": [159, 160, 177, 335, 337], "max_weight": [159, 177, 337], "max_number_of_bins": 159, "optimizationapplication": [159, 167, 170, 177, 186, 193, 199], "bin": [159, 160, 161, 162, 334], "packing": [159, 160, 162, 199, 201, 337], "wikiped": [159, 163, 167, 174, 177, 181, 186, 199, 202, 205, 211, 217], "wik": [159, 163, 167, 174, 177, 181, 186, 199, 202, 205, 211, 217], "bin_packing_problem": 159, "items": [159, 161, 177, 178, 336, 337, 340], "capacity": [159, 177, 337], "bins": [159, 160], "plot": [160, 333, 334, 335, 336, 340], "calculated": [160, 161, 164, 168, 171, 175, 178, 183, 187, 190, 196, 200, 203, 207, 214, 218, 227, 231, 240], "sum": [160, 187, 335, 336, 338], "respectively": [160, 330, 339], "fig": [160, 340], "item": [161, 178, 337], "lists": [161, 183, 329], "items_in_bins": 161, "graphoptimizationapplication": [163, 174, 181, 202, 205, 211, 217, 337], "networkx": [163, 170, 173, 174, 181, 202, 205, 211, 217, 334, 337], "theory": [163, 202], "clique_": 163, "graph_theory": [163, 202], "suitabl": [163, 170, 174, 181, 202, 205, 211, 217, 331, 335], "build": [163, 170, 174, 181, 202, 205, 211, 217, 338], "makes": [163, 166, 340], "maximal": [163, 165, 166, 179], "nod": [164, 175, 183, 203, 206, 207, 211, 212, 213, 218, 334, 335, 337, 339], "subsets": [167, 168, 187, 199, 200, 337], "exact": [167, 169, 331, 333, 334, 335, 337], "exact_cover": 167, "pos": [171, 334, 337], "without": [171, 339], "colors": [171, 334], "positions": [171, 266], "nodes": [171, 173, 206, 207, 212, 334, 335, 337], "num_nodes": 173, "num_edges": 173, "edges": [173, 337], "partition": [174, 176, 186, 337], "graph_partition": 174, "divided": 175, "two": [175, 183, 329, 331, 334, 337, 339, 340], "groups": 175, "knapsack_problem": 177, "maximum_cut": 181, "gset": [182, 184], "read": [184, 208], "2d": 184, "number_set": 186, "partition_problem": 186, "integers": [186, 337, 339], "half": 187, "partitioning": 188, "calculation": 190, "answer": [190, 335], "understand": [190, 340], "state_vector": 191, "likely": 191, "ints": 191, "num_sites": 193, "rng_or_seed": 193, "sherrington": 193, "kirkpatrick": 193, "sk": [193, 194, 198], "over": [193, 334, 336], "spins": [193, 196], "h": [193, 334, 335, 340], "sqrt": [193, 338], "w_": [193, 334, 335], "x_ix_j": 193, "x_i": [193, 231, 232, 329, 330, 334, 338], "pm": [193, 334], "configuration": [193, 196, 340], "disorder": 193, "chosen": [193, 289, 335, 340], "independently": 193, "notic": [193, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "variants": 193, "disorders": 193, "normal": [193, 335], "distribution": [193, 289, 335, 338, 340], "mean": [193, 289, 300, 302, 316, 331], "varianc": 193, "dmitry": 193, "panchenk": 193, "overview": [193, 330], "abs": [193, 289, 300, 331, 335, 336], "1211": 193, "1094": 193, "sites": [193, 197], "pseud": 193, "default_rng": 193, "rtype": [195, 197], "set_packing": 199, "stabl": [202, 204, 337], "independent": 202, "independent_set_": 202, "traveling": [205, 206, 209, 335, 337], "salesman": [205, 206, 209, 335, 337], "travelling": [205, 335], "travelling_salesman_problem": 205, "low": [206, 212], "coordin": [206, 212], "coordinates": [206, 212], "prospect": [207, 334], "cycle": [207, 334], "tsplib": 208, "edge": [208, 334, 337, 340], "euc_2d": 208, "dat": [208, 289, 300, 302, 316, 333, 334, 335, 336], "z": [210, 231, 329, 330, 331, 334, 335, 339, 340], "cities": [210, 334], "length": [210, 340], "num_vehicles": 211, "depot": [211, 212, 335, 337], "vehicl": [211, 212, 214, 216, 337], "routing": [211, 212, 216, 337], "vehicle_routing_problem": 211, "vehicles": [211, 212, 213, 215, 335, 337], "depart": [211, 212, 213], "num_vehicl": 212, "routes": [214, 335, 337], "vertex": [217, 219, 334], "vertex_cover": [217, 337], "aut": 220, "introducing": 220, "slack": [220, 223, 231, 330], "defin": [220, 240, 332, 333, 334, 335, 336, 338, 339, 340], "conv": [220, 224, 240, 337], "problem2": [220, 224, 240], "choos": [220, 333, 334, 335, 340], "unsupported": [221, 232, 323, 324], "encoding": [224, 329, 339], "bounded": 224, "proposed": [224, 334], "integer_v": [224, 329, 330, 339], "sah": 224, "karim": 224, "pooy": 224, "ronag": 224, "2017": [224, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "practical": 224, "annealers": 224, "1706": [224, 330], "01945": [224, 330], "back": [226, 229, 233, 331], "automatically": [227, 231, 240, 323, 331, 336, 339], "differs": [229, 233], "begin": [231, 232, 329, 332, 338], "leq": [231, 232, 329, 330, 333, 335], "rightarrow": [231, 232, 332], "p": [231, 232, 289, 300, 333, 334, 336, 340], "geq": [231, 232, 329, 330], "x_j": [231, 232, 334], "supplied": 231, "patterns": [231, 232], "they": [231, 315, 318, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "kept": 231, "fred": 231, "glover": 231, "tutorial": [231, 329, 330, 331, 333, 334, 340], "formulating": 231, "1811": 231, "11538": 231, "_flipproblemsens": [235, 236], "maximization": [235, 236, 330], "unchanged": [235, 236], "another": [238, 239, 329, 331], "keep": [238, 290, 335], "quadratic_program": [246, 251, 254, 262, 266, 274, 281, 283, 326, 327, 329], "quadraticprogramelement": [246, 254, 266, 274, 283], "parent": [246, 251, 254, 262, 266, 274, 281, 282, 283], "evaluated": [252, 258, 259, 263, 270, 271, 276, 277, 289, 300, 301, 302, 306, 315, 316, 317, 318, 336, 340], "linearexpression": [253, 264, 278], "expression": [253, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273], "spars": [254, 266, 289, 329, 340], "dok_matrix": [254, 257, 266, 269], "addressed": [255, 267, 331], "expressionbounds": [256, 268], "evalu": [259, 271, 277, 334, 335, 336], "gradient": [259, 271, 277], "use_nam": [261, 273, 329], "determines": [261, 272, 273, 340], "quadraticexpression": [265, 279], "compressed": 266, "way": [266, 329, 334, 335], "symmetric": [266, 272, 273, 329], "summed": 266, "up": 266, "triangl": [266, 340], "q": [270, 329, 332, 333, 335, 336, 340], "tuples": 273, "objsens": [274, 280], "shap": [276, 277], "initializ": [281, 333, 335, 336], "exposed": 283, "meant": 283, "externally": 283, "reps": [289, 300, 334, 336, 337, 340], "initial_st": [289, 300, 338], "initial_point": [289, 300, 302, 316, 331, 338, 340], "alpha": [289, 334, 336, 340], "provider": [289, 300, 301, 302, 306, 316, 317, 340], "shots": [289, 290, 300, 302, 308, 316, 336, 337, 339, 340], "1024": [289, 300, 302, 316, 340], "measurement_error_mitigation": [289, 300, 302, 316, 340], "callback": [289, 300, 302, 316, 336], "store_intermed": [289, 300, 302, 316], "use_swap_strategies": [289, 340], "use_initial_mapping": [289, 340], "use_pulse_efficient": [289, 340], "optimization_level": [289, 340], "vqeclient": [289, 316, 320], "runtim": [289, 300, 301, 302, 306, 311, 316, 317, 321], "client": [289, 302, 316, 335], "spsa": [289, 300, 302, 316, 334, 335, 340], "qn": [289, 300, 302, 316], "Per": [289, 300, 302, 316, 329, 330, 332, 333, 334, 335, 336, 340], "1411": [289, 300, 334, 335], "4028": [289, 300, 334, 335], "prepend": [289, 300], "evolv": [289, 300], "custom": [289, 300], "optimizations": [289, 300], "subspaces": [289, 300], "1709": [289, 300], "03489": [289, 300], "http": [289, 300, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "vqe": [289, 301, 302, 306, 317, 321, 330, 331, 332, 333, 334, 335], "fraction": [289, 290, 331, 340], "measurement": [289, 300, 302, 308, 316, 340], "expectation": [289, 301, 306, 315, 317, 318, 335, 336, 340], "cvar": [289, 340], "contained": 289, "interval": 289, "mitigation": [289, 300, 302, 308, 316, 340], "four": [289, 300, 302, 316], "evaluation": [289, 300, 302, 316, 340], "works": [289, 300, 302, 316, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "towards": [289, 300, 302, 316], "count": [289, 300, 301, 302, 306, 316, 317, 335], "ansatz": [289, 300, 302, 316, 336, 340], "deviation": [289, 300, 302, 316, 331], "stor": [289, 300, 302, 314, 316, 333, 336], "steps": [289, 300, 302, 316, 334, 335, 338], "swap": [289, 294, 299, 340], "strategies": [289, 294, 299, 340], "transpiling": [289, 340], "transpiler": [289, 298, 340], "perm": [289, 340], "paulis": [289, 340], "cost": [289, 333, 335, 338, 340], "better": [289, 297, 331, 340], "fit": [289, 297, 340], "coupling": [289, 340], "map": [289, 330, 334, 335, 340], "strategy": [289, 340], "needed": [289, 340], "transpil": [289, 340], "puls": [289, 298], "transpilation": [289, 299], "2105": 289, "01063": 289, "best": [290, 331, 334, 339, 340], "aux_operators": [295, 301, 306, 311, 315, 317, 318], "inputs": [295, 311, 340], "permutation": [297, 340], "devic": [297, 333, 340], "cr": [298, 340], "gates": [298, 335, 340], "qaoaclient": [300, 302, 340], "deprecated": [300, 316, 319], "renamed": [300, 316, 319], "calls": [301, 306, 317], "observabl": [301, 306, 317], "auxiliary": [301, 306, 315, 317, 318], "operators": [301, 306, 315, 317, 318, 340], "eigenvalu": [301, 306, 317, 334, 340], "chemistry": [301, 306, 317, 331], "dipol": [301, 306, 317], "particl": [301, 306, 317], "so": [301, 306, 317, 330, 334, 337], "yet": [301, 306, 317], "runtimeerror": [301, 306, 317], "job": [301, 306, 317, 321, 340], "execution": [301, 306, 317, 340], "failed": [301, 306, 317], "call": [302, 331, 340], "equivalent": [302, 330, 331, 332], "natur": [302, 334, 335, 340], "but": [302, 331, 333, 334, 338], "serves": 302, "basis": [302, 335], "parameterized": [302, 316, 335], "wav": [302, 316, 335], "featur": [302, 316], "readout": [308, 340], "don": [308, 340], "fitter": [308, 340], "calibrations": 308, "30": [308, 330, 334], "minutes": 308, "id": [310, 321, 340], "overrid": 311, "classmethod": [315, 318], "computing": [315, 318, 331], "computes": [315, 318, 335, 338], "aux_operator": [315, 318], "expectations": [315, 318], "renaming": 316, "reflects": 316, "executed": [316, 340], "vqeruntimeresult": 319, "vqeprogram": 319, "vqeresult": [319, 320], "additionally": [319, 320], "associated": 321, "indicator_big_m": 323, "transl": [323, 324, 331, 336], "mp": [323, 326, 329, 332, 333, 336, 338, 339], "indicator": 323, "logical": 323, "expressions": 323, "logical_not": 323, "logical_and": 323, "logical_or": 323, "big": [323, 334, 335, 339], "m": [323, 329, 330, 332, 334, 335, 336, 338, 339], "formulation": [323, 329, 330, 334, 339], "derived": 323, "basic": 324, "treat": 325, "ys": 325, "imaginary": 325, "never": [326, 327], "happen": [326, 327], "quad_prog": 328, "comprising": 328, "quest": [329, 330, 331, 332, 333, 334, 335, 336], "pagin": [329, 330], "01_quadratic_program": 329, "ipynb": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "brevement": 329, "ottimizz": [329, 330, 332, 333, 335, 336], "utilizz": [329, 330, 333, 334, 335], "introduc": [329, 337], "relat": [329, 332], "Pi\u00f9": 329, "precis": 329, "tratt": [329, 332, 334], "formul": [329, 331, 335], "align": [329, 338], "quad": [329, 333, 335], "q_0": 329, "subject": [329, 330, 331, 332, 333, 334, 337, 338, 339, 340], "q_i": [329, 335], "a_i": [329, 330], "r_i": 329, "dots": [329, 335], "l_i": 329, "u_i": [329, 335], "dimensional": [329, 335], "setup": [329, 336], "necessar": [329, 333, 335], "seguent": [329, 330, 332, 333, 334], "translators": [329, 332, 333, 336, 338], "from_docplex_mp": [329, 332, 333, 336, 338, 339], "explained": 329, "section": [329, 337, 339], "constructing": 329, "Si": [329, 334, 335], "pu\u00f2": [329, 330, 332, 333, 334, 335], "facil": [329, 334], "La": [329, 330, 331, 332, 333, 334, 335], "document": 329, "dispon": [329, 333, 335], "indirizz": 329, "ibmdecisionoptimization": 329, "Un": [329, 330, 331, 332, 334], "usand": [329, 332, 335], "mdl": [329, 333, 336, 338], "lb": [329, 335, 339], "ub": [329, 335, 339], "add_constraint": [329, 333, 336, 338, 339], "export_as_lp_string": [329, 339], "iso": [329, 339], "8859": [329, 339], "obj": [329, 335, 336, 339], "c1": [329, 334, 337], "qc1": 329, "lt": [329, 330, 331, 333, 337, 338, 339], "binaries": [329, 339], "generals": [329, 339], "prettyprint": [329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "comprehens": 329, "load": [329, 333, 335, 339, 340], "39": [329, 330, 331, 333, 334, 337, 338, 339, 340], "gt": [329, 330, 331, 333, 337, 339], "ved": [329, 330, 332], "ora": [329, 330, 333], "cominc": 329, "vuot": 329, "my": 329, "thre": [329, 330], "quand": [329, 332], "possibil": [329, 331, 332, 334, 335], "nom": 329, "lim": [329, 330], "inferior": [329, 330], "superior": [329, 330, 334], "\u00c8": [329, 334], "impost": [329, 333], "funzion": [329, 330, 332, 333, 334, 335, 336], "obiett": [329, 330, 332, 333, 334, 335, 336], "tram": [329, 335], "termin": [329, 330, 331, 332, 333, 334], "costant": 329, "cos": [329, 330], "matric": [329, 333], "dizionar": 329, "Da": [329, 332], "fattor": [329, 330], "mot": [329, 335], "mostr": [329, 332, 333, 334, 335, 336], "prim": [329, 330, 333, 334, 335], "moltiplic": 329, "poi": [329, 332, 333, 334, 335], "divis": 329, "son": [329, 330, 332, 333, 334, 335], "qx": 329, "cell": 329, "sottost": 329, "dichiar": 329, "chiavi": 329, "corrispond": [329, 332, 334, 336], "valor": [329, 330, 333, 334, 335, 336], "corrispondent": [329, 332, 333, 334, 336], "6": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "dictionaries": [329, 336], "arrays": 329, "mathematical": [329, 334], "ordering": [329, 334], "originally": 329, "declared": 329, "7": [329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "acced": 329, "guard": 329, "rispett": [329, 330, 332, 333, 334, 335], "otten": [329, 334, 335], "dens": 329, "to_array": 329, "to_dict": 329, "usar": 329, "indic": [329, 332, 334, 335], "lor": [329, 332, 334], "salv": 329, "manier": 329, "compress": 329, "simmetr": [329, 333], "ottien": 329, "copp": [329, 334, 335], "8": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "poss": [329, 332, 333, 334], "espression": 329, "direzion": [329, 333], "destr": [329, 330], "linear_constraint": [329, 330, 339], "lin_eq": 329, "lin_leq": 329, "lin_geq": 329, "quadratic_constraint": 329, "quad_eq": 329, "quad_leq": 329, "quad_geq": 329, "stess": [329, 330, 333, 334, 335], "quell": [329, 332], "11": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "get_linear_constraint": 329, "get_quadratic_constraint": 329, "inoltr": [329, 334, 335], "remove_linear_constraint": 329, "remove_quadratic_constraint": 329, "12": [329, 331, 333, 334, 335, 336, 337, 338, 340], "substit": 329, "substitute_variables": 329, "deal": [329, 334, 338, 340], "cases": [329, 331, 335], "leftarrow": 329, "risult": [329, 330, 332, 334, 335], "infatt": 329, "metod": [329, 330, 333, 334, 335], "restitu": [329, 332, 333], "cerc": [329, 332, 334, 335], "fuor": 329, "intervall": 329, "perc": [329, 333], "Non": 329, "volt": [329, 335], "tal": [329, 332, 334], "15": [329, 331, 334, 335, 337, 338, 340], "except": [329, 335, 337], "itself": 329, "denotes": 329, "included": 329, "ones": [329, 335], "character": 329, "specification": [329, 334], "16": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "f": [329, 331, 335, 337, 338, 340], "_e": 329, "17": [329, 331, 334, 338, 340], "tools": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "jupyter": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "qiskit_version_tabl": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "qiskit_copyright": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "informationqiskit": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "softwareversionqiskit": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "terra0": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "21": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "dev0": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "dbd3961qiskit": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "aer0": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "4qiskit": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "ibmq": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "provider0": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "19": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "1qiskit": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "optimization0": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "0system": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "informationpython": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "version3": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "4python": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "compilergcc": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "0python": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "buildmain": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "apr": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "2022": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "09": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "04": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "19oslinuxcpus4memory": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "gb": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "577545166015625wed": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "18": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "03": [329, 330, 331, 332, 339], "27": 329, "jst": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "copyright": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "licensed": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "apac": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "licens": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "mayobtain": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "root": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "tre": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "licenses": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "modifications": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "deriv": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "retain": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "thiscopyright": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "carry": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "indicatingthat": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "altered": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "originals": [329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "02_converters_for_quadratic_programs": 330, "represented": [330, 331], "generic": 330, "powerful": 330, "general": [330, 332, 334, 335, 339], "certain": [330, 333], "our": [330, 334, 338], "handl": [330, 333], "hamiltonians": 330, "opflow": [330, 336, 340], "approximated": 330, "commonly": 330, "known": 330, "routin": [330, 334], "detail": 330, "work": 330, "differently": 330, "offers": 330, "variety": 330, "providing": 330, "linearinequalitytopenalty": 330, "maximizetominimiz": 330, "minimizetomaximiz": 330, "includes": 330, "convenienc": 330, "inequalitytoequalityconverter": 330, "vincol": [330, 333, 335], "disuguagl": [330, 333], "uguagl": [330, 333], "aggiunt": 330, "elimin": [330, 335], "I": [330, 333, 334, 335, 340], "variabil": [330, 332, 333, 334, 335], "sarann": 330, "calcol": [330, 334, 335], "sinistr": 330, "segn": 330, "dipend": 330, "simbol": 330, "qual": [330, 334], "massimizz": [330, 334], "binar": [330, 332, 333, 335], "inter": [330, 332, 334, 335], "Con": [330, 334], "modell": [330, 332, 334], "scritt": 330, "qp": [330, 331, 332, 333, 334, 336, 337, 338, 339], "xyz_leq": 330, "xyz_geq": 330, "chiam": [330, 334], "effettu": [330, 336], "ineq2eq": 330, "qp_eq": 330, "int_slack": [330, 337], "looks": 330, "lik": 330, "abov": [330, 335, 338, 340], "xyz": 330, "_leg": 330, "_slack": 330, "_geq": 330, "let": [330, 339], "us": [330, 337, 340], "explain": 330, "able": [330, 335], "satisfy": 330, "off": 330, "decimal": 330, "basically": [330, 335], "approac": [330, 331, 335], "however": [330, 334, 338, 340], "symbol": 330, "minus": 330, "codif": [330, 332], "delimit": 330, "propost": [330, 333], "maggior": [330, 332, 334, 335], "dettagl": 330, "preg": 330, "paper": 330, "_leq": 330, "again": [330, 334], "int2bin": 330, "qp_eq_bin": 330, "both": [330, 331, 334, 338, 339], "essenzial": 330, "signific": 330, "somm": [330, 334], "sottoinsiem": [330, 334], "rappresent": [330, 332, 334], "accett": 330, "ldots": [330, 333, 335], "corrett": [330, 333], "forn": [330, 334, 336], "funzional": [330, 333], "tradurr": 330, "determin": [330, 332, 335], "ulterior": [330, 334], "penal": 330, "mapp": [330, 334], "sol": [330, 332, 334, 335, 338], "linear": 330, "numer": [330, 332, 334, 335], "elev": 330, "1e5": 330, "dip": 330, "minimizz": [330, 332, 334, 335], "lineq2penalty": 330, "22": [330, 331, 334, 338, 339], "44": [330, 338], "66": 330, "88": 330, "176": 330, "132": [330, 335], "99": 330, "352": 330, "264": 330, "178": 330, "198": 330, "110": 330, "220": 330, "177": 330, "354": 330, "708": 330, "374": 330, "dop": [330, 332, 334], "veng": [330, 332, 335], "oggett": [330, 332, 333, 334], "penaltu": 330, "math": [330, 332, 334, 335], "compat": 330, "molt": [330, 331, 334, 335], "algoritm": [330, 332, 334, 335, 336], "quantist": [330, 331, 334, 336], "d\u00e0": 330, "pag": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "was": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "03_minimum_eigen_optimizer": 331, "finding": [331, 335], "important": [331, 334, 340], "physics": [331, 334], "translation": [331, 336], "taking": 331, "spin": 331, "implementations": 331, "wraps": 331, "illustr": [331, 336, 338], "show": [331, 333, 335, 336, 338, 340], "mentioned": 331, "thrown": 331, "profond": [331, 334, 335], "circu": [331, 334, 335], "potenzial": [331, 334], "aument": 331, "dimension": 331, "potrebb": [331, 334], "proibit": 331, "disposit": [331, 333, 334], "brev": 331, "workaround": 331, "introdott": [331, 333, 336], "generalizz": 331, "concett": 331, "fin": [331, 332, 333, 334], "lucas": [331, 334], "Le": [331, 333], "front": 331, "phys": [331, 334, 340], "2014": [331, 334, 335], "1302": 331, "5843": 331, "kliesc": 331, "koenig": 331, "tang": 331, "basicaer": [331, 332, 333, 335, 338], "utils": [331, 334, 335, 336, 337, 338, 339], "algorithm_globals": [331, 334, 335, 336, 337, 338], "plot_histogram": [331, 334], "typing": [331, 333], "account": [331, 340], "to_ising": [331, 334, 336, 337], "iiz": 331, "izi": 331, "75": [331, 334, 340], "zii": 331, "izz": [331, 340], "ziz": [331, 340], "zzi": [331, 334, 340], "sometimes": 331, "translator": 331, "from_ising": 331, "initializing": 331, "want": [331, 337, 339, 340], "random_seed": [331, 334, 335, 336, 337, 338], "10598": [331, 334, 335], "get_backend": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "statevector_simulator": [331, 332, 333, 338], "seed_simulator": [331, 334, 335, 337, 338], "seed_transpiler": [331, 334, 335, 337, 338], "qaoa_mes": [331, 338, 340], "exact_mes": [331, 338], "benchmark": [331, 333], "small": [331, 335, 338], "exact_result": [331, 332], "success": [331, 332, 333, 334, 336, 337, 338, 339, 340], "qaoa_result": [331, 338], "useful": [331, 334, 335], "denoted": 331, "consolidated": 331, "singl": [331, 334, 335, 338, 339, 340], "attrib": [331, 333], "aggreg": 331, "12499999999999994": 331, "filter": 331, "probabilities": [331, 336], "get_filtered_samples": 331, "allowed_status": 331, "res": [331, 334, 338, 340], "append": [331, 335, 338, 340], "filtered_samples": 331, "005": 331, "obtain": [331, 335, 338, 340], "perspect": 331, "statistics": 331, "helpful": 331, "respect": 331, "basics": 331, "understanding": 331, "fvals": 331, "std": 331, "9364916731037085": 331, "finally": 331, "desp": 331, "crunching": 331, "usually": 331, "early": [331, 334], "samples_for_plot": 331, "join": [331, 335, 338], "v": [331, 333, 334, 335], "enumer": [331, 338, 340], "reduc": [331, 340], "below": [331, 335, 338, 340], "reduces": 331, "rqao": 331, "rqaoa_result": 331, "33": [331, 335, 337], "04_grover_optimizer": 332, "analizz": 332, "soluzion": [332, 334], "combinator": [332, 334, 335], "insiem": [332, 334, 335, 336], "variazional": [332, 335, 336], "ottim": 332, "precedent": 332, "esecu": [332, 333, 335], "sogl": 332, "oracol": 332, "adatt": [332, 333, 334], "usat": [332, 333], "riconosc": 332, "tutt": [332, 333, 334, 335], "sopr": [332, 333], "sott": 332, "attual": 332, "min": 332, "diminu": 332, "ampiezz": 332, "spaz": [332, 334], "ricerc": [332, 333, 334], "ogni": [332, 333, 334, 335], "vien": [332, 333, 336], "aggiorn": [332, 333], "notebook": [332, 335, 336], "esplor": 332, "ciascun": [332, 335], "component": [332, 334], "tecnic": 332, "descritt": 332, "gilliam": 332, "woerner": [332, 338, 340], "gonciule": 332, "polynomial": [332, 334, 335], "1912": 332, "04088": 332, "central": 332, "ingredient": 332, "oper": [332, 333, 334], "prepar": 332, "costru": [332, 334], "sovrapposizion": 332, "O": 332, "interess": [332, 334], "moltipl": [332, 333], "diffusion": 332, "d": [332, 334, 335, 337, 338, 340], "rangle_n": [332, 338], "sebben": 332, "differ": 332, "uso": [332, 334], "specif": [332, 333, 336], "comunqu": [332, 336], "liber": 332, "quadraticprogramtonegativevalueoracl": 332, "a_y": 332, "registr": [332, 334], "approssim": [332, 334, 335], "rangle_m": 332, "dovrebber": [332, 334], "identific": 332, "o_y": 332, "occorr": 332, "discuss": [332, 340], "effett": [332, 334, 335], "indipendent": 332, "requis": [332, 335], "chiarezz": 332, "formal": [332, 334], "rangl": [332, 334, 335, 338], "Ad": [332, 334], "spost": 332, "vers": 332, "alto": 332, "bass": 332, "massim": [332, 334], "contest": [332, 334], "decresc": 332, "riman": 332, "concret": 332, "sar": [332, 334], "esamin": 332, "prossim": 332, "sezion": 332, "Di": [332, 335], "eqnarray": 332, "min_": [332, 333, 335, 338], "2x_0x_2": 332, "x_1x_2": 332, "1x_0": 332, "2x_1": 332, "3x_2": 332, "iniz": [332, 335], "creiam": 332, "quind": [332, 334, 335, 336], "usiam": [332, 333, 335], "docplex_model1": [332, 338], "codific": 332, "senz": 332, "progress": [332, 336], "es": 332, "camb": 332, "prend": 332, "abbiam": [332, 333], "contien": [332, 333], "inform": [332, 334], "grover_optimizer": 332, "traduc": 332, "ottimal": [332, 333, 334, 335], "x_0": [332, 334, 336, 337], "x_1": [332, 334, 336, 337], "x_2": [332, 334, 336, 337], "temp": [332, 334, 335], "poic": 332, "randomizz": 332, "Nel": [332, 333, 334, 335], "visualizz": [332, 333, 335], "personalizz": [332, 333], "quantic": 332, "grafic": [332, 335], "singol": [332, 334], "corrent": 332, "contator": 332, "titol": 332, "asse": 332, "101": 332, "intens": 332, "color": [332, 335], "probabil": [332, 334], "misur": 332, "brillant": 332, "alta": 332, "mentr": [332, 334, 336], "fas": [332, 333], "cromat": 332, "riport": [332, 333], "qui": [332, 333, 334, 335], "quantit": [332, 334, 335], "sempr": [332, 333], "men": 332, "distribu": [332, 334], "exact_solver": 332, "53": 332, "05_admm_optimizer": 333, "grad": 333, "risolv": [333, 335], "mist": [333, 335], "mbco": 333, "spess": 333, "compai": 333, "logist": [333, 335], "finanziar": 333, "affront": 333, "mathcal": 333, "u": [333, 339], "subseteq": 333, "mathbb": [333, 335], "varph": 333, "soggett": [333, 335], "mathrm": [333, 334, 335], "ell": 333, "postul": 333, "quadrat": [333, 335], "cio": 333, "intercal": 333, "quadr": 333, "x_": [333, 334, 335, 336], "forall": [333, 334, 335], "forz": 333, "vettor": [333, 335], "convess": 333, "congiunt": 333, "mbo": 333, "fatt": [333, 334], "eurist": [333, 334, 335], "altern": [333, 335], "suddivision": 333, "lung": 333, "camp": [333, 334], "aver": 333, "propriet": 333, "convergent": 333, "residu": 333, "dopp": 333, "condizion": 333, "sian": 333, "soddisfatt": 333, "ipotes": 333, "referred": 333, "leverages": 333, "splitting": 333, "procedur": 333, "devis": 333, "decomposition": [333, 340], "mbos": 333, "subproblem": 333, "k": [333, 335], "sottoproblem": 333, "ben": 333, "Una": 333, "discussion": 333, "esaurient": 333, "fattibil": 333, "ref": 333, "Nella": 333, "variant": 333, "blocc": 333, "continu": [333, 334, 335], "caric": [333, 335], "pacchett": 333, "pyplot": [333, 334, 335, 336, 340], "plt": [333, 334, 335, 336, 340], "cobylaoptimizer": 333, "admm_optimizer": 333, "admmoptimizer": 333, "uncomment": 333, "full": 333, "innanzitutt": [333, 335], "preved": [333, 334], "qubos": 333, "costruiam": 333, "ex6": 333, "cons1": 333, "cons2": 333, "cons3": 333, "luog": [333, 335], "esatt": 333, "qualsias": 333, "altro": 333, "dimostr": [333, 334, 335], "tard": 333, "install": [333, 335, 337, 339], "avvolt": 333, "argoment": 333, "1001": 333, "penalizz": 333, "gx": 333, "900": 333, "toller": 333, "primar": 333, "garant": [333, 334], "converg": [333, 334], "teorem": 333, "attiv": [333, 335], "fa": 333, "admm_params": 333, "0e": 333, "istanz": [333, 334], "separat": 333, "costruttor": 333, "convex_optimizer": 333, "stamp": 333, "statist": [333, 334], "consult": 333, "xlabel": [333, 336], "ylabel": [333, 336], "simul": 333, "selezion": 333, "infin": [333, 334], "popol": 333, "admm_q": 333, "result_q": 333, "clf": 333, "51": 333, "06_examples_max_cut_and_tsp": 334, "finanz": 334, "ingegner": 334, "ottimizzaziones": 334, "cuor": 334, "compless": [334, 335], "decisional": 334, "definizion": 334, "strateg": 334, "signif": 334, "quant": 334, "riguard": 334, "alcun": [334, 335], "criter": 334, "tipic": 334, "distanz": [334, 335], "lunghezz": 334, "travers": 334, "pes": 334, "lavor": 334, "material": 334, "consum": 334, "energ": 334, "profitt": 334, "uscit": 334, "rend": [334, 336], "util": [334, 335], "capac": 334, "consider": [334, 335, 336], "pratic": 334, "manual": 334, "tagl": 334, "complet": [334, 335], "clustering": 334, "scienz": 334, "ret": 334, "fisic": 334, "comprend": 334, "sistem": 334, "person": 334, "interag": 334, "influenz": 334, "vic": 334, "Gli": 334, "individu": 334, "vertic": 334, "graf": [334, 335], "vist": [334, 335], "connession": 334, "spigol": 334, "ment": 334, "marketing": 334, "suppon": 334, "presum": 334, "influenzin": 334, "acquist": 334, "sapp": 334, "fort": 334, "assegn": 334, "prodott": 334, "offert": 334, "gratuit": 334, "chied": 334, "gratu": 334, "ric": 334, "indirett": 334, "ij": [334, 335], "ji": [334, 335], "partizion": 334, "colleg": [334, 335], "punt": 334, "tent": 334, "global": [334, 335], "guadagn": 334, "tild": 334, "textbf": 334, "nostr": [334, 335], "ottieng": 334, "teng": 334, "line": [334, 335], "princip": 334, "futur": 334, "campion": 334, "inizial": 334, "convenient": 334, "estension": 334, "abbi": 334, "cert": [334, 335], "concess": 334, "divent": 334, "w_i": 334, "assoc": [334, 335], "hamilton": 334, "x_irightarrow": 334, "z_i": [334, 335], "autovalor": 334, "fac": 334, "frac": 334, "z_j": 334, "const": 334, "altri": 334, "equival": 334, "z_iz_j": 334, "quadraticoprogramm": 334, "to_izz": 334, "Negli": 334, "ultim": 334, "notevol": 334, "dir": 334, "classic": 334, "combin": [334, 335], "speedup": 334, "esponenzial": 334, "performanc": 334, "miglior": [334, 335], "tuttav": 334, "caus": 334, "val": [334, 335, 336], "pen": [334, 335], "indag": 334, "approcc": [334, 335], "acceler": 334, "stud": 334, "farh": [334, 335], "goldston": [334, 335], "gutman": 334, "inquadr": 334, "scegl": 334, "ammess": 334, "potenz": 334, "ser": 334, "psi": [334, 335], "boldsymbolthet": 334, "gat": 334, "phas": [334, 335], "rotazion": 334, "parametrizz": 334, "boldsymbol": [334, 335], "langl": [334, 335], "aspett": [334, 336], "scelt": 334, "stim": [334, 335], "intorn": 334, "reaches": [334, 335], "enoug": [334, 335, 338], "z_ibig": 334, "rangol": 334, "rispost": 334, "convinzion": 334, "difficolt": 334, "buon": 334, "ridurr": 334, "onda": 334, "prov": 334, "entanglement": 334, "alline": 334, "destin": 334, "valut": 334, "u_": [334, 335], "entangler": [334, 335], "raccolt": 334, "port": 334, "cancell": 334, "entangolar": 334, "prod_": [334, 335], "theta_": [334, 335, 338], "motiv": 334, "permett": 334, "hann": [334, 335], "sfrutt": 334, "ancor": 334, "veloc": 334, "vantagg": 334, "adiabat": 334, "dirett": 334, "hardw": [334, 340], "limit": [334, 335], "connett": 334, "z_iz_jz_k": 334, "annealing": 334, "poc": 334, "frontiers": 334, "gutmann": [334, 335], "wecker": 334, "hastings": 334, "troyer": 334, "rev": [334, 340], "94": 334, "022309": 334, "2016": 334, "neven": 334, "1703": 334, "06199": 334, "packages": [334, 335, 337], "axes": 334, "nx": [334, 337], "library": [334, 335, 336, 340], "twolocal": [334, 335], "maxcut": [334, 340], "tsp": 334, "add_nodes_from": 334, "arang": 334, "elist": 334, "add_weighted_edges_from": 334, "spring_layout": [334, 337], "draw_graph": 334, "default_axes": 334, "frameon": 334, "draw_networkx": 334, "node_color": 334, "node_siz": 334, "600": 334, "ax": 334, "edge_labels": 334, "get_edge_attributes": 334, "draw_networkx_edge_labels": 334, "zeros": [334, 335, 336, 340], "get_edge_d": 334, "combinations": 334, "deals": 334, "071509e": 334, "impractical": 334, "best_cost_br": 334, "reversed": [334, 336], "zfill": 334, "xbest_br": 334, "nbest": 334, "max_cut": 334, "to_quadratic_program": [334, 337], "x_3": [334, 336, 337], "qubitop": 334, "iizz": 334, "iziz": 334, "izzi": 334, "ziiz": 334, "cast": 334, "making": 334, "lowest": 334, "eigenvector": 334, "ee": 334, "compute_minimum_eigenvalu": 334, "sample_most_likely": 334, "energy": [334, 340], "feedback": 334, "loop": [334, 336, 340], "built": [334, 335, 338], "rotations": [334, 335, 338], "123": [334, 336, 337], "aer_simulator_statevector": [334, 336], "300": 334, "num_qubits": [334, 337, 340], "cz": 334, "optimizer_tim": [334, 337], "49968614555873": 334, "9054765701293945": 334, "99968614555873": 334, "vqe_optimizer": 334, "notorious": 334, "attention": 334, "scientists": 334, "mathematicians": 334, "centuries": 334, "bearings": 334, "financ": 334, "suggests": 334, "colloquially": 334, "speaking": 334, "goes": 334, "city": [334, 337], "sell": 334, "merchandis": 334, "shortest": 334, "path": [334, 335], "would": [334, 336], "visit": 334, "hometown": 334, "he": 334, "doing": [334, 335], "sales": 334, "least": [334, 337], "derives": 334, "importanc": 334, "hardness": 334, "ubiquitous": 334, "equivalenc": 334, "combinatorial": [334, 335], "aris": 334, "practic": 334, "analysis": [334, 336], "19th": 334, "century": 334, "mathematically": 334, "abstracted": 334, "graphs": [334, 337], "asks": [334, 337], "throug": [334, 340], "closed": [334, 340], "unknown": 334, "finds": [334, 337], "distances": 334, "distanc": [334, 335, 337], "described": [334, 340], "occurs": 334, "appe": [334, 338], "occur": 334, "amounts": 334, "whenever": 334, "summands": 334, "notin": 334, "connected": [334, 340], "assumed": 334, "boundary": 334, "condition": 334, "cycles": 334, "equiv": 334, "fully": [334, 335, 340], "includ": 334, "needs": 334, "putting": 334, "together": [334, 335], "sum_p": 334, "fre": [334, 339], "ensur": [334, 338], "respected": 334, "minimizing": 334, "create_random_instanc": 334, "to_numpy_matrix": 334, "48": [334, 338, 339], "91": 334, "63": 334, "itertools": 334, "permutations": 334, "brute_force_tsp": 334, "last_best_distanc": 334, "1e10": 334, "pre_j": 334, "best_order": 334, "best_distanc": 334, "draw_tsp_solution": 334, "g2": 334, "digraph": 334, "add_edg": 334, "edge_color": 334, "font_color": 334, "202": 334, "x_0_0": 334, "x_1_1": 334, "x_1_2": 334, "x_2_1": 334, "x_2_2": 334, "x_0_1": 334, "x_1_0": 334, "x_2_0": 334, "x_0_2": 334, "c2": [334, 337], "c3": [334, 337], "c4": [334, 337], "c5": [334, 337], "qp2qubo": 334, "7581": 334, "1282": 334, "iiiiiiiiz": [334, 337], "iiiiiiiz": [334, 337], "iiiiiiz": [334, 337], "1268": 334, "iiiiizii": [334, 337], "iiiizii": [334, 337], "iiiziiii": [334, 337], "1290": 334, "iiziiii": [334, 337], "iziiiiii": [334, 337], "ziiiiii": [334, 337], "606": 334, "iiiiiiizz": [334, 337], "iiiiiiziz": [334, 337], "iiiiiizz": [334, 337], "iiiiiziiz": [334, 337], "iiiiiziz": [334, 337], "iiiiizz": [334, 337], "iiiiziiiz": [334, 337], "iiiiziiz": [334, 337], "iiiiziz": [334, 337], "iiiizzii": [334, 337], "iiiziiiiz": [334, 337], "iiiziiiz": [334, 337], "iiiziiz": [334, 337], "iiizizii": [334, 337], "iiizzii": [334, 337], "iiziiiiiz": [334, 337], "iiziiiiz": [334, 337], "iiziiiz": [334, 337], "iiziizii": [334, 337], "iizizii": [334, 337], "iizziiii": [334, 337], "iziiiiiiz": [334, 337], "iziiiiiz": [334, 337], "iziiiiz": [334, 337], "iziiizii": [334, 337], "iziizii": [334, 337], "iziziiii": [334, 337], "izziiii": [334, 337], "ziiiiiiiz": [334, 337], "ziiiiiiz": [334, 337], "ziiiiiz": [334, 337], "ziiiizii": [334, 337], "ziiizii": [334, 337], "ziiziiii": [334, 337], "ziziiii": [334, 337], "zziiiiii": [334, 337], "is_feasibl": 334, "tsp_valu": 334, "7379": 334, "7326": 334, "024699521837": 334, "199239253997803": 334, "warnings": 334, "filterwarnings": 334, "ignor": 334, "category": 334, "userwarning": 334, "05": [334, 335, 336, 337, 338, 339], "07_examples_vehicle_routing": 335, "settor": 335, "grand": 335, "ammont": 335, "8183": 335, "miliard": 335, "dollar": 335, "2015": 335, "fornitor": 335, "serviz": 335, "gest": 335, "veicol": 335, "camion": 335, "nav": 335, "portacontainer": 335, "depos": 335, "stazion": 335, "nott": 335, "serv": 335, "giorn": 335, "Ci": 335, "computazional": 335, "sfid": 335, "chiav": 335, "pianific": 335, "itinerar": 335, "chilometr": 335, "percors": 335, "impieg": 335, "formalizz": 335, "idealizz": 335, "andiam": 335, "compr": 335, "stabil": 335, "posizion": 335, "sarebber": 335, "databas": 335, "anticip": 335, "consegn": 335, "esse": 335, "casual": 335, "percorrent": 335, "altre": 335, "euclide": 335, "ari": 335, "fors": 335, "passagg": 335, "realt": 335, "rifer": 335, "risolutor": 335, "computer": 335, "moment": 335, "eseguiam": 335, "ibrid": 335, "spieg": 335, "proced": 335, "matemat": 335, "parl": 335, "vrp": 335, "divers": 335, "estend": 335, "commess": [335, 337], "viaggiator": [335, 337], "appleg": 335, "2006": 335, "mtz": 335, "miller": 335, "tucker": 335, "zemlin": 335, "1960": 335, "Sia": 335, "indicizz": 335, "segment": 335, "va": 335, "convenzion": 335, "distint": 335, "conness": 335, "scriv": 335, "sim": 335, "delt": 335, "analog": 335, "tour": 335, "IL": 335, "vis": 335, "0i": 335, "j0": 335, "u_j": 335, "q_j": 335, "neq": 335, "particul": [335, 340], "weighs": 335, "arches": 335, "posit": [335, 337, 338], "typically": [335, 340], "enforc": 335, "link": 335, "allowed": 335, "exactly": [335, 337], "links": 335, "elimination": 335, "usa": 335, "branc": [335, 339], "catc": 335, "programm": [335, 340], "milp": 335, "notazion": 335, "raccogl": 335, "bf": 335, "01": 335, "02": 335, "essa": 335, "ten": 335, "sottolin": 335, "difficil": 335, "discut": 335, "velocizz": 335, "Allo": 335, "investig": [335, 340], "potrebber": 335, "summarized": 335, "transform": 335, "necessary": [335, 336, 337], "depth": [335, 340], "adaptively": 335, "components": [335, 337], "outcom": 335, "individual": 335, "control": 335, "points": 335, "around": 335, "estimated": 335, "throughout": 335, "notably": 335, "choic": 335, "wavefunction": 335, "collection": [335, 337], "entangling": 335, "considering": 335, "augmented": 335, "lagrangian": 335, "ih": 335, "_i": [335, 338], "otimes": 335, "_n": 335, "_0": 335, "2an": 335, "2ak": 335, "stack": 335, "programming": 335, "formulations": 335, "acm": 335, "326": 335, "329": 335, "doi": 335, "1145": 335, "321043": 335, "321046": 335, "bixby": 335, "chv\u00e0tal": 335, "cook": 335, "princeton": 335, "university": 335, "press": 335, "isbn": 335, "978": 335, "691": 335, "12993": 335, "version_inf": 335, "pleas": 335, "exceptions": 335, "cplexerror": 335, "warning": 335, "quantum_inf": 335, "randomly": 335, "places": 335, "plan": 335, "__init__": 335, "generate_instanc": 335, "1543": [335, 336], "xc": 335, "rand": 335, "yc": 335, "ii": 335, "jj": 335, "classicaloptimizer": 335, "instant": 335, "compute_allowed_combinations": 335, "factorial": 335, "cplex_solution": 335, "refactoring": 335, "my_obj": 335, "reshap": 335, "my_ub": 335, "my_lb": 335, "my_ctype": 335, "my_rhs": 335, "my_sens": 335, "my_prob": 335, "populatebyrow": 335, "exc": 335, "get_values": 335, "get_objective_valu": 335, "prob": [335, 337], "set_sens": 335, "set_log_stream": 335, "set_error_stream": 335, "set_warning_stream": 335, "set_results_stream": 335, "rows": 335, "coef": 335, "linear_constraints": 335, "lin_expr": 335, "senses": 335, "classical_optimizer": 335, "fashion": 335, "classical_cost": 335, "missing": 335, "visualiz": 335, "visualize_solution": 335, "title_str": 335, "figur": [335, 336], "scatter": 335, "200": 335, "annot": 335, "ms": 335, "grid": 335, "ix": 335, "iy": 335, "arrow": 335, "length_includes_head": 335, "head_width": 335, "titl": 335, "shows": 335, "star": 335, "arrows": 335, "quantumoptimizer": 335, "insid": 335, "binary_representation": 335, "algebr": 335, "construct_problem": 335, "solve_problem": 335, "previous": [335, 337], "minimuneigenoptimizer": 335, "x_sol": 335, "instance_vec": 335, "w_list": 335, "id_n": 335, "eye": 335, "im_n_1": 335, "iv_n_1": 335, "iv_n": 335, "neg_iv_n_1": 335, "vn": 335, "axis": 335, "interactions": 335, "kron": 335, "dot": 335, "contribution": 335, "evaluates": 335, "fun": 335, "lambd": [335, 336, 338], "qasm_simulator": [335, 336, 337], "quantum_optimizer": 335, "encod": 335, "sanity": 335, "yields": 335, "binary_cost": 335, "could": [335, 338], "verify": 335, "correctness": 335, "unavailabl": 335, "nameerror": 335, "cells": 335, "11148115684045": 335, "1114811568365": 335, "simulation": 335, "tak": [335, 340], "hours": 335, "logging": 335, "what": [335, 340], "quantum_solution": 335, "quantum_cost": 335, "x_quantum": 335, "kk": 335, "comparison": 335, "plots": 335, "happens": 335, "coincid": 335, "ilp": 335, "mind": 335, "working": 335, "thoug": 335, "choices": 335, "optim": 335, "harder": 335, "turn": 335, "provid": [335, 337], "stronger": 335, "guarantees": 335, "forms": 335, "08_cvar_optimization": 336, "conditional": 336, "risk": 336, "intern": 336, "Nello": 336, "shot": 336, "pres": 336, "livell": 336, "confident": 336, "med": 336, "minim": 336, "mezz": 336, "smooth": 336, "andament": 336, "barkoutsos": [336, 340], "improving": [336, 340], "256": [336, 340], "realamplitudes": 336, "pauliexpectation": [336, 340], "cvarexpectation": [336, 340], "linearequalitytopenalty": 336, "exec": 336, "123456": 336, "prep": 336, "assets": 336, "budget": 336, "scaling": [336, 340], "mu": [336, 338], "7313": 336, "9893": 336, "2725": 336, "8750": 336, "7667": 336, "3622": 336, "sigm": [336, 338], "7312": 336, "6233": 336, "4689": 336, "5452": 336, "0082": 336, "3809": 336, "4732": 336, "7538": 336, "4659": 336, "0733": 336, "8945": 336, "4095": 336, "0007": 336, "4301": 336, "5067": 336, "2012": 336, "0922": 336, "6231": 336, "1509": 336, "8992": 336, "random_model": 336, "covarianc": 336, "portfolio_optimization": 336, "binary_var_list": 336, "opt_result": 336, "27835": 336, "x_4": [336, 337], "x_5": [336, 337], "further": [336, 340], "linear2penalty": 336, "num_parameters": 336, "backend_nam": [336, 340], "qasm": 336, "simlator": 336, "alphas": 336, "50": 336, "confidenc": 336, "levels": 336, "objectives": 336, "tested": 336, "stddev": 336, "cvar_alph": 336, "cvar_exp": 336, "compute_varianc": 336, "fixed": 336, "pr": 336, "1373": 336, "opt_alg": 336, "2783500000000174": 336, "figsiz": [336, 340], "linewidth": 336, "label": 336, "2f": 336, "legend": 336, "loc": 336, "fontsiz": 336, "xlim": 336, "xticks": 336, "yticks": 336, "objective_values": 336, "x_bin": 336, "sb": 336, "ind": 336, "argsort": 336, "probabilitiy": 336, "4f": 336, "00": [336, 339], "0084": 336, "0314": 336, "1278": 336, "09_application_classes": 337, "subcollection": 337, "covered": 337, "subset": 337, "multiset": 337, "sums": 337, "pairwis": 337, "disjoint": 337, "cliqu": 337, "undirected": 337, "induced": 337, "subgraph": 337, "connects": 337, "rout": 337, "visits": 337, "endpoint": 337, "beforehand": 337, "utiliz": 337, "examples": 337, "vertexcover": 337, "qins": [337, 339], "random_regular_graph": 337, "c6": 337, "c7": 337, "c8": 337, "always": 337, "meo": [337, 339], "nsolution": 337, "ntim": 337, "20122742652893066": 337, "combination": 337, "5723414421081543": 337, "actual": 337, "26": 337, "104": 337, "208": 337, "156": 337, "416": 337, "312": 337, "624": 337, "234": [337, 338], "520": 337, "468": 337, "780": 337, "936": 337, "832": 337, "1040": 337, "1248": 337, "260": [337, 338], "650": 337, "1560": 337, "2080": 337, "1043": 337, "1564": 337, "2085": 337, "2606": 337, "3127": 337, "2600": 337, "num": 337, "1417": 337, "258": [337, 338], "388": 337, "517": 337, "647": 337, "776": 337, "130": 337, "390": 337, "78": 337, "195": 337, "52": 337, "65": 337, "117": 337, "10_warm_start_qao": 338, "often": 338, "hard": 338, "tx": 338, "diagonal": 338, "ways": 338, "relax": 338, "easier": 338, "sem": 338, "becomes": 338, "now": [338, 340], "relaxations": 338, "leveraged": 338, "shown": 338, "marecek": 338, "modelling": 338, "imports": 338, "quadratic_program_to_qub": 338, "create_problem": 338, "relax_problem": 338, "chang": 338, "relaxed_problem": 338, "deepcopy": 338, "418": 338, "0913": 338, "2415": 338, "4436": 338, "892": 338, "4051": 338, "07978412": 338, "00768914": 338, "11227606": 338, "06842969": 338, "01016793": 338, "00839765": 338, "10922887": 338, "03043424": 338, "0020045": 338, "00670929": 338, "0147937": 338, "985353": 338, "02307313": 338, "05249785": 338, "00904119": 338, "6043817": 338, "03740115": 338, "00945322": 338, "79839634": 338, "07616951": 338, "08464544": 338, "15956824": 338, "03075656": 338, "44910424": 338, "27371876": 338, "04067172": 338, "x4": 338, "0335906": 338, "x5": 338, "21845774": 338, "12173696": 338, "008018": 338, "02683716": 338, "0591748": 338, "970706": 338, "09229252": 338, "2099914": 338, "03616476": 338, "2087634": 338, "1496046": 338, "03781288": 338, "59679268": 338, "30467804": 338, "16929088": 338, "7689322": 338, "relaxation": 338, "longer": 338, "remain": 338, "848800180000005": 338, "85": 338, "40922044000001": 338, "82756812000001": 338, "10474512000002": 338, "33779216000002": 338, "34487328000002": 338, "42": 338, "907689680000004": 338, "25672692": 338, "37044588": 338, "40530104000001": 338, "43763868000002": 338, "659937940000006": 338, "47075640000001": 338, "16847248000002": 338, "41462864000002": 338, "43": 338, "89799534000001": 338, "52806848000002": 338, "34065100000001": 338, "286024620000006": 338, "68314192000001": 338, "858522820000005": 338, "259": 338, "55339164000003": 338, "22669164": 338, "262": 338, "37689164": 338, "57899164": 338, "267": 338, "02739164": 338, "54049164": 338, "384": 338, "20308746000006": 338, "dealing": 338, "012055025682855": 338, "1752499576180142": 338, "4803888163988428e": 338, "07": 338, "9709053264087596": 338, "7384168677494174": 338, "9999999916475085": 338, "14438904470168756": 338, "c_stars": 338, "12345": 338, "768932200000002": 338, "phi": 338, "bigotimes_": 338, "r_y": 338, "angle": 338, "arcsin": 338, "thetas": 338, "c_star": 338, "init_qc": 338, "idx": [338, 340], "mpl": [338, 340], "chos": 338, "h_": 338, "ws": 338, "pmatrix": 338, "2c_i": 338, "c_i": 338, "multiplied": 338, "exponentiated": 338, "\u03b2": 338, "ws_mixer": 338, "ws_qaoa_mes": 338, "ws_qao": 338, "ws_qaoa_result": 338, "look": 338, "observ": 338, "much": 338, "higher": 338, "format_qaoa_samples": 338, "max_len": 338, "qaoa_res": 338, "sorted": 338, "3f": 338, "1e2": 338, "1f": 338, "001110": 338, "769": 338, "011010": 338, "744": 338, "001011": 338, "671": 338, "101010": 338, "626": 338, "010110": 338, "100110": 338, "953": 338, "000111": 338, "349": 338, "110010": 338, "410": 338, "010011": 338, "013": 338, "100011": 338, "559": 338, "named": 338, "warmstartqaoaoptimizer": 338, "illustrated": 338, "controlled": 338, "ws_result": 338, "23": [338, 340], "11_using_classical_optimization_solvers_and_models": 339, "apis": 339, "sav": 339, "limitations": 339, "july": 339, "2021": [339, 340], "pages": 339, "cplex_result": 339, "gurobi_result": 339, "restricted": 339, "production": 339, "expires": 339, "2023": 339, "threads": 339, "timelimit": 339, "identifier": 339, "54982fbec": 339, "cpxparam_read_datacheck": 339, "cpxparam_threads": 339, "cpxparam_timelimit": 339, "10000000000000001": 339, "incumbent": 339, "000000": 339, "sec": 339, "ticks": 339, "processing": 339, "amp": [339, 340], "sequential": 339, "aer_simulator": 339, "ndisplay": 339, "421": 339, "103": 339, "033": 339, "038": 339, "docplex_model": 339, "dvar": 339, "gp": 339, "gurobipy_model": 339, "addvar": 339, "vtype": 339, "grb": 339, "setobject": 339, "addconstr": 339, "quadexpr": 339, "r0": 339, "linexpr": 339, "identical": 339, "from_gurobipy": 339, "docpblex": 339, "qp2": 339, "too": 339, "to_gurobipy": 339, "to_docplex_mp": 339, "gmod": 339, "dmod": 339, "nconvert": 339, "ind_mod": 339, "add_indicator": 339, "lc1": 339, "translating": 339, "natively": 339, "ncplex": 339, "12_qaoa_runtim": 340, "permits": 340, "entir": 340, "load_account": 340, "get_provider": 340, "hub": 340, "group": 340, "know": 340, "expecting": 340, "program_id": 340, "qaoa_program": 340, "parameternamespac": 340, "description": 340, "use_init": 340, "use_pulse_": 340, "measuremen": 340, "tensored": 340, "measurements": 340, "repetitions": 340, "labeled": 340, "aux_operat": 340, "paulisumop": 340, "initial_p": 340, "smallest": 340, "trying": 340, "calibration": 340, "rat": 340, "use_swap_s": 340, "elabor": 340, "far": 340, "argument": 340, "wish": 340, "zz": 340, "from_list": 340, "nois": 340, "layers": 340, "gamm": 340, "gamma_1": 340, "beta_1": 340, "gamma_2": 340, "beta_2": 340, "twic": 340, "gather": 340, "retained": 340, "employ": 340, "tensoredmeasfitter": 340, "dedicated": 340, "commut": 340, "collects": 340, "blocks": 340, "cartan": 340, "kak": 340, "rzxgat": 340, "scaled": 340, "cross": 340, "resonanc": 340, "pulses": 340, "kl": 340, "nannicin": 340, "robert": 340, "tavernell": 340, "earnest": 340, "tornow": 340, "researc": 340, "043088": 340, "fiv": 340, "seamlessly": 340, "fits": 340, "workflow": 340, "direct": 340, "replacement": 340, "discussed": 340, "job_monitor": 340, "helps": 340, "noisy": 340, "ibmq_qasm_simulator": 340, "runtime_inputs": 340, "backends": 340, "optimizing": 340, "echoed": 340, "successfully": 340, "job_id": 340, "c9qh9mekcirf2adkkhvg": 340, "bob": 340, "jobstatus": 340, "retriev": 340, "consistency": 340, "accessibl": 340, "interest": 340, "measured": 340, "assum": 340, "collections": 340, "defaultdict": 340, "op_adj_mat": 340, "extract": 340, "adj_mat": 340, "coeff": 340, "primit": 340, "to_list": 340, "get_cost": 340, "bit_str": 340, "bit": 340, "get_cut_distribution": 340, "state_results": 340, "vals": 340, "cut_vals": 340, "axs": 340, "subplots": 340, "optimizer_history": 340, "bar": 340, "set_xlabel": 340, "set_ylabel": 340, "implemented": 340, "leverag": 340, "methodology": 340, "applicabl": 340, "systems": 340, "completeness": 340, "manager": 340, "passmanager": 340, "standard_gates": 340, "equivalence_library": 340, "standardequivalencelibrary": 340, "std_eqlib": 340, "passes": 340, "collect2qblocks": 340, "consolidateblocks": 340, "unrollcustomdefinitions": 340, "basistranslator": 340, "optimize1qgatesdecomposition": 340, "builders": 340, "rzxcalibrationbuildernoec": 340, "echo_rzx_weyl_decomposition": 340, "echorzxweyldecomposition": 340, "mock": 340, "fakebelem": 340, "knowledg": 340, "enabled": 340, "attached": 340, "schedules": 340, "calibrated": 340, "cnot": 340, "inst_map": 340, "instruction_schedule_map": 340, "channel_map": 340, "qubit_channel_mapping": 340, "rzx_basis": 340, "rzx": 340, "sx": 340, "pulse_efficient": 340, "consolid": 340, "consecut": 340, "operations": 340, "basis_gates": 340, "rxx": 340, "rewr": 340, "weyl": 340, "decomposed": 340, "attac": 340, "simplify": 340, "demonstr": 340, "arbitrary": 340, "circ": 340, "cx": 340, "rx": 340, "fold": 340, "cffbb84qiskit": 340, "577533721923828fri": 340, "31": 340}, "objects": {"": [[0, 0, 0, "-", "qiskit_optimization"]], "qiskit_optimization": [[10, 1, 1, "", "INFINITY"], [11, 2, 1, "", "QiskitOptimizationError"], [12, 4, 1, "", "QuadraticProgram"], [1, 0, 0, "-", "algorithms"], [2, 0, 0, "-", "applications"], [3, 0, 0, "-", "converters"], [4, 0, 0, "-", "problems"], [5, 0, 0, "-", "runtime"], [6, 0, 0, "-", "translators"]], "qiskit_optimization.QiskitOptimizationError": [[11, 3, 1, "", "with_traceback"]], "qiskit_optimization.QuadraticProgram": [[13, 3, 1, "", "binary_var"], [14, 3, 1, "", "binary_var_dict"], [15, 3, 1, "", "binary_var_list"], [16, 3, 1, "", "clear"], [17, 3, 1, "", "continuous_var"], [18, 3, 1, "", "continuous_var_dict"], [19, 3, 1, "", "continuous_var_list"], [20, 3, 1, "", "export_as_lp_string"], [21, 3, 1, "", "from_ising"], [22, 3, 1, "", "get_feasibility_info"], [23, 3, 1, "", "get_linear_constraint"], [24, 3, 1, "", "get_num_binary_vars"], [25, 3, 1, "", "get_num_continuous_vars"], [26, 3, 1, "", "get_num_integer_vars"], [27, 3, 1, "", "get_num_linear_constraints"], [28, 3, 1, "", "get_num_quadratic_constraints"], [29, 3, 1, "", "get_num_vars"], [30, 3, 1, "", "get_quadratic_constraint"], [31, 3, 1, "", "get_variable"], [32, 3, 1, "", "integer_var"], [33, 3, 1, "", "integer_var_dict"], [34, 3, 1, "", "integer_var_list"], [35, 3, 1, "", "is_feasible"], [36, 3, 1, "", "linear_constraint"], [37, 5, 1, "", "linear_constraints"], [38, 5, 1, "", "linear_constraints_index"], [39, 3, 1, "", "maximize"], [40, 3, 1, "", "minimize"], [41, 5, 1, "", "name"], [42, 5, 1, "", "objective"], [43, 3, 1, "", "prettyprint"], [44, 3, 1, "", "quadratic_constraint"], [45, 5, 1, "", "quadratic_constraints"], [46, 5, 1, "", "quadratic_constraints_index"], [47, 3, 1, "", "read_from_lp_file"], [48, 3, 1, "", "remove_linear_constraint"], [49, 3, 1, "", "remove_quadratic_constraint"], [50, 5, 1, "", "status"], [51, 3, 1, "", "substitute_variables"], [52, 3, 1, "", "to_ising"], [53, 5, 1, "", "variables"], [54, 5, 1, "", "variables_index"], [55, 3, 1, "", "write_to_lp_file"]], "qiskit_optimization.algorithms": [[56, 4, 1, "", "ADMMOptimizationResult"], [58, 4, 1, "", "ADMMOptimizer"], [62, 4, 1, "", "ADMMParameters"], [63, 4, 1, "", "ADMMState"], [64, 4, 1, "", "BaseAggregator"], [66, 4, 1, "", "CobylaOptimizer"], [69, 4, 1, "", "CplexOptimizer"], [75, 4, 1, "", "GoemansWilliamsonOptimizationResult"], [77, 4, 1, "", "GoemansWilliamsonOptimizer"], [81, 4, 1, "", "GroverOptimizationResult"], [88, 4, 1, "", "GroverOptimizer"], [92, 4, 1, "", "GurobiOptimizer"], [97, 4, 1, "", "IntermediateResult"], [101, 4, 1, "", "MeanAggregator"], [103, 4, 1, "", "MinimumEigenOptimizationResult"], [106, 4, 1, "", "MinimumEigenOptimizer"], [110, 4, 1, "", "MultiStartOptimizer"], [114, 4, 1, "", "OptimizationAlgorithm"], [118, 4, 1, "", "OptimizationResult"], [130, 4, 1, "", "OptimizationResultStatus"], [134, 4, 1, "", "RecursiveMinimumEigenOptimizationResult"], [137, 4, 1, "", "RecursiveMinimumEigenOptimizer"], [140, 4, 1, "", "SlsqpOptimizationResult"], [145, 4, 1, "", "SlsqpOptimizer"], [148, 4, 1, "", "SolutionSample"], [153, 4, 1, "", "WarmStartQAOAFactory"], [157, 4, 1, "", "WarmStartQAOAOptimizer"]], "qiskit_optimization.algorithms.ADMMOptimizationResult": [[57, 5, 1, "", "state"]], "qiskit_optimization.algorithms.ADMMOptimizer": [[59, 3, 1, "", "get_compatibility_msg"], [60, 5, 1, "", "parameters"], [61, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.BaseAggregator": [[65, 3, 1, "", "aggregate"]], "qiskit_optimization.algorithms.CobylaOptimizer": [[67, 3, 1, "", "get_compatibility_msg"], [68, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.CplexOptimizer": [[70, 5, 1, "", "cplex_parameters"], [71, 5, 1, "", "disp"], [72, 3, 1, "", "get_compatibility_msg"], [73, 3, 1, "", "is_cplex_installed"], [74, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizationResult": [[76, 5, 1, "", "sdp_solution"]], "qiskit_optimization.algorithms.GoemansWilliamsonOptimizer": [[78, 3, 1, "", "get_compatibility_msg"], [79, 3, 1, "", "max_cut_value"], [80, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.GroverOptimizationResult": [[82, 5, 1, "", "intermediate_fval"], [83, 5, 1, "", "n_input_qubits"], [84, 5, 1, "", "n_output_qubits"], [85, 5, 1, "", "operation_counts"], [86, 5, 1, "", "raw_samples"], [87, 5, 1, "", "threshold"]], "qiskit_optimization.algorithms.GroverOptimizer": [[89, 3, 1, "", "get_compatibility_msg"], [90, 5, 1, "", "quantum_instance"], [91, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.GurobiOptimizer": [[93, 5, 1, "", "disp"], [94, 3, 1, "", "get_compatibility_msg"], [95, 3, 1, "", "is_gurobi_installed"], [96, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.IntermediateResult": [[98, 6, 1, "", "ALL_ITERATIONS"], [99, 6, 1, "", "LAST_ITERATION"], [100, 6, 1, "", "NO_ITERATIONS"]], "qiskit_optimization.algorithms.MeanAggregator": [[102, 3, 1, "", "aggregate"]], "qiskit_optimization.algorithms.MinimumEigenOptimizationResult": [[104, 5, 1, "", "min_eigen_solver_result"], [105, 5, 1, "", "raw_samples"]], "qiskit_optimization.algorithms.MinimumEigenOptimizer": [[107, 3, 1, "", "get_compatibility_msg"], [108, 5, 1, "", "min_eigen_solver"], [109, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.MultiStartOptimizer": [[111, 5, 1, "", "clip"], [112, 3, 1, "", "multi_start_solve"], [113, 5, 1, "", "trials"]], "qiskit_optimization.algorithms.OptimizationAlgorithm": [[115, 3, 1, "", "get_compatibility_msg"], [116, 3, 1, "", "is_compatible"], [117, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.OptimizationResult": [[119, 3, 1, "", "__getitem__"], [120, 5, 1, "", "fval"], [121, 3, 1, "", "get_correlations"], [122, 3, 1, "", "prettyprint"], [123, 5, 1, "", "raw_results"], [124, 5, 1, "", "samples"], [125, 5, 1, "", "status"], [126, 5, 1, "", "variable_names"], [127, 5, 1, "", "variables"], [128, 5, 1, "", "variables_dict"], [129, 5, 1, "", "x"]], "qiskit_optimization.algorithms.OptimizationResultStatus": [[131, 6, 1, "", "FAILURE"], [132, 6, 1, "", "INFEASIBLE"], [133, 6, 1, "", "SUCCESS"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizationResult": [[135, 5, 1, "", "history"], [136, 5, 1, "", "replacements"]], "qiskit_optimization.algorithms.RecursiveMinimumEigenOptimizer": [[138, 3, 1, "", "get_compatibility_msg"], [139, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.SlsqpOptimizationResult": [[141, 5, 1, "", "fx"], [142, 5, 1, "", "imode"], [143, 5, 1, "", "its"], [144, 5, 1, "", "smode"]], "qiskit_optimization.algorithms.SlsqpOptimizer": [[146, 3, 1, "", "get_compatibility_msg"], [147, 3, 1, "", "solve"]], "qiskit_optimization.algorithms.SolutionSample": [[149, 6, 1, "", "fval"], [150, 6, 1, "", "probability"], [151, 6, 1, "", "status"], [152, 6, 1, "", "x"]], "qiskit_optimization.algorithms.WarmStartQAOAFactory": [[154, 3, 1, "", "create_initial_state"], [155, 3, 1, "", "create_initial_variables"], [156, 3, 1, "", "create_mixer"]], "qiskit_optimization.algorithms.WarmStartQAOAOptimizer": [[158, 3, 1, "", "solve"]], "qiskit_optimization.applications": [[159, 4, 1, "", "BinPacking"], [163, 4, 1, "", "Clique"], [167, 4, 1, "", "ExactCover"], [170, 4, 1, "", "GraphOptimizationApplication"], [174, 4, 1, "", "GraphPartition"], [177, 4, 1, "", "Knapsack"], [181, 4, 1, "", "Maxcut"], [186, 4, 1, "", "NumberPartition"], [189, 4, 1, "", "OptimizationApplication"], [193, 4, 1, "", "SKModel"], [199, 4, 1, "", "SetPacking"], [202, 4, 1, "", "StableSet"], [205, 4, 1, "", "Tsp"], [211, 4, 1, "", "VehicleRouting"], [217, 4, 1, "", "VertexCover"]], "qiskit_optimization.applications.BinPacking": [[160, 3, 1, "", "get_figure"], [161, 3, 1, "", "interpret"], [162, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Clique": [[164, 3, 1, "", "interpret"], [165, 5, 1, "", "size"], [166, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.ExactCover": [[168, 3, 1, "", "interpret"], [169, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.GraphOptimizationApplication": [[171, 3, 1, "", "draw"], [172, 5, 1, "", "graph"], [173, 3, 1, "", "random_graph"]], "qiskit_optimization.applications.GraphPartition": [[175, 3, 1, "", "interpret"], [176, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Knapsack": [[178, 3, 1, "", "interpret"], [179, 5, 1, "", "max_weight"], [180, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Maxcut": [[182, 3, 1, "", "get_gset_result"], [183, 3, 1, "", "interpret"], [184, 3, 1, "", "parse_gset_format"], [185, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.NumberPartition": [[187, 3, 1, "", "interpret"], [188, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.OptimizationApplication": [[190, 3, 1, "", "interpret"], [191, 3, 1, "", "sample_most_likely"], [192, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SKModel": [[194, 3, 1, "", "disorder"], [195, 5, 1, "", "graph"], [196, 3, 1, "", "interpret"], [197, 5, 1, "", "num_sites"], [198, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.SetPacking": [[200, 3, 1, "", "interpret"], [201, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.StableSet": [[203, 3, 1, "", "interpret"], [204, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.Tsp": [[206, 3, 1, "", "create_random_instance"], [207, 3, 1, "", "interpret"], [208, 3, 1, "", "parse_tsplib_format"], [209, 3, 1, "", "to_quadratic_program"], [210, 3, 1, "", "tsp_value"]], "qiskit_optimization.applications.VehicleRouting": [[212, 3, 1, "", "create_random_instance"], [213, 5, 1, "", "depot"], [214, 3, 1, "", "interpret"], [215, 5, 1, "", "num_vehicles"], [216, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.applications.VertexCover": [[218, 3, 1, "", "interpret"], [219, 3, 1, "", "to_quadratic_program"]], "qiskit_optimization.converters": [[220, 4, 1, "", "InequalityToEquality"], [224, 4, 1, "", "IntegerToBinary"], [227, 4, 1, "", "LinearEqualityToPenalty"], [231, 4, 1, "", "LinearInequalityToPenalty"], [235, 4, 1, "", "MaximizeToMinimize"], [236, 4, 1, "", "MinimizeToMaximize"], [237, 4, 1, "", "QuadraticProgramConverter"], [240, 4, 1, "", "QuadraticProgramToQubo"]], "qiskit_optimization.converters.InequalityToEquality": [[221, 3, 1, "", "convert"], [222, 3, 1, "", "interpret"], [223, 5, 1, "", "mode"]], "qiskit_optimization.converters.IntegerToBinary": [[225, 3, 1, "", "convert"], [226, 3, 1, "", "interpret"]], "qiskit_optimization.converters.LinearEqualityToPenalty": [[228, 3, 1, "", "convert"], [229, 3, 1, "", "interpret"], [230, 5, 1, "", "penalty"]], "qiskit_optimization.converters.LinearInequalityToPenalty": [[232, 3, 1, "", "convert"], [233, 3, 1, "", "interpret"], [234, 5, 1, "", "penalty"]], "qiskit_optimization.converters.QuadraticProgramConverter": [[238, 3, 1, "", "convert"], [239, 3, 1, "", "interpret"]], "qiskit_optimization.converters.QuadraticProgramToQubo": [[241, 3, 1, "", "convert"], [242, 3, 1, "", "get_compatibility_msg"], [243, 3, 1, "", "interpret"], [244, 3, 1, "", "is_compatible"], [245, 5, 1, "", "penalty"]], "qiskit_optimization.problems": [[246, 4, 1, "", "Constraint"], [251, 4, 1, "", "LinearConstraint"], [254, 4, 1, "", "LinearExpression"], [262, 4, 1, "", "QuadraticConstraint"], [266, 4, 1, "", "QuadraticExpression"], [274, 4, 1, "", "QuadraticObjective"], [281, 4, 1, "", "QuadraticProgramElement"], [283, 4, 1, "", "Variable"]], "qiskit_optimization.problems.Constraint": [[247, 3, 1, "", "evaluate"], [248, 5, 1, "", "name"], [249, 5, 1, "", "rhs"], [250, 5, 1, "", "sense"]], "qiskit_optimization.problems.LinearConstraint": [[252, 3, 1, "", "evaluate"], [253, 5, 1, "", "linear"]], "qiskit_optimization.problems.LinearExpression": [[255, 3, 1, "", "__getitem__"], [256, 5, 1, "", "bounds"], [257, 5, 1, "", "coefficients"], [258, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_gradient"], [260, 3, 1, "", "to_array"], [261, 3, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticConstraint": [[263, 3, 1, "", "evaluate"], [264, 5, 1, "", "linear"], [265, 5, 1, "", "quadratic"]], "qiskit_optimization.problems.QuadraticExpression": [[267, 3, 1, "", "__getitem__"], [268, 5, 1, "", "bounds"], [269, 5, 1, "", "coefficients"], [270, 3, 1, "", "evaluate"], [271, 3, 1, "", "evaluate_gradient"], [272, 3, 1, "", "to_array"], [273, 3, 1, "", "to_dict"]], "qiskit_optimization.problems.QuadraticObjective": [[275, 5, 1, "", "constant"], [276, 3, 1, "", "evaluate"], [277, 3, 1, "", "evaluate_gradient"], [278, 5, 1, "", "linear"], [279, 5, 1, "", "quadratic"], [280, 5, 1, "", "sense"]], "qiskit_optimization.problems.QuadraticProgramElement": [[282, 5, 1, "", "quadratic_program"]], "qiskit_optimization.problems.Variable": [[284, 3, 1, "", "as_tuple"], [285, 5, 1, "", "lowerbound"], [286, 5, 1, "", "name"], [287, 5, 1, "", "upperbound"], [288, 5, 1, "", "vartype"]], "qiskit_optimization.runtime": [[289, 4, 1, "", "QAOAClient"], [300, 4, 1, "", "QAOAProgram"], [302, 4, 1, "", "VQEClient"], [316, 4, 1, "", "VQEProgram"], [319, 4, 1, "", "VQEProgramResult"], [320, 4, 1, "", "VQERuntimeResult"]], "qiskit_optimization.runtime.QAOAClient": [[290, 5, 1, "", "alpha"], [291, 5, 1, "", "ansatz"], [292, 5, 1, "", "initial_state"], [293, 5, 1, "", "mixer"], [294, 5, 1, "", "optimization_level"], [295, 3, 1, "", "program_inputs"], [296, 5, 1, "", "reps"], [297, 5, 1, "", "use_initial_mapping"], [298, 5, 1, "", "use_pulse_efficient"], [299, 5, 1, "", "use_swap_strategies"]], "qiskit_optimization.runtime.QAOAProgram": [[301, 3, 1, "", "compute_minimum_eigenvalue"]], "qiskit_optimization.runtime.VQEClient": [[303, 5, 1, "", "ansatz"], [304, 5, 1, "", "backend"], [305, 5, 1, "", "callback"], [306, 3, 1, "", "compute_minimum_eigenvalue"], [307, 5, 1, "", "initial_point"], [308, 5, 1, "", "measurement_error_mitigation"], [309, 5, 1, "", "optimizer"], [310, 5, 1, "", "program_id"], [311, 3, 1, "", "program_inputs"], [312, 5, 1, "", "provider"], [313, 5, 1, "", "shots"], [314, 5, 1, "", "store_intermediate"], [315, 3, 1, "", "supports_aux_operators"]], "qiskit_optimization.runtime.VQEProgram": [[317, 3, 1, "", "compute_minimum_eigenvalue"], [318, 3, 1, "", "supports_aux_operators"]], "qiskit_optimization.runtime.VQERuntimeResult": [[321, 5, 1, "", "job_id"], [322, 5, 1, "", "optimizer_history"]], "qiskit_optimization.translators": [[323, 7, 1, "", "from_docplex_mp"], [324, 7, 1, "", "from_gurobipy"], [325, 7, 1, "", "from_ising"], [326, 7, 1, "", "to_docplex_mp"], [327, 7, 1, "", "to_gurobipy"], [328, 7, 1, "", "to_ising"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:exception", "3": "py:method", "4": "py:class", "5": "py:property", "6": "py:attribute", "7": "py:function"}, "objnames": {"0": ["py", "module", "Python modulo"], "1": ["py", "data", "Python dati"], "2": ["py", "exception", "Python eccezione"], "3": ["py", "method", "Python metodo"], "4": ["py", "class", "Python classe"], "5": ["py", "property", "Python property"], "6": ["py", "attribute", "Python attributo"], "7": ["py", "function", "Python funzione"]}, "titleterms": {"qiskit": [0, 5, 8, 339, 340], "optimization": [0, 1, 2, 3, 4, 5, 8, 336, 337, 338, 339, 340], "api": 0, "referenc": 0, "s": 0, "modul": 0, "qiskit_optimization": [0, 1, 2, 3, 4, 5, 6], "submodules": 0, "algorithms": 1, "bas": [1, 2, 3], "classes": [1, 2, 334, 337], "for": [1, 2, 3, 337], "and": [1, 334, 339], "results": 1, "applications": 2, "converters": 3, "class": 3, "problems": [4, 337], "quadratic": [4, 6, 265, 279], "program": [4, 6, 340], "runtim": [5, 340], "translators": [6, 339], "com": 7, "iniz": 7, "install": 7, "facolt": 7, "ready": 7, "to": [7, 334, 335, 337], "get": 7, "going": 7, "overview": 8, "next": 8, "steps": 8, "releas": 9, "notes": 9, "infinity": 10, "qiskitoptimizationerror": 11, "quadraticprogram": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 329, 339], "binary_v": 13, "binary_var_dict": 14, "binary_var_list": 15, "cle": 16, "continuous_v": 17, "continuous_var_dict": 18, "continuous_var_list": 19, "export_as_lp_string": 20, "from_ising": [21, 325], "get_feasibility_inf": 22, "get_linear_constraint": 23, "get_num_binary_vars": 24, "get_num_continuous_vars": 25, "get_num_integer_vars": 26, "get_num_linear_constraints": 27, "get_num_quadratic_constraints": 28, "get_num_vars": 29, "get_quadratic_constraint": 30, "get_variabl": 31, "integer_v": 32, "integer_var_dict": 33, "integer_var_list": 34, "is_feasibl": 35, "linear_constraint": 36, "linear_constraints": 37, "linear_constraints_index": 38, "maximiz": 39, "minimiz": 40, "nam": [41, 248, 286], "object": 42, "prettyprint": [43, 122], "quadratic_constraint": 44, "quadratic_constraints": 45, "quadratic_constraints_index": 46, "read_from_lp_fil": 47, "remove_linear_constraint": 48, "remove_quadratic_constraint": 49, "status": [50, 125, 151], "substitute_variables": 51, "to_ising": [52, 328], "variables": [53, 127], "variables_index": 54, "write_to_lp_fil": 55, "admmoptimizationresult": [56, 57], "stat": 57, "admmoptimizer": [58, 59, 60, 61], "get_compatibility_msg": [59, 67, 72, 78, 89, 94, 107, 115, 138, 146, 242], "parameters": 60, "solv": [61, 68, 74, 80, 91, 96, 109, 117, 139, 147, 158], "admmparameters": 62, "admmstat": 63, "baseaggregator": [64, 65], "aggreg": [65, 102], "cobylaoptimizer": [66, 67, 68], "cplexoptimizer": [69, 70, 71, 72, 73, 74], "cplex_parameters": 70, "disp": [71, 93], "is_cplex_installed": 73, "goemanswilliamsonoptimizationresult": [75, 76], "sdp_solution": 76, "goemanswilliamsonoptimizer": [77, 78, 79, 80], "max_cut_valu": 79, "groveroptimizationresult": [81, 82, 83, 84, 85, 86, 87], "intermediate_fval": 82, "n_input_qubits": 83, "n_output_qubits": 84, "operation_counts": 85, "raw_samples": [86, 105], "threshold": 87, "groveroptimizer": [88, 89, 90, 91, 332], "quantum_instanc": 90, "gurobioptimizer": [92, 93, 94, 95, 96], "is_gurobi_installed": 95, "intermediateresult": [97, 98, 99, 100], "all_iterations": 98, "last_iteration": 99, "no_iterations": 100, "meanaggregator": [101, 102], "minimumeigenoptimizationresult": [103, 104, 105], "min_eigen_solver_result": 104, "minimumeigenoptimizer": [106, 107, 108, 109, 331], "min_eigen_solver": 108, "multistartoptimizer": [110, 111, 112, 113], "clip": 111, "multi_start_solv": 112, "trials": 113, "optimizationalgorithm": [114, 115, 116, 117], "is_compatibl": [116, 244], "optimizationresult": [118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "__getitem__": [119, 255, 267], "fval": [120, 149], "get_correlations": 121, "raw_results": 123, "samples": [124, 331], "variable_names": 126, "variables_dict": 128, "x": [129, 152], "optimizationresultstatus": [130, 131, 132, 133], "failur": 131, "infeasibl": 132, "success": 133, "recursiveminimumeigenoptimizationresult": [134, 135, 136], "history": 135, "replacements": 136, "recursiveminimumeigenoptimizer": [137, 138, 139, 331], "slsqpoptimizationresult": [140, 141, 142, 143, 144], "fx": 141, "imod": 142, "its": 143, "smod": 144, "slsqpoptimizer": [145, 146, 147], "solutionsampl": [148, 149, 150, 151, 152], "probability": 150, "warmstartqaoafactory": [153, 154, 155, 156], "create_initial_st": 154, "create_initial_variables": 155, "create_mixer": 156, "warmstartqaoaoptimizer": [157, 158], "binpacking": [159, 160, 161, 162], "get_figur": 160, "interpret": [161, 164, 168, 175, 178, 183, 187, 190, 196, 200, 203, 207, 214, 218, 222, 226, 229, 233, 239, 243], "to_quadratic_program": [162, 166, 169, 176, 180, 185, 188, 192, 198, 201, 204, 209, 216, 219], "cliqu": [163, 164, 165, 166], "siz": 165, "exactcover": [167, 168, 169], "graphoptimizationapplication": [170, 171, 172, 173], "draw": 171, "graph": [172, 195], "random_graph": 173, "graphpartition": [174, 175, 176], "knapsack": [177, 178, 179, 180, 337], "max_weight": 179, "maxcut": [181, 182, 183, 184, 185], "get_gset_result": 182, "parse_gset_format": 184, "numberpartition": [186, 187, 188], "optimizationapplication": [189, 190, 191, 192], "sample_most_likely": 191, "skmodel": [193, 194, 195, 196, 197, 198], "disorder": 194, "num_sites": 197, "setpacking": [199, 200, 201], "stableset": [202, 203, 204], "tsp": [205, 206, 207, 208, 209, 210], "create_random_instanc": [206, 212], "parse_tsplib_format": 208, "tsp_valu": 210, "vehiclerouting": [211, 212, 213, 214, 215, 216], "depot": 213, "num_vehicles": 215, "vertexcover": [217, 218, 219], "inequalitytoequality": [220, 221, 222, 223, 330], "convert": [221, 225, 228, 232, 238, 241], "mod": 223, "integertobinary": [224, 225, 226, 330], "linearequalitytopenalty": [227, 228, 229, 230, 330], "penalty": [230, 234, 245], "linearinequalitytopenalty": [231, 232, 233, 234], "maximizetominimiz": 235, "minimizetomaximiz": 236, "quadraticprogramconverter": [237, 238, 239], "quadraticprogramtoqub": [240, 241, 242, 243, 244, 245], "constraint": [246, 247, 248, 249, 250], "evalu": [247, 252, 258, 263, 270, 276], "rhs": 249, "sens": [250, 280], "linearconstraint": [251, 252, 253], "lin": [253, 264, 278], "linearexpression": [254, 255, 256, 257, 258, 259, 260, 261], "bounds": [256, 268], "coefficients": [257, 269], "evaluate_gradient": [259, 271, 277], "to_array": [260, 272], "to_dict": [261, 273], "quadraticconstraint": [262, 263, 264, 265], "quadraticexpression": [266, 267, 268, 269, 270, 271, 272, 273], "quadraticobject": [274, 275, 276, 277, 278, 279, 280], "constant": 275, "quadraticprogramelement": [281, 282], "quadratic_program": 282, "variabl": [283, 284, 285, 286, 287, 288], "as_tupl": 284, "lowerbound": 285, "upperbound": 287, "vartyp": 288, "qaoaclient": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "alpha": 290, "ansatz": [291, 303], "initial_st": 292, "mixer": 293, "optimization_level": 294, "program_inputs": [295, 311], "reps": 296, "use_initial_mapping": 297, "use_pulse_efficient": 298, "use_swap_strategies": 299, "qaoaprogram": [300, 301], "compute_minimum_eigenvalu": [301, 306, 317], "vqeclient": [302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315], "backend": 304, "callback": 305, "initial_point": 307, "measurement_error_mitigation": 308, "optimizer": [309, 331, 332, 333, 336], "program_id": 310, "provider": 312, "shots": 313, "store_intermed": 314, "supports_aux_operators": [315, 318], "vqeprogram": [316, 317, 318], "vqeprogramresult": 319, "vqeruntimeresult": [320, 321, 322], "job_id": 321, "optimizer_history": 322, "from_docplex_mp": 323, "from_gurobipy": 324, "to_docplex_mp": 326, "to_gurobipy": 327, "programm": [329, 330], "quadrat": [329, 330], "introdu": [329, 331, 332, 333, 335], "loading": 329, "from": [329, 335], "an": 329, "lp": 329, "fil": 329, "caric": 329, "modell": [329, 335], "docplex": [329, 339], "costru": 329, "dirett": 329, "aggiung": 329, "rimuov": 329, "vincol": 329, "linear": 329, "sostitu": 329, "variabil": 329, "convertitor": 330, "minimum": [331, 336], "eigen": [331, 336], "rifer": [331, 332, 333], "conversion": 331, "qubo": [331, 332], "oper": 331, "solving": 331, "with": [331, 339], "the": [331, 334, 335, 337, 340], "analysis": [331, 338], "of": [331, 339], "grover": 332, "adapt": 332, "searc": 332, "trov": 332, "minim": 332, "problem": [332, 334, 337], "utilizz": [332, 336], "verific": 332, "valor": 332, "corrett": 332, "admm": 333, "inizializz": 333, "esemp": 333, "soluzion": [333, 335], "classic": [333, 335], "parametr": 333, "invoc": 333, "algoritm": 333, "3": [333, 335], "h": 333, "risult": 333, "risolutor": 333, "quantist": [333, 335], "otten": 333, "quantum": [333, 334, 335, 336, 338], "solver": 333, "max": 334, "cut": 334, "traveling": 334, "salesman": 334, "introduction": [334, 336, 337, 338], "mux": 334, "ponder": 334, "approxim": 334, "universal": 334, "computing": 334, "ottimizz": [334, 341], "application": [334, 337], "brut": 334, "forc": 334, "approac": 334, "mapping": 334, "ising": [334, 335], "checking": 334, "that": 334, "full": 334, "hamiltonian": [334, 335, 337], "gives": 334, "right": 334, "cost": 334, "running": [334, 340], "it": 334, "on": 334, "computer": 334, "vehicl": 335, "routing": 335, "Il": 335, "construct": 335, "qp": 335, "formulation": 335, "references": [335, 336, 338, 340], "initialization": 335, "classical": [335, 339], "solution": 335, "using": [335, 339], "ibm": 335, "ilog": 335, "cplex": 335, "ground": 335, "up": 335, "step": 335, "1": 335, "2": 335, "4": 335, "5": 335, "miglior": 336, "variational": 336, "cvar": 336, "portfol": 336, "vqe": 336, "vertex": 337, "cover": 337, "how": 337, "check": 337, "warm": 338, "starting": 338, "preliminaries": [338, 340], "relaxing": 338, "qubos": 338, "qao": [338, 340], "standard": 338, "start": 338, "solvers": 339, "models": 339, "cplexsolver": 339, "gurobisolver": 339, "between": 339, "gurobipy": 339, "indicator": 339, "constraints": 339, "appendix": 340, "A": 340, "puls": 340, "efficient": 340, "transpilation": 340, "tutorial": 341}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})