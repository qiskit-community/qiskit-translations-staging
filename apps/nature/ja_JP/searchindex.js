Search.setIndex({"docnames": ["apidocs/qiskit_nature", "apidocs/qiskit_nature.algorithms", "apidocs/qiskit_nature.algorithms.initial_points", "apidocs/qiskit_nature.algorithms.pes_samplers", "apidocs/qiskit_nature.circuit", "apidocs/qiskit_nature.circuit.library", "apidocs/qiskit_nature.circuit.library.ansatzes.utils", "apidocs/qiskit_nature.converters", "apidocs/qiskit_nature.converters.second_quantization", "apidocs/qiskit_nature.drivers", "apidocs/qiskit_nature.drivers.second_quantization", "apidocs/qiskit_nature.drivers.second_quantization.gaussiand", "apidocs/qiskit_nature.drivers.second_quantization.psi4d", "apidocs/qiskit_nature.drivers.second_quantization.pyquanted", "apidocs/qiskit_nature.drivers.second_quantization.pyscfd", "apidocs/qiskit_nature.hdf5", "apidocs/qiskit_nature.logging", "apidocs/qiskit_nature.mappers", "apidocs/qiskit_nature.mappers.second_quantization", "apidocs/qiskit_nature.operators", "apidocs/qiskit_nature.operators.second_quantization", "apidocs/qiskit_nature.problems", "apidocs/qiskit_nature.problems.sampling", "apidocs/qiskit_nature.problems.sampling.protein_folding", "apidocs/qiskit_nature.problems.second_quantization", "apidocs/qiskit_nature.properties", "apidocs/qiskit_nature.properties.second_quantization", "apidocs/qiskit_nature.properties.second_quantization.electronic", "apidocs/qiskit_nature.properties.second_quantization.electronic.bases", "apidocs/qiskit_nature.properties.second_quantization.electronic.integrals", "apidocs/qiskit_nature.properties.second_quantization.vibrational", "apidocs/qiskit_nature.properties.second_quantization.vibrational.bases", "apidocs/qiskit_nature.properties.second_quantization.vibrational.integrals", "apidocs/qiskit_nature.results", "apidocs/qiskit_nature.results.utils", "apidocs/qiskit_nature.runtime", "apidocs/qiskit_nature.settings", "apidocs/qiskit_nature.transformers", "apidocs/qiskit_nature.transformers.second_quantization", "apidocs/qiskit_nature.transformers.second_quantization.electronic", "apidocs/qiskit_nature.utils", "getting_started", "index", "release_notes", "stubs/qiskit_nature.QiskitNatureError", "stubs/qiskit_nature.UnsupportMethodError", "stubs/qiskit_nature.algorithms.AdaptVQE", "stubs/qiskit_nature.algorithms.AdaptVQE.gradient", "stubs/qiskit_nature.algorithms.AdaptVQE.returns_groundstate", "stubs/qiskit_nature.algorithms.AdaptVQE.solve", "stubs/qiskit_nature.algorithms.EigensolverFactory", "stubs/qiskit_nature.algorithms.EigensolverFactory.get_solver", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.get_qubit_operators", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.solve", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.solver", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.get_qubit_operators", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.solve", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.solver", "stubs/qiskit_nature.algorithms.GroundStateEigensolver", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.evaluate_operators", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.get_qubit_operators", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.returns_groundstate", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.solve", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.solver", "stubs/qiskit_nature.algorithms.GroundStateSolver", "stubs/qiskit_nature.algorithms.GroundStateSolver.evaluate_operators", "stubs/qiskit_nature.algorithms.GroundStateSolver.get_qubit_operators", "stubs/qiskit_nature.algorithms.GroundStateSolver.qubit_converter", "stubs/qiskit_nature.algorithms.GroundStateSolver.returns_groundstate", "stubs/qiskit_nature.algorithms.GroundStateSolver.solve", "stubs/qiskit_nature.algorithms.GroundStateSolver.solver", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.get_solver", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.minimum_eigensolver", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.supports_aux_operators", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.filter_criterion", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.get_solver", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.k", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.use_default_filter_criterion", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.filter_criterion", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.get_solver", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.minimum_eigensolver", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.supports_aux_operators", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.use_default_filter_criterion", "stubs/qiskit_nature.algorithms.QEOM", "stubs/qiskit_nature.algorithms.QEOM.excitations", "stubs/qiskit_nature.algorithms.QEOM.get_qubit_operators", "stubs/qiskit_nature.algorithms.QEOM.solve", "stubs/qiskit_nature.algorithms.QEOM.solver", "stubs/qiskit_nature.algorithms.VQEUCCFactory", "stubs/qiskit_nature.algorithms.VQEUCCFactory.ansatz", "stubs/qiskit_nature.algorithms.VQEUCCFactory.callback", "stubs/qiskit_nature.algorithms.VQEUCCFactory.expectation", "stubs/qiskit_nature.algorithms.VQEUCCFactory.get_solver", "stubs/qiskit_nature.algorithms.VQEUCCFactory.gradient", "stubs/qiskit_nature.algorithms.VQEUCCFactory.include_custom", "stubs/qiskit_nature.algorithms.VQEUCCFactory.initial_point", "stubs/qiskit_nature.algorithms.VQEUCCFactory.initial_state", "stubs/qiskit_nature.algorithms.VQEUCCFactory.minimum_eigensolver", "stubs/qiskit_nature.algorithms.VQEUCCFactory.optimizer", "stubs/qiskit_nature.algorithms.VQEUCCFactory.quantum_instance", "stubs/qiskit_nature.algorithms.VQEUCCFactory.supports_aux_operators", "stubs/qiskit_nature.algorithms.VQEUVCCFactory", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.ansatz", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.callback", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.expectation", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.get_solver", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.gradient", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.include_custom", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.initial_point", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.initial_state", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.minimum_eigensolver", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.optimizer", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.quantum_instance", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.supports_aux_operators", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.ansatz", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.compute", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.excitation_list", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.get_energy", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.grouped_property", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.to_numpy_array", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.ansatz", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.compute", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.grouped_property", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.to_numpy_array", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.ansatz", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.compute", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.excitation_list", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy_correction", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy_corrections", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.grouped_property", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.threshold", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.to_numpy_array", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.ansatz", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.compute", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.excitation_list", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.grouped_property", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.to_numpy_array", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler.evaluate_callable_aux_operators", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler.sample", "stubs/qiskit_nature.algorithms.pes_samplers.DifferentialExtrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.DifferentialExtrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.eval", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.fit", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_equilibrium_geometry", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_minimal_energy", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_trust_region", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.eval", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.fit", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_equilibrium_geometry", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_minimal_energy", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_trust_region", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator.factory", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.dissociation_energy", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.eval", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fit", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fit_function", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fundamental_frequency", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.get_equilibrium_geometry", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.get_minimal_energy", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.process_fit_data", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.update_molecule", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.vibrational_energy_level", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.wave_number", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.dissociation_energy", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.eval", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fit", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fit_function", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fundamental_frequency", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_equilibrium_geometry", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_maximum_trusted_level", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_minimal_energy", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.update_molecule", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.vibrational_energy_level", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.wave_number", "stubs/qiskit_nature.algorithms.pes_samplers.PCAExtrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.PCAExtrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.PolynomialExtrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.PolynomialExtrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.dissociation_energy", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.get_num_modes", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.get_trust_region", "stubs/qiskit_nature.algorithms.pes_samplers.SieveExtrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.SieveExtrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.get_maximum_trusted_level", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.get_num_modes", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.update_molecule", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.vibrational_energy_level", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.extrapolate", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.extrapolator", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.window", "stubs/qiskit_nature.circuit.library.BogoliubovTransform", "stubs/qiskit_nature.circuit.library.CHC", "stubs/qiskit_nature.circuit.library.CHC.excitations", "stubs/qiskit_nature.circuit.library.CHC.initial_state", "stubs/qiskit_nature.circuit.library.CHC.num_qubits", "stubs/qiskit_nature.circuit.library.FermionicGaussianState", "stubs/qiskit_nature.circuit.library.HartreeFock", "stubs/qiskit_nature.circuit.library.PUCCD", "stubs/qiskit_nature.circuit.library.PUCCD.generate_excitations", "stubs/qiskit_nature.circuit.library.PUCCD.include_singles", "stubs/qiskit_nature.circuit.library.SUCCD", "stubs/qiskit_nature.circuit.library.SUCCD.generate_excitations", "stubs/qiskit_nature.circuit.library.SUCCD.include_singles", "stubs/qiskit_nature.circuit.library.SlaterDeterminant", "stubs/qiskit_nature.circuit.library.UCC", "stubs/qiskit_nature.circuit.library.UCC.EXCITATION_TYPE", "stubs/qiskit_nature.circuit.library.UCC.excitation_list", "stubs/qiskit_nature.circuit.library.UCC.excitation_ops", "stubs/qiskit_nature.circuit.library.UCC.excitations", "stubs/qiskit_nature.circuit.library.UCC.num_particles", "stubs/qiskit_nature.circuit.library.UCC.num_spin_orbitals", "stubs/qiskit_nature.circuit.library.UCC.operators", "stubs/qiskit_nature.circuit.library.UCC.qubit_converter", "stubs/qiskit_nature.circuit.library.UCCSD", "stubs/qiskit_nature.circuit.library.UVCC", "stubs/qiskit_nature.circuit.library.UVCC.EXCITATION_TYPE", "stubs/qiskit_nature.circuit.library.UVCC.excitation_list", "stubs/qiskit_nature.circuit.library.UVCC.excitation_ops", "stubs/qiskit_nature.circuit.library.UVCC.excitations", "stubs/qiskit_nature.circuit.library.UVCC.num_modals", "stubs/qiskit_nature.circuit.library.UVCC.operators", "stubs/qiskit_nature.circuit.library.UVCC.qubit_converter", "stubs/qiskit_nature.circuit.library.UVCCSD", "stubs/qiskit_nature.circuit.library.VSCF", "stubs/qiskit_nature.circuit.library.ansatzes.utils.generate_fermionic_excitations", "stubs/qiskit_nature.circuit.library.ansatzes.utils.generate_vibration_excitations", "stubs/qiskit_nature.converters.second_quantization.QubitConverter", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert_match", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert_only", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.force_match", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.map", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.mapper", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.num_particles", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.two_qubit_reduction", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.z2symmetries", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.z2symmetry_reduction", "stubs/qiskit_nature.drivers.Molecule", "stubs/qiskit_nature.drivers.Molecule.VERSION", "stubs/qiskit_nature.drivers.Molecule.absolute_angle", "stubs/qiskit_nature.drivers.Molecule.absolute_bending", "stubs/qiskit_nature.drivers.Molecule.absolute_distance", "stubs/qiskit_nature.drivers.Molecule.absolute_stretching", "stubs/qiskit_nature.drivers.Molecule.atoms", "stubs/qiskit_nature.drivers.Molecule.charge", "stubs/qiskit_nature.drivers.Molecule.degrees_of_freedom", "stubs/qiskit_nature.drivers.Molecule.from_hdf5", "stubs/qiskit_nature.drivers.Molecule.geometry", "stubs/qiskit_nature.drivers.Molecule.masses", "stubs/qiskit_nature.drivers.Molecule.multiplicity", "stubs/qiskit_nature.drivers.Molecule.perturbations", "stubs/qiskit_nature.drivers.Molecule.relative_bending", "stubs/qiskit_nature.drivers.Molecule.relative_stretching", "stubs/qiskit_nature.drivers.Molecule.to_hdf5", "stubs/qiskit_nature.drivers.Molecule.units", "stubs/qiskit_nature.drivers.UnitsType", "stubs/qiskit_nature.drivers.UnitsType.ANGSTROM", "stubs/qiskit_nature.drivers.UnitsType.BOHR", "stubs/qiskit_nature.drivers.second_quantization.BaseDriver", "stubs/qiskit_nature.drivers.second_quantization.BaseDriver.run", "stubs/qiskit_nature.drivers.second_quantization.BasisType", "stubs/qiskit_nature.drivers.second_quantization.BasisType.B631G", "stubs/qiskit_nature.drivers.second_quantization.BasisType.B631GSS", "stubs/qiskit_nature.drivers.second_quantization.BasisType.BSTO3G", "stubs/qiskit_nature.drivers.second_quantization.BasisType.type_from_string", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriver", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriver.run", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.AUTO", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.GAUSSIAN", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PSI4", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PYQUANTE", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PYSCF", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.driver_class_from_type", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.basis", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.driver_kwargs", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.driver_type", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.method", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.molecule", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.run", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver.dump", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver.run", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.check_method_supported", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.from_molecule", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.run", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.to_driver_basis", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.from_molecule", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.run", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.to_driver_basis", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogDriver", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogDriver.run", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.a_to_h_numbering", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.cubic_force_constants", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.get_vibrational_energy", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.get_watson_hamiltonian", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.log", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.quadratic_force_constants", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.quartic_force_constants", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.convert", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.run", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.work_path", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.ATOM", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.HCORE", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.MINAO", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.ONE_E", "stubs/qiskit_nature.drivers.second_quantization.MethodType", "stubs/qiskit_nature.drivers.second_quantization.MethodType.RHF", "stubs/qiskit_nature.drivers.second_quantization.MethodType.RKS", "stubs/qiskit_nature.drivers.second_quantization.MethodType.ROHF", "stubs/qiskit_nature.drivers.second_quantization.MethodType.ROKS", "stubs/qiskit_nature.drivers.second_quantization.MethodType.UHF", "stubs/qiskit_nature.drivers.second_quantization.MethodType.UKS", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.check_method_supported", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.from_molecule", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.run", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.to_driver_basis", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.atoms", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.basis", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.charge", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.check_method_supported", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.from_molecule", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.maxiters", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.method", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.multiplicity", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.run", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.run_pyquante", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.to_driver_basis", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.tol", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.units", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.atom", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.basis", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.charge", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.check_method_supported", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.chkfile", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.conv_tol", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.from_molecule", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.init_guess", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.max_cycle", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.max_memory", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.method", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.run", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.run_pyscf", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.spin", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.to_driver_basis", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.unit", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.xc_functional", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.xcf_library", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriver", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriver.run", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.AUTO", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.GAUSSIAN_FORCES", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.driver_class_from_type", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.basis", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.driver_kwargs", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.driver_type", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.molecule", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.run", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevMapper", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevMapper.map", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevSuperFastMapper", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevSuperFastMapper.map", "stubs/qiskit_nature.mappers.second_quantization.DirectMapper", "stubs/qiskit_nature.mappers.second_quantization.DirectMapper.map", "stubs/qiskit_nature.mappers.second_quantization.FermionicMapper", "stubs/qiskit_nature.mappers.second_quantization.FermionicMapper.map", "stubs/qiskit_nature.mappers.second_quantization.JordanWignerMapper", "stubs/qiskit_nature.mappers.second_quantization.JordanWignerMapper.map", "stubs/qiskit_nature.mappers.second_quantization.LinearMapper", "stubs/qiskit_nature.mappers.second_quantization.LinearMapper.map", "stubs/qiskit_nature.mappers.second_quantization.LogarithmicMapper", "stubs/qiskit_nature.mappers.second_quantization.LogarithmicMapper.map", "stubs/qiskit_nature.mappers.second_quantization.ParityMapper", "stubs/qiskit_nature.mappers.second_quantization.ParityMapper.map", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.allows_two_qubit_reduction", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.map", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.mode_based_mapping", "stubs/qiskit_nature.mappers.second_quantization.SpinMapper", "stubs/qiskit_nature.mappers.second_quantization.SpinMapper.map", "stubs/qiskit_nature.mappers.second_quantization.VibrationalMapper", "stubs/qiskit_nature.mappers.second_quantization.VibrationalMapper.map", "stubs/qiskit_nature.operators.second_quantization.FermionicOp", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.__len__", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.add", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.adjoint", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.compose", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.display_format", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.mul", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.normal_ordered", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.one", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.reduce", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.register_length", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.set_truncation", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.simplify", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.terms", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_list", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_matrix", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_normal_order", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.zero", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.antisymmetric_part", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.conserves_particle_number", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.constant", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.diagonalizing_bogoliubov_transform", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.hermitian_part", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.majorana_form", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.num_modes", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.to_fermionic_op", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.is_hermitian", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.register_length", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.simplify", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.to_list", "stubs/qiskit_nature.operators.second_quantization.SpinOp", "stubs/qiskit_nature.operators.second_quantization.SpinOp.__len__", "stubs/qiskit_nature.operators.second_quantization.SpinOp.add", "stubs/qiskit_nature.operators.second_quantization.SpinOp.adjoint", "stubs/qiskit_nature.operators.second_quantization.SpinOp.compose", "stubs/qiskit_nature.operators.second_quantization.SpinOp.mul", "stubs/qiskit_nature.operators.second_quantization.SpinOp.reduce", "stubs/qiskit_nature.operators.second_quantization.SpinOp.register_length", "stubs/qiskit_nature.operators.second_quantization.SpinOp.simplify", "stubs/qiskit_nature.operators.second_quantization.SpinOp.spin", "stubs/qiskit_nature.operators.second_quantization.SpinOp.to_list", "stubs/qiskit_nature.operators.second_quantization.SpinOp.to_matrix", "stubs/qiskit_nature.operators.second_quantization.SpinOp.x", "stubs/qiskit_nature.operators.second_quantization.SpinOp.y", "stubs/qiskit_nature.operators.second_quantization.SpinOp.z", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.__len__", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.add", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.adjoint", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.compose", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.mul", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.num_modals", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.num_modes", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.one", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.reduce", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.register_length", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.simplify", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.to_list", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.zero", "stubs/qiskit_nature.problems.sampling.protein_folding.Interaction", "stubs/qiskit_nature.problems.sampling.protein_folding.Interaction.calculate_energy_matrix", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidResidueException", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidSideChainException", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidSizeException", "stubs/qiskit_nature.problems.sampling.protein_folding.MainChain", "stubs/qiskit_nature.problems.sampling.protein_folding.MainChain.main_chain_residue_sequence", "stubs/qiskit_nature.problems.sampling.protein_folding.MixedInteraction", "stubs/qiskit_nature.problems.sampling.protein_folding.MixedInteraction.calculate_energy_matrix", "stubs/qiskit_nature.problems.sampling.protein_folding.MiyazawaJerniganInteraction", "stubs/qiskit_nature.problems.sampling.protein_folding.MiyazawaJerniganInteraction.calculate_energy_matrix", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_1", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_back", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_chiral", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_main_chain", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_side_chain_hot_vector", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_side_chains", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.interpret", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.peptide", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.qubit_op", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.unused_qubits", "stubs/qiskit_nature.problems.sampling.protein_folding.RandomInteraction", "stubs/qiskit_nature.problems.sampling.protein_folding.RandomInteraction.calculate_energy_matrix", "stubs/qiskit_nature.problems.sampling.protein_folding.SideChain", "stubs/qiskit_nature.problems.second_quantization.BaseProblem", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.get_default_filter_criterion", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.grouped_property", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.grouped_property_transformed", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.hopping_qeom_ops", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.interpret", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.main_property_name", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.molecule_data", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.molecule_data_transformed", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.num_particles", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.symmetry_sector_locator", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.get_default_filter_criterion", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.hopping_qeom_ops", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.interpret", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.num_particles", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.num_spin_orbitals", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.symmetry_sector_locator", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.get_default_filter_criterion", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.hopping_qeom_ops", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.interpret", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.get_default_filter_criterion", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.hopping_qeom_ops", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.interpret", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.lattice", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.from_parameters", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.hopping_matrix", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.uniform_parameters", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.boundary_condition", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.dim", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.draw_without_boundary", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.edge_parameter", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.onsite_parameter", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.size", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.coupling_matrix", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.from_parameters", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.second_q_ops", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.uniform_parameters", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.copy", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.draw", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.from_nodes_and_edges", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.graph", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.node_indexes", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.num_nodes", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.to_adjacency_matrix", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.weighted_edge_list", "stubs/qiskit_nature.problems.second_quantization.lattice.LineLattice", "stubs/qiskit_nature.problems.second_quantization.lattice.LineLattice.num_nodes", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice.cols", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice.rows", "stubs/qiskit_nature.problems.second_quantization.lattice.TriangularLattice", "stubs/qiskit_nature.problems.second_quantization.lattice.TriangularLattice.draw_without_boundary", "stubs/qiskit_nature.properties.GroupedProperty", "stubs/qiskit_nature.properties.GroupedProperty.add_property", "stubs/qiskit_nature.properties.GroupedProperty.from_hdf5", "stubs/qiskit_nature.properties.GroupedProperty.get_property", "stubs/qiskit_nature.properties.GroupedProperty.interpret", "stubs/qiskit_nature.properties.GroupedProperty.to_hdf5", "stubs/qiskit_nature.properties.Property", "stubs/qiskit_nature.properties.Property.VERSION", "stubs/qiskit_nature.properties.Property.log", "stubs/qiskit_nature.properties.Property.name", "stubs/qiskit_nature.properties.Property.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.GroupedSecondQuantizedProperty", "stubs/qiskit_nature.properties.second_quantization.GroupedSecondQuantizedProperty.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.ABSOLUTE_TOLERANCE", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.RELATIVE_TOLERANCE", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.absolute_tolerance", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.num_spin_orbitals", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.relative_tolerance", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.spin", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.nuclear_dipole_moment", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.reverse_dipole_sign", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_raw_integrals", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.integral_operator", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.kinetic", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.nuclear_repulsion_energy", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.orbital_energies", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.overlap", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.reference_energy", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.num_spin_orbitals", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.ABSOLUTE_TOLERANCE", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.RELATIVE_TOLERANCE", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.absolute_tolerance", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_alpha", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_beta", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_particles", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_spin_orbitals", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.occupation_alpha", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.occupation_beta", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.relative_tolerance", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.AO", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.MO", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.SO", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.coeff_alpha", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.coeff_beta", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.is_alpha_equal_beta", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.INTEGRAL_TRUNCATION_LEVEL", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.VERSION", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.add", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.basis", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.compose", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.get_matrix", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.num_body_terms", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.set_truncation", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.threshold", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_second_q_op", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_spin", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.transform_basis", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.add_electronic_integral", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.get_electronic_integral", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.integral_operator", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.interpret", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.transform_basis", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.compose", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.to_spin", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.transform_basis", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.EINSUM_AO_TO_MO", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.EINSUM_CHEM_TO_PHYS", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.compose", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.get_matrix", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.to_spin", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.transform_basis", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.interpret", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.add_vibrational_integral", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.get_vibrational_integral", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.interpret", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.truncation_order", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.from_legacy_driver_result", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.num_modes", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.second_q_ops", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.HarmonicBasis", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.HarmonicBasis.eval_integral", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.VERSION", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.eval_integral", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.num_modals_per_mode", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.VERSION", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.basis", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.from_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.integrals", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.num_body_terms", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.set_truncation", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_basis", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_hdf5", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_second_q_op", "stubs/qiskit_nature.results.BOPESSamplerResult", "stubs/qiskit_nature.results.BOPESSamplerResult.energies", "stubs/qiskit_nature.results.BOPESSamplerResult.point_results", "stubs/qiskit_nature.results.BOPESSamplerResult.points", "stubs/qiskit_nature.results.BOPESSamplerResult.raw_results", "stubs/qiskit_nature.results.EigenstateResult", "stubs/qiskit_nature.results.EigenstateResult.aux_operator_eigenvalues", "stubs/qiskit_nature.results.EigenstateResult.combine", "stubs/qiskit_nature.results.EigenstateResult.eigenenergies", "stubs/qiskit_nature.results.EigenstateResult.eigenstates", "stubs/qiskit_nature.results.EigenstateResult.groundenergy", "stubs/qiskit_nature.results.EigenstateResult.groundstate", "stubs/qiskit_nature.results.EigenstateResult.raw_result", "stubs/qiskit_nature.results.ElectronicStructureResult", "stubs/qiskit_nature.results.ElectronicStructureResult.computed_dipole_moment", "stubs/qiskit_nature.results.ElectronicStructureResult.computed_energies", "stubs/qiskit_nature.results.ElectronicStructureResult.dipole_moment", "stubs/qiskit_nature.results.ElectronicStructureResult.dipole_moment_in_debye", "stubs/qiskit_nature.results.ElectronicStructureResult.electronic_dipole_moment", "stubs/qiskit_nature.results.ElectronicStructureResult.electronic_energies", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_dipole", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_dipoles", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_energies", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_energy", "stubs/qiskit_nature.results.ElectronicStructureResult.formatted", "stubs/qiskit_nature.results.ElectronicStructureResult.hartree_fock_energy", "stubs/qiskit_nature.results.ElectronicStructureResult.has_dipole", "stubs/qiskit_nature.results.ElectronicStructureResult.has_observables", "stubs/qiskit_nature.results.ElectronicStructureResult.magnetization", "stubs/qiskit_nature.results.ElectronicStructureResult.nuclear_dipole_moment", "stubs/qiskit_nature.results.ElectronicStructureResult.nuclear_repulsion_energy", "stubs/qiskit_nature.results.ElectronicStructureResult.num_particles", "stubs/qiskit_nature.results.ElectronicStructureResult.reverse_dipole_sign", "stubs/qiskit_nature.results.ElectronicStructureResult.spin", "stubs/qiskit_nature.results.ElectronicStructureResult.total_angular_momentum", "stubs/qiskit_nature.results.ElectronicStructureResult.total_dipole_moment", "stubs/qiskit_nature.results.ElectronicStructureResult.total_dipole_moment_in_debye", "stubs/qiskit_nature.results.ElectronicStructureResult.total_energies", "stubs/qiskit_nature.results.LatticeModelResult", "stubs/qiskit_nature.results.LatticeModelResult.algorithm_result", "stubs/qiskit_nature.results.LatticeModelResult.computed_lattice_energies", "stubs/qiskit_nature.results.ProteinFoldingResult", "stubs/qiskit_nature.results.ProteinFoldingResult.get_figure", "stubs/qiskit_nature.results.ProteinFoldingResult.get_result_binary_vector", "stubs/qiskit_nature.results.ProteinFoldingResult.protein_shape_decoder", "stubs/qiskit_nature.results.ProteinFoldingResult.protein_shape_file_gen", "stubs/qiskit_nature.results.ProteinFoldingResult.save_xyz_file", "stubs/qiskit_nature.results.ProteinFoldingResult.turn_sequence", "stubs/qiskit_nature.results.VibrationalStructureResult", "stubs/qiskit_nature.results.VibrationalStructureResult.algorithm_result", "stubs/qiskit_nature.results.VibrationalStructureResult.computed_vibrational_energies", "stubs/qiskit_nature.results.VibrationalStructureResult.formatted", "stubs/qiskit_nature.results.VibrationalStructureResult.num_occupied_modals_per_mode", "stubs/qiskit_nature.results.utils.ProteinPlotter", "stubs/qiskit_nature.results.utils.ProteinPlotter.get_figure", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder.main_turns", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder.side_turns", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.COORDINATES", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.generate_main_positions", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.generate_side_positions", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.get_xyz_data", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.main_positions", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.save_xyz_file", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.side_positions", "stubs/qiskit_nature.runtime.VQEClient", "stubs/qiskit_nature.runtime.VQEClient.ansatz", "stubs/qiskit_nature.runtime.VQEClient.backend", "stubs/qiskit_nature.runtime.VQEClient.callback", "stubs/qiskit_nature.runtime.VQEClient.compute_minimum_eigenvalue", "stubs/qiskit_nature.runtime.VQEClient.initial_point", "stubs/qiskit_nature.runtime.VQEClient.measurement_error_mitigation", "stubs/qiskit_nature.runtime.VQEClient.optimizer", "stubs/qiskit_nature.runtime.VQEClient.program_id", "stubs/qiskit_nature.runtime.VQEClient.provider", "stubs/qiskit_nature.runtime.VQEClient.shots", "stubs/qiskit_nature.runtime.VQEClient.store_intermediate", "stubs/qiskit_nature.runtime.VQEClient.supports_aux_operators", "stubs/qiskit_nature.runtime.VQEProgram", "stubs/qiskit_nature.runtime.VQEProgram.compute_minimum_eigenvalue", "stubs/qiskit_nature.runtime.VQEProgramResult", "stubs/qiskit_nature.runtime.VQERuntimeResult", "stubs/qiskit_nature.runtime.VQERuntimeResult.job_id", "stubs/qiskit_nature.runtime.VQERuntimeResult.optimizer_history", "stubs/qiskit_nature.transformers.second_quantization.BaseTransformer", "stubs/qiskit_nature.transformers.second_quantization.BaseTransformer.transform", "stubs/qiskit_nature.transformers.second_quantization.electronic.ActiveSpaceTransformer", "stubs/qiskit_nature.transformers.second_quantization.electronic.ActiveSpaceTransformer.transform", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer.Z", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer.count_core_orbitals", "stubs/qiskit_nature.utils.apply_matrix_to_slices", "stubs/qiskit_nature.utils.givens_matrix", "tutorials/01_electronic_structure", "tutorials/02_vibrational_structure", "tutorials/03_ground_state_solvers", "tutorials/04_excited_states_solvers", "tutorials/05_Sampling_potential_energy_surfaces", "tutorials/06_calculating_thermodynamic_observables", "tutorials/07_leveraging_qiskit_runtime", "tutorials/08_property_framework", "tutorials/09_Protein_Folding", "tutorials/10_lattice_models", "tutorials/11_quadratic_hamiltonian_and_slater_determinants", "tutorials/index"], "filenames": ["apidocs/qiskit_nature.rst", "apidocs/qiskit_nature.algorithms.rst", "apidocs/qiskit_nature.algorithms.initial_points.rst", "apidocs/qiskit_nature.algorithms.pes_samplers.rst", "apidocs/qiskit_nature.circuit.rst", "apidocs/qiskit_nature.circuit.library.rst", "apidocs/qiskit_nature.circuit.library.ansatzes.utils.rst", "apidocs/qiskit_nature.converters.rst", "apidocs/qiskit_nature.converters.second_quantization.rst", "apidocs/qiskit_nature.drivers.rst", "apidocs/qiskit_nature.drivers.second_quantization.rst", "apidocs/qiskit_nature.drivers.second_quantization.gaussiand.rst", "apidocs/qiskit_nature.drivers.second_quantization.psi4d.rst", "apidocs/qiskit_nature.drivers.second_quantization.pyquanted.rst", "apidocs/qiskit_nature.drivers.second_quantization.pyscfd.rst", "apidocs/qiskit_nature.hdf5.rst", "apidocs/qiskit_nature.logging.rst", "apidocs/qiskit_nature.mappers.rst", "apidocs/qiskit_nature.mappers.second_quantization.rst", "apidocs/qiskit_nature.operators.rst", "apidocs/qiskit_nature.operators.second_quantization.rst", "apidocs/qiskit_nature.problems.rst", "apidocs/qiskit_nature.problems.sampling.rst", "apidocs/qiskit_nature.problems.sampling.protein_folding.rst", "apidocs/qiskit_nature.problems.second_quantization.rst", "apidocs/qiskit_nature.properties.rst", "apidocs/qiskit_nature.properties.second_quantization.rst", "apidocs/qiskit_nature.properties.second_quantization.electronic.rst", "apidocs/qiskit_nature.properties.second_quantization.electronic.bases.rst", "apidocs/qiskit_nature.properties.second_quantization.electronic.integrals.rst", "apidocs/qiskit_nature.properties.second_quantization.vibrational.rst", "apidocs/qiskit_nature.properties.second_quantization.vibrational.bases.rst", "apidocs/qiskit_nature.properties.second_quantization.vibrational.integrals.rst", "apidocs/qiskit_nature.results.rst", "apidocs/qiskit_nature.results.utils.rst", "apidocs/qiskit_nature.runtime.rst", "apidocs/qiskit_nature.settings.rst", "apidocs/qiskit_nature.transformers.rst", "apidocs/qiskit_nature.transformers.second_quantization.rst", "apidocs/qiskit_nature.transformers.second_quantization.electronic.rst", "apidocs/qiskit_nature.utils.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_nature.QiskitNatureError.rst", "stubs/qiskit_nature.UnsupportMethodError.rst", "stubs/qiskit_nature.algorithms.AdaptVQE.rst", "stubs/qiskit_nature.algorithms.AdaptVQE.gradient.rst", "stubs/qiskit_nature.algorithms.AdaptVQE.returns_groundstate.rst", "stubs/qiskit_nature.algorithms.AdaptVQE.solve.rst", "stubs/qiskit_nature.algorithms.EigensolverFactory.rst", "stubs/qiskit_nature.algorithms.EigensolverFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.get_qubit_operators.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.solve.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesEigensolver.solver.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.get_qubit_operators.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.solve.rst", "stubs/qiskit_nature.algorithms.ExcitedStatesSolver.solver.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.evaluate_operators.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.get_qubit_operators.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.returns_groundstate.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.solve.rst", "stubs/qiskit_nature.algorithms.GroundStateEigensolver.solver.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.evaluate_operators.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.get_qubit_operators.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.qubit_converter.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.returns_groundstate.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.solve.rst", "stubs/qiskit_nature.algorithms.GroundStateSolver.solver.rst", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.rst", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.minimum_eigensolver.rst", "stubs/qiskit_nature.algorithms.MinimumEigensolverFactory.supports_aux_operators.rst", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.rst", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.filter_criterion.rst", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.k.rst", "stubs/qiskit_nature.algorithms.NumPyEigensolverFactory.use_default_filter_criterion.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.filter_criterion.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.minimum_eigensolver.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.supports_aux_operators.rst", "stubs/qiskit_nature.algorithms.NumPyMinimumEigensolverFactory.use_default_filter_criterion.rst", "stubs/qiskit_nature.algorithms.QEOM.rst", "stubs/qiskit_nature.algorithms.QEOM.excitations.rst", "stubs/qiskit_nature.algorithms.QEOM.get_qubit_operators.rst", "stubs/qiskit_nature.algorithms.QEOM.solve.rst", "stubs/qiskit_nature.algorithms.QEOM.solver.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.ansatz.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.callback.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.expectation.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.gradient.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.include_custom.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.initial_point.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.initial_state.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.minimum_eigensolver.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.optimizer.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.quantum_instance.rst", "stubs/qiskit_nature.algorithms.VQEUCCFactory.supports_aux_operators.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.ansatz.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.callback.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.expectation.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.get_solver.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.gradient.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.include_custom.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.initial_point.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.initial_state.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.minimum_eigensolver.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.optimizer.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.quantum_instance.rst", "stubs/qiskit_nature.algorithms.VQEUVCCFactory.supports_aux_operators.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.ansatz.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.compute.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.excitation_list.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.get_energy.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.grouped_property.rst", "stubs/qiskit_nature.algorithms.initial_points.HFInitialPoint.to_numpy_array.rst", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.rst", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.ansatz.rst", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.compute.rst", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.grouped_property.rst", "stubs/qiskit_nature.algorithms.initial_points.InitialPoint.to_numpy_array.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.ansatz.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.compute.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.excitation_list.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy_correction.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.get_energy_corrections.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.grouped_property.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.threshold.rst", "stubs/qiskit_nature.algorithms.initial_points.MP2InitialPoint.to_numpy_array.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.ansatz.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.compute.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.excitation_list.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.grouped_property.rst", "stubs/qiskit_nature.algorithms.initial_points.VSCFInitialPoint.to_numpy_array.rst", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler.rst", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler.evaluate_callable_aux_operators.rst", "stubs/qiskit_nature.algorithms.pes_samplers.BOPESSampler.sample.rst", "stubs/qiskit_nature.algorithms.pes_samplers.DifferentialExtrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.DifferentialExtrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.eval.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.fit.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_equilibrium_geometry.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_minimal_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline.get_trust_region.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.eval.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.fit.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_equilibrium_geometry.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_minimal_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase.get_trust_region.rst", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.Extrapolator.factory.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.dissociation_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.eval.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fit.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fit_function.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.fundamental_frequency.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.get_equilibrium_geometry.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.get_minimal_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.process_fit_data.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.update_molecule.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.vibrational_energy_level.rst", "stubs/qiskit_nature.algorithms.pes_samplers.HarmonicPotential.wave_number.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.dissociation_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.eval.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fit.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fit_function.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.fundamental_frequency.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_equilibrium_geometry.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_maximum_trusted_level.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.get_minimal_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.update_molecule.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.vibrational_energy_level.rst", "stubs/qiskit_nature.algorithms.pes_samplers.MorsePotential.wave_number.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PCAExtrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PCAExtrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PolynomialExtrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PolynomialExtrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.dissociation_energy.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.get_num_modes.rst", "stubs/qiskit_nature.algorithms.pes_samplers.PotentialBase.get_trust_region.rst", "stubs/qiskit_nature.algorithms.pes_samplers.SieveExtrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.SieveExtrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.rst", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.get_maximum_trusted_level.rst", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.get_num_modes.rst", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.update_molecule.rst", "stubs/qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase.vibrational_energy_level.rst", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.extrapolate.rst", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.extrapolator.rst", "stubs/qiskit_nature.algorithms.pes_samplers.WindowExtrapolator.window.rst", "stubs/qiskit_nature.circuit.library.BogoliubovTransform.rst", "stubs/qiskit_nature.circuit.library.CHC.rst", "stubs/qiskit_nature.circuit.library.CHC.excitations.rst", "stubs/qiskit_nature.circuit.library.CHC.initial_state.rst", "stubs/qiskit_nature.circuit.library.CHC.num_qubits.rst", "stubs/qiskit_nature.circuit.library.FermionicGaussianState.rst", "stubs/qiskit_nature.circuit.library.HartreeFock.rst", "stubs/qiskit_nature.circuit.library.PUCCD.rst", "stubs/qiskit_nature.circuit.library.PUCCD.generate_excitations.rst", "stubs/qiskit_nature.circuit.library.PUCCD.include_singles.rst", "stubs/qiskit_nature.circuit.library.SUCCD.rst", "stubs/qiskit_nature.circuit.library.SUCCD.generate_excitations.rst", "stubs/qiskit_nature.circuit.library.SUCCD.include_singles.rst", "stubs/qiskit_nature.circuit.library.SlaterDeterminant.rst", "stubs/qiskit_nature.circuit.library.UCC.rst", "stubs/qiskit_nature.circuit.library.UCC.EXCITATION_TYPE.rst", "stubs/qiskit_nature.circuit.library.UCC.excitation_list.rst", "stubs/qiskit_nature.circuit.library.UCC.excitation_ops.rst", "stubs/qiskit_nature.circuit.library.UCC.excitations.rst", "stubs/qiskit_nature.circuit.library.UCC.num_particles.rst", "stubs/qiskit_nature.circuit.library.UCC.num_spin_orbitals.rst", "stubs/qiskit_nature.circuit.library.UCC.operators.rst", "stubs/qiskit_nature.circuit.library.UCC.qubit_converter.rst", "stubs/qiskit_nature.circuit.library.UCCSD.rst", "stubs/qiskit_nature.circuit.library.UVCC.rst", "stubs/qiskit_nature.circuit.library.UVCC.EXCITATION_TYPE.rst", "stubs/qiskit_nature.circuit.library.UVCC.excitation_list.rst", "stubs/qiskit_nature.circuit.library.UVCC.excitation_ops.rst", "stubs/qiskit_nature.circuit.library.UVCC.excitations.rst", "stubs/qiskit_nature.circuit.library.UVCC.num_modals.rst", "stubs/qiskit_nature.circuit.library.UVCC.operators.rst", "stubs/qiskit_nature.circuit.library.UVCC.qubit_converter.rst", "stubs/qiskit_nature.circuit.library.UVCCSD.rst", "stubs/qiskit_nature.circuit.library.VSCF.rst", "stubs/qiskit_nature.circuit.library.ansatzes.utils.generate_fermionic_excitations.rst", "stubs/qiskit_nature.circuit.library.ansatzes.utils.generate_vibration_excitations.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert_match.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.convert_only.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.force_match.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.map.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.mapper.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.num_particles.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.two_qubit_reduction.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.z2symmetries.rst", "stubs/qiskit_nature.converters.second_quantization.QubitConverter.z2symmetry_reduction.rst", "stubs/qiskit_nature.drivers.Molecule.rst", "stubs/qiskit_nature.drivers.Molecule.VERSION.rst", "stubs/qiskit_nature.drivers.Molecule.absolute_angle.rst", "stubs/qiskit_nature.drivers.Molecule.absolute_bending.rst", "stubs/qiskit_nature.drivers.Molecule.absolute_distance.rst", "stubs/qiskit_nature.drivers.Molecule.absolute_stretching.rst", "stubs/qiskit_nature.drivers.Molecule.atoms.rst", "stubs/qiskit_nature.drivers.Molecule.charge.rst", "stubs/qiskit_nature.drivers.Molecule.degrees_of_freedom.rst", "stubs/qiskit_nature.drivers.Molecule.from_hdf5.rst", "stubs/qiskit_nature.drivers.Molecule.geometry.rst", "stubs/qiskit_nature.drivers.Molecule.masses.rst", "stubs/qiskit_nature.drivers.Molecule.multiplicity.rst", "stubs/qiskit_nature.drivers.Molecule.perturbations.rst", "stubs/qiskit_nature.drivers.Molecule.relative_bending.rst", "stubs/qiskit_nature.drivers.Molecule.relative_stretching.rst", "stubs/qiskit_nature.drivers.Molecule.to_hdf5.rst", "stubs/qiskit_nature.drivers.Molecule.units.rst", "stubs/qiskit_nature.drivers.UnitsType.rst", "stubs/qiskit_nature.drivers.UnitsType.ANGSTROM.rst", "stubs/qiskit_nature.drivers.UnitsType.BOHR.rst", "stubs/qiskit_nature.drivers.second_quantization.BaseDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.BaseDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.BasisType.rst", "stubs/qiskit_nature.drivers.second_quantization.BasisType.B631G.rst", "stubs/qiskit_nature.drivers.second_quantization.BasisType.B631GSS.rst", "stubs/qiskit_nature.drivers.second_quantization.BasisType.BSTO3G.rst", "stubs/qiskit_nature.drivers.second_quantization.BasisType.type_from_string.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.AUTO.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.GAUSSIAN.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PSI4.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PYQUANTE.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.PYSCF.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType.driver_class_from_type.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.basis.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.driver_kwargs.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.driver_type.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.method.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver.dump.rst", "stubs/qiskit_nature.drivers.second_quantization.FCIDumpDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.check_method_supported.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.from_molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianDriver.to_driver_basis.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.from_molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianForcesDriver.to_driver_basis.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.a_to_h_numbering.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.cubic_force_constants.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.get_vibrational_energy.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.get_watson_hamiltonian.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.log.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.quadratic_force_constants.rst", "stubs/qiskit_nature.drivers.second_quantization.GaussianLogResult.quartic_force_constants.rst", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.rst", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.convert.rst", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.HDF5Driver.work_path.rst", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.rst", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.ATOM.rst", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.HCORE.rst", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.MINAO.rst", "stubs/qiskit_nature.drivers.second_quantization.InitialGuess.ONE_E.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.RHF.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.RKS.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.ROHF.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.ROKS.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.UHF.rst", "stubs/qiskit_nature.drivers.second_quantization.MethodType.UKS.rst", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.rst", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.check_method_supported.rst", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.from_molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.PSI4Driver.to_driver_basis.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.atoms.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.basis.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.charge.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.check_method_supported.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.from_molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.maxiters.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.method.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.multiplicity.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.run_pyquante.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.to_driver_basis.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.tol.rst", "stubs/qiskit_nature.drivers.second_quantization.PyQuanteDriver.units.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.atom.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.basis.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.charge.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.check_method_supported.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.chkfile.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.conv_tol.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.from_molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.init_guess.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.max_cycle.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.max_memory.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.method.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.run_pyscf.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.spin.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.to_driver_basis.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.unit.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.xc_functional.rst", "stubs/qiskit_nature.drivers.second_quantization.PySCFDriver.xcf_library.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriver.run.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.AUTO.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.GAUSSIAN_FORCES.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType.driver_class_from_type.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.basis.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.driver_kwargs.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.driver_type.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.molecule.rst", "stubs/qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver.run.rst", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevSuperFastMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.BravyiKitaevSuperFastMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.DirectMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.DirectMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.FermionicMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.FermionicMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.JordanWignerMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.JordanWignerMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.LinearMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.LinearMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.LogarithmicMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.LogarithmicMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.ParityMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.ParityMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.allows_two_qubit_reduction.rst", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.QubitMapper.mode_based_mapping.rst", "stubs/qiskit_nature.mappers.second_quantization.SpinMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.SpinMapper.map.rst", "stubs/qiskit_nature.mappers.second_quantization.VibrationalMapper.rst", "stubs/qiskit_nature.mappers.second_quantization.VibrationalMapper.map.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.__len__.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.add.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.adjoint.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.compose.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.display_format.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.mul.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.normal_ordered.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.one.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.reduce.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.register_length.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.set_truncation.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.simplify.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.terms.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_list.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_matrix.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.to_normal_order.rst", "stubs/qiskit_nature.operators.second_quantization.FermionicOp.zero.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.antisymmetric_part.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.conserves_particle_number.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.constant.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.diagonalizing_bogoliubov_transform.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.hermitian_part.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.majorana_form.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.num_modes.rst", "stubs/qiskit_nature.operators.second_quantization.QuadraticHamiltonian.to_fermionic_op.rst", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.rst", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.is_hermitian.rst", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.register_length.rst", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.simplify.rst", "stubs/qiskit_nature.operators.second_quantization.SecondQuantizedOp.to_list.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.__len__.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.add.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.adjoint.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.compose.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.mul.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.reduce.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.register_length.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.simplify.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.spin.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.to_list.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.to_matrix.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.x.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.y.rst", "stubs/qiskit_nature.operators.second_quantization.SpinOp.z.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.__len__.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.add.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.adjoint.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.compose.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.mul.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.num_modals.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.num_modes.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.one.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.reduce.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.register_length.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.simplify.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.to_list.rst", "stubs/qiskit_nature.operators.second_quantization.VibrationalOp.zero.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Interaction.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Interaction.calculate_energy_matrix.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidResidueException.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidSideChainException.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.InvalidSizeException.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MainChain.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MainChain.main_chain_residue_sequence.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MixedInteraction.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MixedInteraction.calculate_energy_matrix.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MiyazawaJerniganInteraction.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.MiyazawaJerniganInteraction.calculate_energy_matrix.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_1.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_back.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.PenaltyParameters.penalty_chiral.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_main_chain.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_side_chain_hot_vector.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.Peptide.get_side_chains.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.interpret.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.peptide.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.qubit_op.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem.unused_qubits.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.RandomInteraction.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.RandomInteraction.calculate_energy_matrix.rst", "stubs/qiskit_nature.problems.sampling.protein_folding.SideChain.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.get_default_filter_criterion.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.grouped_property.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.grouped_property_transformed.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.hopping_qeom_ops.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.interpret.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.main_property_name.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.molecule_data.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.molecule_data_transformed.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.num_particles.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.BaseProblem.symmetry_sector_locator.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.get_default_filter_criterion.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.hopping_qeom_ops.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.interpret.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.num_particles.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.num_spin_orbitals.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.ElectronicStructureProblem.symmetry_sector_locator.rst", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.rst", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.get_default_filter_criterion.rst", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.hopping_qeom_ops.rst", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.interpret.rst", "stubs/qiskit_nature.problems.second_quantization.LatticeModelProblem.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.rst", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.get_default_filter_criterion.rst", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.hopping_qeom_ops.rst", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.interpret.rst", "stubs/qiskit_nature.problems.second_quantization.VibrationalStructureProblem.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.from_parameters.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.hopping_matrix.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel.uniform_parameters.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.boundary_condition.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.dim.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.draw_without_boundary.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.edge_parameter.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.onsite_parameter.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice.size.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.coupling_matrix.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.from_parameters.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.second_q_ops.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.IsingModel.uniform_parameters.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.copy.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.draw.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.from_nodes_and_edges.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.graph.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.node_indexes.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.num_nodes.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.to_adjacency_matrix.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.Lattice.weighted_edge_list.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.LineLattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.LineLattice.num_nodes.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice.cols.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.SquareLattice.rows.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.TriangularLattice.rst", "stubs/qiskit_nature.problems.second_quantization.lattice.TriangularLattice.draw_without_boundary.rst", "stubs/qiskit_nature.properties.GroupedProperty.rst", "stubs/qiskit_nature.properties.GroupedProperty.add_property.rst", "stubs/qiskit_nature.properties.GroupedProperty.from_hdf5.rst", "stubs/qiskit_nature.properties.GroupedProperty.get_property.rst", "stubs/qiskit_nature.properties.GroupedProperty.interpret.rst", "stubs/qiskit_nature.properties.GroupedProperty.to_hdf5.rst", "stubs/qiskit_nature.properties.Property.rst", "stubs/qiskit_nature.properties.Property.VERSION.rst", "stubs/qiskit_nature.properties.Property.log.rst", "stubs/qiskit_nature.properties.Property.name.rst", "stubs/qiskit_nature.properties.Property.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.GroupedSecondQuantizedProperty.rst", "stubs/qiskit_nature.properties.second_quantization.GroupedSecondQuantizedProperty.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty.rst", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.SecondQuantizedProperty.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.ABSOLUTE_TOLERANCE.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.RELATIVE_TOLERANCE.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.absolute_tolerance.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.num_spin_orbitals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.relative_tolerance.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.spin.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.AngularMomentum.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.nuclear_dipole_moment.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.reverse_dipole_sign.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.from_raw_integrals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.integral_operator.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.kinetic.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.nuclear_repulsion_energy.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.orbital_energies.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.overlap.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.reference_energy.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.num_spin_orbitals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.Magnetization.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.ABSOLUTE_TOLERANCE.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.RELATIVE_TOLERANCE.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.absolute_tolerance.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_alpha.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_beta.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_particles.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.num_spin_orbitals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.occupation_alpha.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.occupation_beta.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.relative_tolerance.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.ParticleNumber.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.AO.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.MO.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis.SO.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.coeff_alpha.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.coeff_beta.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.is_alpha_equal_beta.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.INTEGRAL_TRUNCATION_LEVEL.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.VERSION.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.add.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.basis.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.compose.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.get_matrix.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.num_body_terms.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.set_truncation.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.threshold.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_second_q_op.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.to_spin.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals.transform_basis.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.add_electronic_integral.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.get_electronic_integral.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.integral_operator.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty.transform_basis.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.compose.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.to_spin.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals.transform_basis.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.EINSUM_AO_TO_MO.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.EINSUM_CHEM_TO_PHYS.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.compose.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.get_matrix.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.to_spin.rst", "stubs/qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals.transform_basis.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.OccupiedModals.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.add_vibrational_integral.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.get_vibrational_integral.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.interpret.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy.truncation_order.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.from_legacy_driver_result.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.num_modes.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.second_q_ops.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.HarmonicBasis.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.HarmonicBasis.eval_integral.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.VERSION.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.eval_integral.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.num_modals_per_mode.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.VERSION.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.basis.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.from_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.integrals.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.num_body_terms.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.set_truncation.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_basis.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_hdf5.rst", "stubs/qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals.to_second_q_op.rst", "stubs/qiskit_nature.results.BOPESSamplerResult.rst", "stubs/qiskit_nature.results.BOPESSamplerResult.energies.rst", "stubs/qiskit_nature.results.BOPESSamplerResult.point_results.rst", "stubs/qiskit_nature.results.BOPESSamplerResult.points.rst", "stubs/qiskit_nature.results.BOPESSamplerResult.raw_results.rst", "stubs/qiskit_nature.results.EigenstateResult.rst", "stubs/qiskit_nature.results.EigenstateResult.aux_operator_eigenvalues.rst", "stubs/qiskit_nature.results.EigenstateResult.combine.rst", "stubs/qiskit_nature.results.EigenstateResult.eigenenergies.rst", "stubs/qiskit_nature.results.EigenstateResult.eigenstates.rst", "stubs/qiskit_nature.results.EigenstateResult.groundenergy.rst", "stubs/qiskit_nature.results.EigenstateResult.groundstate.rst", "stubs/qiskit_nature.results.EigenstateResult.raw_result.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.computed_dipole_moment.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.computed_energies.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.dipole_moment.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.dipole_moment_in_debye.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.electronic_dipole_moment.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.electronic_energies.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_dipole.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_dipoles.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_energies.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.extracted_transformer_energy.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.formatted.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.hartree_fock_energy.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.has_dipole.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.has_observables.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.magnetization.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.nuclear_dipole_moment.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.nuclear_repulsion_energy.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.num_particles.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.reverse_dipole_sign.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.spin.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.total_angular_momentum.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.total_dipole_moment.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.total_dipole_moment_in_debye.rst", "stubs/qiskit_nature.results.ElectronicStructureResult.total_energies.rst", "stubs/qiskit_nature.results.LatticeModelResult.rst", "stubs/qiskit_nature.results.LatticeModelResult.algorithm_result.rst", "stubs/qiskit_nature.results.LatticeModelResult.computed_lattice_energies.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.get_figure.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.get_result_binary_vector.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.protein_shape_decoder.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.protein_shape_file_gen.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.save_xyz_file.rst", "stubs/qiskit_nature.results.ProteinFoldingResult.turn_sequence.rst", "stubs/qiskit_nature.results.VibrationalStructureResult.rst", "stubs/qiskit_nature.results.VibrationalStructureResult.algorithm_result.rst", "stubs/qiskit_nature.results.VibrationalStructureResult.computed_vibrational_energies.rst", "stubs/qiskit_nature.results.VibrationalStructureResult.formatted.rst", "stubs/qiskit_nature.results.VibrationalStructureResult.num_occupied_modals_per_mode.rst", "stubs/qiskit_nature.results.utils.ProteinPlotter.rst", "stubs/qiskit_nature.results.utils.ProteinPlotter.get_figure.rst", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder.rst", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder.main_turns.rst", "stubs/qiskit_nature.results.utils.ProteinShapeDecoder.side_turns.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.COORDINATES.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.generate_main_positions.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.generate_side_positions.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.get_xyz_data.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.main_positions.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.save_xyz_file.rst", "stubs/qiskit_nature.results.utils.ProteinShapeFileGen.side_positions.rst", "stubs/qiskit_nature.runtime.VQEClient.rst", "stubs/qiskit_nature.runtime.VQEClient.ansatz.rst", "stubs/qiskit_nature.runtime.VQEClient.backend.rst", "stubs/qiskit_nature.runtime.VQEClient.callback.rst", "stubs/qiskit_nature.runtime.VQEClient.compute_minimum_eigenvalue.rst", "stubs/qiskit_nature.runtime.VQEClient.initial_point.rst", "stubs/qiskit_nature.runtime.VQEClient.measurement_error_mitigation.rst", "stubs/qiskit_nature.runtime.VQEClient.optimizer.rst", "stubs/qiskit_nature.runtime.VQEClient.program_id.rst", "stubs/qiskit_nature.runtime.VQEClient.provider.rst", "stubs/qiskit_nature.runtime.VQEClient.shots.rst", "stubs/qiskit_nature.runtime.VQEClient.store_intermediate.rst", "stubs/qiskit_nature.runtime.VQEClient.supports_aux_operators.rst", "stubs/qiskit_nature.runtime.VQEProgram.rst", "stubs/qiskit_nature.runtime.VQEProgram.compute_minimum_eigenvalue.rst", "stubs/qiskit_nature.runtime.VQEProgramResult.rst", "stubs/qiskit_nature.runtime.VQERuntimeResult.rst", "stubs/qiskit_nature.runtime.VQERuntimeResult.job_id.rst", "stubs/qiskit_nature.runtime.VQERuntimeResult.optimizer_history.rst", "stubs/qiskit_nature.transformers.second_quantization.BaseTransformer.rst", "stubs/qiskit_nature.transformers.second_quantization.BaseTransformer.transform.rst", "stubs/qiskit_nature.transformers.second_quantization.electronic.ActiveSpaceTransformer.rst", "stubs/qiskit_nature.transformers.second_quantization.electronic.ActiveSpaceTransformer.transform.rst", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer.rst", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer.Z.rst", "stubs/qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer.count_core_orbitals.rst", "stubs/qiskit_nature.utils.apply_matrix_to_slices.rst", "stubs/qiskit_nature.utils.givens_matrix.rst", "tutorials/01_electronic_structure.ipynb", "tutorials/02_vibrational_structure.ipynb", "tutorials/03_ground_state_solvers.ipynb", "tutorials/04_excited_states_solvers.ipynb", "tutorials/05_Sampling_potential_energy_surfaces.ipynb", "tutorials/06_calculating_thermodynamic_observables.ipynb", "tutorials/07_leveraging_qiskit_runtime.ipynb", "tutorials/08_property_framework.ipynb", "tutorials/09_Protein_Folding.ipynb", "tutorials/10_lattice_models.ipynb", "tutorials/11_quadratic_hamiltonian_and_slater_determinants.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Nature API Reference", "Algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.algorithms</span></code>)", "Initial Points (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.algorithms.initial_points</span></code>)", "Potential energy surface samplers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.algorithms.pes_samplers</span></code>)", "Circuit library (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.circuit</span></code>)", "Circuit Library (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.circuit.library</span></code>)", "Excitation generator utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.circuit.library.ansatzes.utils</span></code>)", "Operator to Qubit Operator Converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.converters</span></code>)", "SecondQuantizedOp Converters (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.converters.second_quantization</span></code>)", "Qiskit Nature Drivers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.drivers</span></code>)", "Second Quantization Drivers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.drivers.second_quantization</span></code>)", "Gaussian\u2122 16 Installation", "PSI4 Installation", "PyQuante Installation", "PYSCF Installation", "HDF5", "Logging", "Operator to Qubit Mappers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.mappers</span></code>)", "SecondQuantizedOp Mappers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.mappers.second_quantization</span></code>)", "Operators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.operators</span></code>)", "Second-Quantization Operators (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.operators.second_quantization</span></code>)", "Problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.problems</span></code>)", "Sampling Problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.problems.sampling</span></code>)", "Protein Folding Problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.problems.sampling.protein_folding</span></code>)", "Second-Quantization Problems (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.problems.second_quantization</span></code>)", "Properties (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties</span></code>)", "Second-Quantization Properties (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization</span></code>)", "Electronic Structure Properties (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.electronic</span></code>)", "Electronic Bases (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.electronic.bases</span></code>)", "Electronic Integrals (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.electronic.integrals</span></code>)", "Vibrational Structure Properties (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.vibrational</span></code>)", "Vibrational Bases (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.vibrational.bases</span></code>)", "Vibrational Integrals (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.properties.second_quantization.vibrational.integrals</span></code>)", "Results (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.results</span></code>)", "Utils (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.results.utils</span></code>)", "Qiskit Nature Runtime (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.runtime</span></code>)", "Settings", "Transformers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.transformers</span></code>)", "QMolecule Transformers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.transformers.second_quantization</span></code>)", "QMolecule Transformers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.transformers.second_quantization.electronic</span></code>)", "Utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_nature.utils</span></code>)", "\u306f\u3058\u3081\u306b", "Qiskit Nature overview", "Release Notes", "QiskitNatureError", "UnsupportMethodError", "AdaptVQE", "AdaptVQE.gradient", "AdaptVQE.returns_groundstate", "AdaptVQE.solve", "EigensolverFactory", "EigensolverFactory.get_solver", "ExcitedStatesEigensolver", "ExcitedStatesEigensolver.get_qubit_operators", "ExcitedStatesEigensolver.solve", "ExcitedStatesEigensolver.solver", "ExcitedStatesSolver", "ExcitedStatesSolver.get_qubit_operators", "ExcitedStatesSolver.solve", "ExcitedStatesSolver.solver", "GroundStateEigensolver", "GroundStateEigensolver.evaluate_operators", "GroundStateEigensolver.get_qubit_operators", "GroundStateEigensolver.returns_groundstate", "GroundStateEigensolver.solve", "GroundStateEigensolver.solver", "GroundStateSolver", "GroundStateSolver.evaluate_operators", "GroundStateSolver.get_qubit_operators", "GroundStateSolver.qubit_converter", "GroundStateSolver.returns_groundstate", "GroundStateSolver.solve", "GroundStateSolver.solver", "MinimumEigensolverFactory", "MinimumEigensolverFactory.get_solver", "MinimumEigensolverFactory.minimum_eigensolver", "MinimumEigensolverFactory.supports_aux_operators", "NumPyEigensolverFactory", "NumPyEigensolverFactory.filter_criterion", "NumPyEigensolverFactory.get_solver", "NumPyEigensolverFactory.k", "NumPyEigensolverFactory.use_default_filter_criterion", "NumPyMinimumEigensolverFactory", "NumPyMinimumEigensolverFactory.filter_criterion", "NumPyMinimumEigensolverFactory.get_solver", "NumPyMinimumEigensolverFactory.minimum_eigensolver", "NumPyMinimumEigensolverFactory.supports_aux_operators", "NumPyMinimumEigensolverFactory.use_default_filter_criterion", "QEOM", "QEOM.excitations", "QEOM.get_qubit_operators", "QEOM.solve", "QEOM.solver", "VQEUCCFactory", "VQEUCCFactory.ansatz", "VQEUCCFactory.callback", "VQEUCCFactory.expectation", "VQEUCCFactory.get_solver", "VQEUCCFactory.gradient", "VQEUCCFactory.include_custom", "VQEUCCFactory.initial_point", "VQEUCCFactory.initial_state", "VQEUCCFactory.minimum_eigensolver", "VQEUCCFactory.optimizer", "VQEUCCFactory.quantum_instance", "VQEUCCFactory.supports_aux_operators", "VQEUVCCFactory", "VQEUVCCFactory.ansatz", "VQEUVCCFactory.callback", "VQEUVCCFactory.expectation", "VQEUVCCFactory.get_solver", "VQEUVCCFactory.gradient", "VQEUVCCFactory.include_custom", "VQEUVCCFactory.initial_point", "VQEUVCCFactory.initial_state", "VQEUVCCFactory.minimum_eigensolver", "VQEUVCCFactory.optimizer", "VQEUVCCFactory.quantum_instance", "VQEUVCCFactory.supports_aux_operators", "HFInitialPoint", "HFInitialPoint.ansatz", "HFInitialPoint.compute", "HFInitialPoint.excitation_list", "HFInitialPoint.get_energy", "HFInitialPoint.grouped_property", "HFInitialPoint.to_numpy_array", "InitialPoint", "InitialPoint.ansatz", "InitialPoint.compute", "InitialPoint.grouped_property", "InitialPoint.to_numpy_array", "MP2InitialPoint", "MP2InitialPoint.ansatz", "MP2InitialPoint.compute", "MP2InitialPoint.excitation_list", "MP2InitialPoint.get_energy", "MP2InitialPoint.get_energy_correction", "MP2InitialPoint.get_energy_corrections", "MP2InitialPoint.grouped_property", "MP2InitialPoint.threshold", "MP2InitialPoint.to_numpy_array", "VSCFInitialPoint", "VSCFInitialPoint.ansatz", "VSCFInitialPoint.compute", "VSCFInitialPoint.excitation_list", "VSCFInitialPoint.grouped_property", "VSCFInitialPoint.to_numpy_array", "BOPESSampler", "BOPESSampler.evaluate_callable_aux_operators", "BOPESSampler.sample", "DifferentialExtrapolator", "DifferentialExtrapolator.extrapolate", "EnergySurface1DSpline", "EnergySurface1DSpline.eval", "EnergySurface1DSpline.fit", "EnergySurface1DSpline.get_equilibrium_geometry", "EnergySurface1DSpline.get_minimal_energy", "EnergySurface1DSpline.get_trust_region", "EnergySurfaceBase", "EnergySurfaceBase.eval", "EnergySurfaceBase.fit", "EnergySurfaceBase.get_equilibrium_geometry", "EnergySurfaceBase.get_minimal_energy", "EnergySurfaceBase.get_trust_region", "Extrapolator", "Extrapolator.extrapolate", "Extrapolator.factory", "HarmonicPotential", "HarmonicPotential.dissociation_energy", "HarmonicPotential.eval", "HarmonicPotential.fit", "HarmonicPotential.fit_function", "HarmonicPotential.fundamental_frequency", "HarmonicPotential.get_equilibrium_geometry", "HarmonicPotential.get_minimal_energy", "HarmonicPotential.process_fit_data", "HarmonicPotential.update_molecule", "HarmonicPotential.vibrational_energy_level", "HarmonicPotential.wave_number", "MorsePotential", "MorsePotential.dissociation_energy", "MorsePotential.eval", "MorsePotential.fit", "MorsePotential.fit_function", "MorsePotential.fundamental_frequency", "MorsePotential.get_equilibrium_geometry", "MorsePotential.get_maximum_trusted_level", "MorsePotential.get_minimal_energy", "MorsePotential.update_molecule", "MorsePotential.vibrational_energy_level", "MorsePotential.wave_number", "PCAExtrapolator", "PCAExtrapolator.extrapolate", "PolynomialExtrapolator", "PolynomialExtrapolator.extrapolate", "PotentialBase", "PotentialBase.dissociation_energy", "PotentialBase.get_num_modes", "PotentialBase.get_trust_region", "SieveExtrapolator", "SieveExtrapolator.extrapolate", "VibrationalStructureBase", "VibrationalStructureBase.get_maximum_trusted_level", "VibrationalStructureBase.get_num_modes", "VibrationalStructureBase.update_molecule", "VibrationalStructureBase.vibrational_energy_level", "WindowExtrapolator", "WindowExtrapolator.extrapolate", "WindowExtrapolator.extrapolator", "WindowExtrapolator.window", "BogoliubovTransform", "CHC", "CHC.excitations", "CHC.initial_state", "CHC.num_qubits", "FermionicGaussianState", "HartreeFock", "PUCCD", "PUCCD.generate_excitations", "PUCCD.include_singles", "SUCCD", "SUCCD.generate_excitations", "SUCCD.include_singles", "SlaterDeterminant", "UCC", "UCC.EXCITATION_TYPE", "UCC.excitation_list", "UCC.excitation_ops", "UCC.excitations", "UCC.num_particles", "UCC.num_spin_orbitals", "UCC.operators", "UCC.qubit_converter", "UCCSD", "UVCC", "UVCC.EXCITATION_TYPE", "UVCC.excitation_list", "UVCC.excitation_ops", "UVCC.excitations", "UVCC.num_modals", "UVCC.operators", "UVCC.qubit_converter", "UVCCSD", "VSCF", "generate_fermionic_excitations", "generate_vibration_excitations", "QubitConverter", "QubitConverter.convert", "QubitConverter.convert_match", "QubitConverter.convert_only", "QubitConverter.force_match", "QubitConverter.map", "QubitConverter.mapper", "QubitConverter.num_particles", "QubitConverter.two_qubit_reduction", "QubitConverter.z2symmetries", "QubitConverter.z2symmetry_reduction", "Molecule", "Molecule.VERSION", "Molecule.absolute_angle", "Molecule.absolute_bending", "Molecule.absolute_distance", "Molecule.absolute_stretching", "Molecule.atoms", "Molecule.charge", "Molecule.degrees_of_freedom", "Molecule.from_hdf5", "Molecule.geometry", "Molecule.masses", "Molecule.multiplicity", "Molecule.perturbations", "Molecule.relative_bending", "Molecule.relative_stretching", "Molecule.to_hdf5", "Molecule.units", "UnitsType", "UnitsType.ANGSTROM", "UnitsType.BOHR", "BaseDriver", "BaseDriver.run", "BasisType", "BasisType.B631G", "BasisType.B631GSS", "BasisType.BSTO3G", "BasisType.type_from_string", "ElectronicStructureDriver", "ElectronicStructureDriver.run", "ElectronicStructureDriverType", "ElectronicStructureDriverType.AUTO", "ElectronicStructureDriverType.GAUSSIAN", "ElectronicStructureDriverType.PSI4", "ElectronicStructureDriverType.PYQUANTE", "ElectronicStructureDriverType.PYSCF", "ElectronicStructureDriverType.driver_class_from_type", "ElectronicStructureMoleculeDriver", "ElectronicStructureMoleculeDriver.basis", "ElectronicStructureMoleculeDriver.driver_kwargs", "ElectronicStructureMoleculeDriver.driver_type", "ElectronicStructureMoleculeDriver.method", "ElectronicStructureMoleculeDriver.molecule", "ElectronicStructureMoleculeDriver.run", "FCIDumpDriver", "FCIDumpDriver.dump", "FCIDumpDriver.run", "GaussianDriver", "GaussianDriver.check_method_supported", "GaussianDriver.from_molecule", "GaussianDriver.run", "GaussianDriver.to_driver_basis", "GaussianForcesDriver", "GaussianForcesDriver.from_molecule", "GaussianForcesDriver.run", "GaussianForcesDriver.to_driver_basis", "GaussianLogDriver", "GaussianLogDriver.run", "GaussianLogResult", "GaussianLogResult.a_to_h_numbering", "GaussianLogResult.cubic_force_constants", "GaussianLogResult.get_vibrational_energy", "GaussianLogResult.get_watson_hamiltonian", "GaussianLogResult.log", "GaussianLogResult.quadratic_force_constants", "GaussianLogResult.quartic_force_constants", "HDF5Driver", "HDF5Driver.convert", "HDF5Driver.run", "HDF5Driver.work_path", "InitialGuess", "InitialGuess.ATOM", "InitialGuess.HCORE", "InitialGuess.MINAO", "InitialGuess.ONE_E", "MethodType", "MethodType.RHF", "MethodType.RKS", "MethodType.ROHF", "MethodType.ROKS", "MethodType.UHF", "MethodType.UKS", "PSI4Driver", "PSI4Driver.check_method_supported", "PSI4Driver.from_molecule", "PSI4Driver.run", "PSI4Driver.to_driver_basis", "PyQuanteDriver", "PyQuanteDriver.atoms", "PyQuanteDriver.basis", "PyQuanteDriver.charge", "PyQuanteDriver.check_method_supported", "PyQuanteDriver.from_molecule", "PyQuanteDriver.maxiters", "PyQuanteDriver.method", "PyQuanteDriver.multiplicity", "PyQuanteDriver.run", "PyQuanteDriver.run_pyquante", "PyQuanteDriver.to_driver_basis", "PyQuanteDriver.tol", "PyQuanteDriver.units", "PySCFDriver", "PySCFDriver.atom", "PySCFDriver.basis", "PySCFDriver.charge", "PySCFDriver.check_method_supported", "PySCFDriver.chkfile", "PySCFDriver.conv_tol", "PySCFDriver.from_molecule", "PySCFDriver.init_guess", "PySCFDriver.max_cycle", "PySCFDriver.max_memory", "PySCFDriver.method", "PySCFDriver.run", "PySCFDriver.run_pyscf", "PySCFDriver.spin", "PySCFDriver.to_driver_basis", "PySCFDriver.unit", "PySCFDriver.xc_functional", "PySCFDriver.xcf_library", "VibrationalStructureDriver", "VibrationalStructureDriver.run", "VibrationalStructureDriverType", "VibrationalStructureDriverType.AUTO", "VibrationalStructureDriverType.GAUSSIAN_FORCES", "VibrationalStructureDriverType.driver_class_from_type", "VibrationalStructureMoleculeDriver", "VibrationalStructureMoleculeDriver.basis", "VibrationalStructureMoleculeDriver.driver_kwargs", "VibrationalStructureMoleculeDriver.driver_type", "VibrationalStructureMoleculeDriver.molecule", "VibrationalStructureMoleculeDriver.run", "BravyiKitaevMapper", "BravyiKitaevMapper.map", "BravyiKitaevSuperFastMapper", "BravyiKitaevSuperFastMapper.map", "DirectMapper", "DirectMapper.map", "FermionicMapper", "FermionicMapper.map", "JordanWignerMapper", "JordanWignerMapper.map", "LinearMapper", "LinearMapper.map", "LogarithmicMapper", "LogarithmicMapper.map", "ParityMapper", "ParityMapper.map", "QubitMapper", "QubitMapper.allows_two_qubit_reduction", "QubitMapper.map", "QubitMapper.mode_based_mapping", "SpinMapper", "SpinMapper.map", "VibrationalMapper", "VibrationalMapper.map", "FermionicOp", "FermionicOp.__len__", "FermionicOp.add", "FermionicOp.adjoint", "FermionicOp.compose", "FermionicOp.display_format", "FermionicOp.mul", "FermionicOp.normal_ordered", "FermionicOp.one", "FermionicOp.reduce", "FermionicOp.register_length", "FermionicOp.set_truncation", "FermionicOp.simplify", "FermionicOp.terms", "FermionicOp.to_list", "FermionicOp.to_matrix", "FermionicOp.to_normal_order", "FermionicOp.zero", "QuadraticHamiltonian", "QuadraticHamiltonian.antisymmetric_part", "QuadraticHamiltonian.conserves_particle_number", "QuadraticHamiltonian.constant", "QuadraticHamiltonian.diagonalizing_bogoliubov_transform", "QuadraticHamiltonian.hermitian_part", "QuadraticHamiltonian.majorana_form", "QuadraticHamiltonian.num_modes", "QuadraticHamiltonian.to_fermionic_op", "SecondQuantizedOp", "SecondQuantizedOp.is_hermitian", "SecondQuantizedOp.register_length", "SecondQuantizedOp.simplify", "SecondQuantizedOp.to_list", "SpinOp", "SpinOp.__len__", "SpinOp.add", "SpinOp.adjoint", "SpinOp.compose", "SpinOp.mul", "SpinOp.reduce", "SpinOp.register_length", "SpinOp.simplify", "SpinOp.spin", "SpinOp.to_list", "SpinOp.to_matrix", "SpinOp.x", "SpinOp.y", "SpinOp.z", "VibrationalOp", "VibrationalOp.__len__", "VibrationalOp.add", "VibrationalOp.adjoint", "VibrationalOp.compose", "VibrationalOp.mul", "VibrationalOp.num_modals", "VibrationalOp.num_modes", "VibrationalOp.one", "VibrationalOp.reduce", "VibrationalOp.register_length", "VibrationalOp.simplify", "VibrationalOp.to_list", "VibrationalOp.zero", "Interaction", "Interaction.calculate_energy_matrix", "InvalidResidueException", "InvalidSideChainException", "InvalidSizeException", "MainChain", "MainChain.main_chain_residue_sequence", "MixedInteraction", "MixedInteraction.calculate_energy_matrix", "MiyazawaJerniganInteraction", "MiyazawaJerniganInteraction.calculate_energy_matrix", "PenaltyParameters", "PenaltyParameters.penalty_1", "PenaltyParameters.penalty_back", "PenaltyParameters.penalty_chiral", "Peptide", "Peptide.get_main_chain", "Peptide.get_side_chain_hot_vector", "Peptide.get_side_chains", "ProteinFoldingProblem", "ProteinFoldingProblem.interpret", "ProteinFoldingProblem.peptide", "ProteinFoldingProblem.qubit_op", "ProteinFoldingProblem.unused_qubits", "RandomInteraction", "RandomInteraction.calculate_energy_matrix", "SideChain", "BaseProblem", "BaseProblem.get_default_filter_criterion", "BaseProblem.grouped_property", "BaseProblem.grouped_property_transformed", "BaseProblem.hopping_qeom_ops", "BaseProblem.interpret", "BaseProblem.main_property_name", "BaseProblem.molecule_data", "BaseProblem.molecule_data_transformed", "BaseProblem.num_particles", "BaseProblem.second_q_ops", "BaseProblem.symmetry_sector_locator", "ElectronicStructureProblem", "ElectronicStructureProblem.get_default_filter_criterion", "ElectronicStructureProblem.hopping_qeom_ops", "ElectronicStructureProblem.interpret", "ElectronicStructureProblem.num_particles", "ElectronicStructureProblem.num_spin_orbitals", "ElectronicStructureProblem.second_q_ops", "ElectronicStructureProblem.symmetry_sector_locator", "LatticeModelProblem", "LatticeModelProblem.get_default_filter_criterion", "LatticeModelProblem.hopping_qeom_ops", "LatticeModelProblem.interpret", "LatticeModelProblem.second_q_ops", "VibrationalStructureProblem", "VibrationalStructureProblem.get_default_filter_criterion", "VibrationalStructureProblem.hopping_qeom_ops", "VibrationalStructureProblem.interpret", "VibrationalStructureProblem.second_q_ops", "lattice", "FermiHubbardModel", "FermiHubbardModel.from_parameters", "FermiHubbardModel.hopping_matrix", "FermiHubbardModel.second_q_ops", "FermiHubbardModel.uniform_parameters", "HyperCubicLattice", "HyperCubicLattice.boundary_condition", "HyperCubicLattice.dim", "HyperCubicLattice.draw_without_boundary", "HyperCubicLattice.edge_parameter", "HyperCubicLattice.onsite_parameter", "HyperCubicLattice.size", "IsingModel", "IsingModel.coupling_matrix", "IsingModel.from_parameters", "IsingModel.second_q_ops", "IsingModel.uniform_parameters", "Lattice", "Lattice.copy", "Lattice.draw", "Lattice.from_nodes_and_edges", "Lattice.graph", "Lattice.node_indexes", "Lattice.num_nodes", "Lattice.to_adjacency_matrix", "Lattice.weighted_edge_list", "LineLattice", "LineLattice.num_nodes", "SquareLattice", "SquareLattice.cols", "SquareLattice.rows", "TriangularLattice", "TriangularLattice.draw_without_boundary", "GroupedProperty", "GroupedProperty.add_property", "GroupedProperty.from_hdf5", "GroupedProperty.get_property", "GroupedProperty.interpret", "GroupedProperty.to_hdf5", "Property", "Property.VERSION", "Property.log", "Property.name", "Property.to_hdf5", "GroupedSecondQuantizedProperty", "GroupedSecondQuantizedProperty.second_q_ops", "SecondQuantizedProperty", "SecondQuantizedProperty.from_legacy_driver_result", "SecondQuantizedProperty.second_q_ops", "AngularMomentum", "AngularMomentum.ABSOLUTE_TOLERANCE", "AngularMomentum.RELATIVE_TOLERANCE", "AngularMomentum.absolute_tolerance", "AngularMomentum.from_hdf5", "AngularMomentum.from_legacy_driver_result", "AngularMomentum.interpret", "AngularMomentum.num_spin_orbitals", "AngularMomentum.relative_tolerance", "AngularMomentum.second_q_ops", "AngularMomentum.spin", "AngularMomentum.to_hdf5", "ElectronicDipoleMoment", "ElectronicDipoleMoment.from_hdf5", "ElectronicDipoleMoment.from_legacy_driver_result", "ElectronicDipoleMoment.interpret", "ElectronicDipoleMoment.nuclear_dipole_moment", "ElectronicDipoleMoment.reverse_dipole_sign", "ElectronicDipoleMoment.second_q_ops", "ElectronicDipoleMoment.to_hdf5", "ElectronicEnergy", "ElectronicEnergy.from_hdf5", "ElectronicEnergy.from_legacy_driver_result", "ElectronicEnergy.from_raw_integrals", "ElectronicEnergy.integral_operator", "ElectronicEnergy.interpret", "ElectronicEnergy.kinetic", "ElectronicEnergy.nuclear_repulsion_energy", "ElectronicEnergy.orbital_energies", "ElectronicEnergy.overlap", "ElectronicEnergy.reference_energy", "ElectronicEnergy.to_hdf5", "ElectronicStructureDriverResult", "ElectronicStructureDriverResult.from_hdf5", "ElectronicStructureDriverResult.from_legacy_driver_result", "ElectronicStructureDriverResult.second_q_ops", "ElectronicStructureDriverResult.to_hdf5", "Magnetization", "Magnetization.from_hdf5", "Magnetization.from_legacy_driver_result", "Magnetization.interpret", "Magnetization.num_spin_orbitals", "Magnetization.second_q_ops", "Magnetization.to_hdf5", "ParticleNumber", "ParticleNumber.ABSOLUTE_TOLERANCE", "ParticleNumber.RELATIVE_TOLERANCE", "ParticleNumber.absolute_tolerance", "ParticleNumber.from_hdf5", "ParticleNumber.from_legacy_driver_result", "ParticleNumber.interpret", "ParticleNumber.num_alpha", "ParticleNumber.num_beta", "ParticleNumber.num_particles", "ParticleNumber.num_spin_orbitals", "ParticleNumber.occupation_alpha", "ParticleNumber.occupation_beta", "ParticleNumber.relative_tolerance", "ParticleNumber.second_q_ops", "ParticleNumber.to_hdf5", "ElectronicBasis", "ElectronicBasis.AO", "ElectronicBasis.MO", "ElectronicBasis.SO", "ElectronicBasisTransform", "ElectronicBasisTransform.coeff_alpha", "ElectronicBasisTransform.coeff_beta", "ElectronicBasisTransform.from_hdf5", "ElectronicBasisTransform.is_alpha_equal_beta", "ElectronicBasisTransform.to_hdf5", "ElectronicIntegrals", "ElectronicIntegrals.INTEGRAL_TRUNCATION_LEVEL", "ElectronicIntegrals.VERSION", "ElectronicIntegrals.add", "ElectronicIntegrals.basis", "ElectronicIntegrals.compose", "ElectronicIntegrals.from_hdf5", "ElectronicIntegrals.get_matrix", "ElectronicIntegrals.num_body_terms", "ElectronicIntegrals.set_truncation", "ElectronicIntegrals.threshold", "ElectronicIntegrals.to_hdf5", "ElectronicIntegrals.to_second_q_op", "ElectronicIntegrals.to_spin", "ElectronicIntegrals.transform_basis", "IntegralProperty", "IntegralProperty.add_electronic_integral", "IntegralProperty.from_hdf5", "IntegralProperty.from_legacy_driver_result", "IntegralProperty.get_electronic_integral", "IntegralProperty.integral_operator", "IntegralProperty.interpret", "IntegralProperty.second_q_ops", "IntegralProperty.to_hdf5", "IntegralProperty.transform_basis", "OneBodyElectronicIntegrals", "OneBodyElectronicIntegrals.compose", "OneBodyElectronicIntegrals.to_spin", "OneBodyElectronicIntegrals.transform_basis", "TwoBodyElectronicIntegrals", "TwoBodyElectronicIntegrals.EINSUM_AO_TO_MO", "TwoBodyElectronicIntegrals.EINSUM_CHEM_TO_PHYS", "TwoBodyElectronicIntegrals.compose", "TwoBodyElectronicIntegrals.get_matrix", "TwoBodyElectronicIntegrals.to_spin", "TwoBodyElectronicIntegrals.transform_basis", "OccupiedModals", "OccupiedModals.from_hdf5", "OccupiedModals.from_legacy_driver_result", "OccupiedModals.interpret", "OccupiedModals.second_q_ops", "VibrationalEnergy", "VibrationalEnergy.add_vibrational_integral", "VibrationalEnergy.from_hdf5", "VibrationalEnergy.from_legacy_driver_result", "VibrationalEnergy.get_vibrational_integral", "VibrationalEnergy.interpret", "VibrationalEnergy.second_q_ops", "VibrationalEnergy.to_hdf5", "VibrationalEnergy.truncation_order", "VibrationalStructureDriverResult", "VibrationalStructureDriverResult.from_hdf5", "VibrationalStructureDriverResult.from_legacy_driver_result", "VibrationalStructureDriverResult.num_modes", "VibrationalStructureDriverResult.second_q_ops", "VibrationalStructureDriverResult.to_hdf5", "HarmonicBasis", "HarmonicBasis.eval_integral", "VibrationalBasis", "VibrationalBasis.VERSION", "VibrationalBasis.eval_integral", "VibrationalBasis.from_hdf5", "VibrationalBasis.num_modals_per_mode", "VibrationalBasis.to_hdf5", "VibrationalIntegrals", "VibrationalIntegrals.VERSION", "VibrationalIntegrals.basis", "VibrationalIntegrals.from_hdf5", "VibrationalIntegrals.integrals", "VibrationalIntegrals.num_body_terms", "VibrationalIntegrals.set_truncation", "VibrationalIntegrals.to_basis", "VibrationalIntegrals.to_hdf5", "VibrationalIntegrals.to_second_q_op", "BOPESSamplerResult", "BOPESSamplerResult.energies", "BOPESSamplerResult.point_results", "BOPESSamplerResult.points", "BOPESSamplerResult.raw_results", "EigenstateResult", "EigenstateResult.aux_operator_eigenvalues", "EigenstateResult.combine", "EigenstateResult.eigenenergies", "EigenstateResult.eigenstates", "EigenstateResult.groundenergy", "EigenstateResult.groundstate", "EigenstateResult.raw_result", "ElectronicStructureResult", "ElectronicStructureResult.computed_dipole_moment", "ElectronicStructureResult.computed_energies", "ElectronicStructureResult.dipole_moment", "ElectronicStructureResult.dipole_moment_in_debye", "ElectronicStructureResult.electronic_dipole_moment", "ElectronicStructureResult.electronic_energies", "ElectronicStructureResult.extracted_transformer_dipole", "ElectronicStructureResult.extracted_transformer_dipoles", "ElectronicStructureResult.extracted_transformer_energies", "ElectronicStructureResult.extracted_transformer_energy", "ElectronicStructureResult.formatted", "ElectronicStructureResult.hartree_fock_energy", "ElectronicStructureResult.has_dipole", "ElectronicStructureResult.has_observables", "ElectronicStructureResult.magnetization", "ElectronicStructureResult.nuclear_dipole_moment", "ElectronicStructureResult.nuclear_repulsion_energy", "ElectronicStructureResult.num_particles", "ElectronicStructureResult.reverse_dipole_sign", "ElectronicStructureResult.spin", "ElectronicStructureResult.total_angular_momentum", "ElectronicStructureResult.total_dipole_moment", "ElectronicStructureResult.total_dipole_moment_in_debye", "ElectronicStructureResult.total_energies", "LatticeModelResult", "LatticeModelResult.algorithm_result", "LatticeModelResult.computed_lattice_energies", "ProteinFoldingResult", "ProteinFoldingResult.get_figure", "ProteinFoldingResult.get_result_binary_vector", "ProteinFoldingResult.protein_shape_decoder", "ProteinFoldingResult.protein_shape_file_gen", "ProteinFoldingResult.save_xyz_file", "ProteinFoldingResult.turn_sequence", "VibrationalStructureResult", "VibrationalStructureResult.algorithm_result", "VibrationalStructureResult.computed_vibrational_energies", "VibrationalStructureResult.formatted", "VibrationalStructureResult.num_occupied_modals_per_mode", "ProteinPlotter", "ProteinPlotter.get_figure", "ProteinShapeDecoder", "ProteinShapeDecoder.main_turns", "ProteinShapeDecoder.side_turns", "ProteinShapeFileGen", "ProteinShapeFileGen.COORDINATES", "ProteinShapeFileGen.generate_main_positions", "ProteinShapeFileGen.generate_side_positions", "ProteinShapeFileGen.get_xyz_data", "ProteinShapeFileGen.main_positions", "ProteinShapeFileGen.save_xyz_file", "ProteinShapeFileGen.side_positions", "VQEClient", "VQEClient.ansatz", "VQEClient.backend", "VQEClient.callback", "VQEClient.compute_minimum_eigenvalue", "VQEClient.initial_point", "VQEClient.measurement_error_mitigation", "VQEClient.optimizer", "VQEClient.program_id", "VQEClient.provider", "VQEClient.shots", "VQEClient.store_intermediate", "VQEClient.supports_aux_operators", "VQEProgram", "VQEProgram.compute_minimum_eigenvalue", "VQEProgramResult", "VQERuntimeResult", "VQERuntimeResult.job_id", "VQERuntimeResult.optimizer_history", "BaseTransformer", "BaseTransformer.transform", "ActiveSpaceTransformer", "ActiveSpaceTransformer.transform", "FreezeCoreTransformer", "FreezeCoreTransformer.Z", "FreezeCoreTransformer.count_core_orbitals", "apply_matrix_to_slices", "givens_matrix", "\u96fb\u5b50\u69cb\u9020", "\u632f\u52d5\u69cb\u9020", "\u57fa\u5e95\u72b6\u614b\u30bd\u30eb\u30d0\u30fc", "\u52b1\u8d77\u72b6\u614b\u30bd\u30eb\u30d0\u30fc", "\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u30fb\u30a8\u30cd\u30eb\u30ae\u30fc\u9762\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0", "\u91cf\u5b50\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306b\u3088\u308b\u71b1\u529b\u5b66\u7684\u89b3\u6e2c\u91cf\u306e\u8a08\u7b97", "Qiskit Runtime\u306e\u6d3b\u7528", "\u30d7\u30ed\u30d1\u30c6\u30a3\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af", "\u30bf\u30f3\u30d1\u30af\u8cea\u306e\u6298\u308a\u305f\u305f\u307f", "\u683c\u5b50\u30e2\u30c7\u30eb", "\u4e8c\u6b21\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3\u3068\u30b9\u30ec\u30fc\u30bf\u30fc\u884c\u5217\u5f0f", "Qiskit Nature\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"], "terms": {"provides": [0, 13, 26, 27, 30, 119, 141, 186, 202, 313, 571, 578, 593, 601, 651], "function": [0, 3, 15, 23, 153, 159, 164, 169, 181, 193, 194, 215, 224, 234, 302, 505, 515, 523, 528, 768, 791, 804, 806, 807, 828], "to": [0, 1, 2, 3, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 23, 26, 27, 30, 33, 36, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 54, 57, 58, 60, 61, 64, 66, 67, 68, 71, 73, 74, 77, 79, 81, 82, 84, 87, 88, 89, 90, 91, 93, 94, 97, 101, 106, 107, 110, 119, 120, 121, 123, 124, 125, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 173, 174, 175, 179, 180, 181, 182, 185, 187, 191, 192, 193, 194, 195, 199, 200, 201, 206, 207, 210, 211, 212, 215, 217, 219, 220, 222, 223, 224, 231, 233, 234, 240, 242, 244, 246, 247, 248, 249, 250, 251, 253, 257, 259, 260, 261, 262, 266, 271, 272, 273, 284, 293, 294, 301, 302, 304, 306, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 323, 339, 341, 343, 349, 354, 355, 358, 363, 365, 371, 373, 382, 383, 390, 392, 393, 394, 395, 396, 398, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 416, 420, 422, 424, 425, 427, 428, 429, 431, 435, 439, 443, 444, 445, 448, 453, 455, 456, 457, 458, 459, 460, 463, 468, 471, 472, 473, 476, 477, 478, 481, 485, 486, 487, 488, 489, 493, 495, 496, 499, 500, 501, 502, 505, 512, 513, 514, 515, 520, 521, 522, 523, 524, 526, 527, 528, 531, 535, 537, 540, 551, 556, 558, 560, 563, 564, 566, 567, 568, 569, 570, 571, 572, 575, 578, 579, 585, 586, 587, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 612, 614, 615, 617, 619, 620, 621, 624, 625, 629, 630, 631, 640, 641, 645, 648, 650, 651, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 671, 672, 674, 675, 676, 678, 679, 680, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 697, 699, 702, 703, 706, 707, 709, 712, 714, 715, 718, 721, 722, 723, 724, 732, 757, 766, 768, 771, 778, 780, 789, 790, 791, 795, 797, 802, 804, 805, 806, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "experiment": 0, "with": [0, 1, 2, 3, 5, 10, 11, 12, 15, 16, 23, 25, 27, 36, 42, 44, 45, 49, 54, 60, 64, 66, 74, 79, 84, 93, 97, 106, 110, 119, 120, 121, 131, 132, 133, 141, 142, 149, 150, 191, 193, 194, 211, 215, 220, 223, 224, 234, 242, 243, 244, 245, 246, 248, 257, 259, 260, 261, 262, 271, 272, 309, 313, 317, 321, 322, 323, 358, 401, 413, 420, 425, 428, 429, 431, 435, 443, 445, 453, 456, 460, 471, 476, 477, 478, 489, 494, 511, 512, 519, 520, 531, 536, 537, 540, 548, 564, 577, 580, 616, 625, 651, 665, 676, 677, 679, 680, 683, 686, 705, 715, 732, 766, 767, 768, 778, 779, 785, 786, 787, 788, 790, 795, 797, 805, 808, 812, 822, 824, 826, 827, 828, 829], "quantum": [0, 1, 12, 23, 26, 27, 30, 42, 104, 117, 164, 391, 401, 601, 692, 821, 822, 823, 824, 825, 827], "computing": [0, 3, 42, 164, 803, 812], "for": [0, 1, 3, 5, 10, 12, 13, 14, 15, 16, 19, 23, 27, 30, 33, 34, 36, 38, 39, 41, 42, 44, 46, 49, 52, 54, 58, 61, 64, 67, 71, 91, 93, 99, 106, 112, 119, 121, 126, 131, 133, 137, 139, 141, 143, 147, 148, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 257, 266, 267, 273, 278, 285, 294, 301, 304, 313, 315, 323, 332, 344, 358, 366, 368, 377, 401, 403, 405, 406, 413, 417, 420, 425, 427, 429, 431, 442, 443, 445, 449, 452, 453, 455, 460, 464, 471, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 489, 491, 496, 497, 499, 500, 501, 502, 505, 512, 514, 515, 520, 522, 523, 527, 528, 530, 537, 538, 540, 541, 542, 547, 549, 551, 559, 560, 563, 564, 567, 570, 571, 575, 579, 581, 585, 586, 592, 593, 594, 595, 600, 601, 602, 603, 612, 614, 617, 619, 620, 624, 625, 629, 630, 640, 645, 648, 650, 651, 657, 658, 662, 668, 671, 674, 684, 688, 689, 692, 694, 695, 699, 702, 706, 707, 708, 709, 711, 712, 714, 715, 718, 723, 727, 729, 766, 767, 768, 778, 779, 783, 789, 790, 791, 795, 803, 804, 805, 810, 812, 821, 823, 824, 825, 826, 827, 828, 829], "natural": [0, 1, 41, 42, 825], "science": [0, 1, 41, 42, 211, 234, 243, 707], "problems": [0, 1, 27, 30, 41, 42, 43, 489], "such": [0, 1, 3, 5, 8, 10, 11, 19, 33, 42, 43, 46, 210, 215, 217, 220, 224, 233, 234, 244, 246, 248, 304, 309, 313, 316, 317, 321, 322, 395, 405, 409, 411, 505, 515, 523, 528, 565, 571, 601, 671, 752, 766, 768, 806, 807], "as": [0, 1, 3, 5, 8, 10, 11, 13, 15, 16, 19, 33, 38, 39, 42, 46, 49, 54, 64, 93, 106, 125, 131, 140, 146, 149, 150, 151, 164, 200, 211, 215, 216, 217, 218, 220, 221, 224, 233, 234, 242, 243, 244, 245, 246, 248, 249, 253, 255, 257, 279, 286, 300, 304, 307, 309, 311, 313, 315, 316, 318, 319, 324, 342, 358, 378, 388, 413, 428, 460, 519, 530, 531, 537, 549, 556, 560, 563, 565, 571, 601, 604, 605, 625, 645, 651, 666, 671, 676, 680, 707, 715, 749, 752, 768, 776, 789, 791, 795, 804, 805, 806, 807, 812, 814, 822, 823, 824, 825, 826, 827, 828, 829], "in": [0, 1, 10, 11, 12, 13, 14, 15, 23, 27, 30, 33, 35, 38, 39, 42, 43, 49, 52, 57, 68, 70, 88, 89, 90, 119, 121, 131, 133, 141, 143, 148, 150, 151, 153, 157, 159, 163, 164, 169, 172, 177, 178, 181, 184, 189, 190, 191, 192, 193, 198, 210, 211, 212, 215, 216, 217, 218, 221, 223, 224, 231, 240, 243, 244, 245, 246, 248, 249, 251, 257, 259, 260, 266, 271, 273, 293, 294, 301, 302, 304, 309, 310, 313, 317, 320, 321, 322, 344, 354, 358, 371, 382, 383, 390, 392, 393, 394, 395, 396, 398, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 420, 427, 428, 431, 435, 440, 444, 445, 457, 458, 459, 460, 468, 472, 473, 476, 477, 478, 481, 483, 485, 489, 491, 492, 493, 494, 497, 500, 502, 505, 506, 514, 515, 516, 519, 522, 523, 524, 527, 528, 529, 530, 535, 537, 540, 541, 547, 551, 560, 563, 564, 565, 567, 569, 570, 571, 572, 575, 577, 581, 585, 587, 592, 593, 594, 596, 598, 600, 601, 602, 604, 606, 612, 613, 614, 616, 617, 618, 619, 621, 624, 625, 629, 631, 636, 637, 640, 645, 648, 650, 651, 657, 658, 662, 664, 665, 666, 667, 668, 671, 672, 674, 676, 678, 679, 680, 684, 685, 686, 688, 690, 692, 693, 694, 697, 699, 701, 702, 705, 706, 709, 712, 714, 715, 718, 722, 723, 732, 742, 751, 754, 761, 766, 767, 768, 771, 779, 780, 783, 788, 789, 790, 791, 795, 804, 805, 812, 814, 816, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "chemistry": [0, 1, 10, 11, 12, 13, 14, 42, 176, 188, 204, 211, 795, 805, 827], "and": [0, 1, 6, 8, 10, 12, 13, 14, 15, 16, 18, 19, 23, 26, 33, 35, 38, 39, 41, 42, 44, 45, 46, 49, 52, 53, 54, 57, 62, 68, 77, 90, 91, 93, 95, 106, 121, 131, 133, 138, 139, 147, 149, 150, 151, 154, 160, 164, 165, 167, 170, 179, 182, 191, 192, 194, 199, 200, 201, 204, 207, 210, 211, 215, 216, 217, 218, 220, 221, 224, 227, 233, 234, 237, 244, 246, 247, 249, 257, 259, 260, 271, 293, 294, 304, 309, 310, 313, 315, 317, 321, 322, 344, 358, 391, 401, 413, 415, 417, 419, 425, 427, 431, 435, 437, 440, 443, 445, 447, 449, 450, 453, 460, 462, 464, 465, 471, 472, 476, 477, 478, 483, 489, 494, 505, 513, 515, 519, 520, 523, 528, 530, 531, 533, 536, 537, 546, 548, 552, 560, 563, 565, 567, 571, 572, 593, 601, 604, 625, 649, 666, 667, 670, 676, 677, 680, 683, 684, 693, 715, 722, 766, 768, 769, 771, 780, 783, 787, 789, 791, 795, 797, 804, 805, 806, 807, 812, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "physics": [0, 301, 819], "example": [0, 11, 12, 15, 148, 157, 163, 243, 246, 344, 358, 413, 420, 429, 445, 493, 537, 768, 826], "the": [0, 1, 3, 5, 8, 10, 12, 13, 14, 15, 16, 18, 23, 26, 27, 30, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 105, 106, 107, 108, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 259, 260, 261, 262, 263, 265, 266, 271, 272, 273, 274, 279, 284, 286, 293, 294, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 339, 342, 343, 344, 345, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 730, 732, 737, 738, 745, 746, 747, 748, 763, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "ground": [0, 13, 38, 39, 42, 46, 48, 49, 54, 60, 63, 64, 66, 70, 71, 74, 79, 84, 88, 97, 110, 206, 246, 520, 735, 736, 740, 744, 762, 765, 775, 795, 805, 821, 822, 826, 828], "state": [0, 13, 38, 39, 46, 48, 49, 60, 61, 63, 64, 66, 67, 70, 71, 74, 79, 84, 88, 93, 97, 101, 106, 110, 114, 119, 141, 147, 149, 204, 211, 213, 215, 216, 223, 224, 243, 246, 249, 520, 736, 740, 744, 762, 765, 775, 795, 803, 805, 821, 822, 826, 828, 829], "energy": [0, 13, 23, 38, 39, 46, 48, 63, 70, 71, 121, 123, 131, 133, 135, 136, 137, 138, 139, 147, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 173, 174, 177, 179, 180, 181, 185, 186, 187, 189, 196, 201, 202, 205, 302, 475, 481, 482, 484, 489, 499, 601, 608, 611, 698, 735, 740, 744, 750, 755, 762, 765, 775, 812, 814, 821, 822, 823, 825, 826, 827, 828, 829], "or": [0, 1, 5, 10, 11, 13, 16, 23, 25, 36, 48, 49, 52, 55, 60, 61, 63, 65, 67, 70, 77, 88, 93, 106, 131, 133, 138, 147, 152, 164, 199, 200, 210, 217, 220, 224, 231, 233, 240, 244, 247, 248, 250, 251, 309, 310, 313, 315, 318, 319, 323, 344, 353, 358, 370, 401, 408, 413, 427, 428, 431, 435, 445, 479, 489, 505, 511, 515, 519, 523, 525, 528, 530, 533, 537, 546, 549, 556, 563, 568, 577, 580, 590, 598, 599, 616, 623, 639, 651, 656, 670, 673, 676, 680, 683, 691, 696, 698, 705, 707, 708, 711, 751, 783, 791, 795, 797, 802, 804, 805, 810, 811, 813, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "excited": [0, 42, 51, 52, 54, 56, 58, 88, 91, 460, 822, 823], "energies": [0, 1, 58, 91, 131, 138, 170, 179, 182, 435, 475, 481, 482, 484, 499, 609, 725, 726, 733, 747, 748, 822, 823, 824, 829], "of": [0, 1, 3, 5, 10, 11, 12, 13, 15, 16, 23, 25, 27, 30, 35, 38, 39, 42, 43, 46, 49, 51, 52, 58, 61, 67, 71, 74, 77, 79, 80, 84, 88, 93, 94, 97, 99, 100, 101, 106, 107, 110, 112, 113, 114, 119, 122, 130, 131, 134, 141, 144, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 169, 170, 171, 181, 182, 183, 186, 191, 192, 193, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 223, 224, 227, 229, 230, 233, 234, 237, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 257, 259, 260, 262, 263, 265, 266, 271, 272, 273, 293, 294, 302, 303, 309, 310, 313, 315, 317, 320, 321, 322, 344, 350, 354, 358, 367, 371, 382, 383, 391, 393, 395, 401, 405, 408, 409, 411, 413, 415, 416, 419, 420, 421, 424, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 442, 445, 447, 448, 450, 452, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 478, 479, 481, 482, 483, 484, 489, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 539, 543, 546, 547, 550, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 567, 568, 570, 571, 575, 576, 577, 578, 579, 580, 581, 585, 586, 588, 590, 592, 593, 594, 595, 598, 599, 600, 601, 602, 603, 604, 612, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 629, 630, 632, 633, 634, 636, 637, 639, 640, 641, 645, 648, 650, 651, 654, 656, 657, 658, 660, 662, 666, 667, 668, 670, 671, 673, 674, 676, 677, 678, 680, 683, 684, 688, 689, 691, 692, 693, 694, 695, 696, 698, 699, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 718, 721, 722, 723, 725, 726, 728, 739, 740, 744, 745, 748, 749, 756, 760, 761, 765, 766, 767, 768, 769, 770, 771, 775, 776, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 795, 797, 801, 802, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829], "molecules": [0, 167, 176, 179, 188], "top": 0, "-level": 0, "classes": [0, 1, 2, 8, 15, 16, 18, 34, 36, 126, 198, 531], "are": [0, 1, 3, 8, 10, 13, 18, 23, 26, 36, 52, 77, 93, 106, 121, 131, 133, 138, 143, 149, 155, 156, 161, 162, 164, 167, 175, 179, 192, 200, 210, 215, 223, 224, 227, 231, 234, 237, 240, 244, 246, 247, 248, 257, 313, 332, 358, 413, 425, 428, 431, 435, 437, 443, 445, 453, 460, 471, 489, 491, 505, 512, 513, 515, 519, 520, 523, 528, 530, 537, 549, 556, 558, 560, 563, 605, 625, 649, 651, 658, 665, 667, 671, 676, 679, 680, 686, 693, 715, 768, 783, 791, 804, 812, 813, 814, 827, 828], "these": [1, 26, 27, 33, 42, 215, 218, 221, 224, 246, 431, 435, 567, 625, 651, 663, 667, 676, 677, 680, 683, 693, 715, 724, 768, 791, 795, 804, 805, 810, 812, 814], "solve": [1, 49, 54, 58, 64, 71, 91], "specific": [1, 2, 10, 33, 38, 39, 332, 354, 371, 651, 658, 727], "finding": [1, 42], "surfaces": [1, 3, 152], "that": [1, 2, 3, 8, 10, 11, 13, 15, 23, 30, 35, 38, 39, 42, 43, 46, 58, 60, 61, 66, 67, 71, 74, 77, 82, 84, 93, 97, 106, 110, 119, 120, 121, 126, 131, 132, 133, 141, 142, 143, 147, 149, 151, 157, 163, 164, 175, 191, 199, 200, 206, 207, 210, 215, 217, 220, 223, 224, 226, 231, 236, 240, 243, 244, 246, 247, 248, 257, 293, 294, 302, 305, 313, 315, 340, 348, 358, 362, 395, 403, 405, 406, 409, 411, 413, 431, 432, 435, 436, 442, 445, 452, 460, 468, 473, 475, 479, 482, 484, 489, 493, 494, 497, 500, 502, 506, 512, 513, 514, 520, 522, 527, 531, 537, 565, 601, 625, 680, 732, 766, 768, 780, 790, 791, 803, 804, 812, 814, 818, 825, 829], "can": [1, 3, 8, 10, 11, 12, 13, 15, 16, 23, 26, 27, 30, 42, 57, 61, 67, 68, 77, 88, 90, 131, 148, 149, 151, 157, 163, 164, 165, 166, 192, 194, 200, 207, 217, 220, 223, 224, 234, 244, 246, 247, 253, 255, 257, 309, 313, 358, 395, 403, 405, 409, 411, 413, 427, 431, 435, 445, 460, 483, 489, 493, 494, 512, 515, 537, 549, 565, 571, 572, 671, 687, 692, 766, 768, 789, 791, 795, 803, 804, 805, 812, 814, 820, 825], "find": [1, 41, 819, 822], "eigenvalues": [1, 77, 80, 502, 514, 522, 527, 826], "an": [1, 10, 12, 13, 14, 15, 23, 27, 38, 39, 42, 49, 51, 52, 54, 58, 64, 71, 77, 91, 93, 106, 119, 125, 126, 131, 140, 141, 146, 147, 150, 164, 166, 193, 206, 211, 214, 215, 223, 224, 243, 244, 246, 247, 248, 249, 257, 259, 260, 271, 273, 301, 302, 303, 310, 317, 321, 322, 323, 344, 353, 354, 358, 370, 371, 413, 416, 420, 429, 431, 435, 448, 460, 463, 468, 473, 474, 475, 476, 477, 478, 481, 482, 484, 496, 499, 506, 516, 526, 529, 552, 569, 570, 571, 575, 579, 586, 587, 592, 593, 595, 596, 600, 601, 603, 604, 606, 612, 615, 617, 620, 621, 624, 625, 630, 631, 640, 641, 645, 650, 651, 656, 662, 666, 667, 670, 671, 672, 674, 675, 676, 677, 683, 684, 689, 690, 692, 695, 696, 697, 699, 703, 706, 707, 709, 711, 714, 723, 725, 768, 780, 785, 787, 788, 789, 791, 803, 804, 812, 814, 815, 825, 826, 827, 829], "operator": [1, 23, 43, 46, 49, 50, 51, 53, 54, 57, 60, 61, 62, 64, 66, 67, 68, 73, 74, 84, 90, 97, 110, 127, 149, 224, 232, 241, 244, 245, 246, 247, 248, 249, 251, 395, 403, 405, 408, 409, 411, 413, 415, 416, 417, 420, 421, 422, 425, 426, 428, 429, 430, 431, 438, 440, 441, 443, 445, 447, 448, 449, 451, 453, 460, 462, 463, 464, 469, 471, 496, 507, 512, 519, 520, 530, 571, 590, 605, 623, 639, 663, 671, 673, 687, 692, 698, 707, 724, 731, 795, 803, 805, 812, 826, 828, 829], ".g": [1, 26, 27, 60, 195, 202, 224, 234, 242, 243, 244, 257, 344, 358, 460, 578, 593, 601, 791, 804], "states": [1, 42, 51, 52, 54, 56, 58, 77, 88, 401, 428, 734, 823], "interface": [1, 11, 12, 13, 14, 26, 56, 66, 126, 257, 354, 371, 405, 440, 571, 709, 730, 810], "themselves": 1, "factories": 1, "provision": 1, "/or": 1, "classical": [1, 10, 593, 601, 791, 804, 827], "upon": [1, 11], "which": [1, 10, 11, 15, 23, 26, 27, 30, 42, 49, 54, 64, 84, 119, 131, 138, 141, 150, 164, 175, 186, 191, 199, 202, 206, 210, 215, 217, 220, 224, 233, 234, 242, 244, 246, 247, 259, 260, 261, 262, 266, 271, 272, 332, 358, 405, 435, 437, 445, 455, 489, 491, 500, 505, 515, 523, 526, 528, 531, 532, 536, 537, 544, 548, 549, 558, 560, 563, 567, 571, 579, 585, 586, 594, 595, 602, 603, 604, 605, 614, 619, 620, 629, 630, 641, 645, 648, 651, 657, 658, 668, 671, 676, 680, 684, 687, 688, 689, 692, 694, 695, 702, 707, 709, 712, 718, 722, 766, 789, 810, 812, 814, 817, 825, 826], "above": [1, 11, 15, 215, 224, 234, 413, 460, 812], "may": [1, 11, 33, 121, 133, 248, 250, 255, 257, 313, 636, 637, 658, 666, 791, 804, 810, 811, 819, 822, 828], "depend": [1, 10], "minimum": [1, 46, 52, 55, 60, 65, 73, 74, 75, 77, 85, 93, 95, 96, 98, 99, 102, 103, 104, 106, 109, 111, 112, 115, 116, 117, 147, 156, 162, 175, 791, 795, 803, 804, 805], "eigenvalue": [1, 77, 601, 692, 795, 805, 822, 823, 827, 829], "compute": [1, 3, 10, 13, 51, 54, 58, 64, 71, 74, 79, 84, 88, 93, 97, 106, 110, 119, 121, 124, 128, 131, 133, 138, 141, 143, 145, 605, 671, 708, 711, 795, 803, 805, 818, 829], "include": [1, 10, 99, 112, 217, 219, 220, 222, 224, 244, 531, 692], "extrapolators": [1, 3, 147, 164, 166, 823], "facilitate": [1, 3, 35], "convergence": [1, 3, 46, 344, 356, 358, 364], "across": 1, "set": [1, 3, 11, 15, 16, 44, 45, 93, 106, 121, 131, 133, 139, 142, 143, 150, 151, 164, 192, 194, 200, 206, 207, 210, 215, 217, 220, 224, 233, 244, 247, 248, 253, 255, 284, 294, 306, 308, 310, 312, 341, 343, 344, 349, 355, 358, 365, 373, 383, 395, 405, 409, 411, 413, 424, 435, 476, 477, 478, 505, 515, 523, 528, 536, 548, 571, 651, 660, 676, 680, 687, 692, 721, 722, 724, 732, 768, 791, 795, 804, 805, 812, 825, 826, 827, 828, 829], "support": [1, 3, 10, 11, 15, 34, 45, 431, 669], "various": 1, "potentials": [1, 3, 195, 827], "more": [1, 15, 23, 36, 42, 46, 54, 58, 61, 64, 67, 71, 91, 121, 133, 143, 175, 216, 217, 220, 224, 233, 234, 242, 266, 273, 358, 427, 445, 460, 489, 502, 505, 514, 515, 522, 523, 527, 528, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 666, 668, 674, 684, 688, 694, 699, 702, 706, 709, 712, 714, 718, 723, 768, 789, 812, 813, 822], "detail": 1, "be": [1, 10, 11, 12, 13, 14, 15, 23, 26, 27, 38, 39, 42, 46, 49, 51, 54, 57, 58, 61, 64, 67, 68, 71, 74, 77, 79, 84, 88, 89, 90, 91, 93, 97, 106, 110, 119, 120, 123, 131, 132, 135, 139, 141, 142, 147, 148, 149, 150, 151, 153, 154, 157, 160, 163, 165, 166, 175, 179, 191, 192, 193, 194, 198, 200, 206, 207, 210, 212, 215, 217, 218, 220, 221, 223, 224, 231, 234, 240, 244, 246, 247, 248, 249, 250, 253, 255, 257, 259, 260, 261, 262, 271, 272, 284, 293, 294, 302, 306, 308, 309, 310, 312, 313, 315, 324, 341, 343, 349, 355, 358, 365, 373, 382, 383, 390, 392, 394, 395, 396, 398, 400, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 424, 427, 431, 435, 440, 445, 460, 481, 483, 489, 493, 501, 512, 513, 515, 520, 524, 526, 537, 547, 549, 565, 566, 571, 581, 593, 598, 601, 604, 613, 625, 636, 637, 645, 651, 658, 660, 666, 671, 676, 680, 684, 687, 692, 701, 707, 709, 715, 721, 732, 757, 766, 768, 771, 778, 780, 789, 791, 795, 803, 804, 805, 811, 812, 813, 814, 820, 825, 828], "found": [1, 11, 15, 138, 324, 325, 483, 567, 820], "sub": [1, 224], "-module": 1, "linked": 1, "below": [1, 10, 11, 15, 23, 139, 200, 224, 604, 651, 676, 680, 707, 708, 709, 711], "make": [1, 11, 13, 14, 358, 814, 828], "use": [1, 2, 5, 10, 11, 16, 27, 41, 46, 52, 77, 81, 82, 87, 88, 93, 95, 96, 98, 99, 103, 104, 106, 109, 111, 112, 116, 117, 131, 138, 151, 164, 175, 191, 193, 199, 206, 210, 211, 215, 217, 220, 223, 224, 233, 243, 244, 246, 250, 293, 294, 313, 315, 354, 358, 371, 382, 383, 451, 469, 496, 505, 515, 523, 528, 645, 651, 715, 766, 791, 797, 804, 814, 825], "utility": [1, 2, 6, 15, 16, 126, 224, 408], "ansatzes": [1, 2, 164], "provide": [2, 27, 33, 126, 224, 460, 468, 473, 531, 593, 601], "algorithms": [3, 5, 33, 35, 42, 493], "when": [3, 11, 27, 42, 43, 93, 106, 147, 157, 163, 223, 224, 246, 248, 250, 309, 310, 315, 358, 401, 403, 413, 427, 435, 513, 537, 556, 560, 563, 604, 651, 658, 684, 715, 754, 755, 757, 812, 814, 826], "used": [3, 5, 8, 10, 11, 16, 18, 26, 27, 36, 42, 45, 46, 49, 54, 61, 64, 67, 88, 93, 106, 119, 120, 131, 132, 141, 142, 147, 148, 150, 151, 165, 179, 192, 193, 194, 200, 204, 206, 207, 215, 223, 224, 234, 246, 248, 250, 257, 284, 293, 294, 308, 309, 310, 312, 324, 343, 355, 358, 373, 382, 383, 403, 431, 445, 481, 485, 486, 487, 488, 499, 505, 512, 515, 520, 523, 528, 531, 549, 581, 593, 601, 625, 645, 651, 658, 666, 676, 680, 692, 707, 709, 766, 783, 791, 804, 812], "variational": [3, 147, 150, 151, 164, 165, 191, 192, 194, 199, 200, 206, 207, 827], "solvers": 3, "vqe": [3, 46, 49, 93, 97, 102, 106, 110, 115, 119, 120, 126, 131, 132, 141, 142, 791, 795, 805, 808, 821, 823, 824], "points": [3, 121, 133, 147, 149, 150, 151, 164, 165, 170, 175, 182, 191, 192, 193, 194, 199, 200, 206, 207, 537, 725, 728, 729, 823, 824], "there": [3, 11, 13, 77, 164, 246, 257, 313, 413, 445, 489, 768], "is": [3, 10, 11, 12, 13, 14, 15, 16, 23, 27, 30, 36, 42, 49, 60, 66, 74, 77, 82, 84, 93, 94, 97, 101, 106, 107, 110, 119, 120, 121, 124, 131, 132, 133, 138, 139, 141, 142, 143, 145, 147, 151, 154, 157, 160, 163, 164, 165, 166, 168, 170, 173, 174, 180, 182, 185, 187, 191, 192, 194, 200, 207, 210, 211, 215, 217, 218, 220, 221, 223, 224, 226, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 257, 259, 260, 261, 262, 271, 272, 293, 294, 301, 302, 304, 309, 310, 313, 315, 317, 321, 322, 323, 344, 354, 358, 371, 382, 383, 401, 403, 413, 420, 422, 424, 425, 427, 428, 429, 431, 435, 437, 441, 443, 445, 451, 453, 460, 468, 469, 471, 473, 489, 496, 500, 502, 505, 511, 513, 514, 515, 519, 522, 523, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 544, 546, 548, 549, 556, 560, 563, 571, 577, 579, 580, 581, 586, 590, 595, 599, 601, 603, 609, 613, 615, 616, 620, 623, 625, 630, 639, 641, 645, 649, 651, 658, 660, 665, 666, 671, 673, 676, 677, 678, 679, 680, 683, 684, 686, 689, 691, 692, 695, 698, 701, 703, 705, 708, 711, 715, 721, 722, 732, 751, 762, 766, 768, 771, 783, 789, 791, 797, 803, 804, 812, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "extrapolation": [3, 147, 151, 164, 165, 191, 192, 193, 194, 199, 200, 206, 207], "from": [3, 10, 11, 15, 16, 23, 41, 42, 43, 57, 68, 90, 93, 106, 122, 123, 131, 134, 135, 144, 150, 151, 157, 163, 164, 191, 215, 217, 220, 224, 233, 244, 246, 250, 255, 259, 260, 261, 262, 266, 271, 272, 284, 293, 306, 309, 310, 315, 316, 325, 341, 349, 358, 365, 382, 405, 413, 445, 521, 533, 537, 546, 552, 556, 567, 568, 579, 585, 586, 594, 595, 602, 603, 604, 605, 614, 615, 619, 620, 629, 630, 645, 648, 657, 668, 669, 673, 680, 688, 689, 694, 695, 702, 703, 712, 718, 725, 732, 754, 755, 762, 766, 768, 780, 810, 812, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "prior": [3, 46], "solution": [3, 27, 30, 42, 147, 246, 247, 512, 520, 571, 768, 780], "(s": [3, 61, 67, 151, 164, 165, 192, 194, 200, 207, 248], "bootstrap": [3, 147, 823, 824], "algorithm": [3, 10, 12, 26, 27, 30, 33, 46, 49, 52, 88, 120, 132, 142, 164, 224, 494, 601, 692, 737, 764, 774, 822, 823, 827], "better": [3, 164, 175], "starting": [3, 164, 259, 260, 261, 262, 271, 272, 358], "point": [3, 93, 100, 106, 113, 119, 121, 124, 125, 126, 128, 130, 131, 133, 140, 141, 143, 145, 146, 150, 151, 153, 159, 164, 165, 169, 181, 192, 193, 194, 200, 207, 358, 727, 791, 796, 804, 823, 824], "also": [3, 8, 11, 12, 13, 14, 15, 16, 27, 30, 43, 46, 48, 49, 54, 58, 61, 64, 67, 70, 71, 91, 131, 138, 149, 210, 215, 217, 220, 224, 246, 247, 253, 255, 266, 273, 313, 358, 413, 431, 435, 502, 514, 522, 527, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 684, 688, 694, 699, 702, 706, 712, 714, 718, 723], "collection": [5, 11, 16], "circuits": [5, 215, 223, 791, 804], "building": 5, "blocks": 5, "inputs": [5, 210, 215, 223, 244, 431], "excitation": [5, 42, 91, 119, 120, 121, 122, 131, 132, 133, 134, 137, 141, 142, 143, 144, 212, 224, 225, 226, 227, 235, 236, 237, 244, 505, 515, 523, 528], "generators": 5, "methods": [6, 15, 16, 46, 50, 52, 56, 60, 66, 73, 77, 82, 88, 93, 106, 119, 126, 131, 141, 147, 150, 152, 158, 164, 167, 179, 191, 193, 195, 199, 201, 206, 210, 211, 215, 216, 217, 220, 223, 224, 233, 234, 242, 243, 246, 257, 278, 280, 285, 287, 294, 301, 304, 309, 313, 315, 323, 332, 339, 344, 358, 377, 379, 383, 389, 391, 393, 395, 397, 399, 401, 403, 405, 409, 411, 413, 431, 440, 445, 460, 474, 479, 481, 483, 485, 489, 493, 498, 500, 501, 505, 513, 521, 523, 526, 532, 537, 544, 549, 558, 560, 563, 565, 571, 576, 578, 581, 593, 601, 613, 618, 625, 636, 637, 645, 651, 666, 676, 680, 687, 692, 701, 707, 709, 715, 725, 730, 738, 763, 766, 773, 778, 780, 783, 791, 804, 806, 807, 810, 812, 814], "build": [6, 23], "fermionic": [6, 8, 18, 19, 42, 210, 215, 223, 246, 395, 413, 428, 431, 435, 502, 513, 514, 522, 527, 826, 828, 829], "vibrational": [6, 8, 18, 19, 33, 42, 141, 175, 177, 186, 189, 197, 201, 202, 203, 205, 211, 234, 243, 377, 379, 383, 411, 526, 529, 530, 692, 698, 708, 709, 711, 715, 724, 773, 820, 821, 824, 826], "excitations": [6, 88, 89, 122, 131, 134, 144, 211, 212, 217, 218, 219, 220, 221, 222, 224, 227, 228, 233, 234, 237, 238, 244, 245, 505, 515, 523, 528], "here": [8, 18, 93, 106, 198, 250, 304, 344, 460, 825, 826], "convert": [8, 18, 26, 148, 149, 246, 247, 248, 249, 250, 253, 255, 324, 420, 428, 429, 439, 456, 615, 703, 829], "spin": [8, 18, 19, 27, 138, 211, 216, 217, 218, 220, 221, 224, 230, 233, 244, 245, 344, 358, 372, 399, 401, 409, 445, 454, 457, 458, 459, 460, 518, 547, 581, 588, 591, 609, 618, 622, 625, 658, 663, 664, 678, 685, 752, 758, 812, 826], "operators": [8, 18, 23, 26, 27, 42, 49, 53, 54, 57, 58, 61, 62, 64, 67, 68, 71, 76, 86, 90, 91, 105, 118, 149, 210, 215, 217, 220, 223, 224, 227, 231, 233, 237, 240, 242, 246, 247, 248, 249, 251, 402, 413, 420, 427, 429, 431, 435, 437, 440, 444, 445, 457, 458, 459, 460, 472, 505, 511, 512, 515, 519, 520, 521, 523, 525, 528, 530, 547, 577, 580, 599, 616, 625, 691, 705, 795, 803, 805, 826], "qubit": [8, 18, 23, 42, 46, 50, 51, 52, 57, 60, 66, 68, 69, 73, 74, 84, 90, 93, 97, 106, 110, 210, 215, 216, 217, 220, 223, 224, 232, 233, 234, 241, 242, 243, 246, 247, 248, 249, 250, 251, 390, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 445, 493, 496, 505, 512, 515, 520, 523, 528, 768, 780, 795, 805, 819, 820, 821, 822, 823, 824, 825, 827, 828], "using": [8, 10, 11, 13, 23, 27, 42, 43, 57, 60, 68, 90, 93, 101, 106, 131, 142, 150, 193, 210, 215, 223, 224, 226, 236, 249, 250, 253, 255, 304, 313, 315, 339, 344, 358, 401, 402, 403, 408, 413, 766, 797, 812, 819, 822, 825, 827], "mappers": [8, 246], "other": [8, 13, 23, 42, 49, 121, 133, 246, 304, 415, 417, 419, 447, 449, 450, 462, 464, 465, 489, 654, 656, 658, 671, 677, 683, 766, 819, 820, 822], "techniques": [8, 164], "reduce": [8, 57, 68, 90, 246, 422, 451, 469, 812, 814], "problem": [8, 10, 42, 49, 51, 53, 54, 57, 58, 62, 64, 68, 71, 74, 79, 84, 88, 89, 90, 91, 93, 97, 106, 110, 149, 164, 246, 247, 390, 392, 394, 396, 398, 400, 404, 407, 408, 410, 412, 485, 493, 494, 495, 496, 497, 501, 506, 512, 513, 520, 521, 526, 571, 601, 692, 766, 768, 780, 823, 825, 826], "leveraging": [8, 825], "symmetries": [8, 52, 246, 247, 255, 302, 505, 512, 515, 520, 523, 528, 531], "nature": [10, 11, 12, 13, 14, 15, 16, 25, 33, 36, 41, 44, 46, 224, 278, 285, 301, 304, 313, 323, 339, 344, 358, 377, 571, 613, 701, 791, 814, 820, 821, 822, 823, 825, 826, 828, 829], "requires": [10, 11, 13, 131, 164, 246, 683, 812], "computational": [10, 11, 12, 13, 14], "program": [10, 11, 12, 301, 304, 313, 339, 791, 799, 804, 826], "library": [10, 11, 13, 14, 25, 344, 358, 376], "accessed": [10, 82, 565], "via": [10, 11, 12, 14, 15, 52, 58, 71, 88, 93, 106, 131, 164, 247, 255, 313, 315, 401, 565, 593, 601, 613, 625, 701, 812, 814], "installed": [10, 11, 12, 13, 14, 293, 294, 382, 383, 766, 820], "on": [10, 11, 12, 13, 23, 38, 39, 42, 46, 50, 51, 73, 74, 97, 110, 149, 150, 164, 191, 193, 194, 199, 200, 206, 207, 217, 220, 224, 233, 234, 242, 244, 246, 247, 251, 257, 344, 358, 391, 401, 431, 438, 442, 445, 452, 457, 458, 459, 460, 482, 484, 496, 505, 506, 515, 523, 525, 528, 530, 531, 532, 533, 536, 537, 541, 542, 544, 546, 548, 556, 558, 560, 563, 572, 581, 625, 651, 658, 666, 667, 671, 693, 715, 768, 771, 780, 791, 804, 812, 814, 817, 824, 827], "system": [10, 11, 12, 13, 14, 27, 234, 242, 243, 246, 358, 401, 445, 457, 458, 459, 581, 618, 625, 812], "-structure": 10, "computation": [10, 12, 13, 38, 39, 42, 46, 60, 131, 164, 246, 812], "given": [10, 15, 16, 45, 61, 67, 88, 149, 151, 164, 192, 194, 200, 205, 207, 224, 244, 245, 246, 247, 248, 249, 257, 261, 293, 294, 304, 309, 314, 358, 401, 413, 421, 427, 430, 445, 460, 468, 473, 512, 520, 533, 546, 563, 571, 604, 663, 665, 670, 671, 679, 686, 696, 724, 795, 805, 812, 813], "molecule": [10, 13, 51, 58, 71, 74, 79, 84, 97, 110, 149, 164, 167, 176, 179, 188, 195, 201, 203, 204, 294, 299, 304, 306, 310, 341, 344, 349, 358, 365, 383, 387, 501, 508, 509, 513, 526, 766, 767, 779, 819, 821, 822, 823, 824, 825, 826], "created": [10, 11, 93, 106, 164, 166, 403, 525, 530], "molecular": [10, 13, 42, 131, 138, 167, 170, 174, 179, 182, 187, 201, 257, 304, 339, 812, 814, 826], "configuration": [10, 11, 42, 231, 240, 301, 304, 339, 358, 768, 812], "passed": [10, 82, 93, 106, 131, 149, 166, 175, 246, 247, 250, 294, 306, 310, 341, 349, 365, 383, 413, 445, 493, 579, 791, 804, 814], "format": [10, 61, 67, 224, 250, 301, 304, 309, 313, 315, 339, 344, 358, 418, 427, 431, 715], "compatible": 10, "particular": [10, 11, 126, 186, 202, 475], "this": [10, 11, 12, 15, 23, 26, 27, 30, 36, 38, 39, 42, 43, 46, 48, 52, 70, 76, 77, 86, 88, 93, 105, 106, 118, 120, 121, 122, 123, 131, 132, 133, 134, 135, 139, 142, 144, 148, 151, 152, 164, 192, 197, 200, 207, 211, 215, 217, 218, 220, 221, 223, 224, 231, 233, 234, 240, 242, 243, 244, 245, 246, 248, 250, 253, 255, 257, 266, 273, 304, 305, 309, 310, 313, 315, 340, 348, 354, 358, 362, 371, 391, 393, 401, 403, 413, 420, 422, 427, 429, 431, 438, 440, 445, 451, 460, 469, 483, 494, 505, 506, 511, 515, 516, 519, 520, 523, 524, 528, 529, 537, 563, 565, 567, 569, 570, 575, 577, 579, 580, 581, 585, 586, 587, 592, 593, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606, 609, 612, 613, 614, 615, 616, 617, 619, 620, 621, 624, 625, 629, 630, 631, 640, 641, 645, 648, 650, 651, 657, 658, 662, 663, 666, 667, 668, 669, 671, 672, 674, 676, 678, 680, 683, 684, 687, 688, 689, 690, 692, 693, 694, 695, 697, 699, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 714, 715, 718, 723, 766, 768, 769, 780, 783, 791, 804, 806, 807, 811, 812, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "allows": [10, 23, 27, 77, 93, 106, 149, 152, 257, 315, 395, 405, 406, 409, 411, 812], "custom": [10, 26, 88, 93, 106, 224, 358, 571, 812], "each": [10, 15, 23, 137, 149, 150, 151, 164, 165, 192, 193, 194, 200, 207, 211, 218, 221, 244, 245, 246, 257, 317, 321, 322, 344, 393, 401, 413, 445, 460, 468, 473, 489, 494, 530, 537, 538, 541, 543, 560, 565, 572, 707, 709, 766, 783, 788, 790, 791, 804, 821, 823], "thus": [10, 93, 106, 413, 445, 460, 812], "user": [10, 12, 26, 49, 54, 64, 93, 94, 106, 107, 150, 191, 193, 194, 246, 354, 371, 571, 814], "configure": 10, "way": [10, 11, 38, 39], "chemist": 10, "already": [10, 11, 15, 131, 243, 358, 665, 679, 686, 771, 789, 812, 820, 826], "underlying": [10, 167, 176, 179, 188], "will": [10, 11, 13, 14, 15, 16, 26, 27, 38, 39, 42, 46, 61, 67, 88, 93, 101, 106, 119, 120, 122, 123, 124, 131, 132, 134, 135, 138, 139, 141, 142, 144, 147, 149, 198, 200, 206, 207, 224, 244, 246, 247, 248, 249, 250, 257, 293, 294, 310, 315, 324, 358, 382, 383, 395, 405, 409, 411, 413, 424, 427, 445, 513, 547, 567, 581, 593, 601, 604, 625, 645, 651, 658, 660, 676, 680, 684, 715, 721, 768, 769, 771, 789, 803, 812, 814], "familiar": 10, "some": [10, 151, 164, 165, 192, 194, 200, 207, 224, 250, 354, 371, 413, 826], "intermediate": [10, 13, 651, 791, 802, 804], "data": [10, 13, 15, 26, 42, 150, 152, 153, 154, 157, 159, 160, 163, 164, 169, 175, 181, 191, 193, 199, 200, 206, 207, 266, 313, 315, 317, 321, 322, 358, 413, 445, 460, 508, 509, 565, 567, 571, 578, 579, 585, 586, 594, 595, 602, 603, 614, 619, 620, 629, 630, 648, 657, 666, 668, 688, 689, 694, 695, 702, 712, 715, 718, 789, 791, 804, 824, 826], "later": [10, 246, 249, 601, 692], "form": [10, 42, 171, 183, 210, 215, 223, 251, 257, 320, 405, 413, 431, 435, 506, 678, 709], "input": [10, 12, 42, 61, 67, 149, 167, 179, 210, 215, 223, 248, 304, 313, 315, 323, 339, 344, 358, 413, 431, 505, 515, 523, 528, 531, 536, 548, 549, 553, 556], "stored": [10, 15, 52, 148, 250, 266, 358, 460, 505, 515, 523, 528, 565, 567, 585, 594, 602, 605, 613, 614, 619, 629, 648, 651, 657, 658, 667, 668, 671, 676, 680, 688, 693, 694, 701, 702, 712, 715, 718], "groupedproperty": [10, 15, 576, 593, 613, 701, 810, 811], "turn": [10, 23, 766, 768, 772, 780, 827], "contains": [10, 42, 211, 216, 217, 218, 220, 221, 224, 234, 244, 245, 247, 302, 313, 460, 475, 482, 484, 494, 520, 645, 806, 807, 812], "multiple": [10, 224, 315, 445, 565, 651], "property": [10, 15, 25, 27, 30, 36, 47, 49, 54, 55, 59, 64, 65, 69, 72, 75, 78, 80, 81, 83, 85, 87, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 127, 129, 132, 133, 134, 138, 139, 142, 144, 145, 208, 209, 212, 213, 214, 219, 222, 226, 228, 229, 230, 231, 232, 236, 238, 239, 240, 241, 252, 253, 254, 255, 256, 263, 264, 265, 267, 268, 269, 270, 274, 295, 296, 297, 298, 299, 302, 316, 317, 318, 320, 321, 322, 324, 326, 345, 346, 347, 350, 351, 352, 356, 357, 359, 360, 361, 363, 364, 366, 367, 368, 369, 372, 374, 375, 376, 384, 385, 386, 387, 406, 418, 423, 432, 434, 436, 438, 442, 452, 454, 457, 458, 459, 466, 467, 470, 480, 486, 487, 488, 490, 495, 497, 501, 503, 504, 507, 508, 509, 510, 511, 517, 518, 519, 538, 539, 541, 542, 543, 553, 554, 555, 557, 559, 561, 562, 565, 566, 568, 569, 576, 578, 579, 580, 581, 584, 586, 587, 588, 589, 591, 593, 595, 596, 597, 598, 601, 603, 604, 606, 607, 608, 609, 610, 611, 613, 615, 618, 620, 621, 622, 625, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 645, 646, 647, 655, 659, 661, 666, 669, 671, 672, 687, 689, 690, 692, 695, 697, 700, 701, 703, 704, 713, 717, 719, 720, 726, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 769, 770, 772, 774, 775, 777, 781, 782, 788, 790, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 808, 809, 812], "objects": [10, 15, 25, 26, 43, 147, 511, 519, 530, 565, 567, 577, 580, 590, 599, 613, 616, 623, 639, 673, 691, 698, 701, 705, 806, 807], "examples": [10, 224, 460], "case": [10, 11, 23, 164, 244, 248, 354, 371, 413, 420, 429, 435, 445, 460, 468, 473, 502, 514, 522, 527, 651, 658, 678, 684, 768, 812], "electronicenergy": [10, 15, 123, 131, 135, 138, 302, 641, 666], "particlenumber": [10, 812, 813, 823, 825], "angularmomentum": [10, 826], "magnetization": [10, 519, 753, 823, 826], "electronicdipolemoment": [10, 826], "once": [10, 12, 164, 460], "extracted": [10, 38, 39, 131, 666, 745, 746, 747, 748], "independent": [10, 217, 220, 224, 233, 244], "was": [10, 11, 58, 71, 123, 135, 248, 251, 354, 358, 371, 812], "it": [10, 11, 12, 15, 16, 27, 30, 38, 39, 41, 46, 60, 66, 74, 84, 93, 94, 97, 101, 106, 107, 110, 124, 131, 138, 147, 151, 210, 211, 217, 220, 224, 233, 234, 242, 243, 246, 247, 248, 249, 257, 293, 294, 302, 304, 313, 315, 354, 371, 382, 383, 413, 422, 428, 460, 468, 473, 506, 512, 531, 533, 537, 546, 547, 556, 560, 563, 565, 578, 593, 601, 609, 625, 645, 651, 658, 671, 692, 766, 768, 771, 783, 788, 789, 791, 803, 804, 812, 814, 820, 826, 829], "however": [10, 11, 13, 15, 131, 164, 243, 435, 593, 601, 680, 812], "values": [10, 43, 93, 106, 119, 141, 150, 151, 154, 160, 170, 182, 199, 200, 246, 250, 317, 321, 322, 358, 537, 560, 563, 660, 721, 731, 791, 795, 804, 805, 806, 807, 826, 827], "level": [10, 16, 177, 186, 189, 202, 205, 581, 604, 625, 651, 676, 680, 812], "accuracy": [10, 211], "by": [10, 11, 12, 13, 15, 23, 26, 27, 30, 43, 44, 49, 51, 52, 54, 57, 64, 68, 76, 79, 84, 86, 90, 93, 94, 100, 105, 106, 107, 113, 118, 119, 131, 141, 147, 155, 156, 161, 162, 164, 196, 200, 210, 215, 217, 220, 223, 224, 244, 246, 248, 257, 259, 260, 271, 279, 286, 293, 300, 304, 307, 311, 342, 344, 353, 358, 370, 378, 388, 401, 402, 413, 415, 419, 420, 422, 429, 440, 445, 447, 450, 460, 462, 465, 468, 473, 489, 502, 505, 511, 514, 515, 519, 522, 523, 527, 528, 530, 537, 565, 571, 577, 578, 579, 580, 590, 599, 616, 623, 639, 658, 663, 666, 667, 671, 673, 680, 691, 693, 698, 705, 724, 746, 747, 768, 771, 783, 789, 791, 804, 812, 825, 829], "if": [10, 11, 13, 15, 16, 27, 45, 49, 54, 64, 70, 77, 82, 88, 93, 94, 101, 106, 107, 119, 121, 123, 124, 131, 133, 135, 138, 139, 141, 142, 143, 147, 149, 166, 191, 198, 204, 210, 216, 217, 218, 220, 221, 224, 226, 227, 231, 237, 240, 246, 247, 248, 249, 250, 251, 255, 257, 293, 294, 301, 305, 309, 310, 315, 317, 321, 322, 324, 325, 340, 348, 353, 354, 358, 362, 370, 371, 382, 383, 395, 405, 406, 408, 409, 411, 413, 424, 425, 427, 428, 431, 443, 453, 471, 479, 489, 496, 500, 510, 513, 517, 519, 530, 533, 535, 546, 547, 549, 579, 581, 586, 593, 595, 601, 603, 605, 609, 615, 620, 625, 630, 645, 651, 658, 660, 665, 670, 676, 677, 679, 680, 683, 686, 689, 695, 696, 703, 708, 711, 715, 721, 722, 724, 757, 762, 768, 771, 780, 789, 791, 795, 803, 804, 805, 812, 813, 814, 820, 823, 826], "you": [10, 11, 13, 15, 27, 46, 224, 244, 413, 445, 513, 636, 637, 814, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "want": [10, 11, 224, 814, 820], "serialize": 10, "your": [10, 11, 27, 224, 825], "order": [10, 11, 12, 13, 14, 15, 30, 154, 160, 170, 182, 224, 244, 248, 293, 294, 304, 382, 383, 420, 428, 429, 435, 445, 519, 526, 530, 572, 593, 598, 651, 680, 692, 700, 709, 766, 768, 790], "reuse": 10, "same": [10, 248, 425, 431, 443, 445, 453, 460, 468, 471, 473, 485, 487, 537, 560, 563, 771, 806, 807, 812, 814, 826], "future": [10, 23, 94, 100, 107, 113, 243, 666], "exchange": [10, 358, 375, 376], "another": [10, 23, 93, 106, 151, 206, 645, 654, 656, 658, 677, 768, 810, 811, 821], "person": 10, "computer": [10, 301, 391], "have": [10, 11, 23, 131, 148, 149, 210, 215, 223, 224, 246, 250, 304, 431, 479, 565, 768, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "until": [10, 15], "resort": 10, "deprecated": [10, 95, 96, 98, 99, 103, 104, 109, 111, 112, 116, 117, 422, 451, 469, 804, 806, 819, 822], "module": [10, 11, 16, 27, 30, 44, 164, 191, 211, 234, 257, 489], "still": [10, 186, 202], "output": [10, 42, 167, 179, 248, 279, 286, 300, 302, 304, 307, 309, 311, 314, 315, 342, 378, 388, 413, 535, 651, 715, 820, 826], "qmolecule": [10, 323, 324, 508, 509, 579, 586, 595, 603, 613, 615, 620, 630, 669, 689, 695, 703, 826], "object": [10, 11, 15, 27, 30, 49, 52, 54, 60, 64, 70, 88, 147, 149, 217, 220, 224, 233, 234, 242, 246, 257, 315, 485, 489, 493, 503, 504, 506, 508, 509, 512, 516, 520, 529, 531, 549, 565, 571, 593, 601, 613, 665, 666, 670, 679, 686, 696, 701, 725, 778, 780, 783, 806, 807, 825], "binary": [10, 11], "known": [10, 13, 246, 395, 405, 406, 409, 411], "hierarchical": 10, "hdf": [10, 43, 266, 273, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 688, 694, 699, 702, 706, 712, 714, 718, 723], "5driver": 10, "read": [10, 315, 768, 812], "file": [10, 11, 12, 15, 16, 301, 302, 303, 304, 309, 310, 313, 314, 315, 323, 324, 325, 358, 363, 482, 484, 494, 766, 771, 783, 789, 812, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "directly": [10, 88, 93, 106, 131, 248, 257, 445], "construct": [10, 15, 50, 57, 68, 73, 77, 82, 90, 91, 93, 106, 210, 215, 223, 579, 586, 595, 603, 604, 620, 630, 689, 695, 825, 826, 829], "would": [10, 38, 39, 157, 163, 315, 358], "updated": [10, 732], "properties": [10, 43, 54, 64, 95, 149, 257, 313, 565, 570, 576, 577, 593, 616, 666, 667, 693, 705, 732, 825], "serialization": [10, 15], "without": [10, 15, 23, 768, 814], "need": [10, 11, 38, 39, 435, 520, 671, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "fall": 10, "back": [10, 38, 39, 192, 313, 684, 829], "onto": [10, 460, 625], "obtain": [10, 91, 124, 131, 224, 244, 496], "their": [10, 26, 33, 139, 149, 505, 515, 523, 528, 667, 680, 693, 787, 795, 805, 812], "information": [10, 11, 12, 13, 14, 15, 23, 46, 49, 52, 54, 58, 64, 71, 91, 121, 133, 143, 216, 217, 220, 224, 233, 234, 242, 246, 250, 304, 406, 460, 489, 501, 502, 505, 513, 514, 515, 520, 522, 523, 526, 527, 528, 573, 593, 601, 768, 769, 780, 789, 802, 806, 807, 827], "ab": 10, "-initio": 10, "programs": [10, 35], "libraries": 10, "several": [10, 23, 413], "interfacing": [10, 304, 313, 315], "available": [10, 11, 14, 315, 332, 358, 510, 513, 517, 519, 537, 558, 560, 563, 593, 601, 605, 641, 671, 754, 755, 762, 812, 813], "its": [10, 11, 15, 23, 46, 93, 106, 151, 246, 257, 302, 489, 494, 531, 556, 572, 641, 666, 671, 676, 715, 791, 804], "dependent": [10, 148, 149, 771], "/library": 10, "must": [10, 11, 12, 13, 14, 77, 131, 138, 210, 215, 217, 218, 220, 221, 223, 224, 234, 244, 248, 257, 413, 431, 445, 460, 565, 641, 645, 651, 658, 676, 680, 687, 692, 709, 791, 804, 812, 814, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "see": [10, 23, 54, 58, 61, 64, 67, 71, 91, 121, 133, 143, 154, 160, 170, 182, 202, 216, 217, 220, 224, 234, 266, 273, 304, 313, 339, 344, 358, 403, 420, 427, 429, 445, 489, 502, 514, 522, 527, 540, 551, 564, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 667, 668, 674, 684, 688, 693, 694, 699, 702, 706, 712, 714, 718, 723, 768, 789, 822], "relevant": 10, "installation": 10, "instructions": [10, 11, 13, 14], "intend": 10, "gaussian": [10, 215, 289, 293, 294, 304, 305, 309, 313, 315, 320, 381, 382, 383, 819, 820, 826], "psi": [10, 290, 293, 294, 819, 820], "pyquante": [10, 291, 293, 294, 344, 348, 353, 354, 819], "pyscf": [10, 292, 293, 294, 358, 362, 363, 370, 371, 819, 826], "reads": 10, "pre": [10, 11], "-existing": 10, "saved": [10, 249, 771, 789], "not": [10, 11, 13, 15, 16, 27, 49, 54, 64, 77, 121, 123, 124, 133, 135, 138, 142, 143, 145, 147, 149, 151, 164, 191, 198, 210, 211, 215, 217, 218, 220, 221, 224, 231, 233, 240, 244, 247, 248, 249, 250, 293, 301, 305, 313, 315, 318, 319, 324, 325, 332, 340, 348, 358, 362, 382, 408, 413, 420, 425, 431, 432, 443, 445, 453, 471, 479, 489, 500, 523, 533, 537, 546, 547, 581, 598, 625, 651, 658, 665, 669, 671, 677, 679, 683, 684, 686, 751, 768, 780, 791, 795, 797, 802, 804, 805, 810, 811, 812, 813, 825], "any": [10, 15, 38, 39, 61, 67, 93, 106, 211, 212, 224, 234, 245, 249, 250, 267, 294, 296, 349, 365, 383, 385, 431, 505, 515, 523, 528, 571, 601, 658, 680, 692, 707, 709, 732, 746, 747, 768, 791, 798, 804, 809, 812, 814, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "external": [10, 164, 250], "needs": [10, 248, 304, 593, 598, 766], "no": [10, 11, 23, 77, 147, 150, 193, 224, 244, 246, 248, 249, 255, 309, 315, 317, 321, 322, 540, 564, 605, 609, 658, 722, 724, 768, 789, 790, 814, 823], "special": [10, 215, 431, 641, 651, 664, 678, 685], "install": [10, 11, 13, 41, 820], "fcidumpdriver": 10, "likewise": 10, "standard": [10, 191, 531, 680, 791, 804], "fcidump": [10, 301, 302, 303, 812], "again": [10, 513], "gaussianlogdriver": 10, "arbitrary": [10, 198, 715], "job": [10, 304, 309, 310, 313, 314, 795, 805, 808, 820], "control": [10, 304, 309, 310, 313, 314], "run": [10, 11, 12, 13, 14, 91, 149, 279, 286, 300, 303, 307, 309, 311, 314, 325, 342, 353, 354, 358, 370, 371, 378, 388, 791, 804, 820], "return": [10, 15, 16, 27, 30, 36, 42, 44, 45, 61, 67, 77, 149, 198, 224, 234, 295, 296, 297, 298, 299, 346, 351, 360, 384, 385, 386, 387, 415, 418, 419, 435, 437, 447, 450, 462, 465, 476, 477, 478, 511, 519, 530, 533, 534, 535, 545, 546, 547, 550, 552, 553, 554, 555, 556, 557, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 731, 769, 792, 798, 799, 800, 801, 815, 822, 823, 826, 828], "gaussianlogresult": [10, 313, 314], "containing": [10, 315, 323, 431, 435, 489, 505, 515, 523, 528, 576, 664, 678, 685, 722, 766, 806, 807, 817], "log": [10, 16, 309, 313, 314, 315, 317, 320, 321, 322, 573], "well": [10, 11, 42, 164, 198, 217, 220, 224, 233, 234, 242, 565, 768, 812], "ready": [10, 313], "access": [10, 16, 149, 201, 304, 313, 315, 667, 693, 791, 804], "certain": [10, 246, 313, 531, 579], "interest": [10, 151, 164, 165, 192, 194, 200, 207, 313, 823], "parsed": [10, 313, 445], "commercial": 11, "driver": [11, 13, 15, 27, 42, 45, 49, 54, 57, 58, 64, 68, 71, 90, 149, 257, 279, 286, 287, 293, 294, 296, 297, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 323, 332, 339, 341, 342, 343, 344, 349, 353, 355, 358, 365, 370, 373, 378, 379, 382, 383, 385, 386, 388, 501, 513, 526, 530, 579, 586, 595, 603, 620, 630, 669, 689, 695, 754, 755, 762, 819, 820, 821, 822, 823, 824, 825], "accesses": 11, "electronic": [11, 12, 13, 14, 15, 33, 42, 131, 246, 285, 287, 294, 304, 391, 513, 516, 593, 598, 601, 605, 641, 651, 663, 666, 671, 673, 676, 680, 738, 739, 740, 743, 744, 757, 765, 775, 819, 821, 822, 823, 825, 826], "structure": [11, 12, 13, 14, 33, 42, 201, 285, 287, 294, 304, 377, 379, 383, 391, 445, 513, 516, 526, 529, 601, 692, 738, 767, 773, 779, 823, 825, 827], "-supplied": 11, "open": [11, 12, 13, 14, 16, 42, 304, 537, 828], "-source": [11, 12, 13, 14, 42, 304], "should": [11, 12, 15, 46, 131, 149, 150, 179, 191, 193, 210, 246, 248, 250, 259, 260, 261, 262, 271, 272, 358, 431, 440, 515, 579, 613, 658, 701, 708, 711, 757, 812], "follow": [11, 658], "come": 11, "product": [11, 826], "online": 11, "following": [11, 12, 23, 27, 30, 93, 106, 131, 150, 224, 234, 293, 294, 382, 383, 413, 445, 460, 505, 515, 519, 523, 528, 530, 812], "sure": [11, 814], "executable": [11, 12, 309], "command": [11, 12], "line": [11, 309, 313, 315, 344, 558, 559, 771, 789, 828], "environment": [11, 12, 13, 14], "where": [11, 12, 13, 14, 15, 43, 93, 106, 148, 157, 163, 164, 202, 210, 215, 223, 224, 246, 248, 249, 250, 257, 358, 401, 413, 420, 429, 431, 435, 437, 445, 457, 458, 459, 460, 468, 473, 771, 812, 818, 826], "running": [11, 57, 68, 90, 309], "python": [11, 13, 14, 41, 43, 820, 821, 823, 824, 826, 828, 829], "qiskit": [11, 12, 13, 14, 15, 16, 36, 41, 43, 44, 46, 93, 106, 164, 210, 215, 223, 224, 244, 278, 285, 301, 304, 313, 323, 339, 344, 358, 377, 413, 445, 502, 511, 514, 519, 522, 530, 537, 540, 551, 564, 571, 577, 578, 580, 590, 599, 613, 616, 623, 639, 673, 691, 698, 701, 705, 768, 791, 804, 812, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "verifying": 11, "reachable": [11, 12], "path": [11, 12, 15, 16, 301, 302, 323, 326, 358, 363, 771, 789], "appropriate": [11, 93, 106, 119, 131, 141, 310], "exports": 11, "gauss": 11, "_exedir": 11, "been": [11, 12, 13, 15, 43, 148, 243, 247, 250, 513, 722, 724, 795, 804, 805, 806, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "configured": [11, 217, 220, 224, 233, 234, 242, 246, 812, 814], "per": [11, 38, 39, 217, 220, 234, 242, 243, 244, 245, 526, 691, 713, 777, 791, 804, 806, 807, 825], "gauopen": 11, "folder": 11, "part": [11, 164, 354, 371, 431, 739, 740, 744, 765, 775, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "needed": [11, 198, 202, 246, 247, 249, 257, 401, 496], "modules": [11, 16], "has": [11, 12, 13, 15, 43, 46, 77, 149, 215, 216, 243, 247, 315, 344, 358, 408, 413, 435, 445, 460, 513, 537, 565, 572, 658, 722, 724, 751, 752, 768, 795, 804, 805, 806], "made": [11, 609, 671, 814], "licensed": [11, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "under": [11, 789, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "public": [11, 354, 371], "license": [11, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "specifically": [11, 13, 431, 567], "qcmatrixio": 11, ".f": 11, "compilation": 11, "native": 11, "extension": 11, "comes": 11, "-built": 11, "binaries": 11, "most": [11, 16, 460, 658, 768], "common": [11, 332, 658, 666, 823], "platforms": 11, "existing": [11, 15], "libifcoremd": 11, ".dll": 11, "required": [11, 121, 124, 133, 138, 143, 145, 224, 579, 586, 595, 603, 620, 630, 645, 651, 676, 680, 689, 695], "load": [11, 15, 266, 358, 567, 572, 585, 594, 602, 614, 619, 629, 648, 657, 668, 688, 694, 702, 712, 718], "missing": [11, 138, 314], "simple": [11, 152, 505, 515, 523, 528, 826], "get": [11, 16, 38, 39, 51, 53, 57, 62, 68, 74, 79, 84, 90, 93, 97, 106, 110, 123, 131, 135, 136, 137, 155, 156, 157, 161, 162, 163, 173, 174, 185, 186, 187, 197, 198, 202, 203, 252, 253, 254, 255, 256, 257, 263, 264, 265, 267, 268, 269, 270, 284, 293, 318, 319, 382, 490, 491, 492, 502, 514, 522, 527, 565, 568, 658, 667, 670, 684, 693, 696, 766, 767, 768, 779, 787, 795, 805, 827, 829], "anaconda": 11, "recommended": 11, "platform": 11, "):": [11, 211, 224, 234, 243, 707, 821, 822, 823, 824, 826, 827, 829], "conda": [11, 13], "intel": 11, "-fortran": 11, "-rt": 11, "matching": 11, "then": [11, 12, 13, 42, 88, 93, 106, 149, 151, 164, 210, 246, 248, 310, 435, 768, 771, 803, 812, 814, 825], "necessary": [11, 12], "compile": 11, "prebuilt": 11, "supplied": [11, 58, 71, 247, 249, 251, 253, 257, 310, 314, 354, 358, 371, 711], "works": [11, 15, 460, 791, 804, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "machine": 11, "compiled": 11, "into": [11, 23, 38, 39, 41, 42, 93, 106, 147, 148, 199, 200, 246, 324, 401, 445, 578, 615, 641, 645, 651, 663, 664, 678, 685, 687, 692, 703, 709, 722, 811, 814], "accomplished": 11, "generator": [11, 224], "2py": 11, "numpy": [11, 36, 43, 93, 106, 130, 428, 435, 445, 456, 475, 482, 484, 499, 821, 822, 823, 824, 825, 826, 828, 829], "prompt": 11, "window": [11, 150, 164, 166, 191, 193, 199, 200, 206, 207, 209, 823], "change": [11, 43, 93, 106, 168, 173, 174, 180, 185, 187, 210, 413, 651, 715, 829], "directory": [11, 12, 771, 789, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "_nature": [11, 15, 16, 93, 106, 210, 215, 223, 224, 244, 413, 445, 511, 519, 530, 537, 577, 578, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 804, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "/drivers": 11, "/second": 11, "_quantization": [11, 210, 215, 223, 413, 445, 537, 578, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829], "/gaussiand": 11, "/gauopen": 11, "inside": [11, 15, 273, 570, 575, 592, 600, 612, 617, 624, 640, 650, 662, 674, 699, 706, 714, 723], "while": [11, 13, 14, 131, 200, 207, 259, 260, 261, 262, 271, 272, 358, 812], "invoke": 11, "explained": [11, 224, 234, 358, 413, 460], "full": [11, 15, 301, 413, 428, 496, 821, 823], "syntax": 11, "follows": [11, 23, 391, 680, 791, 804], "generate": [11, 218, 221, 224, 234, 494, 505, 515, 523, 528, 531, 571, 766, 785, 786], "name": [11, 12, 16, 49, 54, 64, 147, 257, 315, 358, 501, 507, 565, 568, 571, 574, 576, 578, 666, 771, 789, 791, 804, 825, 826], "prefix": 11, ".so": [11, 658, 826], ".cpython": 11, "-x": 11, "-gnu": 11, "work": [11, 217, 220, 326], "generated": [11, 15, 49, 54, 64, 76, 86, 105, 118, 119, 141, 224, 227, 237, 402, 533, 546, 552, 771, 812], "supported": [11, 23, 147, 210, 215, 223, 243, 293, 305, 340, 344, 348, 358, 362, 445, 489, 547, 791, 803, 804], "compiler": 11, "download": [11, 13], "gnu": 11, "gcc": 11, "gfortran": 11, "source": [11, 41, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "first": [11, 15, 23, 42, 46, 147, 211, 216, 218, 221, 244, 245, 293, 294, 358, 382, 383, 479, 489, 625, 651, 676, 680, 708, 711, 715, 768, 788, 812, 818, 822, 825], "do": [11, 224, 246, 431, 432, 513, 665, 677, 679, 683, 686], "suitable": [11, 42, 51, 74, 79, 84, 97, 110, 431], "able": [11, 15, 26, 42, 445, 641], "distribution": 11, "\u2019s": [11, 12, 13, 44, 77, 82, 139, 206, 248, 257, 265, 285, 358, 377, 413, 416, 445, 448, 463, 569, 587, 596, 606, 613, 621, 631, 672, 690, 697, 701, 812, 814], "installer": 11, "account": [11, 12, 814], "bash": 11, "shell": 11, "edit": 11, ".bash": [11, 12], "_profile": [11, 12], "home": [11, 12], "add": [11, 16, 413, 415, 447, 462, 565, 566, 569, 587, 596, 606, 613, 621, 631, 654, 667, 672, 690, 693, 697, 701], "lines": [11, 315], "export": [11, 12], "_scrdir": 11, "=~": 11, "/.": 11, "root": [11, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "=/": [11, 12], "applications": 11, "alias": [11, 12], "enable": [11, 12], "_gaussian": 11, "='": [11, 12, 224, 413], ". $": 11, "g16": 11, "/g": 11, "bsd": 11, "profile": [11, 164, 823, 824], "assumes": [11, 244, 245], "application": [11, 445], "placed": [11, 248, 578, 812], "/applications": 11, "selected": [11, 293, 294, 315, 382, 383, 813], "scratch": 11, "stores": [11, 15, 273, 565, 570, 575, 592, 600, 612, 617, 624, 625, 640, 650, 662, 674, 699, 706, 714, 723], "temporary": [11, 43], "files": [11, 43, 789, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "now": [11, 82, 246, 435, 826], "before": [11, 12, 164, 191, 192, 199, 207, 224, 424, 641, 660, 687, 692, 721, 825], "properly": 11, "defined": [11, 23, 147, 164, 191, 211, 243, 301, 531, 532, 536, 544, 548, 572, 663, 724, 812], "error": [11, 44, 45, 353, 370, 476, 477, 478, 791, 797, 804, 825], "ulimit": 11, "cannot": [11, 15, 23, 248, 309, 445, 489, 549, 671], "modify": 11, "limit": 11, "invalid": [11, 227, 237, 250, 284, 304, 313, 315, 339, 344, 354, 358, 371, 413, 427, 445, 460, 476, 477, 478, 533, 546, 563, 579, 812], "argument": [11, 149, 234, 243, 460, 732, 768, 812], "harmful": 11, "might": [11, 93, 106], "suppress": [11, 248], "done": [11, 191, 246, 247, 248, 249, 797, 812], "entering": 11, "sequence": [11, 23, 215, 480, 489, 492, 499, 766, 768, 772, 780, 817, 827], "commands": 11, "echo": 11, "kern": 11, ".maxfiles": 11, "sudo": 11, "tee": 11, "etc": [11, 16, 27, 224, 234, 244, 245, 257, 316, 358, 505, 515, 523, 528], "/sysctl": 11, ".conf": 11, ".maxfilesperproc": 11, "sysctl": 11, "finally": [11, 27, 658, 812], "adding": [11, 12, 757], "at": [11, 12, 13, 14, 15, 23, 61, 67, 148, 149, 151, 153, 159, 169, 181, 192, 194, 200, 207, 211, 224, 243, 261, 358, 445, 460, 526, 605, 658, 666, 671, 684, 790, 795, 805, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "end": [11, 210, 215, 259, 260, 261, 262, 271, 272, 401, 435, 818, 820, 822, 824, 829], "section": [11, 12, 445], "like": [11, 13, 15, 49, 257, 358, 413, 445, 825, 826], "script": 11, "snippet": 11, "steps": [11, 791, 804], "up": [11, 93, 106, 121, 133, 143, 768, 826], "batch": 11, "ifortvars": 11, ".bat": 11, "arch": 11, "issue": [11, 301, 391], "within": [11, 164, 191, 224, 244, 313, 445, 485, 486, 567], "fcompiler": 11, "=intelvem": 11, "successful": 11, "execution": [11, 795, 805], ".cp": 11, "win": 11, "_amd": 11, "pyd": 11, "#ifdef": 11, "manually": 11, "edited": 11, "recognized": [11, 358], "during": [11, 26, 27, 353, 370, 413, 497, 535, 571, 572, 581, 593, 601, 651, 676, 680, 766, 791, 804, 827], "processing": [11, 413], "visual": 11, "studio": 11, "originally": 11, "shows": [11, 344], "two": [11, 42, 131, 138, 147, 164, 167, 179, 199, 200, 246, 247, 249, 250, 254, 261, 262, 272, 358, 403, 406, 413, 445, 460, 552, 604, 625, 654, 656, 814, 826], "occurrences": 11, "parameter": [11, 46, 93, 106, 119, 141, 151, 164, 171, 183, 193, 199, 206, 401, 413, 485, 486, 487, 488, 536, 537, 541, 542, 548, 563, 711, 791, 804, 806, 807, 821, 828], "len": [11, 823], "4d": 11, "shown": 11, "next": [11, 150, 164], "_i": [11, 437, 445, 457, 458, 459, 812, 819, 820, 824, 826], "`#": 11, "else": [11, 428, 823], "endif": 11, "simplified": [11, 425, 443, 453, 471], "deleting": 11, "three": [11, 259, 260, 271, 445, 537, 680], "last": [11, 23, 479, 489], "leaving": 11, "just": [11, 93, 106], "fourth": 11, ".e": [12, 15, 23, 93, 106, 224, 246, 255, 257, 401, 457, 458, 459, 489, 571, 791, 804], "execute": [12, 13, 14, 823, 827], "extract": [12, 13, 14, 579, 586, 595, 603, 620, 630, 689, 695], "discoverable": [12, 13], "therefore": [12, 13, 217, 220, 768, 812], "macos": [12, 41], "achieved": 12, "_psi": 12, "users": 12, "/username": 12, "/psi": 12, "4conda": 12, "/bin": 12, ":$": 12, "username": 12, "replaced": [12, 658, 680], "discover": 12, "time": [12, 13, 14, 243, 666, 788, 829], "launching": 12, "installing": [13, 41], "according": [13, 14, 23, 60, 66, 74, 84, 93, 97, 106, 110, 408, 665, 679, 686, 814], "virtual": [13, 14], "automatically": [13, 14, 413, 445, 814], "dynamically": 13, "discovered": 13, "alternatively": [13, 766], "git": [13, 41], "clone": [13, 41], "/unzip": 13, "zip": [13, 829], "repository": 13, "pip": [13, 14, 41, 820], "off": 13, "setup": [13, 353, 370], ".py": [13, 819, 822], "all": [13, 16, 23, 49, 88, 93, 106, 119, 141, 147, 149, 200, 206, 207, 217, 220, 224, 233, 234, 242, 244, 245, 248, 332, 358, 420, 429, 440, 445, 460, 479, 489, 492, 500, 537, 567, 570, 604, 613, 701, 727, 729, 745, 748, 826], "drivers": [13, 27, 30, 42, 278, 285, 332, 377, 812], "currently": [13, 23, 150, 210, 215, 223, 243, 489, 523], "interfaced": 13, "enough": [13, 460, 468, 473], "unlike": 13, "computed": [13, 42, 77, 93, 106, 130, 131, 139, 170, 179, 182, 246, 304, 460, 502, 514, 522, 527, 739, 740, 758, 765, 775, 821, 822, 824, 826], "sufficient": 13, "dipole": [13, 27, 42, 519, 593, 597, 598, 599, 739, 741, 742, 743, 745, 746, 751, 754, 757, 760, 761, 795, 805, 821, 822], "moment": [13, 23, 27, 358, 593, 597, 598, 599, 739, 741, 742, 743, 751, 754, 757, 760, 761, 821, 822], "only": [13, 23, 36, 48, 63, 70, 77, 147, 150, 167, 175, 176, 179, 188, 193, 210, 215, 217, 220, 223, 224, 233, 243, 244, 246, 358, 413, 435, 445, 489, 499, 513, 572, 581, 658, 680, 768, 791, 804, 812, 825, 826], "does": [13, 15, 49, 54, 64, 149, 151, 210, 215, 224, 248, 313, 408, 479, 489, 500, 581, 625, 651, 669, 768, 780, 813], "allow": [13, 15, 354, 371, 651], "preferred": 14, "method": [14, 15, 45, 46, 49, 52, 131, 147, 148, 152, 165, 166, 192, 200, 207, 210, 215, 223, 224, 234, 244, 245, 251, 293, 294, 298, 302, 305, 306, 340, 341, 344, 348, 349, 351, 354, 358, 362, 365, 366, 369, 371, 408, 420, 422, 429, 451, 469, 496, 502, 505, 506, 513, 514, 515, 522, 523, 527, 528, 567, 570, 579, 651, 658, 663, 671, 683, 684, 708, 711, 768, 812, 826], "package": [14, 41], "management": 14, "doing": [14, 57, 68, 90, 157, 163, 393], "so": [14, 15, 38, 39, 57, 68, 90, 175, 198, 224, 246, 247, 248, 393, 512, 513, 604, 641, 644, 651, 664, 676, 678, 680, 685, 795, 805, 814, 826], "integration": 15, "functions": [15, 16, 243, 257], "class": [15, 16, 23, 36, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 64, 66, 68, 70, 71, 73, 74, 77, 79, 82, 84, 88, 90, 91, 93, 97, 106, 110, 119, 126, 131, 141, 147, 150, 152, 158, 164, 167, 179, 191, 193, 195, 199, 201, 206, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 233, 234, 242, 243, 246, 257, 266, 275, 278, 280, 285, 287, 293, 294, 301, 304, 309, 313, 315, 323, 327, 332, 339, 344, 358, 377, 379, 382, 383, 389, 391, 393, 395, 397, 399, 401, 403, 405, 409, 411, 413, 427, 431, 440, 445, 460, 474, 479, 481, 483, 485, 489, 493, 494, 498, 500, 501, 513, 521, 523, 526, 531, 532, 537, 544, 549, 558, 560, 563, 565, 567, 571, 572, 576, 578, 581, 585, 593, 594, 601, 602, 613, 614, 618, 619, 625, 629, 641, 645, 648, 651, 657, 658, 666, 668, 671, 676, 680, 687, 688, 692, 694, 701, 702, 707, 709, 712, 715, 718, 725, 730, 738, 763, 766, 769, 773, 778, 780, 783, 791, 804, 806, 807, 810, 812, 814, 826], "5storable": 15, "args": 15, "kwargs": [15, 82, 93, 106, 166, 294, 296, 306, 310, 341, 349, 365, 383, 385], "\u30bd\u30fc\u30b9": [15, 16, 36, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 76, 77, 79, 82, 84, 86, 88, 90, 91, 93, 97, 105, 106, 110, 118, 119, 121, 123, 125, 126, 128, 130, 131, 133, 135, 136, 137, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 227, 233, 234, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 259, 260, 261, 262, 266, 271, 272, 273, 275, 278, 279, 280, 284, 285, 286, 287, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 323, 324, 325, 327, 332, 339, 340, 341, 342, 343, 344, 348, 349, 353, 354, 355, 358, 362, 365, 370, 371, 373, 377, 378, 379, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 460, 461, 462, 463, 464, 465, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 505, 506, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556, 558, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 580, 581, 585, 586, 587, 590, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 605, 606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 629, 630, 631, 639, 640, 641, 645, 648, 649, 650, 651, 654, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 714, 715, 718, 721, 722, 723, 724, 725, 727, 730, 732, 738, 749, 751, 752, 763, 766, 767, 768, 771, 773, 776, 778, 779, 780, 783, 785, 786, 787, 789, 791, 795, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818], "protocol": 15, "implemented": [15, 167, 176, 179, 188, 440, 523, 651, 671], "those": [15, 131, 224, 234, 812], "conversion": [15, 246, 249, 255, 512, 520], "static": [15, 166, 171, 183, 266, 284, 293, 302, 305, 306, 308, 310, 312, 340, 341, 343, 348, 349, 355, 362, 365, 373, 382, 408, 567, 585, 594, 602, 614, 619, 629, 648, 657, 660, 668, 688, 694, 702, 712, 718, 721], "_hdf": [15, 323, 826], "5py": [15, 266, 567, 585, 594, 602, 614, 619, 629, 648, 657, 668, 688, 694, 702, 712, 718, 819, 822, 826], "_group": [15, 266, 567, 585, 594, 602, 614, 619, 629, 648, 657, 668, 688, 694, 702, 712, 718, 826], "constructs": [15, 27, 30, 224, 266, 421, 430, 468, 473, 567, 571, 585, 594, 601, 602, 605, 614, 619, 629, 648, 657, 668, 671, 688, 692, 694, 702, 712, 718], "new": [15, 93, 106, 210, 215, 223, 246, 261, 262, 266, 272, 315, 324, 420, 425, 435, 443, 453, 471, 567, 585, 594, 602, 614, 619, 629, 648, 656, 657, 668, 683, 688, 694, 702, 712, 718, 725, 811, 813, 822, 823], "instance": [15, 38, 39, 52, 75, 85, 93, 102, 104, 106, 115, 117, 142, 147, 164, 166, 216, 217, 220, 224, 233, 234, 242, 243, 246, 247, 266, 273, 303, 323, 494, 505, 512, 515, 520, 523, 528, 552, 567, 570, 575, 579, 585, 586, 592, 594, 595, 600, 602, 603, 604, 612, 614, 615, 617, 619, 620, 624, 629, 630, 640, 648, 650, 654, 656, 657, 662, 667, 668, 674, 677, 683, 688, 689, 693, 694, 695, 699, 702, 703, 706, 712, 714, 718, 723, 725, 795, 805, 811, 813, 823], "provided": [15, 27, 42, 49, 53, 61, 62, 67, 84, 88, 94, 107, 124, 246, 248, 257, 266, 273, 304, 309, 310, 313, 479, 549, 567, 570, 575, 585, 586, 592, 594, 595, 600, 602, 603, 604, 612, 614, 615, 617, 619, 620, 624, 629, 630, 640, 648, 650, 651, 657, 662, 668, 674, 688, 689, 694, 695, 699, 702, 703, 706, 712, 714, 718, 723, 812, 813], "group": [15, 266, 273, 565, 566, 567, 568, 570, 575, 576, 577, 585, 592, 594, 600, 602, 612, 614, 616, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 688, 694, 699, 702, 705, 706, 712, 714, 718, 723, 826], "expected": [15, 581, 591, 625, 829], "handle": [15, 572], "backwards": 15, "compatibility": 15, "means": [15, 244, 245, 445, 571], "even": [15, 77, 198, 224, 247, 249, 768, 812], "version": [15, 46, 258, 572, 653, 710, 716, 768, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "value": [15, 16, 46, 61, 67, 77, 94, 101, 107, 131, 139, 151, 153, 156, 159, 162, 164, 165, 169, 181, 191, 192, 194, 200, 202, 206, 207, 216, 246, 248, 257, 275, 280, 287, 327, 332, 344, 358, 379, 401, 413, 424, 445, 460, 537, 560, 563, 581, 641, 651, 666, 707, 708, 709, 711, 715, 768, 803, 812, 823, 825], "incremented": 15, "older": 15, "_version": [15, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "__": [15, 44, 45, 224, 234, 358, 413, 476, 477, 478, 820, 826, 827], "encountered": [15, 658, 722], "scenarios": 15, "impossible": 15, "due": [15, 23, 49, 93, 106, 248, 420, 429, 768], "entire": 15, "restructuring": 15, "raise": 15, "qiskitnatureerror": [15, 49, 54, 64, 121, 133, 138, 142, 143, 147, 149, 166, 191, 217, 218, 220, 221, 226, 227, 237, 284, 301, 304, 306, 309, 310, 313, 314, 325, 339, 341, 344, 353, 354, 358, 370, 371, 408, 445, 579, 586, 595, 603, 615, 620, 630, 665, 679, 686, 689, 695, 703, 722, 724, 812, 813], "furthermore": [15, 217, 220], "encounters": 15, "number": [15, 27, 30, 38, 39, 46, 49, 80, 147, 164, 178, 190, 191, 199, 203, 205, 206, 211, 214, 216, 217, 218, 220, 221, 223, 224, 229, 230, 233, 234, 239, 242, 243, 244, 245, 246, 250, 253, 350, 358, 367, 395, 401, 405, 408, 409, 411, 413, 424, 428, 431, 432, 433, 435, 436, 438, 445, 454, 460, 466, 467, 468, 473, 496, 502, 510, 514, 517, 518, 519, 522, 526, 527, 552, 555, 558, 559, 572, 581, 588, 618, 622, 625, 632, 633, 634, 639, 651, 656, 658, 660, 667, 670, 684, 692, 693, 696, 704, 707, 709, 713, 715, 721, 722, 756, 768, 777, 791, 797, 801, 804, 812, 813, 815, 816, 818, 821, 826, 828, 829], "greater": 15, "than": [15, 49, 147, 248, 445, 613, 651, 701, 715, 813, 819, 822], "(i": 15, "newer": 15, "attempt": [15, 124], "instead": [15, 95, 96, 98, 99, 103, 104, 109, 111, 112, 116, 117, 309, 451, 469, 814, 819, 822], "\u30d1\u30e9\u30e1\u30fc\u30bf": [15, 16, 46, 49, 51, 52, 54, 58, 60, 61, 64, 66, 67, 71, 74, 77, 79, 82, 84, 88, 91, 93, 97, 106, 110, 121, 133, 143, 147, 149, 150, 151, 153, 154, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 199, 200, 202, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 220, 221, 223, 224, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 259, 260, 261, 262, 266, 271, 272, 273, 293, 294, 301, 302, 304, 306, 309, 310, 313, 315, 318, 323, 324, 339, 341, 344, 349, 358, 365, 382, 383, 390, 392, 394, 395, 396, 398, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 421, 425, 427, 428, 430, 431, 443, 445, 453, 460, 468, 471, 473, 475, 479, 481, 482, 484, 485, 489, 493, 499, 500, 501, 505, 506, 512, 513, 515, 516, 520, 521, 523, 524, 526, 528, 532, 535, 537, 540, 544, 546, 547, 548, 549, 551, 552, 556, 558, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 578, 579, 581, 585, 586, 587, 592, 593, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606, 612, 614, 615, 617, 618, 619, 620, 621, 624, 625, 629, 630, 631, 640, 645, 648, 650, 651, 654, 656, 657, 658, 660, 662, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 679, 680, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 702, 703, 706, 707, 708, 709, 711, 712, 714, 715, 718, 721, 723, 766, 767, 771, 778, 779, 780, 783, 789, 791, 795, 804, 805, 811, 812, 813, 814, 815, 816, 817, 818, 825, 828], "\u623b\u308a\u5024": [15, 16, 36, 47, 48, 49, 51, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 67, 68, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 218, 219, 221, 222, 227, 228, 230, 231, 232, 237, 238, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 284, 286, 293, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317, 318, 319, 321, 322, 324, 325, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 382, 384, 385, 386, 387, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 446, 447, 448, 450, 451, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 475, 480, 482, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 533, 534, 535, 536, 538, 539, 541, 542, 543, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 559, 561, 562, 566, 567, 568, 569, 570, 573, 574, 575, 577, 579, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 646, 647, 648, 649, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 683, 684, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 708, 711, 712, 714, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 785, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 808, 809, 811, 813, 815, 816, 817, 818, 826], "parent": [15, 273, 570, 575, 592, 600, 612, 617, 624, 640, 650, 662, 674, 699, 706, 714, 723, 826], "uses": [15, 84, 304, 663, 707, 768], "convention": [15, 658], "storing": [15, 38, 39, 216, 457, 458, 459, 651, 676, 680], "_module": 15, "_class": 15, "attributes": [15, 46, 49, 52, 54, 56, 60, 64, 66, 73, 77, 82, 88, 93, 106, 119, 126, 131, 141, 206, 210, 211, 215, 216, 217, 220, 223, 224, 233, 234, 242, 243, 246, 257, 275, 280, 287, 294, 315, 323, 327, 332, 344, 358, 379, 383, 389, 391, 393, 395, 397, 399, 401, 403, 405, 409, 411, 413, 431, 440, 445, 460, 479, 485, 489, 493, 500, 501, 513, 521, 526, 532, 537, 544, 549, 558, 560, 563, 565, 571, 576, 578, 581, 593, 601, 613, 618, 625, 641, 645, 651, 666, 676, 680, 687, 692, 701, 707, 709, 715, 725, 730, 738, 763, 766, 773, 780, 783, 791, 804, 806, 807], "handling": 15, "runtime": [15, 49, 791, 795, 804, 805, 808], "attribute": [15, 131, 687, 692], "-dependent": 15, "coupled": [15, 224, 234], "itself": [15, 27, 48, 70, 537, 558, 560, 563, 565], "own": [15, 572, 671], "implementation": [15, 154, 157, 160, 163, 170, 182, 186, 202, 391, 658], "deal": 15, "changes": [15, 204, 572], "enforced": 15, "duration": 15, "lifetime": 15, "potential": [15, 147, 152, 158, 164, 167, 169, 170, 171, 175, 179, 182, 183, 197, 198, 204, 482, 484, 536, 548, 812, 823, 828], "deprecation": 15, "removal": 15, ").": [15, 23, 61, 67, 93, 106, 147, 151, 165, 167, 172, 175, 177, 178, 179, 184, 189, 190, 192, 194, 200, 202, 207, 215, 224, 244, 246, 315, 417, 420, 425, 435, 443, 449, 453, 460, 464, 471, 489, 568, 571, 593, 601, 651, 669, 670, 680, 696, 715, 812, 820, 826, 827, 829], "none": [15, 16, 46, 49, 53, 54, 57, 58, 61, 62, 64, 68, 71, 77, 82, 90, 91, 93, 94, 95, 98, 100, 101, 106, 107, 108, 111, 113, 121, 124, 127, 128, 129, 133, 138, 142, 143, 145, 147, 148, 149, 150, 154, 160, 170, 182, 188, 191, 199, 206, 210, 211, 215, 217, 220, 223, 224, 226, 228, 231, 233, 234, 238, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 273, 294, 302, 305, 306, 309, 310, 324, 340, 341, 348, 349, 358, 362, 365, 371, 383, 413, 422, 424, 425, 427, 431, 443, 445, 451, 453, 469, 471, 481, 501, 508, 509, 513, 526, 540, 547, 551, 564, 566, 568, 569, 570, 573, 575, 581, 587, 592, 593, 596, 600, 601, 604, 606, 612, 617, 621, 624, 625, 631, 640, 645, 650, 651, 656, 658, 660, 662, 666, 667, 670, 672, 674, 675, 676, 680, 683, 684, 687, 690, 692, 693, 696, 697, 699, 706, 708, 711, 714, 721, 723, 732, 736, 771, 783, 789, 790, 791, 795, 804, 805, 812, 814, 826, 827], "_from": [15, 826, 828], "filename": 15, "skip": 15, "_unreadable": 15, "_data": [15, 827], "false": [15, 70, 77, 82, 211, 217, 220, 224, 233, 244, 246, 248, 324, 395, 401, 405, 409, 411, 540, 551, 556, 564, 593, 708, 711, 767, 771, 779, 789, 791, 803, 804, 823, 828], "loads": 15, "single": [15, 61, 67, 131, 151, 197, 217, 219, 220, 222, 224, 234, 243, 244, 245, 248, 309, 313, 315, 358, 393, 445, 505, 515, 523, 528, 537, 560, 563, 651, 656, 658, 664, 676, 678, 680, 685, 722], "my": [15, 224], "_driver": [15, 526, 826], "_result": [15, 302, 494, 506, 516, 524, 529, 823, 825, 826, 827], "(\"": [15, 413, 445, 821, 822, 823, 824, 825, 827, 829], ".hdf": [15, 323, 324], "\")": [15, 413, 820, 821, 822, 823, 824, 825, 826, 827, 829], "note": [15, 49, 54, 64, 82, 147, 151, 164, 217, 218, 220, 221, 224, 358, 445, 513, 601, 625, 766, 768], ".file": [15, 819, 822], "could": 15, "theory": [15, 131], "store": [15, 26, 791, 802, 804, 827], "one": [15, 16, 23, 42, 151, 164, 166, 210, 211, 215, 218, 221, 223, 244, 245, 246, 247, 323, 331, 358, 421, 445, 460, 468, 491, 505, 512, 523, 581, 604, 625, 645, 651, 676, 680, 766, 810, 811, 812, 826, 827], "save": [15, 323, 572, 766, 771, 789], "_to": [15, 16, 175, 323, 824], "always": [15, 93, 106, 224, 259, 260, 271, 435, 523, 826], "aligned": 15, "str": [15, 16, 49, 53, 54, 57, 58, 61, 62, 64, 67, 68, 71, 88, 89, 90, 91, 148, 149, 166, 191, 224, 228, 234, 238, 246, 248, 251, 256, 257, 259, 260, 261, 262, 263, 267, 271, 272, 284, 294, 295, 296, 301, 302, 308, 312, 323, 343, 344, 345, 349, 355, 358, 359, 360, 363, 365, 366, 373, 375, 376, 383, 384, 385, 413, 445, 455, 460, 472, 475, 479, 480, 482, 484, 489, 499, 500, 501, 505, 507, 511, 515, 519, 523, 525, 528, 530, 535, 547, 565, 568, 571, 574, 576, 577, 578, 580, 590, 599, 616, 623, 639, 656, 673, 677, 683, 691, 698, 705, 731, 734, 736, 746, 747, 749, 766, 767, 768, 771, 772, 776, 779, 780, 789, 791, 795, 798, 799, 804, 805, 808, 809, 815, 816, 826], "bool": [15, 16, 36, 48, 63, 70, 76, 77, 78, 81, 82, 83, 87, 99, 112, 147, 199, 210, 211, 215, 217, 219, 220, 222, 223, 224, 233, 244, 246, 248, 254, 318, 319, 324, 395, 401, 405, 406, 409, 411, 428, 431, 433, 441, 491, 502, 505, 514, 515, 522, 523, 527, 528, 540, 551, 556, 564, 598, 649, 708, 711, 751, 757, 767, 771, 779, 780, 789, 791, 797, 802, 803, 804, 814], "true": [15, 16, 70, 147, 199, 210, 215, 223, 224, 233, 244, 248, 309, 318, 319, 324, 401, 428, 431, 708, 711, 771, 780, 789, 803, 814, 823, 828, 829], "unreadable": 15, "errors": [15, 44], "documented": 15, "skipped": 15, "raising": [15, 445, 460], "constructed": [15, 49, 54, 64, 224, 323, 673, 687, 692], "\u4f8b\u5916": [15, 49, 54, 64, 121, 127, 129, 130, 133, 138, 142, 143, 147, 149, 166, 167, 176, 179, 188, 191, 210, 215, 216, 217, 218, 220, 221, 223, 226, 227, 237, 250, 257, 284, 293, 301, 304, 305, 306, 309, 310, 313, 314, 315, 324, 325, 339, 340, 341, 344, 348, 353, 354, 358, 362, 370, 371, 382, 408, 413, 427, 431, 445, 460, 479, 523, 533, 537, 546, 549, 563, 579, 586, 595, 603, 605, 615, 620, 630, 651, 658, 665, 669, 671, 672, 677, 679, 683, 684, 686, 689, 695, 703, 708, 711, 715, 722, 724, 732, 771, 789, 795, 805, 812, 813], "non": [15, 413, 445, 549, 636, 637, 812, 826], "-native": 15, "outside": 15, "import": [15, 16, 93, 106, 244, 413, 445, 537, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "failure": 15, "occurs": 15, "because": [15, 243, 445, 636, 637, 658, 671], "implement": [15, 579, 709], "were": [15, 43, 255, 497, 766, 768], "obj": 15, "replace": [15, 324, 771, 789, 825], "how": [15, 41, 77, 191, 224, 234, 248, 460, 505, 515, 523, 528], "result": [15, 16, 38, 39, 49, 61, 67, 77, 149, 247, 313, 314, 315, 494, 501, 506, 513, 516, 524, 526, 529, 569, 579, 581, 586, 587, 593, 595, 596, 601, 603, 606, 615, 620, 621, 630, 631, 669, 672, 689, 690, 695, 697, 703, 725, 730, 732, 734, 736, 737, 738, 749, 751, 752, 763, 764, 766, 769, 770, 773, 774, 776, 780, 795, 805, 806, 807, 821, 823, 826, 827], "produced": [15, 26, 94, 100, 107, 113, 244, 279, 286, 300, 307, 311, 342, 353, 370, 378, 388, 579, 812], ".run": [15, 825, 826], "()": [15, 54, 58, 64, 71, 91, 93, 106, 131, 135, 148, 149, 150, 157, 163, 175, 179, 210, 215, 223, 224, 234, 246, 248, 249, 250, 253, 255, 266, 273, 323, 413, 493, 505, 513, 515, 523, 528, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 688, 694, 699, 702, 706, 712, 714, 718, 723, 766, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "besides": 15, "ability": 15, "integrals": [15, 27, 38, 39, 42, 131, 304, 604, 605, 607, 610, 641, 651, 658, 663, 664, 665, 670, 673, 675, 676, 678, 679, 680, 685, 686, 687, 692, 696, 709, 715, 719, 722, 724, 812], "onebodyelectronicintegrals": [15, 605, 671, 683, 826], "(electronicbasis": [15, 826], ".ao": [15, 812, 826], "np": [15, 457, 458, 459, 656, 677, 683, 822, 823, 824, 825, 826, 828, 829], ".random": [15, 823, 825, 827], "((": [15, 244, 445, 823, 826], "))": [15, 93, 106, 244, 257, 413, 417, 445, 449, 464, 819, 823, 824, 825, 826, 828, 829], ", none": 15, "_energy": [15, 124, 131, 302, 601, 762, 823, 824, 825, 826], "([": [15, 16, 413, 445, 784, 823, 826, 827, 828], "],": [15, 49, 53, 54, 57, 58, 61, 62, 64, 68, 71, 77, 78, 83, 90, 91, 148, 149, 211, 212, 218, 221, 224, 244, 245, 248, 251, 413, 445, 502, 505, 511, 514, 515, 519, 522, 523, 525, 527, 528, 530, 577, 580, 590, 599, 616, 623, 639, 673, 678, 691, 698, 705, 731, 795, 805, 819, 821, 822, 823, 824, 825, 826, 828, 829], "reference": [15, 121, 123, 124, 131, 133, 135, 138, 215, 223, 224, 339, 391, 420, 429, 601, 611, 824, 825], "=-": 15, "_electronic": 15, "whether": [15, 36, 48, 63, 70, 76, 77, 81, 82, 86, 87, 105, 118, 147, 210, 215, 217, 219, 220, 222, 223, 224, 233, 244, 246, 247, 248, 309, 318, 319, 401, 431, 433, 441, 581, 593, 598, 625, 649, 751, 752, 791, 797, 802, 803, 804, 814], "forcefully": 15, "fileexistserror": [15, 771, 789], "exists": [15, 224, 658, 732, 771, 789], "overwriting": 15, "enabled": [15, 814], "utilities": 16, "qiskitnaturelogging": 16, "encapsulating": 16, "basic": [16, 211, 234, 244, 413, 445, 460, 826], "_logging": 16, ".set": [16, 413, 651, 715, 824, 828, 829], "_levels": 16, "_for": 16, "_names": 16, "{\"": [16, 823], "\":": [16, 823, 825, 826], ".debug": 16, "})": [16, 827], "print": [16, 93, 106, 413, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829], "stdout": 16, "debug": 16, "formatted": [16, 358, 749, 776], "logs": [16, 573], "domains": 16, "included": [16, 38, 39, 88, 89, 212], "current": [16, 148, 149, 168, 172, 174, 177, 178, 180, 184, 187, 189, 190, 251, 789, 791, 804, 826], "levels": [16, 201], "dict": [16, 36, 49, 53, 54, 57, 58, 61, 62, 64, 67, 68, 71, 90, 91, 148, 149, 151, 165, 192, 194, 200, 207, 248, 251, 294, 296, 349, 365, 383, 385, 505, 511, 515, 519, 523, 525, 528, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 725, 729, 731, 734, 736, 746, 747, 791, 795, 798, 804, 805, 809, 823, 828], ".get": [16, 93, 106, 819, 821, 822, 823, 824, 825, 827], "\",": [16, 413, 445, 493, 819, 821, 822, 823, 824, 825, 826, 827], "\"]": [16, 823, 825, 826], "dictionary": [16, 36, 61, 67, 148, 151, 164, 165, 192, 194, 200, 207, 316, 358, 593, 601, 666, 667, 693, 791, 795, 798, 804, 805, 823, 825], "key": [16, 151, 164, 165, 192, 194, 200, 207, 791, 804, 823], "domain": 16, "string": [16, 88, 284, 301, 309, 313, 315, 316, 344, 358, 413, 445, 460, 475, 479, 482, 484, 489, 500, 768, 826], "exist": [16, 479, 489, 500], "remove": [16, 814], "handler": 16, "formatter": 16, "write": [16, 224, 234, 505, 515, 523, 528, 571], ".log": [16, 820, 821, 826], "_file": [16, 766, 819, 822, 827], "},": [16, 215, 435, 820, 822, 827, 828, 829], "=\"": [16, 413, 819, 820, 821, 822, 823, 824, 825, 826, 827], "mode": [16, 166, 177, 186, 189, 197, 202, 205, 234, 242, 243, 245, 408, 413, 420, 429, 445, 460, 468, 473, 526, 530, 691, 707, 708, 709, 711, 713, 777, 819, 821, 822], "append": 16, "_handler": 16, "optional": [16, 46, 53, 57, 61, 62, 68, 77, 78, 83, 90, 91, 93, 94, 95, 96, 98, 100, 101, 103, 106, 107, 108, 109, 111, 113, 114, 116, 147, 151, 154, 160, 170, 182, 191, 192, 194, 200, 207, 210, 211, 212, 213, 214, 215, 217, 220, 223, 233, 242, 244, 247, 248, 249, 250, 251, 253, 256, 257, 265, 268, 270, 294, 296, 299, 302, 349, 358, 365, 383, 385, 387, 425, 428, 431, 443, 445, 453, 471, 481, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 519, 520, 522, 523, 525, 526, 527, 530, 540, 547, 551, 564, 566, 568, 577, 580, 581, 590, 591, 593, 595, 597, 599, 601, 604, 607, 608, 609, 610, 611, 616, 623, 639, 645, 656, 666, 670, 673, 676, 680, 683, 687, 691, 692, 696, 698, 705, 708, 711, 731, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 771, 774, 775, 777, 783, 786, 790, 791, 793, 795, 796, 800, 804, 805, 809, 812, 814, 823], "names": [16, 49, 54, 64, 332, 358, 641, 795, 805], "list": [16, 36, 49, 53, 54, 57, 58, 61, 62, 64, 67, 68, 71, 77, 78, 83, 88, 89, 90, 91, 119, 122, 134, 141, 144, 147, 148, 149, 151, 154, 160, 164, 165, 170, 175, 182, 192, 194, 200, 207, 211, 212, 218, 221, 224, 226, 227, 228, 231, 234, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 251, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 272, 302, 309, 313, 315, 317, 320, 321, 322, 344, 358, 408, 413, 427, 444, 445, 455, 460, 466, 468, 472, 473, 479, 489, 491, 492, 497, 500, 501, 502, 505, 511, 512, 513, 514, 515, 519, 520, 522, 523, 525, 526, 527, 528, 530, 552, 556, 557, 577, 580, 590, 599, 616, 623, 639, 666, 673, 691, 692, 698, 705, 715, 725, 726, 728, 731, 734, 736, 739, 741, 742, 743, 745, 746, 749, 753, 756, 758, 759, 760, 761, 766, 776, 777, 780, 783, 786, 790, 795, 805, 812, 814, 816, 823, 826, 828], ".drivers": [16, 578, 819, 820, 821, 822, 823, 824, 825, 826], ".algorithms": [16, 93, 106, 502, 514, 522, 527, 821, 822, 823, 824, 825, 827, 828], "int": [16, 46, 77, 80, 88, 89, 95, 108, 147, 150, 177, 178, 186, 189, 191, 193, 197, 199, 202, 205, 206, 209, 211, 214, 215, 217, 218, 220, 221, 224, 228, 230, 233, 234, 238, 242, 244, 245, 246, 247, 249, 250, 253, 256, 257, 259, 260, 261, 262, 264, 269, 271, 272, 302, 309, 344, 347, 350, 352, 358, 361, 367, 368, 372, 413, 421, 423, 424, 430, 431, 442, 445, 446, 460, 466, 467, 468, 470, 473, 497, 500, 505, 510, 512, 515, 517, 518, 520, 523, 526, 528, 537, 539, 543, 552, 555, 558, 559, 560, 561, 562, 563, 581, 588, 618, 622, 625, 632, 633, 635, 658, 659, 660, 670, 684, 696, 700, 704, 708, 711, 720, 721, 766, 783, 791, 801, 804, 812, 814, 815, 816, 817, 819, 820, 826, 828], "mapping": [16, 52, 217, 220, 224, 233, 234, 242, 246, 316, 389, 391, 397, 399, 401, 403, 406, 505, 515, 523, 528, 593, 601, 641, 645, 651, 676, 680, 722, 825], "effective": [16, 812], "'a": 16, "specified": [16, 149, 151, 164, 166, 192, 194, 200, 207, 210, 224, 227, 237, 244, 245, 247, 427, 431, 445, 505, 515, 523, 528, 547, 563, 708, 711, 789, 812, 814], "filehandler": 16, "_all": 16, "_handlers": 16, "handlers": 16, "_default": [16, 77, 82, 821, 822], "default": [16, 27, 30, 46, 77, 81, 82, 84, 87, 93, 101, 106, 154, 155, 156, 160, 161, 162, 168, 170, 173, 174, 180, 182, 185, 187, 191, 200, 202, 207, 210, 215, 217, 220, 223, 224, 234, 244, 246, 248, 358, 413, 425, 443, 445, 453, 471, 502, 505, 514, 515, 522, 523, 527, 528, 658, 771, 789, 791, 804, 814, 819, 822], "desired": [16, 79, 147, 257], "stream": 16, "different": [19, 358, 651, 823], "systems": [19, 42, 217, 220, 812], "folded": [23, 767, 779, 827], "consists": [23, 224, 413], "optionally": [23, 121, 133, 138, 257, 309, 403], "chains": [23, 478, 489, 491, 492, 768, 780], "attached": [23, 489, 500], "bead": [23, 479, 489, 500, 768, 790], "beads": [23, 474, 479, 481, 483, 485, 486, 489, 493, 498, 500], "modeled": [23, 489], "elongating": [23, 489], "corresponding": [23, 131, 149, 173, 185, 390, 392, 394, 396, 398, 400, 404, 407, 408, 410, 412, 427, 445, 460, 468, 472, 473, 489, 567, 601, 780, 826], "second": [23, 42, 46, 57, 60, 66, 68, 74, 84, 90, 97, 110, 121, 131, 133, 211, 216, 218, 221, 244, 245, 246, 247, 248, 249, 251, 358, 390, 392, 394, 396, 398, 400, 402, 404, 407, 408, 410, 412, 440, 511, 513, 515, 519, 521, 525, 530, 535, 547, 576, 577, 578, 580, 590, 599, 616, 623, 625, 639, 673, 676, 680, 687, 691, 692, 698, 705, 708, 709, 711, 715, 722, 768, 771, 789, 818, 819, 820, 826, 828], "saving": 23, "encoding": [23, 49, 51, 54, 57, 58, 64, 68, 71, 74, 79, 84, 90, 91, 97, 110, 401, 402, 491, 496, 501, 513, 526, 766, 783], "loss": [23, 825], "generality": 23, "symmetry": [23, 52, 217, 220, 224, 233, 234, 242, 246, 247, 248, 302, 395, 405, 406, 409, 411, 505, 512, 515, 520, 523, 528, 768], "arguments": [23, 82, 93, 106, 131, 157, 163, 166, 210, 215, 223, 224, 519, 530, 604, 812], "paper": [23, 489], "cited": [23, 489], "encode": [23, 768], "about": [23, 27, 41, 49, 224, 489, 780, 789, 822], "moreover": 23, "characterized": [23, 489], "letter": [23, 489], "encodes": [23, 460, 489, 768], "residue": [23, 475, 476, 480, 482, 484, 489, 499, 827], "defines": [23, 207, 257, 460, 468, 473, 489, 493, 709], "unless": [23, 244, 248, 489, 684, 812], "random": [23, 489, 498, 499, 791, 804, 827, 829], "involving": 23, "nearest": [23, 485, 486], "neighbors": 23, "length": [23, 93, 106, 248, 257, 408, 413, 421, 423, 430, 442, 445, 452, 460, 468, 470, 473, 479, 489, 499, 500, 537, 560, 561, 562, 563, 658, 715, 768, 812, 826, 828, 829], "simplifying": [23, 489], "assumption": [23, 489], "generalization": 23, "approach": [23, 413], "investigation": 23, "constraints": [23, 215, 435, 493], "feasible": [23, 77], "folds": 23, "incorporated": 23, "objective": [23, 768, 827], "terms": [23, 210, 215, 223, 413, 425, 426, 431, 432, 436, 443, 445, 453, 471, 485, 535, 547, 601, 651, 658, 667, 670, 671, 692, 693, 696, 715, 722, 826, 828, 829], "whose": [23, 27, 30, 149, 259, 260, 271, 601, 692, 815, 828], "importance": 23, "regulated": 23, "penaltyparameters": [23, 493, 827], "final": [23, 49, 645, 680, 826, 829], "registers": [23, 413], "meaning": [23, 246, 413, 445, 460, 569, 571, 587, 596, 606, 621, 631, 672, 690, 697], "qubits": [23, 211, 214, 246, 395, 401, 402, 405, 409, 411, 496, 497, 766, 768], "tensored": 23, "conformation": [23, 827], "),": [23, 167, 179, 244, 257, 358, 401, 413, 445, 496, 537, 680, 814, 819, 821, 823, 824, 826, 827, 828], "further": [23, 27, 121, 133, 143, 248, 249, 354, 371], "broken": 23, "down": 23, "groups": [23, 567], "-main": 23, "-side": 23, "we": [23, 93, 106, 124, 198, 224, 520, 671, 768, 783, 795, 805, 825], "interaction": [23, 301, 481, 482, 483, 484, 493, 498, 499, 532, 533, 536, 546, 548, 828], "indexing": [23, 259, 260, 261, 262, 271, 272], "lower": [23, 211, 401], "_bead": [23, 500], "_position": 23, "_len": [23, 414, 446, 461, 500], "upper": [23, 401, 556, 824], "position": [23, 248, 257, 344, 460, 768, 790], "block": [23, 210, 211, 215, 244, 245, 401, 678], "index": [23, 41, 317, 321, 322, 413, 445, 500, 658, 684, 708, 711, 828], "indexed": [23, 131], "right": [23, 401, 485, 488, 768, 819, 820, 824], "left": [23, 401, 645, 768, 771, 789, 819, 820, 824], "details": [23, 27, 36, 61, 67, 266, 273, 332, 358, 427, 445, 483, 505, 515, 523, 528, 540, 551, 564, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 684, 688, 694, 699, 702, 706, 709, 712, 714, 718, 723, 812], "consult": 23, "robert": 23, "et": [23, 820, 824], "al": [23, 820, 824], ".,": [23, 93, 106, 211, 234, 243, 707, 820, 828], "npj": [23, 827], "https": [23, 36, 41, 46, 216, 217, 220, 224, 301, 344, 358, 401, 420, 429, 489, 540, 551, 564, 565, 708, 768, 789, 812, 818, 819, 826, 827], ":/": [23, 36, 41, 46, 216, 217, 220, 224, 301, 304, 313, 339, 344, 358, 401, 420, 429, 489, 540, 551, 564, 565, 708, 768, 789, 812, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "www": [23, 339, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], ".nature": 23, ".com": [23, 41, 216, 304, 313, 344, 826], "/articles": 23, "/s": 23, "ships": 25, "commonly": [25, 27, 30, 210, 215], "evaluates": [25, 61, 67], "observables": [25, 148, 571, 752, 821, 822], "basedriver": [26, 285, 313, 323, 377, 501], "interpret": [26, 54, 58, 64, 71, 91, 494, 506, 516, 524, 529, 569, 587, 593, 596, 601, 606, 621, 631, 672, 690, 697, 769, 826], "raw": [26, 494, 506, 508, 509, 516, 524, 529, 571, 578, 579, 586, 595, 603, 604, 620, 630, 651, 666, 689, 695, 725, 729, 737, 764, 774, 823, 825, 827], "associated": [26, 511, 519, 577, 580, 616, 705, 715, 780, 808], "evaluated": [26, 27, 30, 148, 149, 153, 571, 708, 711, 791, 795, 803, 804, 805], "powerful": [26, 445], "through": [26, 30, 82, 149, 257, 426, 687, 692, 812], "insert": [26, 825], "they": [26, 149, 431, 445, 460, 803, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "desire": 26, "evaluate": [26, 49, 54, 57, 58, 61, 64, 67, 68, 71, 90, 91, 147, 148, 149, 159, 169, 181, 571, 625], "includes": [27, 30, 42, 49, 150, 193], "main": [27, 30, 49, 54, 64, 215, 479, 480, 489, 490, 493, 500, 501, 507, 601, 692, 768, 771, 780, 781, 783, 785, 788, 790, 795, 803, 805, 827], "primary": [27, 30, 826], "hamiltonian": [27, 30, 42, 150, 151, 215, 223, 431, 433, 435, 437, 485, 496, 519, 530, 531, 533, 535, 546, 547, 601, 663, 692, 707, 708, 711, 715, 724, 826, 829], "goal": [27, 30], "supports": [27, 42, 76, 86, 105, 118, 150, 246, 293, 294, 305, 340, 348, 358, 362, 413, 445, 460, 791, 803, 804, 825], "evaluation": [27, 46, 708, 711, 791, 804], "auxiliary": [27, 30, 43, 49, 53, 54, 57, 58, 62, 64, 68, 71, 76, 86, 90, 91, 105, 118, 148, 149, 625, 795, 803, 805, 826], "measure": 27, "particles": [27, 30, 38, 39, 216, 217, 220, 224, 229, 233, 244, 245, 246, 250, 253, 502, 510, 514, 517, 522, 527, 625, 752, 756, 821, 822], "simulation": [27, 391, 827, 829], "perform": [27, 150, 164, 199, 641, 829], "checks": [27, 43, 305, 340, 348, 362, 441, 814], "regards": 27, ".)": [27, 224, 234, 244, 245, 257, 505, 515, 523, 528, 821, 822], "particle": [27, 211, 223, 224, 233, 244, 431, 432, 433, 435, 436, 440, 442, 445, 452, 519, 581, 625, 639, 795, 805, 825, 826, 829], "conservation": 27, "especially": 27, "important": 27, "ansatz": [27, 46, 49, 93, 94, 97, 106, 107, 110, 119, 120, 121, 122, 127, 128, 131, 132, 133, 134, 141, 142, 143, 144, 211, 214, 217, 218, 220, 221, 224, 231, 233, 234, 240, 242, 244, 791, 792, 804, 821, 825, 827], "-conserving": 27, "ensure": [30, 119, 120, 121, 131, 132, 133, 141, 142, 143, 814, 820], "physical": [30, 821], "being": [30, 49, 54, 64, 150, 193, 243, 502, 513, 514, 522, 527, 625, 641, 658, 676, 680, 715], "conserved": 30, "extend": 33, "aspects": 33, "proteinfoldingresult": [34, 494, 778, 783], "embed": [35, 401], "algorithmic": 35, "interfaces": 35, "usage": [35, 253, 255], "scripts": 35, "cloud": [35, 804], "qiskitnaturesettings": 36, "global": 36, "_aux": [36, 149, 511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 823], "_operators": [36, 49, 54, 58, 64, 71, 91, 149, 511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 795, 805, 823, 826], "aux": [36, 49, 53, 54, 57, 58, 62, 64, 68, 71, 77, 90, 91, 149, 731, 752, 795, 803, 805, 820, 821, 822, 823, 826, 827], "-based": [36, 43, 413, 445], "optimize": 36, "_einsum": 36, "returns": [36, 47, 48, 51, 55, 59, 63, 65, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 92, 95, 96, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 115, 116, 117, 118, 130, 155, 156, 157, 161, 162, 163, 168, 172, 173, 174, 177, 178, 180, 184, 185, 186, 187, 189, 190, 196, 202, 203, 205, 208, 209, 257, 279, 286, 300, 303, 307, 311, 326, 342, 345, 347, 350, 352, 356, 357, 359, 361, 363, 364, 366, 367, 368, 369, 372, 374, 375, 376, 378, 388, 401, 406, 416, 420, 425, 427, 429, 443, 444, 448, 453, 463, 466, 471, 472, 480, 486, 487, 488, 490, 491, 492, 494, 495, 497, 502, 503, 504, 507, 508, 509, 510, 511, 514, 517, 518, 519, 520, 522, 525, 527, 530, 574, 577, 580, 584, 588, 589, 590, 591, 597, 598, 599, 607, 608, 609, 610, 611, 616, 622, 623, 628, 632, 633, 634, 635, 636, 637, 638, 639, 646, 647, 649, 655, 658, 659, 661, 673, 684, 691, 698, 700, 704, 705, 713, 717, 719, 720, 726, 727, 728, 729, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 768, 769, 770, 772, 774, 775, 777, 780, 781, 782, 786, 787, 788, 790, 793, 794, 796, 797, 802, 818], "setting": [36, 99, 112, 122, 131, 134, 144, 200, 224, 246, 257, 358, 604, 828], ".einsum": [36, 656, 677, 683], "(optimize": 36, "=\u2026": 36, "calls": [36, 795, 805], "operands": 36, "refer": [36, 46, 215, 217, 220, 224, 233, 234, 242, 358, 460, 505, 515, 523, 528, 651, 709, 812], ".org": [36, 46, 217, 220, 224, 301, 339, 358, 401, 420, 429, 489, 540, 551, 564, 565, 708, 768, 789, 812, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "/doc": 36, "/stable": 36, "/reference": 36, "/generated": 36, "/numpy": 36, ".html": [36, 46, 540, 551, 564, 819], "act": [38, 39, 460], "produce": [38, 39, 302, 314], "altered": [38, 39, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "copy": [38, 39, 550, 553, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "transformer": [38, 39, 812, 814], "freezecoretransformer": [38, 39], "alter": [38, 39], "freezes": [38, 39], "core": [38, 39, 302, 814, 816], "orbitals": [38, 39, 138, 211, 215, 216, 217, 218, 220, 221, 224, 230, 233, 244, 245, 302, 518, 581, 588, 618, 622, 625, 636, 637, 645, 812, 813, 814, 816, 826], "compensate": [38, 39], "complete": [38, 39, 231, 240, 320, 797, 825], "\u305d\u306e": [41, 819, 820, 821, 824, 826, 827, 828], "\u30b5\u30dd\u30fc\u30c8": [41, 819, 829], "\u74b0\u5883": 41, "\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0": 41, "\u8a73\u8ff0": 41, "\u8aac\u660e": [41, 821, 822, 824, 826], "\u4e3b\u8981": 41, "\u30d1\u30c3\u30b1\u30fc\u30b8": 41, "\u4f9d\u5b58": [41, 819], "\u307e\u3059": [41, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829], "\u307e\u305a\u305d\u308c": 41, "\u53c2\u7167": [41, 210, 217, 220, 224, 243, 301, 358, 401, 707, 708, 812, 818, 819, 820, 821, 826, 827], "\u304f\u3060": [41, 819, 821, 822, 824, 825, 826, 827], "\u3055\u3044": [41, 819, 821, 822, 824, 825, 826, 827], "\u3053\u3053": [41, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829], "\u3059\u308b": [41, 819, 820, 821, 822, 825, 826, 827, 828, 829], "\u60c5\u5831": [41, 819, 820, 821, 822, 823, 824, 827], "\u5f93\u3063": 41, "\u56fa\u6709": [41, 820, 821, 822, 824, 825, 826, 827, 829], "\u8ffd\u52a0": [41, 820, 823, 826, 827], "\u3057\u307e\u3057\u3087": [41, 821, 825], "\u30c7\u30d5\u30a9\u30eb\u30c8": [41, 821, 822, 823], "\u30b3\u30fc\u30c9": [41, 819, 825, 827], "\u307e\u305f": [41, 819, 820, 821, 826, 827, 828], "\u30d7\u30ed\u30b0\u30e9\u30e0": [41, 820, 825], "\u3042\u308b\u3044": [41, 820, 821, 822, 824], "\u4e21\u65b9": 41, "\u306a\u3044": [41, 819, 820, 821, 822, 823, 827], "\u305d\u308c\u3089": [41, 829], "\u4f7f\u7528": [41, 819, 820, 822, 823, 824, 825, 826, 828, 829], "\u3067\u304d": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u3088\u3046": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u6a5f\u80fd": [41, 823, 826, 827], "\u3044\u304f\u3064\u304b": [41, 826], "\u3042\u308a": [41, 819, 820, 821, 822, 825, 826, 827, 828, 829], "\u4f8b\u3048": [41, 820, 823, 824, 826, 827], "\u5206\u5b50": [41, 819, 820, 821, 822], "\u554f\u984c": [41, 819, 820, 821, 822, 826], "\u306b\u5bfe\u3059\u308b": [41, 820], "\u53e4\u5178": [41, 819, 821, 822, 827, 829], "\u30e9\u30a4\u30d6\u30e9\u30ea": 41, "\u8a73\u7d30": [41, 819, 821, 822, 826, 827], "\u306b\u3064\u3044\u3066": [41, 819, 820, 821, 822, 823, 826, 828], "\u30ed\u30fc\u30ab\u30eb": [41, 825], "\u304b\u3089": [41, 820, 821, 822, 823, 824, 825, 827, 828, 829], "\u958b\u59cb": 41, "\u6700\u3082": [41, 820, 824], "\u7c21\u5358": [41, 820, 824, 825, 826], "\u65b9\u6cd5": [41, 819, 820, 823, 824, 826, 827, 828], "\u59cb\u3081\u308b": 41, "\u3053\u3068": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u4eee\u60f3": 41, "visualization": [41, 820], "\u540c\u69d8": [41, 820, 825, 826], "\u4ee5\u4e0b": [41, 819, 820, 821, 822, 824, 825, 826, 827, 829], "\u30ea\u30b9\u30c8": [41, 823, 826], "[nature": 41, "zsh": 41, "\u30e6\u30fc\u30b6\u30fc": [41, 823], "\u65b0\u3057\u3044": [41, 829], "\u30d0\u30fc\u30b8\u30e7\u30f3": [41, 826], "\u30c7\u30d5\u30a9\u30eb\u30c8\u30b7\u30a7\u30eb": 41, "\u5834\u5408": [41, 820, 821, 824, 825, 826, 827, 828, 829], "\u5f15\u7528": 41, "\u56f2\u3080": 41, "\u5fc5\u8981": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "]'": 41, "\u306b\u3088\u308a": [41, 820, 822, 823, 824, 825, 826, 827, 828], "pypi": 41, "\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc": 41, "\u4f7f\u3046": [41, 826, 827], "\u4ee3\u308f\u308a": [41, 829], "\u6700\u65b0": 41, "\u30a2\u30af\u30bb\u30b9": [41, 824, 825, 829], "\u3053\u308c": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u8abf\u67fb": 41, "\u305f\u308a": [41, 828], "\u62e1\u5f35": [41, 820, 826], "\u3088\u308a": [41, 819, 820, 824, 826, 827, 829], "\u52b9\u679c": 41, "\u3067\u304d\u308b": [41, 820, 825, 826], "\u306a\u308a": [41, 819, 820, 822, 824, 825, 826, 827], "\u304a\u308a": [41, 820, 821, 822, 824], "\u5909\u66f4": [41, 829], "\u65b0\u898f": 41, "\u3042\u308b": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u306e\u3067": [41, 819, 820, 821, 824, 827], "\u307e\u305a": [41, 819, 820, 821, 822, 825, 826], "\u6307\u793a": 41, "\u3060\u3055\u3044": [41, 819, 820, 826], "\u3082\u306e": [41, 824, 828, 829], "\u540c\u3058": [41, 820, 825, 826, 828], "\u958b\u767a": [41, 827], "\u30af\u30ed\u30fc\u30f3": 41, "github": [41, 216, 344, 826], "/qiskit": [41, 216, 819, 820, 826], "-nature": [41, 216, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], ".git": 41, "\u30ec\u30dd\u30b8\u30c8\u30ea\u30fc": 41, "\u3068\u3044\u3046": [41, 820, 821, 823, 824, 825], "\u540d\u524d": [41, 826], "\u30fb\u30d5\u30a9\u30eb\u30c0": 41, "\u4f5c\u6210": [41, 828, 829], "cd": 41, "\u3082\u3057": [41, 826], "\u30c6\u30b9\u30c8": [41, 823], "\u5b9f\u884c": [41, 819, 820, 821, 823, 825, 828, 829], "\u6587\u6cd5": 41, "\u30c1\u30a7\u30c3\u30af": [41, 821, 822], "\u305f\u3044": 41, "\u5411\u3051": 41, "requirements": [41, 651, 812], "-dev": 41, ".txt": [41, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "\u7de8\u96c6": 41, "\u53ef\u80fd": [41, 819, 820, 821, 822, 823, 824, 826, 827, 828], "\u30e2\u30fc\u30c9": [41, 820, 824], "\u30d7\u30ed\u30b8\u30a7\u30af\u30c8": 41, "\u306a\u3057": [41, 819, 820], "\u624b\u9806": [41, 823], "1\u4f53": 41, "\u7a4d\u5206": [41, 819, 820], "\u306a\u3069": [41, 820, 827, 828], "\u8a08\u7b97": [41, 819, 820, 826, 827, 828, 829], "\u30c9\u30e9\u30a4\u30d0\u30fc": [41, 819, 826], "\u4ecb\u3057": [41, 820, 825], "\u306a\u308b": [41, 820, 821, 827], "\u6027\u8cea": [41, 823, 824], "\u57fa\u5e95": [41, 819, 820, 822, 823, 824, 825, 826, 828, 829], "\u72b6\u614b": [41, 819, 820, 825, 828], "\u30a8\u30cd\u30eb\u30ae\u30fc": [41, 819, 820, 822, 825, 827, 828, 829], "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0": [41, 819, 820, 821, 822, 823, 825, 827, 828, 829], "\u5165\u529b": [41, 819, 829], "\u3068\u3057\u3066": [41, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u5c11\u306a\u304f": 41, "\u3068\u3082": 41, "1\u3064": [41, 819, 825], "\u3069\u306e": [41, 825], "\u9078\u629e": [41, 820, 821, 825], "\u3060\u3051": [41, 821, 822, 825, 826, 827, 829], "\u591a\u304f": [41, 824, 826, 827], "\u306b\u3088\u3063": [41, 820, 821, 825, 826, 827, 828, 829], "\u3044\u308b": [41, 819, 820, 821, 822, 823, 824, 826, 827, 828], "dive": 41, "tutorials": [41, 42], "out": [41, 246, 247, 303, 571, 645, 768, 818], "framework": [42, 46, 671], "solving": [42, 494, 826], "mechanical": 42, "measuring": 42, "moments": [42, 593, 745, 746, 821, 822], "ising": [42, 544, 547], "fermi": [42, 532, 533, 535, 536, 812], "-hubbard": [42, 532, 533, 535, 536], "models": [42, 150, 525], "lattices": [42, 531], "much": 42, "code": [42, 93, 106, 304, 313, 315, 812, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "comprises": 42, "-body": [42, 131, 138, 526, 604, 651, 664, 678, 685, 715, 722], "efficiently": 42, "classically": 42, "logic": [42, 246, 578, 579], "translate": 42, "expressed": [42, 671], "quantization": [42, 687, 692], "formalism": 42, "comprising": 42, "annihilation": [42, 210, 215, 413, 420, 429, 435, 440], "mapped": [42, 121, 133, 143, 246, 390, 392, 393, 394, 395, 396, 398, 400, 402, 404, 405, 407, 408, 409, 410, 411, 412, 460, 722], "variety": 42, "mappings": 42, "jordan": [42, 210, 215, 223, 397, 819, 829], "-wigner": [42, 210, 215, 223, 397, 819, 829], "parity": [42, 403, 819, 825], "readiness": 42, "getting": [42, 57, 68, 90, 783], "started": 42, "gathering": [43, 613, 701], "results": [43, 70, 152, 191, 725, 727, 729, 823], "vqeclient": [43, 804, 807, 825], "integer": [43, 147, 214, 224, 234, 316, 413, 445, 460, 468, 473, 505, 515, 523, 528], "causing": 43, "isinstance": [43, 823], "fail": 43, "avoids": [43, 667, 693], "explicitly": [43, 46, 151], "converting": [43, 825], "integers": [43, 224, 234, 259, 260, 261, 262, 271, 272, 413, 460, 468, 473, 505, 515, 523, 528, 625, 715, 783, 812], "loading": 43, "reverts": 43, "xxplusyygate": 43, "fixed": [43, 206], "terra": [43, 46, 825], "pins": 43, "-terra": [43, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "exception": [44, 45, 476, 477, 478], "message": [44, 45, 476, 477, 478], "returned": [44, 49, 52, 54, 64, 247, 248, 257, 309, 313, 317, 321, 322, 420, 428, 429, 494, 505, 512, 515, 519, 523, 528, 530, 556, 665, 678, 679, 684, 686, 795, 805, 826], "_traceback": [44, 45, 476, 477, 478], ".with": [44, 45, 476, 477, 478], "(tb": [44, 45, 476, 477, 478], "self": [44, 45, 141, 148, 415, 416, 417, 419, 427, 447, 448, 449, 450, 455, 462, 463, 464, 465, 476, 477, 478, 537, 540, 542, 551, 558, 560, 563, 564, 625, 665, 677, 679, 683, 686, 797, 826, 828], "._": [44, 45, 476, 477, 478, 651, 715, 826], "traceback": [44, 45, 476, 477, 478], "tb": [44, 45, 476, 477, 478], "doesn": 45, "\u2019t": 45, "_converter": [46, 52, 60, 66, 74, 84, 93, 97, 106, 110, 210, 215, 216, 217, 220, 223, 224, 233, 234, 242, 243, 505, 515, 523, 528, 819, 820, 821, 822, 823, 824, 825, 828], "solver": [46, 49, 52, 55, 59, 60, 65, 72, 75, 85, 92, 93, 95, 102, 106, 115, 147, 149, 502, 514, 522, 527, 725, 821, 822, 823, 824, 826], "threshold": [46, 131, 139, 604, 651, 661, 676, 680, 707, 708, 709, 711], "1e": [46, 131, 155, 161, 210, 215, 223, 329, 331, 344, 358, 425, 431, 443, 453, 471, 581, 582, 604, 625, 626, 651, 652, 676, 680, 707, 709, 826, 829], "delta": [46, 431, 435, 820, 829], "max": [46, 224, 244, 344, 358, 367, 368, 424, 660, 721, 824, 826], "_iterations": 46, "gradient": [46, 47, 49, 98, 111, 151], "\u30d9\u30fc\u30b9\u30af\u30e9\u30b9": [46, 50, 52, 56, 60, 66, 73, 77, 82, 88, 93, 106, 119, 126, 131, 141, 147, 150, 152, 158, 164, 167, 179, 191, 193, 195, 199, 201, 206, 210, 211, 215, 216, 217, 220, 223, 224, 233, 234, 242, 243, 246, 257, 275, 278, 280, 285, 287, 294, 301, 304, 309, 313, 315, 323, 327, 332, 339, 344, 358, 377, 379, 383, 389, 391, 393, 395, 397, 399, 401, 403, 405, 409, 411, 413, 431, 440, 445, 460, 474, 479, 481, 483, 485, 489, 493, 498, 500, 501, 513, 521, 526, 532, 537, 544, 549, 558, 560, 563, 565, 571, 576, 578, 581, 593, 601, 613, 618, 625, 641, 645, 651, 666, 676, 680, 687, 692, 701, 707, 709, 715, 725, 730, 738, 763, 766, 773, 778, 780, 783, 791, 804, 806, 807, 810, 812, 814], "groundstateeigensolver": [46, 821, 822, 823, 824, 825, 828], "calculation": [46, 52, 56, 66, 88, 91, 294, 353, 354, 358, 368, 370, 371, 822], "employing": 46, "performance": 46, "significantly": 46, "depends": [46, 506, 658], "choice": [46, 812], "(see": 46, ".opflow": [46, 823, 827], ".gradients": 46, "parameters": [46, 93, 106, 126, 131, 147, 150, 151, 154, 160, 164, 165, 170, 182, 191, 192, 194, 199, 200, 206, 207, 250, 485, 493, 531, 536, 548, 791, 804, 827], "grad": 46, "_method": 46, "qfi": [46, 825], "(if": 46, "applicable": 46, "epilson": 46, "reproduce": 46, "behavior": [46, 93, 106, 210, 215, 223, 354, 371], "supply": 46, "finite": 46, "difference": 46, "scheme": 46, "whereas": [46, 211, 218, 221, 244, 245], "after": [46, 150, 153, 159, 169, 181, 192, 193, 199, 513, 515], "shift": [46, 666], "/documentation": [46, 540, 551, 564, 819], "/tutorials": [46, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "/operators": 46, "gradients": [46, 49, 151], "_framework": [46, 826], "qubitconverter": [46, 52, 57, 60, 66, 68, 74, 84, 90, 97, 110, 210, 215, 216, 217, 220, 223, 224, 232, 233, 234, 241, 242, 243, 403, 505, 512, 515, 520, 523, 528, 819, 820, 821, 822, 823, 824, 825, 828], "converts": [46, 60, 66, 74, 84, 97, 110, 308, 312, 324, 343, 355, 373, 615, 703], "quantized": [46, 57, 60, 66, 68, 74, 84, 90, 97, 110, 246, 247, 248, 249, 251, 440, 511, 519, 521, 525, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705], "minimumeigensolverfactory": [46, 60, 65, 82, 93, 106], "factory": [46, 50, 55, 65, 73, 76, 77, 82, 86, 93, 94, 100, 105, 106, 107, 113, 118, 166], "uccsd": [46, 49, 93, 94, 97, 224], "float": [46, 61, 67, 77, 78, 83, 95, 108, 123, 135, 136, 139, 147, 149, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 196, 198, 200, 202, 203, 205, 207, 210, 215, 223, 257, 259, 260, 261, 262, 267, 268, 270, 271, 272, 344, 356, 358, 364, 401, 413, 425, 431, 434, 438, 443, 445, 453, 471, 485, 486, 487, 488, 502, 514, 522, 527, 581, 584, 589, 591, 597, 604, 608, 611, 628, 636, 637, 638, 661, 708, 711, 725, 726, 728, 729, 735, 739, 741, 742, 743, 745, 746, 747, 748, 750, 753, 754, 755, 756, 758, 759, 760, 761, 777, 791, 804], "step": [46, 148, 149, 151, 806, 807, 825], "size": [46, 151, 206, 209, 246, 478, 537, 543, 563, 810, 811, 828], "maximum": [46, 49, 186, 200, 202, 350, 358, 367, 368, 660, 721], "iterations": [46, 49, 344, 350, 358, 367, 827], "gradientbase": [46, 47, 98, 111], "expression": [46, 707, 827], "-order": [46, 131], "based": [46, 50, 51, 73, 74, 97, 110, 149, 150, 164, 191, 193, 194, 199, 200, 206, 207, 224, 244, 246, 251, 294, 301, 383, 482, 484, 525, 530, 651, 666, 667, 693, 715, 812], "mentioned": 46, "computes": [49, 417, 449, 464, 593, 601, 803], "baseproblem": [49, 51, 54, 57, 58, 64, 68, 71, 74, 79, 84, 90, 91, 149, 513, 521, 526], "solved": [49, 51, 54, 57, 58, 64, 68, 71, 74, 79, 84, 90, 91, 97, 110, 513], "union": [49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 67, 68, 71, 77, 78, 83, 88, 89, 90, 91, 93, 98, 100, 106, 111, 113, 147, 148, 149, 150, 191, 199, 206, 246, 248, 251, 256, 344, 358, 428, 445, 460, 468, 473, 496, 502, 505, 508, 509, 511, 514, 515, 516, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 537, 538, 541, 549, 560, 563, 568, 577, 579, 580, 586, 590, 595, 599, 603, 615, 616, 620, 623, 630, 639, 656, 669, 673, 689, 691, 695, 698, 703, 705, 726, 731, 734, 736, 791, 795, 798, 804, 805, 812, 817, 823], "secondquantizedop": [49, 54, 57, 58, 64, 68, 71, 90, 91, 148, 149, 217, 220, 224, 233, 234, 242, 247, 248, 249, 251, 405, 407, 408, 413, 445, 460, 511, 519, 525, 530, 577, 580, 623, 641, 651, 676, 680, 826], "paulisumop": [49, 53, 54, 57, 58, 61, 62, 64, 67, 68, 71, 90, 148, 149, 217, 220, 224, 233, 234, 242, 247, 248, 249, 251, 390, 392, 393, 394, 396, 398, 400, 402, 404, 405, 407, 408, 410, 412, 496, 505, 515, 523, 528], "additional": [49, 54, 57, 58, 61, 64, 67, 68, 71, 90, 91, 435, 481, 593, 601, 656, 677, 683, 791, 804, 814, 826], "finishes": 49, "unforeseen": 49, "reason": [49, 431], "valueerror": [49, 54, 64, 167, 176, 179, 188, 210, 215, 223, 250, 257, 315, 413, 427, 431, 445, 460, 533, 537, 546, 549, 563, 651, 677, 683, 708, 711, 715, 722, 795, 805], "grouped": [49, 54, 64, 121, 124, 128, 129, 131, 133, 138, 143, 145, 503, 504, 811, 813], "contain": [49, 54, 64, 121, 133, 138, 325, 791, 804, 813], "requested": [49, 54, 64, 80, 224, 246, 658, 684, 813], ".main": [49, 54, 64, 827], "_property": [49, 54, 64, 121, 128, 131, 133, 143, 501, 565, 613, 701, 811, 813, 825], "_name": [49, 54, 64, 501, 827], "-provided": [49, 54, 64, 93, 106], "clashes": [49, 54, 64], "internally": [49, 54, 64, 93, 106, 460, 549, 663, 667, 693], "internal": [49, 54, 64, 82, 164, 175, 192, 206, 207, 208, 427, 431, 444, 445, 472, 565, 658, 667, 675, 684, 693], "correspond": [49, 54, 64, 119, 131, 141, 768, 780], ".name": [49, 54, 64, 826], "respective": [49, 54, 64], "chosen": [49, 358, 812, 822], "appears": 49, "-zero": [49, 93, 106, 119, 141, 812, 826], "adaptvqeresult": 49, "electronicstructureresult": [49, 516, 826], "but": [49, 151, 224, 244, 344, 413], "finishing": 49, "criterion": [49, 77, 78, 81, 82, 83, 84, 87, 502, 514, 522, 527], "abc": [50, 56, 66, 73, 126, 158, 164, 201, 278, 405, 440, 474, 501, 571, 651, 709, 715, 810], "eigensolver": [50, 51, 52, 55, 60, 63, 65, 73, 74, 76, 77, 79, 86, 93, 105, 106, 118, 803, 826], "transformation": [50, 51, 73, 74, 77, 79, 82, 191, 210, 215, 223, 401, 420, 429, 435, 516, 524, 529, 651, 665, 679, 686, 825, 829], "abstract": [51, 57, 58, 59, 67, 68, 70, 71, 72, 74, 75, 76, 127, 130, 159, 160, 161, 162, 163, 165, 196, 203, 205, 279, 286, 378, 396, 407, 410, 412, 442, 443, 444, 474, 475, 502, 505, 506, 511, 577, 579, 580, 664, 665, 671, 711, 811], "transformed": [51, 79, 191, 192, 504, 509, 665, 679, 686, 811, 813, 829], "excitedstatessolver": [52, 88, 147], "reduction": [52, 191, 246, 247, 249, 250, 406, 505, 515, 523, 528, 812, 814, 825], "basis": [52, 210, 280, 284, 294, 295, 306, 308, 310, 312, 339, 341, 343, 344, 346, 349, 355, 358, 360, 365, 373, 383, 384, 428, 505, 515, 523, 528, 604, 641, 645, 651, 655, 658, 663, 664, 665, 667, 670, 676, 678, 679, 680, 683, 685, 686, 687, 692, 707, 708, 709, 711, 717, 722, 724, 812, 819, 821, 822, 825, 826, 829], "commutativity": [52, 505, 515, 523, 528], "eigensolverfactory": [52, 55, 77], "mesfactory": [52, 60], "gets": [53, 62, 93, 94, 100, 106, 107, 113, 393, 423, 470, 568, 670, 696, 707, 709], "transforms": [53, 62, 164, 191, 192, 664, 665, 678, 679, 685, 686, 811], "tuple": [53, 57, 62, 68, 90, 154, 157, 160, 163, 170, 175, 182, 198, 211, 212, 216, 217, 218, 219, 220, 221, 222, 224, 233, 234, 244, 245, 247, 249, 250, 253, 257, 259, 260, 261, 262, 267, 271, 272, 408, 413, 445, 455, 460, 472, 505, 510, 515, 517, 523, 528, 537, 538, 541, 543, 552, 560, 563, 597, 715, 731, 739, 741, 742, 743, 745, 746, 754, 812, 817, 823, 828], "eigenstateresult": [54, 58, 64, 71, 91, 506, 516, 524, 529, 569, 587, 596, 606, 621, 631, 672, 690, 697, 725, 727, 729, 738, 763, 766, 773], "interpreted": [54, 58, 64, 71, 91, 506, 524, 537, 556, 560, 563, 812], "potentially": [57, 68, 90, 149], "computationally": [57, 68, 90], "expensive": [57, 68, 90, 825], "])": [57, 68, 90, 224, 819, 820, 823, 824, 825, 826, 827, 828], "map": [57, 68, 90, 131, 247, 249, 251, 390, 392, 394, 396, 398, 400, 402, 404, 405, 407, 408, 410, 412, 641, 645, 651, 663, 687, 692, 709, 810, 829], "ops": [57, 68, 90, 826], "type": [57, 61, 67, 68, 88, 90, 150, 155, 156, 244, 275, 280, 284, 287, 293, 294, 297, 305, 306, 308, 312, 319, 340, 341, 343, 344, 348, 349, 354, 355, 358, 362, 365, 371, 373, 379, 382, 383, 386, 413, 424, 460, 475, 493, 494, 505, 506, 515, 523, 528, 529, 533, 536, 568, 579, 651, 725, 732], ":param": [57, 68, 90, 155, 156, 284, 305, 308, 312, 319, 340, 343, 348, 355, 362, 373, 424, 494, 533, 536, 732], "param": [57, 68, 90, 150, 151, 165, 192, 194, 200, 207, 529, 725, 823], "groundstatesolver": [60, 88, 147], "mapper": [60, 66, 74, 84, 97, 110, 210, 215, 223, 246, 249, 251, 252, 393, 395, 401, 403, 405, 409, 411], "initialized": [60, 66, 74, 84, 97, 110, 413, 445, 460, 537, 651, 676, 680], "minimumeigensolver": [60, 65, 74, 75, 82, 84, 97, 110, 791], "vqeuccsdfactory": 60, "ndarray": [61, 67, 77, 78, 83, 93, 95, 100, 106, 108, 113, 125, 130, 137, 140, 146, 175, 210, 215, 223, 428, 431, 432, 436, 445, 456, 457, 458, 459, 475, 481, 482, 484, 499, 502, 514, 522, 527, 533, 534, 545, 546, 556, 604, 609, 636, 637, 645, 646, 647, 658, 664, 678, 684, 685, 722, 733, 734, 736, 740, 744, 762, 765, 775, 785, 786, 787, 788, 790, 791, 796, 804, 817, 818], "statevector": [61, 67, 734, 736, 829], "quantumcircuit": [61, 67, 93, 101, 106, 114, 210, 211, 213, 215, 216, 217, 220, 223, 224, 233, 234, 242, 243, 734, 736, 791, 792, 804, 829], "instruction": [61, 67, 734, 736], "operatorbase": [61, 67, 734, 736, 795, 805], "kind": [61, 67, 766, 815], "specify": [61, 67, 148, 257, 823, 825], "statefn": [61, 67], "either": [61, 67, 199, 210, 310, 315, 358, 413, 427, 431, 435, 656], "``": [61, 67, 825], "implementing": [61, 67, 405, 810], "]]": [61, 67, 77, 78, 83, 88, 89, 148, 149, 151, 154, 160, 170, 182, 192, 194, 200, 207, 211, 212, 218, 221, 244, 247, 257, 259, 260, 261, 262, 267, 271, 272, 460, 502, 505, 514, 515, 522, 523, 527, 528, 537, 538, 541, 597, 678, 726, 731, 734, 739, 741, 742, 743, 745, 746, 754, 777, 784, 817, 819, 821, 822, 825, 826, 828], "expectation": [61, 67, 96, 99, 109, 112, 795, 803, 805, 823, 827], "identical": [61, 67, 138, 218, 221, 224, 234, 249, 460], "converter": [69, 210, 215, 223, 232, 241, 246, 247, 250, 403, 512, 520, 825], "otherwise": [70, 88, 248, 324, 556, 609, 625, 676, 680, 803], "filter": [77, 78, 79, 81, 82, 83, 84, 87, 199, 502, 514, 522, 527, 822, 823], "_criterion": [77, 82, 821, 822, 823, 826], "_filter": [77, 82, 821, 822, 826], "numpyeigensolver": [77, 79, 825], "callable": [77, 78, 83, 95, 98, 108, 111, 148, 149, 224, 228, 234, 238, 247, 257, 265, 502, 505, 514, 515, 522, 523, 527, 528, 791, 794, 804], "/eigenstates": 77, "searching": 77, "over": [77, 195, 428, 460, 536, 537, 548, 812], "eigenstate": [77, 506, 516, 529, 730, 795, 803, 805, 827], "smallest": [77, 174, 187], "among": [77, 244, 245], "signature": [77, 149, 243], "(eigenstate": [77, 822, 823], "_values": [77, 822, 823], "boolean": [77, 217, 220, 224, 233, 244, 767, 779, 780, 814], "indicate": [77, 255, 768, 812], "consider": [77, 505, 515, 523, 528], "element": [77, 344, 790], "empty": [77, 215, 255, 317, 321, 322, 479, 489, 500, 771], "criteria": [77, 200, 812], "many": [77, 651, 676, 680], "min": [77, 216, 344, 824], "numpyminimumeigensolver": [82, 84, 85, 821, 823, 824, 825, 827, 828], "keyword": [82, 93, 106, 199, 210, 215, 223, 224, 234, 812], "possibly": [84, 249, 460, 593, 601], "_state": [88, 93, 106, 211, 217, 220, 224, 233, 234, 242, 821, 825, 829], "_solver": [88, 93, 106, 147, 149, 821, 822, 823, 825, 828], "'sd": [88, 505, 515, 523, 528], "eom": [88, 89, 91, 822], "matrix": [88, 138, 210, 215, 223, 401, 417, 428, 431, 432, 435, 436, 437, 449, 456, 464, 475, 481, 482, 484, 499, 533, 534, 545, 546, 556, 604, 645, 646, 647, 651, 658, 664, 671, 676, 678, 680, 684, 685, 722, 817, 818, 826, 828, 829], "elements": [88, 131, 358, 445, 556], "pseudo": [88, 89, 91, 215, 812], "-eigenvalue": [88, 89, 91], "\u300f,": [88, 316], "\u300ed": 88, "sd": [88, 224, 821, 822, 823], "\u300f)": [88, 155, 156, 161, 162, 196], "-states": 91, "solves": 91, "expansion": [91, 526], "coefficients": [91, 121, 131, 133, 139, 143, 210, 215, 223, 425, 431, 432, 436, 443, 445, 453, 460, 471, 645, 665, 679, 686, 826], "initial": [93, 100, 101, 106, 113, 114, 119, 121, 124, 125, 126, 128, 130, 131, 133, 140, 141, 143, 145, 146, 154, 160, 170, 182, 211, 213, 216, 217, 220, 224, 233, 234, 242, 243, 244, 259, 260, 261, 262, 271, 272, 327, 358, 366, 645, 665, 679, 686, 791, 796, 804, 825, 826, 829], "_point": [93, 106, 791, 804, 825, 827], "wavefunction": [93, 97, 106, 110, 164, 211, 234], "_eigensolver": [93, 95, 96, 98, 99, 103, 104, 106, 109, 111, 112, 116, 117], "overwritten": [93, 106, 771, 789], "producing": [93, 106, 507], "fact": [93, 106, 768], "designed": [93, 106], "manage": [93, 106], "pass": [93, 106, 149, 210, 215, 223, 413, 819, 822, 823, 824, 825, 826], "constructing": [93, 106, 166], "setter": [93, 106], "sample": [93, 106, 148, 149, 825], "illustrates": [93, 106], ".circuit": [93, 106, 224, 244, 821, 823, 825, 827, 829], ".library": [93, 106, 224, 244, 821, 823, 825, 827, 829], "ucc": [93, 94, 106, 119, 120, 121, 131, 132, 133, 211, 217, 220, 233, 821], "(problem": [93, 106, 825, 826], "(type": [93, 106], "(vqe": [93, 106], ".minimum": [93, 106, 823], ".ansatz": [93, 106], "vqes": [93, 94, 100, 106, 107, 113], "initialpoint": [93, 100, 106, 113, 119, 131, 141], "optimizer": [93, 103, 106, 116, 791, 798, 804, 806, 807, 809, 825, 827], "hfinitialpoint": 93, "defaults": [93, 94, 106, 107, 358, 535, 537, 540, 551, 556, 558, 560, 563, 564, 651, 715], "hartree": [93, 119, 121, 131, 133, 138, 216, 244, 298, 306, 341, 344, 349, 351, 365, 369, 750, 821, 822, 824, 826], "-fock": [93, 119, 121, 131, 133, 138, 216, 244, 298, 306, 341, 344, 349, 351, 365, 369, 750, 821], "hf": [93, 119, 124, 332, 354, 358, 371, 601, 820], "circuit": [93, 106, 119, 141, 164, 210, 212, 215, 217, 220, 223, 224, 231, 233, 234, 240, 242, 791, 804, 829], "prepended": [93, 106, 119, 141], "array": [93, 106, 121, 125, 128, 130, 131, 133, 140, 143, 146, 210, 215, 223, 428, 435, 475, 482, 484, 499, 609, 784, 785, 787, 788, 827, 828], "specification": [93, 106], "never": [93, 106], "hartreefock": [93, 101, 119, 224], "create": [93, 106, 210, 215, 223, 395, 405, 409, 411, 521, 829], "remaining": [93, 106, 768, 812], "callback": [95, 108, 247, 791, 794, 804, 827], "expectationbase": [96, 109], "electronicstructureproblem": [97, 819, 821, 822, 823, 824, 825, 826], "getter": [99, 101, 112, 114, 257, 406, 442, 452, 455], "quantuminstance": [104, 117, 821, 822, 823, 824, 827], "uvccsd": [106, 107, 110], "uvcc": [106, 107, 141, 142, 143, 242], "vscfinitialpoint": 106, "vscf": [106, 141, 143, 145], "vibrationalstructureproblem": [110, 820, 821], "concert": [119, 141], "obtained": [119, 123, 131, 135, 141, 210, 215, 223, 725], "shape": [119, 141, 215, 431, 766, 778, 827, 829], "_list": [120, 121, 131, 132, 133, 142, 143, 154, 160, 170, 182, 224, 828], "matches": [120, 132, 142, 581, 625], "corrections": [121, 131, 133, 137, 139], "groupedsecondquantizedproperty": [121, 124, 129, 133, 138, 143, 145, 279, 325, 503, 504, 811, 813], "-quantized": [121, 133, 246, 440, 576, 687, 692], "consistency": [121, 133], "correctly": [121, 131, 133, 143], "attr": [121, 143], "`ansatz": [121, 143], "overwrite": [122, 134, 144, 354, 371, 427, 658, 789], "equal": [123, 135, 217, 218, 220, 221, 259, 260, 271, 479, 812], "zero": [123, 131, 139, 179, 199, 200, 206, 207, 215, 425, 430, 443, 453, 471, 473, 604, 651, 676, 680, 818, 824], "evolvedoperatoransatz": [126, 127, 224, 234], "evolved": [127, 217, 220, 224, 231, 233, 240, 242], "notimplementederror": [127, 129, 130, 138, 210, 215, 223, 523, 605, 669, 671, 672, 683], "\u00f8ller": 131, "-plesset": 131, "perturbation": [131, 257, 259, 260, 262, 271, 272], "mp2": [131, 139], "correction": [131, 136], "intended": 131, "combination": 131, "orbital": [131, 138, 211, 218, 221, 244, 245, 435, 609, 663, 664, 678, 685, 813, 826, 829], "absolute": [131, 135, 138, 139, 210, 215, 223, 259, 260, 261, 262, 425, 431, 443, 453, 471, 581, 582, 584, 625, 626, 628], "substituted": 131, "_numpy": [131, 822, 823], "_array": [131, 445], "recovered": 131, "_corrections": 131, "overall": [131, 136], "_correction": [131, 135], "coefficient": [131, 413, 427, 460, 472, 646, 647, 649, 707, 709, 715], "indices": [131, 211, 212, 215, 218, 221, 244, 245, 317, 321, 322, 445, 460, 497, 505, 515, 528, 715, 766, 780, 812, 813, 814], "double": [131, 217, 220, 224, 244], "triple": 131, "higher": 131, "_excitation": [133, 224, 244], "_grouped": 133, "alpha": [138, 154, 160, 182, 183, 216, 217, 218, 220, 221, 224, 233, 244, 625, 632, 636, 645, 646, 649, 658, 676, 680, 684, 812, 822, 826, 827], "beta": [138, 216, 217, 218, 220, 221, 224, 233, 244, 604, 625, 633, 637, 645, 647, 649, 676, 678, 680, 684, 812, 822, 826], "-consistent": 141, "field": [141, 445], "valid": [142, 149, 210, 215, 315, 358, 413, 489], "tolerance": [147, 210, 215, 223, 344, 356, 358, 364, 425, 431, 443, 453, 471, 581, 584, 589, 625, 628, 638], "num": [147, 211, 214, 216, 217, 218, 220, 221, 224, 229, 230, 233, 234, 239, 242, 243, 244, 245, 247, 249, 250, 253, 431, 438, 460, 466, 467, 468, 473, 510, 513, 517, 518, 526, 552, 555, 558, 559, 581, 588, 618, 622, 625, 632, 633, 634, 635, 651, 659, 670, 696, 704, 707, 709, 713, 715, 720, 752, 756, 777, 812, 813, 819, 820, 821, 823, 825, 826, 828], "_bootstrap": [147, 823], "extrapolator": [147, 150, 191, 193, 199, 206, 208, 823], "gss": 147, "born": [147, 164, 823], "-oppenheimer": [147, 164, 823, 824], "surface": [147, 152, 153, 154, 157, 158, 159, 160, 163, 164, 169, 181, 823], "bopes": [147, 149, 152, 164, 725], "warm": 147, "-start": 147, "eigensolvers": 147, "previous": [147, 164, 191, 199, 200, 206, 207, 358, 812], "bootstrapping": [147, 164, 206, 823], "define": [147, 149, 224, 246, 479, 489, 493, 500, 531, 823, 825], "space": [147, 150, 151, 157, 163, 164, 191, 192, 390, 392, 394, 396, 398, 400, 404, 407, 408, 410, 412, 413, 428, 445, 810, 811, 812, 813, 814, 825], "/window": 147, "extrapolate": [147, 151, 165, 192, 194, 200, 207], "(deprecated": 147, "old": [147, 262, 272, 435], "copied": 147, "deprecate": 147, "_arguments": 147, "wrapper": [147, 164, 191, 199], "_boostrap": 147, "smaller": [147, 248], "larger": [147, 401], "windowextrapolator": 147, "beginning": 148, "possible": [148, 244, 245, 246, 247, 249, 413, 445, 496, 812], "nuclear": [148, 302, 593, 597, 598, 601, 608, 754, 755, 757, 762, 821, 822, 824], "coordinate": [148, 274, 708, 711], "sampler": [149, 152, 164, 725, 823, 824], "repetitions": [149, 211, 234], "geometry": [149, 155, 161, 173, 257, 259, 260, 261, 262, 267, 271, 272, 274, 309, 358, 680, 819, 820, 821, 822, 823, 824, 825, 826], "_callable": 149, "auxiliaries": 149, "resulting": [149, 246, 605, 677, 683, 812, 817], "listordict": 149, "perturbations": [149, 257, 267, 270], "varied": 149, "along": [149, 485, 487], "degrees": [149, 257, 265, 823, 824], "freedom": [149, 151, 165, 192, 194, 195, 200, 207, 257, 265], "bopessamplerresult": 149, "degree": [150, 151, 165, 192, 193, 194, 195, 200, 207, 257, 823], "model": [150, 151, 445, 483, 521, 524, 532, 533, 535, 536, 544, 546, 547, 548, 763], "treating": 150, "fitting": [150, 152, 153, 159, 164, 169, 181, 193, 194], "evolves": 150, "specifies": [150, 164, 191, 210, 215, 223], "regression": [150, 151, 164], "adds": [150, 566, 654, 667, 693], "derivatives": 150, "vector": [150, 151, 243, 768, 791, 804], "serving": 150, "features": [150, 151], "warning": [150, 193], "extrapolated": [150, 151, 157, 163, 165, 192, 193, 194, 200, 207], "constructor": [150, 166, 191, 193, 199, 206, 247, 257], "linearregression": 150, "ridge": 150, "ridgecv": 150, "sgdregressor": 150, "sklearn": [150, 191], ", ridge": 150, ", ridgecv": 150, ", and": 150, "added": [150, 565, 566, 613, 625, 654, 666, 701, 771, 789], "_dict": [151, 165, 192, 194, 200, 207], "numerical": [151, 210, 215, 223, 431], "treated": [151, 315, 625, 715], "tries": 151, "fit": [151, 153, 154, 157, 159, 160, 163, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190], "describes": [151, 460, 468, 473], "evolution": [151, 829], "epsilon": [151, 829], "predict": [151, 153, 159, 164, 169, 181], "technique": [151, 164], "spacing": 151, "rather": [151, 613, 701], "infers": 151, "represent": [151, 164, 165, 192, 194, 200, 207, 401, 431, 445], "ex": [151, 165, 192, 194, 200, 207], "interatomic": [151, 164, 165, 170, 173, 182, 185, 192, 194, 200, 207, 823, 824], "distance": [151, 164, 165, 167, 170, 173, 179, 182, 185, 192, 194, 200, 207, 261, 262, 272, 823, 824], "energysurfacebase": [152, 195], "cubic": [152, 317, 539, 828], "spline": [152, 157, 163], "interpolation": [152, 157, 163], "eval": [153, 159, 169, 181, 708, 711], "xdata": [154, 160, 170, 175, 182, 824], "ydata": [154, 160, 170, 175, 182, 824], "_vals": [154, 160, 170, 182], "bounds": [154, 157, 160, 163, 170, 182], "fits": [154, 160, 170, 182], "fitted": [154, 160], "_e": [154, 160, 182, 183, 819, 820], "_shift": [154, 160, 170, 171, 182, 183, 593, 601], "_function": [154, 160, 170, 182, 823, 824, 827], "scaling": [155, 156, 161, 162, 168, 173, 174, 180, 185, 187, 196], "minimal": [155, 156, 161, 162, 173, 185, 401], "scaled": [155, 156, 161, 162, 196], "units": [155, 156, 161, 162, 167, 168, 173, 174, 179, 180, 185, 187, 257, 274, 275, 344, 357], "angstroms": [155, 161, 167, 170, 173, 179, 182, 185], "scale": [155, 156, 161, 162], "meters": [155, 161], "factor": [155, 156, 161, 162, 413], "equilibrium": [155, 161, 824], "/mol": [156, 162], "appropriately": [156, 162], "hartrees": [156, 162, 167, 168, 170, 174, 177, 179, 180, 182, 187, 189], "trust": [157, 163], "region": [157, 163], "trusted": [157, 163], "interpolated": [157, 163], "vs": [157, 163], "between": [157, 163, 167, 179, 200, 211, 261, 417, 420, 429, 449, 464, 474, 481, 483, 485, 486, 493, 498, 540, 552, 564, 651], "hold": [158, 195, 201], "performing": [164, 192, 207, 217, 220, 224, 233, 234, 242, 431], "concept": 164, "predicting": 164, "optimal": [164, 827], "aimed": 164, "towards": [164, 791, 804], "providing": [164, 201, 224], "addition": [164, 413, 415, 445, 447, 460, 462, 812], "ultimately": 164, "reducing": 164, "total": [164, 358, 460, 468, 473, 519, 593, 601, 625, 759, 760, 761, 762, 795, 805, 812, 821, 822, 823], "evaluations": [164, 823], "item": [164, 257], "consist": 164, "practice": 164, "utilize": 164, "extracts": 164, "accelerate": 164, "rotational": [164, 824], "context": [164, 494, 506, 516, 524, 529, 569, 587, 596, 606, 621, 631, 672, 690, 697, 768], "bond": [164, 257, 825], "dissociation": [164, 168, 180, 196, 823, 824], "diatomic": [164, 167, 176, 179, 188], "requirement": 164, "proceed": 164, "specifying": [164, 791, 804, 812, 814], "pairs": [164, 413, 715, 768, 826], "types": [164, 224, 234, 413, 445, 489, 505, 515, 523, 528, 651], "/wrapper": 164, "dimensionality": [164, 191], "/space": 164, "pca": [164, 166, 191, 192, 823], "sets": [164, 199, 358, 401, 822], "actual": [164, 506, 511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 651, 673, 676, 680, 691, 698, 705], "executed": [164, 513, 804], "linear": [164, 210, 399, 417, 431, 435, 449, 464, 825], "/spline": [164, 194], "instantiate": 166, "- \u300e": 166, "poly": [166, 823], "diff": [166, 823], "_model": [166, 521, 823, 828], "l1": 166, "*kwargs": 166, "newly": 166, "unknown": [166, 306, 310, 341], "potentialbase": [167, 179], "implements": [167, 179, 257, 420, 429, 506, 565], "1d": [167, 179, 195, 197], "harmonic": [167, 171, 175, 707, 826], "atoms": [167, 179, 257, 259, 260, 261, 262, 263, 271, 272, 344, 345, 358, 494, 787, 816], "estimated": [168, 186], "functional": [171, 183, 358, 375, 376], "fundamental": [172, 184], "frequency": [172, 184], "^-": [172, 178, 184, 190, 445, 821], "classmethod": [175, 259, 260, 261, 262, 271, 272, 421, 424, 430, 468, 473, 533, 536, 546, 548, 552, 579, 586, 595, 603, 604, 615, 620, 630, 669, 689, 695, 703, 803, 826], "process": [175, 651], "mostly": 175, "preprocesses": 175, "around": [175, 812], "gives": 175, "accurate": 175, "modes": [175, 201, 203, 234, 242, 243, 316, 408, 413, 431, 438, 445, 460, 467, 468, 473, 704, 715], "considered": [175, 244], "processed": 175, "update": [176, 188, 204], "updates": [176, 188], "-th": [177, 189, 205, 457, 458, 459, 790], "wave": [178, 190, 302, 791, 804], "cm": [178, 190, 820, 821], "morse": [179, 183, 195, 202], "initializes": [179, 812, 814], "-function": 179, "afterwards": 179, "calculated": [180, 420, 429], "good": [186, 202], "approximation": [186, 202, 211], "reality": [186, 202], "kernel": 191, "reduces": [191, 813], "performs": [191, 199, 206, 210], "inverse": 191, "returning": 191, "polynomialextrapolator": [191, 199, 206], "differentialextrapolator": [191, 199, 206], "\u300einternal": [191, 199, 206], "switches": 191, "regular": 192, "polynomial": [193, 194, 823], "-specified": [193, 194], "vibrationalstructurebase": 195, "prescribed": 195, "/harmonic": 195, "represents": [197, 413, 445, 455, 671, 812], "usually": 198, "-defined": 198, "useful": [198, 413], "fairly": 198, "large": [198, 199], "interval": 198, "redefine": [198, 823], "derived": 198, "_before": 199, "_after": 199, "clusters": [199, 200], "both": [199, 210, 220, 246, 435, 565], "small": 199, "clustering": 199, "subset": [200, 207], "indicates": [200, 206, 207, 246, 491, 593, 780], "finds": 200, "cutoff": 200, "average": 200, "gap": 200, "divide": 200, "redefined": 202, "setted": 202, "wipe": 204, "check": [204, 248, 305, 332, 340, 348, 362, 829], "validity": 204, "wraps": 206, "limiting": 206, "truth": 206, "_matrix": [210, 215, 223, 533, 546, 826, 828, 829], "validate": [210, 215, 223, 431, 826], "rtol": [210, 215, 223, 422, 431, 451, 469], "atol": [210, 215, 223, 422, 425, 431, 443, 451, 453, 469, 471, 829], "_kwargs": [210, 215, 223, 294, 306, 310, 341, 349, 365, 383], "bogoliubov": [210, 829], "transform": [210, 215, 223, 578, 665, 675, 679, 686, 811, 813], "effects": 210, "unitary": [210, 224, 234, 435, 818], "maps": [210, 390, 392, 393, 394, 396, 398, 400, 404, 407, 410, 412, 445, 722], "ladder": [210, 211, 215, 431, 435, 445], "satisfy": [210, 215, 435, 437], "anticommutation": [210, 215, 435], "relations": [210, 215, 420, 429, 435, 437], "^\\": [210, 215, 223, 413, 420, 429, 431, 435, 437, 829], "dagger": [210, 215, 223, 224, 413, 416, 420, 429, 431, 435, 437, 448, 460, 463, 819, 820, 822, 828, 829], "_j": [210, 215, 223, 435, 437, 812, 819, 820, 824, 826, 829], "quad": [210, 215, 824], "ldots": [210, 215, 223, 820, 829], "{a": [210, 223, 819, 829], "\\}": [210, 215, 223, 820, 827, 829], "original": [210, 215, 223, 246, 257, 324, 420, 425, 443, 453, 471, 497, 766, 768, 829], "creation": [210, 215, 223, 309, 413, 435, 440, 783], "{b": [210, 215, 829], "combinations": [210, 224, 435], "determines": [210, 520, 812], "times": [210, 215, 217, 220, 223, 224, 233, 242, 271, 435, 445, 818, 829], "2n": [210, 215, 435, 829], "involve": [210, 431], "\\begin": [210, 215, 401, 435, 820, 822, 824, 829], "{pmatrix": [210, 215, 401, 435, 818, 822, 829], "vdots": [210, 215, 435, 829], "_n": [210, 215, 435, 820, 829], "\\\n\\": [210, 215, 435, 820, 829], "= w": [210, 215, 435, 829], "begin": [210, 215, 435, 818, 822, 829], "}.": [210, 829], "calling": [210, 215, 223, 515], "diagonalizing": [210, 215, 223, 435], "_bogoliubov": [210, 215, 223, 829], "_transform": [210, 215, 223, 829], "quadratichamiltonian": [210, 215, 223, 829], "arxiv": [210, 215, 217, 220, 223, 224, 391, 812, 820, 822, 824], "call": [210, 215, 223, 593, 601, 791], "(jordanwignermapper": [210, 215, 223, 821, 822, 823, 828], "relative": [210, 215, 223, 271, 272, 431, 581, 583, 589, 625, 627, 638], "validation": [210, 215, 223, 431], "initializer": [210, 215, 223, 613, 701, 812], "dimensional": [210, 215, 223, 445], "orthonormal": [210, 223, 435], "rows": [210, 223, 435, 560, 562, 563, 828], "describe": [210, 215], "(w": [210, 215], "please": [210, 215, 223, 224, 332, 460, 540, 551, 564, 814], ".mappers": [210, 215, 223, 819, 820, 821, 822, 823, 824, 825, 828, 829], ".second": [210, 215, 223, 413, 445, 537, 578, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829], ".jordanwignermapper": [210, 215, 223], "_qubits": [211, 766, 825], "reps": [211, 217, 220, 224, 233, 234, 242, 821, 825], "blueprintcircuit": 211, "trial": [211, 234], "compact": [211, 780], "heuristic": 211, "ollitrault": [211, 234, 243, 707, 812, 820], "pauline": [211, 234, 243, 707, 820], "chemical": [211, 234, 243, 707, 819], "aims": 211, "approximating": 211, "cnot": 211, "count": [211, 791, 795, 804, 805, 814, 816], "conserving": 211, "decreases": 211, "\u2026]": [211, 212, 224, 234, 245], "encoded": [211, 218, 221, 244, 245, 769, 780], "tuples": [211, 218, 221, 244, 245, 317, 321, 322, 413, 427, 445, 460, 472, 537, 552], "pair": [211, 218, 221, 244, 245, 475, 482, 484, 499, 625, 676, 768, 812, 826, 827], "occupied": [211, 215, 218, 221, 244, 245, 530, 691, 777, 812, 814, 821, 829], "unoccupied": [211, 218, 221, 244, 245, 814], "cnots": 211, "entangling": 211, "prepend": [211, 217, 220, 224, 233, 234, 242], "..": [212, 224, 234, 413, 538, 541, 543, 826], "indicating": [214, 445, 691, 814], "_orbitals": [215, 216, 217, 218, 220, 221, 224, 233, 244, 513, 581, 618, 625, 812, 813, 814, 825, 826, 829], "prepares": [215, 223], "cdots": [215, 223, 820, 829], "_{": [215, 223, 431, 435, 437, 460, 812, 819, 820, 822, 823, 824, 827, 828, 829], "_p": [215, 431, 435], "lvert": [215, 223], "overline": 215, "{\\": [215, 819, 820, 822, 824, 829], "text": [215, 223, 315, 401, 431, 435, 437, 819, 820, 822, 823, 824, 829], "{vac": [215, 223], "}}": [215, 224, 437, 819, 820, 822], "rangle": [215, 223, 243, 819, 820, 821, 822], "\\lvert": [215, 223], "mutual": [215, 223], "eigenvector": [215, 223, 829], "\\\nw": 215, "prepare": [215, 223], "eigenstates": [215, 223, 707, 734], "quadratic": [215, 223, 321, 431, 435, 437, 829], "detailed": 215, "-particle": 215, "fill": 215, "body": [215, 601, 651, 658, 667, 670, 676, 678, 680, 692, 693, 696, 715, 722, 826], "docstring": 215, "corresponds": [215, 457, 458, 459, 715, 790], "-particles": 215, "_spin": [216, 217, 218, 220, 221, 224, 233, 244, 513, 581, 618, 625, 663, 826], "_particles": [216, 217, 218, 220, 221, 224, 233, 234, 244, 247, 249, 250, 513, 625, 819, 825, 826], "-spin": [216, 217, 220, 224, 233, 244, 604, 625, 636, 637, 645, 646, 647, 649, 658, 676, 680, 684, 826], "electrons": [216, 217, 218, 220, 221, 625, 632, 633, 634, 812, 813, 826], "respectively": [216, 460, 537, 565, 768, 812], "typeerror": [216, 413, 460, 651, 677, 683, 732], "bravyikitaevsuperfastmapper": 216, "/issues": [216, 826], "_singles": [217, 220], "(false": [217, 220], "generalized": [217, 220, 224, 233, 244], "enforces": 217, "occur": 217, "parallel": 217, "species": [217, 220], "].": [217, 220, 224, 243, 391, 401, 489, 565, 823, 824, 827], "singlet": [217, 220], "convenience": [217, 220, 224, 233, 242, 251, 302, 549, 593, 601], "subclass": [217, 220, 233, 242, 354, 371, 506, 572, 658], "[1": [217, 220, 224, 243, 391, 401, 565, 707, 708, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "/abs": [217, 220, 224, 812], "takes": [217, 220, 224, 233, 234, 242, 531], "care": [217, 220, 224, 233, 234, 242], "reductions": [217, 220, 224, 233, 234, 242], "repeat": [217, 220, 224, 233, 242, 826], "enables": [217, 220], "inclusion": [217, 220], "flag": [217, 220, 224, 233, 244], "ignore": [217, 220, 224, 233, 244, 823, 824], "occupation": [217, 220, 224, 233, 243, 244, 428, 625, 636, 637, 820, 826], "determined": [217, 220, 224, 233, 244, 511, 512, 519, 520, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 812, 814], "generates": [218, 221, 227, 237, 244, 245, 406, 505, 515, 523, 528, 531, 767, 771, 783, 785, 786, 788], "considers": 220, "symmetrically": 220, "invariant": 220, "respect": [220, 224], "-flips": 220, "slater": 223, "determinant": [223, 301], "_f": 223, "sum": [223, 413, 431, 435, 437, 460, 745, 748, 812, 819, 820, 823, 824, 828, 829], "}^": [223, 819, 820, 822, 828], "jk": [223, 437, 829], "_k": [223, 437, 820, 824, 829], "vacuum": 223, "conserves": [223, 433, 435, 829], "preserve": [224, 233, 244, 248], "-cluster": [224, 234], "^{": [224, 820, 822, 827], "cluster": 224, "generally": 224, "_fermionic": [224, 505, 515, 523, 829], "_excitations": [224, 234, 505, 515, 523, 528], "passing": 224, "equivalent": [224, 413, 416, 420, 422, 429, 448, 463], "(excitations": 224, "',": [224, 413, 445, 791, 804, 820, 825], "=true": [224, 244, 819, 821, 822, 823, 824, 825, 827, 828], "=none": [224, 823], "tailored": 224, "options": [224, 358, 768], "pure": [224, 244, 658, 827], "uccs": 224, "')": [224, 413], "=[": [224, 819, 821, 822, 823, 824, 825], "uccd": 224, "_ucc": 224, "_sd": 224, "-class": 224, "_sdt": 224, "sdt": 224, "_st": 224, "st": 224, "fully": 224, "def": [224, 822, 823, 826, 827, 828], "(num": [224, 244, 828], "[int": [224, 234, 505, 515, 523, 528], "[tuple": [224, 234], "[any": 224, "...": [224, 826, 828], ".]": [224, 826, 828], "]:": [224, 391, 401, 565, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "statement": 224, "take": [224, 234, 768], "look": [224, 413, 445], "documentation": [224, 332, 427, 445, 651, 709], ".ansatzes": [224, 244], ".utils": [224, 244, 821, 822, 823, 824, 827], ".fermionic": [224, 244], "_generator": [224, 244], "_custom": 224, "=custom": 224, "keep": 224, "mind": 224, "becomes": 224, "usable": 224, "depending": [224, 358], "rest": 224, "stack": 224, "allowed": [224, 234, 358, 413, 445, 460], "characters": [224, 234, 315, 413, 424, 445, 460, 475, 479, 482, 484, 489, 500, 505, 515, 523, 528], "singles": [224, 234, 244], "doubles": [224, 234, 244], "triples": [224, 234], "quadruples": [224, 234], "positive": [224, 234, 259, 260, 271, 413, 445, 505, 515, 523, 528, 812], "denotes": [224, 234, 358, 413], "generalizing": [224, 234], "(with": [224, 234, 828], ", tuple": [224, 234], "\u2026]]": [224, 234], "largest": [224, 244], "mixed": [224, 244, 435, 481, 482, 658], "spins": [224, 233, 244, 402], "influence": 224, "relying": 224, "generation": 224, "'d": [225, 235], "':": [225, 235, 791, 804, 825], "private": 226, "parses": [227, 237, 315], "contained": [231, 240, 413, 570, 673], "_modals": [234, 242, 243, 245, 460, 468, 473, 526, 707, 709, 820, 821], "defining": [234, 242, 243, 257, 474, 475, 479, 481, 482, 483, 484, 495, 498, 500, 766], "modals": [234, 239, 242, 243, 245, 460, 466, 468, 473, 526, 691, 707, 709, 713, 820, 821, 826], "_vibration": 234, "creates": [243, 663, 724, 725], "ignored": [243, 547, 604, 669, 803], "-case": 243, "release": 243, "directmapper": [243, 820, 821], "-compatibility": 243, "inserted": 243, "distributed": [244, 245], "called": [244, 248, 250, 513, 788, 789], "-ordered": [244, 245, 445], "-orbitals": [244, 245], "\u30b5\u30f3\u30d7\u30eb": 244, ">>": 244, "=(": [244, 309, 820, 823, 824, 825, 826], ",)": 244, ", (": [244, 413, 445, 822, 823, 824], ")]": [244, 413, 445, 455, 822, 828, 829], "[(": [244, 823], "_qubit": [246, 247, 249, 395, 403, 405, 409, 411, 819, 825], "_reduction": [246, 247, 249, 395, 403, 405, 409, 411, 819, 825], "2symmetry": [246, 247, 250], "2nd": [246, 445, 768], "converted": [246, 248], "paritymapper": [246, 819, 825], "introduces": 246, "virtue": 246, "exploited": 246, "determine": [246, 247, 249, 512], "mathematical": [246, 413, 445, 460], "detected": [246, 247, 248, 255, 413, 445, 512, 520], "knowledgeable": 246, "sector": [246, 247, 249, 512, 520], "lies": 246, "override": [246, 250], "qubitmapper": [246, 252, 395, 409, 411], "carry": [246, 247, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "applied": [246, 445, 460, 501, 513, 526, 709, 746, 747, 827, 829], "split": [246, 824], "less": [246, 445, 651, 715], "requiring": 246, "correct": [246, 247, 249, 512, 520, 665, 679, 686, 829], "auto": [246, 288, 293, 294, 380, 382, 383], "automatic": 246, "experiments": 246, "tapering": [246, 247, 249, 250], "_q": [247, 248, 249, 251, 390, 392, 394, 396, 398, 400, 402, 404, 407, 408, 410, 412, 431, 435, 513, 515, 819, 820, 826, 828], "_op": [247, 249, 390, 392, 394, 396, 398, 400, 402, 404, 407, 408, 410, 412, 493, 819, 820, 826, 827, 829], "_locator": 247, "indirectly": 247, "locator": 247, "inform": 247, "determination": 247, "2symmetries": [247, 250, 512, 520], "tapered": [247, 248, 512, 520], "_ops": [248, 251, 513, 819, 820, 826, 828], "_none": 248, "_commutes": 248, "match": [248, 257, 408, 581, 593, 598, 625, 645, 651, 665, 677, 679, 683, 686, 768, 812, 813], "force": [248, 250, 253, 255, 317, 318, 319, 321, 322], "thereof": [248, 251, 358, 677], "did": [248, 325], "commute": 248, "maintain": 248, "suppressed": 248, "consideration": 248, "eventually": 248, "nor": 249, "_match": [249, 253, 255], "manner": 249, "advanced": [250, 253, 255, 358], "taper": 250, "characteristics": 250, "matched": 250, "pertaining": 250, "multiplicity": [257, 269, 344, 352, 819, 821, 822, 825, 826], "charge": [257, 264, 344, 347, 358, 361, 819, 821, 822, 825, 826], "unitstype": [257, 344, 357, 358, 374, 819, 821, 822, 823, 824, 825], ".angstrom": [257, 344, 358], "_of": [257, 489, 823, 824], "_freedom": [257, 823, 824], "masses": [257, 268, 824, 826], "-independent": 257, "definition": [257, 358], "generic": [257, 565, 671], "composing": 257, "changing": [257, 768], "-stretching": 257, "angle": [257, 259, 260, 271, 828], "-bending": 257, "affected": 257, "perturbed": 257, "cause": 257, "atom": [257, 259, 260, 261, 262, 271, 272, 328, 344, 345, 358, 359, 766, 815, 823, 824, 826], "together": [257, 435, 460], "floats": 257, "representing": [257, 413, 445, 663, 724, 818, 827], "cartesian": [257, 593, 766, 783, 785, 786, 787, 788], "coordinates": [257, 358, 494, 766, 783, 784, 785, 786, 787, 788], "2s": [257, 344, 401], "taking": [257, 814], "helper": 257, "typical": 257, "itertools": [257, 826], ".partial": 257, "(molecule": [257, 823, 824], ".stretching": 257, "_potential": [257, 536, 548, 823, 828], ",{": 257, "_pair": [257, 261, 262, 272, 823, 824], "\u300f:": 257, "mass": 257, "geometries": 257, "_trio": [259, 260, 271], "magnitude": [259, 260, 262, 271, 272], "radians": [259, 260, 271], "bend": [259, 260, 271], "direction": [259, 260, 271, 537, 541, 560, 561, 562, 563, 593, 598], "toward": [259, 260, 271, 401], "increasing": [259, 260, 271, 428], ".*": [259, 260, 271], "perturb": [259, 260, 261, 262, 271, 272], "bent": [259, 260, 271], "apart": [259, 260, 261, 262, 271, 272], "away": [259, 260, 261, 262, 271, 272], "vertex": [259, 260, 271], "remain": [259, 260, 271], "stationary": [259, 260, 261, 262, 271, 272], "plus": 260, "moved": 261, "remains": [261, 262, 272], "stretch": [262, 272, 823, 824], "stretched": [262, 272], "accounting": 267, "enum": [275, 280, 287, 327, 332, 358, 379, 641], "angstrom": [276, 344, 819, 825, 826], "'angstrom": 276, "bohr": [277, 344], "'bohr": 277, "base": [278, 285, 377, 440, 501, 571, 572, 578, 658, 666, 671, 709], "**": [282, 344, 829], "bsto": 283, "'sto": [283, 294, 306, 310, 341, 349, 358, 365, 383], "electronicstructuredriverresult": [286, 300, 302, 303, 307, 342, 353, 370, 812, 814, 826], "'auto": [288, 380], "'gaussiandriver": 289, "'psi": 290, "4driver": 290, "'pyquantedriver": 291, "'pyscfdriver": 292, "methodtype": [293, 294, 298, 305, 306, 340, 341, 344, 348, 349, 351, 358, 362, 365, 369], "verify": 293, "electronicstructuredriver": [293, 294, 301, 304, 339, 344, 358, 513, 826], "missingoptionallibraryerror": [293, 382], "unsupportmethoderror": [293, 305, 340, 348, 362], "3g": [294, 304, 306, 310, 339, 341, 344, 349, 358, 365, 383, 819, 821, 822, 825, 826], ".rhf": [294, 306, 341, 344, 349, 358, 365], "_type": [294, 339, 383, 819, 821, 822, 823, 824, 825, 826], "electronicstructuredrivertype": [294, 297, 819, 821, 822, 823, 824, 825], ".auto": [294, 383], "_input": [301, 826], "reading": [301, 323], "partially": 301, "knowles": 301, "peter": 301, "nicholas": 301, "handy": 301, "communications": 301, "volume": [301, 391], "pages": 301, "issn": 301, "doi": [301, 401, 708, 768, 827], "dump": 302, "outpath": 302, "orbsym": 302, "isym": 302, "dumped": 302, "assumed": [302, 358, 413], "_repulsion": [302, 601, 762, 824, 825], "inactive": [302, 812, 814], "spatial": 302, "config": [304, 339, 826], "rhf": [304, 333, 339], "/sto": 304, "scf": [304, 309, 339, 344, 350, 356, 358, 364, 367, 820], "(conventional": 304, ")\\": 304, "\\nh2": 304, "\\n": [304, 309, 313, 339, 821, 822], "nh": 304, "http": [304, 313, 339, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "/gaussian": [304, 313], "augmented": 304, "our": 304, "matrixelement": [304, 313, 315], "conforming": [304, 309, 313, 315, 339], "unit": [306, 310, 341, 358, 374, 826], "acceptable": [308, 312, 343, 355, 373], "jcf": [309, 310, 313], "#p": 309, "3lyp": [309, 820, 821, 826], "/cc": 309, "-pvtz": 309, "freq": [309, 820, 821, 826], "anharm": [309, 820], "=ultrafine": [309, 820], "=verytight": [309, 820], "\\nco": 309, "optimization": [309, 496, 768, 791, 802, 804, 820, 827], "nc": 309, "logfile": [309, 310], "normalize": [309, 318, 319], "vibrationalstructuredriver": [309, 382, 383, 526], "forces": [309, 313, 316], "separators": [309, 313], "strings": [309, 313, 315, 320, 358, 413, 445, 749, 776], "factors": [309, 318, 319], "vibrationalenergy": [309, 318, 826], "located": 309, "built": [310, 408], "precedence": 310, "params": 310, "resultant": 310, "vibrationalstructuredriverresult": [311, 378, 388, 826], "recorded": 313, "present": [313, 317, 321, 322, 491, 751, 812], "allowing": 313, "whatever": 313, "runs": [314, 354, 371], "since": [315, 768], "subject": [315, 493, 495, 766], "contents": [315, 427, 444, 472], "numbering": 316, "3a": 316, "constants": [317, 318, 319, 321, 322], "constant": [317, 321, 322, 431, 434, 435, 437, 824, 829], "watsonhamiltonian": [319, 508, 509, 579, 586, 595, 603, 615, 620, 630, 669, 689, 695, 701, 703, 826], "quartic": 322, "'molecule": [323, 339], "legacy": [323, 324, 579, 669], "-framework": 324, "_new": 324, "suffix": 324, "lookuperror": [324, 325], "re": [325, 797], "-constructed": 325, "guess": [327, 358, 366], "'atom": 328, "hcore": 329, "minao": 330, "'minao": 330, "-style": [332, 358, 417, 449, 464], "likely": [332, 812], "everywhere": 332, "ks": [332, 358], "'rhf": 333, "rks": 334, "'rks": 334, "rohf": 335, "'rohf": 335, "roks": 336, "'roks": 336, "uhf": 337, "'uhf": 337, "uks": 338, "'uks": 338, "}\\": [339, 819, 820, 822, 824, 827, 828], "\\nset": 339, "sto": [339, 344, 358, 819, 821, 822, 825, 826], "pk": 339, ".psicode": 339, "'h": [344, 358], "basistype": [344, 346, 355], ".bsto": 344, "tol": [344, 356], "maxiters": [344, 350], "/rpmuller": 344, "/pyquante": 344, "separated": 344, "semicolons": 344, "breaks": 344, "followed": [344, 422, 680], "preceding": 344, "xyz": [344, 358, 445, 494, 766, 771, 783, 789, 790], "-matrix": [344, 358], "too": [344, 413, 645], "hamiltonians": [344, 431, 531], "iterators": 344, "occurred": [353, 370], "easily": [354, 371], "tailor": [354, 371], "xc": [358, 375], "_functional": 358, "'lda": 358, "vwn": 358, "xcf": [358, 376], "_library": 358, "'libxc": 358, "conv": [358, 364, 826], "_tol": [358, 826], "_cycle": [358, 826], "init": [358, 366, 820, 826], "_guess": [358, 826], "initialguess": 358, ".minao": 358, "_memory": [358, 826], "chkfile": [358, 363], "-quantization": [358, 578, 709, 722], "denoting": [358, 413, 505, 515, 523, 528], "formats": 358, "{element": 358, "symbol": [358, 815], "_coord": [358, 828], "entries": [358, 660, 667, 693, 721, 826], "joined": 358, "written": 358, "specifications": 358, "accordance": 358, "equals": [358, 812], "(the": 358, "extensive": [358, 460], "refers": 358, "predefined": 358, "-correlation": [358, 375, 376], "lda": 358, "\u300f.": [358, 427], "effect": [358, 565, 658], "libxc": 358, "xcfun": 358, "memory": [358, 368], "checkpoint": [358, 363], "previously": [358, 613, 701], "converged": 358, "allowance": 368, "/kohn": 369, "-sham": 369, "'gaussianforcesdriver": 381, "_forces": [382, 383], "vibrationalstructuredrivertype": [383, 386], "fermionicmapper": [389, 391, 397, 403], "bravyi": [389, 391, 819], "-kitaev": [389, 391, 819], "fermion": [389, 391, 397, 403, 413, 437], "-to": [389, 391, 397, 399, 401, 403], "-qubit": [389, 391, 397, 399, 401, 403], "fermionicop": [390, 392, 396, 398, 404, 431, 439, 460, 535, 590, 599, 616, 623, 639, 663, 673, 826, 828, 829], "-hamiltonian": [390, 392, 394, 396, 398, 400, 404, 407, 408, 410, 412], "super": [391, 826], "-fast": 391, "closely": 391, "references": 391, "superfast": 391, "kanav": 391, "setia": 391, "james": 391, "whitfield": 391, "jcp": 391, "published": 391, "april": 391, "bksf": 391, "vibrationalmapper": 393, "direct": [393, 829], "vibrationalop": [393, 394, 412, 691, 698, 705, 724], "modal": [393, 460, 530, 707, 708, 711, 777], "_two": [395, 405, 409, 411], "reduced": [395, 405, 409, 411, 812], "accordingly": [395, 405, 409, 411], "spinmapper": [399, 401], "spinop": [400, 402, 410, 460, 547], "padding": 401, "_upper": 401, "logarithmic": [401, 402], "local": [401, 485, 486, 825], "individual": 401, "represented": [401, 413, 535], "lowest": 401, "lying": 401, "distinct": 401, "mathis": 401, "mazzola": 401, "tavernelli": [401, 812], "scalable": 401, "simulations": 401, "lattice": [401, 521, 524, 525, 532, 536, 537, 539, 540, 544, 546, 548, 558, 559, 560, 563, 564, 763, 828], "gauge": 401, "theories": 401, "computers": 401, "phys": [401, 708, 829], "rev": [401, 829], "physrevd": 401, "embedding": 401, "/lower": 401, "diagonal": [401, 563, 829], "pads": 401, "embedded": 401, "hand": 401, "corner": 401, "{matrix": 401, "{padding": 401, "* i": 401, "pauli": [408, 825], "_table": [408, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "table": [408, 483, 827], "paulis": [408, 825], "unexpected": 408, "label": [408, 413, 420, 427, 429, 445, 455, 460, 472, 535, 823, 824, 825], "content": 408, "register": [413, 421, 423, 430, 442, 445, 452, 457, 458, 459, 460, 468, 470, 473, 826, 828, 829], "_length": [413, 421, 430, 445, 460, 468, 473], "display": [413, 418, 424, 427, 535, 547, 660, 721], "_format": [413, 427, 535, 547, 789], "'sparse": [413, 535], "-mode": 413, "representation": [413, 428, 431, 437, 445, 460, 651, 671, 825], "identity": [413, 445], "hole": 413, "presence": [413, 780], "underscore": 413, "dense": [413, 427, 428, 445, 456, 460, 472, 535], "labels": [413, 425, 443, 445, 453, 460, 471], "similar": [413, 445], "+\"": 413, "ii": [413, 819, 820], "++": [413, 445], "-ie": 413, "sparse": [413, 420, 427, 428, 429, 445, 460, 535, 715], "_init": [413, 827], "consisting": [413, 427, 445, 472, 537, 552, 560, 563], "-separated": [413, 445], "words": [413, 445], "word": [413, 445], "+-": [413, 445, 819, 820], "ine": 413, "]_": 413, "<index": [413, 445], "-negative": [413, 445], "+_": [413, 445, 826, 828], "\"-": 413, "\"+": 413, "programmatic": 413, "(action": 413, "action": [413, 771], "operation": 413, "-\"": [413, 824], "initialization": [413, 445, 460, 493], "ways": [413, 812, 814], "(label": 413, "permitted": 413, "listed": [413, 812], "(tuple": 413, "coeff": [413, 455, 645, 646, 647], "complex": [413, 416, 445, 448, 455, 460, 463, 472, 531, 532, 533, 536, 537, 541, 542, 546, 548, 552, 558, 560, 563, 656, 677, 731, 818], "(list": 413, "repr": 413, "truncated": [413, 526, 651, 715], "_truncation": [413, 651, 715, 828, 829], "truncation": [413, 424, 526, 604, 651, 660, 676, 680, 692, 700, 721, 820, 821], "disabled": [413, 424, 660, 721], "printed": [413, 651, 715], ".operators": [413, 445, 578, 826, 829], "(sum": [413, 823], "(fermionicop": 413, "range": [413, 823, 824, 828], "0j": [413, 445, 819, 820, 821, 826, 827, 828], "algebra": [413, 417, 431, 445, 449, 460, 464], "arithmetic": [413, 445, 460], "operations": [413, 435, 445, 460, 572], "subtraction": [413, 445, 460], "scalar": [413, 419, 445, 450, 460, 465], "multiplication": [413, 417, 419, 445, 449, 450, 460, 464, 465], "adjoint": [413, 416, 445, 448, 463], ", display": 413, "('i": 413, "+'": 413, "'+i": 413, "'+": 413, "-_": [413, 826, 828], "']": 413, "('": 413, "'-": 413, "(+e": 413, "~fermionicop": 413, "-'": 413, "principle": 413, "makes": [413, 768], "scenario": 413, "_iterable": 413, "(somedata": 413, "iteration": [413, 825], "fermionicops": 413, "iterable": [413, 565], "iterating": 413, "yields": 413, "term": [413, 431, 651, 708, 711, 715, 827], "describing": [413, 798], "+\u300d": 413, "-\u300d": 413, "sparsely": [413, 535], "densely": [413, 535], "overloaded": [415, 419, 447, 450, 462, 465], "conjugate": [416, 448, 463], "transpose": [416, 448, 463, 680, 684], "compose": [417, 449, 464, 656, 677, 683], "overloads": [417, 449, 464], "composition": [417, 449, 464], "@b": [417, 449, 464], "(x": [417, 449, 464, 824], "= a": [417, 449, 464], "(b": [417, 449, 464], "mul": [419, 450, 465], "normal": [420, 422, 429], "modified": [420, 425, 443, 453, 471, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "ordered": [420, 428, 429], "considering": [420, 429], "commutation": [420, 429], "\\colon": [420, 429], "en": [420, 429, 489, 565, 789, 818, 827], ".wikipedia": [420, 429, 489, 565, 789, 818, 827], "/wiki": [420, 429, 489, 565, 789, 818, 827], "/normal": [420, 429], "_order": [420, 526, 692, 820, 821], "#multiple": [420, 429], "_fermions": [420, 429], "unity": [421, 468], "-operator": [421, 430, 468, 473], "_ordered": 422, "simplify": [422, 425, 443, 451, 453, 469, 471, 828], "val": 424, "merges": [425, 443, 453, 471], "eliminates": [425, 443, 453, 471], "close": [425, 443, 453, 471, 649], "checking": [425, 443, 453, 471, 581, 625], "iterate": [426, 567, 812, 826], "-format": [427, 444, 472, 671], ".display": 427, "fock": [428, 605, 636, 637, 812], "bitstring": [428, 766, 769, 827], "csc": 428, "scipy": [428, 829], ".sparse": 428, ".csc": 428, ".ndarray": [428, 445, 456, 457, 458, 459], "dtype": [428, 456], "=numpy": [428, 456], ".complex": [428, 456], "hermitian": [431, 436, 441, 829], "_part": [431, 829], "antisymmetric": [431, 432, 437, 829], "_modes": [431, 460, 468, 473, 829], "tolerancesmixin": [431, 440], "\\sum": [431, 435, 819, 820], "pq": [431, 435, 812, 819, 829], "frac": [431, 435, 437, 819, 820, 824, 829], "(\\": [431, 435, 822, 827, 829], "{h": [431, 435, 819, 820, 822], ".c": [431, 435], ".}": [431, 435], "+ \\": [431, 435, 812, 820, 829], "{constant": [431, 435, 437, 829], "\\delta": [431, 435, 829], "routines": 431, "matrices": [431, 649, 651, 658, 671, 676, 680, 684], "conserve": [431, 432, 436], "additive": 431, "consistent": 431, "diagonalizes": 435, "recall": 435, "rewritten": 435, "varepsilon": [435, 829], "canonical": 435, "general": [435, 531, 549, 812, 828], "satisfies": [435, 812, 818], "(when": 435, "neq": 435, "\\varepsilon": [435, 829], "sorted": [435, 667, 693], "ascending": [435, 445], "majorana": 437, "\\frac": 437, "{i": 437, "}{": [437, 819, 820, 824], "real": [437, 533, 546], "normalized": 437, "sqrt": 437, "(a": 437, "= \\": [437, 819, 820, 824, 829], "acts": [438, 442, 452, 457, 458, 459, 565], "staralgebramixin": 440, "-type": [440, 511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705], "formulation": [440, 497, 766], "sumop": [442, 452], "fraction": [445, 454], "primitives": [445, 460], "+,": 445, "^x": 445, "-component": 445, "^y": 445, "^z": 445, "^+": 445, "lowering": [445, 460], "character": 445, "unique": [445, 565, 812], "\"x": 445, "iiyyz": 445, "-ix": 445, "ones": [445, 460, 812], "apply": [445, 675], "[xyzi": 445, "]_<": 445, ">^": 445, "power": [445, 457, 458, 459, 708, 711], "<power": 445, "omit": 445, "implying": 445, "exclusively": 445, "\"z": 445, "pattern": [445, 565, 826], "qutrit": 445, "heisenberg": 445, "transverse": 445, "magnetic": 445, "xx": [445, 819], "yy": 445, "zz": [445, 819], "zi": [445, 819], "iz": [445, 819], "('x": 445, "'y": 445, "'z": 445, "coeffs": 445, "1st": 445, "axis": [445, 485, 487], "3rd": [445, 768], "-dimensional": [445, 537], "1j": [445, 828, 829], ", spin": 445, "half": [445, 812], "-integer": 445, "-odd": 445, "otimes": [457, 458, 459, 820], "vibration": [460, 824], "kinds": 460, "_+": 460, "_-": 460, "accepts": 460, "notation": [460, 827], "_index": 460, "}*": 460, "shorthand": 460, "accompanied": 460, "(adjoint": 460, "described": [460, 468, 473, 812], "them": [460, 468, 473, 552, 709, 768], "rtype": [466, 467, 786, 787], ":returns": [467, 787], "peptide": [474, 476, 477, 478, 479, 481, 483, 493, 495, 498, 500, 766, 783, 827], "calculate": [475, 482, 484, 499], "_sequence": [475, 479, 482, 484, 489, 499, 766, 780, 827], "calculates": [475, 482, 484, 499, 768], "residues": [475, 479, 482, 484, 489, 500], "chain": [475, 477, 479, 480, 482, 484, 489, 490, 499, 500, 768, 780, 781, 782, 783, 785, 786, 788, 790], "proteins": [475, 482, 484], "amino": [475, 482, 484, 499], "acids": [475, 482, 484, 499], "side": [477, 479, 489, 491, 492, 493, 500, 565, 780, 782, 783, 786, 790, 827], "_chain": [479, 489, 493, 500, 771, 780, 783, 827], "_residue": [479, 489, 493, 500], "_sequences": [479, 489, 493, 500], "basechain": [479, 500], "invalidsizeexception": 479, "lengths": [479, 537, 543], "invalidsidechainexception": 479, "_energies": [481, 824, 826, 829], "construction": [481, 669], "miyazawa": [482, 483, 484, 827], "-jernigan": [482, 483, 484], "jernigan": [483, 827], "mol": [483, 823, 824, 827], "biol": [483, 827], "penalty": [485, 486, 487, 488, 493, 827], "_chiral": [485, 827], "_back": [485, 827], "gathers": 485, "protein": [485, 489, 493, 494, 495, 496, 766, 767, 768, 769, 770, 779, 783, 827], "folding": [485, 489, 493, 494, 495, 496, 766, 827], "impose": [485, 488], "chirality": [485, 488], "penalize": [485, 486, 487], "turns": [485, 487, 766, 768, 780, 781, 782, 783, 827], "overlap": [485, 486, 610], "neighbor": [485, 486], "contact": [485, 486, 827], "interactions": 489, "/amino": [489, 827], "_acid": [489, 827], "#table": 489, "_standard": 489, "_amino": 489, "_abbreviations": 489, "_and": [489, 829], "_properties": 489, "description": [489, 812], "mainchain": 490, "-hot": 491, "sidechain": 492, "_parameters": [493, 537, 825, 827, 828], "samplingproblem": 493, "_terms": [493, 651, 670, 696, 715, 827], "_seq": 493, "saassasaag": 493, "\"\"": [493, 826, 827], ", \"": [493, 827], "\"a": 493, "\"s": 493, "(main": [493, 827], "mj": [493, 827], "_interaction": [493, 532, 533, 536, 548, 827, 828], "miyazawajerniganinteraction": [493, 827], "_folding": [493, 827], "_problem": [493, 819, 820, 821, 822, 823, 824, 827], "(peptide": [493, 827], ".qubit": [493, 827], "strength": [493, 532, 533, 536], "enforcing": 493, "interprets": [494, 506, 516, 524, 529, 569, 587, 596, 606, 621, 631, 672, 690, 697, 766, 826], "plot": [494, 767, 779, 825], "minimumeigensolverresult": [494, 516, 524, 529, 795, 805], "forwardref": 494, "builds": 496, "optimized": 496, "compressed": [496, 768], "_full": [496, 823, 824], "pauliop": 496, "unused": [497, 766, 768, 780], "removed": [497, 766, 814], "compression": [497, 766], "dummy": [499, 826], "infer": 499, "_id": 500, "transformers": [501, 513, 526, 593, 601, 746, 747, 825], "basetransformer": [501, 513, 526, 812], "transformations": [501, 513, 526, 530], "eigen": [502, 514, 522, 527, 731, 733, 734], ".eigen": [502, 514, 522, 527], "_solvers": [502, 514, 522, 527, 821, 822, 823, 825], ".numpyeigensolver": [502, 514, 522, 527], ".filter": [502, 514, 522, 527], "ensures": [502, 514, 522, 527], "preserved": [502, 514, 522, 527], "hopping": [505, 515, 523, 528, 533, 534, 536], "]]]": [505, 515, 523, 528], "cases": [505, 515, 523, 528], "_vibrational": [505, 523, 528], "commutativities": [505, 515, 528], ".settings": [511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705], ".dict": [511, 519, 530, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705, 823], "eigensolverresult": [516, 524, 529], "angular": [519, 590, 759], "momentum": [519, 590, 759], "latticemodel": [521, 532, 544, 546], "raises": 523, "latticeproblemmodel": 523, "latticemodelresult": 524, "bosonic": [526, 707], "aqua": 527, "vibrationalstructureresult": 529, "graph": [531, 549, 553, 556, 828], "-valued": [531, 604, 651, 676, 680], "weights": [531, 537, 541, 556, 560, 563, 828], "edges": [531, 537, 540, 541, 549, 552, 556, 557, 558, 560, 563, 564], "hypercubiclattice": [531, 558, 560], "others": 531, "translational": 531, "onsite": [532, 533, 536, 537, 542, 558, 560, 563, 828], "-site": [532, 533, 536, 546, 548], "valued": [533, 546], "square": [533, 546, 560, 828], "\u300d.": [535, 789], "uniform": [536, 537, 548, 828], "_onsite": [536, 548, 828], "edge": [537, 541, 556, 558, 560, 563, 828], "_parameter": [537, 558, 560, 563, 828], "boundary": [537, 538, 558, 560, 563, 828], "_condition": [537, 558, 560, 563, 828], "boundarycondition": [537, 538, 558, 560, 563, 828], ".open": [537, 558, 560, 563, 828], "hyper": [537, 539], "-cubic": 537, "dimensions": [537, 539], "_conditions": 537, ".problems": [537, 819, 820, 821, 822, 823, 824, 825, 827, 828], ".lattice": [537, 828], "directions": [537, 563], "-loops": [537, 540, 542, 551, 558, 560, 563, 564], "conditions": [537, 558, 560, 563, 812, 823], "dimension": [537, 538, 539, 543, 645], "weight": [537, 542, 552, 558, 560, 563], "connecting": [537, 558, 560, 563], "node": [537, 554, 558, 560, 563], "condition": [537, 538, 558, 560, 563, 823], ".periodic": [537, 558, 560, 563, 828], "dim": 539, "draw": [540, 551, 564, 825, 828], "_loop": [540, 551, 564, 828], "style": [540, 551, 564, 825, 828], "boundaries": [540, 564], "latticedrawstyle": [540, 551, 564, 828], "styles": [540, 551, 564], "retworkx": [540, 549, 551, 564, 828], ".visualization": [540, 551, 564], ".mpl": [540, 551, 564], "_draw": [540, 551, 564], "/retworkx": [540, 551, 564], "/stubs": [540, 551, 564], "#retworkx": [540, 551, 564], "coupling": 545, "pygraph": [549, 553], ".pygraph": [549, 828], "networkx": 549, ".graph": [549, 828], "multigraph": 549, "-numeric": 549, "weighted": [552, 556, 557, 828], "nodes": [552, 555, 559], "lists": 552, "nodeindices": 554, "indexes": 554, "adjacency": 556, "triangular": [556, 563, 828], "weightededgelist": 557, "_nodes": [558, 828], "sites": 558, "cols": [560, 561, 563, 828], "_co": [565, 566, 568, 576], "composite": [565, 826], "container": [565, 651, 715], "instances": [565, 654, 656], "/composite": 565, "_pattern": 565, "prop": [566, 568], "+t": [566, 568], "queried": [568, 670, 696, 815], "iterates": 570, "groupproperty": 570, "give": 571, "every": [571, 768, 797], "writing": [571, 666], "although": 572, "initially": 572, "increment": 572, "secondquantizedproperty": [576, 826], "subtype": 576, "purely": [576, 593, 601, 812], ".basedriver": 578, ".secondquantizedop": 578, "_tolerance": [581, 625], "electronicproperty": [581, 593, 618, 625, 666, 826], "interpretation": 581, "measured": [581, 625, 753, 756, 821, 822, 825], "logged": [581, 625], "info": [581, 625], "cls": [586, 595, 603, 615, 620, 630, 689, 695, 703, 826], "_axes": [593, 827], "_dipole": 593, "_moment": 593, "reverse": [593, 598, 757], "_sign": 593, "dipolemoment": [593, 666], "minus": [593, 601, 812], "shifts": [593, 601, 666, 814], "introduced": [593, 601], "storage": [593, 601, 667, 693], "location": [593, 601], "axes": 593, "named": 593, "sign": [593, 598, 757], "components": [593, 598, 601, 754], "reversed": [593, 598, 757], "_integrals": [601, 666, 692, 826], "integralproperty": [601, 826], "target": [601, 692, 817, 825], "repulsion": [601, 608, 755, 821, 822], "electronicintegrals": [601, 605, 607, 610, 666, 667, 670, 671, 676, 677, 679, 680, 683, 686, 812], "bb": 604, "ba": 604, "electronicbasis": [604, 645, 651, 655, 658, 670, 812, 826], "integral": [604, 605, 651, 652, 658, 660, 665, 667, 671, 676, 679, 680, 684, 686, 693, 707, 708, 709, 711, 715, 721, 722, 826], "-beta": [604, 680, 684, 826], "-alpha": [604, 680, 684, 826], "treat": [604, 651, 676, 680], "density": [605, 671, 826, 827], "ao": [605, 607, 610, 642, 683, 826], "kinetic": [607, 708, 711, 715], "-distinction": 609, "groupedelectronicproperty": [613, 812, 813], "_beta": [625, 645, 812], "serves": 625, "purposes": [625, 658], ".num": [625, 819, 825, 826], "halved": 625, "remainder": 625, "numbers": [625, 636, 637, 812], "-hartree": [636, 637], "encounter": [636, 637], "superpositions": [636, 637], "determinants": [636, 637], "enumeration": 641, "bases": [641, 677, 683], "simply": [641, 822], "'atomic": 642, "mo": [643, 826], "'molecular": 643, "'spin": 644, "_basis": [645, 826], "_alpha": [645, 812, 827], "_body": [651, 670, 696, 715, 826], "template": 651, "containers": 651, "stubs": 651, "completed": 651, "extra": 651, "stub": 651, "truncate": [651, 715], "ad": [651, 676, 680], "verbatim": [651, 676, 680], "einsum": [656, 677, 681, 682, 683], "_subscript": [656, 677, 683], "composes": [656, 677, 683], "subscript": [656, 677, 683], "exceed": [658, 812], "fallback": 658, "place": [658, 676, 680, 812], "indexerror": [658, 684], "exceeds": [658, 684, 708], "_num": [660, 721], "_entries": [660, 721], "electronicbasistransform": [665, 675, 679, 686, 812, 813, 826], "subclasses": 666, "nested": 667, "simplifies": [667, 693], "duplicate": [667, 693], "inconsistent": [667, 693], "yet": [669, 722, 724, 795, 805], "unavailable": [670, 696], "typically": 671, "observable": [671, 795, 805, 825], "-formatted": 671, "functionality": 671, "applies": 675, "latter": [676, 680, 684], "'ij": 677, "ji": 677, "[alpha": 678, "zeros": [678, 826], "quartet": 680, "assigned": 680, "quadrants": 680, "plane": 680, "happens": 680, "differ": 680, "'pqrs": 681, "pi": [681, 828], "qj": 681, "rk": 681, "sl": 681, "->": [681, 682, 826, 828], "ijkl": [681, 820], "'ijkl": 682, "ljik": 682, "produces": 683, "falls": [684, 708, 711], "vibrationalproperty": [687, 692], "vibrationalbasis": [687, 692, 707, 717], "vibrationalintegrals": [692, 693, 696], "highest": 692, "groupedvibrationalproperty": 701, "_per": [707, 709, 824], "_mode": [707, 709, 819, 822], "hermite": 707, "polynomials": 707, "oscillator": 707, "watson": [707, 820], "neglected": [707, 709], "_term": [708, 711], "exponent": [708, 711], "math": [708, 711, 828], "dq": [708, 711], "chem": 708, "(table": 708, "unsupported": 711, "entry": [715, 818, 826], "negative": 715, "permits": [722, 812], "mismatching": 722, "_results": [725, 822, 823, 824], "algorithmresult": [730, 732, 737, 764, 774], "combine": 732, "receiver": 732, "eigenenergies": 733, "groundenergy": 735, "groundstate": [736, 823], "debye": [742, 761, 821, 822], "op": [752, 826], ".u": [754, 821, 822], "proteinfoldingproblem": [766, 768, 780, 827], "decodes": 766, "_xyz": [766, 827], "software": 766, "plots": [766, 779], "_figure": [766, 827], "matplotlib": [766, 820, 823, 824, 825, 827], "figure": [766, 767, 779], "bit": [766, 780], "title": [767, 779], "'protein": [767, 779], "ticks": [767, 779, 827], "grid": [767, 779, 827], "3d": [767, 779, 827, 828], "showing": [767, 779], "graphic": [767, 779], "bits": 768, "denoted": 768, "_\u300f": 768, "ranging": 768, "arbitrarily": 768, "rotation": [768, 818, 821], "secondary": 768, "going": 768, "effectively": 768, "5th": [768, 780], "sometimes": 768, "4th": 768, "efficient": 768, "start": 768, "flipping": 768, "pairing": 768, "chose": 768, "proteinshapedecoder": 769, "proteinshapefilegen": [770, 778], "comment": [771, 789], "letters": 771, "aminoacids": [771, 827], "taken": 771, "arg": 771, "working": [771, 789], "blank": [771, 789], "best": [772, 825], "_gen": [778, 827], "plotter": 778, "plotted": 778, "_hot": 780, "_vector": [780, 827], "fifth": 780, "_bit": 780, "handles": [780, 783], "decoding": 780, "decoded": 780, "_turns": [783, 827], "aminoacid": [783, 788, 827], "positions": [783, 785, 786, 828], "[-": [784, 829], "arrays": 786, "symbols": 787, "saves": 789, "/xyz": 789, "\u300cname": 789, "provider": [791, 795, 800, 804, 805, 825], "backend": [791, 793, 795, 804, 805, 825, 827], "shots": [791, 797, 801, 804, 825, 827], "measurement": [791, 797, 804, 825], "_error": [791, 804, 825], "_mitigation": [791, 804, 825], "_intermediate": [791, 804, 827], "variationalalgorithm": 791, "client": [791, 804], "parameterized": [791, 804], "spsa": [791, 804, 825], "qn": [791, 804, 825], "-spsa": [791, 804, 825], "keys": [791, 795, 804, 805, 823], "settings": [791, 804, 823], "'name": [791, 804], "maxiter": [791, 804, 825], "feature": [791, 804], "mitigation": [791, 797, 804, 825], "four": [791, 804], "mean": [791, 804, 827], "deviation": [791, 804], "approximate": [795, 805], "runtimeerror": [795, 805], "failed": [795, 805], "readout": 797, "fitter": [797, 825], ".shots": 797, "-calibrations": 797, "minutes": 797, "id": [799, 808], "_operator": [803, 827], "expectations": 803, "renamed": [804, 806], ".runtime": [804, 825], ".vqeclient": [804, 825], "renaming": 804, "reflects": 804, "vqeruntimeresult": 806, "vqeresult": [806, 807], "additionally": [806, 807, 814], "history": [806, 807, 809, 825], "affect": [810, 811], "hilbert": [810, 811], "_electrons": [812, 825], "_molecular": [812, 813, 825, 826], "active": [812, 813, 814, 825], "-space": 812, "^i": 812, "= h": 812, "iipq": 812, "- g": 812, "iqpi": 812, "jj": 812, "+ f": 812, "-electron": 812, "exclusion": 812, "-core": [812, 814], "retaining": 812, "high": [812, 827], "-quality": 812, "nonetheless": 812, "met": 812, "disambiguate": 812, "select": [812, 825], "selecting": 812, "rossmannek": 812, "barkoutsos": 812, "-property": 812, "implies": 812, "enforce": 812, "freeze": 814, "_core": 814, "activespacetransformer": [814, 825, 826], "fashion": 814, "responsibility": 814, "indeed": 814, "performed": 814, "atomic": [815, 826], "counts": [816, 827], "slices": 817, "tensor": 817, "slice": 817, "ellipsis": 817, ", \u2026": 817, "applying": [817, 829], "row": 818, "=\n\\": 818, "/givens": 818, "_rotation": 818, "#stable": 818, "_calculation": [818, 822], ".netlib": 818, "/lapack": 818, "/lawnspdf": 818, "/lawn": 818, "pdf": 818, "\u3053\u306e": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u30da\u30fc\u30b8": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "docs": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "_structure": [819, 820, 824], ".ipynb": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u751f\u6210": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "\u307e\u3057": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828], "\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": [819, 820, 821, 822, 824, 827, 828, 829], "\u6570\u5f0f": [819, 820], "\u8868\u3055": [819, 820], "\\mathcal": [819, 820], "- \\": [819, 820], "nabla": [819, 820], "{z": [819, 820], "-r": [819, 820], "|}": [819, 820], ">i": [819, 820], "{e": [819, 820, 822], "\u539f\u5b50\u6838": [819, 820], "\u975e\u5e38": [819, 820, 827], "\u91cd\u3044": [819, 820], "\u8cea\u91cf": [819, 820], "\u6709\u3059\u308b": [819, 820], "\u305f\u3081": [819, 820, 821, 822, 823, 825, 826, 828, 829], "\u539f\u5b50": [819, 820, 824, 828], "\u6bd4\u3079": [819, 820, 822], "\u9045\u3044": [819, 820], "\u904b\u52d5": [819, 820, 827], "\u901f\u5ea6": [819, 820], "\u304c\u3063": [819, 820, 824], "\u5206\u96e2": [819, 820], "\u3068\u307f": [819, 820], "\u8003\u3048\u308b": [819, 820, 828, 829], "\u30dc\u30eb\u30f3": [819, 820], "\u30aa\u30c3\u30da\u30f3\u30cf\u30a4\u30de\u30fc": [819, 820], "\u8fd1\u4f3c": [819, 820, 824], "\u547c\u3070": [819, 820, 823, 824, 825, 828, 829], "\u5ea7\u6a19": [819, 820, 827], "\u4e00\u3064": [819, 820, 822, 826], "\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc": [819, 821, 823, 825, 827, 828], "\u9650\u5b9a": [819, 820, 823], "\u6271\u3046": 819, "\u660e\u3089\u304b": 819, "\u53d6\u308a\u7d44\u3080": 819, "\u30fb\u30ec\u30d9\u30eb": 819, "\u975e\u76f8": [819, 820], "\u5bfe\u8ad6": [819, 820], "\u304b\u3064": 819, "\u6642\u9593": [819, 823, 825], "\u30b7\u30e5\u30ec\u30fc\u30c7\u30a3\u30f3\u30ac\u30fc": [819, 820], "\u65b9\u7a0b": [819, 820, 822], "\u6c42\u89e3": [819, 820], "\u5c0e\u51fa": [819, 820, 827], "\u3067\u3059": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "}_": [819, 820, 822, 827], "{el": 819, "|\\": [819, 820], "\u7279\u306b": [819, 821], "\u4e0b\u8a18": 819, "\u4e0e\u3048": [819, 820, 822, 823, 825, 826, 828], "\u3089\u308c": [819, 820, 822, 823, 824, 825, 826, 828], "langle": [819, 820, 822], "\\psi": [819, 820], "\u3057\u304b\u3057": [819, 820], "\u6b21\u5143": [819, 820, 823, 828], "\u81ea\u7531\u5ea6": [819, 827, 828], "\u5fdc\u3058": [819, 823], "\u6307\u6570": [819, 827], "\u95a2\u6570": [819, 820, 822, 823, 826, 827], "\u5897\u5927": 819, "\u3053\u3046\u3057": 819, "\u5897\u52a0": [819, 827], "\u62bc\u3055\u3048\u308b": 819, "\u30a2\u30d7\u30ed\u30fc\u30c1": [819, 820, 823, 826, 827], "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc": [819, 821, 822, 827, 829], "\u7528\u610f": 819, "\u671f\u5f85": 819, "\u76f4\u63a5": [819, 820, 824, 825, 826], "\u6e2c\u5b9a": [819, 822], "\u8003\u3048": [819, 826, 828], "\u5177\u4f53": 819, "\u306f\u3069": 819, "\u306e\u3067\u3057\u3087": 819, "\u89e3\u304f": [819, 820, 822, 825, 826], "\u51fa\u767a": 819, "\u30cf\u30fc": 819, "\u30c8\u30ea\u30fc": 819, "\u30d5\u30a9\u30c3\u30af": 819, "\u7528\u3044": [819, 820, 821, 822, 824], "\u624b\u6cd5": [819, 820], "n\u4f53": [819, 826], "\u72ec\u7acb": [819, 820], "\u500b\u4f53": 819, "\u5e73\u5747": 819, "\u5834\u8fd1": 819, "\u30cf\u30fc\u30c8\u30ea\u30fc": 819, "\u52b9\u7387": [819, 825, 827, 829], "\u6b63\u78ba": [819, 820, 821, 822, 826], "\u4ea4\u63db": [819, 821, 825], "\u306b\u3064": 819, "\u306a\u304c\u308a": 819, "\u540c\u58eb": 819, "\u76f8\u95a2": [819, 820], "\u8003\u616e": [819, 827], "\u3044\u307e\u305b": [819, 826, 827, 829], "\u305f\u304c\u3063": [819, 827], "\u826f\u3044": [819, 827], "\u8b70\u8ad6": [819, 827], "\u4e0a\u8ff0": [819, 826], "\u5225\u540d": 819, "\u8ecc\u9053": [819, 820, 821, 829], "\uff08mos": 819, "\u6570\u5b66": 819, "\u8868\u73fe": [819, 820, 826, 829], "\\hat": [819, 822], "elec": 819, "}=": [819, 824, 827], "hat": [819, 820, 822, 826, 829], "pqrs": 819, "\u4e00\u4f53": [819, 820], "\u901a\u308a": [819, 826, 827], "phi": [819, 820], "^*": [819, 829], "(r": [819, 824], "-\\": [819, 820, 822, 824, 829], ")dr": 819, "\u4e8c\u4f53": [819, 820], "_r": 819, "_s": 819, ")}": [819, 820, 822, 824, 828], "{|r": 819, "dr": 819, "1dr": 819, "\\phi": [819, 820], "_u": 819, "\u88ab\u5360": [819, 821], "\u3082\u3057\u304f": [819, 820], "\u7a7a\u8ecc\u9053": [819, 821], "\u53d6\u308b": [819, 828], "2\u3064": 819, "\u307e\u3067": [819, 820, 825, 826], "\u5165\u308b": 819, "\u3002\u3057\u304b\u3057": [819, 821, 827], "\u30b9\u30d4\u30f3": [819, 822, 826, 828], "\u4e0a\u5411\u304d": 819, "\\alpha": 819, "\u4e0b\u5411\u304d": 819, "\\beta": 819, "\u306e\u3069\u3061\u3089\u304b": 819, "\u53d6\u308a\u6271\u3044": 819, "\u542b\u3080": [819, 820, 825, 826, 827, 828, 829], "\u304b\u3082": 819, "\u3057\u304f": 819, "\u7a7a\u8ecc": 819, "\u5b9f\u969b": [819, 820, 823, 826, 829], "\u4e0a\u8a18": [819, 821, 826, 828, 829], "\u904e\u7a0b": 819, "\u5b9f\u73fe": [819, 820], "\u7d39\u4ecb": [819, 820, 826], "\u89e3\u304f\u7570\u306a\u308b": 819, "\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9": 819, "\u3002qiskit": [819, 825, 829], "\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9": [819, 821, 822, 826], "\u5e73\u8861": [819, 820, 824], "\u7d50\u5408": [819, 820, 821, 824, 825, 829], "\u8ddd\u96e2": [819, 823, 825], "\u96fb\u8377": [819, 824], "\u30b7\u30f3\u30b0\u30ec\u30c3\u30c8": 819, "\u6c34\u7d20": [819, 821, 822, 824], "\u8a2d\u5b9a": [819, 823, 825, 827, 828], "electronicstructuremoleculedriver": [819, 821, 822, 823, 824, 825], "[\"h": [819, 821, 822], ", [": [819, 821, 822, 825], "\"h": [819, 821, 822, 823, 824, 825], "=electronicstructuredrivertype": [819, 821, 822, 823, 824, 825], ".pyscf": [819, 821, 822, 823, 824, 825], "couldn": [819, 822], "&#": [819, 820, 822, 823, 824, 826, 827], "cython": [819, 822], "becke": [819, 822], "routine": [819, 822], "/users": [819, 822], "/manoel": [819, 822], "/opt": [819, 822], "/anaconda": [819, 822], "envs": [819, 822], "/qiskitenv": [819, 822], "/lib": [819, 822], "/python": [819, 822], "site": [819, 822], "-packages": [819, 822], "/pyscf": [819, 822], "/misc": [819, 822], "5pydeprecationwarning": [819, 822], "_config": [819, 822], "/nature": 819, "/apidocs": 819, "\u524d\u9805": 819, "\u793a\u3057": [819, 821, 823, 824, 828, 829], "\u30d5\u30a7\u30eb\u30df\u30aa\u30f3": [819, 829], "\u6f14\u7b97\u5b50": [819, 820, 826, 827, 828, 829], "\u5bfe\u8c61": 819, "\u30a8\u30f3\u30b3\u30fc\u30c9": [819, 820, 827], "\u3053\u308c\u3089": [819, 820, 822, 825, 829], "\u7d71\u8a08": [819, 827], "\u5f93\u3044": 819, ")\u3002": [819, 826, 827], "\u7570\u306a\u308b": [819, 820, 821, 826], "\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc": 819, "\u6301\u3064": [819, 826, 827, 828, 829], "\u3055\u307e\u3056\u307e\u306a": [819, 823], "\u30bf\u30a4\u30d7": [819, 821, 827], "\u5b58\u5728": [819, 827], "zeitschrift": 819, "\u00fcr": 819, "physik": 819, "journal": 819, "annals": 819, "\u6709\u7528": 819, "\u56f3\u53c2": 819, "\u305d\u308c": [819, 820, 823, 824, 825, 826, 827, 828], "\u30de\u30c3\u30d7": [819, 826, 827], "\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc": 819, "[2": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], ".converters": [819, 820, 821, 822, 823, 824, 825, 828], "jordanwignermapper": [819, 821, 822, 823, 824, 828, 829], "[3": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "es": [819, 821, 822, 823, 824], "(driver": [819, 820, 821, 822, 823, 824, 825], "(second": [819, 820], "-+": [819, 820], "iiin": [819, 820], "iini": [819, 820], "iinn": 819, "inii": [819, 820], "inin": 819, "inni": 819, "niii": [819, 820], "niin": 819, "nini": 819, "nnii": 819, "\u5b9a\u7fa9": [819, 820, 821, 822, 823, 824, 826, 828], "\u306b\u5bfe\u3057": [819, 820, 824, 827], "\u5909\u63db": [819, 820, 821, 823, 826, 827, 829], "[4": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "(mapper": [819, 820, 824], "=jordanwignermapper": [819, 824], ".convert": [819, 820], "(qubit": [819, 820, 821, 822, 823, 824, 825, 827, 828], "iiii": [819, 820], "ziii": 819, "izii": 819, "zzii": 819, "iizi": 819, "zizi": 819, "izzi": 819, "iiiz": 819, "ziiz": 819, "iziz": 819, "iizz": 819, "xxxx": 819, "yyxx": 819, "xxyy": 819, "yyyy": 819, "\u6700\u5c0f\u9650": [819, 826], "\u6e1b\u3089": [819, 823], "\u751f\u3058\u308b": 819, "\u65e2\u77e5": 819, "\u5bfe\u79f0": [819, 821, 827], "\u5229\u7528": [819, 820, 821, 823, 828], "\u524a\u9664": 819, "[5": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "=paritymapper": 819, ", two": [819, 825], "=es": 819, "(-": [819, 824, 826, 829], "\u306e\u307f": [819, 820, 822, 824, 825, 827, 829], "\u4ee5\u4e0a": [819, 820, 825], "\u6e96\u5099": [819, 820, 821, 822, 826], "\u5bfe\u5fdc": [819, 820, 821, 822, 827, 828, 829], "\u306b\u95a2\u3059\u308b": [819, 820], "\u52b1\u8d77": [819, 820, 821], "\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb": [819, 820, 821, 822, 824, 826], "\u3054\u89a7\u304f": [819, 820], "[6": [819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], ".tools": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], ".jupyter": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "_copyright": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "informationqiskit": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "softwareversionqiskit": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "dev": [819, 820, 821, 822, 826, 829], "cba": [819, 822], "3qiskit": [819, 821, 822, 828], "-aer": [819, 821, 822, 823, 824, 826, 827, 828, 829], "0qiskit": [819, 821, 822, 823, 824, 828, 829], "-ignis": [819, 821, 822, 823, 824, 828], "ed": [819, 822], "8qiskit": [819, 822], "-finance": [819, 821, 822], "-optimization": [819, 821, 822], "-machine": [819, 821, 822, 828], "-learning": [819, 821, 822, 828], "0system": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "informationpython": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "clang": [819, 822, 828], "osdarwincpus": [819, 821, 822, 823, 824, 828], "2memory": [819, 821, 822], "gb": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "0mon": [819, 822], "jul": [819, 822], "edt": [819, 822, 829], "&copy": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "copyright": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "ibm": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "apache": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "mayobtain": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "tree": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], ".apache": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "/licenses": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "/license": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "modifications": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "derivative": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "retain": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "thiscopyright": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "notice": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "indicatingthat": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "originals": [819, 820, 821, 822, 823, 824, 826, 827, 828, 829], "\u96fb\u5b50": [820, 821, 822, 824, 828], "\u6ce2\u52d5": [820, 824, 826], "\u5404\u96fb\u5b50": 820, "\u56de\u8ee2": [820, 824, 827], "\u30b9\u30da\u30af\u30c8\u30eb": 820, "\u76f8\u5f53": 820, "\u3002\u307e\u305f": [820, 828], "\u69d8\u3005": [820, 821], "\u30b7\u30e5\u30ec\u30c7\u30a3\u30f3\u30ac\u30fc": 820, "\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0": 820, "\u308c\u308b": [820, 821, 823, 825, 826, 827, 828, 829], "\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u30a8\u30cd\u30eb\u30ae\u30fc": 820, "\u66f2\u9762": 820, "(pes": 820, "\u901a\u5e38": [820, 825], "\u5bfe\u6bd4": 820, "\u6bb5\u968e": 820, "\u5358\u4e00\u7c92\u5b50": 820, "\u30e2\u30fc\u30c0\u30eb": 820, "pes": [820, 823], "\u9069\u7528": [820, 821, 822, 826], "\u8abf\u548c": 820, "\u81ea\u5df1": [820, 828], "\u7121\u649e": 820, "\u7740\u5834": 820, "(vscf": 820, "\u975e\u8abf": 820, "\u548c\u632f": 820, "\u6442\u52d5": 820, "\u5909\u5206": [820, 821, 823, 825, 827], "\u6cd5\u7684": 820, "\u5e30\u7d0d": 820, "\u5f8c\u8005": 820, "\u52d5\u5b50": 820, "\u9ad8\u7cbe": 820, "\u914d\u7f6e": [820, 824, 827], "\u9593\u76f8": 820, "\u4e92\u4f5c": [820, 827], "(vci": 820, "\u30af\u30e9\u30b9\u30bf\u30fc": [820, 821, 823], "vcc": 820, "\u542b\u307e": [820, 823, 824, 828, 829], "\u6442\u52d5\u8ad6": 820, "vci": 820, "\u30fbvcc": 820, "\u512a\u4f4d": 820, "\u6240\u5b9a": 820, "\u5b8c\u5168": 820, "\u9650\u754c": 820, "\u7cbe\u5ea6": 820, "\u7cfb\u7d71\u7684": 820, "\u5411\u4e0a": 820, "\u3068\u3055": 820, "\u5927\u304d\u304f": 820, "\u4e0d\u5229": 820, "\u50cd\u304f": 820, "\u6700\u5927": [820, 827], "\u7a0b\u5ea6": 820, "\u5c0f\u3055": [820, 821, 822], "\u3053\u3046": [820, 821], "\u671b\u307e": 820, "{vib": 820, "\u3044\u308f\u3086\u308b": 820, "\u7121\u8996": [820, 824, 828], "}(": [820, 827], "_l": 820, "{l": 820, "partial": [820, 823, 824], "+ v": 820, "(q": [820, 824], "\u52a0\u91cd": 820, "\u6b63\u898f": [820, 824, 829], "\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2": [820, 825], "\u4f5c\u7528": [820, 826, 828], "\u3002\u3064\u307e\u308a": [820, 825], "\u6709\u9650": 820, "\u53cd\u5bfe": [820, 829], "\u79f0\u5316": 820, "\u7c92\u5b50": [820, 821, 822, 824, 826, 828, 829], "\u6570\u8868": 820, "\u30d9\u30af\u30c8\u30eb": [820, 823, 829], "onv": 820, "\u30bb\u30c3\u30c8": [820, 829], "\u6295\u5f71": 820, "\u5316\u6f14": 820, "\u7b97\u5b50": 820, "\u632f\u52d5\u5b50": 820, "\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb": [820, 827], "\u5c55\u958b": 820, "= v": 820, "[l": 820, "]}": 820, "<m": 820, ",m": 820, "_m": 820, "<n": 820, ",n": 820, "\u4f53\u9805": 820, "\u4f4d\u7f6e": [820, 827, 828], "\u756a\u76ee": [820, 827], "\u6a19\u6e96": [820, 821, 823, 827], "\u5909\u5316": [820, 829], "\u8868\u308f": 820, "\u6cbf\u3063": [820, 827], "\u6642\u5909": 820, "\u304a\u3051\u308b": [820, 824, 825, 827], "\u8868\u3057": [820, 824, 827, 828], "\u4f53\u5c55": 820, "\u304a\u3044": [820, 824], "\u542b\u3081\u308c": 820, "{-": [820, 824], "\u5f97\u308b": [820, 822, 824, 827], "\u306e\u306b": 820, "\u5341\u5206": 820, "\u591a\u4f53": 820, "\u4efb\u610f": [820, 821, 828, 829], "\u9ad8\u7d50": 820, "\u5408\u9805": 820, "\u6ce8\u76ee": [820, 826], "\u30da\u30a2\u30ef\u30a4\u30ba": 820, "\u76f8\u4e92": [820, 826, 828], "\u6bd4\u8f03": [820, 821, 824], "\u91cd\u8981": [820, 821, 826, 829], "\u9055\u3044": 820, "\u67d4\u8edf": 820, "\u5316\u5f62": 820, "\u8a18\u8ff0": [820, 827], "\u3068\u3057\u307e\u3057\u3087": 820, "{s": 820, "{ \\": 820, "(l": 820, ", \\": [820, 822, 824], "{(l": 820, "\u7a4d\u57fa": 820, "mathcal": 820, "cl": 820, "\\rangle": 820, ",\\": 820, "{(": [820, 828], "\\,": [820, 824], "\u5360\u6709": [820, 829], "-number": 820, "vectors": 820, "onvs": 820, "\u7b26\u53f7": [820, 827], "equiv": 820, "\u305d\u308c\u305e\u308c": 820, "\u7a4d\u3068": 820, "\u305f\u3060": 820, "\u7406\u8ad6": 820, "\u533a\u5225": 820, "\u6e96\u7c92\u5b50": 820, "\u56fa\u4f53\u7269": 820, "\u7406\u5b66": [820, 828], "\u30d5\u30a9\u30ce\u30f3": 820, "\u89e3\u91c8": 820, "\u4e8c\u3064": [820, 821], "\u4e26\u3073": 820, "\u66ff\u3048": 820, "\u306b\u95a2\u3057": 820, "\u4e0d\u5909": [820, 828], "\u4e8b\u5b9f": 820, "\u5c0e\u304b": 820, "\u4eca\u56de": [820, 822, 824, 827], "\u7b49\u3057\u3044": 820, "\u7c92\u5b50\u9593": 820, "\u305f\u3089\u304f": 820, "\u30af\u30fc\u30ed\u30f3": 820, "\u7570\u306a\u3063": 820, "\u89b3\u70b9": [820, 828], "\u96c6\u5408": [820, 823, 827], "\u4e8c\u91cf\u5b50": 820, "\u5316\u8868": 820, "\u57fa\u3065\u3044": [820, 823, 824, 826], "\u3054\u3068": [820, 825, 828], "\u6d88\u6ec5": [820, 828, 829], "\u5c0e\u5165": [820, 826, 827], "{aligned": 820, "| \\": 820, "&=": 820, "\u305f\u3060\u3057": [820, 822, 826, 827], "sq": 820, "=&": 820, "| t": 820, "+ a": 820, "\\\\": [820, 822], "& \\": [820, 822], "| v": 820, "\u5f37\u8abf": 820, "\u304a\u304d": 820, "\u3002\u307e\u305a": 820, "\u8ff0\u3079": 820, "\u539f\u7406": 820, "\u4e09\u4f53\u3084": 820, "\u9ad8\u6b21": 820, "\u3082\u3063": [820, 822], "\u306a\u3063": [820, 826, 828], "\u3055\u3089\u306b": [820, 823, 824, 826, 829], "\u5404\u9805": 820, "\u3082\u308f\u304b\u308b": 820, "\u4fdd\u5b58": [820, 829], "\u4e00\u65b9": 820, "\u76f8\u7570": 820, "\u5c5e\u3059\u308b": 820, "\u542b\u3093": [820, 824, 826], "\u53c2\u8003": 820, "\u6587\u732e": [820, 824], "ese": 820, "\u6c42\u3081\u308b": [820, 821, 822, 824, 825], "\u73fe\u5728": [820, 829], "\u56db\u6b21": 820, "\u529b\u5834": 820, "ij": 820, "ijk": 820, "\u5f62\u5f0f": [820, 821, 829], "\u5229\u70b9": 820, "\u548c\u529b": 820, "\u5dee\u5206": 820, "\u306b\u3088\u3063\u3066": [820, 822, 823, 824, 827, 828], "\u6c42\u3081": [820, 821, 822, 824, 825], "\u3089\u308c\u308b": [820, 824, 826, 827], "\u5fdc\u7b54": 820, "\u57fa\u3065\u304f": [820, 823], "dft": 820, "\u30d8\u30b7\u30a2\u30f3": 820, "\u89e3\u6790": 820, "\u6c42\u307e\u308b": 820, "\u6e96\u6570": 820, "\u5024\u5fae": 820, "+\\": 820, "- h": 820, "\u304a\u3088\u3073": [820, 824, 825, 827, 828, 829], "+ h": 820, "\u6570\u5024": [820, 829], "\u5b9f\u88c5": [820, 821, 822, 826, 827, 828, 829], "gaussianforcedriver": 820, "\u884c\u3046": [820, 823, 824], "gaussianforcesdriver": [820, 821, 826], "ran": [820, 826], "elsewhere": [820, 826], "(logfile": [820, 821, 826], "_files": [820, 821, 826], "/co2": [820, 821, 826], "_b": [820, 821, 824, 826], "['#": 820, "''": 820, ",\n#": 820, "co2": 820, "'o": 820, "\u66f8\u304d\u4e0b\u3059": 820, "\\langle": 820, "}|": 820, "\u9078\u3076": 820, "\u5358\u7d14": [820, 826, 828], "\u30c6\u30a4\u30e9\u30fc": 820, "\u30eb\u30fc\u30c1\u30f3": [820, 829], "\u30dc\u30bd\u30f3": 820, "\u306a\u3051\u308c": [820, 822, 826], "\u307e\u305b": [820, 821, 822, 826, 827, 829], "\u6700\u521d": [820, 825, 826, 827], "\u30bb\u30af\u30b7\u30e7\u30f3": 820, "niiiiiii": 820, "iniiiiii": 820, "iiniiiii": 820, "iiiniiii": 820, "iiiiniii": 820, "iiiiinii": 820, "iiiiiini": 820, "iiiiiiin": 820, "niniiiii": 820, "ni": 820, "niiniiii": 820, "inniiiii": 820, "ininiiii": 820, "niiiniii": 820, "iniiniii": 820, "iininiii": 820, "iiinniii": 820, "niiiinii": 820, "iniiinii": 820, "iiniinii": 820, "iiininii": 820, "niiiiini": 820, "iniiiini": 820, "iiniiini": 820, "iiiniini": 820, "iiiinini": 820, "iiiiinni": 820, "niiiiiin": 820, "iniiiiin": 820, "iiniiiin": 820, "iiiniiin": 820, "iiiiniin": 820, "iiiiinin": 820, "\u30bb\u30eb": [820, 825], "\u4ed8\u3051": [820, 829], "\u6253\u3061\u5207\u3089": 820, "=directmapper": 820, "iiiiiiii": 820, "ziiiiiii": 820, "iziiiiii": 820, "iiziiiii": 820, "ziziiiii": 820, "izziiiii": 820, "iiiziiii": 820, "ziiziiii": 820, "iziziiii": 820, "iiiiziii": 820, "ziiiziii": 820, "iziiziii": 820, "iiziziii": 820, "iiizziii": 820, "iiiiizii": 820, "ziiiizii": 820, "iziiizii": 820, "iiziizii": 820, "iiizizii": 820, "iiiiiizi": 820, "ziiiiizi": 820, "iziiiizi": 820, "iiziiizi": 820, "iiiziizi": 820, "11": [820, 823, 824, 825, 826, 827, 828], "iiiizizi": 820, "iiiiizzi": 820, "iiiiiiiz": 820, "ziiiiiiz": 820, "iziiiiiz": 820, "iiziiiiz": 820, "iiiziiiz": 820, "iiiiziiz": 820, "iiiiiziz": 820, "iiiixxii": 820, "ziiixxii": 820, "iziixxii": 820, "iizixxii": 820, "iiizxxii": 820, "iiiiyyii": 820, "ziiiyyii": 820, "iziiyyii": 820, "iiziyyii": 820, "iiizyyii": 820, "iiiixxzi": 820, "iiiiyyzi": 820, "iiiixxiz": 820, "iiiiyyiz": 820, "\u3082\u305f\u305b\u308b": 820, "iiiiiiiiiiii": 820, "ziiiiiiiiiii": 820, "iziiiiiiiiii": 820, "iiziiiiiiiii": 820, "iiiziiiiiiii": 820, "ziiziiiiiiii": 820, "iziziiiiiiii": 820, "iizziiiiiiii": 820, "xixiiiiiiiii": 820, "yiyiiiiiiiii": 820, "xixziiiiiiii": 820, "yiyziiiiiiii": 820, "iiiiziiiiiii": 820, "ziiiziiiiiii": 820, "iziiziiiiiii": 820, "iiziziiiiiii": 820, "xixiziiiiiii": 820, "yiyiziiiiiii": 820, "iiiiiziiiiii": 820, "ziiiiziiiiii": 820, "iziiiziiiiii": 820, "iiziiziiiiii": 820, "xixiiziiiiii": 820, "yiyiiziiiiii": 820, "iiiiiiziiiii": 820, "ziiiiiziiiii": 820, "iziiiiziiiii": 820, "iiziiiziiiii": 820, "iiiziiziiiii": 820, "xixiiiziiiii": 820, "yiyiiiziiiii": 820, "iiiiziziiiii": 820, "iiiiizziiiii": 820, "iiiiiiiziiii": 820, "ziiiiiiziiii": 820, "iziiiiiziiii": 820, "iiziiiiziiii": 820, "iiiziiiziiii": 820, "xixiiiiziiii": 820, "yiyiiiiziiii": 820, "iiiiziiziiii": 820, "iiiiiziziiii": 820, "iiiiiiiiziii": 820, "ziiiiiiiziii": 820, "iziiiiiiziii": 820, "iiziiiiiziii": 820, "iiiziiiiziii": 820, "xixiiiiiziii": 820, "yiyiiiiiziii": 820, "iiiiziiiziii": 820, "iiiiiziiziii": 820, "iiiiiiiiizii": 820, "ziiiiiiiizii": 820, "iziiiiiiizii": 820, "iiziiiiiizii": 820, "iiiziiiiizii": 820, "xixiiiiiizii": 820, "yiyiiiiiizii": 820, "iiiiziiiizii": 820, "iiiiiziiizii": 820, "iiiiiiziizii": 820, "iiiiiiizizii": 820, "iiiiiiiizzii": 820, "iiiiiiiiiizi": 820, "ziiiiiiiiizi": 820, "iziiiiiiiizi": 820, "iiziiiiiiizi": 820, "iiiziiiiiizi": 820, "xixiiiiiiizi": 820, "yiyiiiiiiizi": 820, "iiiiziiiiizi": 820, "iiiiiziiiizi": 820, "iiiiiiziiizi": 820, "iiiiiiiziizi": 820, "iiiiiiiizizi": 820, "iiiiiiiiiiiz": 820, "ziiiiiiiiiiz": 820, "iziiiiiiiiiz": 820, "iiziiiiiiiiz": 820, "iiiziiiiiiiz": 820, "xixiiiiiiiiz": 820, "yiyiiiiiiiiz": 820, "iiiiziiiiiiz": 820, "iiiiiziiiiiz": 820, "iiiiiiziiiiz": 820, "iiiiiiiziiiz": 820, "iiiiiiiiziiz": 820, "ixxxxiiiiiii": 820, "iyyxxiiiiiii": 820, "ixxyyiiiiiii": 820, "iyyyyiiiiiii": 820, "iiixixiiiiii": 820, "ziixixiiiiii": 820, "izixixiiiiii": 820, "iizxixiiiiii": 820, "xixxixiiiiii": 820, "yiyxixiiiiii": 820, "iiiyiyiiiiii": 820, "ziiyiyiiiiii": 820, "iziyiyiiiiii": 820, "iizyiyiiiiii": 820, "xixyiyiiiiii": 820, "yiyyiyiiiiii": 820, "iiixixziiiii": 820, "iiiyiyziiiii": 820, "iiixixiziiii": 820, "iiiyiyiziiii": 820, "iiixixiiziii": 820, "iiiyiyiiziii": 820, "iiixixiiizii": 820, "iiiyiyiiizii": 820, "iiixixiiiizi": 820, "iiiyiyiiiizi": 820, "iiixixiiiiiz": 820, "iiiyiyiiiiiz": 820, "xxiixxiiiiii": 820, "yyiixxiiiiii": 820, "xxiiyyiiiiii": 820, "yyiiyyiiiiii": 820, "iiiiiixxiiii": 820, "ziiiiixxiiii": 820, "iziiiixxiiii": 820, "iiziiixxiiii": 820, "iiiziixxiiii": 820, "xixiiixxiiii": 820, "yiyiiixxiiii": 820, "iiiizixxiiii": 820, "iiiiizxxiiii": 820, "iiiiiiyyiiii": 820, "ziiiiiyyiiii": 820, "iziiiiyyiiii": 820, "iiziiiyyiiii": 820, "iiiziiyyiiii": 820, "xixiiiyyiiii": 820, "yiyiiiyyiiii": 820, "iiiiziyyiiii": 820, "iiiiizyyiiii": 820, "iiiiiixxizii": 820, "iiiiiiyyizii": 820, "iiiiiixxiizi": 820, "iiiiiiyyiizi": 820, "iiiiiixxiiiz": 820, "iiiiiiyyiiiz": 820, "iiixixxxiiii": 820, "iiiyiyxxiiii": 820, "iiixixyyiiii": 820, "iiiyiyyyiiii": 820, "iiiiiixixiii": 820, "ziiiiixixiii": 820, "iziiiixixiii": 820, "iiziiixixiii": 820, "iiiziixixiii": 820, "xixiiixixiii": 820, "yiyiiixixiii": 820, "iiiizixixiii": 820, "iiiiizxixiii": 820, "iiiiiiyiyiii": 820, "ziiiiiyiyiii": 820, "iziiiiyiyiii": 820, "iiziiiyiyiii": 820, "iiiziiyiyiii": 820, "xixiiiyiyiii": 820, "yiyiiiyiyiii": 820, "iiiiziyiyiii": 820, "iiiiizyiyiii": 820, "iiiiiixixzii": 820, "iiiiiiyiyzii": 820, "iiiiiixixizi": 820, "iiiiiiyiyizi": 820, "iiiiiixixiiz": 820, "iiiiiiyiyiiz": 820, "iiixixxixiii": 820, "iiiyiyxixiii": 820, "iiixixyiyiii": 820, "iiiyiyyiyiii": 820, "iiiiiiixxiii": 820, "ziiiiiixxiii": 820, "iziiiiixxiii": 820, "iiziiiixxiii": 820, "iiiziiixxiii": 820, "xixiiiixxiii": 820, "yiyiiiixxiii": 820, "iiiiziixxiii": 820, "iiiiizixxiii": 820, "iiiiiiiyyiii": 820, "ziiiiiiyyiii": 820, "iziiiiiyyiii": 820, "iiziiiiyyiii": 820, "iiiziiiyyiii": 820, "xixiiiiyyiii": 820, "yiyiiiiyyiii": 820, "iiiiziiyyiii": 820, "iiiiiziyyiii": 820, "iiiiiiixxzii": 820, "iiiiiiiyyzii": 820, "iiiiiiixxizi": 820, "iiiiiiiyyizi": 820, "iiiiiiixxiiz": 820, "iiiiiiiyyiiz": 820, "iiixixixxiii": 820, "iiiyiyixxiii": 820, "iiixixiyyiii": 820, "iiiyiyiyyiii": 820, "iiiiiiiiixix": 820, "ziiiiiiiixix": 820, "iziiiiiiixix": 820, "iiziiiiiixix": 820, "iiiziiiiixix": 820, "xixiiiiiixix": 820, "yiyiiiiiixix": 820, "iiiiziiiixix": 820, "iiiiiziiixix": 820, "iiiiiiziixix": 820, "iiiiiiizixix": 820, "iiiiiiiizxix": 820, "iiiiiiiiiyiy": 820, "ziiiiiiiiyiy": 820, "iziiiiiiiyiy": 820, "iiziiiiiiyiy": 820, "iiiziiiiiyiy": 820, "xixiiiiiiyiy": 820, "yiyiiiiiiyiy": 820, "iiiiziiiiyiy": 820, "iiiiiziiiyiy": 820, "iiiiiiziiyiy": 820, "iiiiiiiziyiy": 820, "iiiiiiiizyiy": 820, "iiixixiiixix": 820, "iiiyiyiiixix": 820, "iiixixiiiyiy": 820, "iiiyiyiiiyiy": 820, "iiiiiixxixix": 820, "iiiiiiyyixix": 820, "iiiiiixxiyiy": 820, "iiiiiiyyiyiy": 820, "iiiiiixixxix": 820, "iiiiiiyiyxix": 820, "iiiiiixixyiy": 820, "iiiiiiyiyyiy": 820, "iiiiiiixxxix": 820, "iiiiiiiyyxix": 820, "iiiiiiixxyiy": 820, "iiiiiiiyyyiy": 820, "/home": 820, "/oss": 820, "/files": 820, "/src": 820, "/main": 820, "/tools": 820, "/jupyter": 820, "/_": 820, "py": 820, "runtimewarning": 820, "dependencies": 820, ";!": 820, "[visualization": 820, "]&": 820, "jupyter": 820, "warnings": [820, 823, 824], ".warn": 820, "compilergcc": [820, 826, 827, 829], "red": [820, 826, 829], "buildmain": [820, 826, 827], "jan": [820, 826], "oslinuxcpus": [820, 826, 827, 829], "4memory": [820, 826, 827, 829], "fri": 820, "feb": [820, 821, 826], "cet": [820, 826], "\u76ee\u6a19": [821, 822], "\u632f\u52d5": [821, 822], "\u306a\u3082\u306e": [821, 822], "\u69cb\u9020": [821, 822, 826, 827], "\u59cb\u3081": [821, 822, 824, 827], "\u90e8\u5206": [821, 822, 824], "aer": [821, 822, 823, 824, 827], "\u7d14\u7c8b": [821, 822], "\u6700\u5c0f": [821, 827], "\u307e\u3057\u3087": [821, 822, 826], "\u5bfe\u89d2": [821, 822, 827], "\u898f\u6a21": [821, 822], "\u5927\u304d": [821, 822], "\u91cf\u5b50": [821, 822, 823, 825, 827, 828, 829], "\u78ba\u8a8d": [821, 822, 828], "\u7528\u3044\u308b": [821, 822, 823, 824], "\u898b\u3064\u3051\u308b": [821, 827], "\u793a\u3059": [821, 824], "\u52d5\u4f5c": [821, 826, 829], "\u521d\u671f\u5316": [821, 822, 829], ".providers": [821, 825], ".aer": 821, "statevectorsimulator": 821, "vqeuccfactory": [821, 822], "_instance": [821, 822, 823, 824, 825, 827], "(backend": [821, 823, 824, 827], "=aer": [821, 823, 824], "_backend": [821, 822, 823, 824, 825, 827], "_simulator": [821, 822, 823, 824, 827], "_statevector": [821, 822, 823, 824, 829], "(quantum": [821, 822, 823, 824], "=quantum": [821, 822, 823, 824], "\u8981\u7d20": [821, 823, 828], "\u3053\u3053\u3067": 821, "\u30e6\u30cb\u30bf\u30ea\u30fc": 821, "\u3001[": [821, 827], "review": 821, "\u5316\u5b66": [821, 825, 827], "\u9ad8\u901f": [821, 825], "\u30d5\u30a1\u30af\u30c8\u30ea\u30fc": 821, "\u5168\u3066": [821, 822, 823, 826, 827], "\u4e00\u96fb\u5b50": 821, "\u4e8c\u96fb\u5b50": 821, "\u306a\u304f": [821, 825, 826, 827, 829], "\u30d3\u30c3\u30c8": [821, 826, 827, 828, 829], "\u521d\u671f": [821, 823, 826], "\u30d0\u30c3\u30af\u30a8\u30f3\u30c9": [821, 827], "\u4e0a\u56f3": 821, "\u30de\u30b7\u30f3": 821, "\u5b8c\u74a7": 821, "\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc": 821, "\u72ec\u81ea": [821, 826], "twolocal": 821, "tl": 821, "_circuit": [821, 829], "_blocks": 821, "rx\"": 821, "entanglement": [821, 825], "cz": 821, "_prefix": 821, "=tl": 821, "=quantuminstance": 821, "(aer": [821, 822], "\u6574\u3044": 821, "calc": [821, 828], "res": [821, 823, 824, 828], ".solve": [821, 822, 825, 826, 828], "(es": [821, 822, 823, 824], "(res": [821, 823, 828], "==": [821, 822, 826, 828], "gt": [821, 822, 826], "\u4e00\u81f4": 821, "\u30d2\u30eb\u30d9\u30eb\u30c8": 821, "\u7a7a\u9593": [821, 823], "\u6027\u9818": 821, "\u305d\u3046\u3057": 821, "\u8208\u5473": [821, 825, 826], "\u53d6\u3063": 821, "\u6b63\u3057\u3044": [821, 827], "\u3082\u3064": 821, "\u8fd4\u3059": [821, 823, 827], "\u771f\u7a7a": 821, "[7": [821, 823, 824, 825, 826, 827, 828, 829], "numpyminimumeigensolverfactory": 821, "vib": 821, "_covnerter": 821, "(directmapper": 821, "_without": [821, 828], "(use": [821, 822], "=false": [821, 823, 824, 827, 828], "_with": 821, "gsc": [821, 822], "_wo": 821, "(vib": 821, "_w": 821, "(result": [821, 826, 827], "6e": 821, "[8": [821, 823, 824, 825, 826, 827, 828, 829], "7af": 821, "2qiskit": [821, 826, 827], "compilerclang": [821, 823, 824, 828], "builddefault": [821, 823, 824, 828, 829], "oct": [821, 823, 824], "0fri": [821, 828], "est": 821, "_states": [822, 823], "\u95a2\u5fc3": 822, "\u30d5\u30a3\u30eb\u30bf\u30fc": 822, "\u6e21\u3057": [822, 823], "numpyeigensolverfactory": [822, 823], "qeom": 822, "preprint": 822, "\u64ec\u4f3c": 822, "{m": 822, "{q": [822, 827], "*}": 822, "{x": 822, "{y": 822, "= e": 822, "0n": 822, "{v": 822, "{w": 822, "mu": 822, "nu": [822, 824], "[(\\": 822, "_{\\": 822, ")^": 822, "]|": 822, "}]": 822, "_\\": 822, "{(\\": 822, "\u5404\u884c": 822, "\u5217\u8981": 822, "tutorial": 822, "instantiated": 822, "_excited": [822, 823], "(gsc": 822, "\u8868\u793a": 822, "excitedstateseigensolver": [822, 823], "(numpy": 822, "(qeom": [822, 823], "\u8db3\u308a": 822, "\u304c\u308f\u304b\u308a": 822, "\u4e00\u91cd": 822, "\u9805\u72b6": 822, "\u4e00\u8cab\u6027": 822, "\u6b63\u3057\u304f": 822, "\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0": 822, "\u30ab\u30b9\u30bf\u30e0": [822, 826, 827], ".isclose": [822, 823], "(aux": [822, 823], "][": [822, 823], "(filter": [822, 823], "=filter": [822, 823], "(new": 822, "sampling": 823, "_surfaces": 823, "\u5bfe\u8a71": 823, "\u30ce\u30fc\u30c8\u30d6\u30c3\u30af": [823, 825, 828], "\u5b9f\u6f14": 823, "packages": 823, "pandas": [823, 824], "pd": [823, 824], ".pyplot": [823, 824, 825, 827], "plt": [823, 824, 825, 827], "functools": [823, 824], "_globals": [823, 827], "_eigen": 823, ".optimizers": [823, 825, 827], "slsqp": 823, "excitationpreserving": 823, "basicaer": 823, "imports": [823, 824], ".pes": [823, 824], "_samplers": [823, 824], "bopessampler": [823, 824], ".simplefilter": [823, 824], ".rankwarning": [823, 824], "_seed": [823, 827], "\u30e2\u30c7\u30eb": [823, 827], ".absolute": [823, 824], "(\"h": [823, 824], "stretch1": [823, 824], "psycf": [823, 824], "(mol": [823, 824], ".geometry": 823, ".perturbations": 823, "\u7d44\u307f\u8fbc\u307f": [823, 826], "\u6307\u5b9a": [823, 826, 828], "\u81ea\u7531": [823, 824, 826], "\u539f\u5b50\u9593": 823, "\\epsilon": 823, "\u306b\u304a\u3051\u308b": 823, "\u521d\u671f\u70b9": 823, "\u6700\u9069": [823, 827, 829], "\u4ee5\u524d": 823, "me": [823, 824], "_gsc": 823, "_distance": [823, 824, 825], "distance1": 823, ".linspace": [823, 824], "\"}": 823, ".items": 823, "bs": [823, 824], "(me": [823, 824], "=value": 823, ".sample": [823, 824], "[f": 823, "\"{": 823, "}\"": [823, 827, 829], ".raw": [823, 824, 825], "\"points": 823, ".points": [823, 824], "\"energies": 823, ".energies": [823, 824], "_classical": 823, "_np": 823, "[\"": [823, 825, 826], "np\"": 823, "fig": [823, 824, 827], ".figure": [823, 824, 825, 827], "(figsize": [823, 825], ".plot": [823, 824, 825, 827], "(results": 823, "=f": 823, ", results": 823, ", label": [823, 825], ".legend": [823, 824, 825], ".title": [823, 824, 825], ".xlabel": [823, 824, 825, 827], ".ylabel": [823, 824, 825, 827], ";)": [823, 824], "[9": [823, 824, 825, 826, 827, 828, 829], "(condition": 823, ":\"": [823, 824, 825, 826, 827], "= \"": 823, "[key": 823, ".cost": 823, "_evals": [823, 827], "\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0": [823, 824], "\u63d0\u6848": 823, "\u5916\u633f\u5668": 823, "\u5916\u90e8": 823, "\u3064\u307e\u308a": [823, 824, 825], "\u5185\u90e8": [823, 824, 829], "\u9032\u3081\u308b": 823, "\u6574\u6570": 823, "\u30a6\u30a3\u30f3\u30c9\u30a6": 823, "\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0": 823, "\u304a\u3089\u305a": 823, "\u3068\u306a\u3063": 823, "\u884c\u308f": [823, 827, 828], "\u30e9\u30c3\u30d7": 823, "\u6b63\u89e3": 823, "\u56fa\u5b9a": 823, "\u30b5\u30a4\u30ba": [823, 828], "\u524a\u6e1b": [823, 827], "\u884c\u3063": 823, "\u9006\u5909": 823, "\u65bd\u3059": 823, "\u30e9\u30c3\u30d1\u30fc": 823, "sieve": 823, "\u5927\u5c0f": 823, "\u5c0f\u3055\u3044": 823, "\u30bc\u30ed": [823, 824, 829], "\u6b21\u6570": 823, "\u591a\u9805": 823, "\u5f0f\u95a2": 823, "differential": 823, "\u6271\u3063": 823, "\u4e88\u6e2c": 823, "\u56de\u5e30": 823, "\u7dda\u5f62": [823, 824, 827, 829], "\u8a13\u7df4": 823, "\u30c7\u30fc\u30bf": [823, 824, 825, 826], "\u7279\u5fb4": 823, "\u5fae\u5206": 823, "\u52a0\u3048": [823, 829], "10": [823, 824, 825, 826, 827, 828], "extrap": 823, "_poly": 823, ".factory": 823, "=degree": 823, "_diff": 823, "_internal": 823, "=extrap": 823, "_extr": 823, ".keys": 823, "=condition": 823, "12": [823, 824, 825, 826, 827, 828], "[condition": 823, "13": [823, 824, 825, 826, 827, 828], ".excited": 823, "typing": [823, 826], "matrixexpectation": 823, "\u5206\u304b\u3063": [823, 827], "\u3068\u304d": [823, 828], "\u884c\u5217": [823, 824, 826, 828], "\u3064\u306e": [823, 827], "14": [823, 824, 826, 827, 828], "=matrixexpectation": 823, "_qeom": 823, "15": [823, 826, 827, 828], "pn": 823, "mg": 823, "(pn": 823, "(mg": 823, "_exc": 823, "(np": [823, 825, 828], "16": [823, 826, 827, 828], ".array": [823, 828, 829], "nb": 823, ")[": [823, 825], "cmap": 823, ".cm": 823, "_cmap": 823, "viridis": 823, "(points": [823, 824], "(nb": 823, "[:": 823, ", k": 823, "linestyle": 823, "marker": 823, "color": [823, 825], "=cmap": 823, "(k": 823, "dashed": 823, "l2": 823, ".ylim": [823, 824], ".show": [823, 824, 827], "17": [823, 826, 827, 828], "1qiskit": [823, 824], "4qiskit": [823, 824, 827], "-ibmq": [823, 824, 828], "-provider": [823, 824, 828], "8memory": [823, 824, 828], "0wed": 823, "jun": [823, 824, 827, 829], "cest": [823, 824, 827], "calculating": 824, "_thermodynamic": 824, "_observables": 824, ".constants": 824, "const": 824, "energysurface": 824, "1dspline": 824, "thermodynamics": 824, "_utils": 824, ".thermodynamics": 824, "_volume": 824, "_heat": 824, "_capacity": 824, ".vibrational": [824, 826], "_fd": 824, "vibrationalstructure": 824, "1dfd": 824, ".partition": 824, "diatomicpartitionfunction": 824, "\u95a2\u9023": [824, 827], "\u4e88\u5099": 824, "\u30c9\u30e9\u30d5\u30c8": 824, "\u30d7\u30ec\u30d7\u30ea\u30f3\u30c8": 824, "\u8a18\u8f09": 824, "stober": 824, "\u71b1\u529b\u5b66": 824, "\u5bc6\u5ea6": [824, 826], "\u7279\u5b9a": [824, 827, 828], "\u4e00\u70b9": 824, "\u4f8b\u3068\u3057\u3066": [824, 828], "_gss": 824, "testing": 824, "_res": 824, "[point": 824, ".append": [824, 826, 827, 829], "(energy": 824, "_surface": 824, ".fit": 824, "(xdata": 824, "=xdata": 824, "=ydata": 824, "kx": 824, ".arange": [824, 826], "(min": 824, ".eval": 824, "\"r": 824, "\"distance": 824, "$\\": 824, "aa": 824, "$\"": 824, "dist": 824, "(ydata": 824, "-oppeheimer": 824, "\u529b\u5b66": 824, "\u7d76\u5bfe": 824, "\u96f6\u5ea6": 824, "\u96f6\u70b9": 824, "\u88dc\u6b63": 824, "\u70b9\u632f": 824, "-point": 824, "zpe": 824, "\u5bc4\u4e0e": 824, "\u3042\u308f\u305b": 824, "\u30b9\u30c6\u30c3\u30d7": 824, "\u6e96\u4f4d": 824, "\u6c7a\u5b9a": [824, 827], "\u8fd1\u3044": 824, "\u30d8\u30c3\u30bb": 824, "{equation": 824, "rm": 824, "\\nu": 824, "\u5468\u6ce2": 824, "\u975e\u7dda": 824, "3n": 824, "\u4e00\u6b21\u5143": [824, 828], "\u30b9\u30d7\u30e9\u30a4\u30f3": 824, "\u5168\u4f53": [824, 825], "\u884c\u3044": 824, "\u8a55\u4fa1": [824, 826], ".ones": 824, ".shape": [824, 829], "_equilibrium": 824, "_geometry": 824, "_level": 824, "(n": [824, 829], "\u4e26\u9032": [824, 828], "\u632f\u52d5\u6570": 824, "\u53d6\u5f97": [824, 828], "prod": 824, "^m": 824, "exp": 824, "theta": 824, "}/": 824, "2t": 824, ". \\": 824, "\\theta": 824, "/k": 824, "\u6e29\u5ea6": 824, "\u30dc\u30eb\u30c4\u30de\u30f3": 824, "\u5b9a\u6570": [824, 829], "\u4e00\u70b9\u30a8\u30cd\u30eb\u30ae\u30fc": 824, "\u7d50\u679c": [824, 827], "\u5b9a\u7a4d": 824, "\u5b9a\u5727": 824, "\u71b1\u5bb9": 824, "_v": 824, ".\\": 824, "|_": 824, ",\n\\": 824, "qquad": 824, "=k": 824, "ln": 824, ".\n\\": 824, "\u4f53\u7a4d": 824, "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8": [824, 826, 827], "\u4f7f\u3044\u65b9": 824, "pa": 824, "temps": 824, ".spins": 824, "td": 824, "pressure": 824, "_pressure": 824, "ymin": 824, "ymax": 824, "(temps": 824, ".constant": 824, ".cal": 824, ".xlim": 824, "(ymin": 824, "temperature": 824, "cp": 824, "cal": 824, "$^": 824, "}$": 824, "\u6210\u5206": 824, "\u30d1\u30e9": 824, "\u30aa\u30eb\u30c8": 824, "\u5206\u3051\u308b": 824, "eq": 824, "_partition": 824, "(part": 824, "rot": 824, "para": 824, "ortho": 824, "\u30e2\u30b8\u30e5\u30fc\u30eb": [824, 826], "\u547c\u3073\u51fa\u3057": 824, "\u4e0e\u3048\u308b": [824, 826, 827, 828], "\u3001(": [824, 827], "\u30d7\u30ed\u30c3\u30c8": [824, 827], "\u666e\u904d": 824, "\u6c17\u4f53": 824, "\u30a2\u30dc\u30ac\u30c9\u30ed": 824, "\u639b\u3051": 824, "\u5272\u308b": 824, "\u5b9f\u9a13": 824, "\u5341\u5b57\u5370": 824, "\u6ce8\u610f": [824, 825, 826], "literature": 824, "df": 824, "_brink": 824, "_t": 824, "_cv": 824, "_eucken": 824, "_gia": 824, "_parting": 824, "_ce": 824, "heatcapacity": 824, ".n": 824, "_a": 824, ".kb": 824, "(eq": 824, "/ r": 824, "\"-k": 824, "cv": 824, "_rot": 824, "(para": 824, "\"-b": 824, "(ortho": 824, "\"-r": 824, "\"-g": 824, ":ortho": 824, "(df": 824, "\"+g": 824, "experimental": 824, "(loc": [824, 825], "frameon": 824, ")/": 824, ".tight": 824, "_layout": 824, "0thu": 824, "_qiskit": 825, "_runtime": 825, "\u30bd\u30eb\u30d0\u30fc": [825, 827], "\u53cd\u5fa9": 825, "\u5f93\u6765": [825, 826], "\u56de\u8def": [825, 829], "\u30d0\u30c3\u30c1": 825, "\u30b8\u30e7\u30d6": 825, "\u300d\uff09": 825, "\u9001\u4fe1": 825, "\u30c7\u30d0\u30a4\u30b9": 825, "\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9": 825, "\u30ea\u30af\u30a8\u30b9\u30c8": 825, "\u51e6\u7406": [825, 826], "\u3002\uff08": 825, "api": 825, "\u30ad\u30e5\u30fc\u30bf\u30a4\u30e0": 825, "\u9806\u756a": 825, "\u6765\u308b": 825, "\u5f85\u3061": 825, "\u767e\u3082": 825, "\u7e70\u308a\u8fd4\u3057": 825, "\u3059\u3050": 825, "\u652f\u914d": 825, "\u3057\u307e\u3044": 825, "\u53d6\u308a\u7d44\u307f": 825, "\u3001\uff08": 825, "\u5927\u5e45": 825, "\u542b\u307f": [825, 826], "\u30ad\u30e5\u30fc": 825, "\u4e00\u5ea6": 825, "\u767a\u751f": 825, "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9": 825, "\u30af\u30e9\u30a6\u30c9": 825, "\u3059\u3079\u3066": [825, 827, 829], "\u8907\u96d1": 825, "\u59d4\u306d\u308b": 825, "\u500b\u4eba": 825, "\u3067\u3057\u3087": [825, 826], "\u65e2\u5b58": 825, "\u7d71\u5408": [825, 826], "\u30af\u30e9\u30b9": [825, 826, 828, 829], "vqeprogram": 825, "\u307b\u307c": 825, "\u30c9\u30ed\u30c3\u30d7\u30a4\u30f3": 825, "\u4ee3\u66ff": 825, "\u3066\u307f\u307e\u3057\u3087": [825, 827], "\u3002\uff1a": 825, "\u30ea\u30c1\u30a6\u30e0\u30cf\u30a4\u30c9\u30ec\u30fc\u30c8": 825, "lih": 825, "\u756a\u53f7": 825, "\u898b\u3066": [825, 826], "\u307f\u307e\u3057\u3087": [825, 826], ".electronic": [825, 826], ".properties": [825, 826], ".transformers": 825, "li": 825, "_number": [825, 826, 829], "(particlenumber": 825, "_space": 825, "_trafo": 825, "=particle": 825, "(paritymapper": 825, "\u53c2\u8003\u89e3": 825, ".ground": 825, "_groundstate": 825, ".real": 825, ".eigenenergies": [825, 826], ".nuclear": 825, ", target": 825, "\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc": 825, "\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af": 825, "\u3088\u3044": 825, "efficientsu": 825, "_barriers": 825, ".decompose": 825, "mpl": [825, 829], "iqx": 825, "(maxiter": [825, 827], ".seed": 825, "fix": 825, "seed": [825, 827], "reproducibility": 825, "(ansatz": 825, "\u4f7f\u3063": 825, ".basicaer": 825, "qasmsimulatorpy": 825, "simulator": 825, "_vqe": 825, "=ansatz": [825, 827], "=optimizer": [825, 827], "=initial": 825, "=qasmsimulatorpy": 825, ",\n)": [825, 826], "composed": 825, "(local": 825, "\u56fa\u6709\u5024": 825, "\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc": 825, "\u30ed\u30fc\u30c9": 825, "\u3042\u306a\u305f": 825, "\u7f6e\u304d": [825, 826], "\u63db\u3048\u308b": [825, 829], "ibmq": 825, ".load": 825, "_account": 825, "_provider": 825, "(project": 825, "-runtime": 825, "_montreal": 825, "\u30ea\u30ea\u30fc\u30b9": 825, "\u8f9e\u66f8": 825, "\u63d0\u4f9b": [825, 826, 827, 828], "\u5c06\u6765": 825, "\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8": 825, "\u6e21\u3059": [825, 826, 828], ".optimizer": 825, "variable": 825, "/qn": 825, "'re": 825, "leverage": [825, 826], "ordinary": 825, "resamplings": 825, "samples": 825, "=provider": 825, "=backend": [825, 827], "(runtime": 825, "\u63a8\u79fb": 825, "\u640d\u5931": 825, "\u5c65\u6b74": 825, "\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7": 825, "\u3068\u3068\u3082": 825, "\uff09\u3002": 825, "\u5f53\u3066": 825, "\u307e\u308b": 825, "\u4ee5\u5916": [825, 826, 827], "\u3078\u306e": 825, "\u30b3\u30fc\u30eb\u30d0\u30c3\u30af": 825, "\u5c5e\u6027": [825, 826], "_history": 825, ".rcparams": 825, "font": 825, ".size": 825, "(loss": 825, ".axhline": 825, "(y": 825, "=target": 825, "tab": 825, ":red": 825, "ls": 825, "mh": 825, "--": 825, "]\"": 825, "\u306e\u3088\u3046": 826, "\u63db\u3048": 826, "\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8": 826, "\u305d\u3057\u3066": [826, 827], "\u3042\u306a": 826, "\u81ea\u8eab": [826, 827], "\u304a\u898b\u305b": 826, "\u88dc\u5b8c": 826, "\u64cd\u4f5c": 826, "\u610f\u56f3": 826, "\u62bd\u8c61": 826, "\u610f\u5473": 826, "\u57fa\u672c": 826, "\u7269\u7406": [826, 828], "\u89b3\u6e2c": 826, "\u8868\u3059": [826, 827, 828, 829], "\u30e1\u30bd\u30c3\u30c9": [826, 828], "\uff12\u3064": 826, "\u8981\u6c42": 826, "\u8907\u6570": 826, "\u30b0\u30eb\u30fc\u30d7": 826, "\u306b\u3059\u308b": 826, "\u6ce8\u8a18": [826, 828], "\u4e00\u610f": 826, "\u57f7\u7b46": 826, "\u6642\u70b9": 826, "\u4e00\u7a2e\u985e": 826, "\u30b5\u30d6\u30bf\u30a4\u30d7": 826, "\uff11\u3064": 826, "\u8981\u4ef6": 826, "\u69cb\u7bc9": [826, 828, 829], "\u5206\u5272": 826, "\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb": 826, "\u306f\u3059\u3050": 826, "\u4f7f\u3048\u308b": 826, "\u6301\u3063": [826, 827], "\u306f\u307b\u307c": 826, "\u9593\u9055\u3044": 826, "\u306a\u305c": 826, "\u306a\u3089": 826, "\u4fdd\u6709": 826, "\u9ad8\u5ea6": 826, "\u5316\u51e6": 826, "\u5f15\u6570": [826, 828], "[electronicintegrals": 826, ".integrals": 826, "twobodyelectronicintegrals": 826, "\u6240\u4e0e": 826, "\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9": 826, ".bases": 826, "[&": [826, 827], "lt": 826, ";electronicbasis": 826, ";&": 826, ";,": 826, ".mo": 826, "gt;": 826, "\u53d6\u308a": [826, 829], "\u793a\u5506": 826, "\u30b3\u30f3\u30c6\u30ca": 826, "\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9": [826, 828], "_ints": 826, ".eye": 826, "(one": 826, "(mo": 826, ";(": 826, "&gt": 826, "\u3054\u89a7": 826, "\u5c11\u3057": 826, "\u914d\u5217": 826, "\u30da\u30a2": 826, "(\u3064\u307e\u308a": 826, "\u540c\u3058\u5024": 826, "\u4e8c\u5ea6": 826, "\u6c7a\u307e\u3063": 826, "\u9806\u5e8f": [826, 827], "\u4fdd\u6301": [826, 827], "\u5358\u4e00": [826, 827], ".block": 826, "\u30bf\u30d7\u30eb": [826, 828], "\u7d44\u307f\u5408\u308f\u305b": 826, "\u9664\u3044": 826, "\u307b\u3068\u3093\u3069": 826, "\u3057\u307e\u3059": 826, "reshape": 826, "(two": 826, "skipping": 826, "\u3059\u3079\u304d": 826, "\"alpha": 826, "\u3060\u304c": 826, "\u8ee2\u7f6e": 826, "\u57cb\u3081": 826, "\u30d5\u30a9\u30fc\u30de\u30c3\u30c8": 826, ".to": [826, 828, 829], "\u3055\u3066": 826, "(electronic": 826, "\u3002(": [826, 827], "qubitoperator": 826, ")\uff1a": 826, "(hamiltonian": [826, 829], "\u6069\u6075": 826, "\u7b97\u51fa": 826, "\u751f\u30c7\u30fc\u30bf": 826, "\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8": 826, "\u7cbe\u5bc6": 826, "\u8ad6\u7406": 826, "\u4e00\u8cab": 826, ".results": 826, ".asarray": 826, ".computed": 826, "let": 826, "'s": [826, 827], ".interpret": [826, 827], "\u307e\u3060": 826, "\u307b\u3069": 826, "\u5370\u8c61": 826, "\u540c\u6642": 826, "\u5f85\u3063": 826, "\u76ee\u7684": [826, 827], "\u679c\u305f": 826, "\u306a\u304b": 826, "\u3067\u3082": [826, 828], "\u7279\u5225": [826, 829], "\u96fb\u5b50\u7cfb": 826, "\u683c\u7d0d": 826, ".default": 826, "(particle": 826, "sos": 826, "\u7e70\u308a\u8fd4\u3059": 826, ".pyscfd": 826, "pyscfdriver": 826, "(atom": 826, "drivermetadata": 826, "=h": 826, "=angstrom": 826, "=sto": 826, "=rhf": 826, "=minao": 826, "dipolemomentx": 826, "dipolemomenty": 826, "dipolemomentz": 826, "\u9032\u884c": 826, "\u51fa\u529b": [826, 829], "\u7406\u89e3": [826, 827], "\u30b9\u30bf\u30c3\u30af": 826, "\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8": 826, ".from": 826, "_raw": 826, ".gaussiand": 826, "18": [826, 828], "\u5225\u3005": 826, "19": [826, 828], "harmonicbasis": 826, ".basis": 826, "(vibrational": 826, ";sparse": 826, "occupiedmodals": 826, "\u3044\u304d": 826, "\u6d3b\u7528": 826, ".types": 826, "electronicdensity": 826, "(electronicproperty": 826, "\"\"a": 826, ".__": 826, "= [": 826, "\"\\": 826, "{self": 826, "mos": 826, "\".": 826, "join": 826, "(string": 826, ".group": 826, ".require": 826, "(self": [826, 828], ".attrs": 826, "(h": 826, "_legacy": 826, "(cls": 826, "qmol": 826, "cast": 826, "(qmolecule": 826, "(qmol": 826, "[fermionicop": 826, "(range": [826, 828], ".zeros": 826, "[mo": 826, "_second": 826, "goes": 826, "(density": 826, "idx": 826, "enumerate": 826, "(idx": 826, "\u3082\u3061\u308d\u3093": [826, 829], "\u88dc\u52a9": 826, "\u30d1\u30fc\u30b9": 826, "\u5236\u9650": [826, 827], "\u306f\u307e\u3060": 826, "\u5f53\u9762": 826, "\u624b\u6bb5": 826, "\u89e3\u6c7a": [826, 828], "\u624b\u52d5": 826, "fcec": 826, "tue": 826, "\u81ea\u7136": 827, "\u4eba\u5de5": 827, "\u307e\u3060\u307b\u3068\u3093\u3069": 827, "\u30a2\u30eb\u30c4\u30cf\u30a4\u30de\u30fc": 827, "\u30ef\u30af\u30c1\u30f3": 827, "\u8fb2\u4f5c": 827, "\u7269\u6539": 827, "\u826f\u7814": 827, "\u3067\u307f": 827, "\u305f\u3093\u3071\u304f": 827, "\u8cea\u6298\u308a": 827, "\u9650\u308a": 827, "\u6298\u308a\u7573\u307e": 827, "\u30dd\u30ea\u30da\u30d7\u30c1\u30c9": 827, "\u9ad8\u304f": 827, "\u6f5c\u5728": 827, "\u914d\u5ea7": 827, "\u9178\u9396": 827, "\u30aa\u30fc\u30c0\u30fc": 827, "\u73fe\u5b9f": 827, "\u6570\u79d2": 827, "\u3046\u3061": 827, "\u305f\u307e\u308c": 827, "\u30ec\u30f4\u30a3\u30f3\u30bf\u30fc\u30eb": 827, "\u30d1\u30e9\u30c9\u30c3\u30af\u30b9": 827, "\u77e5\u3089": 827, "\u9577\u3055": 827, "\u306b\u3088\u308b": 827, "\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af": 827, "\u30ea\u30bd\u30fc\u30b9": 827, "\u30b9\u30b1\u30fc\u30eb": 827, "\u30e9\u30f3\u30c0\u30e0": 827, "\u69cb\u6210": [827, 828], "\u4e0b\u3052\u308b": 827, "\u6e80\u8db3": 827, "\u305b\u308b": 827, "\u9054\u6210": 827, "\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0": 827, "\u30d3\u30fc\u30ba": 827, "\u76f8\u5bfe": 827, "\u56db\u9762": 827, "\u4f53\u683c\u5b50": 827, "\u30c0\u30a4\u30e4\u30e2\u30f3\u30c9": 827, "\u5f62\u72b6": [827, 829], "\u683c\u5b50": 827, "\u4e0b\u56f3": 827, "\\mathbf": 827, "\\{\\": 827, "mathbf": 827, "cf": 827, "gc": 827, "ch": 827, "\u5e7e\u4f55": 827, "\u5b66\u7684": 827, "\u5206\u5c90": 827, "\u7121\u3044": 827, "\u30d7\u30e9\u30a4\u30de\u30ea\u30fc": 827, "\u30b7\u30fc\u30b1\u30f3\u30b9": 827, "\u6210\u9577": 827, "\u7d71\u5236": 827, "\u30ad\u30e9\u30ea\u30c6\u30a3": 827, "\u7acb\u4f53": 827, "\u5f37\u5236": 827, "\u30b1\u30fc\u30b9": [827, 829], "\u6700\u8fd1": 827, "\u63a5\u76f8": 827, ".sampling": 827, ".protein": 827, ".interactions": 827, "randominteraction": 827, ".miyazawa": 827, "_jernigan": 827, ".peptide": 827, ".penalty": 827, "\u6b8b\u57fa": 827, "\u547d\u540d": 827, "\u6587\u5b57": 827, "aprlrfy": 827, "\u795e\u7d4c": 827, "\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3": 827, "\u63a5\u7d9a": [827, 828, 829], "\u6211\u3005": 827, "\u8a31\u5bb9": 827, "\u7d30\u9577": 827, "\u30da\u30ca\u30eb\u30c6\u30a3": 827, "_chains": 827, "\u6b8b\u57fa\u9593": 827, "\u63a5\u89e6": 827, "\u6e96\u5316": 827, "\u5b66\u8fd1": 827, "\u77e5\u8b58": 827, "\u30d9\u30fc\u30b9": 827, "\u4f7f\u308f": 827, "\u8d85\u3048": 827, "\uff1a\u03b1": 827, "\u30d8\u30ea\u30c3\u30af\u30b9": 827, "\u3001\u03b2": 827, "\u30b7\u30fc\u30c8": 827, "\u5f37\u5316": 827, "\u9075\u5b88": 827, "\u30da\u30ca\u30eb\u30c6\u30a3\u30fc": 827, "\u30ad\u30e9\u30ea\u30c6\u30a3\u30fc": 827, "\u8ab2\u3059": 827, "\u4e00\u884c": 827, "\u56de\u540c": 827, "\u9078\u3070": 827, "\u6392\u9664": 827, "\u305f\u307e\u308c\u308b": 827, "\u9632\u304e": 827, "\u6700\u8fd1\u63a5": 827, "\u5c40\u6240": 827, "\u91cd\u8907": 827, "(penalty": 827, "\u3057\u3066": 827, "\u57fa\u3065\u304d": 827, "\u30b3\u30f3\u30bf\u30af\u30c8\u30de\u30c3\u30d7": 827, "\u6f14\u7b97": 827, "iiiiiiiii": 827, "iiiiiizii": 827, "iiiiiiizz": 827, "iiiiiizzz": 827, "iiiizizii": 827, "iiiiizizi": 827, "iiiizzzzi": 827, "iiziziiii": 827, "iiiziziii": 827, "iizzzziii": 827, "iiiiiizzi": 827, "iiiiziiii": 827, "iiiizziii": 827, "iiiiiiiiz": 827, "iiiiiziiz": 827, "iiiizziiz": 827, "iziiiiiii": 827, "iziiiizii": 827, "iziiiizzi": 827, "iziiziiii": 827, "iziizziii": 827, "iziizizii": 827, "iziiizizi": 827, "iziizzzzi": 827, "iziiiiiiz": 827, "iziiiiizz": 827, "iziiiizzz": 827, "iziiiziiz": 827, "iziizziiz": 827, "iiiiiiizi": 827, "iiiiiziii": 827, "iziiiiizi": 827, "iziiiziii": 827, "iiziiiiii": 827, "iizziiiii": 827, "iiziiizii": 827, "iiiziiizi": 827, "iizziizzi": 827, "iiiziiiiz": 827, "iizziiiiz": 827, "izziiiiii": 827, "izzziiiii": 827, "izziiizii": 827, "iziziiizi": 827, "izzziizzi": 827, "izziziiii": 827, "iziziziii": 827, "izzzzziii": 827, "iziziiiiz": 827, "izzziiiiz": 827, "iiiziiiii": 827, "ziiiiiiii": 827, "ziiiiizii": 827, "ziiiiiizi": 827, "ziiiiizzi": 827, "ziiiziiii": 827, "ziiiiziii": 827, "ziiizziii": 827, "ziziiiiii": 827, "ziiziiiii": 827, "zizziiiii": 827, "ziiizizii": 827, "ziziiizii": 827, "ziiiizizi": 827, "ziiziiizi": 827, "ziiizzzzi": 827, "zizziizzi": 827, "ziziziiii": 827, "ziiziziii": 827, "zizzzziii": 827, "ziiiiiizz": 827, "ziiiiizzz": 827, "ziiiiziiz": 827, "ziiizziiz": 827, "ziiziiiiz": 827, "zizziiiiz": 827, "ziiiiiiiz": 827, "\u53d6\u308a\u7d44\u3093": 827, "\u6700\u4f4e": 827, "\u30bf\u30fc\u30b2\u30c3\u30c8": 827, "\u3053\u3046\u3057\u3066": 827, "\u6761\u4ef6": [827, 828], "\u4ed8\u304d": 827, "\u30d0\u30ea\u30e5\u30fc": 827, "\u30a2\u30c3\u30c8": 827, "\u30fb\u30ea\u30b9\u30af": 827, "\u3068\u304a\u306a\u3058": 827, "\u3068\u308a": 827, "cobyla": 827, "\u4f7f\u3044": 827, "qaoa": 827, "\u304c\u3088\u308a": 827, "\u9069\u5207": 827, "realamplitudes": 827, "pauliexpectation": 827, "cvarexpectation": 827, "(reps": 827, "_transpiler": 827, "=algorithm": 827, "(eval": 827, "_count": 827, "std": 827, "(mean": 827, "initialize": 827, "_exp": 827, "=cvar": 827, "=store": 827, ".compute": 827, "_minimum": 827, "_eigenvalue": 827, "(raw": 827, "_eigenvalues": 827, ";:": 827, "cost": 827, "parametervectorelement": 827, "(\u03b8": 827, "_value": 827, "_time": 827, "(counts": 827, ".add": [827, 828], ":]": 827, ", values": 827, "\u30b3\u30b9\u30c8": 827, "\u7b54\u3048": 827, "\u89e3\u8aad": 827, "\u305f\u304b": 827, "\u4e00\u9023": 827, "\u30bf\u30fc\u30f3": 827, "\u65b9\u5411": [827, 828], "\u683c\u5b50\u72b6": 827, "\u30e1\u30a4\u30f3\u30d3\u30fc\u30ba": 827, "}-": 827, "\u914d\u5411": 827, "\u95a2\u4fc2": 827, "\u4e00\u822c\u6027": 827, "\u5931\u3046": 827, "\u7834\u308b": 827, "\u4e8c\u6b21\u30c1\u30a7\u30fc\u30f3": 827, "\u30c1\u30a7\u30fc\u30f3": 827, "\u5408\u8a08": [827, 829], "\u4e8c\u6b21\u9396": 827, "\u305d\u3046": 827, "\u306e\u3059\u3079\u3066": 827, "\u30d7\u30ed\u30bb\u30b9": 827, "\u672a\u4f7f": 827, "\u307e\u307e": 827, "=raw": 827, ".turn": 827, "expanded": 827, ", result": 827, "_binary": 827, "\u304c\u3069": 827, "\u304b\u304c": 827, "\u660e\u793a": 827, "\u5909\u5f62": 827, "(f": [827, 829], "\"the": 827, "_shape": 827, "_decoder": 827, "\"and": 827, "sequences": 827, ".side": 827, "\u305e\u308c": 827, "\u30ab\u30eb\u30c6\u30b7\u30a2": 827, "[[": 827, ";]": 827, ";-": 827, "\u305d\u3057": 827, "\u6700\u5f8c": 827, "\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0": 827, "\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6": 827, "(title": 827, "view": 827, "\u30b5\u30a4\u30c9": 827, "aprlr": 827, "\"f": 827, "\"y": 827, "/levinthal": 827, "_paradox": 827, ".robert": 827, ".barkoutsos": 827, ".woerner": 827, ".tavernelli": 827, "resource": 827, "-efficient": 827, "iupac": 827, "\u2013iub": 827, "commission": 827, "biochemical": 827, "nomenclature": 827, "\u201ca": 827, "-letter": 827, "\u201d.": 827, "pac": 827, "pmid": 827, ".jernigan": 827, "favorable": 827, "unfavorable": 827, "packing": 827, "threading": 827, "jmbi": 827, "nannichini": 827, "improving": 827, "4python": 827, "0python": 827, "mar": [827, 828], "wed": 827, "_models": 828, "\u91cf\u5b50\u7269": 828, "\u7269\u6027": 828, "\u7269\u7406\u5b66": 828, "\u7814\u7a76": 828, "\u3088\u304f": 828, "\u3068\u3048": 828, "\u56fa\u4f53": 828, "\u632f\u308b": 828, "\u821e\u3044": 828, "\u4e00\u822c": [828, 829], "\u3055\u307e\u3056\u307e": 828, "\u30b7\u30b9\u30c6\u30e0": 828, "fermihubbardmodel": 828, "\u30cf\u30d0\u30fc\u30c9\u30e2\u30c7\u30eb\u30e2\u30c7\u30eb": 828, "rx": 828, "\u4e00\u6b21": 828, "\u5143\u683c\u5b50": 828, "_lattice": 828, "=num": 828, "=boundary": 828, "\u8996\u899a": 828, ".draw": [828, 829], "\u5468\u671f": 828, "\u5883\u754c": 828, "\u63cf\u753b": 828, "_boundary": 828, "\u30a8\u30c3\u30b8": 828, "\u5b9f\u6570": [828, 829], "\u8907\u7d20": 828, "\u91cd\u307f": 828, "\u30eb\u30fc\u30d7": 828, "=edge": 828, "=onsite": 828, "(line": 828, ".weighted": 828, "_edge": 828, "_adjacency": 828, "\u96a3\u63a5": 828, "\u898b\u306a\u3059": 828, "\u30a8\u30eb\u30df\u30fc\u30c8": [828, 829], "(weighted": 828, ".+": 828, ".j": 828, ".-": 828, "\u4e8c\u6b21\u5143": 828, "\u958b\u3044": 828, "\u4e8c\u6b21": [828, 829], "(rows": 828, "=rows": 828, "=cols": 828, "border": 828, "\u5404\u65b9": 828, "-direction": 828, "periodic": 828, "\u4ed8\u3051\u308b": 828, "(square": 828, "\u4e00\u822c\u5316": 828, "\u4e09\u6b21": 828, "(size": 828, "=size": 828, "\u683c\u5b50\u70b9": 828, "\u7acb\u65b9": 828, "indextocoord": 828, "(index": 828, "/ (": 828, "vec": 828, "_x": 828, "_y": 828, ".cos": 828, "(angle": 828, ".sin": 828, "_z": 828, ".tolist": 828, "pos": 828, "=pi": 828, ".prod": 828, "(style": 828, "=latticedrawstyle": 828, "(pos": 828, "=pos": 828, "\u4e09\u89d2\u5f62": 828, "\u5bfe\u89d2\u7dda": 828, "\u306e\u3044\u305a\u308c\u304b": 828, "\u3066\u304d": 828, "\u3002pygraph": 828, "\u30ce\u30fc\u30c9": 828, "(multigraph": 828, "multiigraph": 828, "shoud": 828, "_edges": 828, "(graph": 828, "(general": 828, "2j": 828, "\u53ef\u8996": 828, "\u683c\u5b50\u5185": 828, "_labels": 828, "\u30b5\u30a4\u30c8": 828, "\u30e9\u30d9\u30eb": [828, 829], "\u79fb\u52d5": 828, "sigma": 828, "uparrow": 828, "downarrow": 828, "+ u": 828, "\\sigma": 828, "\u4f34\u3046": 828, "\u3067\u306e": 828, "= c": 828, "\u500b\u6570": 828, "\u5f37\u3055": 828, "\u5143\u683c": 828, "\u5b50\u4e0a": 828, "\u5747\u4e00": 828, "=boundarycondition": 828, "fhm": 828, ".uniform": 828, "=square": 828, "=t": 828, "=v": 828, "=u": 828, "\u8fd4\u3055": 828, "\u5076\u6570": 828, "\u30a4\u30f3\u30c7\u30c3\u30af\u30b9": 828, "\u30a2\u30c3\u30d7\u30b9\u30d4\u30f3": 828, "\u5947\u6570": 828, "\u30c0\u30a6\u30f3\u30b9\u30d4\u30f3": 828, "ham": 828, "(ham": 828, "\u4e0d\u5747": 828, "\u691c\u8a0e": 828, "\u898b\u306a\u3055": 828, "\u30d3\u30c3\u30c8\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc": 828, "\u306e\u3044": 828, "\u305a\u308c": 828, "seen": 828, "(lattice": 828, "=general": 828, "latticemodelproblem": 828, "=line": 828, "lmp": 828, "=fhm": 828, "(lmp": 828, "-aqua": 828, "5qiskit": 828, "6python": [828, 829], "jst": 828, "_hamiltonian": 829, "_slater": 829, "_determinants": 829, "\uff09\u3001": 829, "\u79f0\u884c": 829, "^t": 829, "\u3067\u3042\u308a": 829, "\u53cd\u4ea4": 829, "\u63db\u95a2": 829, "\u6e80\u305f": 829, "{align": 829, "\u6271\u3044": 829, "\u3084\u3059\u3044": 829, "\u30d5\u30a7\u30eb\u30df\u30aa\u30f3\u30ac\u30a6\u30b9": 829, "2\u6b21": 829, "\u7279\u5316": 829, "\u7406\u7531": 829, "\u4ee3\u6570": 829, "\u9069\u3057": 829, "=hermitian": 829, "=antisymmetric": 829, "=constant": 829, "_ferm": 829, "\u66f8\u304d": 829, "leq": 829, "\u975e\u8ca0": 829, "\u30d5\u30a7\u30eb\u30df": 829, "\\\nb": 829, "\\\na": 829, "\u5404\u56fa": 829, "\u30b5\u30d6\u30bb\u30c3\u30c8": 829, "_constant": 829, ".diagonalizing": 829, "\"shape": 829, "\"orbital": 829, "\"transformed": 829, "fermionicgaussianstate": 829, "\u3002jordan": 829, "\u6df1\u3055": 829, "\u6301\u3061": 829, "eig": 829, ".sum": 829, "(orbital": 829, "[list": 829, "(occupied": 829, "\"eigenvalue": 829, "(transformation": 829, "=occupied": 829, "\u30b3\u30fc\u30c9\u30bb\u30eb": 829, "\u30b7\u30df\u30e5\u30ec\u30fc\u30c8": 829, "\u4e88\u60f3": 829, "\u691c\u8a3c": 829, ".quantum": 829, "_info": 829, "simulate": 829, "(statevector": 829, "(circuit": 829, "_jw": 829, ".testing": 829, ".assert": 829, "_allclose": 829, "\u79f0\u90e8": 829, "\u6df7\u5408": 829, "\u6e08\u307f": 829, "\"hamiltonian": 829, ".conserves": 829, "_particle": 829, "\u7279\u6b8a": 829, "\u30b9\u30ec\u30a4\u30bf\u30fc": 829, "slaterdeterminant": 829, "\u53d7\u3051": 829, "\\eta": 829, "\u4e0b\u3067": 829, "\u5bb9\u6613": 829, "\u53cd\u6620": 829, "\u4eee\u5b9a": 829, "\u30e6\u30cb\u30bf\u30ea": 829, "\u30cd\u30a4\u30c1\u30e3\u30fc": 829, "\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af": 829, "bogoliubovtransform": 829, "quantumregister": 829, "_hermitian": 829, "_fidelity": 829, ".linalg": 829, "expm": 829, "(random": 829, "(hermitian": 829, "diagonalize": 829, "_,": 829, "(register": 829, "bog": 829, "(bog": 829, ".inverse": 829, ", register": 829, "rotations": 829, ".rz": 829, ".evolve": 829, "exponentiation": 829, "exact": 829, "_evolution": 829, "(initial": 829, "simulated": 829, "fidelity": 829, "(final": 829, "(fidelity": 829, "cbc": 829, "eqiskit": 829, "aug": 829, "thu": 829}, "objects": {"": [[0, 0, 0, "-", "qiskit_nature"]], "qiskit_nature": [[44, 1, 1, "", "QiskitNatureError"], [45, 1, 1, "", "UnsupportMethodError"], [1, 0, 0, "-", "algorithms"], [4, 0, 0, "-", "circuit"], [7, 0, 0, "-", "converters"], [9, 0, 0, "-", "drivers"], [15, 0, 0, "-", "hdf5"], [16, 0, 0, "-", "logging"], [17, 0, 0, "-", "mappers"], [19, 0, 0, "-", "operators"], [21, 0, 0, "-", "problems"], [25, 0, 0, "-", "properties"], [33, 0, 0, "-", "results"], [35, 0, 0, "-", "runtime"], [36, 0, 0, "-", "settings"], [37, 0, 0, "-", "transformers"], [40, 0, 0, "-", "utils"]], "qiskit_nature.QiskitNatureError": [[44, 2, 1, "", "with_traceback"]], "qiskit_nature.UnsupportMethodError": [[45, 2, 1, "", "with_traceback"]], "qiskit_nature.algorithms": [[46, 3, 1, "", "AdaptVQE"], [50, 3, 1, "", "EigensolverFactory"], [52, 3, 1, "", "ExcitedStatesEigensolver"], [56, 3, 1, "", "ExcitedStatesSolver"], [60, 3, 1, "", "GroundStateEigensolver"], [66, 3, 1, "", "GroundStateSolver"], [73, 3, 1, "", "MinimumEigensolverFactory"], [77, 3, 1, "", "NumPyEigensolverFactory"], [82, 3, 1, "", "NumPyMinimumEigensolverFactory"], [88, 3, 1, "", "QEOM"], [93, 3, 1, "", "VQEUCCFactory"], [106, 3, 1, "", "VQEUVCCFactory"], [2, 0, 0, "-", "initial_points"], [3, 0, 0, "-", "pes_samplers"]], "qiskit_nature.algorithms.AdaptVQE": [[47, 4, 1, "", "gradient"], [48, 2, 1, "", "returns_groundstate"], [49, 2, 1, "", "solve"]], "qiskit_nature.algorithms.EigensolverFactory": [[51, 2, 1, "", "get_solver"]], "qiskit_nature.algorithms.ExcitedStatesEigensolver": [[53, 2, 1, "", "get_qubit_operators"], [54, 2, 1, "", "solve"], [55, 4, 1, "", "solver"]], "qiskit_nature.algorithms.ExcitedStatesSolver": [[57, 2, 1, "", "get_qubit_operators"], [58, 2, 1, "", "solve"], [59, 4, 1, "", "solver"]], "qiskit_nature.algorithms.GroundStateEigensolver": [[61, 2, 1, "", "evaluate_operators"], [62, 2, 1, "", "get_qubit_operators"], [63, 2, 1, "", "returns_groundstate"], [64, 2, 1, "", "solve"], [65, 4, 1, "", "solver"]], "qiskit_nature.algorithms.GroundStateSolver": [[67, 2, 1, "", "evaluate_operators"], [68, 2, 1, "", "get_qubit_operators"], [69, 4, 1, "", "qubit_converter"], [70, 2, 1, "", "returns_groundstate"], [71, 2, 1, "", "solve"], [72, 4, 1, "", "solver"]], "qiskit_nature.algorithms.MinimumEigensolverFactory": [[74, 2, 1, "", "get_solver"], [75, 4, 1, "", "minimum_eigensolver"], [76, 2, 1, "", "supports_aux_operators"]], "qiskit_nature.algorithms.NumPyEigensolverFactory": [[78, 4, 1, "", "filter_criterion"], [79, 2, 1, "", "get_solver"], [80, 4, 1, "", "k"], [81, 4, 1, "", "use_default_filter_criterion"]], "qiskit_nature.algorithms.NumPyMinimumEigensolverFactory": [[83, 4, 1, "", "filter_criterion"], [84, 2, 1, "", "get_solver"], [85, 4, 1, "", "minimum_eigensolver"], [86, 2, 1, "", "supports_aux_operators"], [87, 4, 1, "", "use_default_filter_criterion"]], "qiskit_nature.algorithms.QEOM": [[89, 4, 1, "", "excitations"], [90, 2, 1, "", "get_qubit_operators"], [91, 2, 1, "", "solve"], [92, 4, 1, "", "solver"]], "qiskit_nature.algorithms.VQEUCCFactory": [[94, 4, 1, "", "ansatz"], [95, 4, 1, "", "callback"], [96, 4, 1, "", "expectation"], [97, 2, 1, "", "get_solver"], [98, 4, 1, "", "gradient"], [99, 4, 1, "", "include_custom"], [100, 4, 1, "", "initial_point"], [101, 4, 1, "", "initial_state"], [102, 4, 1, "", "minimum_eigensolver"], [103, 4, 1, "", "optimizer"], [104, 4, 1, "", "quantum_instance"], [105, 2, 1, "", "supports_aux_operators"]], "qiskit_nature.algorithms.VQEUVCCFactory": [[107, 4, 1, "", "ansatz"], [108, 4, 1, "", "callback"], [109, 4, 1, "", "expectation"], [110, 2, 1, "", "get_solver"], [111, 4, 1, "", "gradient"], [112, 4, 1, "", "include_custom"], [113, 4, 1, "", "initial_point"], [114, 4, 1, "", "initial_state"], [115, 4, 1, "", "minimum_eigensolver"], [116, 4, 1, "", "optimizer"], [117, 4, 1, "", "quantum_instance"], [118, 2, 1, "", "supports_aux_operators"]], "qiskit_nature.algorithms.initial_points": [[119, 3, 1, "", "HFInitialPoint"], [126, 3, 1, "", "InitialPoint"], [131, 3, 1, "", "MP2InitialPoint"], [141, 3, 1, "", "VSCFInitialPoint"]], "qiskit_nature.algorithms.initial_points.HFInitialPoint": [[120, 4, 1, "", "ansatz"], [121, 2, 1, "", "compute"], [122, 4, 1, "", "excitation_list"], [123, 2, 1, "", "get_energy"], [124, 4, 1, "", "grouped_property"], [125, 2, 1, "", "to_numpy_array"]], "qiskit_nature.algorithms.initial_points.InitialPoint": [[127, 4, 1, "", "ansatz"], [128, 2, 1, "", "compute"], [129, 4, 1, "", "grouped_property"], [130, 2, 1, "", "to_numpy_array"]], "qiskit_nature.algorithms.initial_points.MP2InitialPoint": [[132, 4, 1, "", "ansatz"], [133, 2, 1, "", "compute"], [134, 4, 1, "", "excitation_list"], [135, 2, 1, "", "get_energy"], [136, 2, 1, "", "get_energy_correction"], [137, 2, 1, "", "get_energy_corrections"], [138, 4, 1, "", "grouped_property"], [139, 4, 1, "", "threshold"], [140, 2, 1, "", "to_numpy_array"]], "qiskit_nature.algorithms.initial_points.VSCFInitialPoint": [[142, 4, 1, "", "ansatz"], [143, 2, 1, "", "compute"], [144, 4, 1, "", "excitation_list"], [145, 4, 1, "", "grouped_property"], [146, 2, 1, "", "to_numpy_array"]], "qiskit_nature.algorithms.pes_samplers": [[147, 3, 1, "", "BOPESSampler"], [150, 3, 1, "", "DifferentialExtrapolator"], [152, 3, 1, "", "EnergySurface1DSpline"], [158, 3, 1, "", "EnergySurfaceBase"], [164, 3, 1, "", "Extrapolator"], [167, 3, 1, "", "HarmonicPotential"], [179, 3, 1, "", "MorsePotential"], [191, 3, 1, "", "PCAExtrapolator"], [193, 3, 1, "", "PolynomialExtrapolator"], [195, 3, 1, "", "PotentialBase"], [199, 3, 1, "", "SieveExtrapolator"], [201, 3, 1, "", "VibrationalStructureBase"], [206, 3, 1, "", "WindowExtrapolator"]], "qiskit_nature.algorithms.pes_samplers.BOPESSampler": [[148, 2, 1, "", "evaluate_callable_aux_operators"], [149, 2, 1, "", "sample"]], "qiskit_nature.algorithms.pes_samplers.DifferentialExtrapolator": [[151, 2, 1, "", "extrapolate"]], "qiskit_nature.algorithms.pes_samplers.EnergySurface1DSpline": [[153, 2, 1, "", "eval"], [154, 2, 1, "", "fit"], [155, 2, 1, "", "get_equilibrium_geometry"], [156, 2, 1, "", "get_minimal_energy"], [157, 2, 1, "", "get_trust_region"]], "qiskit_nature.algorithms.pes_samplers.EnergySurfaceBase": [[159, 2, 1, "", "eval"], [160, 2, 1, "", "fit"], [161, 2, 1, "", "get_equilibrium_geometry"], [162, 2, 1, "", "get_minimal_energy"], [163, 2, 1, "", "get_trust_region"]], "qiskit_nature.algorithms.pes_samplers.Extrapolator": [[165, 2, 1, "", "extrapolate"], [166, 2, 1, "", "factory"]], "qiskit_nature.algorithms.pes_samplers.HarmonicPotential": [[168, 2, 1, "", "dissociation_energy"], [169, 2, 1, "", "eval"], [170, 2, 1, "", "fit"], [171, 2, 1, "", "fit_function"], [172, 2, 1, "", "fundamental_frequency"], [173, 2, 1, "", "get_equilibrium_geometry"], [174, 2, 1, "", "get_minimal_energy"], [175, 2, 1, "", "process_fit_data"], [176, 2, 1, "", "update_molecule"], [177, 2, 1, "", "vibrational_energy_level"], [178, 2, 1, "", "wave_number"]], "qiskit_nature.algorithms.pes_samplers.MorsePotential": [[180, 2, 1, "", "dissociation_energy"], [181, 2, 1, "", "eval"], [182, 2, 1, "", "fit"], [183, 2, 1, "", "fit_function"], [184, 2, 1, "", "fundamental_frequency"], [185, 2, 1, "", "get_equilibrium_geometry"], [186, 2, 1, "", "get_maximum_trusted_level"], [187, 2, 1, "", "get_minimal_energy"], [188, 2, 1, "", "update_molecule"], [189, 2, 1, "", "vibrational_energy_level"], [190, 2, 1, "", "wave_number"]], "qiskit_nature.algorithms.pes_samplers.PCAExtrapolator": [[192, 2, 1, "", "extrapolate"]], "qiskit_nature.algorithms.pes_samplers.PolynomialExtrapolator": [[194, 2, 1, "", "extrapolate"]], "qiskit_nature.algorithms.pes_samplers.PotentialBase": [[196, 2, 1, "", "dissociation_energy"], [197, 2, 1, "", "get_num_modes"], [198, 2, 1, "", "get_trust_region"]], "qiskit_nature.algorithms.pes_samplers.SieveExtrapolator": [[200, 2, 1, "", "extrapolate"]], "qiskit_nature.algorithms.pes_samplers.VibrationalStructureBase": [[202, 2, 1, "", "get_maximum_trusted_level"], [203, 2, 1, "", "get_num_modes"], [204, 2, 1, "", "update_molecule"], [205, 2, 1, "", "vibrational_energy_level"]], "qiskit_nature.algorithms.pes_samplers.WindowExtrapolator": [[207, 2, 1, "", "extrapolate"], [208, 4, 1, "", "extrapolator"], [209, 4, 1, "", "window"]], "qiskit_nature.circuit": [[5, 0, 0, "-", "library"]], "qiskit_nature.circuit.library": [[210, 3, 1, "", "BogoliubovTransform"], [211, 3, 1, "", "CHC"], [215, 3, 1, "", "FermionicGaussianState"], [216, 3, 1, "", "HartreeFock"], [217, 3, 1, "", "PUCCD"], [220, 3, 1, "", "SUCCD"], [223, 3, 1, "", "SlaterDeterminant"], [224, 3, 1, "", "UCC"], [233, 3, 1, "", "UCCSD"], [234, 3, 1, "", "UVCC"], [242, 3, 1, "", "UVCCSD"], [243, 3, 1, "", "VSCF"]], "qiskit_nature.circuit.library.CHC": [[212, 4, 1, "", "excitations"], [213, 4, 1, "", "initial_state"], [214, 4, 1, "", "num_qubits"]], "qiskit_nature.circuit.library.PUCCD": [[218, 2, 1, "", "generate_excitations"], [219, 4, 1, "", "include_singles"]], "qiskit_nature.circuit.library.SUCCD": [[221, 2, 1, "", "generate_excitations"], [222, 4, 1, "", "include_singles"]], "qiskit_nature.circuit.library.UCC": [[225, 5, 1, "", "EXCITATION_TYPE"], [226, 4, 1, "", "excitation_list"], [227, 2, 1, "", "excitation_ops"], [228, 4, 1, "", "excitations"], [229, 4, 1, "", "num_particles"], [230, 4, 1, "", "num_spin_orbitals"], [231, 4, 1, "", "operators"], [232, 4, 1, "", "qubit_converter"]], "qiskit_nature.circuit.library.UVCC": [[235, 5, 1, "", "EXCITATION_TYPE"], [236, 4, 1, "", "excitation_list"], [237, 2, 1, "", "excitation_ops"], [238, 4, 1, "", "excitations"], [239, 4, 1, "", "num_modals"], [240, 4, 1, "", "operators"], [241, 4, 1, "", "qubit_converter"]], "qiskit_nature.circuit.library.ansatzes": [[6, 0, 0, "-", "utils"]], "qiskit_nature.circuit.library.ansatzes.utils": [[244, 6, 1, "", "generate_fermionic_excitations"], [245, 6, 1, "", "generate_vibration_excitations"]], "qiskit_nature.converters": [[8, 0, 0, "-", "second_quantization"]], "qiskit_nature.converters.second_quantization": [[246, 3, 1, "", "QubitConverter"]], "qiskit_nature.converters.second_quantization.QubitConverter": [[247, 2, 1, "", "convert"], [248, 2, 1, "", "convert_match"], [249, 2, 1, "", "convert_only"], [250, 2, 1, "", "force_match"], [251, 2, 1, "", "map"], [252, 4, 1, "", "mapper"], [253, 4, 1, "", "num_particles"], [254, 4, 1, "", "two_qubit_reduction"], [255, 4, 1, "", "z2symmetries"], [256, 4, 1, "", "z2symmetry_reduction"]], "qiskit_nature.drivers": [[257, 3, 1, "", "Molecule"], [275, 3, 1, "", "UnitsType"], [10, 0, 0, "-", "second_quantization"]], "qiskit_nature.drivers.Molecule": [[258, 5, 1, "", "VERSION"], [259, 2, 1, "", "absolute_angle"], [260, 2, 1, "", "absolute_bending"], [261, 2, 1, "", "absolute_distance"], [262, 2, 1, "", "absolute_stretching"], [263, 4, 1, "", "atoms"], [264, 4, 1, "", "charge"], [265, 4, 1, "", "degrees_of_freedom"], [266, 2, 1, "", "from_hdf5"], [267, 4, 1, "", "geometry"], [268, 4, 1, "", "masses"], [269, 4, 1, "", "multiplicity"], [270, 4, 1, "", "perturbations"], [271, 2, 1, "", "relative_bending"], [272, 2, 1, "", "relative_stretching"], [273, 2, 1, "", "to_hdf5"], [274, 4, 1, "", "units"]], "qiskit_nature.drivers.UnitsType": [[276, 5, 1, "", "ANGSTROM"], [277, 5, 1, "", "BOHR"]], "qiskit_nature.drivers.second_quantization": [[278, 3, 1, "", "BaseDriver"], [280, 3, 1, "", "BasisType"], [285, 3, 1, "", "ElectronicStructureDriver"], [287, 3, 1, "", "ElectronicStructureDriverType"], [294, 3, 1, "", "ElectronicStructureMoleculeDriver"], [301, 3, 1, "", "FCIDumpDriver"], [304, 3, 1, "", "GaussianDriver"], [309, 3, 1, "", "GaussianForcesDriver"], [313, 3, 1, "", "GaussianLogDriver"], [315, 3, 1, "", "GaussianLogResult"], [323, 3, 1, "", "HDF5Driver"], [327, 3, 1, "", "InitialGuess"], [332, 3, 1, "", "MethodType"], [339, 3, 1, "", "PSI4Driver"], [344, 3, 1, "", "PyQuanteDriver"], [358, 3, 1, "", "PySCFDriver"], [377, 3, 1, "", "VibrationalStructureDriver"], [379, 3, 1, "", "VibrationalStructureDriverType"], [383, 3, 1, "", "VibrationalStructureMoleculeDriver"], [11, 0, 0, "-", "gaussiand"], [12, 0, 0, "-", "psi4d"], [13, 0, 0, "-", "pyquanted"], [14, 0, 0, "-", "pyscfd"]], "qiskit_nature.drivers.second_quantization.BaseDriver": [[279, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.BasisType": [[281, 5, 1, "", "B631G"], [282, 5, 1, "", "B631GSS"], [283, 5, 1, "", "BSTO3G"], [284, 2, 1, "", "type_from_string"]], "qiskit_nature.drivers.second_quantization.ElectronicStructureDriver": [[286, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.ElectronicStructureDriverType": [[288, 5, 1, "", "AUTO"], [289, 5, 1, "", "GAUSSIAN"], [290, 5, 1, "", "PSI4"], [291, 5, 1, "", "PYQUANTE"], [292, 5, 1, "", "PYSCF"], [293, 2, 1, "", "driver_class_from_type"]], "qiskit_nature.drivers.second_quantization.ElectronicStructureMoleculeDriver": [[295, 4, 1, "", "basis"], [296, 4, 1, "", "driver_kwargs"], [297, 4, 1, "", "driver_type"], [298, 4, 1, "", "method"], [299, 4, 1, "", "molecule"], [300, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.FCIDumpDriver": [[302, 2, 1, "", "dump"], [303, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.GaussianDriver": [[305, 2, 1, "", "check_method_supported"], [306, 2, 1, "", "from_molecule"], [307, 2, 1, "", "run"], [308, 2, 1, "", "to_driver_basis"]], "qiskit_nature.drivers.second_quantization.GaussianForcesDriver": [[310, 2, 1, "", "from_molecule"], [311, 2, 1, "", "run"], [312, 2, 1, "", "to_driver_basis"]], "qiskit_nature.drivers.second_quantization.GaussianLogDriver": [[314, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.GaussianLogResult": [[316, 4, 1, "", "a_to_h_numbering"], [317, 4, 1, "", "cubic_force_constants"], [318, 2, 1, "", "get_vibrational_energy"], [319, 2, 1, "", "get_watson_hamiltonian"], [320, 4, 1, "", "log"], [321, 4, 1, "", "quadratic_force_constants"], [322, 4, 1, "", "quartic_force_constants"]], "qiskit_nature.drivers.second_quantization.HDF5Driver": [[324, 2, 1, "", "convert"], [325, 2, 1, "", "run"], [326, 4, 1, "", "work_path"]], "qiskit_nature.drivers.second_quantization.InitialGuess": [[328, 5, 1, "", "ATOM"], [329, 5, 1, "", "HCORE"], [330, 5, 1, "", "MINAO"], [331, 5, 1, "", "ONE_E"]], "qiskit_nature.drivers.second_quantization.MethodType": [[333, 5, 1, "", "RHF"], [334, 5, 1, "", "RKS"], [335, 5, 1, "", "ROHF"], [336, 5, 1, "", "ROKS"], [337, 5, 1, "", "UHF"], [338, 5, 1, "", "UKS"]], "qiskit_nature.drivers.second_quantization.PSI4Driver": [[340, 2, 1, "", "check_method_supported"], [341, 2, 1, "", "from_molecule"], [342, 2, 1, "", "run"], [343, 2, 1, "", "to_driver_basis"]], "qiskit_nature.drivers.second_quantization.PyQuanteDriver": [[345, 4, 1, "", "atoms"], [346, 4, 1, "", "basis"], [347, 4, 1, "", "charge"], [348, 2, 1, "", "check_method_supported"], [349, 2, 1, "", "from_molecule"], [350, 4, 1, "", "maxiters"], [351, 4, 1, "", "method"], [352, 4, 1, "", "multiplicity"], [353, 2, 1, "", "run"], [354, 2, 1, "", "run_pyquante"], [355, 2, 1, "", "to_driver_basis"], [356, 4, 1, "", "tol"], [357, 4, 1, "", "units"]], "qiskit_nature.drivers.second_quantization.PySCFDriver": [[359, 4, 1, "", "atom"], [360, 4, 1, "", "basis"], [361, 4, 1, "", "charge"], [362, 2, 1, "", "check_method_supported"], [363, 4, 1, "", "chkfile"], [364, 4, 1, "", "conv_tol"], [365, 2, 1, "", "from_molecule"], [366, 4, 1, "", "init_guess"], [367, 4, 1, "", "max_cycle"], [368, 4, 1, "", "max_memory"], [369, 4, 1, "", "method"], [370, 2, 1, "", "run"], [371, 2, 1, "", "run_pyscf"], [372, 4, 1, "", "spin"], [373, 2, 1, "", "to_driver_basis"], [374, 4, 1, "", "unit"], [375, 4, 1, "", "xc_functional"], [376, 4, 1, "", "xcf_library"]], "qiskit_nature.drivers.second_quantization.VibrationalStructureDriver": [[378, 2, 1, "", "run"]], "qiskit_nature.drivers.second_quantization.VibrationalStructureDriverType": [[380, 5, 1, "", "AUTO"], [381, 5, 1, "", "GAUSSIAN_FORCES"], [382, 2, 1, "", "driver_class_from_type"]], "qiskit_nature.drivers.second_quantization.VibrationalStructureMoleculeDriver": [[384, 4, 1, "", "basis"], [385, 4, 1, "", "driver_kwargs"], [386, 4, 1, "", "driver_type"], [387, 4, 1, "", "molecule"], [388, 2, 1, "", "run"]], "qiskit_nature.hdf5": [[15, 3, 1, "", "HDF5Storable"], [15, 6, 1, "", "load_from_hdf5"], [15, 6, 1, "", "save_to_hdf5"]], "qiskit_nature.hdf5.HDF5Storable": [[15, 2, 1, "", "from_hdf5"], [15, 2, 1, "", "to_hdf5"]], "qiskit_nature.logging": [[16, 3, 1, "", "QiskitNatureLogging"]], "qiskit_nature.logging.QiskitNatureLogging": [[16, 2, 1, "", "add_handler"], [16, 2, 1, "", "get_levels_for_names"], [16, 2, 1, "", "log_to_file"], [16, 2, 1, "", "remove_all_handlers"], [16, 2, 1, "", "remove_default_handler"], [16, 2, 1, "", "remove_handler"], [16, 2, 1, "", "set_levels_for_names"]], "qiskit_nature.mappers": [[18, 0, 0, "-", "second_quantization"]], "qiskit_nature.mappers.second_quantization": [[389, 3, 1, "", "BravyiKitaevMapper"], [391, 3, 1, "", "BravyiKitaevSuperFastMapper"], [393, 3, 1, "", "DirectMapper"], [395, 3, 1, "", "FermionicMapper"], [397, 3, 1, "", "JordanWignerMapper"], [399, 3, 1, "", "LinearMapper"], [401, 3, 1, "", "LogarithmicMapper"], [403, 3, 1, "", "ParityMapper"], [405, 3, 1, "", "QubitMapper"], [409, 3, 1, "", "SpinMapper"], [411, 3, 1, "", "VibrationalMapper"]], "qiskit_nature.mappers.second_quantization.BravyiKitaevMapper": [[390, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.BravyiKitaevSuperFastMapper": [[392, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.DirectMapper": [[394, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.FermionicMapper": [[396, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.JordanWignerMapper": [[398, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.LinearMapper": [[400, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.LogarithmicMapper": [[402, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.ParityMapper": [[404, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.QubitMapper": [[406, 4, 1, "", "allows_two_qubit_reduction"], [407, 2, 1, "", "map"], [408, 2, 1, "", "mode_based_mapping"]], "qiskit_nature.mappers.second_quantization.SpinMapper": [[410, 2, 1, "", "map"]], "qiskit_nature.mappers.second_quantization.VibrationalMapper": [[412, 2, 1, "", "map"]], "qiskit_nature.operators": [[20, 0, 0, "-", "second_quantization"]], "qiskit_nature.operators.second_quantization": [[413, 3, 1, "", "FermionicOp"], [431, 3, 1, "", "QuadraticHamiltonian"], [440, 3, 1, "", "SecondQuantizedOp"], [445, 3, 1, "", "SpinOp"], [460, 3, 1, "", "VibrationalOp"]], "qiskit_nature.operators.second_quantization.FermionicOp": [[414, 2, 1, "", "__len__"], [415, 2, 1, "", "add"], [416, 2, 1, "", "adjoint"], [417, 2, 1, "", "compose"], [418, 4, 1, "", "display_format"], [419, 2, 1, "", "mul"], [420, 2, 1, "", "normal_ordered"], [421, 2, 1, "", "one"], [422, 2, 1, "", "reduce"], [423, 4, 1, "", "register_length"], [424, 2, 1, "", "set_truncation"], [425, 2, 1, "", "simplify"], [426, 2, 1, "", "terms"], [427, 2, 1, "", "to_list"], [428, 2, 1, "", "to_matrix"], [429, 2, 1, "", "to_normal_order"], [430, 2, 1, "", "zero"]], "qiskit_nature.operators.second_quantization.QuadraticHamiltonian": [[432, 4, 1, "", "antisymmetric_part"], [433, 2, 1, "", "conserves_particle_number"], [434, 4, 1, "", "constant"], [435, 2, 1, "", "diagonalizing_bogoliubov_transform"], [436, 4, 1, "", "hermitian_part"], [437, 2, 1, "", "majorana_form"], [438, 4, 1, "", "num_modes"], [439, 2, 1, "", "to_fermionic_op"]], "qiskit_nature.operators.second_quantization.SecondQuantizedOp": [[441, 2, 1, "", "is_hermitian"], [442, 4, 1, "", "register_length"], [443, 2, 1, "", "simplify"], [444, 2, 1, "", "to_list"]], "qiskit_nature.operators.second_quantization.SpinOp": [[446, 2, 1, "", "__len__"], [447, 2, 1, "", "add"], [448, 2, 1, "", "adjoint"], [449, 2, 1, "", "compose"], [450, 2, 1, "", "mul"], [451, 2, 1, "", "reduce"], [452, 4, 1, "", "register_length"], [453, 2, 1, "", "simplify"], [454, 4, 1, "", "spin"], [455, 2, 1, "", "to_list"], [456, 2, 1, "", "to_matrix"], [457, 4, 1, "", "x"], [458, 4, 1, "", "y"], [459, 4, 1, "", "z"]], "qiskit_nature.operators.second_quantization.VibrationalOp": [[461, 2, 1, "", "__len__"], [462, 2, 1, "", "add"], [463, 2, 1, "", "adjoint"], [464, 2, 1, "", "compose"], [465, 2, 1, "", "mul"], [466, 4, 1, "", "num_modals"], [467, 4, 1, "", "num_modes"], [468, 2, 1, "", "one"], [469, 2, 1, "", "reduce"], [470, 4, 1, "", "register_length"], [471, 2, 1, "", "simplify"], [472, 2, 1, "", "to_list"], [473, 2, 1, "", "zero"]], "qiskit_nature.problems": [[22, 0, 0, "-", "sampling"], [24, 0, 0, "-", "second_quantization"]], "qiskit_nature.problems.sampling": [[23, 0, 0, "-", "protein_folding"]], "qiskit_nature.problems.sampling.protein_folding": [[474, 3, 1, "", "Interaction"], [476, 1, 1, "", "InvalidResidueException"], [477, 1, 1, "", "InvalidSideChainException"], [478, 1, 1, "", "InvalidSizeException"], [479, 3, 1, "", "MainChain"], [481, 3, 1, "", "MixedInteraction"], [483, 3, 1, "", "MiyazawaJerniganInteraction"], [485, 3, 1, "", "PenaltyParameters"], [489, 3, 1, "", "Peptide"], [493, 3, 1, "", "ProteinFoldingProblem"], [498, 3, 1, "", "RandomInteraction"], [500, 3, 1, "", "SideChain"]], "qiskit_nature.problems.sampling.protein_folding.Interaction": [[475, 2, 1, "", "calculate_energy_matrix"]], "qiskit_nature.problems.sampling.protein_folding.InvalidResidueException": [[476, 2, 1, "", "with_traceback"]], "qiskit_nature.problems.sampling.protein_folding.InvalidSideChainException": [[477, 2, 1, "", "with_traceback"]], "qiskit_nature.problems.sampling.protein_folding.InvalidSizeException": [[478, 2, 1, "", "with_traceback"]], "qiskit_nature.problems.sampling.protein_folding.MainChain": [[480, 4, 1, "", "main_chain_residue_sequence"]], "qiskit_nature.problems.sampling.protein_folding.MixedInteraction": [[482, 2, 1, "", "calculate_energy_matrix"]], "qiskit_nature.problems.sampling.protein_folding.MiyazawaJerniganInteraction": [[484, 2, 1, "", "calculate_energy_matrix"]], "qiskit_nature.problems.sampling.protein_folding.PenaltyParameters": [[486, 4, 1, "", "penalty_1"], [487, 4, 1, "", "penalty_back"], [488, 4, 1, "", "penalty_chiral"]], "qiskit_nature.problems.sampling.protein_folding.Peptide": [[490, 4, 1, "", "get_main_chain"], [491, 2, 1, "", "get_side_chain_hot_vector"], [492, 2, 1, "", "get_side_chains"]], "qiskit_nature.problems.sampling.protein_folding.ProteinFoldingProblem": [[494, 2, 1, "", "interpret"], [495, 4, 1, "", "peptide"], [496, 2, 1, "", "qubit_op"], [497, 4, 1, "", "unused_qubits"]], "qiskit_nature.problems.sampling.protein_folding.RandomInteraction": [[499, 2, 1, "", "calculate_energy_matrix"]], "qiskit_nature.problems.second_quantization": [[501, 3, 1, "", "BaseProblem"], [513, 3, 1, "", "ElectronicStructureProblem"], [521, 3, 1, "", "LatticeModelProblem"], [526, 3, 1, "", "VibrationalStructureProblem"], [531, 0, 0, "-", "lattice"]], "qiskit_nature.problems.second_quantization.BaseProblem": [[502, 2, 1, "", "get_default_filter_criterion"], [503, 4, 1, "", "grouped_property"], [504, 4, 1, "", "grouped_property_transformed"], [505, 2, 1, "", "hopping_qeom_ops"], [506, 2, 1, "", "interpret"], [507, 4, 1, "", "main_property_name"], [508, 4, 1, "", "molecule_data"], [509, 4, 1, "", "molecule_data_transformed"], [510, 4, 1, "", "num_particles"], [511, 2, 1, "", "second_q_ops"], [512, 2, 1, "", "symmetry_sector_locator"]], "qiskit_nature.problems.second_quantization.ElectronicStructureProblem": [[514, 2, 1, "", "get_default_filter_criterion"], [515, 2, 1, "", "hopping_qeom_ops"], [516, 2, 1, "", "interpret"], [517, 4, 1, "", "num_particles"], [518, 4, 1, "", "num_spin_orbitals"], [519, 2, 1, "", "second_q_ops"], [520, 2, 1, "", "symmetry_sector_locator"]], "qiskit_nature.problems.second_quantization.LatticeModelProblem": [[522, 2, 1, "", "get_default_filter_criterion"], [523, 2, 1, "", "hopping_qeom_ops"], [524, 2, 1, "", "interpret"], [525, 2, 1, "", "second_q_ops"]], "qiskit_nature.problems.second_quantization.VibrationalStructureProblem": [[527, 2, 1, "", "get_default_filter_criterion"], [528, 2, 1, "", "hopping_qeom_ops"], [529, 2, 1, "", "interpret"], [530, 2, 1, "", "second_q_ops"]], "qiskit_nature.problems.second_quantization.lattice": [[532, 3, 1, "", "FermiHubbardModel"], [537, 3, 1, "", "HyperCubicLattice"], [544, 3, 1, "", "IsingModel"], [549, 3, 1, "", "Lattice"], [558, 3, 1, "", "LineLattice"], [560, 3, 1, "", "SquareLattice"], [563, 3, 1, "", "TriangularLattice"]], "qiskit_nature.problems.second_quantization.lattice.FermiHubbardModel": [[533, 2, 1, "", "from_parameters"], [534, 2, 1, "", "hopping_matrix"], [535, 2, 1, "", "second_q_ops"], [536, 2, 1, "", "uniform_parameters"]], "qiskit_nature.problems.second_quantization.lattice.HyperCubicLattice": [[538, 4, 1, "", "boundary_condition"], [539, 4, 1, "", "dim"], [540, 2, 1, "", "draw_without_boundary"], [541, 4, 1, "", "edge_parameter"], [542, 4, 1, "", "onsite_parameter"], [543, 4, 1, "", "size"]], "qiskit_nature.problems.second_quantization.lattice.IsingModel": [[545, 2, 1, "", "coupling_matrix"], [546, 2, 1, "", "from_parameters"], [547, 2, 1, "", "second_q_ops"], [548, 2, 1, "", "uniform_parameters"]], "qiskit_nature.problems.second_quantization.lattice.Lattice": [[550, 2, 1, "", "copy"], [551, 2, 1, "", "draw"], [552, 2, 1, "", "from_nodes_and_edges"], [553, 4, 1, "", "graph"], [554, 4, 1, "", "node_indexes"], [555, 4, 1, "", "num_nodes"], [556, 2, 1, "", "to_adjacency_matrix"], [557, 4, 1, "", "weighted_edge_list"]], "qiskit_nature.problems.second_quantization.lattice.LineLattice": [[559, 4, 1, "", "num_nodes"]], "qiskit_nature.problems.second_quantization.lattice.SquareLattice": [[561, 4, 1, "", "cols"], [562, 4, 1, "", "rows"]], "qiskit_nature.problems.second_quantization.lattice.TriangularLattice": [[564, 2, 1, "", "draw_without_boundary"]], "qiskit_nature.properties": [[565, 3, 1, "", "GroupedProperty"], [571, 3, 1, "", "Property"], [26, 0, 0, "-", "second_quantization"]], "qiskit_nature.properties.GroupedProperty": [[566, 2, 1, "", "add_property"], [567, 2, 1, "", "from_hdf5"], [568, 2, 1, "", "get_property"], [569, 2, 1, "", "interpret"], [570, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.Property": [[572, 5, 1, "", "VERSION"], [573, 2, 1, "", "log"], [574, 4, 1, "", "name"], [575, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization": [[576, 3, 1, "", "GroupedSecondQuantizedProperty"], [578, 3, 1, "", "SecondQuantizedProperty"], [27, 0, 0, "-", "electronic"], [30, 0, 0, "-", "vibrational"]], "qiskit_nature.properties.second_quantization.GroupedSecondQuantizedProperty": [[577, 2, 1, "", "second_q_ops"]], "qiskit_nature.properties.second_quantization.SecondQuantizedProperty": [[579, 2, 1, "", "from_legacy_driver_result"], [580, 2, 1, "", "second_q_ops"]], "qiskit_nature.properties.second_quantization.electronic": [[581, 3, 1, "", "AngularMomentum"], [593, 3, 1, "", "ElectronicDipoleMoment"], [601, 3, 1, "", "ElectronicEnergy"], [613, 3, 1, "", "ElectronicStructureDriverResult"], [618, 3, 1, "", "Magnetization"], [625, 3, 1, "", "ParticleNumber"], [28, 0, 0, "-", "bases"], [29, 0, 0, "-", "integrals"]], "qiskit_nature.properties.second_quantization.electronic.AngularMomentum": [[582, 5, 1, "", "ABSOLUTE_TOLERANCE"], [583, 5, 1, "", "RELATIVE_TOLERANCE"], [584, 4, 1, "", "absolute_tolerance"], [585, 2, 1, "", "from_hdf5"], [586, 2, 1, "", "from_legacy_driver_result"], [587, 2, 1, "", "interpret"], [588, 4, 1, "", "num_spin_orbitals"], [589, 4, 1, "", "relative_tolerance"], [590, 2, 1, "", "second_q_ops"], [591, 4, 1, "", "spin"], [592, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.ElectronicDipoleMoment": [[594, 2, 1, "", "from_hdf5"], [595, 2, 1, "", "from_legacy_driver_result"], [596, 2, 1, "", "interpret"], [597, 4, 1, "", "nuclear_dipole_moment"], [598, 4, 1, "", "reverse_dipole_sign"], [599, 2, 1, "", "second_q_ops"], [600, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.ElectronicEnergy": [[602, 2, 1, "", "from_hdf5"], [603, 2, 1, "", "from_legacy_driver_result"], [604, 2, 1, "", "from_raw_integrals"], [605, 2, 1, "", "integral_operator"], [606, 2, 1, "", "interpret"], [607, 4, 1, "", "kinetic"], [608, 4, 1, "", "nuclear_repulsion_energy"], [609, 4, 1, "", "orbital_energies"], [610, 4, 1, "", "overlap"], [611, 4, 1, "", "reference_energy"], [612, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.ElectronicStructureDriverResult": [[614, 2, 1, "", "from_hdf5"], [615, 2, 1, "", "from_legacy_driver_result"], [616, 2, 1, "", "second_q_ops"], [617, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.Magnetization": [[619, 2, 1, "", "from_hdf5"], [620, 2, 1, "", "from_legacy_driver_result"], [621, 2, 1, "", "interpret"], [622, 4, 1, "", "num_spin_orbitals"], [623, 2, 1, "", "second_q_ops"], [624, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.ParticleNumber": [[626, 5, 1, "", "ABSOLUTE_TOLERANCE"], [627, 5, 1, "", "RELATIVE_TOLERANCE"], [628, 4, 1, "", "absolute_tolerance"], [629, 2, 1, "", "from_hdf5"], [630, 2, 1, "", "from_legacy_driver_result"], [631, 2, 1, "", "interpret"], [632, 4, 1, "", "num_alpha"], [633, 4, 1, "", "num_beta"], [634, 4, 1, "", "num_particles"], [635, 4, 1, "", "num_spin_orbitals"], [636, 4, 1, "", "occupation_alpha"], [637, 4, 1, "", "occupation_beta"], [638, 4, 1, "", "relative_tolerance"], [639, 2, 1, "", "second_q_ops"], [640, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.bases": [[641, 3, 1, "", "ElectronicBasis"], [645, 3, 1, "", "ElectronicBasisTransform"]], "qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasis": [[642, 5, 1, "", "AO"], [643, 5, 1, "", "MO"], [644, 5, 1, "", "SO"]], "qiskit_nature.properties.second_quantization.electronic.bases.ElectronicBasisTransform": [[646, 4, 1, "", "coeff_alpha"], [647, 4, 1, "", "coeff_beta"], [648, 2, 1, "", "from_hdf5"], [649, 2, 1, "", "is_alpha_equal_beta"], [650, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.electronic.integrals": [[651, 3, 1, "", "ElectronicIntegrals"], [666, 3, 1, "", "IntegralProperty"], [676, 3, 1, "", "OneBodyElectronicIntegrals"], [680, 3, 1, "", "TwoBodyElectronicIntegrals"]], "qiskit_nature.properties.second_quantization.electronic.integrals.ElectronicIntegrals": [[652, 5, 1, "", "INTEGRAL_TRUNCATION_LEVEL"], [653, 5, 1, "", "VERSION"], [654, 2, 1, "", "add"], [655, 4, 1, "", "basis"], [656, 2, 1, "", "compose"], [657, 2, 1, "", "from_hdf5"], [658, 2, 1, "", "get_matrix"], [659, 4, 1, "", "num_body_terms"], [660, 2, 1, "", "set_truncation"], [661, 4, 1, "", "threshold"], [662, 2, 1, "", "to_hdf5"], [663, 2, 1, "", "to_second_q_op"], [664, 2, 1, "", "to_spin"], [665, 2, 1, "", "transform_basis"]], "qiskit_nature.properties.second_quantization.electronic.integrals.IntegralProperty": [[667, 2, 1, "", "add_electronic_integral"], [668, 2, 1, "", "from_hdf5"], [669, 2, 1, "", "from_legacy_driver_result"], [670, 2, 1, "", "get_electronic_integral"], [671, 2, 1, "", "integral_operator"], [672, 2, 1, "", "interpret"], [673, 2, 1, "", "second_q_ops"], [674, 2, 1, "", "to_hdf5"], [675, 2, 1, "", "transform_basis"]], "qiskit_nature.properties.second_quantization.electronic.integrals.OneBodyElectronicIntegrals": [[677, 2, 1, "", "compose"], [678, 2, 1, "", "to_spin"], [679, 2, 1, "", "transform_basis"]], "qiskit_nature.properties.second_quantization.electronic.integrals.TwoBodyElectronicIntegrals": [[681, 5, 1, "", "EINSUM_AO_TO_MO"], [682, 5, 1, "", "EINSUM_CHEM_TO_PHYS"], [683, 2, 1, "", "compose"], [684, 2, 1, "", "get_matrix"], [685, 2, 1, "", "to_spin"], [686, 2, 1, "", "transform_basis"]], "qiskit_nature.properties.second_quantization.vibrational": [[687, 3, 1, "", "OccupiedModals"], [692, 3, 1, "", "VibrationalEnergy"], [701, 3, 1, "", "VibrationalStructureDriverResult"], [31, 0, 0, "-", "bases"], [32, 0, 0, "-", "integrals"]], "qiskit_nature.properties.second_quantization.vibrational.OccupiedModals": [[688, 2, 1, "", "from_hdf5"], [689, 2, 1, "", "from_legacy_driver_result"], [690, 2, 1, "", "interpret"], [691, 2, 1, "", "second_q_ops"]], "qiskit_nature.properties.second_quantization.vibrational.VibrationalEnergy": [[693, 2, 1, "", "add_vibrational_integral"], [694, 2, 1, "", "from_hdf5"], [695, 2, 1, "", "from_legacy_driver_result"], [696, 2, 1, "", "get_vibrational_integral"], [697, 2, 1, "", "interpret"], [698, 2, 1, "", "second_q_ops"], [699, 2, 1, "", "to_hdf5"], [700, 4, 1, "", "truncation_order"]], "qiskit_nature.properties.second_quantization.vibrational.VibrationalStructureDriverResult": [[702, 2, 1, "", "from_hdf5"], [703, 2, 1, "", "from_legacy_driver_result"], [704, 4, 1, "", "num_modes"], [705, 2, 1, "", "second_q_ops"], [706, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.vibrational.bases": [[707, 3, 1, "", "HarmonicBasis"], [709, 3, 1, "", "VibrationalBasis"]], "qiskit_nature.properties.second_quantization.vibrational.bases.HarmonicBasis": [[708, 2, 1, "", "eval_integral"]], "qiskit_nature.properties.second_quantization.vibrational.bases.VibrationalBasis": [[710, 5, 1, "", "VERSION"], [711, 2, 1, "", "eval_integral"], [712, 2, 1, "", "from_hdf5"], [713, 4, 1, "", "num_modals_per_mode"], [714, 2, 1, "", "to_hdf5"]], "qiskit_nature.properties.second_quantization.vibrational.integrals": [[715, 3, 1, "", "VibrationalIntegrals"]], "qiskit_nature.properties.second_quantization.vibrational.integrals.VibrationalIntegrals": [[716, 5, 1, "", "VERSION"], [717, 4, 1, "", "basis"], [718, 2, 1, "", "from_hdf5"], [719, 4, 1, "", "integrals"], [720, 4, 1, "", "num_body_terms"], [721, 2, 1, "", "set_truncation"], [722, 2, 1, "", "to_basis"], [723, 2, 1, "", "to_hdf5"], [724, 2, 1, "", "to_second_q_op"]], "qiskit_nature.results": [[725, 3, 1, "", "BOPESSamplerResult"], [730, 3, 1, "", "EigenstateResult"], [738, 3, 1, "", "ElectronicStructureResult"], [763, 3, 1, "", "LatticeModelResult"], [766, 3, 1, "", "ProteinFoldingResult"], [773, 3, 1, "", "VibrationalStructureResult"], [34, 0, 0, "-", "utils"]], "qiskit_nature.results.BOPESSamplerResult": [[726, 4, 1, "", "energies"], [727, 2, 1, "", "point_results"], [728, 4, 1, "", "points"], [729, 4, 1, "", "raw_results"]], "qiskit_nature.results.EigenstateResult": [[731, 4, 1, "", "aux_operator_eigenvalues"], [732, 2, 1, "", "combine"], [733, 4, 1, "", "eigenenergies"], [734, 4, 1, "", "eigenstates"], [735, 4, 1, "", "groundenergy"], [736, 4, 1, "", "groundstate"], [737, 4, 1, "", "raw_result"]], "qiskit_nature.results.ElectronicStructureResult": [[739, 4, 1, "", "computed_dipole_moment"], [740, 4, 1, "", "computed_energies"], [741, 4, 1, "", "dipole_moment"], [742, 4, 1, "", "dipole_moment_in_debye"], [743, 4, 1, "", "electronic_dipole_moment"], [744, 4, 1, "", "electronic_energies"], [745, 4, 1, "", "extracted_transformer_dipole"], [746, 4, 1, "", "extracted_transformer_dipoles"], [747, 4, 1, "", "extracted_transformer_energies"], [748, 4, 1, "", "extracted_transformer_energy"], [749, 2, 1, "", "formatted"], [750, 4, 1, "", "hartree_fock_energy"], [751, 2, 1, "", "has_dipole"], [752, 2, 1, "", "has_observables"], [753, 4, 1, "", "magnetization"], [754, 4, 1, "", "nuclear_dipole_moment"], [755, 4, 1, "", "nuclear_repulsion_energy"], [756, 4, 1, "", "num_particles"], [757, 4, 1, "", "reverse_dipole_sign"], [758, 4, 1, "", "spin"], [759, 4, 1, "", "total_angular_momentum"], [760, 4, 1, "", "total_dipole_moment"], [761, 4, 1, "", "total_dipole_moment_in_debye"], [762, 4, 1, "", "total_energies"]], "qiskit_nature.results.LatticeModelResult": [[764, 4, 1, "", "algorithm_result"], [765, 4, 1, "", "computed_lattice_energies"]], "qiskit_nature.results.ProteinFoldingResult": [[767, 2, 1, "", "get_figure"], [768, 2, 1, "", "get_result_binary_vector"], [769, 4, 1, "", "protein_shape_decoder"], [770, 4, 1, "", "protein_shape_file_gen"], [771, 2, 1, "", "save_xyz_file"], [772, 4, 1, "", "turn_sequence"]], "qiskit_nature.results.VibrationalStructureResult": [[774, 4, 1, "", "algorithm_result"], [775, 4, 1, "", "computed_vibrational_energies"], [776, 2, 1, "", "formatted"], [777, 4, 1, "", "num_occupied_modals_per_mode"]], "qiskit_nature.results.utils": [[778, 3, 1, "", "ProteinPlotter"], [780, 3, 1, "", "ProteinShapeDecoder"], [783, 3, 1, "", "ProteinShapeFileGen"]], "qiskit_nature.results.utils.ProteinPlotter": [[779, 2, 1, "", "get_figure"]], "qiskit_nature.results.utils.ProteinShapeDecoder": [[781, 4, 1, "", "main_turns"], [782, 4, 1, "", "side_turns"]], "qiskit_nature.results.utils.ProteinShapeFileGen": [[784, 5, 1, "", "COORDINATES"], [785, 2, 1, "", "generate_main_positions"], [786, 2, 1, "", "generate_side_positions"], [787, 2, 1, "", "get_xyz_data"], [788, 4, 1, "", "main_positions"], [789, 2, 1, "", "save_xyz_file"], [790, 4, 1, "", "side_positions"]], "qiskit_nature.runtime": [[791, 3, 1, "", "VQEClient"], [804, 3, 1, "", "VQEProgram"], [806, 3, 1, "", "VQEProgramResult"], [807, 3, 1, "", "VQERuntimeResult"]], "qiskit_nature.runtime.VQEClient": [[792, 4, 1, "", "ansatz"], [793, 4, 1, "", "backend"], [794, 4, 1, "", "callback"], [795, 2, 1, "", "compute_minimum_eigenvalue"], [796, 4, 1, "", "initial_point"], [797, 4, 1, "", "measurement_error_mitigation"], [798, 4, 1, "", "optimizer"], [799, 4, 1, "", "program_id"], [800, 4, 1, "", "provider"], [801, 4, 1, "", "shots"], [802, 4, 1, "", "store_intermediate"], [803, 2, 1, "", "supports_aux_operators"]], "qiskit_nature.runtime.VQEProgram": [[805, 2, 1, "", "compute_minimum_eigenvalue"]], "qiskit_nature.runtime.VQERuntimeResult": [[808, 4, 1, "", "job_id"], [809, 4, 1, "", "optimizer_history"]], "qiskit_nature.settings": [[36, 3, 1, "", "QiskitNatureSettings"]], "qiskit_nature.settings.QiskitNatureSettings": [[36, 4, 1, "", "dict_aux_operators"], [36, 4, 1, "", "optimize_einsum"]], "qiskit_nature.transformers": [[38, 0, 0, "-", "second_quantization"]], "qiskit_nature.transformers.second_quantization": [[810, 3, 1, "", "BaseTransformer"], [39, 0, 0, "-", "electronic"]], "qiskit_nature.transformers.second_quantization.BaseTransformer": [[811, 2, 1, "", "transform"]], "qiskit_nature.transformers.second_quantization.electronic": [[812, 3, 1, "", "ActiveSpaceTransformer"], [814, 3, 1, "", "FreezeCoreTransformer"]], "qiskit_nature.transformers.second_quantization.electronic.ActiveSpaceTransformer": [[813, 2, 1, "", "transform"]], "qiskit_nature.transformers.second_quantization.electronic.FreezeCoreTransformer": [[815, 2, 1, "", "Z"], [816, 2, 1, "", "count_core_orbitals"]], "qiskit_nature.utils": [[817, 6, 1, "", "apply_matrix_to_slices"], [818, 6, 1, "", "givens_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python \u30e2\u30b8\u30e5\u30fc\u30eb"], "1": ["py", "exception", "Python \u4f8b\u5916"], "2": ["py", "method", "Python \u30e1\u30bd\u30c3\u30c9"], "3": ["py", "class", "Python \u30af\u30e9\u30b9"], "4": ["py", "property", "Python \u30d7\u30ed\u30d1\u30c6\u30a3"], "5": ["py", "attribute", "Python \u306e\u5c5e\u6027"], "6": ["py", "function", "Python \u306e\u95a2\u6570"]}, "titleterms": {"qiskit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 531, 825, 830], "nature": [0, 9, 35, 42, 830], "api": 0, "reference": 0, "module": 0, "_nature": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 531], "globals": 0, "submodules": [0, 24, 38], "algorithms": 1, ".algorithms": [1, 2, 3], "excited": 1, "state": 1, "solvers": 1, "ground": 1, "potential": [1, 3, 824], "energy": [1, 3, 824], "surface": [1, 3, 824], "samplers": [1, 3], "initial": [1, 2, 5], "points": [1, 2], ".initial": [2, 100, 101, 113, 114, 213, 796], "_points": 2, ".pes": 3, "_samplers": 3, "circuit": [4, 5], "library": [4, 5], ".circuit": [4, 5, 6], ".library": [5, 6], "states": 5, "ansatzes": 5, "ansatz": 5, "utilities": [5, 6, 27, 30, 40], "excitation": 6, "generator": 6, ".ansatzes": 6, ".utils": [6, 34, 40], "operator": [7, 17], "to": [7, 17], "qubit": [7, 17], "converters": [7, 8], ".converters": [7, 8], "secondquantizedop": [8, 18, 440, 441, 442, 443, 444], ".second": [8, 10, 18, 20, 24, 26, 27, 28, 29, 30, 31, 32, 38, 39, 511, 519, 525, 530, 531, 535, 547, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705], "_quantization": [8, 10, 18, 20, 24, 26, 27, 28, 29, 30, 31, 32, 38, 39, 531], "drivers": [9, 10], ".drivers": [9, 10], "driver": [9, 10], "common": [9, 10], "second": [10, 20, 21, 24, 26], "quantization": 10, "base": 10, "class": 10, "electronic": [10, 27, 28, 29], "structure": [10, 27, 30], "vibrational": [10, 30, 31, 32], "general": 10, "gaussian": 11, "installation": [11, 12, 13, 14], "interfacing": 11, "code": 11, "compiling": 11, "the": 11, "fortran": 11, "apple": 11, "macos": 11, "and": 11, "linux": 11, "special": 11, "notes": [11, 43], "for": 11, "microsoft": 11, "windows": 11, "psi": [12, 339, 340, 341, 342, 343], "pyquante": 13, "pyscf": 14, "hdf": [15, 323, 324, 325, 326], "logging": 16, "mappers": [17, 18], ".mappers": [17, 18], "fermionicop": [18, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "vibrationalop": [18, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473], "spinop": [18, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "operators": [19, 20], ".operators": [19, 20, 231, 240], "-quantization": [20, 21, 24, 26], "problems": [21, 22, 23, 24, 531], ".problems": [21, 22, 23, 24, 531], "sampling": [21, 22], ".sampling": [22, 23], "protein": [22, 23, 33], "folding": [22, 23, 33], ".protein": [23, 769, 770], "_folding": 23, "problem": 23, "peptide": [23, 489, 490, 491, 492], "main": 23, "chain": 23, "side": 23, "interactions": 23, "penalty": 23, "parameters": 23, "exceptions": 23, "properties": [25, 26, 27, 30], ".properties": [25, 26, 27, 28, 29, 30, 31, 32], ".electronic": [27, 28, 29, 39, 743, 744], "bases": [28, 31], ".bases": [28, 31], "integrals": [29, 32], ".integrals": [29, 32, 719], ".vibrational": [30, 31, 32, 177, 189, 205], "results": 33, ".results": [33, 34], "result": 33, "support": 33, "classes": 33, "utils": 34, "runtime": [35, 825], ".runtime": 35, "settings": 36, "transformers": [37, 38, 39], ".transformers": [37, 38, 39], "qmolecule": [38, 39], "linear": 40, "algebra": 40, "\u306f\u3058\u3081": [41, 819, 820, 821, 822, 823, 827, 828], "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb": 41, "\u30aa\u30d7\u30b7\u30e7\u30f3": 41, "\u6e96\u5099": [41, 829], "\u3044\u3044": 41, "\u3067\u3059": 41, "\uff1f\u2026": 41, "overview": 42, "next": 42, "steps": 42, "release": 43, "bug": 43, "fixes": 43, "qiskitnatureerror": 44, "unsupportmethoderror": 45, "adaptvqe": [46, 47, 48, 49], ".gradient": [47, 98, 111], ".returns": [48, 63, 70], "_groundstate": [48, 63, 70], ".solve": [49, 54, 58, 64, 71, 91], "eigensolverfactory": [50, 51], ".get": [51, 53, 57, 62, 68, 74, 79, 84, 90, 97, 110, 123, 135, 136, 137, 155, 156, 157, 161, 162, 163, 173, 174, 185, 186, 187, 197, 198, 202, 203, 318, 319, 490, 491, 492, 502, 514, 522, 527, 568, 658, 670, 684, 696, 767, 768, 779, 787], "_solver": [51, 74, 79, 84, 97, 110], "excitedstateseigensolver": [52, 53, 54, 55], "_qubit": [53, 57, 62, 68, 90, 254, 406], "_operators": [53, 57, 61, 62, 67, 68, 76, 86, 90, 105, 118, 148, 803], ".solver": [55, 59, 65, 72, 92], "excitedstatessolver": [56, 57, 58, 59], "groundstateeigensolver": [60, 61, 62, 63, 64, 65], ".evaluate": [61, 67, 148], "groundstatesolver": [66, 67, 68, 69, 70, 71, 72], ".qubit": [69, 232, 241, 496], "_converter": [69, 232, 241], "minimumeigensolverfactory": [73, 74, 75, 76], ".minimum": [75, 85, 102, 115], "_eigensolver": [75, 85, 102, 115], ".supports": [76, 86, 105, 118, 803], "_aux": [76, 86, 105, 118, 148, 803], "numpyeigensolverfactory": [77, 78, 79, 80, 81], ".filter": [78, 83], "_criterion": [78, 81, 83, 87, 502, 514, 522, 527], ".k": 80, ".use": [81, 87], "_default": [81, 87, 502, 514, 522, 527], "_filter": [81, 87, 502, 514, 522, 527], "numpyminimumeigensolverfactory": [82, 83, 84, 85, 86, 87], "qeom": [88, 89, 90, 91, 92, 823], ".excitations": [89, 212, 228, 238], "vqeuccfactory": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], ".ansatz": [94, 107, 120, 127, 132, 142, 792], ".callback": [95, 108, 794], ".expectation": [96, 109], ".include": [99, 112, 219, 222], "_custom": [99, 112], "_point": [100, 113, 796], "_state": [101, 114, 213], ".optimizer": [103, 116, 798, 809], ".quantum": [104, 117], "_instance": [104, 117], "vqeuvccfactory": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "hfinitialpoint": [119, 120, 121, 122, 123, 124, 125], ".compute": [121, 128, 133, 143, 795, 805], ".excitation": [122, 134, 144, 225, 226, 227, 235, 236, 237], "_list": [122, 134, 144, 226, 236, 427, 444, 455, 472, 557], "_energy": [123, 135, 136, 137, 156, 162, 168, 174, 177, 180, 187, 189, 196, 205, 318, 475, 482, 484, 499, 608, 611, 748, 750, 755], ".grouped": [124, 129, 138, 145, 503, 504], "_property": [124, 129, 138, 145, 503, 504, 507, 566, 568], ".to": [125, 130, 140, 146, 273, 308, 312, 343, 355, 373, 427, 428, 429, 439, 444, 455, 456, 472, 556, 570, 575, 592, 600, 612, 617, 624, 640, 650, 662, 663, 664, 674, 678, 685, 699, 706, 714, 722, 723, 724], "_numpy": [125, 130, 140, 146], "_array": [125, 130, 140, 146], "initialpoint": [126, 127, 128, 129, 130], "mp": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "2initialpoint": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "_correction": 136, "_corrections": 137, ".threshold": [139, 661], "vscfinitialpoint": [141, 142, 143, 144, 145, 146], "bopessampler": [147, 148, 149], "_callable": 148, ".sample": 149, "differentialextrapolator": [150, 151], ".extrapolate": [151, 165, 192, 194, 200, 207], "energysurface": [152, 153, 154, 155, 156, 157], "1dspline": [152, 153, 154, 155, 156, 157], ".eval": [153, 159, 169, 181, 708, 711], ".fit": [154, 160, 170, 171, 182, 183], "_equilibrium": [155, 161, 173, 185], "_geometry": [155, 161, 173, 185], "_minimal": [156, 162, 174, 187], "_trust": [157, 163, 198], "_region": [157, 163, 198], "energysurfacebase": [158, 159, 160, 161, 162, 163], "extrapolator": [164, 165, 166], ".factory": 166, "harmonicpotential": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], ".dissociation": [168, 180, 196], "_function": [171, 183], ".fundamental": [172, 184], "_frequency": [172, 184], ".process": 175, "_fit": 175, "_data": [175, 508, 509, 787], ".update": [176, 188, 204], "_molecule": [176, 188, 204, 306, 310, 341, 349, 365], "_level": [177, 186, 189, 202, 205, 652], ".wave": [178, 190], "_number": [178, 190, 433], "morsepotential": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "_maximum": [186, 202], "_trusted": [186, 202], "pcaextrapolator": [191, 192], "polynomialextrapolator": [193, 194], "potentialbase": [195, 196, 197, 198], "_num": [197, 203], "_modes": [197, 203, 438, 467, 704], "sieveextrapolator": [199, 200], "vibrationalstructurebase": [201, 202, 203, 204, 205], "windowextrapolator": [206, 207, 208, 209], ".extrapolator": 208, ".window": 209, "bogoliubovtransform": 210, "chc": [211, 212, 213, 214], ".num": [214, 229, 230, 239, 253, 438, 466, 467, 510, 517, 518, 555, 559, 588, 622, 632, 633, 634, 635, 659, 704, 713, 720, 756, 777], "_qubits": [214, 497], "fermionicgaussianstate": 215, "hartreefock": 216, "puccd": [217, 218, 219], ".generate": [218, 221, 785, 786], "_excitations": [218, 221, 244, 245], "_singles": [219, 222], "succd": [220, 221, 222], "slaterdeterminant": 223, "ucc": [224, 225, 226, 227, 228, 229, 230, 231, 232], "_type": [225, 235, 293, 297, 382, 386], "_ops": [227, 237, 505, 511, 515, 519, 523, 525, 528, 530, 535, 547, 577, 580, 590, 599, 616, 623, 639, 673, 691, 698, 705], "_particles": [229, 253, 510, 517, 634, 756], "_spin": [230, 518, 588, 622, 635, 664, 678, 685], "_orbitals": [230, 518, 588, 622, 635, 816], "uccsd": 233, "uvcc": [234, 235, 236, 237, 238, 239, 240, 241], "_modals": [239, 466, 713, 777], "uvccsd": 242, "vscf": 243, "generate": [244, 245], "_fermionic": [244, 439], "_vibration": 245, "qubitconverter": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], ".convert": [247, 248, 249, 324], "_match": [248, 250], "_only": 249, ".force": 250, ".map": [251, 390, 392, 394, 396, 398, 400, 402, 404, 407, 410, 412], ".mapper": 252, ".two": 254, "_reduction": [254, 256, 406], ".z": [255, 256, 459, 815], "2symmetries": 255, "2symmetry": 256, "molecule": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], ".version": [258, 572, 653, 710, 716], ".absolute": [259, 260, 261, 262, 582, 584, 626, 628], "_angle": 259, "_bending": [260, 271], "_distance": 261, "_stretching": [262, 272, 823], ".atoms": [263, 345], ".charge": [264, 347, 361], ".degrees": 265, "_of": 265, "_freedom": 265, ".from": [266, 306, 310, 341, 349, 365, 533, 546, 552, 567, 579, 585, 586, 594, 595, 602, 603, 604, 614, 615, 619, 620, 629, 630, 648, 657, 668, 669, 688, 689, 694, 695, 702, 703, 712, 718], "_hdf": [266, 273, 567, 570, 575, 585, 592, 594, 600, 602, 612, 614, 617, 619, 624, 629, 640, 648, 650, 657, 662, 668, 674, 688, 694, 699, 702, 706, 712, 714, 718, 723], ".geometry": 267, ".masses": 268, ".multiplicity": [269, 352], ".perturbations": 270, ".relative": [271, 272, 583, 589, 627, 638], ".units": [274, 357], "unitstype": [275, 276, 277], ".angstrom": 276, ".bohr": 277, "basedriver": [278, 279], ".run": [279, 286, 300, 303, 307, 311, 314, 325, 342, 353, 354, 370, 371, 378, 388], "basistype": [280, 281, 282, 283, 284], ".b": [281, 282], "gss": 282, ".bsto": 283, "3g": 283, ".type": 284, "_from": [284, 293, 382], "_string": 284, "electronicstructuredriver": [285, 286], "electronicstructuredrivertype": [287, 288, 289, 290, 291, 292, 293], ".auto": [288, 380], ".gaussian": [289, 381], ".psi": 290, ".pyquante": 291, ".pyscf": 292, ".driver": [293, 296, 297, 382, 385, 386], "_class": [293, 382], "electronicstructuremoleculedriver": [294, 295, 296, 297, 298, 299, 300], ".basis": [295, 346, 360, 384, 655, 717], "_kwargs": [296, 385], ".method": [298, 351, 369], ".molecule": [299, 387, 508, 509], "fcidumpdriver": [301, 302, 303], ".dump": 302, "gaussiandriver": [304, 305, 306, 307, 308], ".check": [305, 340, 348, 362], "_method": [305, 340, 348, 362], "_supported": [305, 340, 348, 362], "_driver": [308, 312, 343, 355, 373, 579, 586, 595, 603, 615, 620, 630, 669, 689, 695, 703], "_basis": [308, 312, 343, 355, 373, 665, 675, 679, 686, 722], "gaussianforcesdriver": [309, 310, 311, 312], "gaussianlogdriver": [313, 314], "gaussianlogresult": [315, 316, 317, 318, 319, 320, 321, 322], ".a": 316, "_to": [316, 681, 682, 817], "_h": 316, "_numbering": 316, ".cubic": 317, "_force": [317, 321, 322], "_constants": [317, 321, 322], "_vibrational": [318, 693, 696, 775], "_watson": 319, "_hamiltonian": 319, ".log": [320, 573], ".quadratic": 321, ".quartic": 322, "5driver": [323, 324, 325, 326], ".work": 326, "_path": 326, "initialguess": [327, 328, 329, 330, 331], ".atom": [328, 359], ".hcore": 329, ".minao": 330, ".one": [331, 421, 468], "_e": 331, "methodtype": [332, 333, 334, 335, 336, 337, 338], ".rhf": 333, ".rks": 334, ".rohf": 335, ".roks": 336, ".uhf": 337, ".uks": 338, "4driver": [339, 340, 341, 342, 343], "pyquantedriver": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], ".maxiters": 350, "_pyquante": 354, ".tol": 356, "pyscfdriver": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], ".chkfile": 363, ".conv": 364, "_tol": 364, ".init": 366, "_guess": 366, ".max": [367, 368], "_cycle": 367, "_memory": 368, "_pyscf": 371, ".spin": [372, 454, 591, 758], ".unit": 374, ".xc": 375, "_functional": 375, ".xcf": 376, "_library": 376, "vibrationalstructuredriver": [377, 378], "vibrationalstructuredrivertype": [379, 380, 381, 382], "_forces": 381, "vibrationalstructuremoleculedriver": [383, 384, 385, 386, 387, 388], "bravyikitaevmapper": [389, 390], "bravyikitaevsuperfastmapper": [391, 392], "directmapper": [393, 394], "fermionicmapper": [395, 396], "jordanwignermapper": [397, 398], "linearmapper": [399, 400], "logarithmicmapper": [401, 402], "paritymapper": [403, 404], "qubitmapper": [405, 406, 407, 408], ".allows": 406, "_two": 406, ".mode": 408, "_based": 408, "_mapping": 408, "spinmapper": [409, 410], "vibrationalmapper": [411, 412], "._": [414, 446, 461], "len": [414, 446, 461], "__": [414, 446, 461], ".add": [415, 447, 462, 566, 654, 667, 693], ".adjoint": [416, 448, 463], ".compose": [417, 449, 464, 656, 677, 683], ".display": 418, "_format": 418, ".mul": [419, 450, 465], ".normal": 420, "_ordered": 420, ".reduce": [422, 451, 469], ".register": [423, 442, 452, 470], "_length": [423, 442, 452, 470], ".set": [424, 660, 721], "_truncation": [424, 652, 660, 721], ".simplify": [425, 443, 453, 471], ".terms": 426, "_matrix": [428, 456, 475, 482, 484, 499, 534, 545, 556, 658, 684, 817, 818], "_normal": 429, "_order": [429, 700], ".zero": [430, 473], "quadratichamiltonian": [431, 432, 433, 434, 435, 436, 437, 438, 439], ".antisymmetric": 432, "_part": [432, 436], ".conserves": 433, "_particle": 433, ".constant": 434, ".diagonalizing": 435, "_bogoliubov": 435, "_transform": 435, ".hermitian": 436, ".majorana": 437, "_form": 437, "_op": [439, 496, 663, 724], ".is": [441, 649], "_hermitian": 441, ".x": 457, ".y": 458, "interaction": [474, 475], ".calculate": [475, 482, 484, 499], "invalidresidueexception": 476, "invalidsidechainexception": 477, "invalidsizeexception": 478, "mainchain": [479, 480], ".main": [480, 507, 781, 788], "_chain": [480, 490, 491], "_residue": 480, "_sequence": [480, 772], "mixedinteraction": [481, 482], "miyazawajerniganinteraction": [483, 484], "penaltyparameters": [485, 486, 487, 488], ".penalty": [486, 487, 488], "_back": 487, "_chiral": 488, "_main": [490, 785], "_side": [491, 492, 786], "_hot": 491, "_vector": [491, 768], "_chains": 492, "proteinfoldingproblem": [493, 494, 495, 496, 497], ".interpret": [494, 506, 516, 524, 529, 569, 587, 596, 606, 621, 631, 672, 690, 697], ".peptide": 495, ".unused": 497, "randominteraction": [498, 499], "sidechain": 500, "baseproblem": [501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "_transformed": [504, 509], ".hopping": [505, 515, 523, 528, 534], "_qeom": [505, 515, 523, 528], "_name": 507, "_q": [511, 519, 525, 530, 535, 547, 577, 580, 590, 599, 616, 623, 639, 663, 673, 691, 698, 705, 724], ".symmetry": [512, 520], "_sector": [512, 520], "_locator": [512, 520], "electronicstructureproblem": [513, 514, 515, 516, 517, 518, 519, 520], "latticemodelproblem": [521, 522, 523, 524, 525], "vibrationalstructureproblem": [526, 527, 528, 529, 530], "lattice": [531, 549, 550, 551, 552, 553, 554, 555, 556, 557], ".lattice": 531, "models": 531, "model": 531, "fermihubbardmodel": [532, 533, 534, 535, 536], "_parameters": [533, 536, 546, 548], ".uniform": [536, 548], "hypercubiclattice": [537, 538, 539, 540, 541, 542, 543, 828], ".boundary": 538, "_condition": 538, ".dim": 539, ".draw": [540, 551, 564], "_without": [540, 564], "_boundary": [540, 564], ".edge": 541, "_parameter": [541, 542], ".onsite": 542, ".size": 543, "isingmodel": [544, 545, 546, 547, 548], ".coupling": 545, ".copy": 550, "_nodes": [552, 555, 559], "_and": 552, "_edges": 552, ".graph": 553, ".node": 554, "_indexes": 554, "_adjacency": 556, ".weighted": 557, "_edge": 557, "linelattice": [558, 559, 828], "squarelattice": [560, 561, 562, 828], ".cols": 561, ".rows": 562, "triangularlattice": [563, 564, 828], "groupedproperty": [565, 566, 567, 568, 569, 570, 826], "property": [571, 572, 573, 574, 575, 826], ".name": 574, "groupedsecondquantizedproperty": [576, 577], "secondquantizedproperty": [578, 579, 580], "_legacy": [579, 586, 595, 603, 615, 620, 630, 669, 689, 695, 703], "_result": [579, 586, 595, 603, 615, 620, 630, 669, 689, 695, 703, 737, 764, 768, 774], "angularmomentum": [581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592], "_tolerance": [582, 583, 584, 589, 626, 627, 628, 638], "electronicdipolemoment": [593, 594, 595, 596, 597, 598, 599, 600], ".nuclear": [597, 608, 754, 755], "_dipole": [597, 598, 739, 743, 745, 751, 754, 757, 760, 761], "_moment": [597, 739, 741, 742, 743, 754, 760, 761], ".reverse": [598, 757], "_sign": [598, 757], "electronicenergy": [601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 826], "_raw": 604, "_integrals": 604, ".integral": [605, 652, 671], "_operator": [605, 671, 731], ".kinetic": 607, "_repulsion": [608, 755], ".orbital": 609, "_energies": [609, 740, 744, 747, 762, 765, 775], ".overlap": 610, ".reference": 611, "electronicstructuredriverresult": [613, 614, 615, 616, 617], "magnetization": [618, 619, 620, 621, 622, 623, 624], "particlenumber": [625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 826], "_alpha": [632, 636, 646, 649], "_beta": [633, 637, 647, 649], ".occupation": [636, 637], "electronicbasis": [641, 642, 643, 644], ".ao": 642, ".mo": 643, ".so": 644, "electronicbasistransform": [645, 646, 647, 648, 649, 650], ".coeff": [646, 647], "_equal": 649, "electronicintegrals": [651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 826], "_body": [659, 720], "_terms": [659, 720], "_second": [663, 724], ".transform": [665, 675, 679, 686, 811, 813], "integralproperty": [666, 667, 668, 669, 670, 671, 672, 673, 674, 675], "_electronic": [667, 670], "_integral": [667, 670, 693, 696, 708, 711], "onebodyelectronicintegrals": [676, 677, 678, 679], "twobodyelectronicintegrals": [680, 681, 682, 683, 684, 685, 686], ".einsum": [681, 682], "_ao": 681, "_mo": 681, "_chem": 682, "_phys": 682, "occupiedmodals": [687, 688, 689, 690, 691], "vibrationalenergy": [692, 693, 694, 695, 696, 697, 698, 699, 700], ".truncation": 700, "vibrationalstructuredriverresult": [701, 702, 703, 704, 705, 706], "harmonicbasis": [707, 708], "vibrationalbasis": [709, 710, 711, 712, 713, 714], "_per": [713, 777], "_mode": [713, 777], "vibrationalintegrals": [715, 716, 717, 718, 719, 720, 721, 722, 723, 724], "bopessamplerresult": [725, 726, 727, 728, 729], ".energies": 726, ".point": 727, "_results": [727, 729], ".points": 728, ".raw": [729, 737], "eigenstateresult": [730, 731, 732, 733, 734, 735, 736, 737], ".aux": 731, "_eigenvalues": 731, ".combine": 732, ".eigenenergies": 733, ".eigenstates": 734, ".groundenergy": 735, ".groundstate": 736, "electronicstructureresult": [738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], ".computed": [739, 740, 765, 775], ".dipole": [741, 742], "_in": [742, 761], "_debye": [742, 761], ".extracted": [745, 746, 747, 748], "_transformer": [745, 746, 747, 748], "_dipoles": 746, ".formatted": [749, 776], ".hartree": 750, "_fock": 750, ".has": [751, 752], "_observables": 752, ".magnetization": 753, ".total": [759, 760, 761, 762], "_angular": 759, "_momentum": 759, "latticemodelresult": [763, 764, 765], ".algorithm": [764, 774], "_lattice": 765, "proteinfoldingresult": [766, 767, 768, 769, 770, 771, 772], "_figure": [767, 779], "_binary": 768, "_shape": [769, 770], "_decoder": 769, "_file": [770, 771, 789], "_gen": 770, ".save": [771, 789], "_xyz": [771, 787, 789], ".turn": 772, "vibrationalstructureresult": [773, 774, 775, 776, 777], "_occupied": 777, "proteinplotter": [778, 779], "proteinshapedecoder": [780, 781, 782], "_turns": [781, 782], ".side": [782, 790], "proteinshapefilegen": [783, 784, 785, 786, 787, 788, 789, 790], ".coordinates": 784, "_positions": [785, 786, 788, 790], "vqeclient": [791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], ".backend": 793, "_minimum": [795, 805], "_eigenvalue": [795, 805], ".measurement": 797, "_error": 797, "_mitigation": 797, ".program": 799, "_id": [799, 808], ".provider": 800, ".shots": 801, ".store": 802, "_intermediate": 802, "vqeprogram": [804, 805], "vqeprogramresult": 806, "vqeruntimeresult": [807, 808, 809], ".job": 808, "_history": 809, "basetransformer": [810, 811], "activespacetransformer": [812, 813], "freezecoretransformer": [814, 815, 816], ".count": 816, "_core": 816, "apply": 817, "_slices": 817, "givens": 818, "\u96fb\u5b50": [819, 826], "\u69cb\u9020": [819, 820], "\u30cf\u30fc\u30c8\u30ea\u30fc\u30d5\u30a9\u30c3\u30af": 819, "\u306b\u3088\u308b": [819, 824], "\u521d\u671f": 819, "\u63a8\u6e2c": 819, "\u30d5\u30a7\u30eb\u30df": [819, 828], "\u7c92\u5b50": 819, "\u304b\u3089": [819, 826], "\u91cf\u5b50": [819, 820, 824, 826], "\u30d3\u30c3\u30c8": [819, 820], "\u30de\u30c3\u30d4\u30f3\u30b0": [819, 820], "\u632f\u52d5": [820, 824, 826], "\u30fb\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": 820, "\u57fa\u5e95": 821, "\u72b6\u614b": [821, 822, 823, 829], "\u30bd\u30eb\u30d0\u30fc": [821, 822, 823], "\u8a08\u7b97": [821, 822, 823, 824], "\u7d50\u679c": [821, 822, 823, 826], "\u30d5\u30a3\u30eb\u30bf\u30fc": 821, "\u95a2\u6570": [821, 824], "\u4f7f\u7528": [821, 827], "\u52b1\u8d77": [822, 823], "\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb": [823, 824], "\u30fb\u30a8\u30cd\u30eb\u30ae\u30fc": [823, 824], "\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0": 823, "absolute": 823, "\u81ea\u7531\u5ea6": 823, "\uff08degree": 823, "of": 823, "freedom": 823, "dof": 823, "\u6cbf\u3063": 823, "\u5206\u5b50": [823, 824, 825], "\u6442\u52d5": 823, "bopes": [823, 824], "\u30b5\u30f3\u30d7\u30e9\u30fc": 823, "\u7528\u3044": 823, "\u7d50\u5408": 823, "\u89e3\u96e2": 823, "\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb": 823, "\u3059\u308b": [823, 824], "\u307e\u305a": 823, "\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7": 823, "\u306a\u3057": 823, "\u5834\u5408": 823, "\u3042\u308a": 823, "\u6bd4\u8f03": 823, "\u307e\u3059": 823, "\u53e4\u5178": [823, 825], "\u56fa\u6709": 823, "\u30d7\u30ed\u30c3\u30c8": 823, "\u8a55\u4fa1": 823, "\u56de\u6570": 823, "\u5916\u633f": 823, "\u3053\u3053": 823, "\u4e8c\u3064": 823, "\u306a\u308b": 823, "\u624b\u6cd5": 823, "\u8a66\u3057": 823, "\u5f97\u308b": 823, "\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc": 824, "\u71b1\u529b": 824, "\u5b66\u7684": 824, "\u89b3\u6e2c": 824, "born": 824, "oppenheimer": 824, "\u30a8\u30cd\u30eb\u30ae\u30fc": 824, "\u30fb\u30ec\u30d9\u30eb": 824, "\u71b1\u5bb9\u91cf": 824, "\u305f\u3081": [824, 827], "\u5206\u914d": 824, "\u4f5c\u6210": 824, "\u6d3b\u7528": 825, "\u91cd\u8981": 825, "\u30d0\u30fc\u30b8\u30e7\u30f3": 825, "\u8981\u4ef6": 825, "\u554f\u984c": [825, 827, 828], "\u6307\u5b9a": 825, "\uff1alih": 825, "\u53c2\u8003": [825, 827], "vqe": [825, 827], "\u30d7\u30ed\u30d1\u30c6\u30a3": 826, "\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af": 826, "\u4f55\u304b": 826, "\u4e8c\u91cf\u5b50\u5316": 826, "\u89e3\u91c8": 826, "\u7a4d\u5206": 826, "\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": 826, "\u69cb\u6210": 826, "\u30ab\u30b9\u30bf\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3": 826, "\u8a18\u8ff0": 826, "\u30bf\u30f3\u30d1\u30af": 827, "\u6298\u308a": 827, "\u305f\u307f": 827, "\u4e3b\u9396": 827, "\u5074\u9396": 827, "\u30a2\u30df\u30ce": 827, "\u9178\u9593": 827, "\u76f8\u4e92": 827, "\u4f5c\u7528": 827, "\u7269\u7406": 827, "\u5236\u7d04": 827, "\u30da\u30d7\u30c1\u30c9": 827, "\u5b9a\u7fa9": 827, "\u89e3\u6c7a": 827, "cvar": 827, "\u671f\u5f85": 827, "\u56de\u7b54": 827, "\u8996\u899a": 827, "\u6587\u732e": 827, "\u683c\u5b50": 828, "\u30e2\u30c7\u30eb": 828, "\u4e00\u822c\u7684": 828, "\u30cf\u30d0\u30fc\u30c9\u30e2\u30c7\u30eb": 828, "\u4e8c\u6b21\u30cf\u30df\u30eb\u30c8\u30cb\u30a2\u30f3": 829, "\u30b9\u30ec\u30fc\u30bf\u30fc": 829, "\u884c\u5217": 829, "\u5bfe\u89d2": 829, "\u6642\u9593": 829, "\u767a\u5c55": 829, "\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb": 830}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})